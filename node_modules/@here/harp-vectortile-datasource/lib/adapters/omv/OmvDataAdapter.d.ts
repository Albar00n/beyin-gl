import { StyleSetEvaluator } from "@here/harp-datasource-protocol/index-decoder";
import { DataAdapter } from "../../DataAdapter";
import { DecodeInfo } from "../../DecodeInfo";
import { IGeometryProcessor } from "../../IGeometryProcessor";
import { OmvFeatureFilter } from "../../OmvDataFilter";
import { OmvDecoderOptions, OmvGeometryType } from "../../OmvDecoderDefs";
import { OmvVisitor } from "./OmvData";
import { com } from "./proto/vector_tile";
export declare function asGeometryType(feature: com.mapbox.pb.Tile.IFeature | undefined): OmvGeometryType;
/**
 * The class `OmvDataAdapter` converts OMV protobuf geo data
 * to geometries for the given `IGeometryProcessor`.
 */
export declare class OmvDataAdapter implements DataAdapter, OmvVisitor {
    private readonly m_geometryCommands;
    private m_tileKey;
    private m_layer;
    private m_dataFilter?;
    private m_featureModifiers?;
    private m_processor;
    private m_roundUpCoordinatesIfNeeded;
    /**
     * The [[OmvFeatureFilter]] used to filter features.
     */
    get dataFilter(): OmvFeatureFilter | undefined;
    /**
     * Configures the OMV adapter.
     *
     * @param options - Configuration options.
     * @param styleSetEvaluator - Style set evaluator instance, used for filtering.
     */
    configure(options: OmvDecoderOptions, styleSetEvaluator: StyleSetEvaluator): void;
    /**
     * @override
     */
    canProcess(data: ArrayBufferLike | {}): boolean;
    /**
     * @override
     */
    process(data: ArrayBufferLike, decodeInfo: DecodeInfo, geometryProcessor: IGeometryProcessor): void;
    /**
     * Visits the OMV layer.
     *
     * @param layer - The OMV layer to process.
     */
    visitLayer(layer: com.mapbox.pb.Tile.ILayer): boolean;
    /**
     * Visits point features.
     *
     * @param feature - The OMV point features to process.
     */
    visitPointFeature(feature: com.mapbox.pb.Tile.IFeature): void;
    /**
     * Visits the line features.
     *
     * @param feature - The line features to process.
     */
    visitLineFeature(feature: com.mapbox.pb.Tile.IFeature): void;
    /**
     * Visits the polygon features.
     *
     * @param feature - The polygon features to process.
     */
    visitPolygonFeature(feature: com.mapbox.pb.Tile.IFeature): void;
    /**
     * Applies any filter and modifiers to a given feature.
     *
     * @param feature - The feature to filter and modify.
     * @param filterFunc - The filtering function.
     * @param modifierFunc - The modifier function.
     * @returns The modified feature properties or `undefined` if feature is filtered out.
     */
    private filterAndModifyFeature;
    private get mustRoundUpCoordinates();
}
//# sourceMappingURL=OmvDataAdapter.d.ts.map