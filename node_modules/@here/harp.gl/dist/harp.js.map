{"version":3,"sources":["webpack://harp/../harp-fetch/index.web.js","webpack://harp/../harp-geoutils/index.js","webpack://harp/../harp-mapview/node_modules/rbush/rbush.min.js","webpack://harp/../harp-utils/index.js","webpack://harp/../node_modules/csscolorparser/csscolorparser.js","webpack://harp/../harp-datasource-protocol/index-decoder.ts","webpack://harp/../harp-datasource-protocol/index.ts","webpack://harp/../harp-datasource-protocol/lib/ColorUtils.ts","webpack://harp/../harp-datasource-protocol/lib/DecodedTile.ts","webpack://harp/../harp-datasource-protocol/lib/Env.ts","webpack://harp/../harp-datasource-protocol/lib/Expr.ts","webpack://harp/../harp-datasource-protocol/lib/ExprEvaluator.ts","webpack://harp/../harp-datasource-protocol/lib/ExprInstantiator.ts","webpack://harp/../harp-datasource-protocol/lib/ExprParser.ts","webpack://harp/../harp-datasource-protocol/lib/ExprPool.ts","webpack://harp/../harp-datasource-protocol/lib/GeoJsonDataType.ts","webpack://harp/../harp-datasource-protocol/lib/IMeshBuffers.ts","webpack://harp/../harp-datasource-protocol/lib/ITiler.ts","webpack://harp/../harp-datasource-protocol/lib/InterpolatedPropertyDefs.ts","webpack://harp/../harp-datasource-protocol/lib/Outliner.ts","webpack://harp/../harp-datasource-protocol/lib/Pixels.ts","webpack://harp/../harp-datasource-protocol/lib/PostEffects.ts","webpack://harp/../harp-datasource-protocol/lib/PropertyValue.ts","webpack://harp/../harp-datasource-protocol/lib/RGBA.ts","webpack://harp/../harp-datasource-protocol/lib/StringEncodedNumeral.ts","webpack://harp/../harp-datasource-protocol/lib/StyleSetEvaluator.ts","webpack://harp/../harp-datasource-protocol/lib/TechniqueAttr.ts","webpack://harp/../harp-datasource-protocol/lib/TechniqueDescriptors.ts","webpack://harp/../harp-datasource-protocol/lib/TechniqueParams.ts","webpack://harp/../harp-datasource-protocol/lib/Techniques.ts","webpack://harp/../harp-datasource-protocol/lib/Theme.ts","webpack://harp/../harp-datasource-protocol/lib/ThemeVisitor.ts","webpack://harp/../harp-datasource-protocol/lib/ThreeBufferUtils.ts","webpack://harp/../harp-datasource-protocol/lib/WorkerDecoderProtocol.ts","webpack://harp/../harp-datasource-protocol/lib/WorkerServiceProtocol.ts","webpack://harp/../harp-datasource-protocol/lib/WorkerTilerProtocol.ts","webpack://harp/../harp-datasource-protocol/lib/operators/ArrayOperators.ts","webpack://harp/../harp-datasource-protocol/lib/operators/CastOperators.ts","webpack://harp/../harp-datasource-protocol/lib/operators/ColorOperators.ts","webpack://harp/../harp-datasource-protocol/lib/operators/ComparisonOperators.ts","webpack://harp/../harp-datasource-protocol/lib/operators/FeatureOperators.ts","webpack://harp/../harp-datasource-protocol/lib/operators/FlowOperators.ts","webpack://harp/../harp-datasource-protocol/lib/operators/MapOperators.ts","webpack://harp/../harp-datasource-protocol/lib/operators/MathOperators.ts","webpack://harp/../harp-datasource-protocol/lib/operators/MiscOperators.ts","webpack://harp/../harp-datasource-protocol/lib/operators/ObjectOperators.ts","webpack://harp/../harp-datasource-protocol/lib/operators/StringOperators.ts","webpack://harp/../harp-datasource-protocol/lib/operators/TypeOperators.ts","webpack://harp/../harp-datasource-protocol/lib/operators/VectorOperators.ts","webpack://harp/../harp-debug-datasource/index.ts","webpack://harp/../harp-debug-datasource/lib/DebugTileDataSource.ts","webpack://harp/../harp-features-datasource/index.ts","webpack://harp/../harp-features-datasource/lib/Features.ts","webpack://harp/../harp-features-datasource/lib/FeaturesDataSource.ts","webpack://harp/../harp-geojson-datasource/index.ts","webpack://harp/../harp-geojson-datasource/lib/GeoJsonDataProvider.ts","webpack://harp/../harp-geojson-datasource/lib/GeoJsonDataSource.ts","webpack://harp/../harp-geometry/lib/EdgeLengthGeometrySubdivisionModifier.ts","webpack://harp/../harp-geometry/lib/SphericalGeometrySubdivisionModifier.ts","webpack://harp/../harp-geometry/lib/SubdivisionModifier.ts","webpack://harp/../harp-geoutils/lib/coordinates/GeoBox.ts","webpack://harp/../harp-geoutils/lib/coordinates/GeoBoxExtentLike.ts","webpack://harp/../harp-geoutils/lib/coordinates/GeoCoordLike.ts","webpack://harp/../harp-geoutils/lib/coordinates/GeoCoordinates.ts","webpack://harp/../harp-geoutils/lib/coordinates/GeoCoordinatesLike.ts","webpack://harp/../harp-geoutils/lib/coordinates/GeoPointLike.ts","webpack://harp/../harp-geoutils/lib/coordinates/GeoPolygon.ts","webpack://harp/../harp-geoutils/lib/coordinates/GeoPolygonLike.ts","webpack://harp/../harp-geoutils/lib/coordinates/LatLngLike.ts","webpack://harp/../harp-geoutils/lib/math/Box3Like.ts","webpack://harp/../harp-geoutils/lib/math/MathUtils.ts","webpack://harp/../harp-geoutils/lib/math/OrientedBox3.ts","webpack://harp/../harp-geoutils/lib/math/OrientedBox3Like.ts","webpack://harp/../harp-geoutils/lib/math/TransformLike.ts","webpack://harp/../harp-geoutils/lib/math/Vector2Like.ts","webpack://harp/../harp-geoutils/lib/math/Vector3Like.ts","webpack://harp/../harp-geoutils/lib/projection/EarthConstants.ts","webpack://harp/../harp-geoutils/lib/projection/EquirectangularProjection.ts","webpack://harp/../harp-geoutils/lib/projection/IdentityProjection.ts","webpack://harp/../harp-geoutils/lib/projection/MercatorProjection.ts","webpack://harp/../harp-geoutils/lib/projection/Projection.ts","webpack://harp/../harp-geoutils/lib/projection/SphereProjection.ts","webpack://harp/../harp-geoutils/lib/projection/TransverseMercatorProjection.ts","webpack://harp/../harp-geoutils/lib/tiling/FlatTileBoundingBoxGenerator.ts","webpack://harp/../harp-geoutils/lib/tiling/HalfQuadTreeSubdivisionScheme.ts","webpack://harp/../harp-geoutils/lib/tiling/HereTilingScheme.ts","webpack://harp/../harp-geoutils/lib/tiling/MercatorTilingScheme.ts","webpack://harp/../harp-geoutils/lib/tiling/PolarTilingScheme.ts","webpack://harp/../harp-geoutils/lib/tiling/QuadTree.ts","webpack://harp/../harp-geoutils/lib/tiling/QuadTreeSubdivisionScheme.ts","webpack://harp/../harp-geoutils/lib/tiling/SubTiles.ts","webpack://harp/../harp-geoutils/lib/tiling/SubdivisionScheme.ts","webpack://harp/../harp-geoutils/lib/tiling/TileKey.ts","webpack://harp/../harp-geoutils/lib/tiling/TileKeyUtils.ts","webpack://harp/../harp-geoutils/lib/tiling/TileTreeTraverse.ts","webpack://harp/../harp-geoutils/lib/tiling/TilingScheme.ts","webpack://harp/../harp-geoutils/lib/tiling/WebMercatorTilingScheme.ts","webpack://harp/../harp-lines/index.ts","webpack://harp/../harp-lines/lib/HighPrecisionLines.ts","webpack://harp/../harp-lines/lib/HighPrecisionPoints.ts","webpack://harp/../harp-lines/lib/HighPrecisionUtils.ts","webpack://harp/../harp-lines/lib/Lines.ts","webpack://harp/../harp-lines/lib/TriangulateLines.ts","webpack://harp/../harp-lrucache/index.ts","webpack://harp/../harp-lrucache/lib/LRUCache.ts","webpack://harp/../harp-map-controls/lib/MapControls.ts","webpack://harp/../harp-map-controls/lib/MapControlsUI.ts","webpack://harp/../harp-map-controls/lib/Utils.ts","webpack://harp/../harp-mapview-decoder/index.ts","webpack://harp/../harp-mapview-decoder/lib/DataProvider.ts","webpack://harp/../harp-mapview-decoder/lib/TileDataSource.ts","webpack://harp/../harp-mapview-decoder/lib/TileLoader.ts","webpack://harp/../harp-mapview/index.ts","webpack://harp/../harp-mapview/lib/AnimatedExtrusionHandler.ts","webpack://harp/../harp-mapview/lib/BackgroundDataSource.ts","webpack://harp/../harp-mapview/lib/BaseTileLoader.ts","webpack://harp/../harp-mapview/lib/BoundsGenerator.ts","webpack://harp/../harp-mapview/lib/CameraMovementDetector.ts","webpack://harp/../harp-mapview/lib/CameraUtils.ts","webpack://harp/../harp-mapview/lib/ClipPlanesEvaluator.ts","webpack://harp/../harp-mapview/lib/ColorCache.ts","webpack://harp/../harp-mapview/lib/ConcurrentDecoderFacade.ts","webpack://harp/../harp-mapview/lib/ConcurrentTilerFacade.ts","webpack://harp/../harp-mapview/lib/ConcurrentWorkerSet.ts","webpack://harp/../harp-mapview/lib/DataSource.ts","webpack://harp/../harp-mapview/lib/DebugContext.ts","webpack://harp/../harp-mapview/lib/DecodedTileHelpers.ts","webpack://harp/../harp-mapview/lib/DepthPrePass.ts","webpack://harp/../harp-mapview/lib/DisplacementMap.ts","webpack://harp/../harp-mapview/lib/ElevationRangeSource.ts","webpack://harp/../harp-mapview/lib/EventDispatcher.ts","webpack://harp/../harp-mapview/lib/FixedClipPlanesEvaluator.ts","webpack://harp/../harp-mapview/lib/FovCalculation.ts","webpack://harp/../harp-mapview/lib/FrustumIntersection.ts","webpack://harp/../harp-mapview/lib/ITileLoader.ts","webpack://harp/../harp-mapview/lib/MapAnchors.ts","webpack://harp/../harp-mapview/lib/MapMaterialAdapter.ts","webpack://harp/../harp-mapview/lib/MapObjectAdapter.ts","webpack://harp/../harp-mapview/lib/MapTileCuller.ts","webpack://harp/../harp-mapview/lib/MapView.ts","webpack://harp/../harp-mapview/lib/MapViewAtmosphere.ts","webpack://harp/../harp-mapview/lib/MapViewEnvironment.ts","webpack://harp/../harp-mapview/lib/MapViewFog.ts","webpack://harp/../harp-mapview/lib/MapViewPoints.ts","webpack://harp/../harp-mapview/lib/MapViewTaskScheduler.ts","webpack://harp/../harp-mapview/lib/MapViewThemeManager.ts","webpack://harp/../harp-mapview/lib/PathBlockingElement.ts","webpack://harp/../harp-mapview/lib/PickHandler.ts","webpack://harp/../harp-mapview/lib/PickListener.ts","webpack://harp/../harp-mapview/lib/PickingRaycaster.ts","webpack://harp/../harp-mapview/lib/PlaneViewBounds.ts","webpack://harp/../harp-mapview/lib/PolarTileDataSource.ts","webpack://harp/../harp-mapview/lib/ScreenCollisions.ts","webpack://harp/../harp-mapview/lib/ScreenProjector.ts","webpack://harp/../harp-mapview/lib/SkyBackground.ts","webpack://harp/../harp-mapview/lib/SkyCubemapTexture.ts","webpack://harp/../harp-mapview/lib/SkyGradientTexture.ts","webpack://harp/../harp-mapview/lib/SphereHorizon.ts","webpack://harp/../harp-mapview/lib/SphereViewBounds.ts","webpack://harp/../harp-mapview/lib/Statistics.ts","webpack://harp/../harp-mapview/lib/TextureLoader.ts","webpack://harp/../harp-mapview/lib/ThemeHelpers.ts","webpack://harp/../harp-mapview/lib/ThemeLoader.ts","webpack://harp/../harp-mapview/lib/Tile.ts","webpack://harp/../harp-mapview/lib/TileObjectsRenderer.ts","webpack://harp/../harp-mapview/lib/Utils.ts","webpack://harp/../harp-mapview/lib/VisibleTileSet.ts","webpack://harp/../harp-mapview/lib/WorkerBasedDecoder.ts","webpack://harp/../harp-mapview/lib/WorkerBasedTiler.ts","webpack://harp/../harp-mapview/lib/composing/LowResRenderPass.ts","webpack://harp/../harp-mapview/lib/composing/MSAARenderPass.ts","webpack://harp/../harp-mapview/lib/composing/MapRenderingManager.ts","webpack://harp/../harp-mapview/lib/composing/Outline.ts","webpack://harp/../harp-mapview/lib/composing/Pass.ts","webpack://harp/../harp-mapview/lib/composing/UnrealBloomPass.ts","webpack://harp/../harp-mapview/lib/composing/index.ts","webpack://harp/../harp-mapview/lib/copyrights/CopyrightCoverageProvider.ts","webpack://harp/../harp-mapview/lib/copyrights/CopyrightElementHandler.ts","webpack://harp/../harp-mapview/lib/copyrights/CopyrightInfo.ts","webpack://harp/../harp-mapview/lib/copyrights/CopyrightProvider.ts","webpack://harp/../harp-mapview/lib/copyrights/UrlCopyrightProvider.ts","webpack://harp/../harp-mapview/lib/geometry/AddGroundPlane.ts","webpack://harp/../harp-mapview/lib/geometry/DisplacedBufferAttribute.ts","webpack://harp/../harp-mapview/lib/geometry/DisplacedBufferGeometry.ts","webpack://harp/../harp-mapview/lib/geometry/DisplacedMesh.ts","webpack://harp/../harp-mapview/lib/geometry/LodMesh.ts","webpack://harp/../harp-mapview/lib/geometry/Object3DUtils.ts","webpack://harp/../harp-mapview/lib/geometry/ProjectTilePlaneCorners.ts","webpack://harp/../harp-mapview/lib/geometry/RegisterTileObject.ts","webpack://harp/../harp-mapview/lib/geometry/SolidLineMesh.ts","webpack://harp/../harp-mapview/lib/geometry/TileDataAccessor.ts","webpack://harp/../harp-mapview/lib/geometry/TileGeometry.ts","webpack://harp/../harp-mapview/lib/geometry/TileGeometryCreator.ts","webpack://harp/../harp-mapview/lib/geometry/TileGeometryLoader.ts","webpack://harp/../harp-mapview/lib/geometry/TileGeometryManager.ts","webpack://harp/../harp-mapview/lib/geometry/VertexCache.ts","webpack://harp/../harp-mapview/lib/geometry/overlayOnElevation.ts","webpack://harp/../harp-mapview/lib/image/Image.ts","webpack://harp/../harp-mapview/lib/image/ImageCache.ts","webpack://harp/../harp-mapview/lib/image/MapViewImageCache.ts","webpack://harp/../harp-mapview/lib/image/MipMapGenerator.ts","webpack://harp/../harp-mapview/lib/poi/BoxBuffer.ts","webpack://harp/../harp-mapview/lib/poi/PixelPicker.ts","webpack://harp/../harp-mapview/lib/poi/PoiBuilder.ts","webpack://harp/../harp-mapview/lib/poi/PoiManager.ts","webpack://harp/../harp-mapview/lib/poi/PoiRenderer.ts","webpack://harp/../harp-mapview/lib/poi/PoiTableManager.ts","webpack://harp/../harp-mapview/lib/text/FontCatalogLoader.ts","webpack://harp/../harp-mapview/lib/text/LayoutState.ts","webpack://harp/../harp-mapview/lib/text/MapViewState.ts","webpack://harp/../harp-mapview/lib/text/Placement.ts","webpack://harp/../harp-mapview/lib/text/PlacementStats.ts","webpack://harp/../harp-mapview/lib/text/RenderState.ts","webpack://harp/../harp-mapview/lib/text/SimplePath.ts","webpack://harp/../harp-mapview/lib/text/TextCanvasFactory.ts","webpack://harp/../harp-mapview/lib/text/TextElement.ts","webpack://harp/../harp-mapview/lib/text/TextElementBuilder.ts","webpack://harp/../harp-mapview/lib/text/TextElementGroup.ts","webpack://harp/../harp-mapview/lib/text/TextElementGroupPriorityList.ts","webpack://harp/../harp-mapview/lib/text/TextElementGroupState.ts","webpack://harp/../harp-mapview/lib/text/TextElementState.ts","webpack://harp/../harp-mapview/lib/text/TextElementStateCache.ts","webpack://harp/../harp-mapview/lib/text/TextElementType.ts","webpack://harp/../harp-mapview/lib/text/TextElementsRenderer.ts","webpack://harp/../harp-mapview/lib/text/TextElementsRendererOptions.ts","webpack://harp/../harp-mapview/lib/text/TextStyleCache.ts","webpack://harp/../harp-mapview/lib/text/TileTextStyleCache.ts","webpack://harp/../harp-mapview/lib/text/UpdateStats.ts","webpack://harp/../harp-mapview/lib/workers/WorkerBootstrapDefs.ts","webpack://harp/../harp-mapview/lib/workers/WorkerLoader.ts","webpack://harp/../harp-materials/index.ts","webpack://harp/../harp-materials/lib/CirclePointsMaterial.ts","webpack://harp/../harp-materials/lib/CopyMaterial.ts","webpack://harp/../harp-materials/lib/DisplacementFeature.ts","webpack://harp/../harp-materials/lib/EdgeMaterial.ts","webpack://harp/../harp-materials/lib/GroundAtmosphereMaterial.ts","webpack://harp/../harp-materials/lib/HighPrecisionLineMaterial.ts","webpack://harp/../harp-materials/lib/HighPrecisionPointMaterial.ts","webpack://harp/../harp-materials/lib/IconMaterial.ts","webpack://harp/../harp-materials/lib/LuminosityHighPassShader.ts","webpack://harp/../harp-materials/lib/MSAAMaterial.ts","webpack://harp/../harp-materials/lib/MapMeshMaterials.ts","webpack://harp/../harp-materials/lib/MapMeshMaterialsDefs.ts","webpack://harp/../harp-materials/lib/RawShaderMaterial.ts","webpack://harp/../harp-materials/lib/SepiaShader.ts","webpack://harp/../harp-materials/lib/ShaderChunks/AtmosphereChunks.ts","webpack://harp/../harp-materials/lib/ShaderChunks/ExtrusionChunks.ts","webpack://harp/../harp-materials/lib/ShaderChunks/FadingChunks.ts","webpack://harp/../harp-materials/lib/ShaderChunks/LinesChunks.ts","webpack://harp/../harp-materials/lib/ShaderChunks/ShadowChunks.ts","webpack://harp/../harp-materials/lib/SkyAtmosphereMaterial.ts","webpack://harp/../harp-materials/lib/SolidLineMaterial.ts","webpack://harp/../harp-materials/lib/Utils.ts","webpack://harp/../harp-materials/lib/VignetteShader.ts","webpack://harp/../harp-omv-datasource/index.ts","webpack://harp/../harp-omv-datasource/lib/OmvDataSource.ts","webpack://harp/../harp-text-canvas/index.ts","webpack://harp/../harp-text-canvas/lib/TextCanvas.ts","webpack://harp/../harp-text-canvas/lib/rendering/FontCatalog.ts","webpack://harp/../harp-text-canvas/lib/rendering/GlyphData.ts","webpack://harp/../harp-text-canvas/lib/rendering/GlyphTextureCache.ts","webpack://harp/../harp-text-canvas/lib/rendering/TextBufferObject.ts","webpack://harp/../harp-text-canvas/lib/rendering/TextGeometry.ts","webpack://harp/../harp-text-canvas/lib/rendering/TextMaterials.ts","webpack://harp/../harp-text-canvas/lib/rendering/TextStyle.ts","webpack://harp/../harp-text-canvas/lib/typesetting/LineTypesetter.ts","webpack://harp/../harp-text-canvas/lib/typesetting/PathTypesetter.ts","webpack://harp/../harp-text-canvas/lib/utils/ContextualArabicConverter.ts","webpack://harp/../harp-text-canvas/lib/utils/MaterialUtils.ts","webpack://harp/../harp-text-canvas/lib/utils/TypesettingUtils.ts","webpack://harp/../harp-text-canvas/lib/utils/UnicodeUtils.ts","webpack://harp/../harp-transfer-manager/index.ts","webpack://harp/../harp-transfer-manager/src/DeferredPromise.ts","webpack://harp/../harp-transfer-manager/src/TransferManager.ts","webpack://harp/../harp-utils/index-common.ts","webpack://harp/../harp-utils/lib/AuthenticationUtils.ts","webpack://harp/../harp-utils/lib/CachedResource.ts","webpack://harp/../harp-utils/lib/ContextLogger.ts","webpack://harp/../harp-utils/lib/DOMUtils.ts","webpack://harp/../harp-utils/lib/Functions.ts","webpack://harp/../harp-utils/lib/GlslUtils.ts","webpack://harp/../harp-utils/lib/GroupedPriorityList.ts","webpack://harp/../harp-utils/lib/Logger/ConsoleChannel.ts","webpack://harp/../harp-utils/lib/Logger/IChannel.ts","webpack://harp/../harp-utils/lib/Logger/ILogger.ts","webpack://harp/../harp-utils/lib/Logger/Logger.ts","webpack://harp/../harp-utils/lib/Logger/LoggerManager.ts","webpack://harp/../harp-utils/lib/Logger/LoggerManagerImpl.ts","webpack://harp/../harp-utils/lib/Logger/MultiChannel.ts","webpack://harp/../harp-utils/lib/Logger/WorkerChannel.ts","webpack://harp/../harp-utils/lib/Logger/index.ts","webpack://harp/../harp-utils/lib/Math2D.ts","webpack://harp/../harp-utils/lib/MathUtils.ts","webpack://harp/../harp-utils/lib/Mixins.ts","webpack://harp/../harp-utils/lib/ObjectUtils.ts","webpack://harp/../harp-utils/lib/OptionsUtils.ts","webpack://harp/../harp-utils/lib/PerformanceTimer.ts","webpack://harp/../harp-utils/lib/SampleBilinear.ts","webpack://harp/../harp-utils/lib/TaskQueue.ts","webpack://harp/../harp-utils/lib/UriResolver.ts","webpack://harp/../harp-utils/lib/UrlPlatformUtils.ts","webpack://harp/../harp-utils/lib/UrlUtils.ts","webpack://harp/../harp-utils/lib/assert.ts","webpack://harp/../harp-vectortile-datasource/index.ts","webpack://harp/../harp-vectortile-datasource/lib/GeoJsonDataProvider.ts","webpack://harp/../harp-vectortile-datasource/lib/OmvDataFilter.ts","webpack://harp/../harp-vectortile-datasource/lib/OmvDebugLabelsTile.ts","webpack://harp/../harp-vectortile-datasource/lib/OmvDecoderDefs.ts","webpack://harp/../harp-vectortile-datasource/lib/OmvRestClient.ts","webpack://harp/../harp-vectortile-datasource/lib/VectorTileDataSource.ts","webpack://harp/../harp-webtile-datasource/index.ts","webpack://harp/../harp-webtile-datasource/lib/HereWebTileDataSource.ts","webpack://harp/../harp-webtile-datasource/lib/WebTileDataSource.ts","webpack://harp/../harp-webtile-datasource/lib/WebTileLoader.ts","webpack://harp/./lib/BundleMain.ts","webpack://harp/./lib/index.ts","webpack://harp/external \"THREE\"","webpack://harp/webpack/bootstrap","webpack://harp/webpack/startup"],"names":[],"mappings":"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BAAoB,KAAK,6IAA6I,8CAA8C,mBAAmB,QAAQ,SAAS,qCAAqC,qEAAqE,8BAA8B,4CAA4C,sBAAsB,gCAAgC,kCAAkC,kDAAkD,6BAA6B,kFAAkF,iHAAiH,sCAAsC,0FAA0F,+CAA+C,sCAAsC,OAAO,KAAK,sPAAsP,8CAA8C,cAAc,8CAA8C,4DAA4D,8EAA8E,8CAA8C,mBAAmB,kEAAkE,MAAM,KAAK,oBAAoB,2BAA2B,gBAAgB,KAAK,KAAK,oBAAoB,2BAA2B,SAAS,iDAAiD,YAAY,KAAK,cAAc,mCAAmC,8BAA8B,KAAK,gHAAgH,GAAG;;;;;;;;;;;;ACAhzM;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAO,CAAC,qDAAgB;AACrC,aAAa,mBAAO,CAAC,qEAAwB;AAC7C,iC;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B;AAC5B,oBAAoB;AACpB;AACA;;AAEA,6BAA6B;AAC7B;AACA;;AAEA,6BAA6B;AAC7B;AACA;AACA;AACA;;AAEA,+BAA+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","file":"harp.js","sourcesContent":["\"use strict\";\n/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=index.web.js.map","\"use strict\";\n/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Utility classes for working with geospatial data.\n *\n * @remarks\n *\n * @packageDocumentation\n */\n__exportStar(require(\"./lib/coordinates/GeoBox\"), exports);\n__exportStar(require(\"./lib/coordinates/GeoBoxExtentLike\"), exports);\n__exportStar(require(\"./lib/coordinates/GeoCoordinatesLike\"), exports);\n__exportStar(require(\"./lib/coordinates/GeoCoordinates\"), exports);\n__exportStar(require(\"./lib/coordinates/GeoPointLike\"), exports);\n__exportStar(require(\"./lib/coordinates/GeoPolygonLike\"), exports);\n__exportStar(require(\"./lib/coordinates/GeoPolygon\"), exports);\n__exportStar(require(\"./lib/coordinates/LatLngLike\"), exports);\n__exportStar(require(\"./lib/projection/EarthConstants\"), exports);\n__exportStar(require(\"./lib/projection/EquirectangularProjection\"), exports);\n__exportStar(require(\"./lib/projection/IdentityProjection\"), exports);\n__exportStar(require(\"./lib/projection/Projection\"), exports);\n__exportStar(require(\"./lib/projection/MercatorProjection\"), exports);\n__exportStar(require(\"./lib/projection/TransverseMercatorProjection\"), exports);\n__exportStar(require(\"./lib/projection/SphereProjection\"), exports);\n__exportStar(require(\"./lib/tiling/FlatTileBoundingBoxGenerator\"), exports);\n__exportStar(require(\"./lib/tiling/HalfQuadTreeSubdivisionScheme\"), exports);\n__exportStar(require(\"./lib/tiling/QuadTreeSubdivisionScheme\"), exports);\n__exportStar(require(\"./lib/tiling/QuadTree\"), exports);\n__exportStar(require(\"./lib/tiling/SubTiles\"), exports);\n__exportStar(require(\"./lib/tiling/SubdivisionScheme\"), exports);\n__exportStar(require(\"./lib/tiling/TileKey\"), exports);\n__exportStar(require(\"./lib/tiling/TileKeyUtils\"), exports);\n__exportStar(require(\"./lib/tiling/TileTreeTraverse\"), exports);\n__exportStar(require(\"./lib/tiling/TilingScheme\"), exports);\n__exportStar(require(\"./lib/tiling/HereTilingScheme\"), exports);\n__exportStar(require(\"./lib/tiling/WebMercatorTilingScheme\"), exports);\n__exportStar(require(\"./lib/tiling/MercatorTilingScheme\"), exports);\n__exportStar(require(\"./lib/tiling/PolarTilingScheme\"), exports);\n__exportStar(require(\"./lib/math/Vector2Like\"), exports);\n__exportStar(require(\"./lib/math/Vector3Like\"), exports);\n__exportStar(require(\"./lib/math/Box3Like\"), exports);\n__exportStar(require(\"./lib/math/OrientedBox3Like\"), exports);\n__exportStar(require(\"./lib/math/MathUtils\"), exports);\n__exportStar(require(\"./lib/math/TransformLike\"), exports);\n__exportStar(require(\"./lib/math/OrientedBox3\"), exports);\n//# sourceMappingURL=index.js.map","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","\"use strict\";\n/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Provides utilities: logging and debugging.\n *\n * @remarks\n *\n * @packageDocumentation\n */\n__exportStar(require(\"./index-common\"), exports);\n__exportStar(require(\"./lib/UrlPlatformUtils\"), exports);\n//# sourceMappingURL=index.js.map","// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/StyleSetEvaluator\";\nexport * from \"./lib/IMeshBuffers\";\nexport * from \"./lib/Outliner\";\nexport * from \"./lib/Expr\";\nexport * from \"./lib/ThreeBufferUtils\";\nexport * from \"./lib/GeoJsonDataType\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Components used for the decoding and styling of data that is used by the Datasources.\n *\n * @remarks\n * The DataSource Protocol package contains components used for the decoding and styling\n * of data that is used by the Datasources.\n * This code is shared between the ui-thread and the web-workers which are\n * used to parallelise the decoding of the data.\n * This module contains interfaces for choosing techniques form the techniques\n * catalog that are applied via the {@link Theme} files to draw geometries on the map canvas.\n *\n * @packageDocumentation\n */\n\nexport * from \"./lib/ColorUtils\";\nexport * from \"./lib/Expr\";\nexport * from \"./lib/Techniques\";\nexport * from \"./lib/TechniqueParams\";\nexport * from \"./lib/Theme\";\nexport * from \"./lib/PostEffects\";\nexport * from \"./lib/PropertyValue\";\nexport * from \"./lib/InterpolatedPropertyDefs\";\nexport * from \"./lib/WorkerServiceProtocol\";\nexport * from \"./lib/WorkerTilerProtocol\";\nexport * from \"./lib/WorkerDecoderProtocol\";\nexport * from \"./lib/ITileDecoder\";\nexport * from \"./lib/ITiler\";\nexport * from \"./lib/DecodedTile\";\nexport * from \"./lib/TileInfo\";\nexport * from \"./lib/GeoJsonDataType\";\nexport * from \"./lib/ThemeVisitor\";\nexport * from \"./lib/StringEncodedNumeral\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { assert } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { RGBA } from \"./RGBA\";\n\nconst SHIFT_TRANSPARENCY: number = 24;\nconst SHIFT_RED: number = 16;\nconst SHIFT_GREEN: number = 8;\nconst SHIFT_BLUE: number = 0;\n\n//    Allow bitwise operations for colors decoding\n\nconst HEX_FULL_CHANNEL: number = 0xff;\nconst HEX_RGB_MASK: number = 0xffffff;\nconst HEX_TRGB_MASK: number = 0xffffffff;\n\nconst tmpColor = new THREE.Color();\n\n/**\n * Utilities to convert RGBA colors encoded in custom number (hex) format to THREE.Color objects.\n *\n * The functions provided allows for conversion from and to our custom number based color format,\n * which contains transparency, red, green and blue color channels in a way that each channel\n * occupies 8 bits of resulting number (color format 0xTTRRGGBB).\n * In order to preserve compatibility with THREE.Color class and its hexadecimal color\n * representation, we do not store __alpha__ channel in encoded color's number, but replace it\n * with __transparency__ channel, which is simply opposite to alpha:\n * ```transparency = 0xFF - alpha```\n * Such channel value is stored on the oldest bits (octet) in the integral color (numeric) value,\n * so it is fully compatible with THREE.Color numerical representation (@see [[THREE.Color.getHex]],\n * [[THREE.Color.setHex]]).\n * See also [[getHexFromRgba]] and [[getRgbaFromHex]] for more info about conversion.\n */\nexport namespace ColorUtils {\n    /**\n     * Encodes RGBA channels in custom number coded format (represented in hex as 0xTTRRGGBB).\n     *\n     * We do not use direct alpha channel mapping to hex in order to preserve compatibility\n     * with THREE.js color format (0xRRGGBB). This is done by encoding transparency\n     * (255 - alpha) instead of alpha on the oldest bits, shifted by [[SHIFT_TRANSPARENCY]].\n     * This way simple 0xRRGGBB color is equal to 0x00RRGGBB without transparency and\n     * color defining transparency (alpha < 255) is always recognizable by the oldest\n     * bit set:\n     * ```typescript\n     * (color >> SHIFT_TRANSPARENCY) !== 0.\n     * ```\n     * @note All input components are floating points in <0, 1> range (inclusively).\n     * @note Although method encodes transparency channel in single number value, it is still\n     * compatible with THREE.js number based color coding (0xRRGGBB), so you may pass this value to\n     * [[THREE.Color]] c-tor, but keep in mind that transparency will be silently ignored.\n     */\n    export function getHexFromRgba(r: number, g: number, b: number, a: number): number {\n        assert(a >= 0 && a <= 1);\n        const t = HEX_FULL_CHANNEL - Math.floor(a * HEX_FULL_CHANNEL);\n        return (\n            (t << SHIFT_TRANSPARENCY) ^\n            ((r * HEX_FULL_CHANNEL) << SHIFT_RED) ^\n            ((g * HEX_FULL_CHANNEL) << SHIFT_GREEN) ^\n            ((b * HEX_FULL_CHANNEL) << SHIFT_BLUE)\n        );\n    }\n\n    /**\n     * Encodes RGB all color channels in single number with format 0xRRGGBB.\n     *\n     * All input channels should be in <0, 1> range (inclusively).\n     * See also [[getHexFromRgba]] for more information about [[THREE.Color]] compatibility.\n     *\n     * @note This method is fully compatible with THREE.js color encoding, so\n     * you may pass this value directly to THREE.Color c-tor.\n     */\n    export function getHexFromRgb(r: number, g: number, b: number): number {\n        assert(r >= 0 && r <= 1);\n        assert(g >= 0 && g <= 1);\n        assert(b >= 0 && b <= 1);\n        return (\n            ((r * HEX_FULL_CHANNEL) << SHIFT_RED) ^\n            ((g * HEX_FULL_CHANNEL) << SHIFT_GREEN) ^\n            ((b * HEX_FULL_CHANNEL) << SHIFT_BLUE)\n        );\n    }\n\n    /**\n     * Encode and convert HSL value to number coded color format (0xRRGGBB).\n     *\n     * @see getHexFromRgb.\n     * @param h - Hue component value between 0 and 1.\n     * @param s - Saturation value between 0 and 1.\n     * @param l - Lightness channel between 0 and 1.\n     */\n    export function getHexFromHsl(h: number, s: number, l: number): number {\n        assert(h >= 0 && h <= 1);\n        assert(s >= 0 && s <= 1);\n        assert(l >= 0 && l <= 1);\n        return tmpColor.setHSL(h, s, l).getHex();\n    }\n\n    /**\n     * Retrieve RGBA channels separately from number encoded custom color format.\n     *\n     * Provides an easy way for channels extraction (r, g, b, a) from custom number coded color\n     * format.\n     *\n     * @see getHexFromRgba.\n     * @param hex - The number encoded color value (0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns r, g, b, a channels in simple object, where each channel value is saved as floating\n     * point from 0 to 1 inclusively.\n     */\n    export function getRgbaFromHex(hex: number, target = new RGBA()): RGBA {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        target.r = ((hex >> SHIFT_RED) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL;\n        target.g = ((hex >> SHIFT_GREEN) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL;\n        target.b = ((hex >> SHIFT_BLUE) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL;\n        target.a =\n            (HEX_FULL_CHANNEL - ((hex >> SHIFT_TRANSPARENCY) & HEX_FULL_CHANNEL)) /\n            HEX_FULL_CHANNEL;\n        return target;\n    }\n\n    /**\n     * Determines if number encoded color contains alpha (opacity) defined and different then 255.\n     *\n     * @param hex - The number encoded color (0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns True if color has transparency defined.\n     */\n    export function hasAlphaInHex(hex: number): boolean {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        return hex >> SHIFT_TRANSPARENCY !== 0;\n    }\n\n    /**\n     * Retrieves alpha color channel from hex encoded color value.\n     *\n     * @see getHexFromRgba.\n     * @param hex - The number encoded color value (representable as 0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns The floating point alpha component in <0, 1> range.\n     */\n    export function getAlphaFromHex(hex: number): number {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        return (\n            ((HEX_FULL_CHANNEL - (hex >> SHIFT_TRANSPARENCY)) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL\n        );\n    }\n\n    /**\n     * Remove transparency info from the number coded color, makes it compatible with external libs.\n     *\n     * @see getAlphaFromHex.\n     * @param hex - The number encoded color value (representable as 0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns number coded color value representable as 0xRRGGBB in hex.\n     */\n    export function removeAlphaFromHex(hex: number): number {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        return hex & HEX_RGB_MASK;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    equirectangularProjection,\n    mercatorProjection,\n    normalizedEquirectangularProjection,\n    OrientedBox3,\n    Projection,\n    sphereProjection,\n    Vector3Like,\n    webMercatorProjection\n} from \"@here/harp-geoutils\";\n\nimport { Env } from \"./Expr\";\nimport { AttrEvaluationContext, evaluateTechniqueAttr } from \"./TechniqueAttr\";\nimport {\n    IndexedTechnique,\n    isLineMarkerTechnique,\n    isPoiTechnique,\n    isTextTechnique,\n    Technique\n} from \"./Techniques\";\nimport { TileInfo } from \"./TileInfo\";\n\n/**\n * This object has geometry data in the form of geometries buffers ready to be used by WebGL.\n * These geometries are not `three.js` objects. They are pure data stored as `ArrayBuffer`s and\n * metadata describing these buffers.\n */\nexport interface DecodedTile {\n    techniques: IndexedTechnique[];\n    geometries: Geometry[];\n    pathGeometries?: PathGeometry[];\n    textPathGeometries?: TextPathGeometry[];\n    textGeometries?: TextGeometry[]; // ### deprecate\n    poiGeometries?: PoiGeometry[];\n    tileInfo?: TileInfo;\n    decodeTime?: number; // time used to decode (in ms)\n\n    /**\n     * The default bounding box in [[Tile]] is based on the geo box of the tile.\n     * For data-sources that have 3d data this is not sufficient so the data-source can provide a\n     * more accurate bounding box once the data is decoded.\n     */\n    boundingBox?: OrientedBox3;\n\n    /**\n     * Data sources not defining a bounding box may define alternatively a maximum geometry height\n     * in meters. The bounding box of the resulting tile will be extended to encompass this height.\n     */\n    maxGeometryHeight?: number;\n\n    /**\n     * Data sources not defining a bounding box may define alternatively a minimum geometry height\n     * in meters. The bounding box of the resulting tile will be extended to encompass this height.\n     */\n    minGeometryHeight?: number;\n\n    /**\n     * Tile data Copyright holder identifiers.\n     *\n     * `id`s should be unique. It is recommended to build them from unique identifiers like\n     * registered domain names.\n     *\n     * @see [[CopyrightInfo]]\n     */\n    copyrightHolderIds?: string[];\n\n    /**\n     * List of {@link @here/harp-geoutils#TileKey}s stored as mortonCodes representing\n     * {@link @here/harp-mapview#Tile}s that have geometry covering this `Tile`.\n     */\n    dependencies?: number[];\n}\n\n/**\n * This object keeps the path of the geometry. Space of the path depends on the\n * use case, so could be either world or local tile space.\n */\nexport interface PathGeometry {\n    path: Vector3Like[];\n}\n\n/**\n * Attributes corresponding to some decoded geometry. It may be either a map\n * of multiple attributes or just a string with the geometry's feature id (id numbers are\n * deprecated).\n */\nexport type AttributeMap = {} | string | number;\n\n/**\n * This object keeps textual data together with metadata to place it on the map.\n */\nexport interface TextPathGeometry {\n    path: number[];\n    pathLengthSqr: number;\n    text: string;\n    technique: number;\n    objInfos?: AttributeMap;\n}\n\n/**\n * Returns an array with the data type specified as parameter.\n *\n * @param attr - specifies which type of data is being stored in the array\n */\nexport function getArrayConstructor(attr: BufferElementType) {\n    switch (attr) {\n        case \"float\":\n            return Float32Array;\n        case \"uint8\":\n            return Uint8Array;\n        case \"uint16\":\n            return Uint16Array;\n        case \"uint32\":\n            return Uint32Array;\n        case \"int8\":\n            return Int8Array;\n        case \"int16\":\n            return Int16Array;\n        case \"int32\":\n            return Int32Array;\n    }\n}\n\n/**\n * Structured clone compliant WebGL interleaved buffer with its metadata attached.\n */\nexport interface InterleavedBufferAttribute {\n    buffer: ArrayBufferLike;\n    stride: number;\n    type: BufferElementType;\n    attributes: Array<{\n        name: string;\n        itemSize: number;\n        offset: number;\n    }>;\n}\n\n/**\n * Geometry types supported by [[Geometry]] objects.\n */\nexport enum GeometryType {\n    Unspecified = 0,\n    Point,\n    Line,\n    SolidLine,\n    Text,\n    TextPath,\n    ExtrudedLine,\n    Polygon,\n    ExtrudedPolygon,\n    Object3D,\n    Other = 1000\n}\n\n/**\n * Structured clone compliant version of a `three.js` geometry object, consisting of buffers with\n * metadata for map features and objects for example roads, trees or parks.\n */\nexport interface Geometry {\n    type: GeometryType;\n    vertexAttributes?: BufferAttribute[];\n    interleavedVertexAttributes?: InterleavedBufferAttribute[];\n    index?: BufferAttribute;\n    edgeIndex?: BufferAttribute;\n    groups: Group[];\n    uuid?: string;\n\n    /**\n     * Optional sorted list of feature start indices. The indices point into the index attribute.\n     * Feature i starts at featureStarts[i] and ends at featureStarts[i+1]-1, except for the last\n     * feature, which ends at index[index.length-1].\n     */\n    featureStarts?: number[];\n\n    /**\n     * Optional sorted list of feature start indices for the outline geometry.\n     * Equivalent to {@link featureStarts} but pointing into the edgeIndex attribute.\n     */\n    edgeFeatureStarts?: number[];\n\n    /**\n     * Optional array of objects. It can be used to pass user data from the geometry to the mesh.\n     */\n    objInfos?: AttributeMap[];\n\n    /**\n     * Optional [[Array]] of [[Attachment]]s.\n     */\n    attachments?: Attachment[];\n}\n\n/**\n * Attachments together with [[Geometry]] define the meshes and the objects\n * of a [[Scene]].\n */\nexport interface Attachment {\n    /**\n     * The unique uuid of this [[Attachment]].\n     */\n    uuid?: string;\n\n    /**\n     * The name of this [[Attachment]].\n     */\n    name?: string;\n\n    /**\n     * The index [[BufferAttribute]]. If not provided the index\n     * buffer of the [[Geometry]] will be used.\n     */\n    index?: BufferAttribute;\n\n    /**\n     * Optional additional buffer index used to create an edge object.\n     */\n    edgeIndex?: BufferAttribute;\n\n    /**\n     * The draw [[Group]]]s of this [[Attachment]].\n     */\n    groups: Group[];\n}\n\n/**\n * The data stored in Buffers' elements can be of the following elementary types: float, signed or\n * unsigned integers (8-bit, 16-bit or 32-bit long).\n */\nexport type BufferElementType =\n    | \"float\"\n    | \"uint8\"\n    | \"uint16\"\n    | \"uint32\"\n    | \"int8\"\n    | \"int16\"\n    | \"int32\";\n\n/**\n * Structured clone compliant WebGL buffer and its metadata.\n */\nexport interface BufferAttribute {\n    name: string;\n    buffer: ArrayBufferLike;\n    type: BufferElementType;\n    itemCount: number;\n    normalized?: boolean;\n}\n\n/**\n * Structured clone compliant version of a `three.js` geometry object with text to be rendered.\n * It is composed of buffers with metadata for text objects.\n */\nexport interface TextGeometry {\n    positions: BufferAttribute;\n    texts: number[];\n    technique?: number;\n    stringCatalog: Array<string | undefined>;\n    objInfos?: AttributeMap[];\n}\n\n/**\n * Structured clone compliant version of a `three.js` geometry object with points of interest (POIs)\n * to be rendered. It is composed of buffers with metadata for POI objects.\n */\nexport interface PoiGeometry extends TextGeometry {\n    /**\n     * Names of the image texture or the name of the POI as indices into the array `stringCatalog`.\n     */\n    imageTextures?: number[];\n    // Angle in degrees from north clockwise specifying the directions the icons can be shifted.\n    offsetDirections?: number[];\n}\n\n/**\n * Structured clone compliant WebGL group object and its metadata.\n * Its purpose is to make working with groups of objects easier.\n */\nexport interface Group {\n    start: number;\n    count: number;\n    technique: number;\n\n    /**\n     * Contains tile offsets if its [[Geometry]] has been created.\n     */\n    createdOffsets?: number[];\n}\n\n/**\n * Returns the projection object specified in the parameter.\n *\n * @param projectionName - string describing projection to be used\n */\nexport function getProjection(projectionName: string): Projection | never {\n    switch (projectionName) {\n        case \"mercator\":\n            return mercatorProjection;\n        case \"webMercator\":\n            return webMercatorProjection;\n        case \"sphere\":\n            return sphereProjection;\n        case \"normalizedEquirectangular\":\n            return normalizedEquirectangularProjection;\n        case \"equirectangular\":\n            return equirectangularProjection;\n        default:\n            throw new Error(`Unknown projection ${projectionName}`);\n    } // switch\n}\n\n/**\n * String with the projection's name.\n *\n * @param projection - `Projection` object containing the name of the projection to retrieve\n */\nexport function getProjectionName(projection: Projection): string | never {\n    if (projection === mercatorProjection) {\n        return \"mercator\";\n    } else if (projection === webMercatorProjection) {\n        return \"webMercator\";\n    } else if (projection === sphereProjection) {\n        return \"sphere\";\n    } else if (projection === normalizedEquirectangularProjection) {\n        return \"normalizedEquirectangular\";\n    } else if (projection === equirectangularProjection) {\n        return \"equirectangular\";\n    }\n    throw new Error(\"Unknown projection\");\n}\n\n/**\n * @returns Feature id from the provided attribute map.\n * @internal\n */\nexport function getFeatureId(attributeMap: AttributeMap | undefined): string | number {\n    if (attributeMap === undefined) {\n        return 0;\n    }\n\n    if (typeof attributeMap === \"string\" || typeof attributeMap === \"number\") {\n        return attributeMap;\n    } else if (attributeMap.hasOwnProperty(\"$id\")) {\n        const id = (attributeMap as any).$id;\n\n        if (typeof id === \"string\" || typeof id === \"number\") {\n            return id;\n        }\n    }\n\n    return 0;\n}\n\n/**\n * Determine the name of (OMV) feature. It implements the special handling required\n * to determine the text content of a feature from its tags, which are passed in as the `env`.\n *\n * @param env - Environment containing the tags from the (OMV) feature.\n * @param useAbbreviation - `true` to use the abbreviation if available.\n * @param useIsoCode - `true` to use the tag \"iso_code\".\n * @param languages - List of languages to use, for example: Specify \"en\" to use the tag \"name_en\"\n *                  as the text of the string. Order reflects priority.\n */\nexport function getFeatureName(\n    env: Env,\n    basePropName: string | undefined,\n    useAbbreviation?: boolean,\n    useIsoCode?: boolean,\n    languages?: string[]\n): string | undefined {\n    let name;\n    if (basePropName === undefined) {\n        basePropName = \"name\";\n    }\n    if (useAbbreviation) {\n        const abbreviation = env.lookup(`${basePropName}:short`);\n        if (typeof abbreviation === \"string\" && abbreviation.length > 0) {\n            return abbreviation;\n        }\n    }\n    if (useIsoCode) {\n        const isoCode = env.lookup(`iso_code`);\n        if (typeof isoCode === \"string\" && isoCode.length > 0) {\n            return isoCode;\n        }\n    }\n    if (languages !== undefined) {\n        for (const lang of languages) {\n            name = env.lookup(`${basePropName}:${lang}`) ?? env.lookup(`${basePropName}_${lang}`);\n            if (typeof name === \"string\" && name.length > 0) {\n                return name;\n            }\n        }\n    }\n    name = env.lookup(basePropName);\n    if (typeof name === \"string\") {\n        return name;\n    }\n    return undefined;\n}\n\n/**\n * Determine the text string of the map feature. It implements the special handling required\n * to determine the text content of a feature from its tags, which are passed in as the `env`.\n *\n * @param feature - Feature, including properties from the (OMV) feature.\n * @param technique - technique defining how text should be created from feature\n * @param languages - List of languages to use, for example: Specify \"en\" to use the tag \"name_en\"\n *                  as the text of the string. Order reflects priority.\n */\nexport function getFeatureText(\n    context: Env | AttrEvaluationContext,\n    technique: Technique,\n    languages?: string[]\n): string | undefined {\n    let useAbbreviation: boolean | undefined;\n    let useIsoCode: boolean | undefined;\n    const env = context instanceof Env ? context : context.env;\n    let propName: string = \"name\";\n    if (\n        isTextTechnique(technique) ||\n        isPoiTechnique(technique) ||\n        isLineMarkerTechnique(technique)\n    ) {\n        if (technique.text !== undefined) {\n            return evaluateTechniqueAttr(context, technique.text);\n        }\n        if (technique.label !== undefined) {\n            propName = evaluateTechniqueAttr(context, technique.label)!;\n            if (typeof propName !== \"string\") {\n                return undefined;\n            }\n        }\n        useAbbreviation = technique.useAbbreviation;\n        useIsoCode = technique.useIsoCode;\n    }\n\n    return getFeatureName(env, propName, useAbbreviation, useIsoCode, languages);\n}\n\n/**\n * Determine whether to scale heights by the projection scale factor for geometry\n * using the given technique.\n * @remarks Unless explicitly defined, the scale factor to convert meters to world space units\n * won't be applied if the tile's level is less than a fixed storage level.\n * @param context - Context for evaluation of technique attributes.\n * @param technique - Technique to be evaluated.\n * @param tileLevel - The level of the tile where the geometry is stored.\n * @returns `true` if height must be scaled, `false` otherwise.\n */\nexport function scaleHeight(\n    context: Env | AttrEvaluationContext,\n    technique: Technique,\n    tileLevel: number\n): boolean {\n    const SCALED_HEIGHT_MIN_STORAGE_LEVEL = 12;\n    const useConstantHeight = evaluateTechniqueAttr(\n        context,\n        technique.constantHeight,\n        tileLevel < SCALED_HEIGHT_MIN_STORAGE_LEVEL\n    );\n    return !useConstantHeight;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * The type representing the value of a property.\n */\nexport type Value = null | boolean | number | string | object;\n\n/**\n * An interface defining a collection of named properties.\n *\n * @example\n * ```typescript\n * const properties: ValueMap = {\n *    $id: 123,\n *    color: \"rgba(255, 0, 0, 1)\"\n * }\n * ```\n */\nexport interface ValueMap {\n    [name: string]: Value;\n}\n\n/**\n * A class used to lookup properties by name.\n *\n * @remarks\n * Concrete implementation of `Env` like {@link MapEnv} are used\n * to resolve the property names used in {@link Expr | style expressions}.\n *\n * @example\n * ```typescript\n * const env = new MapEnv({\n *     kind: \"landuse\",\n * });\n *\n * const expr = Expr.fromJson([\"get\", \"kind\"]);\n *\n * const value = expr.evaluate(env);\n *\n * console.log(`kind is '${value}`);\n * ```\n */\nexport class Env {\n    /**\n     * Returns `true` if the given object is an instance of {@link Env}.\n     *\n     * @param object - The object to test.\n     */\n    static isEnv(object: any): object is Env {\n        return object instanceof Env;\n    }\n\n    /**\n     * Returns property in {@link Env} by name.\n     *\n     * @param name - Name of property.\n     */\n    lookup(name: string): Value | undefined {\n        return undefined;\n    }\n\n    /**\n     * Return an object containing all properties of this environment. (Here: empty object).\n     */\n    unmap(): ValueMap {\n        return {};\n    }\n}\n\n/**\n * `MapEnv` is a concrete implementation of {@link Env} that\n * creates a lookup environment from a set of properties.\n *\n * @example\n * ```typescript\n * const baseEnv = new MapEnv({\n *     $zoom: 14,\n * });\n *\n * // extends baseEnv with a the new binding (kind, \"landuse\").\n * const env = new MapEnv({ kind: \"landuse\" }, baseEnv);\n *\n * const zoom = env.lookup(\"$zoom\"); // zoom is 14\n * const kind = env.lookup(\"kind\"); // kind is is \"landuse\"\n *\n * const expr = Expr.fromJson([\"get\", \"kind\"]);\n * const value = expr.evaluate(env); // value is \"landuse\"\n * ```\n */\nexport class MapEnv extends Env {\n    constructor(readonly entries: ValueMap, private readonly parent?: Env) {\n        super();\n    }\n\n    /**\n     * Returns property in {@link Env} by name.\n     *\n     * @param name - Name of property.\n     * @override\n     */\n    lookup(name: string): Value | undefined {\n        if (this.entries.hasOwnProperty(name)) {\n            const value = this.entries[name];\n            if (value !== undefined) {\n                return value;\n            }\n        }\n        return this.parent ? this.parent.lookup(name) : undefined;\n    }\n\n    /**\n     * Return an object containing all properties of this environment, takes care of the parent\n     * object.\n     * @override\n     */\n    unmap(): ValueMap {\n        const obj: any = this.parent ? this.parent.unmap() : {};\n        for (const key in this.entries) {\n            if (this.entries.hasOwnProperty(key)) {\n                obj[key] = this.entries[key];\n            }\n        }\n        return obj;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport * as THREE from \"three\";\n\nimport { Env, Value } from \"./Env\";\nimport { ExprEvaluator, ExprEvaluatorContext, OperatorDescriptor } from \"./ExprEvaluator\";\nimport { ExprInstantiator, InstantiationContext } from \"./ExprInstantiator\";\nimport { ExprParser } from \"./ExprParser\";\nimport { ExprPool } from \"./ExprPool\";\nimport {\n    interpolatedPropertyDefinitionToJsonExpr,\n    isInterpolatedPropertyDefinition\n} from \"./InterpolatedPropertyDefs\";\nimport { Pixels } from \"./Pixels\";\nimport { RGBA } from \"./RGBA\";\nimport { Definition, Definitions, getDefinitionValue } from \"./Theme\";\n\nexport * from \"./Env\";\n\nconst exprEvaluator = new ExprEvaluator();\n\nconst exprInstantiator = new ExprInstantiator();\n\n/**\n * A visitor for {@link Expr} nodes.\n * @internal\n */\nexport interface ExprVisitor<Result, Context> {\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: Context): Result;\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: Context): Result;\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: Context): Result;\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: Context): Result;\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: Context): Result;\n    visitVarExpr(expr: VarExpr, context: Context): Result;\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: Context): Result;\n    visitCallExpr(expr: CallExpr, context: Context): Result;\n    visitLookupExpr(expr: LookupExpr, context: Context): Result;\n    visitMatchExpr(expr: MatchExpr, context: Context): Result;\n    visitCaseExpr(expr: CaseExpr, context: Context): Result;\n    visitStepExpr(expr: StepExpr, context: Context): Result;\n    visitInterpolateExpr(expr: InterpolateExpr, context: Context): Result;\n}\n\n/**\n * The dependencies of an {@link Expr}.\n * @internal\n */\nexport class ExprDependencies {\n    /**\n     * The properties needed to evaluate the {@link Expr}.\n     */\n    readonly properties = new Set<string>();\n\n    /**\n     * `true` if the expression depends on the feature state.\n     */\n    featureState?: boolean;\n\n    /**\n     * `true` if this expression cannot be cached.\n     */\n    volatile?: boolean;\n}\n\nclass ComputeExprDependencies implements ExprVisitor<void, ExprDependencies> {\n    static instance = new ComputeExprDependencies();\n\n    /**\n     * Gets the dependencies of an {@link Expr}.\n     *\n     * @param expr - The {@link Expr} to process.\n     * @param scope - The evaluation scope. Defaults to [[ExprScope.Value]].\n     * @param dependencies - The output [[Set]] of dependency names.\n     */\n    static of(expr: Expr) {\n        const dependencies = new ExprDependencies();\n        expr.accept(this.instance, dependencies);\n        return dependencies;\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitVarExpr(expr: VarExpr, context: ExprDependencies): void {\n        context.properties.add(expr.name);\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: ExprDependencies): void {\n        context.properties.add(expr.name);\n    }\n\n    visitCallExpr(expr: CallExpr, context: ExprDependencies): void {\n        expr.args.forEach(childExpr => childExpr.accept(this, context));\n\n        switch (expr.op) {\n            case \"dynamic-properties\":\n                context.volatile = true;\n                break;\n            case \"feature-state\":\n                context.featureState = true;\n                context.properties.add(\"$state\");\n                context.properties.add(\"$id\");\n                break;\n            case \"id\":\n                context.properties.add(\"$id\");\n                break;\n            case \"zoom\":\n            case \"world-ppi-scale\":\n            case \"world-discrete-ppi-scale\":\n                context.properties.add(\"$zoom\");\n                break;\n            case \"geometry-type\":\n                context.properties.add(\"$geometryType\");\n                break;\n            default:\n                break;\n        }\n    }\n\n    visitLookupExpr(expr: LookupExpr, context: ExprDependencies): void {\n        // Same behaviour as call expressions.\n        return this.visitCallExpr(expr, context);\n    }\n\n    visitMatchExpr(expr: MatchExpr, context: ExprDependencies): void {\n        expr.value.accept(this, context);\n        expr.branches.forEach(([_, branch]) => branch.accept(this, context));\n        expr.fallback.accept(this, context);\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: ExprDependencies): void {\n        expr.branches.forEach(([condition, branch]) => {\n            condition.accept(this, context);\n            branch.accept(this, context);\n        });\n        expr.fallback.accept(this, context);\n    }\n\n    visitStepExpr(expr: StepExpr, context: ExprDependencies): void {\n        expr.input.accept(this, context);\n        expr.defaultValue.accept(this, context);\n        expr.stops.forEach(([_, value]) => value.accept(this, context));\n    }\n\n    visitInterpolateExpr(expr: InterpolateExpr, context: ExprDependencies): void {\n        expr.input.accept(this, context);\n        expr.stops.forEach(([_, value]) => value.accept(this, context));\n    }\n}\n\n/**\n * A type represeting JSON values.\n */\nexport type JsonValue = null | boolean | number | string | JsonObject | JsonArray;\n\n/**\n * A type representing JSON arrays.\n */\nexport interface JsonArray extends Array<JsonValue> {}\n\n/**\n * A type representing JSON objects.\n */\nexport interface JsonObject {\n    [name: string]: JsonValue;\n}\n\n/**\n * The JSON representation of an {@link Expr} object.\n */\nexport type JsonExpr = JsonArray;\n\nexport function isJsonExpr(v: any): v is JsonExpr {\n    return Array.isArray(v) && v.length > 0 && typeof v[0] === \"string\";\n}\n\n/**\n * Internal state needed by {@link Expr.fromJSON} to resolve `\"ref\"` expressions.\n */\ninterface ReferenceResolverState {\n    definitions: Definitions;\n    lockedNames: Set<string>;\n    cache: Map<string, Expr>;\n}\n\n/**\n * The evaluation scope of an {@link Expr}.\n * @internal\n */\nexport enum ExprScope {\n    /**\n     * The scope of an {@link Expr} used as value of an attribute.\n     */\n    Value,\n\n    /**\n     * The scope of an {@link Expr} used in a [[Technique]] `when` condition.\n     */\n    Condition,\n\n    /**\n     * The scope of an {@link Expr} used as dynamic property attribute value.\n     */\n    Dynamic\n}\n\n/**\n * Abstract class representing the\n * {@link https://github.com/heremaps/harp.gl/blob/master/%40here/harp-datasource-protocol/StyleExpressions.md | style expressions}\n * used in {@link Theme}.\n */\nexport abstract class Expr {\n    /**\n     * Tests of given value is an {@link Expr}.\n     *\n     * @param value - The object to test.\n     */\n    static isExpr(value: any): value is Expr {\n        return value instanceof Expr;\n    }\n\n    /**\n     * Creates an expression from the given `code`.\n     *\n     * @param code - The code to parse.\n     * @returns The parsed {@link Expr}.\n     * @deprecated `string` encoded expression are deprecated. Use {@link Expr.fromJSON} instead.\n     */\n    static parse(code: string): Expr | never {\n        const parser = new ExprParser(code);\n        const expr = parser.parse();\n        return expr;\n    }\n\n    /**\n     * Creates a style expression from JSON.\n     *\n     * @remarks\n     * The optional set of {@link Theme.definitions | definitions} is used\n     * to resolve the {@link https://github.com/heremaps/harp.gl/blob/master/%40here/harp-datasource-protocol/StyleExpressions.md#ref | ref expressions}.\n     *\n     * @param json - JSON object representing the expression to parse.\n     * @param definitions - Optional set of definitions used to expand references.\n     * @param definitionExprCache - Optional cache of `Expr` instances\n     *\n     * @example\n     * ```typescript\n     * const expr = Expr.fromJSON([\"all\",\n     *     [\"==\", [\"geometry-type\"], \"LineString\"],\n     *     [\"has\", \"text\"]\n     * ]);\n     * ```\n     */\n    static fromJSON(\n        json: JsonValue,\n        definitions?: Definitions,\n        definitionExprCache?: Map<string, Expr>\n    ) {\n        const referenceResolverState: ReferenceResolverState | undefined =\n            definitions !== undefined\n                ? {\n                      definitions,\n                      lockedNames: new Set(),\n                      cache: definitionExprCache ?? new Map<string, Expr>()\n                  }\n                : undefined;\n\n        return parseNode(json, referenceResolverState);\n    }\n\n    private m_dependencies?: ExprDependencies;\n    private m_isDynamic?: boolean;\n\n    /**\n     * Evaluate an expression returning a {@link Value} object.\n     *\n     * @param env - The {@link Env} used to lookup symbols.\n     * @param scope - The evaluation scope. Defaults to [[ExprScope.Value]].\n     * @param cache - A cache of previously computed results.\n     */\n    evaluate(\n        env: Env,\n        scope: ExprScope = ExprScope.Value,\n        cache?: Map<Expr, Value>\n    ): Value | never {\n        return this.accept(\n            exprEvaluator,\n            new ExprEvaluatorContext(exprEvaluator, env, scope, cache)\n        );\n    }\n\n    /**\n     * Instantiates this {@link Expr}.\n     *\n     * @remarks\n     * references to the `get` and `has` operator using the given instantiation context.\n     *\n     * @param context - The [[InstantationContext]] used to resolve names.\n     */\n    instantiate(context: InstantiationContext): Expr {\n        return this.accept(exprInstantiator, context);\n    }\n\n    /**\n     * Gets the dependencies of this {@link Expr}.\n     */\n    dependencies(): ExprDependencies {\n        if (!this.m_dependencies) {\n            this.m_dependencies = ComputeExprDependencies.of(this);\n        }\n        return this.m_dependencies;\n    }\n\n    /**\n     * Create a unique object that is structurally equivalent to this {@link Expr}.\n     *\n     * @param pool - The [[ExprPool]] used to create a unique\n     * equivalent object of this {@link Expr}.\n     */\n    intern(pool: ExprPool): Expr {\n        return pool.add(this);\n    }\n\n    toJSON(): JsonValue {\n        return new ExprSerializer().serialize(this);\n    }\n\n    /**\n     * Returns `true` if a dynamic execution context is required to evaluate this {@link Expr}.\n     */\n    isDynamic(): boolean {\n        if (this.m_isDynamic === undefined) {\n            this.m_isDynamic = this.exprIsDynamic();\n        }\n        return this.m_isDynamic;\n    }\n\n    /**\n     * Visits this expression.\n     *\n     * @param visitor The visitor used to visit the expression.\n     * @param context The context passed to the vistor.\n     */\n    abstract accept<Result, Context>(\n        visitor: ExprVisitor<Result, Context>,\n        context: Context\n    ): Result;\n\n    /**\n     * Update the dynamic state of this {@link Expr}.\n     *\n     * `exprIsDynamic` must never be called directly.\n     * @internal\n     */\n    protected abstract exprIsDynamic(): boolean;\n}\n\n/**\n * @internal\n */\nexport type RelationalOp = \"<\" | \">\" | \"<=\" | \">=\";\n\n/**\n * @internal\n */\nexport type EqualityOp = \"~=\" | \"^=\" | \"$=\" | \"==\" | \"!=\";\n\n/**\n * @internal\n */\nexport type BinaryOp = RelationalOp | EqualityOp;\n\n/**\n * A node representing a `get` expression.\n * @internal\n */\nexport class VarExpr extends Expr {\n    constructor(readonly name: string) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitVarExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * A node representing a `literal` expression.\n * @internal\n */\nexport abstract class LiteralExpr extends Expr {\n    /**\n     * Create a [[LiteralExpr]] from the given value.\n     *\n     * @param value - A constant value.\n     */\n    static fromValue(value: Value): Expr {\n        switch (typeof value) {\n            case \"boolean\":\n                return new BooleanLiteralExpr(value);\n            case \"number\":\n                return new NumberLiteralExpr(value);\n            case \"string\":\n                return new StringLiteralExpr(value);\n            case \"object\":\n                return value === null ? NullLiteralExpr.instance : new ObjectLiteralExpr(value);\n            default:\n                throw new Error(`failed to create a literal from '${value}'`);\n        } // switch\n    }\n\n    abstract get value(): Value;\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * Null literal expression.\n * @internal\n */\nexport class NullLiteralExpr extends LiteralExpr {\n    static instance = new NullLiteralExpr();\n    /** @override */\n    readonly value: Value = null;\n\n    protected constructor() {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitNullLiteralExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * Boolean literal expression.\n * @internal\n */\nexport class BooleanLiteralExpr extends LiteralExpr {\n    constructor(readonly value: boolean) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitBooleanLiteralExpr(this, context);\n    }\n}\n\n/**\n * Number literal expression.\n * @internal\n */\nexport class NumberLiteralExpr extends LiteralExpr {\n    constructor(readonly value: number) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitNumberLiteralExpr(this, context);\n    }\n}\n\n/**\n * String literal expression.\n * @internal\n */\nexport class StringLiteralExpr extends LiteralExpr {\n    private m_promotedValue?: RGBA | Pixels | null;\n\n    constructor(readonly value: string) {\n        super();\n    }\n\n    /**\n     * Returns the value of parsing this string as [[RGBA]] or [[Pixels]] constant.\n     */\n    get promotedValue(): RGBA | Pixels | undefined {\n        if (this.m_promotedValue === undefined) {\n            this.m_promotedValue = RGBA.parse(this.value) ?? Pixels.parse(this.value) ?? null;\n        }\n        return this.m_promotedValue ?? undefined;\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitStringLiteralExpr(this, context);\n    }\n}\n\n/**\n * Object literal expression.\n * @internal\n */\nexport class ObjectLiteralExpr extends LiteralExpr {\n    constructor(readonly value: object) {\n        super();\n    }\n\n    get isArrayLiteral() {\n        return Array.isArray(this.value);\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitObjectLiteralExpr(this, context);\n    }\n}\n\n/**\n * A node reperesenting a `has` expression.\n * @internal\n */\nexport class HasAttributeExpr extends Expr {\n    constructor(readonly name: string) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitHasAttributeExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * A node representing a `call` expression.\n * @internal\n */\nexport class CallExpr extends Expr {\n    descriptor?: OperatorDescriptor;\n\n    constructor(readonly op: string, readonly args: Expr[]) {\n        super();\n    }\n\n    /**\n     * Returns the child nodes of this {@link Expr}.\n     *\n     * @deprecated Use {@link CallExpr.args} instead.\n     */\n    get children() {\n        return this.args;\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitCallExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        const descriptor = this.descriptor ?? ExprEvaluator.getOperator(this.op);\n\n        if (descriptor && descriptor.isDynamicOperator && descriptor.isDynamicOperator(this)) {\n            return true;\n        }\n\n        return this.args.some(e => e.isDynamic());\n    }\n}\n\n/**\n * A `lookup` expression is a call expression using the `lookup` operator. Then only difference is\n * that the lookup table definition (first argument) is cached as a map for fast search\n * (see {@link ExprEvaluator.visitLookupExpr}).\n * @internal\n */\n\nexport class LookupExpr extends CallExpr {\n    /**\n     * Creates a lookup expression from a {@link JsonArray}.\n     * @param node The {@link JsonArray} to parse.\n     * @param referenceResolverState Used to resolve references to definitions.\n     * @returns A LookupExpr instance.\n     */\n    static parseArray(node: JsonArray, referenceResolverState?: ReferenceResolverState): Expr {\n        const lookupTableNode = node[1];\n        if (lookupTableNode === undefined) {\n            throw new Error(\"missing lookup table in 'lookup' expression\");\n        }\n\n        const lookupTableExpr = parseNode(lookupTableNode, referenceResolverState);\n        if (!Array.isArray(lookupTableNode) || !(lookupTableExpr instanceof ObjectLiteralExpr)) {\n            throw new Error(\n                `Invalid lookup table expression for operator 'lookup'. It must be a literal or a ref to one.`\n            );\n        }\n        const lookupTable = lookupTableExpr.value;\n        if (!Array.isArray(lookupTable)) {\n            throw new Error(\n                `Invalid lookup table type (${typeof lookupTable}) for operator 'lookup'`\n            );\n        }\n\n        // Skip the operator name and the lookup table and parse the rest of the arguments. Then add\n        // the lookup table expr as first argument.\n        const args = node.slice(2).map(childExpr => parseNode(childExpr, referenceResolverState));\n        args.unshift(lookupTableExpr);\n\n        return new LookupExpr(args);\n    }\n\n    /**\n     * Constructs a LookupExpr instance.\n     * @param args Arguments of the lookup expression. At least an argument for the lookup table.\n     */\n    constructor(readonly args: Expr[]) {\n        super(\"lookup\", args);\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitLookupExpr(this, context);\n    }\n}\n\n/**\n * The labels of a {@link MatchExpr} expression.\n * @internal\n */\nexport type MatchLabel = number | string | number[] | string[];\n\n/**\n * A node representing a `match` expression.\n * @internal\n */\nexport class MatchExpr extends Expr {\n    /**\n     * Tests if the given JSON node is a valid label for the `\"match\"` operator.\n     *\n     * @param node - A JSON value.\n     */\n    static isValidMatchLabel(node: JsonValue): node is MatchLabel {\n        switch (typeof node) {\n            case \"number\":\n            case \"string\":\n                return true;\n            case \"object\":\n                if (!Array.isArray(node) || node.length === 0) {\n                    return false;\n                }\n                const elementTy = typeof node[0];\n                if (elementTy === \"number\" || elementTy === \"string\") {\n                    return node.every(t => typeof t === elementTy);\n                }\n                return false;\n            default:\n                return false;\n        } // switch\n    }\n\n    constructor(\n        readonly value: Expr,\n        readonly branches: Array<[MatchLabel, Expr]>,\n        readonly fallback: Expr\n    ) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitMatchExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return (\n            this.value.isDynamic() ||\n            this.branches.some(([_, branch]) => branch.isDynamic()) ||\n            this.fallback.isDynamic()\n        );\n    }\n}\n\n/**\n * A node representing a `case` expression.\n * @internal\n */\nexport class CaseExpr extends Expr {\n    constructor(readonly branches: Array<[Expr, Expr]>, readonly fallback: Expr) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitCaseExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return (\n            this.branches.some(([cond, branch]) => cond.isDynamic() || branch.isDynamic()) ||\n            this.fallback.isDynamic()\n        );\n    }\n}\n\n/**\n * A node representing a `step` expression.\n * @internal\n */\nexport class StepExpr extends Expr {\n    constructor(\n        readonly input: Expr,\n        readonly defaultValue: Expr,\n        readonly stops: Array<[number, Expr]>\n    ) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitStepExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic(): boolean {\n        return (\n            this.input.isDynamic() ||\n            this.defaultValue.isDynamic() ||\n            this.stops.some(([_, value]) => value.isDynamic())\n        );\n    }\n}\n\n/**\n * The type of the interpolation mode.\n */\nexport type InterpolateMode = [\"discrete\"] | [\"linear\"] | [\"cubic\"] | [\"exponential\", number];\n\n/**\n * A node representing an `interpolate` expression.\n * @internal\n */\nexport class InterpolateExpr extends Expr {\n    constructor(\n        readonly mode: InterpolateMode,\n        readonly input: Expr,\n        readonly stops: Array<[number, Expr]>\n    ) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitInterpolateExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic(): boolean {\n        return this.input.isDynamic() || this.stops.some(([_, value]) => value.isDynamic());\n    }\n}\n\n/**\n * Serializes the Expr to JSON.\n *\n * @internal\n */\nclass ExprSerializer implements ExprVisitor<JsonValue, void> {\n    serialize(expr: Expr): JsonValue {\n        return expr.accept(this, undefined);\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: void): JsonValue {\n        return null;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: void): JsonValue {\n        return expr.value;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: void): JsonValue {\n        return expr.value;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: void): JsonValue {\n        return expr.value;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: void): JsonValue {\n        if (expr.value instanceof THREE.Vector2) {\n            return [\"make-vector\", expr.value.x, expr.value.y];\n        } else if (expr.value instanceof THREE.Vector3) {\n            return [\"make-vector\", expr.value.x, expr.value.y, expr.value.z];\n        } else if (expr.value instanceof THREE.Vector4) {\n            return [\"make-vector\", expr.value.x, expr.value.y, expr.value.z, expr.value.w];\n        }\n        return [\"literal\", expr.value as JsonObject];\n    }\n\n    visitVarExpr(expr: VarExpr, context: void): JsonValue {\n        return [\"get\", expr.name];\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: void): JsonValue {\n        return [\"has\", expr.name];\n    }\n\n    visitCallExpr(expr: CallExpr, context: void): JsonValue {\n        return [expr.op, ...expr.args.map(childExpr => this.serialize(childExpr))];\n    }\n\n    visitLookupExpr(expr: LookupExpr, context: void): JsonValue {\n        // Same serialization as call expressions.\n        return this.visitCallExpr(expr, context);\n    }\n\n    visitMatchExpr(expr: MatchExpr, context: void): JsonValue {\n        const branches: JsonValue[] = [];\n        for (const [label, body] of expr.branches) {\n            branches.push(label, this.serialize(body));\n        }\n        return [\"match\", this.serialize(expr.value), ...branches, this.serialize(expr.fallback)];\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: void): JsonValue {\n        const branches: JsonValue[] = [];\n        for (const [condition, body] of expr.branches) {\n            branches.push(this.serialize(condition), this.serialize(body));\n        }\n        return [\"case\", ...branches, this.serialize(expr.fallback)];\n    }\n\n    visitStepExpr(expr: StepExpr, context: void): JsonValue {\n        const result: JsonArray = [\"step\"];\n        result.push(this.serialize(expr.input));\n        result.push(this.serialize(expr.defaultValue));\n        expr.stops.forEach(([key, value]) => {\n            result.push(key);\n            result.push(this.serialize(value));\n        });\n        return result;\n    }\n\n    visitInterpolateExpr(expr: InterpolateExpr, context: void): JsonValue {\n        const result: JsonArray = [\"interpolate\", expr.mode];\n        result.push(this.serialize(expr.input));\n        expr.stops.forEach(([key, value]) => {\n            result.push(key);\n            result.push(this.serialize(value));\n        });\n        return result;\n    }\n}\n\nfunction parseNode(\n    node: JsonValue,\n    referenceResolverState: ReferenceResolverState | undefined\n): Expr {\n    if (Array.isArray(node)) {\n        return parseCall(node, referenceResolverState);\n    } else if (node === null) {\n        return NullLiteralExpr.instance;\n    } else if (typeof node === \"boolean\") {\n        return new BooleanLiteralExpr(node);\n    } else if (typeof node === \"number\") {\n        return new NumberLiteralExpr(node);\n    } else if (typeof node === \"string\") {\n        return new StringLiteralExpr(node);\n    }\n    throw new Error(`failed to create expression from: ${JSON.stringify(node)}`);\n}\n\nfunction parseCall(node: JsonArray, referenceResolverState?: ReferenceResolverState): Expr {\n    const op = node[0];\n\n    if (typeof op !== \"string\") {\n        throw new Error(\"expected a builtin function name\");\n    }\n\n    switch (op) {\n        case \"!has\":\n        case \"!in\":\n            return new CallExpr(\"!\", [parseCall([op.slice(1), ...node.slice(1)])]);\n\n        case \"ref\":\n            return resolveReference(node, referenceResolverState);\n\n        case \"get\":\n            return parseGetExpr(node, referenceResolverState);\n\n        case \"has\":\n            return parseHasExpr(node, referenceResolverState);\n\n        case \"literal\":\n            return parseLiteralExpr(node);\n\n        case \"match\":\n            return parseMatchExpr(node, referenceResolverState);\n\n        case \"case\":\n            return parseCaseExpr(node, referenceResolverState);\n\n        case \"interpolate\":\n            return parseInterpolateExpr(node, referenceResolverState);\n\n        case \"step\":\n            return parseStepExpr(node, referenceResolverState);\n\n        case \"lookup\":\n            return LookupExpr.parseArray(node, referenceResolverState);\n\n        default:\n            return makeCallExpr(op, node, referenceResolverState);\n    } // switch\n}\n\nfunction parseGetExpr(node: JsonArray, referenceResolverState?: ReferenceResolverState) {\n    if (node[2] !== undefined) {\n        return makeCallExpr(\"get\", node, referenceResolverState);\n    }\n    const name = node[1];\n    if (typeof name !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n    return new VarExpr(name);\n}\n\nfunction parseHasExpr(node: JsonArray, referenceResolverState?: ReferenceResolverState) {\n    if (node[2] !== undefined) {\n        return makeCallExpr(\"has\", node, referenceResolverState);\n    }\n    const name = node[1];\n    if (typeof name !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n    return new HasAttributeExpr(name);\n}\n\nfunction parseLiteralExpr(node: JsonArray) {\n    const obj = node[1];\n    if (obj === null || typeof obj !== \"object\") {\n        throw new Error(\"expected an object or array literal\");\n    }\n    return new ObjectLiteralExpr(obj);\n}\n\nfunction parseMatchExpr(node: JsonArray, referenceResolverState?: ReferenceResolverState) {\n    if (node.length < 4) {\n        throw new Error(\"not enough arguments\");\n    }\n    if (!(node.length % 2)) {\n        throw new Error(\"fallback is missing in 'match' expression\");\n    }\n    const value = parseNode(node[1], referenceResolverState);\n    const conditions: Array<[MatchLabel, Expr]> = [];\n    for (let i = 2; i < node.length - 1; i += 2) {\n        const label = node[i];\n        if (!MatchExpr.isValidMatchLabel(label)) {\n            throw new Error(`'${JSON.stringify(label)}' is not a valid label for 'match'`);\n        }\n        const expr = parseNode(node[i + 1], referenceResolverState);\n        conditions.push([label, expr]);\n    }\n    const fallback = parseNode(node[node.length - 1], referenceResolverState);\n    return new MatchExpr(value, conditions, fallback);\n}\n\nfunction parseCaseExpr(node: JsonArray, referenceResolverState?: ReferenceResolverState) {\n    if (node.length < 3) {\n        throw new Error(\"not enough arguments\");\n    }\n    if (node.length % 2) {\n        throw new Error(\"fallback is missing in 'case' expression\");\n    }\n    const branches: Array<[Expr, Expr]> = [];\n    for (let i = 1; i < node.length - 1; i += 2) {\n        const condition = parseNode(node[i], referenceResolverState);\n        const expr = parseNode(node[i + 1], referenceResolverState);\n        branches.push([condition, expr]);\n    }\n    const caseFallback = parseNode(node[node.length - 1], referenceResolverState);\n    return new CaseExpr(branches, caseFallback);\n}\n\nfunction isInterpolationMode(object: any): object is InterpolateMode {\n    if (!Array.isArray(object)) {\n        return false;\n    }\n    switch (object[0]) {\n        case \"discrete\":\n        case \"linear\":\n        case \"cubic\":\n        case \"exponential\":\n            return true;\n        default:\n            return false;\n    }\n}\n\nfunction parseInterpolateExpr(node: JsonArray, referenceResolverState?: ReferenceResolverState) {\n    const mode: InterpolateMode = node[1] as any;\n    if (!isInterpolationMode(mode)) {\n        throw new Error(\"expected an interpolation type\");\n    }\n    if (mode[0] === \"exponential\" && typeof mode[1] !== \"number\") {\n        throw new Error(\"expected the base of the exponential interpolation\");\n    }\n    const input = node[2] !== undefined ? parseNode(node[2], referenceResolverState) : undefined;\n    if (!Expr.isExpr(input)) {\n        throw new Error(`expected the input of the interpolation`);\n    }\n    if (node.length === 3 || !(node.length % 2)) {\n        throw new Error(\"invalid number of samples\");\n    }\n\n    const stops: Array<[number, Expr]> = [];\n    for (let i = 3; i < node.length - 1; i += 2) {\n        const key = node[i] as number;\n        const value = parseNode(node[i + 1], referenceResolverState);\n        stops.push([key, value]);\n    }\n    return new InterpolateExpr(mode, input, stops);\n}\n\nfunction parseStepExpr(node: JsonArray, referenceResolverState?: ReferenceResolverState) {\n    if (node.length < 2) {\n        throw new Error(\"expected the input of the 'step' operator\");\n    }\n    if (node.length < 3 || !(node.length % 2)) {\n        throw new Error(\"not enough arguments\");\n    }\n    const input = parseNode(node[1], referenceResolverState);\n    const defaultValue = parseNode(node[2], referenceResolverState);\n    const stops: Array<[number, Expr]> = [];\n    for (let i = 3; i < node.length; i += 2) {\n        const key = node[i] as number;\n        const value = parseNode(node[i + 1], referenceResolverState);\n        stops.push([key, value]);\n    }\n    return new StepExpr(input, defaultValue, stops);\n}\n\nfunction makeCallExpr(\n    op: string,\n    node: any[],\n    referenceResolverState?: ReferenceResolverState\n): Expr {\n    return new CallExpr(\n        op,\n        node.slice(1).map(childExpr => parseNode(childExpr, referenceResolverState))\n    );\n}\n\nfunction resolveReference(node: JsonArray, referenceResolverState?: ReferenceResolverState) {\n    if (typeof node[1] !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n    if (referenceResolverState === undefined) {\n        throw new Error(`ref used with no definitions`);\n    }\n    const name = node[1] as string;\n\n    if (referenceResolverState.lockedNames.has(name)) {\n        throw new Error(`circular referene to '${name}'`);\n    }\n\n    if (!(name in referenceResolverState.definitions)) {\n        throw new Error(`definition '${name}' not found`);\n    }\n\n    const cachedEntry = referenceResolverState.cache.get(name);\n    if (cachedEntry !== undefined) {\n        return cachedEntry;\n    }\n    let definitionEntry = referenceResolverState.definitions[name] as any;\n    let result: Expr;\n    const definitionValue: Definition = getDefinitionValue(definitionEntry);\n    if (isInterpolatedPropertyDefinition(definitionValue)) {\n        // found a reference to an interpolation using\n        // the deprecated object-like syntax.\n        return Expr.fromJSON(interpolatedPropertyDefinitionToJsonExpr(definitionEntry));\n    } else if (isJsonExpr(definitionValue)) {\n        definitionEntry = definitionValue;\n    } else {\n        return Expr.fromJSON(definitionValue);\n    }\n\n    if (isJsonExpr(definitionEntry)) {\n        referenceResolverState.lockedNames.add(name);\n        try {\n            result = parseNode(definitionEntry, referenceResolverState);\n        } finally {\n            referenceResolverState.lockedNames.delete(name);\n        }\n    } else {\n        throw new Error(`unsupported definition ${name}`);\n    }\n    referenceResolverState.cache.set(name, result);\n    return result;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    Env,\n    Expr,\n    ExprScope,\n    ExprVisitor,\n    HasAttributeExpr,\n    InterpolateExpr,\n    LiteralExpr,\n    LookupExpr,\n    MatchExpr,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StepExpr,\n    StringLiteralExpr,\n    Value,\n    VarExpr\n} from \"./Expr\";\nimport { ArrayOperators } from \"./operators/ArrayOperators\";\nimport { CastOperators } from \"./operators/CastOperators\";\nimport { ColorOperators } from \"./operators/ColorOperators\";\nimport { ComparisonOperators } from \"./operators/ComparisonOperators\";\nimport { FeatureOperators } from \"./operators/FeatureOperators\";\nimport { FlowOperators } from \"./operators/FlowOperators\";\nimport { MapOperators } from \"./operators/MapOperators\";\nimport { MathOperators } from \"./operators/MathOperators\";\nimport { MiscOperators } from \"./operators/MiscOperators\";\nimport { ObjectOperators } from \"./operators/ObjectOperators\";\nimport { StringOperators } from \"./operators/StringOperators\";\nimport { TypeOperators } from \"./operators/TypeOperators\";\nimport { VectorOperators } from \"./operators/VectorOperators\";\nimport { Pixels } from \"./Pixels\";\nimport { RGBA } from \"./RGBA\";\n\nexport interface OperatorDescriptor {\n    /**\n     * Returns `true` if this operator requires a dynamic execution context (e.g. [\"zoom\"]).\n     */\n    isDynamicOperator?: (call: CallExpr) => boolean;\n\n    /**\n     * Evaluates the given expression.\n     */\n    call: (context: ExprEvaluatorContext, call: CallExpr) => Value;\n\n    /**\n     * Partial evaluate the `call` expression using the given `context`.\n     */\n    partialEvaluate?: (context: ExprEvaluatorContext, call: CallExpr) => Value;\n}\n\nexport interface OperatorDescriptorMap {\n    [name: string]: OperatorDescriptor;\n}\n\nconst operatorDescriptors = new Map<string, OperatorDescriptor>();\n\n/**\n * Promote string literals and values to color and pixel constants.\n *\n * @hidden\n * @internal\n */\nfunction promoteValue(context: ExprEvaluatorContext, expr: Expr): Value {\n    if (expr instanceof StringLiteralExpr) {\n        return expr.promotedValue ?? expr.value;\n    }\n\n    const value = context.evaluate(expr);\n\n    if (typeof value === \"string\") {\n        return RGBA.parse(value) ?? Pixels.parse(value) ?? value;\n    }\n\n    return value;\n}\n\nfunction cubicInterpolate(\n    context: ExprEvaluatorContext,\n    interp: InterpolateExpr,\n    t: number\n): Value {\n    if (t < interp.stops[0][0]) {\n        return promoteValue(context, interp.stops[0][1]);\n    } else if (t >= interp.stops[interp.stops.length - 1][0]) {\n        return promoteValue(context, interp.stops[interp.stops.length - 1][1]);\n    }\n\n    // indices\n    const i1 = interp.stops.findIndex(stop => stop[0] > t);\n    const i0 = Math.max(0, i1 - 1);\n    const iP = i0 === 0 ? i1 : i0 - 1;\n    const iN = i1 < interp.stops.length - 1 ? i1 + 1 : i1 - 1;\n\n    // keys\n    const tP = interp.stops[iP][0];\n    const t0 = interp.stops[i0][0];\n    const t1 = interp.stops[i1][0];\n    const tN = interp.stops[iN][0];\n\n    const dt = (t1 - t0) * 0.5;\n    const wP = dt / (t0 - tP);\n    const wN = dt / (tN - t1);\n    const p = (t - t0) / (t1 - t0);\n    const pp = p * p;\n    const ppp = pp * p;\n\n    // coefficients\n    const cP = -wP * ppp + 2 * wP * pp - wP * p;\n    const c0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n    const c1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n    const cN = wN * ppp - wN * pp;\n\n    // values\n    const vP = promoteValue(context, interp.stops[iP][1]);\n    const v0 = promoteValue(context, interp.stops[i0][1]);\n    const v1 = promoteValue(context, interp.stops[i1][1]);\n    const vN = promoteValue(context, interp.stops[iN][1]);\n\n    if (\n        typeof vP === \"number\" &&\n        typeof v0 === \"number\" &&\n        typeof v1 === \"number\" &&\n        typeof vN === \"number\"\n    ) {\n        return cP * vP + c0 * v0 + c1 * v1 + cN * vN;\n    } else if (\n        vP instanceof RGBA &&\n        v0 instanceof RGBA &&\n        v1 instanceof RGBA &&\n        vN instanceof RGBA\n    ) {\n        return new RGBA(\n            THREE.MathUtils.clamp(cP * vP.r + c0 * v0.r + c1 * v1.r + cN * vN.r, 0, 1),\n            THREE.MathUtils.clamp(cP * vP.g + c0 * v0.g + c1 * v1.g + cN * vN.g, 0, 1),\n            THREE.MathUtils.clamp(cP * vP.b + c0 * v0.b + c1 * v1.b + cN * vN.b, 0, 1),\n            THREE.MathUtils.clamp(cP * vP.a + c0 * v0.a + c1 * v1.a + cN * vN.a, 0, 1)\n        );\n    } else if (\n        vP instanceof Pixels &&\n        v0 instanceof Pixels &&\n        v1 instanceof Pixels &&\n        vN instanceof Pixels\n    ) {\n        return new Pixels(cP * vP.value + c0 * v0.value + c1 * v1.value + cN * vN.value);\n    } else if (\n        vP instanceof THREE.Color &&\n        v0 instanceof THREE.Color &&\n        v1 instanceof THREE.Color &&\n        vN instanceof THREE.Color\n    ) {\n        return new THREE.Color(\n            cP * vP.r + c0 * v0.r + c1 * v1.r + cN * vN.r,\n            cP * vP.g + c0 * v0.g + c1 * v1.g + cN * vN.g,\n            cP * vP.b + c0 * v0.b + c1 * v1.b + cN * vN.b\n        );\n    } else if (\n        vP instanceof THREE.Vector2 &&\n        v0 instanceof THREE.Vector2 &&\n        v1 instanceof THREE.Vector2 &&\n        vN instanceof THREE.Vector2\n    ) {\n        return new THREE.Vector2(\n            cP * vP.x + c0 * v0.x + c1 * v1.x + cN * vN.x,\n            cP * vP.y + c0 * v0.y + c1 * v1.y + cN * vN.y\n        );\n    } else if (\n        vP instanceof THREE.Vector3 &&\n        v0 instanceof THREE.Vector3 &&\n        v1 instanceof THREE.Vector3 &&\n        vN instanceof THREE.Vector3\n    ) {\n        return new THREE.Vector3(\n            cP * vP.x + c0 * v0.x + c1 * v1.x + cN * vN.x,\n            cP * vP.y + c0 * v0.y + c1 * v1.y + cN * vN.y,\n            cP * vP.z + c0 * v0.z + c1 * v1.z + cN * vN.z\n        );\n    } else if (\n        vP instanceof THREE.Vector4 &&\n        v0 instanceof THREE.Vector4 &&\n        v1 instanceof THREE.Vector4 &&\n        vN instanceof THREE.Vector4\n    ) {\n        return new THREE.Vector4(\n            cP * vP.x + c0 * v0.x + c1 * v1.x + cN * vN.x,\n            cP * vP.y + c0 * v0.y + c1 * v1.y + cN * vN.y,\n            cP * vP.z + c0 * v0.z + c1 * v1.z + cN * vN.z,\n            cP * vP.w + c0 * v0.w + c1 * v1.w + cN * vN.w\n        );\n    } else if (Array.isArray(vP) && Array.isArray(v0) && Array.isArray(v1) && Array.isArray(vN)) {\n        const N = vP.length;\n        const r: number[] = [];\n        for (let i = 0; i < N; ++i) {\n            r[i] = cP * vP[i] + c0 * v0[i] + c1 * v1[i] + cN * vN[i];\n        }\n        return r;\n    }\n\n    throw new Error(`failed to interpolate values`);\n}\n\n/*\n * @hidden\n */\nexport class ExprEvaluatorContext {\n    constructor(\n        readonly evaluator: ExprEvaluator,\n        readonly env: Env,\n        readonly scope: ExprScope,\n        readonly cache?: Map<Expr, Value>\n    ) {}\n\n    /**\n     * Evaluate the given expression.\n     *\n     * @param expr - The {@link Expr} to evaluate.\n     */\n    evaluate(expr: Expr | undefined) {\n        if (expr === undefined) {\n            throw new Error(\"Failed to evaluate expression\");\n        }\n\n        const cachedResult = this.cache?.get(expr);\n\n        if (cachedResult !== undefined) {\n            return cachedResult;\n        }\n\n        const result = expr.accept(this.evaluator, this);\n        this.cache?.set(expr, result);\n        return result;\n    }\n\n    /**\n     * Wraps the given value in an {@link Expr} if needed.\n     *\n     * @param value -\n     */\n    wrapValue(value: Value | Expr): Expr {\n        return Expr.isExpr(value) ? value : LiteralExpr.fromValue(value);\n    }\n}\n\n/**\n * [[ExprEvaluator]] is used to evaluate {@link Expr} in a given environment.\n *\n * @hidden\n */\nexport class ExprEvaluator implements ExprVisitor<Value, ExprEvaluatorContext> {\n    static defineOperator(op: string, builtin: OperatorDescriptor) {\n        operatorDescriptors.set(op, builtin);\n    }\n\n    static defineOperators(builtins: OperatorDescriptorMap) {\n        Object.getOwnPropertyNames(builtins).forEach(p => {\n            this.defineOperator(p, builtins[p]);\n        });\n    }\n\n    /**\n     * Returns the [[OperatorDescriptor]] for the given operator name.\n     * @hidden\n     */\n    static getOperator(op: string): OperatorDescriptor | undefined {\n        return operatorDescriptors.get(op);\n    }\n\n    visitVarExpr(expr: VarExpr, context: ExprEvaluatorContext): Value {\n        const value = context.env.lookup(expr.name);\n        return value !== undefined ? value : null;\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: ExprEvaluatorContext): Value {\n        return null;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: ExprEvaluatorContext): Value {\n        return context.env.lookup(expr.name) !== undefined;\n    }\n\n    visitMatchExpr(match: MatchExpr, context: ExprEvaluatorContext): Value {\n        const r = context.evaluate(match.value);\n        for (const [label, body] of match.branches) {\n            if (Array.isArray(label) && (label as any[]).includes(r)) {\n                return context.evaluate(body);\n            } else if (label === r) {\n                return context.evaluate(body);\n            }\n        }\n        return context.evaluate(match.fallback);\n    }\n\n    visitCaseExpr(match: CaseExpr, context: ExprEvaluatorContext): Value {\n        if (context.scope === ExprScope.Value) {\n            const firstDynamicCondition = match.branches.findIndex(([condition, _]) =>\n                condition.isDynamic()\n            );\n\n            if (firstDynamicCondition !== -1) {\n                let branches: Array<[Expr, Expr]> | undefined;\n\n                for (let i = 0; i < match.branches.length; ++i) {\n                    const [condition, body] = match.branches[i];\n\n                    const evaluatedCondition = context.evaluate(condition);\n                    const evaluatedBody = context.evaluate(body);\n\n                    if (i < firstDynamicCondition && Boolean(evaluatedCondition)) {\n                        return evaluatedBody;\n                    }\n\n                    if (!Expr.isExpr(evaluatedCondition) && !Boolean(evaluatedCondition)) {\n                        // skip this branch, it constantly evaluates to false.\n                        continue;\n                    }\n\n                    if (branches === undefined) {\n                        branches = [];\n                    }\n\n                    branches?.push([\n                        context.wrapValue(evaluatedCondition),\n                        context.wrapValue(evaluatedBody)\n                    ]);\n\n                    if (!Expr.isExpr(evaluatedCondition) && Boolean(evaluatedCondition)) {\n                        // skip unreachble expressions\n                        return new CaseExpr(branches, LiteralExpr.fromValue(null));\n                    }\n                }\n\n                const fallback = context.evaluate(match.fallback);\n\n                return branches === undefined\n                    ? fallback\n                    : new CaseExpr(branches, context.wrapValue(fallback));\n            }\n        }\n\n        for (const [condition, body] of match.branches) {\n            if (context.evaluate(condition)) {\n                return context.evaluate(body);\n            }\n        }\n\n        return context.evaluate(match.fallback);\n    }\n\n    visitCallExpr(expr: CallExpr, context: ExprEvaluatorContext): Value {\n        const descriptor = expr.descriptor ?? operatorDescriptors.get(expr.op);\n\n        if (descriptor) {\n            expr.descriptor = descriptor;\n\n            let result: Value;\n\n            if (context.scope === ExprScope.Value && expr.isDynamic()) {\n                if (expr.descriptor.partialEvaluate) {\n                    return expr.descriptor.partialEvaluate(context, expr);\n                }\n\n                const args = expr.args.map(arg => {\n                    return context.wrapValue(context.evaluate(arg));\n                });\n\n                if (args.every((arg, i) => arg === expr.args[i])) {\n                    return expr;\n                }\n\n                result = new CallExpr(expr.op, args);\n            } else {\n                result = descriptor.call(context, expr);\n            }\n\n            return result;\n        }\n\n        throw new Error(`undefined operator '${expr.op}'`);\n    }\n\n    visitLookupExpr(expr: LookupExpr, context: ExprEvaluatorContext): Value {\n        // Same behaviour as call expressions.\n        return this.visitCallExpr(expr, context);\n    }\n\n    visitStepExpr(expr: StepExpr, context: ExprEvaluatorContext): Value {\n        if (context.scope === ExprScope.Value) {\n            const input = context.evaluate(expr.input);\n            const defaultValue = context.evaluate(expr.defaultValue);\n            return new StepExpr(\n                context.wrapValue(input),\n                context.wrapValue(defaultValue),\n                expr.stops.map(([key, value]) => {\n                    const v = context.evaluate(value);\n                    return [key, context.wrapValue(v)];\n                })\n            );\n        } else {\n            const input = context.evaluate(expr.input);\n\n            if (typeof input !== \"number\") {\n                throw new Error(`input '${input}' must be a number`);\n            }\n\n            if (input < expr.stops[0][0]) {\n                return context.evaluate(expr.defaultValue);\n            }\n\n            let index = expr.stops.findIndex(s => s[0] > input);\n\n            if (index === -1) {\n                index = expr.stops.length;\n            }\n\n            return context.evaluate(expr.stops[index - 1][1]);\n        }\n    }\n\n    visitInterpolateExpr(expr: InterpolateExpr, context: ExprEvaluatorContext): Value {\n        if (context.scope === ExprScope.Value) {\n            const input = context.evaluate(expr.input);\n            return new InterpolateExpr(\n                expr.mode,\n                context.wrapValue(input),\n                expr.stops.map(([key, value]) => {\n                    const v = context.evaluate(value);\n                    return [key, context.wrapValue(v)];\n                })\n            );\n        } else {\n            const param = context.evaluate(expr.input);\n\n            if (typeof param !== \"number\") {\n                throw new Error(`input must be a number`);\n            }\n\n            if (expr.mode[0] === \"cubic\") {\n                return cubicInterpolate(context, expr, param);\n            }\n\n            const keyIndex = expr.stops.findIndex(stop => stop[0] > param);\n\n            if (keyIndex === -1) {\n                // all the keys are smaller than the parameter\n                return context.evaluate(expr.stops[expr.stops.length - 1][1]);\n            } else if (keyIndex === 0) {\n                return context.evaluate(expr.stops[0][1]);\n            }\n\n            const [key, value] = expr.stops[keyIndex];\n            const [prevKey, prevValue] = expr.stops[keyIndex - 1];\n\n            const v0 = promoteValue(context, prevValue);\n\n            let t = 0;\n\n            switch (expr.mode[0]) {\n                case \"discrete\":\n                    return v0;\n\n                case \"linear\":\n                    t = (param - prevKey) / (key - prevKey);\n                    break;\n\n                case \"exponential\": {\n                    const base = expr.mode[1];\n                    t =\n                        base === 1\n                            ? (param - prevKey) / (key - prevKey)\n                            : (Math.pow(base, param - prevKey) - 1) /\n                              (Math.pow(base, key - prevKey) - 1);\n\n                    break;\n                }\n\n                default:\n                    throw new Error(\n                        `interpolation mode ${JSON.stringify(expr.mode)} is not supported`\n                    );\n            }\n\n            const v1 = promoteValue(context, value);\n\n            if (typeof v0 === \"number\" && typeof v1 === \"number\") {\n                return THREE.MathUtils.lerp(v0, v1, t);\n            } else if (v0 instanceof RGBA && v1 instanceof RGBA) {\n                return v0.clone().lerp(v1, t);\n            } else if (v0 instanceof Pixels && v1 instanceof Pixels) {\n                return new Pixels(THREE.MathUtils.lerp(v0.value, v1.value, t));\n            } else if (v0 instanceof THREE.Color && v1 instanceof THREE.Color) {\n                return v0.clone().lerp(v1, t);\n            } else if (v0 instanceof THREE.Vector2 && v1 instanceof THREE.Vector2) {\n                return v0.clone().lerp(v1, t);\n            } else if (v0 instanceof THREE.Vector3 && v1 instanceof THREE.Vector3) {\n                return v0.clone().lerp(v1, t);\n            } else if (v0 instanceof THREE.Vector4 && v1 instanceof THREE.Vector4) {\n                return v0.clone().lerp(v1, t);\n            } else if (Array.isArray(v0) && Array.isArray(v1) && v0.length === v1.length) {\n                return v0.map((x, i) => THREE.MathUtils.lerp(x, (v1 as number[])[i], t));\n            }\n\n            throw new Error(`todo: mix(${JSON.stringify(v0)}, ${JSON.stringify(v1)}, ${t})`);\n        }\n    }\n}\n\nExprEvaluator.defineOperators(CastOperators);\nExprEvaluator.defineOperators(ComparisonOperators);\nExprEvaluator.defineOperators(MathOperators);\nExprEvaluator.defineOperators(StringOperators);\nExprEvaluator.defineOperators(ColorOperators);\nExprEvaluator.defineOperators(TypeOperators);\nExprEvaluator.defineOperators(MiscOperators);\nExprEvaluator.defineOperators(FlowOperators);\nExprEvaluator.defineOperators(ArrayOperators);\nExprEvaluator.defineOperators(ObjectOperators);\nExprEvaluator.defineOperators(FeatureOperators);\nExprEvaluator.defineOperators(MapOperators);\nExprEvaluator.defineOperators(VectorOperators);\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env } from \"./Env\";\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    Expr,\n    ExprScope,\n    ExprVisitor,\n    HasAttributeExpr,\n    InterpolateExpr,\n    LiteralExpr,\n    LookupExpr,\n    MatchExpr,\n    MatchLabel,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StepExpr,\n    StringLiteralExpr,\n    VarExpr\n} from \"./Expr\";\n\nexport interface InstantiationContext {\n    /**\n     * The {@link Env} used to lookup for names.\n     */\n    env: Env;\n\n    /**\n     * The names to preserve during the instantiation.\n     */\n    preserve?: Set<string>;\n}\n\nconst emptyEnv = new Env();\n\n/**\n * @hidden\n */\nexport class ExprInstantiator implements ExprVisitor<Expr, InstantiationContext> {\n    visitNullLiteralExpr(expr: NullLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitVarExpr(expr: VarExpr, context: InstantiationContext): Expr {\n        if (context.preserve && context.preserve.has(expr.name)) {\n            return expr;\n        }\n        const value = context.env.lookup(expr.name);\n        return LiteralExpr.fromValue(value !== undefined ? value : null);\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: InstantiationContext): Expr {\n        if (context.preserve && context.preserve.has(expr.name)) {\n            return expr;\n        }\n        const value = context.env.lookup(expr.name) !== undefined;\n        return LiteralExpr.fromValue(value);\n    }\n\n    private visitCallExprImpl(\n        expr: CallExpr,\n        context: InstantiationContext,\n        constructor: (op: string, args: Expr[]) => CallExpr\n    ): Expr {\n        const args = expr.args.map(arg => arg.accept(this, context));\n        if (args.some((a, i) => a !== expr.args[i])) {\n            return constructor(expr.op, args);\n        }\n        return expr;\n    }\n\n    visitCallExpr(expr: CallExpr, context: InstantiationContext): Expr {\n        return this.visitCallExprImpl(expr, context, (op: string, args: Expr[]) => {\n            return new CallExpr(op, args);\n        });\n    }\n\n    visitLookupExpr(expr: LookupExpr, context: InstantiationContext): Expr {\n        return this.visitCallExprImpl(expr, context, (op: string, args: Expr[]) => {\n            return new LookupExpr(args);\n        });\n    }\n\n    visitMatchExpr(match: MatchExpr, context: InstantiationContext): Expr {\n        const value = match.value.accept(this, context);\n\n        if (value instanceof LiteralExpr) {\n            const r = value.value;\n            for (const [label, body] of match.branches) {\n                if (Array.isArray(label) && (label as any[]).includes(r)) {\n                    return body.accept(this, context);\n                } else if (label === r) {\n                    return body.accept(this, context);\n                }\n            }\n            return match.fallback.accept(this, context);\n        }\n\n        let changed = match.value !== value;\n\n        const branches: Array<[MatchLabel, Expr]> = match.branches.map(([label, branch]) => {\n            const newBranch = branch.accept(this, context);\n            if (newBranch !== branch) {\n                changed = true;\n            }\n            return [label, newBranch];\n        });\n\n        const fallback = match.fallback.accept(this, context);\n\n        if (fallback !== match.fallback) {\n            changed = true;\n        }\n\n        return changed ? new MatchExpr(value, branches, fallback) : match;\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: InstantiationContext): Expr {\n        const branches: Array<[Expr, Expr]> = [];\n\n        let changed = false;\n\n        for (const [condition, branch] of expr.branches) {\n            const newCondition = condition.accept(this, context);\n            const deps = newCondition.dependencies();\n            if (!condition.isDynamic() && deps.properties.size === 0) {\n                if (Boolean(newCondition.evaluate(emptyEnv, ExprScope.Condition))) {\n                    return branch.accept(this, context);\n                }\n            } else {\n                if (newCondition !== condition) {\n                    changed = true;\n                }\n                branches.push([newCondition, branch]);\n            }\n        }\n\n        if (branches.length === 0) {\n            // all the conditions of this CaseExpr evaluated\n            // to false, so the resulting of instantiating this CaseExpr\n            // is the same as instantiating its fallback expression.\n            return expr.fallback.accept(this, context);\n        }\n\n        if (branches.length !== expr.branches.length) {\n            // the number of branches changed, this means that\n            // some of the branches had constant expressions that\n            // evaluate to false. In this case the resulting\n            // `CaseExpr` has less branches.\n            changed = true;\n        }\n\n        // Instantiate the body of all the branches of this CaseExpr\n        // that have dynamic conditions.\n        branches.forEach(branch => {\n            const instantiatedBranch = branch[1].accept(this, context);\n\n            if (instantiatedBranch !== branch[1]) {\n                changed = true;\n            }\n\n            branch[1] = instantiatedBranch;\n        });\n\n        const fallback = expr.fallback.accept(this, context);\n\n        if (fallback !== expr.fallback) {\n            changed = true;\n        }\n\n        if (!changed) {\n            // nothing changed, return the old expression.\n            return expr;\n        }\n\n        return new CaseExpr(branches, fallback);\n    }\n\n    visitStepExpr(expr: StepExpr, context: InstantiationContext): Expr {\n        const input = expr.input.accept(this, context);\n        const defaultValue = expr.defaultValue.accept(this, context);\n        const stops: Array<[number, Expr]> = expr.stops.map(([key, value]) => [\n            key,\n            value.accept(this, context)\n        ]);\n        return new StepExpr(input, defaultValue, stops);\n    }\n\n    visitInterpolateExpr(expr: InterpolateExpr, context: InstantiationContext): Expr {\n        const input = expr.input.accept(this, context);\n        const stops: Array<[number, Expr]> = expr.stops.map(([key, value]) => [\n            key,\n            value.accept(this, context)\n        ]);\n        return new InterpolateExpr(expr.mode, input, stops);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    CallExpr,\n    EqualityOp,\n    Expr,\n    HasAttributeExpr,\n    LiteralExpr,\n    NumberLiteralExpr,\n    RelationalOp,\n    StringLiteralExpr,\n    VarExpr\n} from \"./Expr\";\n\n/**\n * Character value\n */\nenum Character {\n    Tab = 9,\n    Lf = 10,\n    Cr = 13,\n    Space = 32,\n    LParen = 40,\n    RParen = 41,\n    Comma = 44,\n    Dot = 46,\n    LBracket = 91,\n    Backslash = 92,\n    RBracket = 93,\n    _0 = 48,\n    _9 = 57,\n    _ = 95,\n    A = 64,\n    Z = 90,\n    a = 97,\n    z = 122,\n    DoubleQuote = 34,\n    SingleQuote = 39,\n    Exclaim = 33,\n    Equal = 61,\n    Caret = 94,\n    Tilde = 126,\n    Dollar = 36,\n    Less = 60,\n    Greater = 62,\n    Bar = 124,\n    Amp = 38\n}\n\n/**\n * Check if a codepoint is a whitespace character.\n */\nfunction isSpace(codepoint: number): boolean {\n    switch (codepoint) {\n        case Character.Tab:\n        case Character.Lf:\n        case Character.Cr:\n        case Character.Space:\n            return true;\n        default:\n            return false;\n    } // switch\n}\n\n/**\n * Check if codepoint is a digit character.\n */\nfunction isNumber(codepoint: number): boolean {\n    return codepoint >= Character._0 && codepoint <= Character._9;\n}\n\n/**\n * Check if codepoint is a letter character.\n */\nfunction isLetter(codepoint: number): boolean {\n    return (\n        (codepoint >= Character.a && codepoint <= Character.z) ||\n        (codepoint >= Character.A && codepoint <= Character.Z)\n    );\n}\n\n/**\n * Check if codepoint is either a digit or a letter character.\n */\nfunction isLetterOrNumber(codepoint: number): boolean {\n    return isLetter(codepoint) || isNumber(codepoint);\n}\n\n/**\n * Check if codepoint is an identification character: underscore, dollar sign, dot or bracket.\n */\nfunction isIdentChar(codepoint: number): boolean {\n    return (\n        isLetterOrNumber(codepoint) ||\n        codepoint === Character._ ||\n        codepoint === Character.Dollar ||\n        codepoint === Character.Dot ||\n        codepoint === Character.LBracket ||\n        codepoint === Character.RBracket\n    );\n}\n\n/**\n * Tokens used in theme grammar.\n */\nenum Token {\n    Eof = 0,\n    Error,\n    Identifier,\n    Number,\n    String,\n    Comma,\n    LParen,\n    RParen,\n    LBracket,\n    RBracket,\n    Exclaim,\n    TildeEqual,\n    CaretEqual,\n    DollarEqual,\n    EqualEqual,\n    ExclaimEqual,\n    Less,\n    Greater,\n    LessEqual,\n    GreaterEqual,\n    BarBar,\n    AmpAmp\n}\n\n/**\n * Maps a token to its string name.\n */\nfunction tokenSpell(token: Token): string {\n    switch (token) {\n        case Token.Eof:\n            return \"eof\";\n        case Token.Error:\n            return \"error\";\n        case Token.Identifier:\n            return \"identifier\";\n        case Token.Number:\n            return \"number\";\n        case Token.String:\n            return \"string\";\n        case Token.Comma:\n            return \",\";\n        case Token.LParen:\n            return \"(\";\n        case Token.RParen:\n            return \")\";\n        case Token.LBracket:\n            return \"[\";\n        case Token.RBracket:\n            return \"]\";\n        case Token.Exclaim:\n            return \"!\";\n        case Token.TildeEqual:\n            return \"~=\";\n        case Token.CaretEqual:\n            return \"^=\";\n        case Token.DollarEqual:\n            return \"$=\";\n        case Token.EqualEqual:\n            return \"==\";\n        case Token.ExclaimEqual:\n            return \"!=\";\n        case Token.Less:\n            return \"<\";\n        case Token.Greater:\n            return \">\";\n        case Token.LessEqual:\n            return \"<=\";\n        case Token.GreaterEqual:\n            return \">=\";\n        case Token.BarBar:\n            return \"||\";\n        case Token.AmpAmp:\n            return \"&&\";\n        default:\n            throw new Error(`invalid token ${token}`);\n    }\n}\n\n/**\n * Lexer class implementation.\n */\nclass Lexer {\n    private m_token: Token = Token.Error;\n    private m_index = 0;\n    private m_char: number = Character.Lf;\n    private m_text?: string;\n\n    constructor(readonly code: string) {}\n\n    /**\n     * Single lexer token.\n     */\n    token(): Token {\n        return this.m_token;\n    }\n\n    /**\n     * Parsed text.\n     */\n    text(): string {\n        return this.m_text ?? \"\";\n    }\n\n    /**\n     * Go to the next token.\n     */\n    next(): Token {\n        this.m_token = this.yylex();\n        if (this.m_token === Token.Error) {\n            throw new Error(`unexpected character ${this.m_char}`);\n        }\n        return this.m_token;\n    }\n\n    private yyinp(): void {\n        this.m_char = this.code.codePointAt(this.m_index++) ?? 0;\n    }\n\n    private yylex(): Token {\n        this.m_text = undefined;\n        while (isSpace(this.m_char)) {\n            this.yyinp();\n        }\n        if (this.m_char === 0) {\n            return Token.Eof;\n        }\n        const ch = this.m_char;\n        this.yyinp();\n        switch (ch) {\n            case Character.LParen:\n                return Token.LParen;\n            case Character.RParen:\n                return Token.RParen;\n            case Character.LBracket:\n                return Token.LBracket;\n            case Character.RBracket:\n                return Token.RBracket;\n            case Character.Comma:\n                return Token.Comma;\n            case Character.SingleQuote:\n            case Character.DoubleQuote: {\n                const start = this.m_index - 1;\n                while (this.m_char && this.m_char !== ch) {\n                    // ### TODO handle escape sequences\n                    this.yyinp();\n                }\n                if (this.m_char !== ch) {\n                    throw new Error(\"Unfinished string literal\");\n                }\n                this.yyinp();\n                this.m_text = this.code.substring(start, this.m_index - 2);\n                return Token.String;\n            }\n            case Character.Exclaim:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.ExclaimEqual;\n                }\n                return Token.Exclaim;\n            case Character.Caret:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.CaretEqual;\n                }\n                return Token.Error;\n            case Character.Tilde:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.TildeEqual;\n                }\n                return Token.Error;\n            case Character.Equal:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.EqualEqual;\n                }\n                return Token.Error;\n            case Character.Less:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.LessEqual;\n                }\n                return Token.Less;\n            case Character.Greater:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.GreaterEqual;\n                }\n                return Token.Greater;\n            case Character.Bar:\n                if (this.m_char === Character.Bar) {\n                    this.yyinp();\n                    return Token.BarBar;\n                }\n                return Token.Error;\n            case Character.Amp:\n                if (this.m_char === Character.Amp) {\n                    this.yyinp();\n                    return Token.AmpAmp;\n                }\n                return Token.Error;\n            default: {\n                const start = this.m_index - 2;\n                if (\n                    isLetter(ch) ||\n                    ch === Character._ ||\n                    (ch === Character.Dollar && isIdentChar(this.m_char))\n                ) {\n                    while (isIdentChar(this.m_char)) {\n                        this.yyinp();\n                    }\n                    this.m_text = this.code.substring(start, this.m_index - 1);\n                    return Token.Identifier;\n                } else if (isNumber(ch)) {\n                    while (isNumber(this.m_char)) {\n                        this.yyinp();\n                    }\n                    if (this.m_char === Character.Dot) {\n                        this.yyinp();\n                        while (isNumber(this.m_char)) {\n                            this.yyinp();\n                        }\n                    }\n                    this.m_text = this.code.substring(start, this.m_index - 1);\n                    return Token.Number;\n                } else if (ch === Character.Dollar) {\n                    if (this.m_char === Character.Equal) {\n                        this.yyinp();\n                        return Token.DollarEqual;\n                    }\n                    return Token.Error;\n                }\n            }\n        }\n        return Token.Error;\n    }\n}\n\nfunction getEqualityOp(token: Token): EqualityOp | undefined {\n    switch (token) {\n        case Token.TildeEqual:\n            return \"~=\";\n        case Token.CaretEqual:\n            return \"^=\";\n        case Token.DollarEqual:\n            return \"$=\";\n        case Token.EqualEqual:\n            return \"==\";\n        case Token.ExclaimEqual:\n            return \"!=\";\n        default:\n            return undefined;\n    } // switch\n}\n\nfunction getRelationalOp(token: Token): RelationalOp | undefined {\n    switch (token) {\n        case Token.Less:\n            return \"<\";\n        case Token.Greater:\n            return \">\";\n        case Token.LessEqual:\n            return \"<=\";\n        case Token.GreaterEqual:\n            return \">=\";\n        default:\n            return undefined;\n    } // switch\n}\n\nexport class ExprParser {\n    private readonly lex: Lexer;\n\n    constructor(code: string) {\n        this.lex = new Lexer(code);\n        this.lex.next();\n    }\n\n    parse(): Expr | never {\n        return this.parseLogicalOr();\n    }\n\n    private yyexpect(token: Token): void | never {\n        if (this.lex.token() !== token) {\n            throw new Error(\n                `Syntax error: Expected token '${tokenSpell(token)}' but ` +\n                    `found '${tokenSpell(this.lex.token())}'`\n            );\n        }\n        this.lex.next();\n    }\n\n    private parsePrimary(): Expr | never {\n        switch (this.lex.token()) {\n            case Token.Identifier: {\n                const text = this.lex.text();\n                switch (text) {\n                    case \"has\":\n                        this.lex.next(); // skip has keyword\n                        this.yyexpect(Token.LParen);\n                        const hasAttribute = this.lex.text();\n                        this.yyexpect(Token.Identifier);\n                        this.yyexpect(Token.RParen);\n                        return new HasAttributeExpr(hasAttribute);\n                    case \"length\":\n                        this.lex.next(); // skip length keyword\n                        this.yyexpect(Token.LParen);\n                        const value = this.parseLogicalOr();\n                        this.yyexpect(Token.RParen);\n                        return new CallExpr(\"length\", [value]);\n                    default:\n                        const expr = new VarExpr(text);\n                        this.lex.next();\n                        return expr;\n                }\n            }\n\n            case Token.LParen: {\n                this.lex.next();\n                const expr = this.parseLogicalOr();\n                this.yyexpect(Token.RParen);\n                return expr;\n            }\n\n            default:\n                return this.parseLiteral();\n        } // switch\n    }\n\n    private parseLiteral(): NumberLiteralExpr | StringLiteralExpr | never {\n        switch (this.lex.token()) {\n            case Token.Number: {\n                const expr = new NumberLiteralExpr(parseFloat(this.lex.text()));\n                this.lex.next();\n                return expr;\n            }\n            case Token.String: {\n                const expr = new StringLiteralExpr(this.lex.text());\n                this.lex.next();\n                return expr;\n            }\n            default:\n                throw new Error(\"Syntax error\");\n        } // switch\n    }\n\n    private parseUnary(): Expr | never {\n        if (this.lex.token() === Token.Exclaim) {\n            this.lex.next();\n            return new CallExpr(\"!\", [this.parseUnary()]);\n        }\n        return this.parsePrimary();\n    }\n\n    private parseRelational(): Expr | never {\n        let expr = this.parseUnary();\n        while (true) {\n            if (this.lex.token() === Token.Identifier && this.lex.text() === \"in\") {\n                this.lex.next();\n                this.yyexpect(Token.LBracket);\n                const elements = [this.parseLiteral()];\n                while (this.lex.token() === Token.Comma) {\n                    this.lex.next();\n                    elements.push(this.parseLiteral());\n                }\n                this.yyexpect(Token.RBracket);\n                expr = new CallExpr(\"in\", [\n                    expr,\n                    LiteralExpr.fromValue(elements.map(({ value }) => value))\n                ]);\n            } else {\n                const op = getRelationalOp(this.lex.token());\n                if (op === undefined) {\n                    break;\n                }\n                this.lex.next();\n                const right = this.parseUnary();\n                expr = new CallExpr(op, [expr, right]);\n            }\n        }\n        return expr;\n    }\n\n    private parseEquality(): Expr | never {\n        let expr = this.parseRelational();\n        while (true) {\n            let op: string | undefined = getEqualityOp(this.lex.token());\n\n            if (op === undefined) {\n                break;\n            }\n\n            if (op === \"~=\") {\n                op = \"in\";\n            }\n\n            this.lex.next();\n            const right = this.parseRelational();\n            expr = new CallExpr(op, [expr, right]);\n        }\n        return expr;\n    }\n\n    private parseLogicalAnd(): Expr | never {\n        const expr = this.parseEquality();\n\n        if (this.lex.token() !== Token.AmpAmp) {\n            return expr;\n        }\n\n        const expressions: Expr[] = [expr];\n\n        do {\n            this.lex.next();\n            expressions.push(this.parseEquality());\n        } while (this.lex.token() === Token.AmpAmp);\n\n        return new CallExpr(\"all\", expressions);\n    }\n\n    private parseLogicalOr(): Expr | never {\n        const expr = this.parseLogicalAnd();\n\n        if (this.lex.token() !== Token.BarBar) {\n            return expr;\n        }\n\n        const expressions: Expr[] = [expr];\n\n        do {\n            this.lex.next();\n            expressions.push(this.parseLogicalAnd());\n        } while (this.lex.token() === Token.BarBar);\n\n        return new CallExpr(\"any\", expressions);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Value } from \"./Env\";\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    Expr,\n    ExprVisitor,\n    HasAttributeExpr,\n    InterpolateExpr,\n    LookupExpr,\n    MatchExpr,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StepExpr,\n    StringLiteralExpr,\n    VarExpr\n} from \"./Expr\";\n\n/**\n * [[ExprPool]] maintains a set of unique interned {@link Expr} objects.\n *\n * @hidden\n */\nexport class ExprPool implements ExprVisitor<Expr, void> {\n    private readonly m_booleanLiterals = new Map<boolean, BooleanLiteralExpr>();\n    private readonly m_numberLiterals = new Map<number, NumberLiteralExpr>();\n    private readonly m_stringLiterals = new Map<string, StringLiteralExpr>();\n    private readonly m_objectLiterals = new Map<object, ObjectLiteralExpr>();\n    private readonly m_arrayLiterals: ObjectLiteralExpr[] = [];\n    private readonly m_varExprs = new Map<string, VarExpr>();\n    private readonly m_hasAttributeExprs = new Map<string, HasAttributeExpr>();\n    private readonly m_matchExprs: MatchExpr[] = [];\n    private readonly m_caseExprs: CaseExpr[] = [];\n    private readonly m_interpolateExprs: InterpolateExpr[] = [];\n    private readonly m_stepExprs: StepExpr[] = [];\n    private readonly m_callExprs = new Map<string, CallExpr[]>();\n\n    /**\n     * Add `expr` to this [[ExprPool]] and return a unique {@link Expr}\n     * object that is structurally equivalent to `expr`.\n     *\n     * @param expr - The {@link Expr} to add to this [[ExprPool]].\n     * @returns A unique {@link Expr} that is structurally equivalent to `expr`.\n     */\n    add(expr: Expr): Expr {\n        return expr.accept(this, undefined);\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: void): Expr {\n        return NullLiteralExpr.instance;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: void): Expr {\n        const e = this.m_booleanLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_booleanLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: void): Expr {\n        const e = this.m_numberLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_numberLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: void): Expr {\n        const e = this.m_stringLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_stringLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: void): Expr {\n        const e = this.m_objectLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n\n        if (Array.isArray(expr.value)) {\n            const array = expr.value as Value[];\n\n            const r = this.m_arrayLiterals.find(literal => {\n                const elements = literal.value as Value[];\n                if (elements.length !== array.length) {\n                    return false;\n                }\n                return array.every((x, i) => x === elements[i]);\n            });\n\n            if (r !== undefined) {\n                return r;\n            }\n\n            this.m_arrayLiterals.push(expr);\n        }\n\n        this.m_objectLiterals.set(expr.value, expr);\n\n        return expr;\n    }\n\n    visitVarExpr(expr: VarExpr, context: void): Expr {\n        const e = this.m_varExprs.get(expr.name);\n        if (e) {\n            return e;\n        }\n        this.m_varExprs.set(expr.name, expr);\n        return expr;\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: void): Expr {\n        const e = this.m_hasAttributeExprs.get(expr.name);\n        if (e) {\n            return e;\n        }\n        this.m_hasAttributeExprs.set(expr.name, expr);\n        return expr;\n    }\n\n    visitMatchExpr(expr: MatchExpr, context: void): Expr {\n        const value = expr.value.accept(this, context);\n        const branches: typeof expr.branches = expr.branches.map(([label, body]) => [\n            label,\n            body.accept(this, context)\n        ]);\n        const fallback = expr.fallback.accept(this, context);\n        for (const candidate of this.m_matchExprs) {\n            if (candidate.value !== value) {\n                continue;\n            }\n            if (candidate.fallback !== fallback) {\n                continue;\n            }\n            if (candidate.branches.length !== branches.length) {\n                continue;\n            }\n            let branchesMatching = true;\n            for (let i = 0; i < branches.length; i++) {\n                if (\n                    branches[i][0] !== candidate.branches[i][0] ||\n                    branches[i][1] !== candidate.branches[i][1]\n                ) {\n                    branchesMatching = false;\n                    break;\n                }\n            }\n            if (branchesMatching) {\n                return candidate;\n            }\n        }\n        const r = new MatchExpr(value, branches, fallback);\n        this.m_matchExprs.push(r);\n        return r;\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: void): Expr {\n        const branches: typeof expr.branches = expr.branches.map(([condition, body]) => [\n            condition.accept(this, context),\n            body.accept(this, context)\n        ]);\n        const fallback = expr.fallback.accept(this, context);\n\n        for (const candidate of this.m_caseExprs) {\n            if (candidate.fallback !== fallback) {\n                continue;\n            }\n            if (candidate.branches.length !== branches.length) {\n                continue;\n            }\n            let branchesMatching = true;\n            for (let i = 0; i < branches.length; i++) {\n                if (\n                    branches[i][0] !== candidate.branches[i][0] ||\n                    branches[i][1] !== candidate.branches[i][1]\n                ) {\n                    branchesMatching = false;\n                    break;\n                }\n            }\n            if (branchesMatching) {\n                return candidate;\n            }\n        }\n\n        const r = new CaseExpr(branches, fallback);\n        this.m_caseExprs.push(r);\n        return r;\n    }\n\n    private visitCallExprImpl(\n        expr: CallExpr,\n        context: void,\n        constructor: (op: string, args: Expr[]) => CallExpr\n    ): Expr {\n        // rewrite the actual arguments\n        const expressions = expr.args.map(childExpr => childExpr.accept(this, context));\n        // ensure we have a valid set of interned expressions for the calls\n        if (!this.m_callExprs.has(expr.op)) {\n            this.m_callExprs.set(expr.op, []);\n        }\n        // get the calls for the given operator.\n        const calls = this.m_callExprs.get(expr.op)!;\n        for (const call of calls) {\n            // check the number of arguments\n            if (call.args.length !== expressions.length) {\n                continue;\n            }\n            // find the index of the first mismatch.\n            let index = 0;\n            for (; index < call.args.length; ++index) {\n                if (call.args[index] !== expressions[index]) {\n                    break;\n                }\n            }\n            if (index === call.args.length) {\n                // no mismatch found, return the 'interned' call.\n                return call;\n            }\n        }\n        const e = constructor(expr.op, expressions);\n        e.descriptor = expr.descriptor;\n        calls.push(e);\n        return e;\n    }\n\n    visitCallExpr(expr: CallExpr, context: void): Expr {\n        return this.visitCallExprImpl(expr, context, (op: string, args: Expr[]) => {\n            return new CallExpr(op, args);\n        });\n    }\n\n    visitLookupExpr(expr: LookupExpr, context: void): Expr {\n        return this.visitCallExprImpl(expr, context, (op: string, args: Expr[]) => {\n            return new LookupExpr(args);\n        });\n    }\n\n    visitStepExpr(expr: StepExpr, context: void): Expr {\n        if (this.m_stepExprs.includes(expr)) {\n            return expr;\n        }\n        const input = expr.input.accept(this, context);\n        const defaultValue = expr.defaultValue.accept(this, context);\n        const stops: Array<[number, Expr]> = expr.stops.map(stop => {\n            const key = stop[0];\n            const value = stop[1].accept(this, context);\n            return value === stop[1] ? stop : [key, value];\n        });\n        for (const step of this.m_stepExprs) {\n            if (\n                step.input === input &&\n                step.defaultValue === defaultValue &&\n                stops.length === step.stops.length &&\n                stops.every(\n                    ([key, value], i) => key === step.stops[i][0] && value === step.stops[i][1]\n                )\n            ) {\n                return step;\n            }\n        }\n        const e = new StepExpr(input, defaultValue, stops);\n        this.m_stepExprs.push(e);\n        return e;\n    }\n\n    visitInterpolateExpr(expr: InterpolateExpr, context: void): Expr {\n        if (this.m_interpolateExprs.includes(expr)) {\n            return expr;\n        }\n        const input = expr.input.accept(this, context);\n        const stops: Array<[number, Expr]> = expr.stops.map(stop => {\n            const key = stop[0];\n            const value = stop[1].accept(this, context);\n            return value === stop[1] ? stop : [key, value];\n        });\n        for (const interp of this.m_interpolateExprs) {\n            if (\n                interp.input === input &&\n                interp.mode[0] === expr.mode[0] &&\n                interp.mode[1] === expr.mode[1] &&\n                stops.length === interp.stops.length &&\n                stops.every(\n                    ([key, value], i) => key === interp.stops[i][0] && value === interp.stops[i][1]\n                )\n            ) {\n                return interp;\n            }\n        }\n        const e = new InterpolateExpr(expr.mode, input, stops);\n        this.m_interpolateExprs.push(e);\n        return e;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Feature details contains `feature.id`, `feature.properties.featureClass` which provides\n * possibility to define style in theme for particular feature.\n */\nexport interface FeatureDetails {\n    featureId?: string;\n    featureClass?: string;\n}\n\n/**\n * Represents \"Point\" GeoJSON geometry object.\n */\nexport interface Point {\n    type: \"Point\";\n    coordinates: number[];\n}\n\n/**\n * Represents \"MultiPoint\" GeoJSON geometry object.\n */\nexport interface MultiPoint {\n    type: \"MultiPoint\";\n    coordinates: number[][];\n}\n\n/**\n * Represents \"LineString\" GeoJSON geometry object.\n */\nexport interface LineString {\n    type: \"LineString\";\n    coordinates: number[][];\n}\n\n/**\n * Represents \"MultiLineString\" GeoJSON geometry object.\n */\nexport interface MultiLineString {\n    type: \"MultiLineString\";\n    coordinates: number[][][];\n}\n\n/**\n * Represents \"Polygon\" GeoJSON geometry object.\n */\nexport interface Polygon {\n    type: \"Polygon\";\n    coordinates: number[][][];\n}\n\n/**\n * Represents \"MultiPolygon\" GeoJSON geometry object.\n */\nexport interface MultiPolygon {\n    type: \"MultiPolygon\";\n    coordinates: number[][][][];\n}\n\n/**\n * Represents \"geometry\" property of \"Feature\" GeoJSON object.\n */\nexport type FeatureGeometry =\n    | Point\n    | MultiPoint\n    | LineString\n    | MultiLineString\n    | Polygon\n    | MultiPolygon;\n\nexport function isFeatureGeometry(object: any): object is FeatureGeometry {\n    const t = object.type;\n    return (\n        t === \"Point\" ||\n        t === \"MultiPoint\" ||\n        t === \"LineString\" ||\n        t === \"MultiLineString\" ||\n        t === \"Polygon\" ||\n        t === \"MultiPolygon\"\n    );\n}\n\n/**\n * Represents \"GeometryCollection\" GeoJSON geometry object.\n */\nexport interface GeometryCollection {\n    type: \"GeometryCollection\";\n    geometries: FeatureGeometry[];\n}\n\n/**\n * Represents \"Feature\" GeoJSON object.\n */\nexport interface Feature {\n    type: \"Feature\";\n    bbox?: number[];\n    id?: string;\n    geometry: FeatureGeometry | GeometryCollection;\n    properties?: any;\n    title?: string;\n}\n\n/**\n * Represents \"FeatureCollection\" GeoJSON object.\n */\nexport interface FeatureCollection {\n    type: \"FeatureCollection\";\n    features: Feature[];\n}\n\n/**\n * Represents a GeoJSON object.\n */\nexport type GeoJson = FeatureGeometry | GeometryCollection | Feature | FeatureCollection;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Group } from \"./DecodedTile\";\n\nexport interface IMeshBuffers {\n    /**\n     * Array that stores the vertices of the mesh.\n     */\n    readonly positions: number[];\n\n    /**\n     * Array of [[Group]], used to defines multiple geometries sharing the same position attribute.\n     */\n    readonly groups: Group[];\n\n    /**\n     * Array that stores the indices of the mesh.\n     */\n    readonly indices: number[];\n\n    /**\n     * Array that stores the indices of the mesh edges.\n     */\n    readonly edgeIndices: number[];\n\n    /**\n     * Optional list of feature start indices. The indices point into the index attribute.\n     */\n    readonly featureStarts: number[];\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TileKey } from \"@here/harp-geoutils\";\n\nimport { GeoJson } from \"../lib/GeoJsonDataType\";\n\n/**\n * General type tiler which can be used to provide tile untiled payloads.\n */\nexport interface ITiler {\n    /**\n     * Connect to tiler.\n     *\n     * Should be implemented by implementations that use special resources that decode jobs like\n     * WebWorkers.\n     */\n    connect(): Promise<void>;\n\n    /**\n     * Register index in the tiler. Indexes registered in the tiler can be later used to retrieved\n     * tiled payloads using `getTile`.\n     *\n     * @param indexId - Index identifier.\n     * @param indexUrl - Url to the index payload, or direct GeoJson.\n     */\n    registerIndex(indexId: string, indexUrl: URL | GeoJson): Promise<void>;\n\n    /**\n     * Update index in the tiler. Indexes registered in the tiler can be later used to retrieved\n     * tiled payloads using `getTile`.\n     *\n     * @param indexId - Index identifier.\n     * @param indexUrl - Url to the index payload, or direct GeoJson.\n     */\n    updateIndex(indexId: string, indexUrl: URL | GeoJson): Promise<void>;\n\n    /**\n     * Retrieves a tile for a previously registered index.\n     *\n     * @param indexId - Index identifier.\n     * @param tileKey - The [[TileKey]] that identifies the tile.\n     */\n    getTile(indexId: string, tileKey: TileKey): Promise<{}>;\n\n    /**\n     * Free all resources associated with this tiler.\n     *\n     * Called by users when decoder is no longer used and all resources must be freed.\n     */\n    dispose(): void;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { JsonExpr } from \"./Expr\";\n\n/**\n * Interpolation mode used when computing a [[InterpolatedProperty]] value for a given zoom level.\n * @internal\n */\nexport enum InterpolationMode {\n    Discrete,\n    Linear,\n    Cubic,\n    Exponential\n}\n\n/**\n * Interpolated property could have its value (some initial value should be provided) changed\n * according to an interpolation type.\n *\n * Here is an example of an interpolated property from a map style:\n * \"lineWidth\": {\n *  \"interpolation\": \"Linear\",\n *  \"zoomLevels\": [13, 14, 15],\n *  \"values\": [ 1.5, 1.2, 0.9]\n * }\n * @internal\n */\nexport interface InterpolatedPropertyDefinition<T> {\n    interpolation?: \"Discrete\" | \"Linear\" | \"Cubic\" | \"Exponential\";\n    zoomLevels: number[];\n    values: T[];\n    exponent?: number;\n}\n\n/**\n * Checks if a property is interpolated.\n * @param p - property to be checked\n * @internal\n */\nexport function isInterpolatedPropertyDefinition<T>(\n    p: any\n): p is InterpolatedPropertyDefinition<T> {\n    if (\n        p &&\n        p.interpolationMode === undefined &&\n        Array.isArray(p.values) &&\n        p.values.length > 0 &&\n        p.values[0] !== undefined &&\n        Array.isArray(p.zoomLevels) &&\n        p.zoomLevels.length > 0 &&\n        p.zoomLevels[0] !== undefined &&\n        p.values.length === p.zoomLevels.length\n    ) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Converts an [[InterpolatedPropertyDefinition]] to a [[JsonExpr]].\n *\n * @param property - A valid [[InterpolatedPropertyDefinition]]\n */\nexport function interpolatedPropertyDefinitionToJsonExpr(\n    property: InterpolatedPropertyDefinition<any>\n): JsonExpr {\n    if (property.interpolation === undefined || property.interpolation === \"Discrete\") {\n        const step: JsonExpr = [\"step\", [\"zoom\"], property.values[0]];\n        for (let i = 1; i < property.zoomLevels.length; ++i) {\n            step.push(property.zoomLevels[i], property.values[i]);\n        }\n        return step;\n    }\n    const interpolation: JsonExpr = [\"interpolate\"];\n    switch (property.interpolation) {\n        case \"Linear\":\n            interpolation.push([\"linear\"]);\n            break;\n        case \"Cubic\":\n            interpolation.push([\"cubic\"]);\n            break;\n        case \"Exponential\":\n            interpolation.push([\n                \"exponential\",\n                property.exponent !== undefined ? property.exponent : 2\n            ]);\n            break;\n        default:\n            throw new Error(`interpolation mode '${property.interpolation}' is not supported`);\n    } //switch\n    interpolation.push([\"zoom\"]);\n    for (let i = 0; i < property.zoomLevels.length; ++i) {\n        interpolation.push(property.zoomLevels[i], property.values[i]);\n    }\n    return interpolation;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nconst currEdgeStart = new THREE.Vector2();\nconst currEdgeGoal = new THREE.Vector2();\nconst prevEdgeStart = new THREE.Vector2();\nconst prevEdgeGoal = new THREE.Vector2();\n\n/**\n * Fills an index buffer with the indices for the edges of a polygon contour.\n *\n * @param indexBuffer - Edge index buffer to be filled.\n * @param vertexOffset - Starting offset of the vertices composing the contour.\n * @param vertexStride - Number of elements per contour vertex.\n * @param polygonContour - Vertices that compose the contour.\n * @param polygonContourEdges - Collection of booleans indicating if contour edges should be added.\n */\nexport function addPolygonEdges(\n    indexBuffer: number[],\n    vertexOffset: number,\n    vertexStride: number,\n    polygonContour: number[],\n    polygonContourEdges: boolean[],\n    isExtruded?: boolean,\n    addFootprintEdges?: boolean,\n    wallEdgeSlope?: number\n) {\n    for (let i = 0; i < polygonContourEdges.length; ++i) {\n        if (polygonContourEdges[i]) {\n            if (isExtruded === true) {\n                const vFootprint0 = vertexOffset + i * 2;\n                const vRoof0 = vFootprint0 + 1;\n                const vFootprint1 = vertexOffset + ((i + 1) % polygonContourEdges.length) * 2;\n                const vRoof1 = vFootprint1 + 1;\n\n                if (addFootprintEdges === true) {\n                    indexBuffer.push(vFootprint0, vFootprint1);\n                }\n                indexBuffer.push(vRoof0, vRoof1);\n\n                const prevEdgeIdx = (i === 0 ? polygonContourEdges.length : i) - 1;\n                if (polygonContourEdges[prevEdgeIdx]) {\n                    if (wallEdgeSlope !== undefined) {\n                        const v0x = polygonContour[i * vertexStride];\n                        const v0y = polygonContour[i * vertexStride + 1];\n                        const v1x =\n                            polygonContour[((i + 1) % polygonContourEdges.length) * vertexStride];\n                        const v1y =\n                            polygonContour[\n                                ((i + 1) % polygonContourEdges.length) * vertexStride + 1\n                            ];\n\n                        currEdgeStart.set(v0x, v0y);\n                        currEdgeGoal.set(v1x, v1y);\n                        prevEdgeStart.set(\n                            polygonContour[prevEdgeIdx * vertexStride],\n                            polygonContour[prevEdgeIdx * vertexStride + 1]\n                        );\n                        prevEdgeGoal.set(currEdgeStart.x, currEdgeStart.y);\n\n                        if (\n                            prevEdgeGoal\n                                .sub(prevEdgeStart)\n                                .normalize()\n                                .dot(currEdgeGoal.sub(currEdgeStart).normalize()) <= wallEdgeSlope\n                        ) {\n                            indexBuffer.push(vFootprint0, vRoof0);\n                        }\n                    } else {\n                        indexBuffer.push(vFootprint0, vRoof0);\n                    }\n                }\n            } else {\n                const vFoot0 = vertexOffset + i;\n                const vRoof0 = vertexOffset + ((i + 1) % polygonContourEdges.length);\n                indexBuffer.push(vFoot0, vRoof0);\n            }\n        }\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nconst RX = /^((?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*))px$/;\n\n/**\n * A class representing Pixels.\n *\n * @hidden\n * @internal\n */\nexport class Pixels {\n    /**\n     * Parses a pixel string literal.\n     *\n     * @param text - The string color literal\n     */\n    static parse(text: string): Pixels | undefined {\n        const match = RX.exec(text);\n        if (match === null) {\n            return undefined;\n        }\n        return new Pixels(Number(match[1]));\n    }\n\n    /**\n     * Constructs a [[Pixels]] literal\n     *\n     * @param value - The number of pixels.\n     */\n    constructor(readonly value: number) {}\n\n    toJSON() {\n        return `${this.value}px`;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport interface PostEffects {\n    bloom?: IBloomEffect;\n    outline?: IOutlineEffect;\n    vignette?: IVignetteEffect;\n    sepia?: ISepiaEffect;\n}\n\nexport interface IOutlineEffect {\n    enabled: boolean;\n    /**\n     * Make the extruded polygon disappear.\n     */\n    ghostExtrudedPolygons: boolean;\n    thickness: number;\n    color: string;\n}\n\nexport interface IBloomEffect {\n    strength: number;\n    /**\n     * Pixel's brightness threshold between 0 and 1, from which the bloom should apply.\n     */\n    threshold: number;\n    radius: number;\n    enabled: boolean;\n}\n\nexport interface IVignetteEffect {\n    enabled: boolean;\n    offset: number;\n    darkness: number;\n}\n\nexport interface ISepiaEffect {\n    enabled: boolean;\n    amount: number;\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LoggerManager } from \"@here/harp-utils\";\n\nimport { Env } from \"./Env\";\nimport { Expr, ExprScope, Value } from \"./Expr\";\nimport { Pixels } from \"./Pixels\";\nimport { RGBA } from \"./RGBA\";\nimport { parseStringEncodedNumeral } from \"./StringEncodedNumeral\";\n\nconst logger = LoggerManager.instance.create(\"PropertyValue\");\n\n/**\n * Get the value of the specified property in given `env`.\n *\n * @param property - Property of a technique.\n * @param env - The {@link Env} used to evaluate the property\n * @param cache - An optional expression cache.\n */\nexport function getPropertyValue(\n    property: Value | undefined,\n    env: Env,\n    cache?: Map<Expr, Value>\n): any {\n    if (Expr.isExpr(property)) {\n        try {\n            let r = property.evaluate(env, ExprScope.Dynamic, cache);\n\n            if (typeof r === \"string\") {\n                r = RGBA.parse(r) ?? Pixels.parse(r) ?? r;\n            }\n\n            if (r instanceof RGBA) {\n                return r.getHex();\n            } else if (r instanceof Pixels) {\n                return r.value * (Number(env.lookup(\"$pixelToMeters\")) ?? 1);\n            }\n            return r;\n        } catch (error) {\n            logger.error(\n                \"failed to evaluate expression\",\n                JSON.stringify(property),\n                \"error\",\n                String(error)\n            );\n            return null;\n        }\n    }\n\n    if (property === null || typeof property === \"undefined\") {\n        return null;\n    } else if (typeof property !== \"string\") {\n        // Property in numeric or array, etc. format\n        return property;\n    } else {\n        // Non-interpolated string encoded numeral parsing\n        const pixelToMeters = (env.lookup(\"$pixelToMeters\") as number) || 1;\n        const value = parseStringEncodedNumeral(property, pixelToMeters);\n        return value !== undefined ? value : property;\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { MathUtils } from \"three\";\n\nimport { ColorUtils } from \"./ColorUtils\";\nimport { parseStringEncodedColor } from \"./StringEncodedNumeral\";\n\n/**\n * A class representing RGBA colors.\n *\n * @hidden\n * @internal\n */\nexport class RGBA {\n    /**\n     * Parses a string describing a color.\n     *\n     * @param text - The string color literal\n     */\n    static parse(text: string) {\n        const color = parseStringEncodedColor(text);\n\n        if (color === undefined) {\n            return undefined;\n        }\n\n        return ColorUtils.getRgbaFromHex(color);\n    }\n\n    /**\n     * Constructs a [[RGBA]] color using the given components in the [0..1] range.\n     */\n    constructor(\n        public r: number = 1,\n        public g: number = 1,\n        public b: number = 1,\n        public a: number = 1\n    ) {}\n\n    /**\n     * Clones this [[RGBA]] color.\n     */\n    clone() {\n        return new RGBA(this.r, this.g, this.b, this.a);\n    }\n\n    /**\n     * Returns this color encoded as one single number.\n     */\n    getHex() {\n        return ColorUtils.getHexFromRgba(this.r, this.g, this.b, this.a);\n    }\n\n    /**\n     * Linearly interpolate the components of this color.\n     */\n    lerp(target: RGBA, t: number) {\n        this.r = MathUtils.lerp(this.r, target.r, t);\n        this.g = MathUtils.lerp(this.g, target.g, t);\n        this.b = MathUtils.lerp(this.b, target.b, t);\n        this.a = MathUtils.lerp(this.a, target.a, t);\n        return this;\n    }\n\n    /**\n     * Returns this color encoded as JSON literal.\n     */\n    toJSON() {\n        return `rgba(${(this.r * 255) << 0}, ${(this.g * 255) << 0}, ${(this.b * 255) << 0}, ${\n            this.a\n        })`;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { assert } from \"@here/harp-utils\";\n//@ts-ignore\nimport { parseCSSColor } from \"csscolorparser\";\n\nimport { ColorUtils } from \"./ColorUtils\";\n\n/**\n * Enumeration of supported string encoded numerals.\n * @internal\n */\nexport enum StringEncodedNumeralType {\n    Meters,\n    Pixels,\n    Hex\n}\n\n/**\n * Interface containing information about a [[StringEncodedNumeral]] format, component size and\n * evaluation.\n * @internal\n */\nexport interface StringEncodedNumeralFormat {\n    readonly type: StringEncodedNumeralType;\n    readonly size: number;\n    readonly regExp: RegExp;\n    mask?: number;\n    decoder: (encodedValue: string, target: number[]) => boolean;\n}\nconst StringEncodedMeters: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.Meters,\n    size: 1,\n    regExp: /^((?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*))m$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const match = StringEncodedMeters.regExp.exec(encodedValue);\n        return match ? (target[0] = Number(match[1])) !== undefined : false;\n    }\n};\nconst StringEncodedPixels: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.Pixels,\n    size: 1,\n    mask: 1.0,\n    regExp: /^((?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*))px$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const match = StringEncodedPixels.regExp.exec(encodedValue);\n        if (match === null) {\n            return false;\n        }\n        target[0] = Number(match[1]);\n        return true;\n    }\n};\nconst StringEncodedHex: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.Hex,\n    size: 4,\n    regExp: /^\\#((?:[0-9A-Fa-f][0-9A-Fa-f]){4}|[0-9A-Fa-f]{4})$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const match = StringEncodedHex.regExp.exec(encodedValue);\n        if (match === null) {\n            return false;\n        }\n        const hex = match[1];\n        const size = hex.length;\n        // Only few sizes are possible for given reg-exp.\n        assert(size === 4 || size === 8, `Matched incorrect hex color format`);\n        // Note that we simply ignore alpha channel value.\n        // TODO: To be resolved with HARP-7517\n        if (size === 4) {\n            // #RGB or #RGBA\n            target[0] = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n            target[1] = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n            target[2] = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n            target[3] = size === 4 ? parseInt(hex.charAt(3) + hex.charAt(3), 16) / 255 : 1;\n        } else if (size === 8) {\n            // #RRGGBB or #RRGGBBAA\n            target[0] = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n            target[1] = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n            target[2] = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n            target[3] = size === 8 ? parseInt(hex.charAt(6) + hex.charAt(7), 16) / 255 : 1;\n        }\n        return true;\n    }\n};\n\n/**\n * Array of all supported [[StringEncodedNumeralFormat]]s describing sizes, lengths and distances.\n * @internal\n */\nexport const StringEncodedMetricFormats: StringEncodedNumeralFormat[] = [\n    StringEncodedMeters,\n    StringEncodedPixels\n];\n\nconst StringEncodedMetricFormatMaxSize = StringEncodedMetricFormats.reduce(\n    (a, b) => Math.max(a, b.size),\n    0\n);\n\n/**\n * Array of all supported [[StringEncodedNumeralFormat]]s describing color data.\n * @internal\n */\nexport const StringEncodedColorFormats: StringEncodedNumeralFormat[] = [StringEncodedHex];\n\nconst StringEncodedColorFormatMaxSize = StringEncodedColorFormats.reduce(\n    (a, b) => Math.max(a, b.size),\n    0\n);\n\n/**\n * Array of supported [[StringEncodedNumeralFormat]]s (intended to be indexed with\n * [[StringEncodedNumeralType]] enum).\n * @internal\n */\nexport const StringEncodedNumeralFormats: StringEncodedNumeralFormat[] = [\n    ...StringEncodedMetricFormats,\n    ...StringEncodedColorFormats\n];\n\n/**\n * @internal\n */\nexport const StringEncodedNumeralFormatMaxSize = Math.max(\n    StringEncodedColorFormatMaxSize,\n    StringEncodedMetricFormatMaxSize\n);\n\nconst tmpBuffer: number[] = new Array(StringEncodedNumeralFormatMaxSize);\n\n/**\n * Parse string encoded numeral values using all known [[StringEncodedNumeralFormats]].\n *\n * @param numeral - The string representing numeric value.\n * @param pixelToMeters - The ratio used to convert from meters to pixels (default 1.0).\n * @returns Number parsed or __undefined__ if non of the numeral patterns matches the expression\n * provided in [[numeral]].\n */\nexport function parseStringEncodedNumeral(\n    numeral: string,\n    pixelToMeters: number = 1.0\n): number | undefined {\n    return parseStringLiteral(numeral, StringEncodedNumeralFormats, pixelToMeters);\n}\n\n/**\n * Parse string encoded color value using all known [[StringEncodedColorFormats]].\n *\n * @param color - The string encoded color expression (i.e. '#FFF', 'rgb(255, 0, 0)', etc.).\n * @returns The color parsed or __undefined__ if non of the known representations matches\n * the expression provided in [[color]].\n */\nexport function parseStringEncodedColor(color: string): number | undefined {\n    return parseStringLiteral(color, StringEncodedColorFormats);\n}\n\nfunction parseStringLiteral(\n    text: string,\n    formats: StringEncodedNumeralFormat[],\n    pixelToMeters: number = 1.0\n): number | undefined {\n    const matchedFormat = formats.find(format => {\n        return format.decoder(text, tmpBuffer) ? true : false;\n    });\n\n    if (matchedFormat === undefined) {\n        const components: number[] | null = parseCSSColor(text);\n\n        return Array.isArray(components) && !components.some(c => isNaN(c))\n            ? ColorUtils.getHexFromRgba(\n                  components[0] / 255,\n                  components[1] / 255,\n                  components[2] / 255,\n                  components[3]\n              )\n            : undefined;\n    }\n\n    switch (matchedFormat?.type) {\n        case StringEncodedNumeralType.Pixels:\n            return tmpBuffer[0] * pixelToMeters;\n        case StringEncodedNumeralType.Hex:\n            return ColorUtils.getHexFromRgba(\n                tmpBuffer[0],\n                tmpBuffer[1],\n                tmpBuffer[2],\n                tmpBuffer[3]\n            );\n        default:\n            return tmpBuffer[0];\n    }\n}\n","/*\n * Copyright (C) 2019-2022 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { LoggerManager } from \"@here/harp-utils\";\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    Env,\n    Expr,\n    ExprScope,\n    ExprVisitor,\n    HasAttributeExpr,\n    InterpolateExpr,\n    isJsonExpr,\n    JsonExpr,\n    LiteralExpr,\n    LookupExpr,\n    MatchExpr,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StepExpr,\n    StringLiteralExpr,\n    Value,\n    VarExpr\n} from \"./Expr\";\nimport { ExprPool } from \"./ExprPool\";\nimport {\n    interpolatedPropertyDefinitionToJsonExpr,\n    isInterpolatedPropertyDefinition\n} from \"./InterpolatedPropertyDefs\";\nimport { DecoderOptions } from \"./ITileDecoder\";\nimport { AttrScope, getTechniqueAttributeDescriptor } from \"./TechniqueDescriptors\";\nimport { IndexedTechnique, setTechniqueRenderOrderOrPriority, Technique } from \"./Techniques\";\nimport { Definitions, Style, StyleSet } from \"./Theme\";\n\nconst logger = LoggerManager.instance.create(\"StyleSetEvaluator\");\n\nconst DEFAULT_TECHNIQUE_ATTR_SCOPE = AttrScope.TechniqueGeometry;\n\n/**\n * Get the attribute scope of the given style property.\n *\n * @remarks\n * Certain Style properties change their dynamic scope behavior\n * based on other properties. For example, the `color` property\n * of `extruded-polygon` change behavior based on the usage\n * of `vertexColors`.\n *\n * @param style A valid Style.\n * @param attrName The name of the attribute of the {@link style}.\n */\nfunction getStyleAttributeScope(style: InternalStyle, attrName: string): AttrScope {\n    if (style.technique === \"extruded-polygon\") {\n        if (attrName === \"color\" && style.vertexColors !== false) {\n            return DEFAULT_TECHNIQUE_ATTR_SCOPE;\n        }\n    }\n\n    return (\n        getTechniqueAttributeDescriptor(style.technique, attrName)?.scope ??\n        DEFAULT_TECHNIQUE_ATTR_SCOPE\n    );\n}\n\ninterface StyleInternalParams {\n    /**\n     * Optimization: Lazy creation and storage of expression in a style object.\n     */\n    _whenExpr?: Expr;\n    _minZoomLevelExpr?: Expr;\n    _maxZoomLevelExpr?: Expr;\n\n    _staticAttributes?: Array<[string, Value]>;\n\n    /**\n     * These attributes are used to instantiate Technique variants.\n     *\n     * @see [[TechiqueDescriptor.techniquePropNames]]\n     */\n    _dynamicTechniqueAttributes?: Array<[string, Expr]>;\n\n    /**\n     * These attributes must be evaluated basing with feature env.\n     *\n     * They are not propagated to rendering scope.\n     *\n     * @see [[TechniqueAttrScope.Feature]]\n     */\n    _dynamicFeatureAttributes?: Array<[string, Expr]>;\n\n    /**\n     * These attributes are forwarded as serialized by decoder to main thread, so they are resolved\n     * directly in render loop.\n     *\n     * Will contain attributes from these lists\n     *  - interpolants from [[TechiqueDescriptor.techniquePropNames]]\n     *  - expressions [[TechniqueDescriptor.dynamicPropNames]] (Future)\n     */\n    _dynamicForwardedAttributes?: Array<[string, Expr]>;\n    _dynamicTechniques?: Map<string, IndexedTechnique>;\n\n    /**\n     * Optimization: Index into table in StyleSetEvaluator.\n     * @hidden\n     */\n    _staticTechnique?: IndexedTechnique;\n\n    /**\n     * Optimization: StyleSet index.\n     * @hidden\n     */\n    _styleSetIndex?: number;\n\n    /**\n     * Optimization: Requested $geometryType.\n     * @hidden\n     */\n    _geometryType?: string;\n\n    /**\n     * `true` if any of the properties of this technique\n     * requires access to the feature's state.\n     */\n    _usesFeatureState?: boolean;\n}\n\ntype InternalStyle = Style & StyleInternalParams;\n\n/**\n * `StyleConditionClassifier` searches for usages of `$layer` in `when` conditions\n * associated with styling rules.\n *\n * @hidden\n */\nclass StyleConditionClassifier implements ExprVisitor<Expr | undefined, Expr | undefined> {\n    private _style!: InternalStyle;\n\n    classify(style: InternalStyle) {\n        if (style._whenExpr) {\n            const savedStyle = this.switchStyle(style);\n            style._whenExpr = style._whenExpr.accept(this, undefined);\n            this._style = savedStyle;\n        }\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitVarExpr(expr: VarExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitMatchExpr(expr: MatchExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitCaseExpr(expr: CaseExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitCallExpr(call: CallExpr, enclosingExpr: Expr | undefined): Expr | undefined {\n        if (call.op === \"all\") {\n            // processing of an `[\"all\", e1, e2, ... eN]` expression. In this case\n            // search for expressions matching comparison of `$layer` and string literals\n            // in the sub expressions.\n            const children = call.args\n                .map(childExpr => childExpr.accept(this, call))\n                .filter(childExpr => childExpr !== undefined) as Expr[];\n\n            return new CallExpr(call.op, children);\n        } else if (enclosingExpr) {\n            // `call` is a direct child expression of an `\"all\"` operator.\n            const matched = this.matchVarStringComparison(call);\n\n            if (matched) {\n                if (this._style.layer === undefined && matched.name === \"$layer\") {\n                    // found a subexpression `[\"==\", [\"get\", \"$layer\"], \"some layer name\"]`\n                    // enclosed in an `[\"all\", e1...eN]` expression. Remove it from\n                    // its parent expression and store the value of the expected $layer in\n                    // [[StyleInternalParams]].\n\n                    this._style.layer = matched.value;\n\n                    // return `undefined` to remove this sub expression from its parent.\n                    return undefined;\n                } else if (\n                    this._style._geometryType === undefined &&\n                    matched.name === \"$geometryType\"\n                ) {\n                    // found a subexpression `[\"==\", [\"get\", \"$geometryType\"], \"geometry\"]`\n                    // enclosed in an `[\"all\", e1...eN]` expression. Remove it from\n                    // its parent expression and store the value of the expected $geometryType in\n                    // [[StyleInternalParams]].\n\n                    this._style._geometryType = matched.value;\n\n                    // return `undefined` to remove this sub expression from its parent.\n                    return undefined;\n                }\n            }\n        }\n\n        return call;\n    }\n\n    visitLookupExpr(lookup: LookupExpr, enclosingExpr: Expr | undefined): Expr | undefined {\n        return this.visitCallExpr(lookup, enclosingExpr);\n    }\n\n    visitStepExpr(expr: StepExpr, enclosingExpr: Expr | undefined): Expr | undefined {\n        return expr;\n    }\n\n    visitInterpolateExpr(expr: InterpolateExpr, enclosingExpr: Expr | undefined): Expr | undefined {\n        return expr;\n    }\n\n    /**\n     * Tests if the given `call` matches the structure [\"==\", [\"get\", name], value].\n     * If a match is found returns an object containing the `name` and the `value`;\n     *\n     * @param call - The expression to match.\n     */\n    private matchVarStringComparison(call: CallExpr) {\n        if (call.op === \"==\") {\n            const left = call.args[0];\n            const right = call.args[1];\n\n            if (left instanceof VarExpr && right instanceof StringLiteralExpr) {\n                return { name: left.name, value: right.value };\n            }\n\n            if (right instanceof VarExpr && left instanceof StringLiteralExpr) {\n                return { name: right.name, value: left.value };\n            }\n        }\n\n        return undefined;\n    }\n\n    /**\n     * Sets the given `style` as current.\n     *\n     * @returns The previous `style`.\n     */\n    private switchStyle(style: InternalStyle) {\n        const saved = this._style;\n        this._style = style;\n        return saved;\n    }\n}\n\nclass OptimizedSubSetKey {\n    key: string;\n    layer: string | undefined;\n    geometryType: string | undefined;\n\n    cachedStyleSet?: InternalStyle[];\n\n    constructor(layer?: string | undefined, geometryType?: string | undefined) {\n        this.key = \"\";\n        this.set(layer, geometryType);\n    }\n\n    set(\n        layer: string | undefined,\n        geometryType: string | undefined,\n        env?: Env\n    ): OptimizedSubSetKey {\n        let keyUpdateNeeded: boolean = false;\n        if (layer === undefined) {\n            const envLayer = env !== undefined ? env.lookup(\"$layer\") : undefined;\n            layer = typeof envLayer === \"string\" ? envLayer : undefined;\n        }\n        if (this.layer !== layer) {\n            this.layer = layer;\n            keyUpdateNeeded = true;\n        }\n\n        if (geometryType === undefined) {\n            const envGeometryType = env !== undefined ? env.lookup(\"$geometryType\") : undefined;\n            geometryType = typeof envGeometryType === \"string\" ? envGeometryType : undefined;\n        }\n        if (this.geometryType !== geometryType) {\n            this.geometryType = geometryType;\n            keyUpdateNeeded = true;\n        }\n\n        if (keyUpdateNeeded) {\n            this.updateKey();\n        }\n        return this;\n    }\n\n    private updateKey() {\n        if (this.layer !== undefined) {\n            if (this.geometryType !== undefined) {\n                this.key = `${this.layer}:${this.geometryType}`;\n            } else {\n                this.key = `${this.layer}:`;\n            }\n        } else {\n            if (this.geometryType !== undefined) {\n                this.key = `:${this.geometryType}`;\n            } else {\n                this.key = \"all\";\n            }\n        }\n        this.cachedStyleSet = undefined;\n    }\n}\n\n/**\n * Options to be passed to the StyleSetEvaluator\n *\n * Basically identical as the DecoderOptions but requires styleSet to be set.\n */\nexport type StyleSetOptions = Omit<DecoderOptions, \"languages\"> & { styleSet: StyleSet };\n\n/**\n * Combine data from datasource and apply the rules from a specified theme to show it on the map.\n */\nexport class StyleSetEvaluator {\n    readonly styleSet: InternalStyle[];\n\n    private readonly m_techniques: IndexedTechnique[] = [];\n    private readonly m_exprPool = new ExprPool();\n    private readonly m_cachedResults = new Map<Expr, Value>();\n    private readonly m_styleConditionClassifier = new StyleConditionClassifier();\n    private readonly m_subStyleSetCache = new Map<string, InternalStyle[]>();\n    private readonly m_definitions?: Definitions;\n    private readonly m_definitionExprCache = new Map<string, Expr>();\n    private readonly m_tmpOptimizedSubSetKey: OptimizedSubSetKey = new OptimizedSubSetKey();\n    private readonly m_emptyEnv = new Env();\n    private m_featureDependencies: string[] = [];\n    private m_layer: string | undefined;\n    private m_geometryType: string | undefined;\n    private m_zoomLevel: number | undefined;\n    private m_previousResult: IndexedTechnique[] | undefined;\n    private m_previousEnv: Env | undefined;\n    private m_nextArrayBufferId = 0;\n\n    constructor(private readonly m_options: StyleSetOptions) {\n        this.m_definitions = this.m_options.definitions;\n        this.styleSet = resolveReferences(this.m_options.styleSet, this.m_definitions);\n        computeDefaultRenderOrder(this.styleSet);\n        this.compileStyleSet();\n    }\n\n    /**\n     * Find all techniques that fit the current objects' environment.\n     * *The techniques in the resulting array may not be modified* since they are being reused for\n     * identical objects.\n     *\n     * @param env - The objects environment, i.e. the attributes that are relevant for its\n     * representation.\n     * @param layer - The optional layer name used to filter techniques.\n     * @param geometryType - The optional geometryType used to filter techniques.\n     */\n    getMatchingTechniques(\n        env: Env,\n        layer?: string | undefined,\n        geometryType?: string | undefined\n    ): IndexedTechnique[] {\n        if (\n            this.m_previousResult &&\n            this.m_previousEnv &&\n            this.m_featureDependencies.every(p => this.m_previousEnv?.lookup(p) === env.lookup(p))\n        ) {\n            return this.m_previousResult;\n        }\n\n        const result: IndexedTechnique[] = [];\n        this.m_cachedResults.clear();\n\n        const optimizedSubSetKey = this.m_tmpOptimizedSubSetKey;\n        optimizedSubSetKey.set(layer, geometryType, env);\n\n        // get the requested $layer and $geometryType, if any.\n        this.m_layer = optimizedSubSetKey.layer;\n        this.m_geometryType = optimizedSubSetKey.geometryType;\n        this.m_zoomLevel = env.lookup(\"$zoom\") as number | undefined;\n\n        const searchedStyleSet = this.getOptimizedStyleSet(optimizedSubSetKey);\n\n        for (const currStyle of searchedStyleSet) {\n            if (this.processStyle(env, currStyle, result)) {\n                break;\n            }\n        }\n\n        this.m_previousResult = result;\n        this.m_previousEnv = env;\n\n        return result;\n    }\n\n    /**\n     * Check if `styleSet` contains any rule related to `layer`.\n     *\n     * @param layer - name of layer\n     */\n    wantsLayer(layer: string): boolean {\n        return (\n            this.getOptimizedStyleSet(this.m_tmpOptimizedSubSetKey.set(layer, undefined)).length > 0\n        );\n    }\n\n    /**\n     * Check if `styleSet` contains any rule related to particular `[layer, geometryType]` pair.\n     *\n     * @param layer - name of layer\n     * @param geometryType - type of layer - `point`, `line` or `polygon`\n     */\n    wantsFeature(layer: string, geometryType?: string): boolean {\n        return (\n            this.getOptimizedStyleSet(this.m_tmpOptimizedSubSetKey.set(layer, geometryType))\n                .length > 0\n        );\n    }\n\n    /**\n     * Reset array of techniques.\n     *\n     * Cleans technique array and indices, so it doesn't accumulate accross several decoding runs.\n     */\n    resetTechniques() {\n        for (const techinque of this.m_techniques) {\n            techinque._index = undefined!;\n        }\n        this.m_techniques.length = 0;\n        this.m_previousResult = undefined;\n        this.m_previousEnv = undefined;\n    }\n\n    /**\n     * Get the (current) array of techniques that have been created during decoding.\n     */\n    get techniques(): IndexedTechnique[] {\n        return this.m_techniques;\n    }\n\n    /**\n     * Get the (current) array of techniques that have been created during decoding.\n     */\n    get decodedTechniques(): IndexedTechnique[] {\n        return this.m_techniques.map(makeDecodedTechnique);\n    }\n\n    private getOptimizedStyleSet(subSetKey: OptimizedSubSetKey): InternalStyle[] {\n        if (subSetKey.cachedStyleSet !== undefined) {\n            return subSetKey.cachedStyleSet;\n        }\n        let optimizedStyleSet = this.m_subStyleSetCache.get(subSetKey.key);\n        if (optimizedStyleSet !== undefined) {\n            subSetKey.cachedStyleSet = optimizedStyleSet;\n            return optimizedStyleSet;\n        }\n        optimizedStyleSet = this.createPreFilteredStyleSet(subSetKey);\n        this.m_subStyleSetCache.set(subSetKey.key, optimizedStyleSet);\n        subSetKey.cachedStyleSet = optimizedStyleSet;\n        return optimizedStyleSet;\n    }\n\n    private createPreFilteredStyleSet(subSetKey: OptimizedSubSetKey) {\n        const { layer, geometryType } = subSetKey;\n\n        return this.styleSet.filter(style => {\n            if (layer !== undefined && style.layer !== undefined && style.layer !== layer) {\n                return false;\n            }\n            if (\n                geometryType !== undefined &&\n                style._geometryType !== undefined &&\n                style._geometryType !== geometryType\n            ) {\n                return false;\n            }\n            return true;\n        });\n    }\n\n    /**\n     * Compile the `when` conditions found when traversting the styling rules.\n     */\n    private compileStyleSet() {\n        this.m_featureDependencies = [\"$layer\", \"$geometryType\", \"$zoom\"];\n\n        this.styleSet.forEach(style => this.compileStyle(style));\n\n        // Create optimized styleSets for each `layer` & `geometryType` tuple.\n        this.styleSet.forEach(style => {\n            this.getOptimizedStyleSet(\n                this.m_tmpOptimizedSubSetKey.set(style.layer, style._geometryType)\n            );\n        });\n    }\n\n    /**\n     * Compile the `when` conditions reachable from the given `style`.\n     *\n     * @param style - The current style.\n     */\n    private compileStyle(style: InternalStyle) {\n        this.checkStyleDynamicAttributes(style);\n\n        if (style.when !== undefined) {\n            try {\n                style._whenExpr = Array.isArray(style.when)\n                    ? Expr.fromJSON(style.when, this.m_definitions, this.m_definitionExprCache)\n                    : Expr.parse(style.when);\n\n                // search for usages of '$layer' and any other\n                // special symbol that can be used to speed up the evaluation\n                // of the `when` conditions associated to this `style`.\n                this.m_styleConditionClassifier.classify(style);\n\n                if (style._whenExpr !== undefined) {\n                    style._whenExpr = style._whenExpr.intern(this.m_exprPool);\n                }\n\n                const deps = style._whenExpr.dependencies();\n\n                deps?.properties.forEach(prop => {\n                    if (!this.m_featureDependencies.includes(prop)) {\n                        this.m_featureDependencies.push(prop);\n                    }\n                });\n\n                if (isJsonExpr(style.minZoomLevel)) {\n                    style._minZoomLevelExpr = Expr.fromJSON(\n                        style.minZoomLevel,\n                        this.m_definitions\n                    ).intern(this.m_exprPool);\n                }\n\n                if (isJsonExpr(style.maxZoomLevel)) {\n                    style._maxZoomLevelExpr = Expr.fromJSON(\n                        style.maxZoomLevel,\n                        this.m_definitions\n                    ).intern(this.m_exprPool);\n                }\n            } catch (err) {\n                logger.log(\n                    \"failed to evaluate expression\",\n                    JSON.stringify(style.when),\n                    \"error\",\n                    String(err)\n                );\n            }\n        }\n    }\n\n    /**\n     * Process a style (and its sub-styles) hierarchically to look for the technique that fits the\n     * current objects' environment. The attributes of the styles are assembled to create a unique\n     * technique for every object.\n     *\n     * @param env - The objects environment, i.e. the attributes that are relevant for its\n     *            representation.\n     * @param style - Current style (could also be top of stack).\n     * @param result - The array of resulting techniques. There may be more than one technique per\n     *               object, resulting in multiple graphical objects for representation.\n     * @returns `true` if style has been found and processing is finished. `false` if not found, or\n     *          more than one technique should be applied.\n     */\n    private processStyle(env: Env, style: InternalStyle, result: Technique[]): boolean {\n        if (!this.checkZoomLevel(env, style)) {\n            return false;\n        }\n\n        if (\n            this.m_layer !== undefined &&\n            style.layer !== undefined &&\n            style.layer !== this.m_layer\n        ) {\n            return false;\n        }\n        if (\n            this.m_geometryType !== undefined &&\n            style._geometryType !== undefined &&\n            style._geometryType !== this.m_geometryType\n        ) {\n            return false;\n        }\n\n        if (style._whenExpr) {\n            try {\n                if (!style._whenExpr.evaluate(env, ExprScope.Condition, this.m_cachedResults)) {\n                    // Stop processing this styling rule. The `when` condition\n                    // associated with the current `style` evaluates to false so\n                    // no techinque defined by this style should be applied.\n                    return false;\n                }\n            } catch (error) {\n                logger.error(\n                    `failed to evaluate expression '${JSON.stringify(style.when)}': ${error}`\n                );\n                return false;\n            }\n        }\n\n        if (style.technique === undefined) {\n            return false;\n        }\n        // we found a technique!\n        if (style.technique !== \"none\") {\n            result.push(this.getTechniqueForStyleMatch(env, style));\n        }\n        // stop processing if \"final\" is set\n        return style.final === true;\n    }\n\n    private checkZoomLevel(env: Env, style: InternalStyle) {\n        if (style.minZoomLevel === undefined && style.maxZoomLevel === undefined) {\n            return true;\n        }\n\n        const zoomLevel = this.m_zoomLevel;\n        if (zoomLevel === undefined) {\n            return true;\n        }\n\n        if (style.minZoomLevel !== undefined) {\n            let minZoomLevel: Value = style.minZoomLevel;\n\n            if (style._minZoomLevelExpr?.isDynamic() === false) {\n                // Only filter by zoom level if the expression is not dynamic.\n                try {\n                    minZoomLevel = style._minZoomLevelExpr.evaluate(\n                        env,\n                        ExprScope.Condition,\n                        this.m_cachedResults\n                    );\n                } catch (error) {\n                    logger.error(\n                        `failed to evaluate expression '${JSON.stringify(\n                            style._minZoomLevelExpr\n                        )}': ${error}`\n                    );\n                }\n            }\n\n            if (typeof minZoomLevel === \"number\" && zoomLevel < minZoomLevel) {\n                return false;\n            }\n        }\n\n        if (style.maxZoomLevel !== undefined) {\n            let maxZoomLevel: Value = style.maxZoomLevel;\n\n            if (style._maxZoomLevelExpr?.isDynamic() === false) {\n                // Only filter by zoom level if the expression is not dynamic.\n                try {\n                    maxZoomLevel = style._maxZoomLevelExpr.evaluate(\n                        env,\n                        ExprScope.Condition,\n                        this.m_cachedResults\n                    );\n                } catch (error) {\n                    logger.error(\n                        `failed to evaluate expression '${JSON.stringify(\n                            style._maxZoomLevelExpr\n                        )}': ${error}`\n                    );\n                }\n            }\n\n            if (typeof maxZoomLevel === \"number\" && zoomLevel >= maxZoomLevel) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private getTechniqueForStyleMatch(env: Env, style: InternalStyle) {\n        let technique: IndexedTechnique | undefined;\n        if (style._dynamicTechniques !== undefined) {\n            const dynamicAttributes = this.evaluateTechniqueProperties(style, env);\n            const key = this.getDynamicTechniqueKey(style, dynamicAttributes);\n            technique = style._dynamicTechniques!.get(key);\n            if (technique === undefined) {\n                technique = this.createTechnique(style, key, dynamicAttributes);\n                style._dynamicTechniques!.set(key, technique);\n            }\n        } else {\n            technique = style._staticTechnique;\n            if (technique === undefined) {\n                style._staticTechnique = technique = this.createTechnique(\n                    style,\n                    `${style._styleSetIndex}`,\n                    []\n                ) as IndexedTechnique;\n            }\n        }\n\n        if (technique._index === undefined) {\n            technique._index = this.m_techniques.length;\n            this.m_techniques.push(technique);\n        }\n        return technique;\n    }\n\n    private getDynamicTechniqueKey(\n        style: InternalStyle,\n        dynamicAttributes: Array<[string, Value]>\n    ) {\n        const dynamicAttrKey = dynamicAttributes\n            .map(([_attrName, attrValue]) => {\n                if (attrValue === undefined) {\n                    return \"U\";\n                } else if (typeof attrValue === \"object\") {\n                    return JSON.stringify(attrValue, (_, value) => {\n                        if (value instanceof ArrayBuffer) {\n                            // ArrayBuffers cannot be directly stringified. They can be converted\n                            // to typed arrays and then stringified, but it's too slow. Instead,\n                            // assign them unique ids.\n                            let arrayBufferId = (value as any).id;\n                            if (arrayBufferId === undefined) {\n                                arrayBufferId = (value as any).id = this.m_nextArrayBufferId++;\n                            }\n                            return arrayBufferId;\n                        }\n                        return value;\n                    });\n                } else {\n                    return JSON.stringify(attrValue);\n                }\n            })\n            .join(\":\");\n        return `${style._styleSetIndex!}:${dynamicAttrKey}`;\n    }\n\n    private checkStyleDynamicAttributes(style: InternalStyle) {\n        if (style._dynamicTechniqueAttributes !== undefined || style.technique === \"none\") {\n            return;\n        }\n\n        style._dynamicTechniqueAttributes = [];\n        style._dynamicFeatureAttributes = [];\n        style._dynamicForwardedAttributes = [];\n        style._staticAttributes = [];\n\n        const dynamicFeatureAttributes = style._dynamicFeatureAttributes;\n        const dynamicTechniqueAttributes = style._dynamicTechniqueAttributes;\n        const dynamicForwardedAttributes = style._dynamicForwardedAttributes;\n        const targetStaticAttributes = style._staticAttributes;\n\n        const processAttribute = (attrName: string, attrValue: Value | JsonExpr | undefined) => {\n            if (attrValue === undefined) {\n                return;\n            }\n\n            if (isJsonExpr(attrValue)) {\n                attrValue = Expr.fromJSON(\n                    attrValue,\n                    this.m_definitions,\n                    this.m_definitionExprCache\n                ).intern(this.m_exprPool);\n            } else if (isInterpolatedPropertyDefinition(attrValue)) {\n                // found a property using an object-like interpolation definition.\n                attrValue = Expr.fromJSON(\n                    interpolatedPropertyDefinitionToJsonExpr(attrValue)\n                ).intern(this.m_exprPool);\n            }\n\n            if (Expr.isExpr(attrValue)) {\n                const deps = attrValue.dependencies();\n\n                if (deps.featureState) {\n                    if (attrName !== \"enabled\") {\n                        logger.log(\"feature-state is not supported in this context\");\n                    } else {\n                        style._usesFeatureState = true;\n                    }\n                }\n\n                if (deps.properties.size === 0 && !attrValue.isDynamic()) {\n                    // no data-dependencies detected.\n                    attrValue = attrValue.evaluate(this.m_emptyEnv);\n                }\n            }\n\n            if (Expr.isExpr(attrValue)) {\n                const attrScope = getStyleAttributeScope(style, attrName);\n\n                const deps = attrValue.dependencies();\n\n                deps.properties.forEach(prop => {\n                    if (!this.m_featureDependencies.includes(prop)) {\n                        this.m_featureDependencies.push(prop);\n                    }\n                });\n\n                switch (attrScope) {\n                    case AttrScope.FeatureGeometry:\n                        dynamicFeatureAttributes.push([attrName, attrValue]);\n                        break;\n                    case AttrScope.TechniqueGeometry:\n                        dynamicTechniqueAttributes.push([attrName, attrValue]);\n                        break;\n                    case AttrScope.TechniqueRendering:\n                        if (deps.properties.size === 0) {\n                            dynamicForwardedAttributes.push([attrName, attrValue]);\n                        } else {\n                            dynamicTechniqueAttributes.push([attrName, attrValue]);\n                        }\n                        break;\n                }\n            } else if (attrValue !== undefined && attrValue !== null) {\n                targetStaticAttributes.push([attrName, attrValue]);\n            }\n        };\n\n        const replacement = new Map<string, string>([\n            [\"category\", \"_category\"],\n            [\"secondaryCategory\", \"_secondaryCategory\"]\n        ]);\n\n        for (const p in style) {\n            if (!style.hasOwnProperty(p)) {\n                continue;\n            }\n            if (p.startsWith(\"_\")) {\n                continue;\n            }\n            if ([\"when\", \"technique\", \"layer\", \"attr\", \"description\"].includes(p)) {\n                continue;\n            }\n            const pp = replacement.get(p) ?? p;\n            processAttribute(pp, (style as any)[p]);\n        }\n\n        if (style.attr !== undefined) {\n            for (const attrName in style.attr) {\n                if (!style.attr.hasOwnProperty(attrName)) {\n                    continue;\n                }\n                processAttribute(attrName, (style.attr as any)[attrName]);\n            }\n        }\n\n        if (dynamicTechniqueAttributes.length > 0) {\n            style._dynamicTechniques = new Map();\n        }\n    }\n\n    private evaluateTechniqueProperties(style: InternalStyle, env: Env): Array<[string, Value]> {\n        if (style._dynamicTechniqueAttributes === undefined) {\n            return [];\n        }\n\n        return style._dynamicTechniqueAttributes.map(([attrName, attrExpr]) => {\n            try {\n                const evaluatedValue = attrExpr.evaluate(\n                    env,\n                    ExprScope.Value,\n                    this.m_cachedResults\n                );\n                return [attrName, evaluatedValue];\n            } catch (error) {\n                logger.error(`failed to evaluate expression '${attrExpr.toJSON()}': ${error}`);\n                return [attrName, null];\n            }\n        });\n    }\n\n    private createTechnique(\n        style: InternalStyle,\n        key: string,\n        dynamicAttrs: Array<[string, Value]>\n    ) {\n        const technique: any = {};\n        technique.name = style.technique;\n        if (style._staticAttributes !== undefined) {\n            for (const [attrName, attrValue] of style._staticAttributes) {\n                if (attrValue !== null) {\n                    technique[attrName] = attrValue;\n                }\n            }\n        }\n        for (const [attrName, attrValue] of dynamicAttrs) {\n            if (attrValue !== null) {\n                technique[attrName] = attrValue;\n            }\n        }\n\n        if (style._dynamicFeatureAttributes !== undefined) {\n            for (const [attrName, attrValue] of style._dynamicFeatureAttributes) {\n                technique[attrName] = attrValue;\n            }\n        }\n\n        if (style._dynamicForwardedAttributes !== undefined) {\n            for (const [attrName, attrValue] of style._dynamicForwardedAttributes) {\n                technique[attrName] = attrValue;\n            }\n        }\n\n        technique._index = this.m_techniques.length;\n        technique._styleSetIndex = style._styleSetIndex!;\n        if (style.styleSet !== undefined) {\n            technique._styleSet = style.styleSet;\n        }\n        if (style._usesFeatureState !== undefined) {\n            technique._usesFeatureState = style._usesFeatureState;\n        }\n        setTechniqueRenderOrderOrPriority(\n            technique,\n            this.m_options.priorities ?? [],\n            this.m_options.labelPriorities ?? []\n        );\n        this.m_techniques.push(technique as IndexedTechnique);\n        return technique as IndexedTechnique;\n    }\n}\n\nfunction computeDefaultRenderOrder(styleSet: InternalStyle[]) {\n    let techniqueRenderOrder = 0;\n    let styleSetIndex = 0;\n    for (const style of styleSet) {\n        style._styleSetIndex = styleSetIndex++;\n        if (style.technique !== undefined && style.renderOrder === undefined) {\n            style.renderOrder = techniqueRenderOrder++;\n        }\n    }\n}\n\nfunction resolveReferences(styleSet: Style[], definitions: Definitions | undefined) {\n    return styleSet.map(style => resolveStyleReferences(style, definitions));\n}\n\nfunction resolveStyleReferences(style: Style, definitions: Definitions | undefined): InternalStyle {\n    return { ...style };\n}\n\n/**\n * Create transferable representation of dynamic technique.\n *\n * Converts  non-transferable {@link Expr}instances back to JSON form.\n */\nexport function makeDecodedTechnique(technique: IndexedTechnique): IndexedTechnique {\n    const result: Partial<IndexedTechnique> = {};\n    for (const attrName in technique) {\n        if (!technique.hasOwnProperty(attrName)) {\n            continue;\n        }\n\n        let attrValue: any = (technique as any)[attrName];\n\n        if (\n            typeof attrValue === \"object\" &&\n            (attrValue.isVector2 || attrValue.isVector3 || attrValue.isVector4)\n        ) {\n            attrValue = LiteralExpr.fromValue(attrValue);\n        }\n\n        if (Expr.isExpr(attrValue)) {\n            attrValue = attrValue.toJSON();\n        }\n\n        (result as any)[attrName] = attrValue;\n    }\n    return (result as any) as IndexedTechnique;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env, Expr, MapEnv, Value } from \"./Expr\";\nimport { getPropertyValue } from \"./PropertyValue\";\n\nexport interface AttrEvaluationContext {\n    /**\n     * Expression evaluation environment containing variable bindings.\n     */\n    env: MapEnv;\n\n    /**\n     * Optional, cache of expression results.\n     *\n     * @see [[Expr.evaluate]]\n     */\n    cachedExprResults?: Map<Expr, Value>;\n}\n\n/**\n * Evaluate feature attr _without_ default value.\n *\n * @returns actual value or `undefined`\n */\nexport function evaluateTechniqueAttr<T = Value>(\n    context: Env | AttrEvaluationContext,\n    attrValue: T | Expr | undefined\n): T | undefined;\n\n/**\n * Evaluate feature attr _with_ default value.\n *\n * @returns actual value or `defaultValue`\n */\nexport function evaluateTechniqueAttr<T extends Value>(\n    context: Env | AttrEvaluationContext,\n    attrValue: T | Expr | undefined,\n    defaultValue: T\n): T;\n\nexport function evaluateTechniqueAttr<T = Value>(\n    context: Env | AttrEvaluationContext,\n    attrValue: Value | undefined,\n    defaultValue?: T\n): T | undefined {\n    if (attrValue === undefined) {\n        return defaultValue;\n    }\n\n    const result = Env.isEnv(context)\n        ? getPropertyValue(attrValue, context)\n        : getPropertyValue(attrValue, context.env, context.cachedExprResults);\n\n    return result ?? defaultValue;\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    BaseTechniqueParams,\n    PointTechniqueParams,\n    PolygonalTechniqueParams\n} from \"./TechniqueParams\";\nimport {\n    CirclesTechnique,\n    ExtrudedPolygonTechnique,\n    FillTechnique,\n    IndexedTechnique,\n    LineMarkerTechnique,\n    LineTechnique,\n    ShaderTechnique,\n    SolidLineTechnique,\n    SquaresTechnique,\n    StandardTechnique,\n    Technique,\n    TextTechnique\n} from \"./Techniques\";\n\nexport enum AttrScope {\n    /**\n     * Attributes that affect generation of feature geometry and thus must be resolved at decoding\n     * time.\n     *\n     * @remarks\n     * They may have huge variancy as they are implemented as vertex attributes or embedded in\n     * generated meshes.\n     *\n     * These attributes are available only in decoding scope.\n     */\n    FeatureGeometry,\n\n    /**\n     * Attributes that are common to whole group of features drawn with this technique.\n     * These attributes affect generated geometry and  thus must be resolved at decoding time.\n     *\n     * @remarks\n     * They shouldn't have big variancy and evaluate to at least dozens of values as each\n     * combination of these attributes consitute new technique and material.\n     *\n     * These attributes are available in decoding and rendering scope.\n     */\n    TechniqueGeometry,\n\n    /**\n     * Attributes that are common to whole group of features drawn with this technique.\n     *\n     * @remarks\n     * Attributes that can be changed in resulting object/material from frame to frame. They are\n     * usually implemented as uniforms.\n     *\n     * These attributes may be available only at rendering scope.\n     */\n    TechniqueRendering\n}\n\n/**\n * Extract  property names from `Technique`-like interface (excluding `name`) as union of string\n * literals.\n *\n * TechniquePropName<Base\n *\n */\ntype TechniquePropNames<T> = T extends { name: any } ? keyof Omit<T, \"name\"> : keyof T;\n\ninterface AttrDescriptor {\n    /**\n     * The evaluation scope of this attribute.\n     */\n    scope?: AttrScope;\n\n    /**\n     * Mark this attribute as automatic.\n     *\n     * @remarks\n     * When set to `true`, the underlying material property\n     * associated with this attribute is automatically kept in sync\n     * with the value of the technique attribute.\n     */\n    automatic?: boolean;\n}\n\ntype TechniqueAttrDescriptors<T> = {\n    [P in TechniquePropNames<T>]?: AttrScope | AttrDescriptor;\n};\n\nexport interface TechniqueDescriptor<T = Technique> {\n    attrTransparencyColor?: string;\n    attrDescriptors: TechniqueAttrDescriptors<T>;\n}\n\ntype OneThatMatches<T, P> = T extends P ? T : never;\ntype TechniqueByName<K extends Technique[\"name\"]> = OneThatMatches<Technique, { name: K }>;\n\ntype TechniqueDescriptorRegistry = {\n    [P in Technique[\"name\"]]?: TechniqueDescriptor<TechniqueByName<P>>;\n};\n\n/**\n * @internal\n */\nfunction mergeTechniqueDescriptor<T>(\n    ...descriptors: Array<Partial<TechniqueDescriptor<T>>>\n): TechniqueDescriptor<T> {\n    const result: TechniqueDescriptor<T> = {\n        attrDescriptors: {}\n    };\n    for (const descriptor of descriptors) {\n        if (descriptor.attrTransparencyColor !== undefined) {\n            result.attrTransparencyColor = descriptor.attrTransparencyColor;\n        }\n        if (descriptor.attrDescriptors !== undefined) {\n            result.attrDescriptors = { ...result.attrDescriptors, ...descriptor.attrDescriptors };\n        }\n    }\n    return result;\n}\n\nconst baseTechniqueParamsDescriptor: TechniqueDescriptor<BaseTechniqueParams> = {\n    // TODO: Choose which techniques should support color with transparency.\n    // For now we chosen all, but it maybe not suitable for text or line marker techniques.\n    attrTransparencyColor: \"color\",\n    attrDescriptors: {\n        constantHeight: AttrScope.FeatureGeometry,\n        enabled: AttrScope.FeatureGeometry,\n        fadeFar: AttrScope.TechniqueRendering,\n        fadeNear: AttrScope.TechniqueRendering,\n        transparent: { scope: AttrScope.TechniqueRendering, automatic: true },\n        side: { scope: AttrScope.TechniqueRendering, automatic: true }\n    }\n};\n\nconst pointTechniquePropTypes = mergeTechniqueDescriptor<PointTechniqueParams>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrDescriptors: {\n            color: { scope: AttrScope.TechniqueRendering, automatic: true },\n            size: { scope: AttrScope.TechniqueRendering, automatic: true },\n            opacity: { scope: AttrScope.TechniqueRendering, automatic: true }\n        }\n    }\n);\n\nconst squaresTechniquePropTypes = mergeTechniqueDescriptor<SquaresTechnique>(\n    baseTechniqueParamsDescriptor,\n    pointTechniquePropTypes\n);\n\nconst circlesTechniquePropTypes = mergeTechniqueDescriptor<CirclesTechnique>(\n    baseTechniqueParamsDescriptor,\n    pointTechniquePropTypes\n);\n\nconst lineMarkerTechniquePropTypes = mergeTechniqueDescriptor<LineMarkerTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrDescriptors: {\n            text: AttrScope.FeatureGeometry,\n            label: AttrScope.FeatureGeometry,\n            useAbbreviation: AttrScope.FeatureGeometry,\n            useIsoCode: AttrScope.FeatureGeometry,\n            poiName: AttrScope.FeatureGeometry,\n            imageTexture: AttrScope.FeatureGeometry,\n            iconColor: AttrScope.TechniqueRendering,\n            iconBrightness: AttrScope.TechniqueRendering,\n            backgroundColor: AttrScope.TechniqueRendering,\n            backgroundSize: AttrScope.TechniqueRendering,\n            backgroundOpacity: AttrScope.TechniqueRendering,\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            size: AttrScope.TechniqueRendering\n        }\n    }\n);\n\nconst polygonalTechniqueDescriptor: TechniqueDescriptor<PolygonalTechniqueParams> = {\n    attrDescriptors: {\n        polygonOffset: { scope: AttrScope.TechniqueRendering, automatic: true },\n        polygonOffsetFactor: { scope: AttrScope.TechniqueRendering, automatic: true },\n        polygonOffsetUnits: { scope: AttrScope.TechniqueRendering, automatic: true },\n        depthTest: { scope: AttrScope.TechniqueRendering, automatic: true },\n        transparent: { scope: AttrScope.TechniqueRendering, automatic: true },\n        opacity: { scope: AttrScope.TechniqueRendering, automatic: true },\n        color: { scope: AttrScope.TechniqueRendering, automatic: true },\n        lineColor: AttrScope.TechniqueRendering,\n        lineFadeFar: AttrScope.TechniqueRendering,\n        lineFadeNear: AttrScope.TechniqueRendering\n    }\n};\n\nconst solidLineTechniqueDescriptor = mergeTechniqueDescriptor<SolidLineTechnique>(\n    baseTechniqueParamsDescriptor,\n    polygonalTechniqueDescriptor,\n    {\n        attrDescriptors: {\n            lineWidth: AttrScope.TechniqueRendering,\n            secondaryWidth: AttrScope.TechniqueRendering,\n            secondaryColor: AttrScope.TechniqueRendering,\n            dashSize: AttrScope.TechniqueRendering,\n            gapSize: AttrScope.TechniqueRendering,\n            outlineColor: { scope: AttrScope.TechniqueRendering, automatic: true },\n            caps: { scope: AttrScope.TechniqueRendering, automatic: true },\n            drawRangeStart: { scope: AttrScope.TechniqueRendering, automatic: true },\n            drawRangeEnd: { scope: AttrScope.TechniqueRendering, automatic: true },\n            dashes: { scope: AttrScope.TechniqueRendering, automatic: true },\n            dashColor: { scope: AttrScope.TechniqueRendering, automatic: true }\n        }\n    }\n);\n\nconst lineTechniqueDescriptor = mergeTechniqueDescriptor<LineTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrDescriptors: {\n            // TODO, check, which are really dynamic !\n            color: { scope: AttrScope.TechniqueRendering, automatic: true },\n            opacity: { scope: AttrScope.TechniqueRendering, automatic: true },\n            lineWidth: AttrScope.FeatureGeometry\n        }\n    }\n);\n\nconst fillTechniqueDescriptor = mergeTechniqueDescriptor<FillTechnique>(\n    baseTechniqueParamsDescriptor,\n    polygonalTechniqueDescriptor,\n    {\n        attrDescriptors: {\n            wireframe: { scope: AttrScope.TechniqueRendering, automatic: true },\n            color: { scope: AttrScope.TechniqueRendering, automatic: true },\n            opacity: { scope: AttrScope.TechniqueRendering, automatic: true },\n            transparent: { scope: AttrScope.TechniqueRendering, automatic: true },\n            lineWidth: AttrScope.TechniqueRendering,\n            map: { scope: AttrScope.TechniqueRendering, automatic: true }\n        }\n    }\n);\n\nconst standardTechniqueDescriptor = mergeTechniqueDescriptor<StandardTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrDescriptors: {\n            color: { scope: AttrScope.TechniqueRendering, automatic: true },\n            vertexColors: { scope: AttrScope.TechniqueRendering, automatic: true },\n            wireframe: { scope: AttrScope.TechniqueRendering, automatic: true },\n            roughness: { scope: AttrScope.TechniqueRendering, automatic: true },\n            metalness: { scope: AttrScope.TechniqueRendering, automatic: true },\n            alphaTest: { scope: AttrScope.TechniqueRendering, automatic: true },\n            depthTest: { scope: AttrScope.TechniqueRendering, automatic: true },\n            transparent: { scope: AttrScope.TechniqueRendering, automatic: true },\n            opacity: { scope: AttrScope.TechniqueRendering, automatic: true },\n            emissive: { scope: AttrScope.TechniqueRendering, automatic: true },\n            emissiveIntensity: { scope: AttrScope.TechniqueRendering, automatic: true },\n            refractionRatio: { scope: AttrScope.TechniqueRendering, automatic: true },\n            normalMapType: { scope: AttrScope.TechniqueRendering, automatic: true },\n            map: { scope: AttrScope.TechniqueRendering, automatic: true },\n            normalMap: { scope: AttrScope.TechniqueRendering, automatic: true },\n            displacementMap: { scope: AttrScope.TechniqueRendering, automatic: true },\n            roughnessMap: { scope: AttrScope.TechniqueRendering, automatic: true },\n            emissiveMap: { scope: AttrScope.TechniqueRendering, automatic: true },\n            bumpMap: { scope: AttrScope.TechniqueRendering, automatic: true },\n            metalnessMap: { scope: AttrScope.TechniqueRendering, automatic: true },\n            alphaMap: { scope: AttrScope.TechniqueRendering, automatic: true }\n        }\n    }\n);\n\nconst extrudedPolygonTechniqueDescriptor = mergeTechniqueDescriptor<ExtrudedPolygonTechnique>(\n    baseTechniqueParamsDescriptor,\n    standardTechniqueDescriptor,\n    {\n        attrDescriptors: {\n            height: AttrScope.FeatureGeometry,\n            floorHeight: AttrScope.FeatureGeometry,\n            color: AttrScope.FeatureGeometry,\n            defaultColor: AttrScope.FeatureGeometry,\n            defaultHeight: AttrScope.FeatureGeometry,\n            boundaryWalls: AttrScope.FeatureGeometry,\n            footprint: AttrScope.FeatureGeometry,\n            maxSlope: AttrScope.FeatureGeometry,\n            animateExtrusion: AttrScope.TechniqueRendering,\n            lineWidth: AttrScope.TechniqueRendering,\n            lineFadeNear: AttrScope.TechniqueRendering,\n            lineFadeFar: AttrScope.TechniqueRendering,\n            lineColor: AttrScope.TechniqueRendering\n        }\n    }\n);\n\nconst textTechniqueDescriptor = mergeTechniqueDescriptor<TextTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrDescriptors: {\n            text: AttrScope.FeatureGeometry,\n            label: AttrScope.FeatureGeometry,\n            useAbbreviation: AttrScope.FeatureGeometry,\n            useIsoCode: AttrScope.FeatureGeometry,\n            backgroundColor: AttrScope.TechniqueRendering,\n            backgroundSize: AttrScope.TechniqueRendering,\n            backgroundOpacity: AttrScope.TechniqueRendering,\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            priority: AttrScope.TechniqueRendering,\n            size: AttrScope.TechniqueRendering\n        }\n    }\n);\n\nconst shaderTechniqueDescriptor = mergeTechniqueDescriptor<ShaderTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrDescriptors: {\n            params: AttrScope.TechniqueRendering\n        }\n    }\n);\n\nconst techniqueDescriptors: TechniqueDescriptorRegistry = {\n    \"extruded-polygon\": extrudedPolygonTechniqueDescriptor,\n    \"line-marker\": lineMarkerTechniquePropTypes,\n    \"labeled-icon\": lineMarkerTechniquePropTypes,\n    \"solid-line\": solidLineTechniqueDescriptor,\n    \"dashed-line\": solidLineTechniqueDescriptor,\n    terrain: standardTechniqueDescriptor,\n    standard: standardTechniqueDescriptor,\n    squares: squaresTechniquePropTypes,\n    circles: circlesTechniquePropTypes,\n    line: lineTechniqueDescriptor,\n    segments: lineTechniqueDescriptor,\n    fill: fillTechniqueDescriptor,\n    text: textTechniqueDescriptor,\n    shader: shaderTechniqueDescriptor\n};\n\nexport function getTechniqueDescriptor(\n    technique: string | IndexedTechnique | Technique\n): TechniqueDescriptor | undefined {\n    if (typeof technique !== \"string\") {\n        technique = technique.name;\n    }\n    return (techniqueDescriptors as any)[technique];\n}\n\nexport function getTechniqueAttributeDescriptor(\n    technique: string | IndexedTechnique | Technique,\n    attrName: string\n): AttrDescriptor | undefined {\n    const techniqueDescriptor = getTechniqueDescriptor(technique);\n    const attrDescriptors = techniqueDescriptor?.attrDescriptors;\n    const descriptor = attrDescriptors?.[attrName];\n    if (typeof descriptor === undefined) {\n        return undefined;\n    } else if (typeof descriptor === \"object\") {\n        return descriptor;\n    }\n    return { scope: descriptor };\n}\n\nconst automaticAttributeCache: Map<string, string[]> = new Map();\n\nexport function getTechniqueAutomaticAttrs(\n    technique: string | IndexedTechnique | Technique\n): string[] {\n    if (typeof technique !== \"string\") {\n        technique = technique.name;\n    }\n\n    if (automaticAttributeCache.has(technique)) {\n        return automaticAttributeCache.get(technique)!;\n    }\n\n    const descriptors: string[] = [];\n\n    const attrDescriptors = getTechniqueDescriptor(technique)?.attrDescriptors;\n\n    if (attrDescriptors === undefined) {\n        return descriptors;\n    }\n\n    for (const attrName in attrDescriptors) {\n        if (!attrDescriptors.hasOwnProperty(attrName)) {\n            continue;\n        }\n\n        const descr = attrDescriptors[attrName];\n\n        if (descr === undefined || typeof descr === \"number\") {\n            continue;\n        }\n\n        if (descr.automatic === true) {\n            descriptors.push(attrName);\n        }\n    }\n\n    automaticAttributeCache.set(technique, descriptors);\n\n    return descriptors;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { JsonExpr } from \"./Expr\";\nimport { InterpolatedPropertyDefinition } from \"./InterpolatedPropertyDefs\";\n\n/**\n * The style type of the line caps.\n */\nexport type LineCaps = \"Square\" | \"Round\" | \"None\" | \"TriangleOut\" | \"TriangleIn\";\n\n/**\n * The style type of the line dashes.\n */\nexport type LineDashes = \"Square\" | \"Round\" | \"Diamond\";\n\n/**\n * Defines how to interpret the units.\n */\nexport type MetricUnit = \"Meter\" | \"Pixel\";\n\n/**\n * Standard kinds of geometry.\n * @deprecated See {@link BaseTechniqueParams.kind}.\n */\nexport enum StandardGeometryKind {\n    /**\n     * Used in the enabledKinds/disabledKinds filter to match any kind.\n     */\n    All = \"_all_\",\n\n    /**\n     * Background geometry.\n     */\n    Background = \"background\",\n\n    /**\n     * Terrain geometry.\n     */\n    Terrain = \"terrain\",\n\n    /**\n     * Default value for the FillTechnique.\n     */\n    Area = \"area\",\n\n    /**\n     * Default value for all line techniques.\n     */\n    Line = \"line\",\n\n    /**\n     * Default value for the FillTechnique.\n     */\n    Water = \"water\",\n\n    /**\n     * Political borders.\n     */\n    Border = \"border\",\n\n    /**\n     * Basis for all roads.\n     */\n    Road = \"road\",\n\n    /**\n     * Default value for the ExtrudedPolygonTechnique.\n     */\n    Building = \"building\",\n\n    /**\n     * Default value for the TextTechnique, LineMarkerTechnique and the PoiTechnique.\n     */\n    Label = \"label\",\n\n    /**\n     * Anything that may show up last.\n     */\n    Detail = \"detail\"\n}\n\n/**\n * The kind of geometry is used to group objects together,\n * allowing the group to be hidden or displayed.\n *\n * @remarks\n * Any string can be used to specify the kind of the technique in a style in the theme file. Is is\n * suggested to specify multiple kinds for specific types of data. For a highway, the following list\n * of kinds is suggested:\n *```json\n *    [\"line\", \"road\", \"road:highway\"]\n *```\n * If it is a tunnel for a highway:\n *```json\n *    [\"line\", \"road\", \"road:highway\", \"tunnel\", \"road:tunnel\", \"road:highway:tunnel\"]\n *```\n * If specified in this way, specific types of data (here: highway roads) can be enabled and/or\n * disabled.\n * @deprecated See {@link BaseTechniqueParams.kind}.\n */\nexport type GeometryKind = string | StandardGeometryKind;\n\n// See https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-redeclare.md#ignoredeclarationmerge\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const GeometryKind = StandardGeometryKind;\n\n/**\n * Decorate property type with possible dynamic variants.\n */\nexport type DynamicProperty<T> = T | JsonExpr | InterpolatedPropertyDefinition<T>;\n\n/**\n * Length literals.\n *\n * @remarks\n * Description of length units inside a style. Supports literal values (interpreted as `m`), `m` and\n * `px`(i.e. `80`, `14px`, `0.6m`, etc.).\n */\nexport type StyleLength = string | number;\n\n/**\n * Color literals.\n *\n * @remarks\n * Description of colors inside a style. Supports hex values as well as CSS hex, rgb and hsl values\n * (i.e. `0xffffff`, `#f00fab`, `#aaa`, `rgb(255, 0 120)`, `hsl(360, 100%, 100%)`, etc.).\n */\nexport type StyleColor = string | number;\n\n/**\n * A set of {@link GeometryKind}s.\n */\nexport class GeometryKindSet extends Set {\n    /**\n     * Return `true` if the Set is a superset of the set 'subset'.\n     */\n    isSuperset(subset: Set<any>): boolean {\n        for (const elem of subset) {\n            if (!this.has(elem)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Return `true` if the Set intersects Set 'set'.\n     */\n    hasIntersection(set: any) {\n        for (const elem of set) {\n            if (this.has(elem)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Return `true` if the Set either intersects Set 'set' (if set is a Set), of has element 'set'\n     * if set is not a Set.\n     */\n    hasOrIntersects(set: any) {\n        if (set instanceof Set) {\n            return this.hasIntersection(set);\n        }\n        return this.has(set);\n    }\n\n    /**\n     * Return `true` if this set and the array of elements share at least a single element.\n     */\n    hasOrIntersectsArray(subset: any[]) {\n        for (const elem of subset) {\n            if (this.has(elem)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n/**\n * Common attributes or all [[Technique]]s.\n */\nexport interface BaseTechniqueParams {\n    /**\n     * The name used to identify materials created from this technique.\n     */\n    id?: string;\n\n    /**\n     * The render order of the objects created using this technique.\n     *\n     * @remarks\n     * If not specified in style file monotonically increasing\n     * values according to style position in file.\n     */\n    renderOrder?: DynamicProperty<number>;\n\n    /**\n     * The category of this technique.\n     *\n     * @remarks\n     * The category is used in conjunction with {@link Theme.priorities}\n     * to assign render orders to the objects created by this {@link Style}.\n     */\n    category?: DynamicProperty<string>;\n\n    /**\n     * Optional. If `true` or `Pickability.transient`, no IDs will be saved for the geometry\n     * this style creates. Default is `Pickability.onlyVisible`, which allows all pickable and\n     * visible objects to be picked, Pickability.all, will also allow invisible objects to be\n     * picked.\n     * @defaultValue `Pickability.onlyVisible`\n     * The boolean option is for backwardscompatibilty, please use the Pickability.\n     *\n     *\n     * TODO: deprecate and rename to something that makes more sense\n     */\n    transient?: boolean | Pickability;\n\n    /**\n     * Distance to the camera `(0.0 = camera position, 1.0 = farPlane) at which the object start\n     * fading out (opacity decreases).\n     */\n    fadeNear?: DynamicProperty<number>;\n\n    /**\n     * Distance to the camera (0.0 = camera position, 1.0 = farPlane) at which the object has zero\n     * opacity and stops fading out. An undefined value disables fading.\n     */\n    fadeFar?: DynamicProperty<number>;\n\n    /**\n     * Specified kind of geometry.\n     *\n     * @remarks\n     * One kind is set as default in the technique, and can be overridden in the style.\n     *\n     * @deprecated Use {@link enabled} with expressions based on `['dynamic-properties']` operator.\n     * See \"object picking\" example.\n     */\n    kind?: GeometryKind | GeometryKindSet;\n\n    /**\n     * Runtime filtering of techniques.\n     *\n     * Use with `['dynamic-properties']` operator for dynamic feature highlight, highlighig etc.\n     *\n     * @see Picking example\n     */\n    enabled?: DynamicProperty<boolean>;\n\n    /**\n     * Set to 'true' if line should appear transparent.\n     *\n     * @remarks\n     * Rendering transparent lines may come with a\n     * slight performance impact.\n     * See https://threejs.org/docs/#api/en/materials/Material.transparent.\n     */\n    transparent?: DynamicProperty<boolean>;\n\n    /**\n     * Defines which side of faces will be rendered - front, back or both.\n     * See https://threejs.org/docs/#api/en/materials/Material.side.\n     */\n    side?: DynamicProperty<number>;\n\n    /**\n     * Minimal zoom level. If the current zoom level is smaller, the technique will not be used.\n     */\n    minZoomLevel?: DynamicProperty<number>;\n\n    /**\n     * Maximum zoom level. If the current zoom level is equal to or greater, the technique will not be used.\n     */\n    maxZoomLevel?: DynamicProperty<number>;\n\n    /**\n     * If `true`, geometry height won't be scaled on projection. Enable it for projections with\n     * variable scale factor (e.g. mercator) to avoid distortions in geometry with great heights and\n     * latitude spans. E.g. a large object with even height would look oblique to the ground plane\n     * on mercator unless this property is set to `true`.\n     *\n     * @defaultValue `true` for geometries stored at level less than `12`.\n     */\n    constantHeight?: DynamicProperty<boolean>;\n}\n\nexport enum TextureCoordinateType {\n    /**\n     * Texture coordinates are in tile space.\n     *\n     * @remarks\n     * SW of the tile will have (0,0) and NE will have (1,1).\n     */\n    TileSpace = \"tile-space\",\n\n    /**\n     * Texture coordinates are in equirectangular space.\n     *\n     * @remarks\n     * (u, v) = ( (longitude+180) / 360, (latitude+90) / 180).\n     */\n    EquirectangularSpace = \"equirectangular-space\",\n\n    /**\n     * Texture coordinates in feature space.\n     *\n     * @remarks\n     * To compute texture coordinates in feature space,\n     * the feature must have a property named `bbox` with value\n     * the tuple `[west, south, east, north]`.\n     */\n    FeatureSpace = \"feature-space\"\n}\n\n/**\n * Standard technique parameters.\n */\nexport interface StandardTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of the feature in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`,\n     * `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.color.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * A value of `true` creates a wireframe geometry. (May not be supported with all techniques).\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.wireframe.\n     */\n    wireframe?: boolean;\n    /**\n     * If `vertexColors` is `true`, every vertex has color information, which is interpolated\n     * between vertices.\n     * See https://threejs.org/docs/#api/en/materials/Material.vertexColors.\n     */\n    vertexColors?: boolean;\n    /**\n     * How rough the material appears. `0.0` means a smooth mirror reflection. `1.0` means fully\n     * diffuse. Default is `1.0`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.roughness.\n     */\n    roughness?: DynamicProperty<number>;\n    /**\n     * How much the material is like a metal. Nonmetallic materials such as wood or stone use `0.0`,\n     * metallic ones use `1.0`, with nothing (usually) in between. Default is `0.0`. A value between\n     * `0.0` and `1.0` can be used for a rusty metal look. If `metalnessMap` is also provided, both\n     * values are multiplied.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.metalness.\n     */\n    metalness?: DynamicProperty<number>;\n    /**\n     * The material will not be rendered if the opacity is lower than this value.\n     * See https://threejs.org/docs/#api/en/materials/Material.alphaTest.\n     */\n    alphaTest?: DynamicProperty<number>;\n    /**\n     * Skip rendering clobbered pixels.\n     * See https://threejs.org/docs/#api/en/materials/Material.depthTest.\n     */\n    depthTest?: DynamicProperty<boolean>;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     * See https://threejs.org/docs/#api/en/materials/Material.opacity.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Emissive (light) color of the material, essentially a solid color unaffected by other\n     * lighting. Default is black.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.emissive.\n     * @format color-hex\n     */\n    emissive?: DynamicProperty<StyleColor>;\n    /**\n     * Intensity of the emissive light. Modulates the emissive color. Default is `1`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.emissiveIntensity.\n     */\n    emissiveIntensity?: DynamicProperty<number>;\n    /**\n     * The index of refraction (IOR) of air (approximately 1) divided by the index of refraction of\n     * the material. It is used with environment mapping modes `THREE.CubeRefractionMapping` and\n     * `THREE.EquirectangularRefractionMapping`. The refraction ratio should not exceed `1`. Default\n     *  is `0.98`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.refractionRatio.\n     */\n    refractionRatio?: DynamicProperty<number>;\n\n    /**\n     * Whether and how texture coordinates should be generated. No texture coordinates are\n     * generated if `undefined`.\n     * Should be set if any texture assigned (e.g. `map`, `normalMap`, ...).\n     */\n    textureCoordinateType?: TextureCoordinateType;\n\n    /*\n     * URL or texture buffer that should be used as color map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.map\n     */\n    map?: DynamicProperty<string | TextureBuffer>;\n    mapProperties?: DynamicProperty<TextureProperties>;\n\n    /**\n     * URL or texture buffer that should be used as normal map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.normalMap\n     */\n    normalMap?: DynamicProperty<string | TextureBuffer>;\n    normalMapType?: DynamicProperty<number>;\n    normalMapProperties?: DynamicProperty<TextureProperties>;\n\n    /**\n     * URL or texture buffer that should be used as displacement map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.displacementMap\n     */\n    displacementMap?: DynamicProperty<string | TextureBuffer>;\n    displacementMapProperties?: DynamicProperty<TextureProperties>;\n\n    /**\n     * URL or texture buffer that should be used as roughness map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.roughnessMap\n     */\n    roughnessMap?: DynamicProperty<string | TextureBuffer>;\n    roughnessMapProperties?: DynamicProperty<TextureProperties>;\n\n    /**\n     * URL or texture buffer that should be used as emissive map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.emissiveMap\n     */\n    emissiveMap?: DynamicProperty<string | TextureBuffer>;\n    emissiveMapProperties?: DynamicProperty<TextureProperties>;\n\n    /**\n     * URL or texture buffer that should be used as bump map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.bumpMap\n     */\n    bumpMap?: DynamicProperty<string | TextureBuffer>;\n    bumpMapProperties?: DynamicProperty<TextureProperties>;\n\n    /**\n     * URL or texture buffer that should be used as metalness map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.metalnessMap\n     */\n    metalnessMap?: DynamicProperty<string | TextureBuffer>;\n    metalnessMapProperties?: DynamicProperty<TextureProperties>;\n\n    /**\n     * URL or texture buffer that should be used as alpha map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.alphaMap\n     */\n    alphaMap?: DynamicProperty<string | TextureBuffer>;\n    alphaMapProperties?: DynamicProperty<TextureProperties>;\n}\n\n/**\n * Possible parameters of [[PointTechnique]].\n */\nexport interface PointTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of a point in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * URL of a texture image to be loaded.\n     */\n    texture?: string;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Size of point in pixels.\n     */\n    size?: DynamicProperty<number>;\n    /**\n     * Whether to enable picking on these points.\n     */\n    enablePicking?: boolean;\n}\n\n/**\n * Define the stacking option. Enum values for theme file are in \"kebab-case\".\n */\nexport enum PoiStackMode {\n    /**\n     * Show in a stack.\n     */\n    Show = \"show-in-stack\",\n    /**\n     * Do not show in a stack.\n     */\n    Hide = \"hide-in-stack\",\n    /**\n     * Show category parent in the stack.\n     */\n    ShowParent = \"show-parent\"\n}\n\n/**\n * Define the pickability of an object.\n */\nexport enum Pickability {\n    /**\n     * Pickable if visible.\n     */\n    onlyVisible = \"only-visible\",\n    /**\n     * Not Pickable at all.\n     */\n    transient = \"transient\",\n    /**\n     * All objects of this type pickable.\n     */\n    all = \"all\"\n}\n\n/**\n * Converts backwards compatible transient property to pure {@type Pickabilty} object\n *\n * @param transient The transient property from the style\n */\nexport function transientToPickability(transient?: boolean | Pickability): Pickability {\n    let pickability: Pickability = Pickability.onlyVisible;\n    if (transient !== undefined && transient !== null) {\n        pickability =\n            typeof transient === \"string\"\n                ? transient\n                : transient === true\n                ? Pickability.transient\n                : Pickability.onlyVisible;\n    }\n    return pickability;\n}\n\n/**\n * Defines options (tokens) supported for text placements defined via [[placements]] attribute.\n *\n * @remarks\n * Possible values are defined as vertical placement letter and horizontal letter, where\n * one of the axis may be ignored and then assumed centered. Moving clock-wise, we have:\n * `TL` (top-left), `T` (top-center), `TR` (top-right), `R` (center-right), `BR` (bottom-right),\n * `B` (bottom-center), `BL` (bottom-left), `L` (left), `C` (center-center).\n * Alternatively instead of `T`, `B`, `L`, `R` geographic directions may be used accordingly:\n * `NW` (north-west), `N` (north), `NE` (north-east), `E` (east), `SE` (south-east), `S` (south),\n * `SW` (south-west), `W` (west).\n */\nexport enum PlacementToken {\n    TopLeft = \"TL\",\n    Top = \"T\",\n    TopRight = \"TR\",\n    Right = \"R\",\n    BottomRight = \"BR\",\n    Bottom = \"B\",\n    BottomLeft = \"BL\",\n    Left = \"L\",\n    Center = \"C\",\n    NorthWest = \"NW\",\n    North = \"N\",\n    NorthEast = \"NE\",\n    East = \"E\",\n    SouthEast = \"SE\",\n    South = \"S\",\n    SouthWest = \"SW\",\n    West = \"W\"\n}\n\n/**\n * Technique that describes icons with labels. Used in [[PoiTechnique]] and [[LineMarkerTechnique]]\n * (for road shields).\n */\nexport interface MarkerTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Text to be displayed for feature.\n     *\n     * @remarks\n     * Defaults to first defined:\n     *  - feature property `label` if present in technique (deprecated)\n     *  - `[\"get\", \"name:short\"]` is `useAbbreviation` is true\n     *  - `[\"get\", \"iso_code\"]` is `useIsoCode` is true\n     *  - `[\"get\", \"name:$LANGUAGE\"]` for each specified language\n     *  - `[\"get\", \"name\"]`\n     *\n     * See [[ExtendedTileInfo.getFeatureText]]\n     */\n    text?: DynamicProperty<string>;\n\n    /**\n     * Field name of object containing the text to be rendered.\n     *\n     * @deprecated Use `[\"get\", \"FIELD\"]`.\n     */\n    label?: string;\n    /**\n     * If `true`, the abbreviation (field `name:short`) of the elements is used as text.\n     *\n     * @deprecated Use proper expression with [`get`, `name:short`] for this purpose.\n     */\n    useAbbreviation?: boolean;\n    /**\n     * If `true`, the iso code (field 'iso_code') of the elements is used as text.\n     * The `iso_code` field contains the ISO 3166-1 2-letter country code.\n     *\n     * @deprecated Use proper expression with [`get`, `iso_code`] for this purpose.\n     */\n    useIsoCode?: boolean;\n    /**\n     * Priority of marker, defaults to `0`. Markers with highest priority get placed first.\n     */\n    priority?: DynamicProperty<number>;\n    /**\n     * Minimum zoomLevel at which to display the label text. No default.\n     */\n    textMinZoomLevel?: DynamicProperty<number>;\n    /**\n     * Maximum zoomLevel at which to display the label text. No default.\n     */\n    textMaxZoomLevel?: DynamicProperty<number>;\n    /**\n     * Minimum zoomLevel at which to display the label icon. No default.\n     */\n    iconMinZoomLevel?: DynamicProperty<number>;\n    /**\n     * Maximum zoomLevel at which to display the label icon. No default.\n     */\n    iconMaxZoomLevel?: DynamicProperty<number>;\n\n    /**\n     * Icon color.\n     *\n     * @remarks\n     * If specified, combined using multiplication with color value read from icon texture.\n     * Works best for grayscale or monochromatic textures.\n     */\n    iconColor?: StyleColor;\n\n    /**\n     * Icon brightness.\n     *\n     * @remarks\n     * Factor that multiplies a color on top of the icon texture (and `iconColor`) with `0` being\n     * fully black as final output, `1` being the original rgb colors of the texture.\n     *\n     * @defaultValue `1`\n     */\n    iconBrightness?: number;\n\n    /**\n     * Scaling factor of icon. Defaults to 0.5, reducing the size ot 50% in the distance.\n     */\n    distanceScale?: number;\n    /**\n     * If `false`, text may overlap markers.\n     * @defaultValue `false`\n     */\n    textMayOverlap?: boolean;\n    /**\n     * If `false`, the icon may overlap text and other icons of lower priority.\n     *\n     * @remarks\n     * If not defined, the\n     * property value from `textMayOverlap` will be used.\n     * @defaultValue `false`\n     */\n    iconMayOverlap?: boolean;\n    /**\n     * If `false`, text will not reserve screen space, other markers will be able to overlap.\n     * @defaultValue `true`\n     */\n    textReserveSpace?: boolean;\n    /**\n     * If `false`, icon will not reserve screen space, other markers will be able to overlap.\n     *\n     * @remarks\n     * If not defined, the property value from `iconReserveSpace` will be used.\n     * @defaultValue `true`\n     */\n    iconReserveSpace?: boolean;\n    /**\n     * If `false`, text will not be rendered during animations. Defaults to `true`.\n     */\n    renderTextDuringMovements?: boolean;\n    /**\n     * If `true`, the label will always be rendered on top.\n     *\n     * @remarks\n     * If overlapping with other labels with\n     * this flag set, the render order is undefined.\n     * @defaultValue `false`\n     */\n    alwaysOnTop?: boolean;\n    /**\n     * If `true`, icon will appear even if the text part is blocked by other labels.\n     *\n     * @remarks\n     * @defaultValue `false`\n     */\n    textIsOptional?: boolean;\n    /**\n     * Should be displayed on map or not. Defaults to `true`.\n     */\n    showOnMap?: boolean;\n    /**\n     * Specify stack mode. Defaults to `ShowInStack`.\n     */\n    stackMode?: PoiStackMode;\n    /**\n     * Minimal distance between markers in screen pixels.\n     */\n    minDistance?: number;\n    /**\n     * If `true`, text will appear even if the icon is blocked by other labels.\n     *\n     * @defaultValue `false`\n     */\n    iconIsOptional?: boolean;\n    /**\n     * Fading time for labels in seconds.\n     */\n    textFadeTime?: number;\n    /**\n     * Fading time for icons in seconds.\n     */\n    iconFadeTime?: number;\n    /**\n     * Horizontal offset (to the right) in screen pixels.\n     */\n    xOffset?: DynamicProperty<number>;\n    /**\n     * Vertical offset (up) in screen pixels.\n     */\n    yOffset?: DynamicProperty<number>;\n    /**\n     * Horizontal offset (to the right) in screen pixels.\n     */\n    iconXOffset?: DynamicProperty<number>;\n    /**\n     * Vertical offset (up) in screen pixels.\n     */\n    iconYOffset?: DynamicProperty<number>;\n    /**\n     * Scaling factor of icon.\n     */\n    iconScale?: number;\n    /**\n     * Vertical height in pixels, controls vertical scaling. Overrides `iconScale`.\n     */\n    screenHeight?: DynamicProperty<number>;\n    /**\n     * Horizontal height in pixels, controls horizontal scaling. Overrides `iconScale`.\n     */\n    screenWidth?: DynamicProperty<number>;\n    /**\n     * Name of the POI table which should be used for this POI.\n     */\n    poiTable?: string;\n    /**\n     * Fixed name to identify POI options in the POI table.\n     *\n     * @remarks\n     * If `poiName` has a value, this value\n     * supersedes any value read from the field referenced in `poiNameField`.\n     */\n    poiName?: string;\n    /**\n     * Name of the field to evaluate to get the name of the POI options in the POI table.\n     */\n    poiNameField?: string;\n    /**\n     * The name of either the {@link ImageTexture} in {@link Theme.imageTextures} or the user image\n     * cached in {@link @here/harp-mapview#userImageCache} to be rendered as marker.\n     */\n    imageTexture?: DynamicProperty<string>;\n    /**\n     * Field name to extract imageTexture content from, if imageTexture refers to an\n     * [[ImageTexture]] definition.\n     */\n    imageTextureField?: string;\n    /**\n     * Prefix for `imageTexture` if `imageTextureField` is used.\n     */\n    imageTexturePrefix?: string;\n    /**\n     * Postfix for `imageTexture` if `imageTextureField` is used.\n     */\n    imageTexturePostfix?: string;\n    /**\n     * Name of the text style.\n     */\n    style?: string;\n    /**\n     * Name of the preferred [[Font]] to be used when rendering.\n     */\n    fontName?: string;\n    /**\n     * Size of the text (pixels).\n     */\n    size?: DynamicProperty<number>;\n    /**\n     * Size of the text background (pixels).\n     */\n    backgroundSize?: DynamicProperty<number>;\n    /**\n     * Glyph style to apply for the currently active [[Font]].\n     */\n    fontStyle?: \"Regular\" | \"Bold\" | \"Italic\" | \"BoldItalic\";\n    /**\n     * Glyph variant to apply for the currently active [[Font]].\n     */\n    fontVariant?: \"Regular\" | \"AllCaps\" | \"SmallCaps\";\n    /**\n     * Glyph local rotation (radians).\n     */\n    rotation?: number;\n    /**\n     * Text color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * Text background color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`,\n     * `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    backgroundColor?: DynamicProperty<StyleColor>;\n    /**\n     * For transparent text, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Background text opacity value.\n     */\n    backgroundOpacity?: DynamicProperty<number>;\n    /**\n     * Inter-glyph spacing (pixels). Scaled by `size`.\n     */\n    tracking?: DynamicProperty<number>;\n    /**\n     * Inter-line spacing (pixels). Scaled by `size`.\n     */\n    leading?: DynamicProperty<number>;\n    /**\n     * Maximum number of lines for this label.\n     */\n    maxLines?: DynamicProperty<number>;\n    /**\n     * Maximum line width (pixels).\n     */\n    lineWidth?: DynamicProperty<number>;\n    /**\n     * [[TextCanvas]] rotation (radians).\n     */\n    canvasRotation?: DynamicProperty<number>;\n    /**\n     * Line typesetting rotation (radians).\n     */\n    lineRotation?: DynamicProperty<number>;\n    /**\n     * Wrapping (line-breaking) mode.\n     */\n    wrappingMode?: DynamicProperty<\"None\" | \"Character\" | \"Word\">;\n    /**\n     * Text position regarding the baseline.\n     *\n     * @note The [[placements]] attribute may override the alignment settings.\n     */\n    hAlignment?: DynamicProperty<\"Left\" | \"Center\" | \"Right\">;\n    /**\n     * Text position inside a line.\n     *\n     * @note The [[placements]] attribute may supersede it.\n     */\n    vAlignment?: DynamicProperty<\"Above\" | \"Center\" | \"Below\">;\n    /**\n     * Text label positions relative to the label central position (anchor point).\n     *\n     * @remarks\n     * This attribute defines a comma separated tokens of possible text placements\n     * relative to label central position (anchor), for example: \"TL, TR, C\".\n     * Keep in mind that horizontal placement defines text position in opposite way to\n     * the alignment, so the text `R` placed (located on the **right side** of label position)\n     * will be the same as `Left` aligned by deduction. On other side vertical placement is quite\n     * similar to vertical alignment so `T` placement corresponds with `Above` alignment.\n     *\n     * @note This attribute may override [[hAlignment]] and [[vAlignment]] if defined.\n     */\n    placements?: string;\n\n    /**\n     * World space offset in meters applied to the icon along the ground plane, i.e. tangent\n     * to the local space up vector.\n     *\n     * @remarks\n     * Valid only for icons which have the\n     * \"offset_direction\" property as an attribute of the data, which specifies an angle in degrees\n     * in which direction the offset should take place, i.e. 0 degrees is north, 90 is east etc.\n     */\n    worldOffset?: DynamicProperty<number>;\n}\n\nexport interface LineTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of a line in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Width of line in pixels. WebGL implementations will normally render all lines with 1 pixel\n     * width, and ignore this value.\n     */\n    lineWidth: DynamicProperty<number>;\n}\n\n/**\n * Declares a geometry as a segment.\n */\nexport interface SegmentsTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of segments in a hexadecimal notation, for example: `\"#e4e9ec\"` or `\"#fff\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * For transparent lines, set a value between `0.0` for fully transparent, to `1.0` for fully\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Width of a line in meters.\n     */\n    lineWidth: DynamicProperty<number>;\n}\n\n/**\n * Declares a a geometry as a polygon.\n */\nexport interface PolygonalTechniqueParams {\n    /**\n     * Whether to use polygon offset. Default is false.\n     *\n     * @remarks\n     * This corresponds to the\n     * GL_POLYGON_OFFSET_FILL WebGL feature.\n     *\n     * PolygonOffset is used to raise the geometry towards the geometry (for depth calculation\n     * only). Default is false.\n     *\n     * See here: https://sites.google.com/site/threejstuts/home/polygon_offset\n     *\n     * To activate polygonOffset these values have to be set to pull the line \"forwards\":\n     *\n     * transparent: true\n     *\n     * polygonOffset: true\n     *\n     * polygonOffsetFactor : -1.0, (as an example, see link above)\n     *\n     * polygonOffsetUnits: -1 (as an example, see link above)\n     */\n    polygonOffset?: boolean;\n\n    /**\n     * Sets the polygon offset factor. Default is 0.\n     */\n    polygonOffsetFactor?: DynamicProperty<number>;\n\n    /**\n     * Sets the polygon offset units. Default is 0.\n     */\n    polygonOffsetUnits?: DynamicProperty<number>;\n\n    /**\n     * Skip rendering clobbered pixels.\n     * See https://threejs.org/docs/#api/en/materials/Material.depthTest.\n     * @defaultValue `false`\n     */\n    depthTest?: DynamicProperty<boolean>;\n\n    /**\n     * Sets the polygon outline color.\n     * @format color-hex\n     */\n    lineColor?: DynamicProperty<StyleColor>;\n\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges start\n     * fading out.\n     */\n    lineFadeNear?: DynamicProperty<number>;\n\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges become\n     * transparent. A value of <= 0.0 disables fading.\n     */\n    lineFadeFar?: DynamicProperty<number>;\n\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: DynamicProperty<boolean>;\n\n    /**\n     * For transparent lines, set a value between `0.0` for fully transparent, to `1.0` for fully\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n\n    /**\n     * Fill color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n}\n\n/**\n * Declares a a geometry as a basic extruded line.\n */\nexport interface BasicExtrudedLineTechniqueParams\n    extends BaseTechniqueParams,\n        PolygonalTechniqueParams {\n    /**\n     * A value determining the shading technique.\n     *\n     * @remarks\n     * Valid values are \"Basic\" and \"Standard\". Default is \"basic\".\n     *\n     * `\"basic\"`   : Simple shading, faster to render. Only simple color and opacity are effective.\n     * `\"standard\"`: Elaborate shading, with metalness, and roughness.\n     */\n    shading?: \"basic\";\n    /**\n     * Width of line in meters for different zoom levels.\n     */\n    lineWidth: DynamicProperty<number>;\n    /**\n     * A value of `true` creates a wireframe geometry. (May not be supported with all techniques).\n     */\n    wireframe?: boolean;\n    /**\n     * Style of both end caps. Possible values: `\"None\"`, `\"Circle\"`. A value of undefined maps to\n     * `\"Circle\"`.\n     */\n    caps?: DynamicProperty<\"None\" | \"Circle\">;\n}\n\n/**\n * Declares a a geometry as a standard extruded line.\n */\nexport interface StandardExtrudedLineTechniqueParams\n    extends StandardTechniqueParams,\n        PolygonalTechniqueParams {\n    /**\n     * A value determining the shading technique. Valid values are `\"basic\"` and `\"standard\"`.\n     * Default is `\"basic\"`.\n     *\n     * @remarks\n     * `\"basic\"` : Simple shading, faster to render. Only simple color and opacity are effective.\n     * `\"standard\"` : Elaborate shading, with metalness, and roughness.\n     */\n    shading: \"standard\";\n    /**\n     * Width of a line in meters for different zoom levels.\n     */\n    lineWidth: DynamicProperty<number>;\n    /**\n     * Style of both end caps. Possible values: `\"None\"`, `\"Circle\"`.\n     *\n     * @remarks\n     * A value of undefined maps to\n     * `\"Circle\"`.\n     */\n    caps?: DynamicProperty<\"None\" | \"Circle\">;\n}\n\n/**\n * Declares a a geometry as a solid line.\n */\nexport interface SolidLineTechniqueParams extends BaseTechniqueParams, PolygonalTechniqueParams {\n    /**\n     * Color of a line in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * Color of a line outline in hexadecimal or CSS-style notation,\n     * for example: `\"#e4e9ec\"`, `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    outlineColor?: DynamicProperty<StyleColor>;\n    /**\n     * @deprecated Specify metrics units as part of the value instead.\n     * Units in which different size properties are specified. Either `Meter` (default) or `Pixel`.\n     */\n    metricUnit?: MetricUnit;\n    /**\n     * Width of a line in `metricUnit` for different zoom levels.\n     */\n    lineWidth: DynamicProperty<StyleLength>;\n    /**\n     * Outline width of a line in `metricUnit`s for different zoom levels.\n     */\n    outlineWidth?: DynamicProperty<StyleLength>;\n    /**\n     * Clip the line outside the tile if `true`.\n     * @defaultValue false\n     */\n    clipping?: DynamicProperty<boolean>;\n    /**\n     * Describes the style of the line caps.\n     * @defaultValue `\"Round\"`.\n     */\n    caps?: DynamicProperty<LineCaps>;\n    /**\n     * Color of secondary line geometry in hexadecimal or CSS-style notation, for example:\n     * `\"#e4e9ec\"`, `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    secondaryColor?: DynamicProperty<StyleColor>;\n    /**\n     * Width of secondary line geometry in `metricUnit`s for different zoom levels.\n     */\n    secondaryWidth?: DynamicProperty<StyleLength>;\n    /**\n     * The render order of the secondary line geometry object created using this technique.\n     */\n    secondaryRenderOrder?: DynamicProperty<number>;\n    /**\n     * Describes the style of the secondary line caps\n     * @defaultValue `\"Round\"`.\n     */\n    secondaryCaps?: DynamicProperty<LineCaps>;\n    /**\n     * Describes the category of the secondary geometry object created using this technique.\n     */\n    secondaryCategory?: DynamicProperty<string>;\n    /**\n     * Describes the starting drawing position for the line (in the range [0...1]).\n     * Default is `0.0`.\n     */\n    drawRangeStart?: number;\n    /**\n     * Describes the ending drawing position for the line (in the range [0...1]).\n     * Default is `1.0`.\n     */\n    drawRangeEnd?: number;\n    /**\n     * Describes the style of the line dashes.\n     * @defaultValue `\"Square\"`.\n     */\n    dashes?: DynamicProperty<LineDashes>;\n    /**\n     * Color of a line dashes in hexadecimal or CSS-style notation,\n     * for example: `\"#e4e9ec\"`, `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    dashColor?: DynamicProperty<StyleColor>;\n    /**\n     * Length of a line in meters for different zoom levels.\n     */\n    dashSize?: DynamicProperty<StyleLength>;\n    /**\n     * Size of a gap between lines in meters for different zoom levels.\n     */\n    gapSize?: DynamicProperty<StyleLength>;\n    /**\n     * Size in world units how far to offset the line perpendicular to its direction.\n     */\n    offset?: DynamicProperty<number>;\n}\n\n/**\n * Technique used to draw filled polygons.\n */\nexport interface FillTechniqueParams extends BaseTechniqueParams, PolygonalTechniqueParams {\n    /**\n     * A value of `true` creates a wireframe geometry. (May not be supported with all techniques).\n     */\n    wireframe?: boolean;\n    /**\n     * Width of the lines. Currently limited to the [0, 1] range.\n     */\n    lineWidth?: DynamicProperty<number>;\n\n    /*\n     * URL or texture buffer that should be used as color map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshBasicMaterial.map\n     */\n    map?: DynamicProperty<string | TextureBuffer>;\n    mapProperties?: DynamicProperty<TextureProperties>;\n\n    /**\n     * Whether and how texture coordinates should be generated. No texture coordinates are\n     * generated if `undefined`.\n     * Should be set if a `map` is assigned.\n     */\n    textureCoordinateType?: TextureCoordinateType;\n}\n\n/**\n * Technique used to draw a geometry as an extruded polygon, for example extruded buildings.\n */\nexport interface ExtrudedPolygonTechniqueParams extends StandardTechniqueParams {\n    /**\n     * Renders the footprint lines if set to 'true'.\n     */\n    footprint?: boolean;\n    /**\n     * Set to a negative value to remove all the vertical lines, and to a value between 0.0 and 1.0\n     * to modulate the amount of vertical lines rendered.\n     */\n    maxSlope?: number;\n    /**\n     * Width of the lines. Currently limited to the [0, 1] range.\n     */\n    lineWidth: DynamicProperty<number>;\n    /**\n     * Fill color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    lineColor?: DynamicProperty<StyleColor>;\n    /**\n     * Mix value between the lineColor(0.0) and the geometry's vertex colors(1.0).\n     */\n    lineColorMix?: number;\n\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges start\n     * fading out.\n     */\n    lineFadeNear?: DynamicProperty<number>;\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges become\n     * transparent. A value of <= 0.0 disables fading.\n     */\n    lineFadeFar?: DynamicProperty<number>;\n\n    /**\n     * Height above ground in world units of extruded polygon.\n     *\n     * Usually, unique per feature, so defaults to `[\"get\", \"height\"]`.\n     */\n    height?: DynamicProperty<number>;\n\n    /**\n     * Height of \"floor\" of extruded polygon in world units of extruded polygon.\n     *\n     * Usually, unique per feature, so defaults to `[\"number\", [\"get\", \"min_height\"], 0]`.\n     */\n    floorHeight?: DynamicProperty<number>;\n\n    /**\n     * In some data sources, for example Tilezen, building extrusion information might be missing.\n     * This attribute allows to define a default height of an extruded polygon in the theme.\n     *\n     * @deprecated use [[height]]\n     */\n    defaultHeight?: number;\n\n    /**\n     * Default color used if feature doesn't provide color attribute\n     * and [[MapEnv]] did not return it too.\n     * @format color-hex\n     */\n    defaultColor?: DynamicProperty<StyleColor>;\n\n    /**\n     * If `true`, wall geometry will is added along the tile boundaries.\n     *\n     * @remarks\n     * this causes artifacts when used with shadows,\n     * so it should be known in advance that shadows won't be enabled.\n     * @defaultValue `false`\n     */\n    boundaryWalls?: boolean;\n\n    /**\n     * Animate the extrusion of the buildings if set to `true`.\n     */\n    animateExtrusion?: DynamicProperty<boolean>;\n\n    /**\n     * Duration of the building's extrusion in milliseconds\n     */\n    animateExtrusionDuration?: number;\n\n    /**\n     * Control rendering of depth prepass before the actual geometry.\n     *\n     * @remarks\n     * Depth prepass is a method to render translucent meshes, hence only the visible front faces of\n     * a mesh are actually rendered, removing artifacts caused by blending with internal faces of\n     * the mesh. This method is used for drawing translucent buildings over map background.\n     *\n     * By default, each [[DataSource]] determines how/if enable the depth pre-pass. A value of\n     * `false` forcefully disables depth prepass.\n     */\n    enableDepthPrePass?: boolean;\n}\n\nexport interface ShaderTechniqueMaterialParameters {\n    [name: string]: any;\n}\n\n/**\n * Special technique for user-defined shaders. See\n * https://threejs.org/docs/#api/harp-materials/ShaderMaterial for details.\n */\nexport interface ShaderTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Parameters for shader. See `THREE.ShaderMaterialParameters`.\n     */\n    params: ShaderTechniqueMaterialParameters;\n\n    /**\n     * Type of primitive for the shader technique.\n     */\n    primitive: \"point\" | \"line\" | \"segments\" | \"mesh\";\n\n    [name: string]: any;\n}\n\n/**\n * Technique used to render a terrain geometry with a texture.\n *\n * @remarks\n * When using this technique, the datasource will produce texture coordinates in\n * local tile space (i.e. [0,0] at south-west and [1,1] at north-east tile corner).\n */\nexport interface TerrainTechniqueParams extends StandardTechniqueParams {\n    /**\n     * Colors to be applied at different heights (as a results of a `displacementMap`).\n     */\n    heightBasedColors?: HeightBasedColors;\n\n    /**\n     * If `heightBasedColors` is defined, this value defines the interpolation method used to\n     * generate the height-based gradient texture (defaults to `Discrete`).\n     * @defaultValue `\"Discrete\"`\n     */\n    heightGradientInterpolation?: \"Discrete\" | \"Linear\" | \"Cubic\";\n\n    /**\n     * If `heightBasedColors` is defined, this value defines the width (in pixels) of the generated\n     * gradient texture.\n     *\n     * @defaultValue `128`\n     */\n    heightGradientWidth?: number;\n}\n\n/**\n * Render geometry as a text.\n */\nexport interface TextTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Text to be displayed for feature.\n     *\n     * @remarks\n     * Defaults to first defined:\n     *  - feature property `label` if present in technique (depreacted);\n     *  - `[\"get\", \"name:short\"]` is `useAbbreviation` is true;\n     *  - `[\"get\", \"iso_code\"]` is `useIsoCode` is true;\n     *  - `[\"get\", \"name:$LANGUAGE\"]` for each specified language;\n     *  - `[\"get\", \"name\"]`.\n     */\n    text?: DynamicProperty<string>;\n\n    /**\n     * Field name of object containing the text to be rendered.\n     *\n     * @deprecated Use `[\"get\", \"FIELD\"]`.\n     */\n    label?: string;\n    /**\n     * If `true`, the abbreviation (field `name:short`) of the elements is used as text.\n     *\n     * @deprecated Use proper expression with [`get`, `name:short`] for this purpose.\n     */\n    useAbbreviation?: boolean;\n    /**\n     * If `true`, the iso code (field 'iso_code') of the elements is used as text.\n     * @remarks\n     * The `iso_code` field contains the ISO 3166-1 2-letter country code.\n     *\n     * @deprecated Use proper expression with [`get`, `iso_code`] for this purpose.\n     */\n    useIsoCode?: boolean;\n    /**\n     * Priority of text, defaults to `0`. Elements with highest priority get placed first.\n     */\n    priority?: DynamicProperty<number>;\n    /**\n     * Scaling factor of the text. Defaults to 0.5, reducing the size ot 50% in the distance.\n     */\n    distanceScale?: number;\n    /**\n     * If `true`, icon is allowed to overlap other labels or icons of lower priority.\n     * @defaultValue `false`\n     */\n    mayOverlap?: boolean;\n    /**\n     * If `true`, element will reserve screen space, other markers of lower priority will not be\n     * able to overlap.\n     * @defaultValue `true`\n     */\n    reserveSpace?: boolean;\n    /**\n     * Fading time for labels in seconds.\n     */\n    textFadeTime?: number;\n    /**\n     * Horizontal offset (to the right) in screen pixels.\n     */\n    xOffset?: number;\n    /**\n     * Vertical offset (up) in screen pixels.\n     */\n    yOffset?: number;\n    /**\n     * Name of the text style.\n     */\n    style?: string;\n    /**\n     * Name of the preferred [[Font]] to be used when rendering.\n     */\n    fontName?: string;\n    /**\n     * Size of the text (pixels).\n     */\n    size?: DynamicProperty<number>;\n    /**\n     * Size of the text background (pixels).\n     */\n    backgroundSize?: DynamicProperty<number>;\n    /**\n     * Glyph style to apply for the currently active [[Font]].\n     */\n    fontStyle?: \"Regular\" | \"Bold\" | \"Italic\" | \"BoldItalic\";\n    /**\n     * Glyph variant to apply for the currently active [[Font]].\n     */\n    fontVariant?: \"Regular\" | \"AllCaps\" | \"SmallCaps\";\n    /**\n     * Glyph local rotation (radians).\n     */\n    rotation?: number;\n    /**\n     * Text color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * Text background color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`,\n     * `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    backgroundColor?: DynamicProperty<StyleColor>;\n    /**\n     * For transparent text, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Background text opacity value.\n     */\n    backgroundOpacity?: DynamicProperty<number>;\n    /**\n     * Inter-glyph spacing (pixels). Scaled by `size`.\n     */\n    tracking?: DynamicProperty<number>;\n    /**\n     * Inter-line spacing (pixels). Scaled by `size`.\n     */\n    leading?: DynamicProperty<number>;\n    /**\n     * Maximum number of lines for this label.\n     */\n    maxLines?: DynamicProperty<number>;\n    /**\n     * Maximum line width (pixels).\n     */\n    lineWidth?: DynamicProperty<number>;\n    /**\n     * [[TextCanvas]] rotation (radians).\n     */\n    canvasRotation?: DynamicProperty<number>;\n    /**\n     * Line typesetting rotation (radians).\n     */\n    lineRotation?: DynamicProperty<number>;\n    /**\n     * Wrapping (line-breaking) mode.\n     */\n    wrappingMode?: DynamicProperty<\"None\" | \"Character\" | \"Word\">;\n    /**\n     * Text position regarding the baseline.\n     */\n    hAlignment?: DynamicProperty<\"Left\" | \"Center\" | \"Right\">;\n    /**\n     * Text position inside a line.\n     */\n    vAlignment?: DynamicProperty<\"Above\" | \"Center\" | \"Below\">;\n}\n\n/**\n * Buffer holding a texture.\n */\nexport interface TextureBuffer {\n    /**\n     * Buffer containing the (compressed) image or the raw texture data.\n     */\n    buffer: ArrayBuffer;\n\n    /**\n     * Mime type of the image or 'image/raw' in case of raw texture data.\n     */\n    type: string;\n\n    /**\n     * Properties for creating a three.js DataTexture\n     * (https://threejs.org/docs/#api/en/textures/DataTexture).\n     */\n    dataTextureProperties?: DataTextureProperties;\n}\n\n/**\n * Type guard to check if an object is an instance of `TextureBuffer`.\n */\nexport function isTextureBuffer(object: any): object is TextureBuffer {\n    return object && object.buffer && typeof object.type === \"string\";\n}\n\n/**\n * Properties of a DataTexture (https://threejs.org/docs/#api/en/textures/DataTexture).\n */\nexport interface DataTextureProperties {\n    width: number;\n    height: number;\n\n    format?: PixelFormat;\n    type?: TextureDataType;\n}\n\n/**\n * Properties of a Texture (https://threejs.org/docs/#api/en/textures/Texture).\n */\nexport interface TextureProperties {\n    /**\n     * Texture horizontal wrapping mode.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.wrapS.\n     */\n    wrapS?: WrappingMode;\n\n    /**\n     * Texture vertical wrapping mode.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.wrapT.\n     */\n    wrapT?: WrappingMode;\n\n    /**\n     * Texture magnification filter.\n     */\n    magFilter?: MagFilter;\n\n    /**\n     * Texture minification filter.\n     */\n    minFilter?: MinFilter;\n\n    /**\n     * Flip texture vertically.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.flipY.\n     */\n    flipY?: boolean;\n\n    /**\n     * Texture horizontal repetition rate.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.repeat.\n     */\n    repeatU?: number;\n\n    /**\n     * Texture vertical repetition rate.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.repeat.\n     */\n    repeatV?: number;\n}\n\n/**\n * Interface containing the definition of different colors to be used at different heights with the\n * [[TerrainTechnique]].\n */\nexport interface HeightBasedColors {\n    heightArray: number[];\n    colorArray: string[];\n}\n\nexport type PixelFormat =\n    | \"Alpha\"\n    | \"RGB\"\n    | \"RGBA\"\n    | \"Luminance\"\n    | \"LuminanceAlpha\"\n    | \"RGBE\"\n    | \"Depth\"\n    | \"DepthStencil\"\n    | \"Red\";\n\nexport type TextureDataType =\n    | \"UnsignedByte\"\n    | \"Byte\"\n    | \"Short\"\n    | \"UnsignedShort\"\n    | \"Int\"\n    | \"UnsignedInt\"\n    | \"Float\"\n    | \"HalfFloat\";\n\n/**\n * Available texture wrapping modes.\n */\nexport type WrappingMode = \"clamp\" | \"repeat\" | \"mirror\";\n\n/**\n * Available texture magnification filters.\n */\nexport type MagFilter = \"nearest\" | \"linear\";\n\n/**\n * Available texture minification filters.\n */\nexport type MinFilter =\n    | \"nearest\"\n    | \"nearestMipMapNearest\"\n    | \"nearestMipMapLinear\"\n    | \"linear\"\n    | \"linearMipMapNearest\"\n    | \"linearMipMapLinear\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Expr, JsonExpr } from \"./Expr\";\nimport { InterpolatedPropertyDefinition } from \"./InterpolatedPropertyDefs\";\nimport {\n    BaseTechniqueParams,\n    BasicExtrudedLineTechniqueParams,\n    ExtrudedPolygonTechniqueParams,\n    FillTechniqueParams,\n    isTextureBuffer,\n    LineTechniqueParams,\n    MarkerTechniqueParams,\n    PointTechniqueParams,\n    SegmentsTechniqueParams,\n    ShaderTechniqueParams,\n    SolidLineTechniqueParams,\n    StandardExtrudedLineTechniqueParams,\n    StandardTechniqueParams,\n    TerrainTechniqueParams,\n    TextTechniqueParams,\n    TextureCoordinateType\n} from \"./TechniqueParams\";\nimport { StylePriority } from \"./Theme\";\n\n/**\n * Names of the supported texture properties.\n * @internal\n */\nexport const TEXTURE_PROPERTY_KEYS = [\n    \"map\",\n    \"normalMap\",\n    \"displacementMap\",\n    \"roughnessMap\",\n    \"emissiveMap\",\n    \"alphaMap\",\n    \"metalnessMap\",\n    \"bumpMap\"\n];\n\n// TODO: Can be removed, when all when interpolators are implemented as {@link Expr}s\ntype RemoveInterpolatedPropDef<T> = T | InterpolatedPropertyDefinition<any> extends T\n    ? Exclude<T, InterpolatedPropertyDefinition<any>>\n    : T;\ntype RemoveJsonExpr<T> = T | JsonExpr extends T ? Exclude<T, JsonExpr> : T;\n\n/**\n * Make runtime representation of technique attributes from JSON-compatible typings.\n *\n * Translates\n *  - InterpolatedPropertyDefinition -> InterpolatedProperty\n *  - JsonExpr -> Expr\n */\nexport type MakeTechniqueAttrs<T> = {\n    [P in keyof T]: T[P] | JsonExpr extends T[P]\n        ? RemoveInterpolatedPropDef<RemoveJsonExpr<T[P]>> | Expr\n        : T[P];\n};\n\n/**\n * Possible techniques that can be used to draw a geometry on the map.\n */\nexport type Technique =\n    | SquaresTechnique\n    | CirclesTechnique\n    | PoiTechnique\n    | LineMarkerTechnique\n    | LineTechnique\n    | SegmentsTechnique\n    | SolidLineTechnique\n    | FillTechnique\n    | StandardTechnique\n    | TerrainTechnique\n    | BasicExtrudedLineTechnique\n    | StandardExtrudedLineTechnique\n    | ExtrudedPolygonTechnique\n    | ShaderTechnique\n    | TextTechnique\n    | LabelRejectionLineTechnique;\n\n/**\n * Runtime representation of `SquaresStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `PointTechniqueParams`.\n */\nexport interface SquaresTechnique extends MakeTechniqueAttrs<PointTechniqueParams> {\n    name: \"squares\";\n}\n\n/**\n * Runtime representation of `CirclesStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `PointTechniqueParams`.\n */\nexport interface CirclesTechnique extends MakeTechniqueAttrs<PointTechniqueParams> {\n    name: \"circles\";\n}\n\n/**\n * Runtime representation of `PoiStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `MarkerTechniqueParams`.\n */\nexport interface PoiTechnique extends MakeTechniqueAttrs<MarkerTechniqueParams> {\n    name: \"labeled-icon\";\n}\n\n/**\n * Runtime representation of `LineMarkerStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `MarkerTechniqueParams`.\n */\nexport interface LineMarkerTechnique extends MakeTechniqueAttrs<MarkerTechniqueParams> {\n    name: \"line-marker\";\n}\n\n/**\n * Runtime representation of `SegmentsStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `SegmentsTechniqueParams`.\n */\nexport interface SegmentsTechnique extends MakeTechniqueAttrs<SegmentsTechniqueParams> {\n    name: \"segments\";\n}\n\n/**\n * Runtime representation of `BasicExtrudedLineStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `BasicExtrudedLineTechniqueParams`.\n */\nexport interface BasicExtrudedLineTechnique\n    extends MakeTechniqueAttrs<BasicExtrudedLineTechniqueParams> {\n    name: \"extruded-line\";\n}\n\n/**\n * Runtime representation of `StandardExtrudedLineStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `StandardExtrudedLineTechniqueParams`.\n */\nexport interface StandardExtrudedLineTechnique\n    extends MakeTechniqueAttrs<StandardExtrudedLineTechniqueParams> {\n    name: \"extruded-line\";\n}\n\n/**\n * Runtime representation of `SolidLineStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `SolidLineTechniqueParams`.\n */\nexport interface SolidLineTechnique extends MakeTechniqueAttrs<SolidLineTechniqueParams> {\n    name: \"solid-line\" | \"dashed-line\";\n}\n\n/**\n * Runtime representation of `LineStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `LineTechniqueParams`.\n */\nexport interface LineTechnique extends MakeTechniqueAttrs<LineTechniqueParams> {\n    name: \"line\";\n}\n\n/**\n * Runtime representation of `FillStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `FillTechniqueParams`.\n */\nexport interface FillTechnique extends MakeTechniqueAttrs<FillTechniqueParams> {\n    name: \"fill\";\n}\n\n/**\n * Technique used to render a mesh geometry.\n * For technique parameters see `StandardTechniqueParams`.\n */\nexport interface StandardTechnique extends MakeTechniqueAttrs<StandardTechniqueParams> {\n    name: \"standard\";\n}\n\n/**\n * Runtime representation of `ExtrudedPolygonStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `ExtrudedPolygonTechniqueParams`.\n */\nexport interface ExtrudedPolygonTechnique\n    extends MakeTechniqueAttrs<ExtrudedPolygonTechniqueParams> {\n    name: \"extruded-polygon\";\n}\n\n/**\n * Runtime representation of `TextStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `TextTechniqueParams`.\n */\nexport interface TextTechnique extends MakeTechniqueAttrs<TextTechniqueParams> {\n    name: \"text\";\n}\n\n/**\n * Special technique for user-defined shaders.\n * For technique parameters see `ShaderTechniqueParams`.\n */\nexport interface ShaderTechnique extends MakeTechniqueAttrs<ShaderTechniqueParams> {\n    name: \"shader\";\n}\n\n/**\n * Technique used to render a terrain geometry with textures.\n * For technique parameters see `TerrainTechniqueParams`.\n */\nexport interface TerrainTechnique extends MakeTechniqueAttrs<TerrainTechniqueParams> {\n    name: \"terrain\";\n}\n\n/**\n * Technique to avoid label rendering on top of certain line geometries.\n * For technique parameters see `BaseTechniqueParams`.\n */\nexport interface LabelRejectionLineTechnique extends MakeTechniqueAttrs<BaseTechniqueParams> {\n    name: \"label-rejection-line\";\n}\n\n/**\n * Names of the properties controlling transparency.\n * @internal\n */\nexport const TRANSPARENCY_PROPERTY_KEYS = [\"opacity\", \"transparent\"];\n\n/**\n * Additional params used for optimized usage of `Techniques`.\n */\nexport interface IndexedTechniqueParams {\n    /**\n     * Optimization: Index into table in `StyleSetEvaluator` or in `DecodedTile`.\n     * @hidden\n     */\n    _index: number;\n\n    /**\n     * Optimization: Unique `Technique` index of `Style` from which technique was derived.\n     * @hidden\n     */\n    _styleSetIndex: number;\n\n    /**\n     * The styleSet associated to this `Technique`.\n     * @hidden\n     */\n    _styleSet?: string;\n\n    /**\n     * The category used to assign render orders to objects created using this `Technique`.\n     * @hidden\n     */\n    _category?: string;\n\n    /**\n     * The category used to assign render orders to secondary objects\n     * created using this `Technique`.\n     * @hidden\n     */\n    _secondaryCategory?: string;\n\n    /**\n     * `true` if any of the properties of this technique needs to access\n     * the feature's state.\n     *\n     * @hidden\n     */\n    _usesFeatureState?: boolean;\n\n    /**\n     * Last computed state derived from [[Technique.kind]].\n     */\n    _kindState?: boolean;\n}\n\n/**\n * For efficiency, `StyleSetEvaluator` returns `Techniques` additional params as defined in\n * `IndexedTechniqueParams`.\n */\nexport type IndexedTechnique = Technique & IndexedTechniqueParams;\n\n/**\n * Type guard to check if an object is an instance of `CirclesTechnique`.\n */\nexport function isCirclesTechnique(technique: Technique): technique is CirclesTechnique {\n    return technique.name === \"circles\";\n}\n\n/**\n * Type guard to check if an object is an instance of `SquaresTechnique`.\n */\nexport function isSquaresTechnique(technique: Technique): technique is SquaresTechnique {\n    return technique.name === \"squares\";\n}\n\n/**\n * Type guard to check if an object is an instance of `PoiTechnique`.\n */\nexport function isPoiTechnique(technique: Technique): technique is PoiTechnique {\n    return technique.name === \"labeled-icon\";\n}\n\n/**\n * Type guard to check if an object is an instance of `LineMarkerTechnique`.\n */\nexport function isLineMarkerTechnique(technique: Technique): technique is LineMarkerTechnique {\n    return technique.name === \"line-marker\";\n}\n\n/**\n * Type guard to check if an object is an instance of `LineTechnique`.\n */\nexport function isLineTechnique(technique: Technique): technique is LineTechnique {\n    return technique.name === \"line\";\n}\n\n/**\n * Type guard to check if an object is an instance of `SolidLineTechnique`.\n */\nexport function isSolidLineTechnique(technique: Technique): technique is SolidLineTechnique {\n    return technique.name === \"solid-line\" || technique.name === \"dashed-line\";\n}\n\n/**\n * Type guard to check if an object is an instance of `SolidLineTechnique` and is a kind that\n * has special dashes.\n * @note Lines with special dashes need line caps to render properly.\n */\nexport function isSpecialDashesLineTechnique(\n    technique: Technique\n): technique is SolidLineTechnique {\n    return (\n        (technique.name === \"solid-line\" || technique.name === \"dashed-line\") &&\n        technique.dashes !== undefined &&\n        technique.dashes !== \"Square\"\n    );\n}\n\n/**\n * Type guard to check if an object is an instance of `SegmentsTechnique`.\n */\nexport function isSegmentsTechnique(technique: Technique): technique is SegmentsTechnique {\n    return technique.name === \"segments\";\n}\n\n/**\n * Type guard to check if an object is an instance of `BasicExtrudedLineTechnique`\n * or `StandardExtrudedLineTechnique`.\n */\nexport function isExtrudedLineTechnique(\n    technique: Technique\n): technique is BasicExtrudedLineTechnique | StandardExtrudedLineTechnique {\n    return technique.name === \"extruded-line\";\n}\n\n/**\n * Type guard to check if an object is an instance of `BasicExtrudedLineTechnique`.\n */\nexport function isBasicExtrudedLineTechnique(\n    technique: Technique\n): technique is BasicExtrudedLineTechnique {\n    return isExtrudedLineTechnique(technique) && technique.shading === \"basic\";\n}\n\n/**\n * Type guard to check if an object is an instance of `StandardExtrudedLineTechnique`.\n */\nexport function isStandardExtrudedLineTechnique(\n    technique: Technique\n): technique is StandardExtrudedLineTechnique {\n    return isExtrudedLineTechnique(technique) && technique.shading === \"standard\";\n}\n\n/**\n * Type guard to check if an object is an instance of `FillTechnique`.\n */\nexport function isFillTechnique(technique: Technique): technique is FillTechnique {\n    return technique.name === \"fill\";\n}\n\n/**\n * Type guard to check if an object is an instance of `ExtrudedPolygonTechnique`.\n */\nexport function isExtrudedPolygonTechnique(\n    technique: Technique\n): technique is ExtrudedPolygonTechnique {\n    return technique.name === \"extruded-polygon\";\n}\n\n/**\n * Type guard to check if an object is an instance of `StandardTechnique`.\n */\nexport function isStandardTechnique(technique: Technique): technique is StandardTechnique {\n    return technique.name === \"standard\";\n}\n\n/**\n * Type guard to check if an object is an instance of `TerrainTechnique`.\n */\nexport function isTerrainTechnique(technique: Technique): technique is TerrainTechnique {\n    return technique.name === \"terrain\";\n}\n\n/**\n * Type guard to check if an object is an instance of `TextTechnique`.\n */\nexport function isTextTechnique(technique: Technique): technique is TextTechnique {\n    return technique.name === \"text\";\n}\n\n/**\n * Type guard to check if an object is an instance of `ShaderTechnique`.\n */\nexport function isShaderTechnique(technique: Technique): technique is ShaderTechnique {\n    return technique.name === \"shader\";\n}\n\nexport function isLabelRejectionLineTechnique(\n    technique: Technique\n): technique is LabelRejectionLineTechnique {\n    return technique.name === \"label-rejection-line\";\n}\n\n/**\n * Check if vertex normals should be generated for this technique (if no normals are in the data).\n * @param technique - Technique to check.\n */\nexport function needsVertexNormals(technique: Technique): boolean {\n    return (\n        isExtrudedPolygonTechnique(technique) ||\n        isFillTechnique(technique) ||\n        isStandardTechnique(technique) ||\n        isTerrainTechnique(technique) ||\n        isStandardExtrudedLineTechnique(technique)\n    );\n}\n\n/**\n * Type guard to check if an object is an instance of a technique with textures.\n */\nexport function supportsTextures(\n    technique: Technique\n): technique is FillTechnique | StandardTechnique | ExtrudedPolygonTechnique | TerrainTechnique {\n    return (\n        isFillTechnique(technique) ||\n        isStandardTechnique(technique) ||\n        isExtrudedPolygonTechnique(technique) ||\n        isTerrainTechnique(technique)\n    );\n}\n\n/**\n * Get the texture coordinate type if the technique supports it.\n */\nexport function textureCoordinateType(technique: Technique): TextureCoordinateType | undefined {\n    return supportsTextures(technique) || isShaderTechnique(technique)\n        ? technique.textureCoordinateType\n        : undefined;\n}\n\n/**\n * Add all the buffers of the technique to the transfer list.\n */\nexport function addBuffersToTransferList(technique: Technique, transferList: ArrayBuffer[]) {\n    if (\n        isStandardTechnique(technique) ||\n        isExtrudedPolygonTechnique(technique) ||\n        isTerrainTechnique(technique)\n    ) {\n        for (const texturePropertyKey of TEXTURE_PROPERTY_KEYS) {\n            const textureProperty = (technique as any)[texturePropertyKey];\n            if (isTextureBuffer(textureProperty)) {\n                if (textureProperty.buffer instanceof ArrayBuffer) {\n                    transferList.push(textureProperty.buffer);\n                }\n            }\n        }\n    }\n}\n\n/**\n * Compose full texture name for given image name with technique specified.\n * Some techniques allows to add prefix/postfix to icons names specified, this\n * function uses technique information to create fully qualified texture name.\n * @param imageName - base name of the marker icon.\n * @param technique - the technique describing POI or line marker.\n * @returns fully qualified texture name for loading from atlas (without extension).\n */\nexport function composeTechniqueTextureName(\n    imageName: string,\n    technique: PoiTechnique | LineMarkerTechnique\n): string {\n    let textureName = imageName;\n    if (typeof technique.imageTexturePrefix === \"string\") {\n        textureName = technique.imageTexturePrefix + textureName;\n    }\n    if (typeof technique.imageTexturePostfix === \"string\") {\n        textureName = textureName + technique.imageTexturePostfix;\n    }\n    return textureName;\n}\n\n/**\n * Sets a technique's render order (or priority for screen-space techniques) depending on its\n * category and the priorities specified in a given theme.\n * @param technique- The technique whose render order or priority will be set.\n * @param theme - The theme from which the category priorities will be taken.\n */\nexport function setTechniqueRenderOrderOrPriority(\n    technique: IndexedTechnique,\n    priorities: StylePriority[],\n    labelPriorities: string[]\n) {\n    if (\n        isTextTechnique(technique) ||\n        isPoiTechnique(technique) ||\n        isLineMarkerTechnique(technique)\n    ) {\n        // for screen-space techniques the `category` is used to assign\n        // priorities.\n        if (labelPriorities && typeof technique._category === \"string\") {\n            // override the `priority` when the technique uses `category`.\n            const priority = labelPriorities.indexOf(technique._category);\n            if (priority !== -1) {\n                technique.priority = labelPriorities.length - priority;\n            }\n        }\n    } else if (priorities && technique._styleSet !== undefined) {\n        // Compute the render order based on the style category and styleSet.\n        const computeRenderOrder = (category: string): number | undefined => {\n            const priority = priorities?.findIndex(\n                entry => entry.group === technique._styleSet && entry.category === category\n            );\n\n            return priority !== undefined && priority !== -1 ? (priority + 1) * 10 : undefined;\n        };\n\n        if (typeof technique._category === \"string\") {\n            // override the renderOrder when the technique is using categories.\n            const renderOrder = computeRenderOrder(technique._category);\n\n            if (renderOrder !== undefined) {\n                technique.renderOrder = renderOrder;\n            }\n        }\n\n        if (typeof technique._secondaryCategory === \"string\") {\n            // override the secondaryRenderOrder when the technique is using categories.\n            const secondaryRenderOrder = computeRenderOrder(technique._secondaryCategory);\n\n            if (secondaryRenderOrder !== undefined) {\n                (technique as any).secondaryRenderOrder = secondaryRenderOrder;\n            }\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Vector3Like } from \"@here/harp-geoutils/lib/math/Vector3Like\";\n\nimport { JsonExpr, JsonValue } from \"./Expr\";\nimport { InterpolatedPropertyDefinition } from \"./InterpolatedPropertyDefs\";\nimport {\n    BaseTechniqueParams,\n    BasicExtrudedLineTechniqueParams,\n    ExtrudedPolygonTechniqueParams,\n    FillTechniqueParams,\n    LineTechniqueParams,\n    MarkerTechniqueParams,\n    Pickability,\n    PointTechniqueParams,\n    SegmentsTechniqueParams,\n    ShaderTechniqueParams,\n    SolidLineTechniqueParams,\n    StandardExtrudedLineTechniqueParams,\n    StandardTechniqueParams,\n    TerrainTechniqueParams,\n    TextTechniqueParams\n} from \"./TechniqueParams\";\n\n/**\n * Map theme is used to define what features are shown and how the map is styled, for example\n * which lightning is used or whether fog should be displayed.\n */\nexport interface Theme {\n    /**\n     * The URI of the JSON schema describing themes.\n     */\n    $schema?: string;\n\n    /**\n     * The base `Theme`s or `theme` URLs to extend.\n     *\n     * @remarks\n     * If used, base themes are loaded first, and then all the properties from inherited theme\n     * overwrite these defined in base theme.\n     */\n\n    extends?: string | Theme | FlatTheme | Array<string | Theme | FlatTheme>;\n\n    /**\n     * Actual URL the theme has been loaded from.\n     */\n    url?: string;\n\n    /**\n     * Color to be used as a clear background - no map objects.\n     * @format color-hex\n     */\n    clearColor?: string;\n\n    /**\n     * Alpha to be used as a clear background - no map objects.\n     * @format 0-1\n     */\n    clearAlpha?: number;\n\n    /**\n     * Define the default text style for styling labels and texts.\n     */\n    defaultTextStyle?: TextStyleDefinition;\n\n    /**\n     * Define the lightning available on the three.js scene.\n     */\n    lights?: Light[];\n\n    /**\n     * Define the style of the sky presented in the map scene.\n     */\n    sky?: Sky;\n\n    /**\n     * Define the fog used in the map scene.\n     */\n    fog?: Fog;\n\n    /**\n     * The definitions exported by these theme.\n     */\n    definitions?: Definitions;\n\n    /**\n     * Map styles available for datasources used to render the map.\n     */\n    styles?: Styles;\n\n    /**\n     * Define the style to render different types of text used on the map.\n     */\n    textStyles?: TextStyleDefinition[];\n\n    /**\n     * List available fonts to be used while rendering text.\n     */\n    fontCatalogs?: FontCatalogConfig[];\n\n    /**\n     * Optional images to be rendered on the map view.\n     */\n    images?: ImageDefinitions;\n\n    /**\n     * Image textures to be used while rendering geometries on the map view.\n     */\n    imageTextures?: ImageTexture[];\n\n    /**\n     * Optional list of [[ThemePoiTableDef]]s.\n     */\n    poiTables?: PoiTableRef[];\n\n    /**\n     * Optional list of symbolic priorities for the object\n     * created using this {@link Theme}.\n     *\n     * @remarks\n     * The attribute `styleSet` and `category` of the [[Technique]]\n     * are used together with [[Theme.priorities]] to sort\n     * the objects created using this {@link Theme}, for example:\n     *\n     *\n     * ```json\n     * {\n     *      \"priorities\": [\n     *          { \"group\": \"tilezen\", \"category\": \"outline-1\" }\n     *      ],\n     *      \"styles\": [\n     *          {\n     *              \"technique\": \"solid-line\",\n     *              \"styleSet\": \"tilezen\",\n     *              \"category\": \"outline-1\"\n     *          }\n     *      ]\n     * }\n     * ```\n     */\n    priorities?: StylePriority[];\n\n    /**\n     * Optional list of priorities for the screen-space\n     * objects created using this style.\n     *\n     * @remarks\n     * The name of the `category` attribute of the screen-space\n     * technique (e.g. `\"text\"`) must match on the strings\n     * defined by this [[Theme.labelPriorities]], for example:\n     *\n     * ```json\n     * {\n     *      \"labelPriorities\": [\n     *          \"continent-labels\",\n     *          \"country-labels\",\n     *          \"state-labels\"\n     *      ],\n     *      \"styles\": [\n     *          {\n     *              \"technique\": \"text\",\n     *              \"category\": \"state-labels\"\n     *          }\n     *      ]\n     * }\n     * ```\n     */\n    labelPriorities?: string[];\n}\n\n/**\n * A type representing symbolic render orders.\n */\nexport interface StylePriority {\n    /**\n     * The group of this `StylePriority`.\n     */\n    group: string;\n\n    /**\n     * The category of this `StylePriority`.\n     */\n    category?: string;\n}\n\n/**\n * A type representing HARP themes with all the styleset declarations\n * grouped in one `Array`.\n *\n * @internal This type will merge with {@link Theme}.\n */\nexport type FlatTheme = Omit<Theme, \"styles\"> & {\n    /**\n     * The style rules used to render the map.\n     */\n    styles?: StyleSet;\n};\n\n/**\n * Value definition commons.\n */\nexport type Definition = JsonValue | InterpolatedPropertyDefinition<JsonValue>;\n\n/**\n * This is the old, more verbose, format of the definitions, to be deprecated\n * @deprecated\n */\nexport interface VerboseDefinition {\n    /**\n     * The type of the definition.\n     */\n    type?: \"selector\" | \"boolean\" | \"number\" | \"string\" | \"color\";\n\n    /**\n     * The value of the definition.\n     */\n    value: Definition;\n\n    /**\n     * The description of the definition.\n     */\n    description?: string;\n}\n\n/**\n * This is to distinguish between definition types at runtime, to be deprecated with\n * {@link VerboseDefinition}\n * @deprecated\n *\n * @param definition\n * @returns `true` if the Definition is of the deprecated {@link VerboseDefinition} type\n */\nexport function isVerboseDefinition(definition: VerboseDefinition | Definition) {\n    return (definition as VerboseDefinition)?.value !== undefined;\n}\n\n/**\n * This is a utility function to retrive a definitions value until {@link VerboseDefinition} is fully\n * deprecated\n * @deprecated\n *\n * @param definition\n * @returns value of the given definition.\n */\nexport function getDefinitionValue(definition: VerboseDefinition | Definition): Definition {\n    return isVerboseDefinition(definition)\n        ? (definition as VerboseDefinition).value\n        : (definition as Definition);\n}\n\n/*\n * An set of {@link Definition}s.\n */\nexport interface Definitions {\n    [name: string]: Definition | VerboseDefinition;\n}\n\nexport type JsonExprReference = [\"ref\", string];\n\n/**\n * Checks if the given value is a reference to a definition.\n *\n * @param value - The value of a technique property.\n */\nexport function isJsonExprReference(value: any): value is JsonExprReference {\n    return (\n        Array.isArray(value) &&\n        value.length === 2 &&\n        value[0] === \"ref\" &&\n        typeof value[1] === \"string\"\n    );\n}\n\n/**\n * An array of {@link Style}s that are used together to define how a\n * {@link @here/harp-mapview#DataSource} should be rendered.\n *\n * @remarks\n * `StyleSet`s are applied to sources providing vector tiles via their method\n * `setStyleSet`. This is also handle internally when a whole theme is passed to a\n * {@link @here/harp-mapview#MapView} via {@link @here/harp-mapview#MapViewtheme}.\n */\nexport type StyleSet = Style[];\n\n/**\n * The object that defines what way an item of a {@link @here/harp-mapview#DataSource}\n * should be decoded to assemble a tile.\n *\n * @remarks\n * {@link Style} is describing which features are shown on a map and in what way they are being\n * shown.\n */\nexport type BaseStyle<Technique, Params> = StyleAttributes<Technique, Params> & Partial<Params>;\n\n/**\n * The common attributes of a {@link Style}.\n */\nexport interface StyleAttributes<Technique, Params> {\n    /**\n     * Unique identifier associated with this `Style`.\n     */\n    id?: string;\n\n    /**\n     * Reference to the identifier of an existing `Style` to extend.\n     */\n    extends?: string;\n\n    /**\n     * Condition when this style rule applies.\n     *\n     * @remarks\n     * Condition that is applied to feature properties to check if given {@link Style} this feature\n     * should emit geometry of this style.\n     */\n    when?: string | JsonExpr;\n\n    /**\n     * The layer containing the carto features processed by this style rule.\n     */\n    layer?: string;\n\n    /**\n     * Optional. If `true`, no more matching styles will be evaluated.\n     */\n    final?: boolean;\n\n    /**\n     * Human readable description.\n     */\n    description?: string;\n\n    /**\n     * The style set referenced by this styling rule.\n     */\n    styleSet?: string;\n\n    /**\n     * The category of this style.\n     */\n    category?: string | JsonExpr;\n\n    /**\n     * The name of the technique to use.\n     *\n     * @remarks\n     * Technique name. See the classes extending from this class to determine what possible\n     * techniques are possible, includes `\"line\"`, `\"fill\"`, `\"solid-line\"`, `\"extruded-line\"`,\n     * `\"extruded-polygon\"`, `\"text\"`, `\"none\"`.\n     */\n    technique: Technique;\n\n    /**\n     * Specify `renderOrder` of value.\n     *\n     * @remarks\n     * @default If not specified in style file, `renderOrder` will be assigned with monotonically\n     * increasing values according to style position in file.\n     */\n    renderOrder?: number | JsonExpr;\n\n    /**\n     * Minimal zoom level. If the current zoom level is smaller, the technique will not be used.\n     */\n    minZoomLevel?: number | JsonExpr;\n\n    /**\n     * Maximum zoom level. If the current zoom level is larger, the technique will not be used.\n     */\n    maxZoomLevel?: number | JsonExpr;\n\n    /**\n     * Optional. If `true` or `Pickability.transient`, no IDs will be saved for the geometry\n     * this style creates. Default is `Pickability.onlyVisible`, which allows all pickable and visible\n     * objects to be picked, Pickability.all, will also allow invisible objects to be\n     * picked.\n     * @defaultValue `Pickability.onlyVisible`\n     * The boolean option is for backwardscompatibilty, please use the Pickability.\n     *\n     *\n     * TODO: deprecate and rename to something that makes more sense\n     */\n    transient?: boolean | Pickability;\n\n    /**\n     * Optional: If `true`, the objects with matching `when` statement will be printed to the\n     * console.\n     */\n    debug?: boolean;\n\n    /**\n     * @deprecated Technique parameters are now properties at the Style interface level.\n     */\n    attr?: Partial<Params>;\n}\n\nexport type Style =\n    | SquaresStyle\n    | CirclesStyle\n    | PoiStyle\n    | LineMarkerStyle\n    | LineStyle\n    | SegmentsStyle\n    | SolidLineStyle\n    | LabelRejectionLineStyle\n    | FillStyle\n    | StandardStyle\n    | BasicExtrudedLineStyle\n    | StandardExtrudedLineStyle\n    | ExtrudedPolygonStyle\n    | ShaderStyle\n    | TerrainStyle\n    | TextTechniqueStyle\n    | NoneStyle;\n\n/**\n * A dictionary of {@link StyleSet}s.\n */\nexport interface Styles {\n    [styleSetName: string]: StyleSet;\n}\n\n/**\n * A reference to a style definition.\n *\n * @remarks\n * Use as value `attrs` to reference value from `definitions`.\n *\n * Example of usage:\n * ```json\n * {\n *   \"definitions\": {\n *     \"roadColor\": \"#f00\"\n *   },\n *   \"styles\": { \"tilezen\": [\n *      {\n *       \"when\": \"kind == 'road\",\n *       \"technique\": \"solid-line\",\n *       \"attr\": {\n *         \"lineColor\": { \"$ref\": \"roadColor\" }\n *       }\n *     }\n *   ] }\n * }\n * ```\n */\n\n/**\n * The attributes of a technique.\n */\nexport type Attr<T> = { [P in keyof T]?: T[P] | JsonExpr };\n\n/**\n * Render feature as set of squares rendered in screen space.\n *\n * @see {@link PointTechniqueParams}.\n */\nexport type SquaresStyle = BaseStyle<\"squares\", PointTechniqueParams>;\n\n/**\n * Render feature as set of circles rendered in screen space.\n *\n * @see {@link PointTechniqueParams}.\n */\nexport type CirclesStyle = BaseStyle<\"circles\", PointTechniqueParams>;\n\n/**\n * Render feature as POIs (icons and text) rendered in screen space.\n *\n * @see [[MarkerTechniqueParams]].\n */\nexport type PoiStyle = BaseStyle<\"labeled-icon\", MarkerTechniqueParams>;\n\n/**\n * Render feature as line markers, which is a recurring marker along a line (usually road).\n *\n * @see [[MarkerTechniqueParams]].\n */\nexport type LineMarkerStyle = BaseStyle<\"line-marker\", MarkerTechniqueParams>;\n\n/**\n * Render feature as line.\n */\nexport type LineStyle = BaseStyle<\"line\", LineTechniqueParams>;\n\n/**\n * Render feature as segments.\n */\nexport type SegmentsStyle = BaseStyle<\"segments\", SegmentsTechniqueParams>;\n\nexport type SolidLineStyle = BaseStyle<\"solid-line\" | \"dashed-line\", SolidLineTechniqueParams>;\n\nexport type LabelRejectionLineStyle = BaseStyle<\"label-rejection-line\", BaseTechniqueParams>;\n\nexport type FillStyle = BaseStyle<\"fill\", FillTechniqueParams>;\n\nexport type StandardStyle = BaseStyle<\"standard\", StandardTechniqueParams>;\n\nexport type TerrainStyle = BaseStyle<\"terrain\", TerrainTechniqueParams>;\n\nexport type BasicExtrudedLineStyle = BaseStyle<\"extruded-line\", BasicExtrudedLineTechniqueParams>;\n\nexport type StandardExtrudedLineStyle = BaseStyle<\n    \"extruded-line\",\n    StandardExtrudedLineTechniqueParams\n>;\n\n/**\n * Style used to draw a geometry as an extruded polygon, for example extruded buildings.\n */\nexport type ExtrudedPolygonStyle = BaseStyle<\"extruded-polygon\", ExtrudedPolygonTechniqueParams>;\n\nexport type ShaderStyle = BaseStyle<\"shader\", ShaderTechniqueParams>;\n\nexport type TextTechniqueStyle = BaseStyle<\"text\", TextTechniqueParams>;\n\nexport interface NoneStyle\n    extends BaseStyle<\n        \"none\",\n        {\n            [name: string]: any;\n        }\n    > {\n    [name: string]: any;\n}\n\n/**\n * Possible lights used for light the map.\n */\nexport type Light = AmbientLight | DirectionalLight;\n\nexport interface BaseLight {\n    type: string;\n    name: string;\n}\n\n/**\n * Ambient light\n */\nexport interface AmbientLight extends BaseLight {\n    /**\n     * The type of the light.\n     */\n    type: \"ambient\";\n\n    /**\n     * The color of this ambient light.\n     */\n    color: string;\n\n    /**\n     * The intensity of this ambient light.\n     */\n    intensity?: number;\n}\n\n/**\n * Directional light.\n */\nexport interface DirectionalLight extends BaseLight {\n    /**\n     * The type of the light.\n     */\n    type: \"directional\";\n\n    /**\n     * The color of this directional light.\n     */\n    color: string;\n\n    /**\n     * The intensity of this directional light.\n     */\n    intensity: number;\n\n    /**\n     * The direction of this directional light.\n     */\n    direction: Vector3Like;\n\n    /**\n     * Determine if this light casts dynamic shadows.\n     *\n     * @defaultValue false\n     */\n    castShadow?: boolean;\n}\n\n/**\n * Various text styles used with labels and texts.\n */\nexport interface TextStyleDefinition {\n    name?: string;\n    fontCatalogName?: string;\n\n    fontName?: string;\n    size?: number;\n    backgroundSize?: number;\n    fontStyle?: \"Regular\" | \"Bold\" | \"Italic\" | \"BoldItalic\";\n    fontVariant?: \"Regular\" | \"AllCaps\" | \"SmallCaps\";\n    rotation?: number;\n    /**\n     * @format color-hex\n     */\n    color?: string;\n    /**\n     * @format color-hex\n     */\n    backgroundColor?: string;\n    opacity?: number;\n    backgroundOpacity?: number;\n\n    tracking?: number;\n    leading?: number;\n    maxLines?: number;\n    lineWidth?: number;\n    canvasRotation?: number;\n    lineRotation?: number;\n    wrappingMode?: \"None\" | \"Character\" | \"Word\";\n    hAlignment?: \"Left\" | \"Center\" | \"Right\";\n    vAlignment?: \"Above\" | \"Center\" | \"Below\";\n    /**\n     * @format comma separated list of placement tokens, i.e. \"TR, TL, C\"\n     * @see [[PlacementToken]]\n     */\n    placements?: string;\n}\n\n/**\n * Interface that defines a procedural gradient sky.\n */\nexport interface GradientSky {\n    /** Sky type. */\n    type: \"gradient\";\n    /**\n     * Color of the upper part of the gradient.\n     * @format color-hex\n     */\n    topColor: string;\n    /**\n     * Color of bottom part of the gradient.\n     * @format color-hex\n     */\n    bottomColor: string;\n    /**\n     * Color of the ground plane.\n     * @format color-hex\n     */\n    groundColor: string;\n    /** Texture's gradient power. */\n    monomialPower?: number;\n}\n\n/**\n * Interface that defines a cubemap sky.\n */\nexport interface CubemapSky {\n    /** Sky type. */\n    type: \"cubemap\";\n    /** Positive X cube map face. */\n    positiveX: string;\n    /** Negative X cube map face. */\n    negativeX: string;\n    /** Positive Y cube map face. */\n    positiveY: string;\n    /** Negative Y cube map face. */\n    negativeY: string;\n    /** Positive Z cube map face. */\n    positiveZ: string;\n    /** Negative Z cube map face. */\n    negativeZ: string;\n}\n\n/**\n * Interface that defines the options to configure the sky.\n */\nexport type Sky = GradientSky | CubemapSky;\n\n/**\n * Interface that defines the options to configure fog.\n */\nexport interface Fog {\n    /** Fog's color. */\n    color: string;\n    /** Distance ratio to far plane at which the linear fog begins. */\n    startRatio: number;\n}\n\n/**\n * Define an image (e.g. icon).\n */\nexport interface ImageDefinition {\n    /** Url to load content from. */\n    url: string;\n    /** `true` to start loading at init tile, `false` to lazily wait until required. */\n    preload: boolean;\n    /** Url of JSON file containing the texture atlas */\n    atlas?: string;\n}\n\nexport interface ImageDefinitions {\n    /** Name of Image. */\n    [name: string]: ImageDefinition;\n}\n\n/**\n * Can be used to create a texture atlas.\n */\nexport interface ImageTexture {\n    /** Name of ImageTexture. Used to reference texture in the styles. */\n    name: string;\n    /** Name of ImageDefinition to use. */\n    image: string;\n    /** Origin of image, defaults to \"topleft\" */\n    origin?: string;\n    /** Specify sub-region: Defaults to 0. */\n    xOffset?: number;\n    /** Specify sub-region: Defaults to 0. */\n    yOffset?: number;\n    /** Specify sub-region:  Defaults to 0, meaning width is taken from loaded image. */\n    width?: number;\n    /** Specify sub-region:  Defaults to 0, meaning height is taken from loaded image. */\n    height?: number;\n    /** Defaults to false. */\n    flipH?: boolean;\n    /** Defaults to false. */\n    flipV?: boolean;\n    /** Defaults to 1. */\n    opacity?: number;\n}\n\n/**\n * Definition for a [[PoiTable]] reference as part of the {@link Theme} object.\n */\nexport interface PoiTableRef {\n    /** Required name of the [[PoiTable]] for later reference. */\n    name: string;\n    /**\n     * Required URL from where to load [[PoiTable]].\n     *\n     * Should refer to JSON that is matched [[PoiTableDef]] interface.\n     */\n    url: string;\n    /**\n     * If set to `true`, the list of values in the field \"altNames\" will be used as names for this\n     * POI.\n     */\n    useAltNamesForKey: boolean;\n}\n\n/**\n * Interface for the JSON description of the [[PoiTable]]. It is being implemented in [[PoiTable]].\n */\nexport interface PoiTableDef {\n    /** Name of the `PoiTable`. Must be unique. */\n    name?: string;\n    /**\n     * Stores the list of {@link PoiTableEntryDef}s.\n     */\n    poiList?: PoiTableEntryDef[];\n}\n\n/**\n * Interface descrining POI entries.\n */\nexport interface PoiTableEntryDef {\n    /** Default name of the POI as the key for looking it up. */\n    name?: string;\n    /** Alternative names of the POI. */\n    altNames?: string[];\n    /** Visibility of the POI. If `false`, the POI will not be rendered. */\n    visible?: boolean;\n    /** Name of the icon, defined in the the texture atlases. */\n    iconName?: string;\n    /** Stacking mode of the POI. For future use. */\n    stackMode?: string;\n    /**\n     * Priority of the POI to select the visible set in case there are more POIs than can be\n     * handled.\n     */\n    priority?: number;\n    /** Minimum zoom level to render the icon on. */\n    iconMinLevel?: number;\n    /** Maximum zoom level to render the icon on. */\n    iconMaxLevel?: number;\n    /** Minimum zoom level to render the text label on. */\n    textMinLevel?: number;\n    /** Maximum zoom level to render the text label on. */\n    textMaxLevel?: number;\n}\n\n/**\n * Fonts used for all text related rendering.\n */\nexport interface FontCatalogConfig {\n    url: string;\n    name: string;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { isJsonExpr } from \"./Expr\";\nimport { Style, Theme } from \"./Theme\";\n\n/**\n * The ThemeVisitor visits every style in the theme in a depth-first fashion.\n */\nexport class ThemeVisitor {\n    constructor(readonly theme: Theme) {}\n    /**\n     * Applies a function to every style in the theme.\n     *\n     * @param visitFunc - Function to be called with `style` as an argument. Function should return\n     *                  `true` to cancel visitation.\n     * @returns `true` if function has finished prematurely.\n     */\n    visitStyles(visitFunc: (style: Style) => boolean): boolean {\n        const visit = (style: Style): boolean => {\n            if (isJsonExpr(style)) {\n                return false;\n            }\n            if (visitFunc(style)) {\n                return true;\n            }\n            return false;\n        };\n        if (this.theme.styles !== undefined) {\n            for (const styleSetName in this.theme.styles) {\n                if (this.theme.styles[styleSetName] !== undefined) {\n                    for (const style of this.theme.styles[styleSetName]) {\n                        if (visit(style)) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BufferAttribute as ThreeBufferAttribute,\n    BufferGeometry as ThreeBufferGeometry,\n    InterleavedBufferAttribute as ThreeInterleavedBufferAttribute\n} from \"three\";\n\nimport {\n    BufferAttribute,\n    BufferElementType,\n    Geometry,\n    GeometryType,\n    InterleavedBufferAttribute\n} from \"./DecodedTile\";\n\n/**\n * Collection of helper methods to convert\n * {@link https://threejs.org/docs/index.html#api/en/core/BufferGeometry|three.js BufferGeometry}\n * to [[Geometry]] that allows creation and transfering of THREE BufferGeometry in webworkers.\n * See also [[CustomDatasourceExample]].\n */\nexport namespace ThreeBufferUtils {\n    export function getBufferElementType(buffer: ArrayBufferView): BufferElementType {\n        if (buffer instanceof Int8Array) {\n            return \"int8\";\n        } else if (buffer instanceof Uint8Array) {\n            return \"uint8\";\n        } else if (buffer instanceof Int16Array) {\n            return \"int16\";\n        } else if (buffer instanceof Uint16Array) {\n            return \"uint16\";\n        } else if (buffer instanceof Int32Array) {\n            return \"int32\";\n        } else if (buffer instanceof Uint32Array) {\n            return \"uint32\";\n        } else if (buffer instanceof Float32Array) {\n            return \"float\";\n        }\n\n        throw new Error(`Unsupported buffer type ${name}`);\n    }\n\n    export function fromThreeBufferAttribute(\n        bufferAttribute: ThreeBufferAttribute\n    ): BufferAttribute {\n        const buffer = (bufferAttribute.array as any) as ArrayBufferView;\n        return {\n            name: bufferAttribute.name,\n            buffer: buffer.buffer,\n            type: getBufferElementType(buffer),\n            itemCount: bufferAttribute.itemSize,\n            normalized: bufferAttribute.normalized\n        };\n    }\n\n    export function fromThreeInterleavedBufferAttribute(\n        bufferAttribute: ThreeInterleavedBufferAttribute\n    ): InterleavedBufferAttribute {\n        throw new Error(\"Not implemented yet\");\n    }\n\n    export function fromThreeBufferGeometry(\n        bufferGeometry: ThreeBufferGeometry,\n        techniqueIndex: number\n    ): Geometry {\n        const vertexAttributes: BufferAttribute[] = [];\n        const attributeNames = Object.getOwnPropertyNames(bufferGeometry.attributes);\n        for (const name of attributeNames) {\n            const attribute = bufferGeometry.attributes[name];\n            // FIXME: Also support InterleavedBufferAttribute\n            const vertexAttribute = fromThreeBufferAttribute(attribute as ThreeBufferAttribute);\n            vertexAttribute.name = name;\n            vertexAttributes.push(vertexAttribute);\n        }\n        const index =\n            bufferGeometry.index !== null\n                ? fromThreeBufferAttribute(bufferGeometry.index)\n                : undefined;\n\n        let count = 0;\n        if (index !== undefined) {\n            count = bufferGeometry.index === null ? 0 : bufferGeometry.index.count;\n        } else {\n            // If there is no index buffer, try to deduce the count from the position attribute.\n            const posAttr = bufferGeometry.attributes.position as ThreeBufferAttribute;\n            if (posAttr === undefined) {\n                throw new Error(\"Missing position attibute to deduce item count\");\n            }\n            count = posAttr.count;\n        }\n\n        return {\n            type: GeometryType.Unspecified,\n            vertexAttributes,\n            index,\n            groups: [{ start: 0, count, technique: techniqueIndex }]\n        };\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Definitions, StylePriority, StyleSet } from \"./Theme\";\nimport { WorkerServiceProtocol } from \"./WorkerServiceProtocol\";\n\n/**\n * Interface for `OptionsMap` which describes a general structure of key-value pairs.\n */\nexport interface OptionsMap {\n    [name: string]: any;\n}\n\n/**\n * Allows to cancel and prioritize requests inside the requestQueue.\n *\n * @remarks\n * Useful to optimize the order of decoding tiles during animations and camera movements.\n *\n * `RequestController` is not extending [[AbortController]], because this is not supported in ES5.\n */\nexport class RequestController implements AbortController {\n    /**\n     * Creates an instance of `RequestController`.\n     *\n     * @param {number} priority\n     * @param {AbortController} abortController Optional [[AbortController]] used internally, since\n     *      [[AbortController]]s should not be subclassed.\n     */\n    constructor(\n        public priority: number = 0,\n        public abortController: AbortController = new AbortController()\n    ) {}\n\n    get signal(): AbortSignal {\n        return this.abortController.signal;\n    }\n\n    /**\n     * Invoking this method will set this object's AbortSignal's aborted flag and\n     * signal to any observers that the associated activity is to be aborted.\n     */\n    abort(): void {\n        this.abortController.abort();\n    }\n}\n\n/**\n * Communication protocol with [[ITileDecoder]].\n */\nexport namespace WorkerDecoderProtocol {\n    /**\n     * Define possible names of messages exchanged with decoder services within `WebWorker`.\n     */\n    export enum DecoderMessageName {\n        Configuration = \"configuration\"\n    }\n\n    /**\n     * Interface for `DecodedTileMessage` which describes metadata for a decoded tile.\n     */\n    export interface DecoderMessage {\n        service: string;\n        type: DecoderMessageName;\n    }\n\n    /**\n     * Interface for a ConfigurationMessage that is sent from the datasource to the decoder. The\n     * message used to configure the [[ITileDecoder]].\n     */\n    export interface ConfigurationMessage extends DecoderMessage {\n        type: DecoderMessageName.Configuration;\n        styleSet?: StyleSet;\n        definitions?: Definitions;\n        priorities?: StylePriority[];\n        labelPriorities?: string[];\n        options?: OptionsMap;\n        languages?: string[];\n    }\n\n    /**\n     * Type guard to check if an object is an instance of `ConfigurationMessage`.\n     */\n    export function isConfigurationMessage(message: any): message is ConfigurationMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === DecoderMessageName.Configuration\n        );\n    }\n\n    /**\n     * Define possible names of requests called on decoder services within `WebWorker`.\n     */\n    export enum Requests {\n        DecodeTileRequest = \"decode-tile-request\",\n        TileInfoRequest = \"tile-info-request\"\n    }\n\n    /**\n     * This object is sent to the decoder asking to decode a specific tile. The expected response\n     * type is a [[DecodedTile]].\n     */\n    export interface DecodeTileRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.DecodeTileRequest;\n        tileKey: number;\n        data: ArrayBufferLike;\n        projection: string;\n    }\n\n    /**\n     * Type guard to check if an object is a decoded tile object sent to a worker.\n     */\n    export function isDecodeTileRequest(message: any): message is DecodeTileRequest {\n        return (\n            message &&\n            typeof message.type === \"string\" &&\n            message.type === Requests.DecodeTileRequest\n        );\n    }\n\n    /**\n     * This object is sent to the decoder asking for a tile info of a specific tile. The expected\n     * response type is a [[DecodedTile]].\n     */\n    export interface TileInfoRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.TileInfoRequest;\n        tileKey: number;\n        data: ArrayBufferLike;\n        projection: string;\n    }\n\n    /**\n     * Type guard to check if an object is an info tile object sent to a worker.\n     */\n    export function isTileInfoRequest(message: any): message is TileInfoRequest {\n        return (\n            message && typeof message.type === \"string\" && message.type === Requests.TileInfoRequest\n        );\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Common communication protocol for [[WorkerService]].\n */\nexport namespace WorkerServiceProtocol {\n    /**\n     * Service id of worker manager ([[WorkerServiceManager]]) used to create/destroy service\n     * instances in workers.\n     */\n    export const WORKER_SERVICE_MANAGER_SERVICE_ID = \"worker-service-manager\";\n\n    /**\n     * Define possible names of messages exchanged with services within `WebWorker`.\n     */\n    export enum ServiceMessageName {\n        Initialized = \"initialized\",\n        Request = \"request\",\n        Response = \"response\"\n    }\n\n    /**\n     * Interface for `ServiceMessage` which describes metadata for a service messages.\n     */\n    export interface ServiceMessage {\n        service: string;\n        type: ServiceMessageName;\n    }\n\n    /**\n     * This message is sent by the worker to the main thread. No data is sent. Receiving this\n     * message confirms that the worker has started successfully.\n     */\n    export interface InitializedMessage extends ServiceMessage {\n        type: ServiceMessageName.Initialized;\n    }\n\n    /**\n     * Type guard to check if an object is a signal message from worker.\n     */\n    export function isInitializedMessage(message: any): message is InitializedMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === ServiceMessageName.Initialized\n        );\n    }\n\n    /**\n     * Define possible names of requests called on services within `WebWorker`.\n     */\n    export enum Requests {\n        CreateService = \"create-service\",\n        DestroyService = \"destroy-service\"\n    }\n\n    /**\n     * This is an internal general interface used in communication with workers.\n     * Check [[ConcurrentWorkerSet]]'s invokeRequest function for exemplary usage.\n     */\n    export interface ServiceRequest {\n        type: string;\n    }\n\n    /**\n     * This message is sent by the main thread to [[WorkerServiceManager]] to dynamically create a\n     * new service.\n     *\n     * May throw `UnknownServiceError` if service of given type is not registered in\n     * [[WorkerServiceManager]], see [[isUnknownServiceError]].\n     */\n    export interface CreateServiceRequest extends ServiceRequest {\n        type: Requests.CreateService;\n\n        /**\n         * Type of service to be created.\n         *\n         * @see [[WorkerServiceManager.register]]\n         */\n        targetServiceType: string;\n\n        /**\n         * The newly created service instance will be available under this id.\n         */\n        targetServiceId: string;\n    }\n\n    /**\n     * Test if `error` thrown by [[CreateServiceRequest]] was caused by unknown type of service.\n     */\n    export function isUnknownServiceError(error: Error): boolean {\n        return error.message.includes(\"unknown targetServiceType requested: \");\n    }\n\n    /**\n     * This message is sent by the main thread to [[WorkerServiceManager]] to dynamically destroy a\n     * service.\n     */\n    export interface DestroyServiceRequest extends ServiceRequest {\n        type: Requests.DestroyService;\n\n        /**\n         * Id of service to be destroyed.\n         */\n        targetServiceId: string;\n    }\n\n    /**\n     * Possible service management messages (`CreateService` or `DestroyService`) sent to WebWorker.\n     */\n    export type WorkerServiceManagerRequest = CreateServiceRequest | DestroyServiceRequest;\n\n    /**\n     * This message is a part of the Request-Response scheme implemented to be used in communication\n     * between workers and the decoder.\n     */\n    export interface RequestMessage extends ServiceMessage {\n        type: ServiceMessageName.Request;\n        messageId: number;\n        request: any;\n    }\n\n    /**\n     * Type guard to check if an object is a request message sent to a worker.\n     */\n    export function isRequestMessage(message: any): message is RequestMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === ServiceMessageName.Request\n        );\n    }\n\n    /**\n     * This message is a part of the Request-Response scheme implemented to be used in communication\n     * between workers and the decoder.\n     */\n    export interface ResponseMessage extends ServiceMessage {\n        type: ServiceMessageName.Response;\n        messageId: number;\n        errorMessage?: string;\n        errorStack?: string;\n        response?: object;\n    }\n\n    /**\n     * Type guard to check if an object is a request message sent to a worker.\n     */\n    export function isResponseMessage(message: any): message is ResponseMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === ServiceMessageName.Response\n        );\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoJson } from \"../lib/GeoJsonDataType\";\nimport { WorkerServiceProtocol } from \"./WorkerServiceProtocol\";\n\n/**\n * Communication protocol with {@link ITiler}.\n */\nexport namespace WorkerTilerProtocol {\n    /**\n     * Define possible names of requests called on tiler services within `WebWorker`.\n     */\n    export enum Requests {\n        RegisterIndex = \"register-index\",\n        UpdateIndex = \"update-index\",\n        TileRequest = \"tile-request\"\n    }\n\n    /**\n     * This object is sent to the tiler to register a new tile index in the worker.\n     */\n    export interface RegisterIndexRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.RegisterIndex;\n        id: string;\n        input: string | GeoJson;\n    }\n\n    /**\n     * Type guard to check if an object is an index registration request sent to a worker.\n     */\n    export function isRegisterIndexRequest(message: any): message is RegisterIndexRequest {\n        return (\n            message && typeof message.type === \"string\" && message.type === Requests.RegisterIndex\n        );\n    }\n\n    /**\n     * This object is sent to the tiler to register a new tile index in the worker.\n     */\n    export interface UpdateIndexRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.UpdateIndex;\n        id: string;\n        input: string | GeoJson;\n    }\n\n    /**\n     * Type guard to check if an object is an update request for the index registration.\n     */\n    export function isUpdateIndexRequest(message: any): message is UpdateIndexRequest {\n        return message && typeof message.type === \"string\" && message.type === Requests.UpdateIndex;\n    }\n\n    /**\n     * This object is sent to the tiler asking to retrieve a specific tile. The expected response\n     * type is an object containing a tiled payload.\n     */\n    export interface TileRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.TileRequest;\n        index: string;\n        tileKey: number;\n    }\n\n    /**\n     * Type guard to check if an object is a tile request sent to a worker.\n     */\n    export function isTileRequest(message: any): message is TileRequest {\n        return message && typeof message.type === \"string\" && message.type === Requests.TileRequest;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, Expr, JsonArray, NumberLiteralExpr, StringLiteralExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst VALID_ELEMENT_TYPES = [\"boolean\", \"number\", \"string\"];\n\nfunction checkElementTypes(arg: Expr, array: JsonArray) {\n    if (!(arg instanceof StringLiteralExpr) || !VALID_ELEMENT_TYPES.includes(arg.value)) {\n        throw new Error(\n            `expected \"boolean\", \"number\" or \"string\" instead of '${JSON.stringify(arg)}'`\n        );\n    }\n\n    const ty = arg.value;\n\n    array.forEach((element, index) => {\n        if (typeof element !== ty) {\n            throw new Error(`expected array element at index ${index} to have type '${ty}'`);\n        }\n    });\n}\n\nfunction checkArrayLength(arg: Expr, array: JsonArray) {\n    if (!(arg instanceof NumberLiteralExpr)) {\n        throw new Error(`missing expected number of elements`);\n    }\n\n    const length = arg.value;\n\n    if (array.length !== length) {\n        throw new Error(`the array must have ${length} element(s)`);\n    }\n}\n\nfunction checkArray(context: ExprEvaluatorContext, arg: Expr) {\n    const value = context.evaluate(arg);\n    if (!Array.isArray(value)) {\n        throw new Error(`'${value}' is not an array`);\n    }\n    return value;\n}\n\nconst operators = {\n    array: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            switch (call.args.length) {\n                case 0:\n                    throw new Error(\"not enough arguments\");\n                case 1:\n                    return checkArray(context, call.args[0]);\n                case 2: {\n                    const array = checkArray(context, call.args[1]);\n                    checkElementTypes(call.args[0], array);\n                    return array;\n                }\n                case 3: {\n                    const array = checkArray(context, call.args[2]);\n                    checkArrayLength(call.args[1], array);\n                    checkElementTypes(call.args[0], array);\n                    return array;\n                }\n                default:\n                    throw new Error(\"too many arguments\");\n            }\n        }\n    },\n    \"make-array\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            if (call.args.length === 0) {\n                throw new Error(\"not enough arguments\");\n            }\n            return [...call.args.map(arg => context.evaluate(arg))];\n        }\n    },\n    at: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const args = call.args;\n            const index = context.evaluate(args[0]);\n            if (typeof index !== \"number\") {\n                throw new Error(`expected the index of the element to retrieve`);\n            }\n            const value = context.evaluate(args[1]);\n            if (!Array.isArray(value)) {\n                throw new Error(`expected an array`);\n            }\n            return index >= 0 && index < value.length ? value[index] : null;\n        }\n    },\n\n    slice: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            if (call.args.length < 2) {\n                throw new Error(\"not enough arguments\");\n            }\n            const input = context.evaluate(call.args[0]);\n            if (!(typeof input === \"string\" || Array.isArray(input))) {\n                throw new Error(\"input must be a string or an array\");\n            }\n            const start = context.evaluate(call.args[1]);\n            if (typeof start !== \"number\") {\n                throw new Error(\"expected an index\");\n            }\n            let end: number | undefined;\n            if (call.args.length > 2) {\n                end = context.evaluate(call.args[2]) as any;\n                if (typeof end !== \"number\") {\n                    throw new Error(\"expected an index\");\n                }\n            }\n            return input.slice(start, end);\n        }\n    }\n};\n\nexport const ArrayOperators: OperatorDescriptorMap = operators;\nexport type ArrayOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    \"to-boolean\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return Boolean(context.evaluate(call.args[0]));\n        }\n    },\n\n    \"to-string\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return String(context.evaluate(call.args[0]));\n        }\n    },\n\n    \"to-number\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const arg of call.args) {\n                const value = Number(context.evaluate(arg));\n                if (!isNaN(value)) {\n                    return value;\n                }\n            }\n            throw new Error(\"cannot convert the value to a number\");\n        }\n    }\n};\n\nexport const CastOperators: OperatorDescriptorMap = operators;\nexport type CastOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { ColorUtils } from \"../ColorUtils\";\nimport { CallExpr, Value } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\nimport { parseStringEncodedColor } from \"../StringEncodedNumeral\";\n\nconst operators = {\n    alpha: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            let color: Value | undefined = context.evaluate(call.args[0]);\n            if (typeof color === \"string\") {\n                color = parseStringEncodedColor(color);\n            }\n            const alpha = typeof color === \"number\" ? ColorUtils.getAlphaFromHex(color) : 1;\n            return alpha;\n        }\n    },\n    rgba: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const r = context.evaluate(call.args[0]);\n            const g = context.evaluate(call.args[1]);\n            const b = context.evaluate(call.args[2]);\n            const a = context.evaluate(call.args[3]);\n            if (\n                typeof r === \"number\" &&\n                typeof g === \"number\" &&\n                typeof b === \"number\" &&\n                typeof a === \"number\" &&\n                r >= 0 &&\n                g >= 0 &&\n                b >= 0 &&\n                a >= 0 &&\n                a <= 1\n            ) {\n                return rgbaToHex(r, g, b, a);\n            }\n            throw new Error(`unknown color 'rgba(${r},${g},${b},${a})'`);\n        }\n    },\n    rgb: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const r = context.evaluate(call.args[0]);\n            const g = context.evaluate(call.args[1]);\n            const b = context.evaluate(call.args[2]);\n            if (\n                typeof r === \"number\" &&\n                typeof g === \"number\" &&\n                typeof b === \"number\" &&\n                r >= 0 &&\n                g >= 0 &&\n                b >= 0\n            ) {\n                return rgbToHex(r, g, b);\n            }\n            throw new Error(`unknown color 'rgb(${r},${g},${b})'`);\n        }\n    },\n    // Hsl operator contains angle modulated to <0, 360> range, percent of\n    // saturation and lightness in <0, 100> range, i.e. hsl(360, 100, 100)\n    hsl: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const h = context.evaluate(call.args[0]);\n            const s = context.evaluate(call.args[1]);\n            const l = context.evaluate(call.args[2]);\n            if (\n                typeof h === \"number\" &&\n                typeof s === \"number\" &&\n                typeof l === \"number\" &&\n                h >= 0 &&\n                s >= 0 &&\n                l >= 0\n            ) {\n                return hslToHex(h, s, l);\n            }\n            throw new Error(`unknown color 'hsl(${h},${s}%,${l}%)'`);\n        }\n    }\n};\n\nfunction rgbaToHex(r: number, g: number, b: number, a: number): number {\n    // We decode rgba color channels using custom hex format with transparency.\n    return ColorUtils.getHexFromRgba(\n        THREE.MathUtils.clamp(r, 0, 255) / 255,\n        THREE.MathUtils.clamp(g, 0, 255) / 255,\n        THREE.MathUtils.clamp(b, 0, 255) / 255,\n        THREE.MathUtils.clamp(a, 0, 1)\n    );\n}\n\nfunction rgbToHex(r: number, g: number, b: number): number {\n    return ColorUtils.getHexFromRgb(\n        THREE.MathUtils.clamp(r, 0, 255) / 255,\n        THREE.MathUtils.clamp(g, 0, 255) / 255,\n        THREE.MathUtils.clamp(b, 0, 255) / 255\n    );\n}\n\nfunction hslToHex(h: number, s: number, l: number): number {\n    return ColorUtils.getHexFromHsl(\n        THREE.MathUtils.euclideanModulo(h, 360) / 360,\n        THREE.MathUtils.clamp(s, 0, 100) / 100,\n        THREE.MathUtils.clamp(l, 0, 100) / 100\n    );\n}\n\nexport const ColorOperators: OperatorDescriptorMap = operators;\nexport type ColorOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nfunction compare(context: ExprEvaluatorContext, call: CallExpr, strict: boolean = false) {\n    const left = context.evaluate(call.args[0]) as any;\n    const right = context.evaluate(call.args[1]) as any;\n\n    if (\n        !(\n            (typeof left === \"number\" && typeof right === \"number\") ||\n            (typeof left === \"string\" && typeof right === \"string\")\n        )\n    ) {\n        if (strict) {\n            throw new Error(`invalid operands '${left}' and '${right}' for operator '${call.op}'`);\n        }\n    }\n\n    switch (call.op) {\n        case \"<\":\n            return left < right;\n        case \">\":\n            return left > right;\n        case \"<=\":\n            return left <= right;\n        case \">=\":\n            return left >= right;\n        default:\n            throw new Error(`invalid comparison operator '${call.op}'`);\n    }\n}\n\nconst operators = {\n    \"!\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return !context.evaluate(call.args[0]);\n        }\n    },\n\n    \"==\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            return left === right;\n        }\n    },\n\n    \"!=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            return left !== right;\n        }\n    },\n\n    \"<\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) },\n    \">\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) },\n    \"<=\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) },\n    \">=\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) }\n};\n\nexport const ComparisonOperators: OperatorDescriptorMap = operators;\nexport type ComparisonOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env } from \"../Env\";\nimport { CallExpr, ExprScope } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    \"geometry-type\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const geometryType = context.env.lookup(\"$geometryType\");\n            switch (geometryType) {\n                case \"point\":\n                    return \"Point\";\n                case \"line\":\n                    return \"LineString\";\n                case \"polygon\":\n                    return \"Polygon\";\n                default:\n                    return null;\n            }\n        }\n    },\n    \"feature-state\": {\n        isDynamicOperator: () => true,\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            if (context.scope !== ExprScope.Dynamic) {\n                throw new Error(\"feature-state cannot be used in this context\");\n            }\n            const property = context.evaluate(call.args[0]);\n            if (typeof property !== \"string\") {\n                throw new Error(`expected the name of the property of the feature state`);\n            }\n            const state = context.env.lookup(\"$state\");\n            if (Env.isEnv(state)) {\n                return state.lookup(property) ?? null;\n            } else if (state instanceof Map) {\n                return state.get(property) ?? null;\n            }\n            return null;\n        }\n    },\n    id: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return context.env.lookup(\"$id\") ?? null;\n        }\n    }\n};\n\nexport const FeatureOperators: OperatorDescriptorMap = operators;\nexport type FeatureOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, Expr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nfunction conditionalCast(context: ExprEvaluatorContext, type: string, args: Expr[]) {\n    switch (type) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n            for (const childExpr of args) {\n                const value = context.evaluate(childExpr);\n                if (typeof value === type) {\n                    return value;\n                }\n            }\n            throw new Error(`expected a '${type}'`);\n        default:\n            throw new Error(`invalid type '${type}'`);\n    } // switch\n}\n\nconst operators = {\n    all: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                if (!context.evaluate(childExpr)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    },\n\n    any: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                if (context.evaluate(childExpr)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    },\n\n    none: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                if (context.evaluate(childExpr)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    },\n\n    boolean: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return conditionalCast(context, \"boolean\", call.args);\n        }\n    },\n\n    number: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return conditionalCast(context, \"number\", call.args);\n        }\n    },\n\n    string: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return conditionalCast(context, \"string\", call.args);\n        }\n    }\n};\n\nexport const FlowOperators: OperatorDescriptorMap = operators;\nexport type FlowOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, ExprScope, Value } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    \"ppi-scale\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]) as number;\n            const scaleFactor = call.args[1] ? (context.evaluate(call.args[1]) as number) : 1;\n            return value * scaleFactor;\n        }\n    },\n    \"world-ppi-scale\": {\n        isDynamicOperator: (): boolean => {\n            return true;\n        },\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const pixels = context.evaluate(call.args[0]) as number;\n            const scaleFactor = call.args[1] ? (context.evaluate(call.args[1]) as number) : 1;\n            const zoom = context.env.lookup(\"$zoom\") as number;\n            const zoomWidth = Math.pow(2, 17) / Math.pow(2, zoom);\n            const v = pixels * zoomWidth * scaleFactor;\n            return v;\n        }\n    },\n    \"world-discrete-ppi-scale\": {\n        isDynamicOperator: (): boolean => {\n            return true;\n        },\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const pixels = context.evaluate(call.args[0]) as number;\n            const scaleFactor = call.args[1] ? (context.evaluate(call.args[1]) as number) : 1;\n            const zoom = context.env.lookup(\"$zoom\") as number;\n            const zoomWidthDiscrete = Math.pow(2, 17) / Math.pow(2, Math.floor(zoom));\n            const v = pixels * zoomWidthDiscrete * scaleFactor;\n            return v;\n        }\n    },\n    ppi: {\n        call: (context: ExprEvaluatorContext) => {\n            const ppi = context.env.lookup(\"$ppi\");\n            if (typeof ppi === \"number\") {\n                return ppi;\n            }\n            return 72;\n        }\n    },\n    zoom: {\n        isDynamicOperator: (): boolean => {\n            return true;\n        },\n        call: (context: ExprEvaluatorContext, call: CallExpr): Value => {\n            if (context.scope === ExprScope.Value) {\n                return call;\n            }\n            return context.env.lookup(\"$zoom\") ?? null;\n        }\n    }\n};\n\nexport const MapOperators: OperatorDescriptorMap = operators;\nexport type MapOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    \"^\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '^'`\n                );\n            }\n            return Math.pow(a, b);\n        }\n    },\n\n    \"-\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            if (call.args.length === 1) {\n                const value = context.evaluate(call.args[0]);\n                if (typeof value !== \"number\") {\n                    throw new Error(`ìnvalid operand '${typeof value} for operator '-'`);\n                }\n\n                return -value;\n            }\n\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '-'`\n                );\n            }\n            return a - b;\n        }\n    },\n\n    \"/\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '/'`\n                );\n            }\n            return a / b;\n        }\n    },\n\n    \"%\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '%'`\n                );\n            }\n            return a % b;\n        }\n    },\n\n    \"+\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return call.args.reduce((a, b) => Number(a) + Number(context.evaluate(b)), 0);\n        }\n    },\n\n    \"*\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return call.args.reduce((a, b) => Number(a) * Number(context.evaluate(b)), 1);\n        }\n    },\n\n    abs: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'abs'`);\n            }\n            return Math.abs(value);\n        }\n    },\n\n    acos: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'acos'`);\n            }\n            return Math.acos(value);\n        }\n    },\n\n    asin: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'asin'`);\n            }\n            return Math.asin(value);\n        }\n    },\n\n    atan: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'atan'`);\n            }\n            return Math.atan(value);\n        }\n    },\n\n    ceil: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'ceil'`);\n            }\n            return Math.ceil(value);\n        }\n    },\n\n    cos: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'cos'`);\n            }\n            return Math.cos(value);\n        }\n    },\n\n    e: {\n        call: () => {\n            return Math.E;\n        }\n    },\n\n    floor: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'floor'`);\n            }\n            return Math.floor(value);\n        }\n    },\n\n    ln: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'ln'`);\n            }\n            return Math.log(value);\n        }\n    },\n\n    ln2: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'ln2'`);\n            }\n            return Math.log2(value);\n        }\n    },\n\n    log10: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'log10'`);\n            }\n            return Math.log10(value);\n        }\n    },\n\n    max: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return Math.max(...call.args.map(v => Number(context.evaluate(v))));\n        }\n    },\n\n    min: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return Math.min(...call.args.map(v => Number(context.evaluate(v))));\n        }\n    },\n\n    /**\n     * Clamp numeric value to given range, inclusive.\n     *\n     * Synopsis:\n     * ```\n     * [\"clamp\", v: number, min: number, max: number]`\n     * ```\n     */\n    clamp: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const v = context.evaluate(call.args[0]);\n            const min = context.evaluate(call.args[1]);\n            const max = context.evaluate(call.args[2]);\n\n            if (typeof v !== \"number\" || typeof min !== \"number\" || typeof max !== \"number\") {\n                throw new Error(`invalid operands '${v}', ${min}, ${max} for operator 'clamp'`);\n            }\n            return THREE.MathUtils.clamp(v, min, max);\n        }\n    },\n\n    pi: {\n        call: () => {\n            return Math.PI;\n        }\n    },\n\n    round: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'round'`);\n            }\n            return Math.round(value);\n        }\n    },\n\n    sin: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'sin'`);\n            }\n            return Math.sin(value);\n        }\n    },\n\n    sqrt: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'sqrt'`);\n            }\n            return Math.sqrt(value);\n        }\n    },\n\n    tan: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'tan'`);\n            }\n            return Math.tan(value);\n        }\n    }\n};\n\nexport const MathOperators: OperatorDescriptorMap = operators;\nexport type MathOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { assert } from \"@here/harp-utils\";\n\nimport { CallExpr, LookupExpr, ObjectLiteralExpr, Value } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\ninterface KeyValObj {\n    [key: string]: Value;\n}\ninterface LookupEntry {\n    keys: KeyValObj;\n    attributes: KeyValObj;\n}\n\ntype LookupArray = LookupEntry[];\ntype LookupMap = Map<string, KeyValObj>;\n\nfunction joinKeyValues(keys: string[]): string {\n    return keys.join(\"&\");\n}\n\nfunction stringifyKeyValue(key: string, value: Value): string {\n    return key + \"=\" + JSON.stringify(value);\n}\n\n/**\n * Joins the strings of each given array.\n * @param combinations Array of string arrays that must be joined.\n * @returns The joined strings sorted from longest to shortest (in number of substrings).\n */\nfunction joinCombinations(combinations: string[][]): string[] {\n    // sort from longest (more specific) to shortest (more generic).\n    combinations.sort((lhs, rhs) => rhs.length - lhs.length);\n    const result = combinations.map((keys: string[]) => joinKeyValues(keys));\n    // Add the empty combination which will match a default table entry (an entry without keys) if\n    // it exists.\n    result.push(\"\");\n    return result;\n}\n/**\n * Gets all combinations of all lengths of a list of strings.\n * @param input An array containing all strings.\n * @param index Start index of the strings in `input` that will be considered.\n * @returns An array of all combinations. The strings within each combination are in the inverse\n * order of the input array.\n */\nfunction getAllCombinations(input: string[], index: number = 0): string[][] {\n    if (index >= input.length) {\n        return [];\n    }\n\n    const combinations = getAllCombinations(input, index + 1);\n\n    const initLength = combinations.length;\n    for (let i = 0; i < initLength; i += 1) {\n        combinations.push([...combinations[i], input[index]]);\n    }\n    combinations.push([input[index]]);\n    return combinations;\n}\n\n/**\n * Make all combinations of all lengths with the search keys of the given lookup expression.\n * @param lookupExpr The lookup expression.\n * @param context The context to evaluate expressions.\n * @returns All combinations, sorted from longest(more specific) to shortest (more generic).\n */\nfunction getKeyCombinations(lookupExpr: LookupExpr, context: ExprEvaluatorContext): string[] {\n    const keys = lookupExpr.args.slice(1);\n    const result = [];\n    for (let i = 0; i < keys.length; i += 2) {\n        const value = context.evaluate(keys[i + 1]);\n        // ignore keys whose values evaluate to null.\n        if (value === null) {\n            continue;\n        }\n        const key = context.evaluate(keys[i]) as string;\n        result.push(stringifyKeyValue(key, value));\n    }\n    // Reverse sort, getAllCombinations reverses the order.\n    result.sort().reverse();\n\n    return joinCombinations(getAllCombinations(result));\n}\n\n/**\n * Creates a map from the lookup entries in a given array.\n * @param lookupArray The array to transform.\n * @returns The resulting map.\n */\nfunction createLookupMap(lookupArray: LookupArray): LookupMap {\n    const map = new Map();\n    for (const entry of lookupArray) {\n        if (typeof entry !== \"object\") {\n            throw new Error(`Invalid lookup table entry type (${typeof entry})`);\n        }\n        if (!entry.keys) {\n            throw new Error(`Lookup table entry has no 'keys' property.`);\n        }\n        if (!entry.attributes) {\n            throw new Error(`Lookup table entry has no 'attributes' property.`);\n        }\n        const key = joinKeyValues(\n            Object.getOwnPropertyNames(entry.keys)\n                .sort()\n                .map(key => stringifyKeyValue(key, entry.keys[key]))\n        );\n        map.set(key, entry.attributes);\n    }\n    return map;\n}\n\n/**\n * Searches matches of the given keys in a map.\n * @param keys Keys to search in the map.\n * @param map The lookup map.\n * @returns The first match (in the order in which keys are given) or null if no match found.\n */\nfunction searchLookupMap(keys: string[], map: LookupMap): KeyValObj | null {\n    for (const key of keys) {\n        const matchAttributes = map.get(key);\n        if (matchAttributes) {\n            return matchAttributes;\n        }\n    }\n    return null;\n}\n\nconst operators = {\n    length: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (Array.isArray(value) || typeof value === \"string\") {\n                return value.length;\n            }\n            throw new Error(`invalid operand '${value}' for operator 'length'`);\n        }\n    },\n    coalesce: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                const value = context.evaluate(childExpr);\n                if (value !== null) {\n                    return value;\n                }\n            }\n            return null;\n        }\n    },\n    lookup: {\n        call: (context: ExprEvaluatorContext, lookup: LookupExpr) => {\n            // Argument types are checked on parsing, see LookupExpr.parseArray().\n            assert(lookup.args.length > 0, \"missing lookup table\");\n\n            const keyCombinations = getKeyCombinations(lookup, context);\n            let table = context.evaluate(lookup.args[0]) as LookupArray | LookupMap;\n            assert(Array.isArray(table) || table instanceof Map, \"wrong lookup table type\");\n\n            if (Array.isArray(table)) {\n                // Transform the lookup table into a map to speedup lookup, since the same table\n                // might be used by multiple lookup expressions.\n                table = createLookupMap(table);\n                const lookupMapExpr = new ObjectLiteralExpr(table);\n                // Replace the lookup table argument with the map. Next calls to the same expression\n                // (e.g. re-evaluations due to data dependencies) will use the map.\n                lookup.args[0] = lookupMapExpr;\n            }\n\n            return searchLookupMap(keyCombinations, table);\n        }\n    }\n};\n\nexport const MiscOperators: OperatorDescriptorMap = operators;\nexport type MiscOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env } from \"../Env\";\nimport { CallExpr, Expr, ExprScope } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nenum LookupMode {\n    get,\n    has\n}\n\nfunction lookupMember(context: ExprEvaluatorContext, args: Expr[], lookupMode: LookupMode) {\n    const memberName = context.evaluate(args[0]);\n\n    if (typeof memberName !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n\n    const object = context.evaluate(args[1]) as any;\n\n    if (object && typeof object === \"object\") {\n        if (Env.isEnv(object)) {\n            const value = object.lookup(memberName) ?? null;\n            return lookupMode === LookupMode.get ? value : value !== null;\n        }\n        if (hasOwnProperty.call(object, memberName)) {\n            return lookupMode === LookupMode.get ? object[memberName] : true;\n        }\n    }\n\n    return lookupMode === LookupMode.get ? null : false;\n}\n\nconst operators = {\n    in: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            const object = context.evaluate(call.args[1]);\n            if (typeof value === \"string\" && typeof object === \"string\") {\n                return object.includes(value);\n            } else if (Array.isArray(object)) {\n                return object.includes(value);\n            }\n            return false;\n        }\n    },\n\n    get: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) =>\n            lookupMember(context, call.args, LookupMode.get)\n    },\n\n    has: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) =>\n            lookupMember(context, call.args, LookupMode.has)\n    },\n\n    \"dynamic-properties\": {\n        isDynamicOperator: () => true,\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            if (context.scope === ExprScope.Dynamic) {\n                return context.env;\n            }\n            return call;\n        }\n    }\n};\n\nexport const ObjectOperators: OperatorDescriptorMap = operators;\nexport type ObjectOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    concat: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return \"\".concat(...call.args.map(a => String(context.evaluate(a))));\n        }\n    },\n\n    downcase: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return String(context.evaluate(call.args[0])).toLocaleLowerCase();\n        }\n    },\n\n    upcase: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return String(context.evaluate(call.args[0])).toLocaleUpperCase();\n        }\n    },\n\n    \"~=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            if (typeof left === \"string\" && typeof right === \"string\") {\n                return left.includes(right);\n            }\n            return false;\n        }\n    },\n\n    \"^=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            if (typeof left === \"string\" && typeof right === \"string\") {\n                return left.startsWith(right);\n            }\n            return false;\n        }\n    },\n\n    \"$=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            if (typeof left === \"string\" && typeof right === \"string\") {\n                return left.endsWith(right);\n            }\n            return false;\n        }\n    }\n};\n\nexport const StringOperators: OperatorDescriptorMap = operators;\nexport type StringOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    typeof: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return typeof context.evaluate(call.args[0]);\n        }\n    }\n};\n\nexport const TypeOperators: OperatorDescriptorMap = operators;\nexport type TypeOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { Value } from \"../Env\";\nimport { CallExpr, NumberLiteralExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\ntype MakeVectorCallExpr = CallExpr & {\n    _value?: THREE.Vector2 | THREE.Vector3 | THREE.Vector4;\n};\n\nfunction isVector(\n    context: ExprEvaluatorContext,\n    call: CallExpr,\n    type: \"vector2\" | \"vector3\" | \"vector4\"\n): Value {\n    let ctor: new () => object;\n    switch (type) {\n        case \"vector2\":\n            ctor = THREE.Vector2;\n            break;\n        case \"vector3\":\n            ctor = THREE.Vector3;\n            break;\n        case \"vector4\":\n            ctor = THREE.Vector4;\n            break;\n    }\n    for (const childExpr of call.args) {\n        const value = context.evaluate(childExpr);\n        if (value instanceof ctor) {\n            return value;\n        }\n    }\n    throw new Error(`expected a \"${type}\"`);\n}\n\nfunction toVector(\n    context: ExprEvaluatorContext,\n    call: CallExpr,\n    type: \"vector2\" | \"vector3\" | \"vector4\"\n): Value {\n    let VectorCtor: any;\n    let components: number;\n\n    switch (type) {\n        case \"vector2\":\n            VectorCtor = THREE.Vector2;\n            components = 2;\n            break;\n        case \"vector3\":\n            VectorCtor = THREE.Vector3;\n            components = 3;\n            break;\n        case \"vector4\":\n            VectorCtor = THREE.Vector4;\n            components = 4;\n            break;\n    }\n\n    for (const childExpr of call.args) {\n        const value = context.evaluate(childExpr);\n        if (value instanceof VectorCtor) {\n            return value;\n        } else if (\n            Array.isArray(value) &&\n            value.length === components &&\n            value.every(v => typeof v === \"number\")\n        ) {\n            return new VectorCtor().fromArray(value);\n        }\n    }\n    throw new Error(`expected a \"${type}\"`);\n}\n\nconst operators = {\n    \"make-vector\": {\n        call: (context: ExprEvaluatorContext, call: MakeVectorCallExpr) => {\n            if (call._value !== undefined) {\n                return call._value;\n            }\n\n            if (call.args.length < 2) {\n                throw new Error(\"not enough arguments\");\n            } else if (call.args.length > 4) {\n                throw new Error(\"too many arguments\");\n            }\n\n            const components = call.args.map(arg => context.evaluate(arg)) as number[];\n\n            components.forEach((element, index) => {\n                if (typeof element !== \"number\") {\n                    throw new Error(\n                        `expected vector component at index ${index} to have type \"number\"`\n                    );\n                }\n            });\n\n            let result: THREE.Vector2 | THREE.Vector3 | THREE.Vector4 | undefined;\n\n            switch (components.length) {\n                case 2:\n                    result = new THREE.Vector2().fromArray(components);\n                    break;\n                case 3:\n                    result = new THREE.Vector3().fromArray(components);\n                    break;\n                case 4:\n                    result = new THREE.Vector4().fromArray(components);\n                    break;\n                default:\n                    throw new Error(\"too many arguments\");\n            }\n\n            if (call.args.every(arg => arg instanceof NumberLiteralExpr)) {\n                call._value = result;\n            }\n\n            return result;\n        }\n    },\n    vector2: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => isVector(context, call, \"vector2\")\n    },\n    vector3: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => isVector(context, call, \"vector3\")\n    },\n    vector4: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => isVector(context, call, \"vector4\")\n    },\n    \"to-vector2\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => toVector(context, call, \"vector2\")\n    },\n    \"to-vector3\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => toVector(context, call, \"vector3\")\n    },\n    \"to-vector4\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => toVector(context, call, \"vector4\")\n    }\n};\n\nexport const VectorOperators: OperatorDescriptorMap = operators;\nexport type VectorOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Overlay useful for debugging map data.\n *\n * @remarks\n *\n * @packageDocumentation\n */\n\nexport * from \"./lib/DebugTileDataSource\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { GeoCoordinates, ProjectionType, TileKey, TilingScheme } from \"@here/harp-geoutils\";\nimport { DataSource, TextElement, Tile } from \"@here/harp-mapview\";\nimport {\n    FontUnit,\n    HorizontalAlignment,\n    TextLayoutStyle,\n    TextRenderStyle,\n    VerticalAlignment\n} from \"@here/harp-text-canvas\";\nimport * as THREE from \"three\";\n\nconst debugMaterial = new THREE.LineBasicMaterial({\n    color: 0xff0000,\n    linewidth: 1,\n    depthTest: false\n});\n\n// Set maximum priority.\nconst PRIORITY_ALWAYS = Number.MAX_SAFE_INTEGER;\n\n// Size/scale of text showing the tiles key\nconst TEXT_SCALE = 0.8;\n\nexport class DebugTile extends Tile {\n    private readonly geometry = new THREE.BufferGeometry();\n    private readonly m_labelPositions = new THREE.BufferAttribute(new Float32Array(3), 3);\n\n    private readonly m_textRenderStyle: TextRenderStyle;\n    private readonly m_textLayoutStyle: TextLayoutStyle;\n\n    constructor(dataSource: DataSource, tileKey: TileKey, gridColor = \"#ff0000\") {\n        super(dataSource, tileKey);\n\n        const tilingScheme = dataSource.getTilingScheme();\n        const worldBox = tilingScheme.boundingBoxGenerator.getWorldBox(tileKey);\n        const projection = tilingScheme.projection;\n        const geoCoordinates: GeoCoordinates[] = [\n            projection.unprojectPoint(new THREE.Vector3(worldBox.min.x, worldBox.min.y, 0)),\n            projection.unprojectPoint(new THREE.Vector3(worldBox.max.x, worldBox.min.y, 0)),\n            projection.unprojectPoint(new THREE.Vector3(worldBox.max.x, worldBox.max.y, 0)),\n            projection.unprojectPoint(new THREE.Vector3(worldBox.min.x, worldBox.max.y, 0))\n        ];\n\n        const middlePoint = new THREE.Vector3();\n\n        const vertices: number[] = [];\n        geoCoordinates.forEach(geoPoint => {\n            const pt = new THREE.Vector3();\n            this.projection.projectPoint(geoPoint, pt);\n            pt.sub(this.center);\n            vertices.push(...pt.toArray());\n            middlePoint.add(pt);\n        });\n        this.geometry.setAttribute(\n            \"position\",\n            new THREE.BufferAttribute(new Float32Array(vertices), 3)\n        );\n\n        middlePoint.divideScalar(geoCoordinates.length);\n\n        const lineObject = new THREE.Line(this.geometry, debugMaterial);\n        lineObject.renderOrder = PRIORITY_ALWAYS;\n        this.objects.push(lineObject);\n\n        this.m_labelPositions.setXYZ(0, 0, 0, 0);\n\n        const textPosition = new THREE.Vector3();\n\n        if (this.projection.type === ProjectionType.Planar) {\n            // place the text position at north/west for planar projections.\n            textPosition.set(\n                this.geometry.getAttribute(\"position\").getX(3),\n                this.geometry.getAttribute(\"position\").getY(3),\n                this.geometry.getAttribute(\"position\").getZ(3)\n            );\n            textPosition.multiplyScalar(0.95);\n\n            this.m_textLayoutStyle = new TextLayoutStyle({\n                verticalAlignment: VerticalAlignment.Below,\n                horizontalAlignment: HorizontalAlignment.Left\n            });\n        } else {\n            textPosition.copy(middlePoint);\n\n            this.m_textLayoutStyle = new TextLayoutStyle({\n                verticalAlignment: VerticalAlignment.Center,\n                horizontalAlignment: HorizontalAlignment.Center\n            });\n        }\n\n        this.m_textRenderStyle = new TextRenderStyle({\n            fontSize: {\n                unit: FontUnit.Pixel,\n                size: 16,\n                backgroundSize: 0\n            },\n            color: new THREE.Color(gridColor)\n        });\n\n        const text = `${tileKey.mortonCode()} (${tileKey.row}, ${tileKey.column}, ${\n            tileKey.level\n        })`;\n\n        textPosition.add(this.center);\n        const textElement = new TextElement(\n            text,\n            textPosition,\n            this.m_textRenderStyle,\n            this.m_textLayoutStyle,\n            PRIORITY_ALWAYS,\n            TEXT_SCALE\n        );\n        textElement.mayOverlap = true;\n        textElement.reserveSpace = false;\n        textElement.alwaysOnTop = true;\n        textElement.ignoreDistance = true;\n\n        this.addTextElement(textElement);\n    }\n}\n\nexport class DebugTileDataSource extends DataSource {\n    constructor(\n        private readonly m_tilingScheme: TilingScheme,\n        name = \"debug\",\n        public maxDbgZoomLevel: number = 20\n    ) {\n        super({ name, minDataLevel: 1, maxDataLevel: 20, storageLevelOffset: -1 });\n\n        this.cacheable = true;\n        this.enablePicking = false;\n    }\n\n    /** @override */\n    getTilingScheme(): TilingScheme {\n        return this.m_tilingScheme;\n    }\n\n    /** @override */\n    getTile(tileKey: TileKey): DebugTile {\n        const tile = new DebugTile(this, tileKey);\n        return tile;\n    }\n\n    /** @override */\n    canGetTile(zoomLevel: number, tileKey: TileKey): boolean {\n        if (tileKey.level > this.maxDbgZoomLevel) {\n            return false;\n        }\n        return super.canGetTile(zoomLevel, tileKey);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Provides support for rendering custom carto features.\n *\n * @remarks\n *\n * @packageDocumentation\n */\n\nexport * from \"./lib/Features\";\nexport * from \"./lib/FeaturesDataSource\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    FeatureGeometry,\n    LineString,\n    MultiLineString,\n    MultiPoint,\n    MultiPolygon,\n    Point,\n    Polygon\n} from \"@here/harp-datasource-protocol\";\nimport * as THREE from \"three\";\n\n/**\n * Base class to create features.\n */\nexport abstract class MapViewFeature {\n    /**\n     * The type of the feature. The extended class should initialize this value. It defaults to\n     * \"Point\" in order to avoid allowing `null` or `undefined`.\n     */\n    type: FeatureGeometry[\"type\"] = \"Point\";\n\n    /**\n     * A string identifying this feature.\n     */\n    uuid: string = THREE.MathUtils.generateUUID();\n\n    /**\n     * Builds a new `MapViewFeature`.\n     *\n     * @param coordinates - The GeoJson geometry.\n     * @param style - The style to render the geometry.\n     */\n    constructor(public coordinates: FeatureGeometry[\"coordinates\"], public properties?: {}) {}\n}\n\nexport class MapViewLineFeature extends MapViewFeature {\n    /** @override */\n    type: LineString[\"type\"] = \"LineString\";\n    constructor(public coordinates: LineString[\"coordinates\"], public properties?: {}) {\n        super(coordinates, properties);\n    }\n}\n\nexport class MapViewMultiLineFeature extends MapViewFeature {\n    /** @override */\n    type: MultiLineString[\"type\"] = \"MultiLineString\";\n    constructor(public coordinates: MultiLineString[\"coordinates\"], public properties?: {}) {\n        super(coordinates, properties);\n    }\n}\n\nexport class MapViewPolygonFeature extends MapViewFeature {\n    /** @override */\n    type: Polygon[\"type\"] = \"Polygon\";\n    constructor(public coordinates: Polygon[\"coordinates\"], public properties?: {}) {\n        super(coordinates, properties);\n    }\n}\n\nexport class MapViewMultiPolygonFeature extends MapViewFeature {\n    /** @override */\n    type: MultiPolygon[\"type\"] = \"MultiPolygon\";\n    constructor(public coordinates: MultiPolygon[\"coordinates\"], public properties?: {}) {\n        super(coordinates, properties);\n    }\n}\n\nexport class MapViewPointFeature extends MapViewFeature {\n    /** @override */\n    type: Point[\"type\"] = \"Point\";\n    constructor(public coordinates: Point[\"coordinates\"], public properties?: {}) {\n        super(coordinates, properties);\n    }\n}\n\nexport class MapViewMultiPointFeature extends MapViewFeature {\n    /** @override */\n    type: MultiPoint[\"type\"] = \"MultiPoint\";\n    constructor(public coordinates: MultiPoint[\"coordinates\"], public properties?: {}) {\n        super(coordinates, properties);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    Feature,\n    FeatureCollection,\n    FeatureGeometry,\n    GeometryCollection\n} from \"@here/harp-datasource-protocol\";\nimport { GeoBox, GeoCoordinates } from \"@here/harp-geoutils\";\nimport { MapView } from \"@here/harp-mapview\";\nimport { LoggerManager } from \"@here/harp-utils\";\nimport {\n    GeoJsonDataProvider,\n    GeoJsonDataProviderOptions,\n    VectorTileDataSource,\n    VectorTileDataSourceParameters\n} from \"@here/harp-vectortile-datasource\";\n\nimport { MapViewFeature } from \"./Features\";\n\nconst logger = LoggerManager.instance.create(\"FeaturesDataSource\");\n\nconst NAME = \"user-features-datasource\";\nconst DEFAULT_GEOJSON: FeatureCollection = {\n    type: \"FeatureCollection\",\n    features: []\n};\n\n/**\n * Options for [[FeaturesDataSource]].\n */\nexport interface FeatureDataSourceOptions\n    extends VectorTileDataSourceParameters,\n        GeoJsonDataProviderOptions {\n    /**\n     * Initial set of features for new instance of [[FeaturesDataSource]].\n     *\n     * Shortcut for calling [[FeaturesDataSource.add]] after construction.\n     */\n    features?: MapViewFeature[];\n\n    /**\n     * Initial GeoJSON load for new instance of [[FeaturesDataSource]].\n     *\n     * Shortcut for calling [[FeaturesDataSource.setFromGeojson]] after construction.\n     */\n    geojson?: FeatureCollection | GeometryCollection | Feature;\n}\n\n/**\n * [[DataSource]] implementation to use for the addition of custom features.\n */\nexport class FeaturesDataSource extends VectorTileDataSource {\n    private m_isAttached = false;\n    private m_featureCollection: FeatureCollection = this.emptyGeojson();\n\n    /**\n     * Builds a `FeaturesDataSource`.\n     *\n     * @param options - specify custom options using [[FeatureDataSourceOptions]] interface.\n     */\n    constructor(options?: FeatureDataSourceOptions) {\n        super({\n            ...options,\n            dataProvider: new GeoJsonDataProvider(NAME, DEFAULT_GEOJSON, options),\n            addGroundPlane: false\n        });\n        if (options !== undefined) {\n            if (options.features !== undefined) {\n                this.add(...options.features);\n            }\n            if (options.geojson !== undefined) {\n                this.setFromGeojson(options.geojson);\n            }\n        }\n    }\n\n    /**\n     * This method allows to directly add a GeoJSON without using [[MapViewFeature]] instances. It\n     * also overwrites existing features in this data source. To add a GeoJSON without overwriting\n     * the data source, one should loop through it to create [[MapViewFeature]] and add them with\n     * the `add` method.\n     *\n     * @param geojson - A javascript object matching the GeoJSON specification.\n     */\n    setFromGeojson(geojson: FeatureCollection | GeometryCollection | Feature) {\n        if (geojson.type === \"FeatureCollection\") {\n            this.m_featureCollection = geojson;\n        } else if (geojson.type === \"Feature\") {\n            this.m_featureCollection = this.emptyGeojson();\n            this.m_featureCollection.features.push(geojson);\n        } else if (geojson.type === \"GeometryCollection\") {\n            this.m_featureCollection = this.emptyGeojson();\n            for (const geometry of geojson.geometries) {\n                this.m_featureCollection.features.push({\n                    type: \"Feature\",\n                    geometry\n                });\n            }\n        } else {\n            throw new TypeError(\"The provided object is not a valid GeoJSON object.\");\n        }\n        this.update();\n        return this;\n    }\n\n    /**\n     * Adds a custom feature in the datasource.\n     *\n     * @param features - The features to add in the datasource.\n     */\n    add(...features: MapViewFeature[]): this {\n        for (const feature of features) {\n            this.addFeature(feature);\n        }\n        this.update();\n        return this;\n    }\n\n    /**\n     * Removes a custom feature in the datasource.\n     *\n     * @param features - The features to add in the datasource.\n     */\n    remove(...features: MapViewFeature[]): this {\n        for (const feature of features) {\n            this.removeFeature(feature);\n        }\n        this.update();\n        return this;\n    }\n\n    /**\n     * Removes all the custom features in this `FeaturesDataSource`.\n     */\n    clear() {\n        this.m_featureCollection = this.emptyGeojson();\n        this.update();\n    }\n\n    /** @override */\n    async connect(): Promise<void> {\n        await super.connect();\n        if (this.m_featureCollection.features.length > 0) {\n            await this.update();\n        }\n    }\n\n    /**\n     * Override [[DataSource.attach]] to know if we're really connected to [[MapView]].\n     * @param mapView -\n     * @override\n     */\n    attach(mapView: MapView): void {\n        super.attach(mapView);\n        this.m_isAttached = true;\n    }\n\n    /**\n     * Override [[DataSource.detach]] to know if we're really connected to [[MapView]].\n     * @param mapView -\n     * @override\n     */\n    detach(mapView: MapView): void {\n        super.detach(mapView);\n        this.m_isAttached = false;\n    }\n\n    /**\n     * Get [[GeoBox]] containing all the points in datasource.\n     *\n     * Returns undefined if there were no features added to this DS.\n     */\n    getGeoBox(): GeoBox | undefined {\n        let result: GeoBox | undefined;\n        const addPoint = (geoJsonCoords: number[]) => {\n            // NOTE: GeoJson coordinates are in [longitude, latitude] order!\n            const coords = new GeoCoordinates(geoJsonCoords[1], geoJsonCoords[0]);\n            if (result === undefined) {\n                result = new GeoBox(coords, coords.clone());\n            } else {\n                result.growToContain(coords);\n            }\n        };\n        for (const feature of this.m_featureCollection.features) {\n            switch (feature.geometry.type) {\n                case \"Point\":\n                    addPoint(feature.geometry.coordinates);\n                    break;\n                case \"MultiPoint\":\n                case \"LineString\":\n                    feature.geometry.coordinates.forEach(addPoint);\n                    break;\n                case \"MultiLineString\":\n                case \"Polygon\":\n                    feature.geometry.coordinates.forEach(segment => segment.forEach(addPoint));\n                    break;\n                case \"MultiPolygon\":\n                    feature.geometry.coordinates.forEach(polygon =>\n                        polygon.forEach(segment => segment.forEach(addPoint))\n                    );\n                    break;\n            }\n        }\n        return result;\n    }\n\n    private addFeature(feature: MapViewFeature) {\n        // Check if the feature is not already in there.\n        const hasFeature = this.m_featureCollection.features.some(\n            _feature => _feature.properties.__mapViewUuid === feature.uuid\n        );\n        if (hasFeature) {\n            return;\n        }\n\n        // Create a GeoJson feature from the feature coordinates and push it.\n        const geometry: FeatureGeometry = {\n            type: feature.type,\n            coordinates: feature.coordinates\n        } as any;\n        const geojsonFeature: Feature = {\n            type: \"Feature\",\n            geometry,\n            properties: {\n                ...feature.properties,\n                __mapViewUuid: feature.uuid\n            }\n        };\n        this.m_featureCollection.features.push(geojsonFeature);\n    }\n\n    private removeFeature(feature: MapViewFeature) {\n        // Remove geojson feature from the root FeatureCollection.\n        const index = this.m_featureCollection.features.findIndex(\n            _feature => _feature.properties.__mapViewUuid === feature.uuid\n        );\n\n        if (index === -1) {\n            return;\n        }\n        this.m_featureCollection.features.splice(index, 1);\n    }\n\n    private async update() {\n        const dataProvider = this.dataProvider() as GeoJsonDataProvider;\n        if (!this.m_isAttached || !dataProvider.ready()) {\n            return;\n        }\n\n        try {\n            await dataProvider.updateInput(this.m_featureCollection);\n            if (this.m_isAttached) {\n                this.mapView.markTilesDirty(this);\n            }\n        } catch (error) {\n            // We use `update` in sync API, so there's no-one to react to errors so log them.\n            logger.error(`[${this.name}]: failed to update tile index`, error);\n        }\n    }\n\n    private emptyGeojson(): FeatureCollection {\n        return {\n            features: [],\n            type: \"FeatureCollection\"\n        };\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Provides support for GeoJSON datasource.\n *\n * @remarks\n *\n * @packageDocumentation\n */\n\nexport * from \"./lib/GeoJsonDataSource\";\nexport * from \"./lib/GeoJsonDataProvider\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport { GeoJsonDataProvider, GeoJsonDataProviderOptions } from \"@here/harp-vectortile-datasource\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    OmvWithCustomDataProvider,\n    OmvWithRestClientParams,\n    VectorTileDataSource\n} from \"@here/harp-vectortile-datasource\";\n\n/**\n * `GeoJsonDataSource` is used for the visualization of geometric objects provided in the GeoJSON\n * format. To be able to render GeoJSON data, a `GeoJsonDataSource` instance must be added to the\n * {@link @here/harp-mapview#MapView} instance.\n *\n * @example\n * ```typescript\n *    const geoJsonDataProvider = new GeoJsonDataProvider(\n *        \"italy\",\n *        new URL(\"resources/italy.json\", window.location.href)\n *    );\n *    const geoJsonDataSource = new GeoJsonDataSource({\n *        dataProvider: geoJsonDataProvider,\n *        styleSetName: \"geojson\"\n *    });\n *    mapView.addDataSource(geoJsonDataSource);\n *   ```\n */\nexport class GeoJsonDataSource extends VectorTileDataSource {\n    /**\n     * Default constructor.\n     *\n     * @param params - Data source configuration's parameters.\n     */\n    constructor(params: OmvWithRestClientParams | OmvWithCustomDataProvider) {\n        super({ styleSetName: \"geojson\", ...params });\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Box3Like, GeoBox, Projection, ProjectionType } from \"@here/harp-geoutils\";\nimport { assert } from \"@here/harp-utils\";\nimport { Vector3 } from \"three\";\n\nimport { SubdivisionModifier } from \"./SubdivisionModifier\";\n\nconst VERTEX_POSITION_CACHE = [new Vector3(), new Vector3()];\n\nexport enum SubdivisionMode {\n    /**\n     * Subdivide all edges\n     */\n    All,\n    /**\n     * Only subdivide horizontal and vertical edges\n     */\n    NoDiagonals\n}\n\n/**\n * The [[EdgeLengthGeometrySubdivisionModifier]] subdivides triangle mesh depending on\n * length of edges.\n */\nexport class EdgeLengthGeometrySubdivisionModifier extends SubdivisionModifier {\n    private readonly m_projectedBox: Box3Like;\n    private readonly m_maxLength: number;\n    private readonly m_maxLengthX: number;\n    private readonly m_maxLengthY: number;\n\n    /**\n     * Constructs a new [[EdgeLengthGeometrySubdivisionModifier]].\n     *\n     * @param subdivision - The subdivision factor\n     * @param geoBox - The geo bounding box of a tile\n     * @param subdivisionMode - Configures what edges to divide\n     * @param projection - The projection that defines the world space of this geometry.\n     */\n    constructor(\n        readonly subdivision: number,\n        readonly geoBox: GeoBox,\n        readonly subdivisionMode: SubdivisionMode = SubdivisionMode.All,\n        readonly projection: Projection\n    ) {\n        super();\n\n        assert(\n            projection.type === ProjectionType.Planar,\n            \"EdgeLengthGeometrySubdivisionModifier only supports planar projections\"\n        );\n\n        const northEast = projection.projectPoint(geoBox.northEast, VERTEX_POSITION_CACHE[0]);\n        const southWest = projection.projectPoint(geoBox.southWest, VERTEX_POSITION_CACHE[1]);\n        this.m_projectedBox = {\n            min: {\n                x: Math.min(northEast.x, southWest.x),\n                y: Math.min(northEast.y, southWest.y),\n                z: Math.min(northEast.z, southWest.z)\n            },\n            max: {\n                x: Math.max(northEast.x, southWest.x),\n                y: Math.max(northEast.y, southWest.y),\n                z: Math.max(northEast.z, southWest.z)\n            }\n        };\n        this.m_maxLengthX = (this.m_projectedBox.max.x - this.m_projectedBox.min.x) / subdivision;\n        this.m_maxLengthY = (this.m_projectedBox.max.y - this.m_projectedBox.min.y) / subdivision;\n\n        // Increase max length slightly to account for precision errors\n        if (this.subdivisionMode === SubdivisionMode.All) {\n            this.m_maxLengthX *= 1.1;\n            this.m_maxLengthY *= 1.1;\n        }\n        this.m_maxLength = Math.sqrt(\n            this.m_maxLengthX * this.m_maxLengthX + this.m_maxLengthY * this.m_maxLengthY\n        );\n    }\n\n    /**\n     * Return upper bound for length of diagonal edges\n     */\n    get maxLength() {\n        return this.m_maxLength;\n    }\n\n    /**\n     * Return upper bound for edge length in x direction\n     */\n    get maxLengthX() {\n        return this.m_maxLengthX;\n    }\n\n    /**\n     * Return upper bound for edge length in y direction\n     */\n    get maxLengthY() {\n        return this.m_maxLengthY;\n    }\n\n    /** @override */\n    protected shouldSplitTriangle(a: Vector3, b: Vector3, c: Vector3): number | undefined {\n        const shouldSplitAB = this.shouldSplitEdge(a, b);\n        const shouldSplitBC = this.shouldSplitEdge(b, c);\n        const shouldSplitCA = this.shouldSplitEdge(c, a);\n        const shouldSplit = shouldSplitAB || shouldSplitBC || shouldSplitCA;\n\n        if (!shouldSplit) {\n            return;\n        }\n\n        const ab = a.distanceTo(b);\n        const bc = b.distanceTo(c);\n        const ca = c.distanceTo(a);\n        const maxDistance = Math.max(\n            shouldSplitAB ? ab : 0,\n            shouldSplitBC ? bc : 0,\n            shouldSplitCA ? ca : 0\n        );\n        if (ab === maxDistance) {\n            return 0;\n        } else if (bc === maxDistance) {\n            return 1;\n        } else if (ca === maxDistance) {\n            return 2;\n        }\n\n        throw new Error(\"Could not split triangle.\");\n    }\n\n    private shouldSplitEdge(a: Vector3, b: Vector3): boolean {\n        switch (this.subdivisionMode) {\n            case SubdivisionMode.All:\n                return (\n                    (a.y === b.y && Math.abs(a.x - b.x) > this.m_maxLengthX) ||\n                    (a.x === b.x && Math.abs(a.y - b.y) > this.m_maxLengthY) ||\n                    a.distanceTo(b) > this.m_maxLength\n                );\n            case SubdivisionMode.NoDiagonals:\n                return (\n                    (a.y === b.y && Math.abs(a.x - b.x) > this.m_maxLengthX) ||\n                    (a.x === b.x && Math.abs(a.y - b.y) > this.m_maxLengthY)\n                );\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Projection, sphereProjection } from \"@here/harp-geoutils\";\nimport { Vector3 } from \"three\";\n\nimport { SubdivisionModifier } from \"./SubdivisionModifier\";\n\nconst VERTEX_POSITION_CACHE = [new Vector3(), new Vector3(), new Vector3()];\n\n/**\n * The [[SphericalGeometrySubdivisionModifier]] subdivides triangle mesh geometries positioned\n * on the surface of a sphere centered at `(0, 0, 0)`.\n */\nexport class SphericalGeometrySubdivisionModifier extends SubdivisionModifier {\n    /**\n     * Constructs a new [[SphericalGeometrySubdivisionModifier]].\n     *\n     * @param angle - The maximum angle in radians between two vertices and the origin.\n     * @param projection - The projection that defines the world space of this geometry.\n     */\n    constructor(readonly angle: number, readonly projection: Projection = sphereProjection) {\n        super();\n    }\n\n    /** @override */\n    protected shouldSplitTriangle(a: Vector3, b: Vector3, c: Vector3): number | undefined {\n        const aa = sphereProjection.reprojectPoint(this.projection, a, VERTEX_POSITION_CACHE[0]);\n        const bb = sphereProjection.reprojectPoint(this.projection, b, VERTEX_POSITION_CACHE[1]);\n        const cc = sphereProjection.reprojectPoint(this.projection, c, VERTEX_POSITION_CACHE[2]);\n\n        const alpha = aa.angleTo(bb);\n        const beta = bb.angleTo(cc);\n        const gamma = cc.angleTo(aa);\n\n        // find the maximum angle\n        const m = Math.max(alpha, Math.max(beta, gamma));\n\n        // split the triangle if needed.\n        if (m < this.angle) {\n            return undefined;\n        }\n\n        if (m === alpha) {\n            return 0;\n        } else if (m === beta) {\n            return 1;\n        } else if (m === gamma) {\n            return 2;\n        }\n\n        throw new Error(\"failed to split triangle\");\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { BufferAttribute, BufferGeometry, Vector3 } from \"three\";\n\nconst tmpVectorA = new Vector3();\nconst tmpVectorB = new Vector3();\nconst tmpVectorC = new Vector3();\n\n/**\n * The [[SubdivisionModifier]] subdivides triangle mesh geometries.\n */\nexport abstract class SubdivisionModifier {\n    /**\n     * Constructs a new [[SubdivisionModifier]].\n     */\n    constructor() {\n        // nothing to do\n    }\n\n    /**\n     * Subdivides the faces of the given [[THREE.BufferGeometry]].\n     *\n     * This method modifies (in-place) the vertices and the faces of the geometry.\n     * Please note that only the vertex position and their UV coordinates are subdivided.\n     * Normals, vertex colors and other attributes are left unmodified.\n     *\n     * @param geometry - The [[THREE.BufferGeometry]] to subdivide.\n     */\n    modify(geometry: BufferGeometry): BufferGeometry {\n        const positionAttr = geometry.getAttribute(\"position\") as BufferAttribute;\n        const position = Array.from(positionAttr.array);\n\n        const uvAttr = geometry.getAttribute(\"uv\") as BufferAttribute;\n        const uv = uvAttr !== undefined ? Array.from(uvAttr.array) : undefined;\n\n        const edgeAttr = geometry.getAttribute(\"edge\") as BufferAttribute;\n        const edge = edgeAttr !== undefined ? Array.from(edgeAttr.array) : undefined;\n\n        const wallAttr = geometry.getAttribute(\"wall\") as BufferAttribute;\n        const wall = wallAttr !== undefined ? Array.from(wallAttr.array) : undefined;\n\n        const indexAttr = geometry.getIndex() as BufferAttribute;\n        const indices = Array.from(indexAttr.array);\n\n        // A cache containing the indices of the vertices added\n        // when subdiving the faces of the geometry.\n        const cache = new Map<string, number>();\n\n        /**\n         * Returns the index of the vertex positioned in the middle of the given vertices.\n         */\n        function middleVertex(i: number, j: number): number {\n            // Build a unique `key` for the pair of indices `(i, j)`.\n            const key = `${Math.min(i, j)}_${Math.max(i, j)}`;\n\n            const h = cache.get(key);\n\n            if (h !== undefined) {\n                // Nothing to do, a vertex in the middle of (i, j) was already created.\n                return h;\n            }\n\n            // The position of the new vertex.\n            tmpVectorA.set(position[i * 3], position[i * 3 + 1], position[i * 3 + 2]);\n            tmpVectorB.set(position[j * 3], position[j * 3 + 1], position[j * 3 + 2]);\n            tmpVectorC.lerpVectors(tmpVectorA, tmpVectorB, 0.5);\n\n            // The index of the new vertex.\n            const index = position.length / 3;\n            position.push(...tmpVectorC.toArray());\n            // Cache the position of the new vertex.\n            cache.set(key, index);\n\n            // The uvs of the new vertex.\n            if (uv !== undefined) {\n                tmpVectorA.set(uv[i * 2], uv[i * 2 + 1], 0);\n                tmpVectorB.set(uv[j * 2], uv[j * 2 + 1], 0);\n                tmpVectorC.lerpVectors(tmpVectorA, tmpVectorB, 0.5);\n                uv.push(tmpVectorC.x, tmpVectorC.y);\n            }\n\n            // The edge and wall attributes of the new vertex.\n            // If a new vertex has been introduced between i and j, connect the elements\n            // accordingly.\n            if (edge !== undefined) {\n                if (edge[i] === j) {\n                    edge.push(j);\n                    edge[i] = index;\n                } else if (edge[j] === i) {\n                    edge.push(i);\n                    edge[j] = index;\n                } else {\n                    edge.push(-1);\n                }\n            }\n            if (wall !== undefined) {\n                if (wall[i] === j) {\n                    wall.push(j);\n                    wall[i] = index;\n                } else if (wall[j] === i) {\n                    wall.push(i);\n                    wall[j] = index;\n                } else {\n                    wall.push(-1);\n                }\n            }\n\n            return index;\n        }\n\n        const newIndices = [];\n        while (indices.length >= 3) {\n            const v0 = indices.shift()!;\n            const v1 = indices.shift()!;\n            const v2 = indices.shift()!;\n\n            tmpVectorA.set(position[v0 * 3], position[v0 * 3 + 1], position[v0 * 3 + 2]);\n            tmpVectorB.set(position[v1 * 3], position[v1 * 3 + 1], position[v1 * 3 + 2]);\n            tmpVectorC.set(position[v2 * 3], position[v2 * 3 + 1], position[v2 * 3 + 2]);\n\n            const edgeToSplit = this.shouldSplitTriangle(tmpVectorA, tmpVectorB, tmpVectorC);\n\n            switch (edgeToSplit) {\n                case 0: {\n                    const v3 = middleVertex(v0, v1);\n                    indices.push(v0, v3, v2, v3, v1, v2);\n                    break;\n                }\n\n                case 1: {\n                    const v3 = middleVertex(v1, v2);\n                    indices.push(v0, v1, v3, v0, v3, v2);\n                    break;\n                }\n\n                case 2: {\n                    const v3 = middleVertex(v2, v0);\n                    indices.push(v0, v1, v3, v3, v1, v2);\n                    break;\n                }\n\n                case undefined: {\n                    newIndices.push(v0, v1, v2);\n                    break;\n                }\n\n                default:\n                    throw new Error(\"failed to subdivide the given geometry\");\n            }\n        }\n\n        positionAttr.array =\n            positionAttr.array instanceof Float32Array\n                ? new Float32Array(position)\n                : new Float64Array(position);\n        positionAttr.count = position.length / positionAttr.itemSize;\n        positionAttr.needsUpdate = true;\n\n        geometry.setIndex(newIndices);\n\n        if (uv !== undefined) {\n            uvAttr.array = new Float32Array(uv);\n            uvAttr.count = uv.length / uvAttr.itemSize;\n            uvAttr.needsUpdate = true;\n        }\n\n        if (edge !== undefined) {\n            edgeAttr.array = new Float32Array(edge);\n            edgeAttr.count = edge.length / edgeAttr.itemSize;\n            edgeAttr.needsUpdate = true;\n        }\n\n        return geometry;\n    }\n\n    /**\n     * Returns if the given triangle should be subdivide.\n     *\n     * Implementations of this function should return the index of\n     * the edge of the triangle to split (0, 1, or 2) or undefined if\n     * the triangle doesn't need to be subdivided.\n     *\n     * @param a - The position of the first vertex of the triangle.\n     * @param b - The position of the second vertex of the triangle.\n     * @param c - The position of the third vertex of the triangle.\n     */\n    protected abstract shouldSplitTriangle(a: Vector3, b: Vector3, c: Vector3): number | undefined;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport * as THREE from \"three\";\n\nimport { GeoBoxExtentLike } from \"./GeoBoxExtentLike\";\nimport { GeoCoordinates, MAX_LONGITUDE } from \"./GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"./GeoCoordinatesLike\";\n\n/**\n * `GeoBox` is used to represent a bounding box in geo coordinates.\n */\nexport class GeoBox implements GeoBoxExtentLike {\n    /**\n     * Returns a `GeoBox` with the given geo coordinates.\n     *\n     * @param southWest - The south west position in geo coordinates.\n     * @param northEast - The north east position in geo coordinates.\n     */\n    static fromCoordinates(southWest: GeoCoordinates, northEast: GeoCoordinates): GeoBox {\n        return new GeoBox(southWest, northEast);\n    }\n\n    /**\n     * Returns a `GeoBox` with the given center and dimensions.\n     *\n     * @param center - The center position of geo box.\n     * @param extent - Box latitude and logitude span\n     */\n    static fromCenterAndExtents(center: GeoCoordinates, extent: GeoBoxExtentLike): GeoBox {\n        return new GeoBox(\n            new GeoCoordinates(\n                center.latitude - extent.latitudeSpan / 2,\n                center.longitude - extent.longitudeSpan / 2\n            ),\n            new GeoCoordinates(\n                center.latitude + extent.latitudeSpan / 2,\n                center.longitude + extent.longitudeSpan / 2\n            )\n        );\n    }\n\n    /**\n     * Constructs a new `GeoBox` with the given geo coordinates.\n     *\n     * @param southWest - The south west position in geo coordinates.\n     * @param northEast - The north east position in geo coordinates.\n     */\n    constructor(readonly southWest: GeoCoordinates, readonly northEast: GeoCoordinates) {\n        if (this.west > this.east) {\n            this.northEast.longitude += 360;\n        }\n    }\n\n    /**\n     * Returns the minimum altitude or `undefined`.\n     */\n    get minAltitude(): number | undefined {\n        if (this.southWest.altitude === undefined || this.northEast.altitude === undefined) {\n            return undefined;\n        }\n        return Math.min(this.southWest.altitude, this.northEast.altitude);\n    }\n\n    /**\n     * Returns the maximum altitude or `undefined`.\n     */\n    get maxAltitude(): number | undefined {\n        if (this.southWest.altitude === undefined || this.northEast.altitude === undefined) {\n            return undefined;\n        }\n        return Math.max(this.southWest.altitude, this.northEast.altitude);\n    }\n\n    /**\n     * Returns the south latitude in degrees of this `GeoBox`.\n     */\n    get south(): number {\n        return this.southWest.latitude;\n    }\n\n    /**\n     * Returns the north altitude in degrees of this `GeoBox`.\n     */\n    get north(): number {\n        return this.northEast.latitude;\n    }\n\n    /**\n     * Returns the west longitude in degrees of this `GeoBox`.\n     */\n    get west(): number {\n        return this.southWest.longitude;\n    }\n\n    /**\n     * Returns the east longitude in degrees of this `GeoBox`.\n     */\n    get east(): number {\n        return this.northEast.longitude;\n    }\n\n    /**\n     * Returns the center of this `GeoBox`.\n     */\n    get center(): GeoCoordinates {\n        const latitude = (this.south + this.north) * 0.5;\n        const { west, east } = this;\n        const { minAltitude, altitudeSpan } = this;\n\n        let altitude: number | undefined;\n\n        if (minAltitude !== undefined && altitudeSpan !== undefined) {\n            altitude = minAltitude + altitudeSpan * 0.5;\n        }\n\n        if (west <= east) {\n            return new GeoCoordinates(latitude, (west + east) * 0.5, altitude);\n        }\n\n        let longitude = (360 + east + west) * 0.5;\n\n        if (longitude > 360) {\n            longitude -= 360;\n        }\n\n        return new GeoCoordinates(latitude, longitude, altitude);\n    }\n\n    /**\n     * Returns the latitude span in radians.\n     */\n    get latitudeSpanInRadians(): number {\n        return THREE.MathUtils.degToRad(this.latitudeSpan);\n    }\n\n    /**\n     * Returns the longitude span in radians.\n     */\n    get longitudeSpanInRadians(): number {\n        return THREE.MathUtils.degToRad(this.longitudeSpan);\n    }\n\n    /**\n     * Returns the latitude span in degrees.\n     */\n    get latitudeSpan(): number {\n        return this.north - this.south;\n    }\n\n    get altitudeSpan(): number | undefined {\n        if (this.maxAltitude === undefined || this.minAltitude === undefined) {\n            return undefined;\n        }\n        return this.maxAltitude - this.minAltitude;\n    }\n\n    /**\n     * Returns the longitude span in degrees.\n     */\n    get longitudeSpan(): number {\n        let width = this.northEast.longitude - this.southWest.longitude;\n\n        if (width < 0) {\n            width += 360;\n        }\n\n        return width;\n    }\n\n    /**\n     * Returns the latitude span in degrees.\n     * @deprecated Use [[latitudeSpan]] instead.\n     */\n    get latitudeSpanInDegrees(): number {\n        return this.latitudeSpan;\n    }\n\n    /**\n     * Returns the longitude span in degrees.\n     * @deprecated Use [[longitudeSpan]] instead.\n     */\n    get longitudeSpanInDegrees(): number {\n        return this.longitudeSpan;\n    }\n\n    /**\n     * Returns `true` if the given geo coordinates are contained in this `GeoBox`.\n     *\n     * @param point - The geo coordinates.\n     */\n    contains(point: GeoCoordinates): boolean {\n        if (\n            point.altitude === undefined ||\n            this.minAltitude === undefined ||\n            this.maxAltitude === undefined\n        ) {\n            return this.containsHelper(point);\n        }\n\n        const isFlat = this.minAltitude === this.maxAltitude;\n        const isSameAltitude = this.minAltitude === point.altitude;\n        const isWithinAltitudeRange =\n            this.minAltitude <= point.altitude && this.maxAltitude > point.altitude;\n\n        // If box is flat, we should check the altitude and containment,\n        // otherwise we should check also altitude difference where we consider\n        // point to be inside if alt is from [m_minAltitude, m_maxAltitude) range!\n        if (isFlat ? isSameAltitude : isWithinAltitudeRange) {\n            return this.containsHelper(point);\n        }\n\n        return false;\n    }\n\n    /**\n     * Clones this `GeoBox` instance.\n     */\n    clone(): GeoBox {\n        return new GeoBox(this.southWest.clone(), this.northEast.clone());\n    }\n\n    /**\n     * Update the bounding box by considering a given point.\n     *\n     * @param point - The point that may expand the bounding box.\n     */\n    growToContain(point: GeoCoordinatesLike) {\n        this.southWest.latitude = Math.min(this.southWest.latitude, point.latitude);\n        this.southWest.longitude = Math.min(this.southWest.longitude, point.longitude);\n        this.southWest.altitude =\n            this.southWest.altitude !== undefined && point.altitude !== undefined\n                ? Math.min(this.southWest.altitude, point.altitude)\n                : this.southWest.altitude !== undefined\n                ? this.southWest.altitude\n                : point.altitude !== undefined\n                ? point.altitude\n                : undefined;\n\n        this.northEast.latitude = Math.max(this.northEast.latitude, point.latitude);\n        this.northEast.longitude = Math.max(this.northEast.longitude, point.longitude);\n        this.northEast.altitude =\n            this.northEast.altitude !== undefined && point.altitude !== undefined\n                ? Math.max(this.northEast.altitude, point.altitude)\n                : this.northEast.altitude !== undefined\n                ? this.northEast.altitude\n                : point.altitude !== undefined\n                ? point.altitude\n                : undefined;\n    }\n\n    private containsHelper(point: GeoCoordinates): boolean {\n        if (point.latitude < this.southWest.latitude || point.latitude >= this.northEast.latitude) {\n            return false;\n        }\n\n        const { west, east } = this;\n\n        let longitude = point.longitude;\n        if (east > MAX_LONGITUDE) {\n            while (longitude < west) {\n                longitude = longitude + 360;\n            }\n        }\n\n        if (longitude > east) {\n            while (longitude > west + 360) {\n                longitude = longitude - 360;\n            }\n        }\n\n        return longitude >= west && longitude < east;\n    }\n}\n","/*\n * Copyright (C) 2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Represents an object that carry {@link GeoBox} extents like interface.\n */\nexport interface GeoBoxExtentLike {\n    /**\n     * Latitude span in degrees.\n     */\n    readonly latitudeSpan: number;\n\n    /**\n     * Longitude span in degrees\n     */\n    readonly longitudeSpan: number;\n}\n\n/**\n * Type guard to assert that `object` conforms to {@link GeoBoxExtentLike} interface.\n */\nexport function isGeoBoxExtentLike(obj: any): obj is GeoBoxExtentLike {\n    return (\n        obj &&\n        typeof obj === \"object\" &&\n        typeof obj.latitudeSpan === \"number\" &&\n        typeof obj.longitudeSpan === \"number\"\n    );\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { GeoCoordinatesLike, isGeoCoordinatesLike } from \"./GeoCoordinatesLike\";\nimport { GeoPointLike, isGeoPointLike } from \"./GeoPointLike\";\nimport { isLatLngLike, LatLngLike } from \"./LatLngLike\";\n\n/**\n * Represents an object in different geo coordinate formats\n */\nexport type GeoCoordLike = GeoPointLike | GeoCoordinatesLike | LatLngLike;\n\nexport function geoCoordLikeToGeoCoordinatesLike(coord: GeoCoordLike): GeoCoordinatesLike {\n    return isGeoCoordinatesLike(coord)\n        ? coord\n        : isLatLngLike(coord)\n        ? { latitude: coord.lat, longitude: coord.lng }\n        : { latitude: coord[1], longitude: coord[0] };\n}\n\nexport function geoCoordLikeToGeoPointLike(coord: GeoCoordLike): GeoPointLike {\n    return isGeoPointLike(coord)\n        ? coord\n        : isLatLngLike(coord)\n        ? [coord.lng, coord.lat]\n        : [coord.longitude, coord.latitude];\n}\n\nexport function isGeoCoordLike(object: any): boolean {\n    return isGeoCoordinatesLike(object) || isLatLngLike(object) || !isGeoPointLike(object);\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport * as THREE from \"three\";\n\nimport { GeoCoordinatesLike, isGeoCoordinatesLike } from \"./GeoCoordinatesLike\";\nimport { GeoCoordLike } from \"./GeoCoordLike\";\nimport { GeoPointLike, isGeoPointLike } from \"./GeoPointLike\";\nimport { isLatLngLike, LatLngLike } from \"./LatLngLike\";\n\nexport const MAX_LATITUDE = 90;\nexport const MIN_LATITUDE = -90;\nexport const MAX_LONGITUDE = 180;\nexport const MIN_LONGITUDE = -180;\n\nconst tmpV0 = new THREE.Vector3();\nconst tmpV1 = new THREE.Vector3();\n\n/**\n * Compute the modulo.\n *\n * @internal\n */\nfunction mod(dividend: number, divisor: number): number {\n    const modulo = dividend % divisor;\n    const modulo_sign = modulo < 0;\n    const divisor_sign = divisor < 0;\n    return modulo_sign === divisor_sign ? modulo : modulo + divisor;\n}\n\n/**\n * `GeoCoordinates` is used to represent geo positions.\n */\nexport class GeoCoordinates implements GeoCoordinatesLike {\n    /**\n     * Returns a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude - Latitude in degrees.\n     * @param longitude - Longitude in degrees.\n     * @param altitude - Altitude in meters.\n     */\n    static fromDegrees(latitude: number, longitude: number, altitude?: number): GeoCoordinates {\n        return new GeoCoordinates(latitude, longitude, altitude);\n    }\n\n    /**\n     * Returns a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude - Latitude in radians.\n     * @param longitude - Longitude in radians.\n     * @param altitude - Altitude in meters.\n     */\n    static fromRadians(latitude: number, longitude: number, altitude?: number): GeoCoordinates {\n        return new GeoCoordinates(\n            THREE.MathUtils.radToDeg(latitude),\n            THREE.MathUtils.radToDeg(longitude),\n            altitude\n        );\n    }\n\n    /**\n     * Creates a {@link GeoCoordinates} from a {@link LatLngLike} literal.\n     * ```typescript\n     * const center = { lat: 53.3, lng: 13.4 };\n     * mapView.geoCenter = GeoCoordinates.fromLatLng(center);\n     * ```\n     * @param latLng - A {@link LatLngLike} object literal.\n     */\n    static fromLatLng(latLng: LatLngLike) {\n        return new GeoCoordinates(latLng.lat, latLng.lng);\n    }\n\n    /**\n     * Creates a {@link GeoCoordinates} from a [[GeoPointLike]] tuple.\n     *\n     * Example:\n     * ```typescript\n     * mapView.geoCenter = GeoCoordinates.fromGeoPoint([longitude, latitude]);\n     *\n     * let geoCoords: number[] = ...;\n     *\n     * if (isGeoPointLike(geoCoords)) {\n     *     const p = GeoCoordinates.fromGeoPoint(geoCoords);\n     * }\n     * ```\n     * @param geoPoint - An [[Array]] of at least two elements following the order\n     * longitude, latitude, altitude.\n     */\n    static fromGeoPoint(geoPoint: GeoPointLike): GeoCoordinates {\n        return new GeoCoordinates(geoPoint[1], geoPoint[0], geoPoint[2]);\n    }\n\n    /**\n     * Creates a {@link GeoCoordinates} from different types of geo coordinate objects.\n     *\n     * Example:\n     * ```typescript\n     * const fromGeoPointLike = GeoCoordinates.fromObject([longitude, latitude]);\n     * const fromGeoCoordinateLike = GeoCoordinates.fromObject({ longitude, latitude });\n     * const fromGeoCoordinate = GeoCoordinates.fromObject(new GeoCoordinates(latitude, longitude));\n     * const fromLatLngLike = GeoCoordinates.fromObject({ lat: latitude , lng: longitude });\n     * ```\n     *\n     * @param geoPoint - Either [[GeoPointLike]], {@link GeoCoordinatesLike}\n     * or {@link LatLngLike} object literal.\n     */\n    static fromObject(geoPoint: GeoCoordLike): GeoCoordinates {\n        if (isGeoPointLike(geoPoint)) {\n            return GeoCoordinates.fromGeoPoint(geoPoint);\n        } else if (isGeoCoordinatesLike(geoPoint)) {\n            return GeoCoordinates.fromDegrees(\n                geoPoint.latitude,\n                geoPoint.longitude,\n                geoPoint.altitude\n            );\n        } else if (isLatLngLike(geoPoint)) {\n            return GeoCoordinates.fromDegrees(geoPoint.lat, geoPoint.lng);\n        }\n\n        throw new Error(\"Invalid input coordinate format.\");\n    }\n\n    /**\n     * Returns a `GeoCoordinates` resulting from the linear interpolation of other two.\n     * @param geoCoords0 - One of the `GeoCoordinates` used for interpolation.\n     * @param geoCoords1 - The other `GeoCoordinates` used for interpolation.\n     * @param factor - Interpolation factor. If `0` result will be equal to `geoCoords0`, if `1`\n     * it'll be equal to `geoCoords1`.\n     * @param wrap - If `true`, interpolation will be done across the antimeridian, otherwise it's\n     * done across the Greenwich meridian. Supported only if longitude span is less than 360 deg.\n     * @default false\n     * @param normalize - If `true`, interpolation result will be normalized. @default false\n     */\n    static lerp(\n        geoCoords0: GeoCoordinates,\n        geoCoords1: GeoCoordinates,\n        factor: number,\n        wrap: boolean = false,\n        normalize: boolean = false\n    ): GeoCoordinates {\n        if (wrap) {\n            if (geoCoords0.lng < geoCoords1.lng) {\n                const geoCoordsEnd = geoCoords0.clone();\n                geoCoordsEnd.longitude += 360;\n                return this.lerp(geoCoords1, geoCoordsEnd, 1 - factor);\n            } else {\n                const geoCoordsEnd = geoCoords1.clone();\n                geoCoordsEnd.longitude += 360;\n                return this.lerp(geoCoords0, geoCoordsEnd, factor);\n            }\n        }\n\n        const v0 = tmpV0.set(geoCoords0.lat, geoCoords0.lng, geoCoords0.altitude ?? 0);\n        const v1 = tmpV1.set(geoCoords1.lat, geoCoords1.lng, geoCoords1.altitude ?? 0);\n        v0.lerp(v1, factor);\n        const result = new GeoCoordinates(v0.x, v0.y, v0.z);\n\n        return normalize ? result.normalized() : result;\n    }\n\n    /**\n     * Creates a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude - Latitude in degrees.\n     * @param longitude - Longitude in degrees.\n     * @param altitude - Altitude in meters.\n     */\n    constructor(public latitude: number, public longitude: number, public altitude?: number) {}\n\n    /**\n     * Returns the latitude in radians.\n     */\n    get latitudeInRadians(): number {\n        return THREE.MathUtils.degToRad(this.latitude);\n    }\n\n    /**\n     * Returns the longitude in radians.\n     */\n    get longitudeInRadians(): number {\n        return THREE.MathUtils.degToRad(this.longitude);\n    }\n\n    /**\n     * Returns the latitude in degrees.\n     * @deprecated Use the [[latitude]] property instead.\n     */\n    get latitudeInDegrees(): number {\n        return this.latitude;\n    } // compat api\n\n    /**\n     * Returns the longitude in degrees.\n     * @deprecated Use the [[longitude]] property instead.\n     */\n    get longitudeInDegrees(): number {\n        return this.longitude;\n    } // compat api\n\n    /**\n     * The latitude in the degrees.\n     */\n    get lat() {\n        return this.latitude;\n    }\n\n    /**\n     * The longitude in the degrees.\n     */\n    get lng() {\n        return this.longitude;\n    }\n\n    /**\n     * Returns `true` if this `GeoCoordinates` is valid; returns `false` otherwise.\n     */\n    isValid(): boolean {\n        return !isNaN(this.latitude) && !isNaN(this.longitude);\n    }\n\n    /**\n     * Returns the normalized `GeoCoordinates`.\n     */\n    normalized(): GeoCoordinates {\n        let { latitude, longitude } = this;\n        if (isNaN(latitude) || isNaN(longitude)) {\n            return this;\n        }\n        if (longitude < -180 || longitude > 180) {\n            longitude = mod(longitude + 180, 360) - 180;\n        }\n        latitude = THREE.MathUtils.clamp(latitude, -90, 90);\n        return new GeoCoordinates(latitude, longitude, this.altitude);\n    }\n\n    /**\n     * Returns `true` if this `GeoCoordinates` is equal to the other.\n     *\n     * @param other - GeoCoordinatesLike to compare to.\n     */\n    equals(other: GeoCoordinatesLike): boolean {\n        return (\n            this.latitude === other.latitude &&\n            this.longitude === other.longitude &&\n            this.altitude === other.altitude\n        );\n    }\n\n    /**\n     * Copy values from the other.\n     *\n     * @param other - GeoCoordinatesLike to copy all values from.\n     */\n    copy(other: GeoCoordinatesLike): GeoCoordinates {\n        this.latitude = other.latitude;\n        this.longitude = other.longitude;\n        this.altitude = other.altitude;\n        return this;\n    }\n\n    /**\n     * Clones this `GeoCoordinates`.\n     */\n    clone(): GeoCoordinates {\n        return new GeoCoordinates(this.latitude, this.longitude, this.altitude);\n    }\n\n    /**\n     * Returns this {@link GeoCoordinates} as {@link LatLngLike} literal.\n     */\n    toLatLng(): LatLngLike {\n        return { lat: this.latitude, lng: this.longitude };\n    }\n\n    /**\n     * Converts this {@link GeoCoordinates} to a [[GeoPointLike]].\n     */\n    toGeoPoint(): GeoPointLike {\n        return this.altitude !== undefined\n            ? [this.longitude, this.latitude, this.altitude]\n            : [this.longitude, this.latitude];\n    }\n\n    /**\n     * Returns the minimum longitude span from this `GeoCoordinates` to another.\n     *\n     * @param other - The other GeoCoordinatesLike defining the longitude span.\n     */\n    minLongitudeSpanTo(other: GeoCoordinatesLike): number {\n        const minLongitude = Math.min(this.longitude, other.longitude);\n        const maxLongitude = Math.max(this.longitude, other.longitude);\n\n        return Math.min(maxLongitude - minLongitude, 360 + minLongitude - maxLongitude);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Represents an object with `GeoCoordinates` like interface.\n */\nexport interface GeoCoordinatesLike {\n    /** The latitude in degrees. */\n    latitude: number;\n\n    /** The longitude in degrees. */\n    longitude: number;\n\n    /** The optional altitude in meters. */\n    altitude?: number;\n}\n\n/**\n * Type guard to assert that `object` conforms to {@link GeoCoordinatesLike} data interface.\n */\nexport function isGeoCoordinatesLike(object: any): object is GeoCoordinatesLike {\n    return (\n        object &&\n        typeof object.latitude === \"number\" &&\n        typeof object.longitude === \"number\" &&\n        (typeof object.altitude === \"number\" || typeof object.altitude === \"undefined\")\n    );\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * An [[Array]] following the order longitude, latitude, altitude.\n */\nexport type GeoPointLike = [number, number, number?];\n\n/**\n * Type guard to assert that `object` conforms to [[GeoPointLike]] interface.\n */\nexport function isGeoPointLike(geoPoint: any): geoPoint is GeoPointLike {\n    if (Array.isArray(geoPoint)) {\n        const [longitude, latitude, altitude] = geoPoint;\n        return (\n            typeof longitude === \"number\" &&\n            typeof latitude === \"number\" &&\n            (altitude === undefined || typeof altitude === \"number\")\n        );\n    }\n    return false;\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Vector2 } from \"three\";\n\nimport { GeoBox } from \"./GeoBox\";\nimport { GeoCoordinates, MAX_LATITUDE, MIN_LATITUDE } from \"./GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"./GeoCoordinatesLike\";\nimport { GeoCoordLike, geoCoordLikeToGeoCoordinatesLike } from \"./GeoCoordLike\";\nimport { GeoPolygonLike } from \"./GeoPolygonLike\";\n\nfunction computeLonSpanAcrossGreewich(lonA: number, lonB: number) {\n    return Math.max(lonA, lonB) - Math.min(lonA, lonB);\n}\n\nfunction isLeftToRightAntimeridianCrossing(lonStart: number, lonEnd: number) {\n    return lonStart > 0 && lonEnd < 0 && computeLonSpanAcrossGreewich(lonStart, lonEnd) > 180;\n}\n\nfunction isRightToLeftAntimeridianCrossing(lonStart: number, lonEnd: number) {\n    return isLeftToRightAntimeridianCrossing(lonEnd, lonStart);\n}\n\nexport function isAntimeridianCrossing(lonStart: number, lonEnd: number) {\n    return (\n        Math.sign(lonStart) === -Math.sign(lonEnd) &&\n        computeLonSpanAcrossGreewich(lonStart, lonEnd) > 180\n    );\n}\n\ntype MinThreeItemsArray<T> = [T, T, T, ...T[]];\n\nexport type GeoPolygonCoordinates = MinThreeItemsArray<\n    GeoCoordinatesLike | GeoCoordinates | GeoCoordLike\n>;\n\n/**\n * A GeoPolygon in 2D Space (altitudes will be ignored).\n * Coordinates are expected in counter-clockwise order, for convex polygons a sorting is\n * available.\n * Clockwise ordered or selfintersecting Polygons might lead to no or unexpected results.\n *\n * @beta @internal\n */\nexport class GeoPolygon implements GeoPolygonLike {\n    private readonly m_coordinates: MinThreeItemsArray<GeoCoordinatesLike>;\n\n    /**\n     * Creates a GeoPolygon instance\n     *\n     * @param coordinates An array of GeoCoordinates acting as the Vertices of the Polygon.\n     * @param needsSort  If `true` it will sort the coordinates in ccw order, this will only\n     *  result correctly for convex polygons @default false\n     * @param needsWrapping  If `true` it will wrap around coordinates crossing the antemeridian.\n     * Only supported for polygons with sides that don't span more than 180 degrees longitude.\n     * @default false\n     */\n    constructor(\n        coordinates: GeoPolygonCoordinates,\n        needsSort: boolean = false,\n        needsWrapping: boolean = false\n    ) {\n        this.m_coordinates = coordinates.map(coord => {\n            return geoCoordLikeToGeoCoordinatesLike(coord);\n        }) as MinThreeItemsArray<GeoCoordinatesLike>;\n        if (needsSort) {\n            this.sortCCW();\n        }\n        if (needsWrapping) {\n            this.wrapCoordinatesAround();\n        }\n    }\n\n    get coordinates(): MinThreeItemsArray<GeoCoordinatesLike> {\n        return this.m_coordinates;\n    }\n\n    /**\n     * Gets a BoundingBox for the Polygon\n     *\n     * Might have unexpected results for twisted or concave Polygons\n     */\n    getGeoBoundingBox(): GeoBox {\n        const centroid = this.getCentroid();\n        if (centroid === undefined) {\n            //return a BBox without extend if the centroid could not be generated\n            return GeoBox.fromCoordinates(\n                this.coordinates[0] as GeoCoordinates,\n                this.coordinates[0] as GeoCoordinates\n            );\n        }\n        const { east, west } = this.getEastAndWest(centroid);\n        const { north, south } = this.getNorthAndSouth();\n        return GeoBox.fromCoordinates(\n            new GeoCoordinates(south, west),\n            new GeoCoordinates(north, east)\n        );\n    }\n\n    /**\n     * Gets the Centroid for the Polygon\n     *\n     * Might be undefined or with unexpected results for twisted or concave Polygons.\n     */\n    getCentroid(): GeoCoordinates | undefined {\n        const area = this.getArea();\n        if (area === 0) {\n            return undefined;\n        }\n        let latitude = 0;\n        let longitude = 0;\n        let f;\n\n        let previousIndex = this.m_coordinates.length - 1;\n\n        this.m_coordinates.forEach((coordinate, index) => {\n            const previousCoordinate = this.m_coordinates[previousIndex];\n            f =\n                coordinate.latitude * previousCoordinate.longitude -\n                previousCoordinate.latitude * coordinate.longitude;\n            latitude += (coordinate.latitude + previousCoordinate.latitude) * f;\n            longitude += (coordinate.longitude + previousCoordinate.longitude) * f;\n            previousIndex = index;\n        });\n\n        f = area * 6;\n\n        return new GeoCoordinates(\n            latitude / f,\n            area < 0 /* antimeridian crossing */ ? -180 + longitude / f : longitude / f\n        );\n    }\n\n    private sortCCW() {\n        const polyCenter = this.getPolyAverageCenter();\n        if (!polyCenter) {\n            return;\n        }\n\n        //sorts by angle from x-axis\n        this.m_coordinates.sort((a: GeoCoordinatesLike, b: GeoCoordinatesLike) => {\n            const veca = new Vector2(\n                a.latitude - polyCenter.latitude,\n                a.longitude - polyCenter.longitude\n            ).normalize();\n            const vecb = new Vector2(\n                b.latitude - polyCenter.latitude,\n                b.longitude - polyCenter.longitude\n            ).normalize();\n\n            return vecb.angle() - veca.angle();\n        });\n    }\n\n    private wrapCoordinatesAround() {\n        const firstAntimerCrossIndex = this.m_coordinates.findIndex(\n            (val: GeoCoordinatesLike, index: number) => {\n                const prevLonIndex = index === 0 ? this.m_coordinates.length - 1 : index - 1;\n                const prevLon = this.m_coordinates[prevLonIndex].longitude;\n                const lon = val.longitude;\n\n                return isLeftToRightAntimeridianCrossing(prevLon, lon);\n            }\n        );\n        if (firstAntimerCrossIndex < 0) {\n            return;\n        }\n\n        let wrapAround = true;\n        for (let i = 0; i < this.m_coordinates.length; i++) {\n            const index = (firstAntimerCrossIndex + i) % this.m_coordinates.length;\n            const currentLon = this.m_coordinates[index].longitude;\n            const nextLon = this.m_coordinates[(index + 1) % this.m_coordinates.length].longitude;\n\n            if (wrapAround) {\n                this.m_coordinates[index].longitude += 360;\n            }\n\n            if (isRightToLeftAntimeridianCrossing(currentLon, nextLon)) {\n                wrapAround = false;\n            } else if (isLeftToRightAntimeridianCrossing(currentLon, nextLon)) {\n                wrapAround = true;\n            }\n        }\n    }\n\n    private getPolyAverageCenter(): GeoCoordinates | undefined {\n        const polySum = this.m_coordinates.reduce((prev, curr) => {\n            return new GeoCoordinates(\n                prev.latitude + curr.latitude,\n                prev.longitude + curr.longitude\n            );\n        });\n        //create an average center point\n        return new GeoCoordinates(\n            polySum.latitude / this.m_coordinates.length,\n            polySum.longitude / this.m_coordinates.length\n        );\n    }\n\n    private getArea(): number {\n        let area = 0;\n        let previousIndex = this.m_coordinates.length - 1;\n\n        this.m_coordinates.forEach((coordinate, index) => {\n            const previousCoordinate = this.m_coordinates[previousIndex];\n            area += coordinate.latitude * previousCoordinate.longitude;\n            area -= coordinate.longitude * previousCoordinate.latitude;\n            previousIndex = index;\n        });\n\n        return (area /= 2);\n    }\n\n    private getEastAndWest(center: GeoCoordinates): { east: number; west: number } {\n        let west = center.longitude;\n        let east = center.longitude;\n        let previousIndex = this.m_coordinates.length - 1;\n        this.m_coordinates.forEach((coordinate, index) => {\n            const previousCoordinate = this.m_coordinates[previousIndex];\n            previousIndex = index;\n            const veca = new Vector2(\n                coordinate.latitude - center.latitude,\n                coordinate.longitude - center.longitude\n            ).normalize();\n\n            const vecb = new Vector2(\n                previousCoordinate.latitude - center.latitude,\n                previousCoordinate.longitude - center.longitude\n            ).normalize();\n\n            let ccw = Math.sign(vecb.angle() - veca.angle()) === 1;\n            // overwrite in case of angle over axis\n            if (vecb.y >= 0 && veca.y < 0) {\n                ccw = true;\n            }\n\n            const long = coordinate.longitude;\n            if (long < center.longitude) {\n                if (ccw) {\n                    west = Math.min(west, long);\n                } else {\n                    east = Math.min(east, long);\n                }\n            } else {\n                if (ccw) {\n                    east = Math.max(east, long);\n                } else {\n                    west = Math.max(west, long);\n                }\n            }\n        });\n        return { east, west };\n    }\n\n    private getNorthAndSouth(): { north: number; south: number } {\n        let north = MIN_LATITUDE;\n        let south = MAX_LATITUDE;\n        this.m_coordinates.forEach((coordinate, index) => {\n            north = Math.max(north, coordinate.latitude);\n            south = Math.min(south, coordinate.latitude);\n        });\n        return { north, south };\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { GeoCoordLike, isGeoCoordLike } from \"./GeoCoordLike\";\n\n/**\n * Represents an object with `GeoPolygon` like interface.\n *\n * This is defined as an Array of GeoCoordinates sorted in ccw order.\n *\n * @beta, @internal\n */\nexport interface GeoPolygonLike {\n    /**\n     * Array of ccw sorted GeoCoordLike\n     */\n    coordinates: GeoCoordLike[];\n}\n\n/**\n * Type guard to assert that `object` conforms to {@link GeoPolygonLike} data interface.\n *\n * @beta, @internal\n */\nexport function isGeoPolygonLike(object: any): object is GeoPolygonLike {\n    if (!object || (!Array.isArray(object.coordinates) && object.coordinates.length > 2)) {\n        return false;\n    }\n    let isValid: boolean = true;\n    //TODO: this might take a while, not sure this should be that extensive\n    object.coordinates.forEach((coord: any) => {\n        if (!isGeoCoordLike(object)) {\n            isValid = false;\n        }\n    });\n    return isValid;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Represents an object with `LatLng` like interface.\n */\nexport interface LatLngLike {\n    /** The latitude in degrees. */\n    lat: number;\n\n    /** The longitude in degrees. */\n    lng: number;\n}\n\n/**\n * Type guard to assert that `object` conforms to {@link LatLngLike} interface.\n */\nexport function isLatLngLike(object: any): object is LatLngLike {\n    return object && typeof object.lat === \"number\" && typeof object.lng === \"number\";\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"./Vector3Like\";\n\n/**\n * An interface representing bounding box in world coordinates.\n */\nexport interface Box3Like {\n    /**\n     * The minimum position in world coordinates of this bounding box.\n     */\n    readonly min: Vector3Like;\n\n    /**\n     * The maximum position in world coordinates of this bounding box.\n     */\n    readonly max: Vector3Like;\n}\n\n/**\n * Returns true if the given object implements the {@link Box3Like} interface.\n *\n * @param object - A valid object.\n */\nexport function isBox3Like(object: {}): object is Box3Like {\n    const box3 = object as Partial<Box3Like>;\n    return box3.min !== undefined && box3.max !== undefined;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { Box3Like } from \"./Box3Like\";\nimport { Vector3Like } from \"./Vector3Like\";\n\nexport namespace MathUtils {\n    /**\n     * Creates a new empty bounding box.\n     *\n     * @deprecated Use {@link https://threejs.org/docs/#api/en/math/Box3 | THREE.Box3} instead.\n     */\n    export function newEmptyBox3(): Box3Like {\n        return {\n            min: { x: Infinity, y: Infinity, z: Infinity },\n            max: { x: -Infinity, y: -Infinity, z: -Infinity }\n        };\n    }\n\n    /**\n     * Creates a new [Vector3Like] instance.\n     *\n     * @param x - The x component.\n     * @param y - The y component.\n     * @param z - The z component.\n     */\n    export function newVector3(x: number, y: number, z: number): Vector3Like;\n\n    /**\n     * Creates a new [Vector3Like] instance.\n     *\n     * @param x - The x component.\n     * @param y - The y component.\n     * @param z - The z component.\n     * @param v - The resulting [Vector3Like] instance.\n     */\n    export function newVector3<Vector extends Vector3Like>(\n        x: number,\n        y: number,\n        z: number,\n        v: Vector\n    ): Vector;\n\n    /**\n     * Set the components of the given [Vector3Like] instance.\n     *\n     * @param x - The x component.\n     * @param y - The y component.\n     * @param z - The z component.\n     * @param v - The [Vector3Like]\n     */\n    export function newVector3(x: number, y: number, z: number, v?: Vector3Like): Vector3Like {\n        if (v === undefined) {\n            return { x, y, z };\n        }\n        v.x = x;\n        v.y = y;\n        v.z = z;\n        return v;\n    }\n\n    /**\n     * Copies the vector across.\n     *\n     * @param from - The vector to copy from.\n     * @param to - The resulting [Vector3Like] instance, with the contents copied from from\n     */\n    export function copyVector3<Vector extends Vector3Like>(from: Vector3Like, to: Vector): Vector {\n        to.x = from.x;\n        to.y = from.y;\n        to.z = from.z;\n        return to;\n    }\n\n    /**\n     * Converts an angle measured in degrees to an equivalent value in radians.\n     *\n     * @param degrees - Value in degrees.\n     * @returns Value in radians.\n     * @deprecated use THREE.MathUtils.degToRad instead\n     */\n    export const degToRad = THREE.MathUtils.degToRad;\n\n    /**\n     * Converts an angle measured in radians to an equivalent value in degrees.\n     *\n     * @param degrees - Value in radians.\n     * @returns Value in degrees.\n     * @deprecated Use {@link https://threejs.org/docs/#api/en/math/MathUtils.radToDeg\n     *                | THREE.MathUtils.radToDeg}.\n     */\n    export const radToDeg = THREE.MathUtils.radToDeg;\n\n    /**\n     * Ensures that input value fits in a given range.\n     *\n     * @param value - The value to be clamped.\n     * @param min - Minimum value.\n     * @param max - Maximum value.\n     * @returns Clamped value.\n     * @deprecated Use {@link https://threejs.org/docs/#api/en/math/MathUtils.clamp\n     *                | THREE.MathUtils.clamp}.\n     */\n    export const clamp = THREE.MathUtils.clamp;\n\n    /**\n     * Normalize angle in degrees to range `[0, 360)`.\n     *\n     * @param a - Angle in degrees.\n     * @returns Angle in degrees in range `[0, 360)`.\n     */\n    export function normalizeAngleDeg(a: number): number {\n        a = a % 360;\n        if (a < 0) {\n            a = a + 360;\n        }\n        return a;\n    }\n\n    /**\n     * Normalize latitude angle in degrees to range `[-180, 180]`.\n     *\n     * @param a - Latitude angle in degrees.\n     * @returns Latitude angle in degrees in range `[-180, 180]`.\n     */\n    export function normalizeLongitudeDeg(a: number): number {\n        a = normalizeAngleDeg(a);\n        if (a > 180) {\n            a = a - 360;\n        }\n        return a;\n    }\n\n    /**\n     * Return the minimal delta between angles `a` and `b` given in degrees.\n     *\n     * Equivalent to `a - b` in coordinate space with exception vector direction can be reversed\n     * that if `abs(a-b) > 180` because trip is shorter in 'other' direction.\n     *\n     * Useful when interpolating between `b` and `a` in angle space.\n     *\n     * @param a - Start angle in degrees.\n     * @param b - End angle in degrees.\n     * @returns Angle that that satisfies condition `a - b - d = 0` in angle space.\n     */\n    export function angleDistanceDeg(a: number, b: number): number {\n        a = normalizeAngleDeg(a);\n        b = normalizeAngleDeg(b);\n\n        const d = a - b;\n        if (d > 180) {\n            return d - 360;\n        } else if (d <= -180) {\n            return d + 360;\n        } else {\n            return d;\n        }\n    }\n\n    /**\n     * Interpolate linearly between two angles given in degrees.\n     *\n     * @param p0 - Angle from in degrees\n     * @param p1 - Angle to in degrees\n     * @param t - Interpolation factor (alpha), in range `0-1`.\n     */\n    export function interpolateAnglesDeg(p0: number, p1: number, t: number): number {\n        // hand crafted version,\n        // see stack for maybe better versions:\n        //    https://stackoverflow.com/questions/2708476/rotation-interpolation\n\n        const d = angleDistanceDeg(p1, p0);\n        const r = (p0 + d * t) % 360;\n        return r;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Frustum, Matrix4, Plane, Ray, Vector3 } from \"three\";\n\nimport { OrientedBox3Like } from \"./OrientedBox3Like\";\n\nfunction intersectsSlab(\n    rayDir: Vector3,\n    p: Vector3,\n    axis: Vector3,\n    extent: number,\n    t: { min: number; max: number }\n): boolean {\n    const epsilon = 1e-20;\n    const e = axis.dot(p);\n    const f = axis.dot(rayDir);\n    if (Math.abs(f) < epsilon) {\n        // ray parallel to near/far slab lines.\n        return Math.abs(e) <= extent;\n    }\n\n    // ray intersects near/far slab lines.\n    const finv = 1 / f;\n    const t1 = (e + extent) * finv;\n    const t2 = (e - extent) * finv;\n    if (t1 > t2) {\n        // t1 is far intersect, t2 is near.\n        if (t2 > t.min) {\n            t.min = t2;\n        }\n        if (t1 < t.max) {\n            t.max = t1;\n        }\n    } else {\n        // t1 is near intersect, t2 is far.\n        if (t1 > t.min) {\n            t.min = t1;\n        }\n        if (t2 < t.max) {\n            t.max = t2;\n        }\n    }\n    return t.min <= t.max && t.max >= 0;\n}\n\nconst tmpVec = new Vector3();\nconst tmpT = { min: -Infinity, max: Infinity };\n\nexport class OrientedBox3 implements OrientedBox3Like {\n    /**\n     * The position of the center of this `OrientedBox3`.\n     */\n    readonly position = new Vector3();\n\n    /**\n     * The x-axis of this `OrientedBox3`.\n     */\n    readonly xAxis = new Vector3(1, 0, 0);\n\n    /**\n     * The y-axis of this `OrientedBox3`.\n     */\n    readonly yAxis = new Vector3(0, 1, 0);\n\n    /**\n     * The z-axis of this `OrientedBox3`.\n     */\n    readonly zAxis = new Vector3(0, 0, 1);\n\n    /**\n     * The extents of this `OrientedBox3`.\n     */\n    readonly extents = new Vector3();\n\n    /**\n     * Creates a new `OrientedBox3`.\n     */\n    constructor();\n\n    /**\n     * Creates a new `OrientedBox3` with the given position, orientation and extents.\n     *\n     * @param position - The position of the center of the `OrientedBox3`.\n     * @param rotationMatrix - The rotation of the `OrientedBox3`.\n     * @param extents - The extents of the `OrientedBox3`.\n     */\n    constructor(position: Vector3, rotationMatrix: Matrix4, extents: Vector3);\n\n    /**\n     * Creates a new `OrientedBox3`.\n     *\n     * @hideconstructor\n     */\n    constructor(position?: Vector3, rotationMatrix?: Matrix4, extents?: Vector3) {\n        if (position !== undefined) {\n            this.position.copy(position);\n        }\n\n        if (rotationMatrix !== undefined) {\n            rotationMatrix.extractBasis(this.xAxis, this.yAxis, this.zAxis);\n        }\n\n        if (extents !== undefined) {\n            this.extents.copy(extents);\n        }\n    }\n\n    /**\n     * Create a copy of this [[OrientedBoundingBox]].\n     */\n    clone(): OrientedBox3 {\n        const newBox = new OrientedBox3();\n        newBox.copy(this);\n        return newBox;\n    }\n\n    /**\n     * Copies the values of `other` to this {@link OrientedBox3}.\n     * @param other - The other {@link OrientedBox3} to copy.\n     */\n    copy(other: OrientedBox3) {\n        this.position.copy(other.position);\n        this.xAxis.copy(other.xAxis);\n        this.yAxis.copy(other.yAxis);\n        this.zAxis.copy(other.zAxis);\n        this.extents.copy(other.extents);\n    }\n\n    /**\n     * Gets the center position of this {@link OrientedBox3}.\n     *\n     * @param center - The returned center position.\n     */\n    getCenter(center = new Vector3()): Vector3 {\n        return center.copy(this.position);\n    }\n\n    /**\n     * Gets the size of this {@link OrientedBox3}.\n     *\n     * @param size - The returned size.\n     */\n    getSize(size = new Vector3()): Vector3 {\n        return size.copy(this.extents).multiplyScalar(2);\n    }\n\n    /**\n     * Gets the orientation matrix of this `OrientedBox3`.\n     * @param matrix - The output orientation matrix.\n     */\n    getRotationMatrix(matrix: Matrix4 = new Matrix4()): Matrix4 {\n        return matrix.makeBasis(this.xAxis, this.yAxis, this.zAxis);\n    }\n\n    /**\n     * Checks intersection with the given `THREE.Frustum` or array of `THREE.Plane`s.\n     *\n     * @param frustumOrPlanes - Frustum or array of planes.\n     */\n    intersects(frustumOrPlanes: Plane[] | Frustum): boolean {\n        const planes: Plane[] = Array.isArray(frustumOrPlanes)\n            ? frustumOrPlanes\n            : frustumOrPlanes.planes;\n\n        for (const plane of planes) {\n            const r =\n                Math.abs(plane.normal.dot(this.xAxis) * this.extents.x) +\n                Math.abs(plane.normal.dot(this.yAxis) * this.extents.y) +\n                Math.abs(plane.normal.dot(this.zAxis) * this.extents.z);\n\n            const d = plane.distanceToPoint(this.position);\n\n            if (d + r < 0) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Checks intersection with the given ray.\n     *\n     * @param ray - The ray to test.\n     * @returns distance from ray origin to intersection point if it exist, undefined otherwise.\n     */\n    intersectsRay(ray: Ray): number | undefined {\n        // Slabs intersection algorithm.\n        tmpT.min = -Infinity;\n        tmpT.max = Infinity;\n        tmpVec.copy(this.position).sub(ray.origin);\n        if (!intersectsSlab(ray.direction, tmpVec, this.xAxis, this.extents.x, tmpT)) {\n            return undefined;\n        }\n        if (!intersectsSlab(ray.direction, tmpVec, this.yAxis, this.extents.y, tmpT)) {\n            return undefined;\n        }\n        if (!intersectsSlab(ray.direction, tmpVec, this.zAxis, this.extents.z, tmpT)) {\n            return undefined;\n        }\n\n        return tmpT.min > 0 ? tmpT.min : tmpT.max;\n    }\n\n    /**\n     * Returns true if this {@link OrientedBox3} contains the given point.\n     *\n     * @param point - A valid point.\n     */\n    contains(point: Vector3): boolean {\n        const dx = point.x - this.position.x;\n        const dy = point.y - this.position.y;\n        const dz = point.z - this.position.z;\n        const x = Math.abs(dx * this.xAxis.x + dy * this.xAxis.y + dz * this.xAxis.z);\n        const y = Math.abs(dx * this.yAxis.x + dy * this.yAxis.y + dz * this.yAxis.z);\n        const z = Math.abs(dx * this.zAxis.x + dy * this.zAxis.y + dz * this.zAxis.z);\n        if (x > this.extents.x || y > this.extents.y || z > this.extents.z) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Returns the distance from this {@link OrientedBox3} and the given `point`.\n     *\n     * @param point - A point.\n     */\n    distanceToPoint(point: Vector3): number {\n        return Math.sqrt(this.distanceToPointSquared(point));\n    }\n\n    /**\n     * Returns the squared distance from this {@link OrientedBox3} and the given `point`.\n     *\n     * @param point - A point.\n     */\n    distanceToPointSquared(point: Vector3): number {\n        const d = new Vector3();\n        d.subVectors(point, this.position);\n\n        const lengths = [d.dot(this.xAxis), d.dot(this.yAxis), d.dot(this.zAxis)];\n\n        let result = 0;\n\n        for (let i = 0; i < 3; ++i) {\n            const length = lengths[i];\n            const extent = this.extents.getComponent(i);\n            if (length < -extent) {\n                const dd = extent + length;\n                result += dd * dd;\n            } else if (length > extent) {\n                const dd = length - extent;\n                result += dd * dd;\n            }\n        }\n\n        return result;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TransformLike } from \"./TransformLike\";\nimport { Vector3Like } from \"./Vector3Like\";\n\n/**\n * The interface {@link OrientedBox3Like} is used to represent oriented bounding box.\n */\nexport interface OrientedBox3Like extends TransformLike {\n    /**\n     * The extents of this bounding box.\n     */\n    readonly extents: Vector3Like;\n}\n\n/**\n * Returns true if the given object implements the interface {@link OrientedBox3Like}.\n *\n * @param object - The object.\n */\nexport function isOrientedBox3Like(object: {}): object is OrientedBox3Like {\n    const obb = object as Partial<OrientedBox3Like>;\n    return (\n        obb.position !== undefined &&\n        obb.xAxis !== undefined &&\n        obb.yAxis !== undefined &&\n        obb.zAxis !== undefined &&\n        obb.extents !== undefined\n    );\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"./Vector3Like\";\n\n/**\n * The interface {@link TransformLike} is used to represent transforms with\n * only translation and rotation.\n */\nexport interface TransformLike {\n    /**\n     * The position of this transform.\n     */\n    readonly position: Vector3Like;\n\n    /**\n     * The x-axis of this transform.\n     */\n    readonly xAxis: Vector3Like;\n\n    /**\n     * The y-axis of this transform.\n     */\n    readonly yAxis: Vector3Like;\n\n    /**\n     * The z-axis of this transform.\n     */\n    readonly zAxis: Vector3Like;\n}\n\n/**\n * Returns true if the given object implements the interface {@link TransformLike}.\n *\n * @param object - The object.\n */\nexport function isTransformLike(object: {}): object is TransformLike {\n    const transform = object as Partial<TransformLike>;\n    return (\n        transform.position !== undefined &&\n        transform.xAxis !== undefined &&\n        transform.yAxis !== undefined &&\n        transform.zAxis !== undefined\n    );\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Interface representing a Vector2.\n */\nexport interface Vector2Like {\n    /**\n     * The X position.\n     */\n    x: number;\n\n    /**\n     * The Y position.\n     */\n    y: number;\n}\n\nexport function isVector2Like(v: any): v is Vector2Like {\n    return v && typeof v.x === \"number\" && typeof v.y === \"number\";\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Interface representing a Vector3.\n */\nexport interface Vector3Like {\n    /**\n     * The X position.\n     */\n    x: number;\n\n    /**\n     * The Y position.\n     */\n    y: number;\n\n    /**\n     * The Z position.\n     */\n    z: number;\n}\n\nexport function isVector3Like(v: any): v is Vector3Like {\n    return v && typeof v.x === \"number\" && typeof v.y === \"number\" && typeof v.z === \"number\";\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport class EarthConstants {\n    /** The equatorial circumference in meters. */\n    static EQUATORIAL_CIRCUMFERENCE: number = 40075016.6855784861531768177614;\n\n    /** The equatorial radius in meters. */\n    static EQUATORIAL_RADIUS: number = 6378137.0;\n\n    /** The lowest point on earth (Dead Sea) in meters. */\n    static MIN_ELEVATION: number = -433.0;\n\n    /** The highest point on earth (Mt. Everest) in meters. */\n    static MAX_ELEVATION: number = 8848.0;\n\n    /** The highest artificial structure (building) on earth, Burj Khalifa tower in Dubai */\n    static MAX_BUILDING_HEIGHT: number = 828;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nclass EquirectangularProjection extends Projection {\n    static geoToWorldScale: number = 1.0 / (2.0 * Math.PI);\n    static worldToGeoScale: number = (2.0 * Math.PI) / 1.0;\n\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    /** @override */\n    getScaleFactor(_worldPoint: Vector3Like): number {\n        return 1;\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        result.min.x = 0.0;\n        result.min.y = 0.0;\n        result.min.z = minAltitude;\n        result.max.x = this.unitScale;\n        result.max.y = this.unitScale / 2;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        if (result === undefined) {\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n        result.x =\n            (THREE.MathUtils.degToRad(geoPoint.longitude) + Math.PI) *\n            EquirectangularProjection.geoToWorldScale *\n            this.unitScale;\n        result.y =\n            (THREE.MathUtils.degToRad(geoPoint.latitude) + Math.PI * 0.5) *\n            EquirectangularProjection.geoToWorldScale *\n            this.unitScale;\n        result.z = geoPoint.altitude ?? 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const geoPoint = GeoCoordinates.fromRadians(\n            (worldPoint.y * EquirectangularProjection.worldToGeoScale) / this.unitScale -\n                Math.PI * 0.5,\n            (worldPoint.x * EquirectangularProjection.worldToGeoScale) / this.unitScale - Math.PI,\n            worldPoint.z\n        );\n        return geoPoint;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const worldCenter = this.projectPoint(\n            new GeoCoordinates(geoBox.center.latitude, geoBox.center.longitude, 0)\n        );\n        const { latitudeSpanInRadians, longitudeSpanInRadians, altitudeSpan } = geoBox;\n        const sizeX = longitudeSpanInRadians * EquirectangularProjection.geoToWorldScale;\n        const sizeY = latitudeSpanInRadians * EquirectangularProjection.geoToWorldScale;\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        if (isBox3Like(result)) {\n            result.min.x = worldCenter.x - sizeX * 0.5 * this.unitScale;\n            result.min.y = worldCenter.y - sizeY * 0.5 * this.unitScale;\n            result.max.x = worldCenter.x + sizeX * 0.5 * this.unitScale;\n            result.max.y = worldCenter.y + sizeY * 0.5 * this.unitScale;\n            if (altitudeSpan !== undefined) {\n                result.min.z = worldCenter.z - altitudeSpan * 0.5;\n                result.max.z = worldCenter.z + altitudeSpan * 0.5;\n            } else {\n                result.min.z = 0;\n                result.max.z = 0;\n            }\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = worldCenter.x;\n            result.position.y = worldCenter.y;\n            result.position.z = worldCenter.z;\n            result.extents.x = sizeX * 0.5 * this.unitScale;\n            result.extents.y = sizeY * 0.5 * this.unitScale;\n            result.extents.z = Math.max(Number.EPSILON, (altitudeSpan ?? 0) * 0.5);\n        }\n        return result;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        return GeoBox.fromCoordinates(minGeo, maxGeo);\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = 1;\n        }\n        return normal;\n    }\n}\n\n/**\n * Equirectangular {@link Projection} used to convert geo coordinates to unit coordinates and vice\n * versa.\n */\nexport const normalizedEquirectangularProjection: Projection = new EquirectangularProjection(1);\n\n/**\n * Equirectangular {@link Projection} used to convert geo coordinates to world coordinates and vice\n * versa.\n */\nexport const equirectangularProjection: Projection = new EquirectangularProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nclass IdentityProjection extends Projection {\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    /** @override */\n    getScaleFactor(_worldPoint: Vector3Like): number {\n        return 1;\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        result.min.x = -Math.PI;\n        result.min.y = -Math.PI * 0.5;\n        result.min.z = minAltitude;\n        result.max.x = Math.PI;\n        result.max.y = Math.PI * 0.5;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        if (!result) {\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n        result.x = THREE.MathUtils.degToRad(geoPoint.longitude);\n        result.y = THREE.MathUtils.degToRad(geoPoint.latitude);\n        result.z = geoPoint.altitude ?? 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const geoPoint = GeoCoordinates.fromRadians(worldPoint.y, worldPoint.x, worldPoint.z);\n        return geoPoint;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        const min = this.projectPoint(\n            new GeoCoordinates(geoBox.south, geoBox.west, geoBox.minAltitude)\n        );\n        const max = this.projectPoint(\n            new GeoCoordinates(geoBox.north, geoBox.east, geoBox.maxAltitude)\n        );\n        if (isBox3Like(result)) {\n            result.min.x = min.x;\n            result.min.y = min.y;\n            result.min.z = min.z;\n            result.max.x = max.x;\n            result.max.y = max.y;\n            result.max.z = max.z;\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = (min.x + max.x) * 0.5;\n            result.position.y = (min.y + max.y) * 0.5;\n            result.position.z = (min.z + max.z) * 0.5;\n            result.extents.x = (max.x - min.x) * 0.5;\n            result.extents.y = (max.y - min.y) * 0.5;\n            result.extents.z = Math.max(Number.EPSILON, (max.z - min.z) * 0.5);\n        }\n        return result;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        return GeoBox.fromCoordinates(minGeo, maxGeo);\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = 1;\n        }\n        return normal;\n    }\n}\n\n/**\n * Identity {@link Projection} used to convert geo coordinates to unit coordinates and vice versa.\n */\nexport const identityProjection: Projection = new IdentityProjection(1);\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike, isGeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { TransformLike } from \"../math/TransformLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nclass MercatorProjection extends Projection {\n    protected static clamp(val: number, min: number, max: number): number {\n        return Math.min(Math.max(min, val), max);\n    }\n\n    protected static latitudeClamp(latitude: number): number {\n        return MercatorProjection.clamp(\n            latitude,\n            -MercatorConstants.MAXIMUM_LATITUDE,\n            MercatorConstants.MAXIMUM_LATITUDE\n        );\n    }\n\n    private static latitudeProject(latitude: number): number {\n        return Math.log(Math.tan(Math.PI * 0.25 + latitude * 0.5)) / Math.PI;\n    }\n\n    private static latitudeClampProject(latitude: number): number {\n        return MercatorProjection.latitudeProject(MercatorProjection.latitudeClamp(latitude));\n    }\n\n    private static unprojectLatitude(y: number): number {\n        return 2.0 * Math.atan(Math.exp(Math.PI * y)) - Math.PI * 0.5;\n    }\n\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    /** @override */\n    getScaleFactor(worldPoint: Vector3Like): number {\n        return Math.cosh(2 * Math.PI * (worldPoint.y / this.unitScale - 0.5));\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        result.min.x = 0;\n        result.min.y = 0;\n        result.min.z = minAltitude;\n        result.max.x = this.unitScale;\n        result.max.y = this.unitScale;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPointLike: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        let geoPoint: GeoCoordinates;\n\n        if (geoPointLike instanceof GeoCoordinates) {\n            geoPoint = geoPointLike;\n        } else {\n            geoPoint = new GeoCoordinates(\n                geoPointLike.latitude,\n                geoPointLike.longitude,\n                geoPointLike.altitude\n            );\n        }\n\n        if (!result) {\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n        result.x = ((geoPoint.longitude + 180) / 360) * this.unitScale;\n        result.y =\n            (MercatorProjection.latitudeClampProject(geoPoint.latitudeInRadians) * 0.5 + 0.5) *\n            this.unitScale;\n        result.z = geoPoint.altitude ?? 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const geoPoint = GeoCoordinates.fromRadians(\n            MercatorProjection.unprojectLatitude((worldPoint.y / this.unitScale - 0.5) * 2.0),\n            (worldPoint.x / this.unitScale) * 2 * Math.PI - Math.PI,\n            worldPoint.z\n        );\n        return geoPoint;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const worldCenter = this.projectPoint(geoBox.center);\n        const worldNorth =\n            (MercatorProjection.latitudeClampProject(geoBox.northEast.latitudeInRadians) * 0.5 +\n                0.5) *\n            this.unitScale;\n        const worldSouth =\n            (MercatorProjection.latitudeClampProject(geoBox.southWest.latitudeInRadians) * 0.5 +\n                0.5) *\n            this.unitScale;\n        const worldYCenter = (worldNorth + worldSouth) * 0.5;\n\n        worldCenter.y = worldYCenter;\n\n        const latitudeSpan = worldNorth - worldSouth;\n        const longitudeSpan = (geoBox.longitudeSpan / 360) * this.unitScale;\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        if (isBox3Like(result)) {\n            result.min.x = worldCenter.x - longitudeSpan * 0.5;\n            result.min.y = worldCenter.y - latitudeSpan * 0.5;\n            result.max.x = worldCenter.x + longitudeSpan * 0.5;\n            result.max.y = worldCenter.y + latitudeSpan * 0.5;\n            const altitudeSpan = geoBox.altitudeSpan;\n            if (altitudeSpan !== undefined) {\n                result.min.z = worldCenter.z - altitudeSpan * 0.5;\n                result.max.z = worldCenter.z + altitudeSpan * 0.5;\n            } else {\n                result.min.z = 0;\n                result.max.z = 0;\n            }\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = worldCenter.x;\n            result.position.y = worldCenter.y;\n            result.position.z = worldCenter.z;\n            result.extents.x = longitudeSpan * 0.5;\n            result.extents.y = latitudeSpan * 0.5;\n            result.extents.z = Math.max(Number.EPSILON, (geoBox.altitudeSpan ?? 0) * 0.5);\n        } else {\n            throw new Error(\"invalid bounding box\");\n        }\n        return result;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        const geoBox = GeoBox.fromCoordinates(minGeo, maxGeo);\n        return geoBox;\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = 1;\n        }\n        return normal;\n    }\n\n    /** @override */\n    reprojectPoint(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result?: Vector3Like\n    ): Vector3Like {\n        // this implementation of [[reprojectPoint]] supports both\n        // [[WebMercatorProjection]] and [[MercatorProjection]]. The only\n        // difference betweeen these two variants of WEB Mercator\n        // is in the orientation of the Y axis, so we just flip Y coordinates\n        // when reprojecting between them.\n        if (\n            sourceProjection !== this &&\n            (sourceProjection === webMercatorProjection || sourceProjection === mercatorProjection)\n        ) {\n            if (result === undefined) {\n                result = {} as Vector3Like;\n            }\n\n            result.x = worldPos.x;\n            result.y = this.unitScale - worldPos.y;\n            result.z = worldPos.z;\n\n            return result;\n        }\n\n        return super.reprojectPoint(sourceProjection, worldPos, result!);\n    }\n}\n\nclass WebMercatorProjection extends MercatorProjection {\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPointLike: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        let geoPoint: GeoCoordinates;\n\n        if (geoPointLike instanceof GeoCoordinates) {\n            geoPoint = geoPointLike;\n        } else {\n            geoPoint = new GeoCoordinates(\n                geoPointLike.latitude,\n                geoPointLike.longitude,\n                geoPointLike.altitude\n            );\n        }\n\n        /*\n         * The following tslint:disable is due to the fact that the [[WorldCoordinates]]\n         * might be a concrete class which is not available at runtime.\n         * Consider the following example:\n         *\n         *  const x: THREE.Vector3 = new THREE.Vector3(0,0,0);\n         *  const result = EquirectangularProjection.projectPoint<THREE.Vector3>(x);\n         *\n         * Note: type of `result` is Vector3Like and not as expected: THREE.Vector3!\n         */\n        if (!result) {\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n\n        result.x = ((geoPoint.longitude + 180) / 360) * this.unitScale;\n        const sy = Math.sin(MercatorProjection.latitudeClamp(geoPoint.latitudeInRadians));\n        result.y = (0.5 - Math.log((1 + sy) / (1 - sy)) / (4 * Math.PI)) * this.unitScale;\n        result.z = geoPoint.altitude ?? 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const x = worldPoint.x / this.unitScale - 0.5;\n        const y = 0.5 - worldPoint.y / this.unitScale;\n\n        const longitude = 360 * x;\n        const latitude = 90 - (360 * Math.atan(Math.exp(-y * 2 * Math.PI))) / Math.PI;\n\n        return new GeoCoordinates(latitude, longitude, worldPoint.z);\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const r = super.projectBox(geoBox, result);\n        if (isBox3Like(r)) {\n            // Invert the y axis for web mercator, this means that max => min & min => max\n            const maxY = r.max.y;\n            r.max.y = this.unitScale - r.min.y;\n            r.min.y = this.unitScale - maxY;\n        } else if (isOrientedBox3Like(r)) {\n            MathUtils.newVector3(1, 0, 0, r.xAxis);\n            MathUtils.newVector3(0, -1, 0, r.yAxis);\n            MathUtils.newVector3(0, 0, -1, r.zAxis);\n            r.position.y = this.unitScale - r.position.y;\n        }\n        return r;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        const geoBox = new GeoBox(\n            new GeoCoordinates(maxGeo.latitude, minGeo.longitude, minGeo.altitude),\n            new GeoCoordinates(minGeo.latitude, maxGeo.longitude, maxGeo.altitude)\n        );\n        return geoBox;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: -1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = -1;\n        }\n        return normal;\n    }\n\n    /** @override */\n    localTangentSpace(\n        point: GeoCoordinatesLike | Vector3Like,\n        result: TransformLike\n    ): TransformLike {\n        if (isGeoCoordinatesLike(point)) {\n            this.projectPoint(point, result.position);\n        } else {\n            MathUtils.copyVector3(point, result.position);\n        }\n        MathUtils.newVector3(1, 0, 0, result.xAxis);\n        MathUtils.newVector3(0, -1, 0, result.yAxis);\n        MathUtils.newVector3(0, 0, -1, result.zAxis);\n        return result;\n    }\n}\n\nexport class MercatorConstants {\n    // Math.atan(Math.sinh(Math.PI))\n    static readonly MAXIMUM_LATITUDE: number = 1.4844222297453323;\n}\n\n/**\n * Mercator {@link Projection} used to convert geo coordinates to world coordinates and vice versa.\n */\nexport const mercatorProjection: Projection = new MercatorProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n\n/**\n * Web Mercator {@link Projection} used to convert geo coordinates to world coordinates\n * and vice versa.\n */\nexport const webMercatorProjection: Projection = new WebMercatorProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike, isGeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { TransformLike } from \"../math/TransformLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\n\n/**\n * The type of projection.\n */\nexport enum ProjectionType {\n    /**\n     * A type of [Projection] with zero curvature.\n     */\n    Planar,\n\n    /**\n     * A spherical [Projection].\n     */\n    Spherical\n}\n\n/**\n * `Projection` is used to convert positions from geo coordinates to world coordinates and vice\n * versa.\n */\nexport abstract class Projection {\n    /**\n     * The type of this [Projection].\n     */\n    abstract get type(): ProjectionType;\n\n    /**\n     * Constructs the Projection\n     *\n     * @param unitScale - How to transform the projected coordinates to world units.\n     */\n    constructor(readonly unitScale: number) {\n        //Prevent empty constructor error.\n    }\n\n    /**\n     * Returns the world extents in world coordinates.\n     *\n     * @param minElevation - The minimum elevation in meters.\n     * @param maxElevation - The maximum elevation in meters.\n     * @param result - The optional object that will be used to create the resulting bounding box.\n     */\n    abstract worldExtent<Bounds extends Box3Like>(\n        minElevation: number,\n        maxElevation: number,\n        result?: Bounds\n    ): Bounds;\n\n    /**\n     * Projects a point from geo coordinates (latitude, longitude, altitude) to world coordinates\n     * (x,y,z).\n     *\n     * Example:\n     * ```typescript\n     * const worldPos = new THREE.Vector3();\n     * projection.projectPoint(geoPos, worldPos);\n     * ```\n     *\n     * @param geoPoint - The position in geo coordinates.\n     * @param result - The optional object used to store the resulting world position, result must\n     * implement {@link Vector3Like}.\n     */\n    abstract projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates;\n\n    /**\n     * Gets the {@link TransformLike} of the local tangent space at the given point.\n     *\n     * @param point - The geo / world coordinates.\n     * @param result - The {@link TransformLike}.\n     */\n    localTangentSpace(\n        point: GeoCoordinatesLike | Vector3Like,\n        result: TransformLike\n    ): TransformLike {\n        if (isGeoCoordinatesLike(point)) {\n            this.projectPoint(point, result.position);\n        } else {\n            MathUtils.copyVector3(point, result.position);\n        }\n        MathUtils.newVector3(1, 0, 0, result.xAxis);\n        MathUtils.newVector3(0, 1, 0, result.yAxis);\n        MathUtils.newVector3(0, 0, 1, result.zAxis);\n        return result;\n    }\n\n    /**\n     * Returns the geo coordinates (latitude, longitude, altitude) from the given world position\n     * (x,y,z).\n     *\n     * Example:\n     * ```typescript\n     * const geoPos = projection.unprojectPoint(worldPos);\n     * console.log(geoPos.latitude, geoPos.longitude, geoPos.altitude);\n     * ```\n     *\n     * @param worldPoint - The position in world coordinates.\n     */\n    abstract unprojectPoint(worldPoint: Vector3Like): GeoCoordinates;\n\n    /**\n     * Returns the altitude at the given world position (x,y,z) in meters.\n     *\n     * @param worldPoint - The position in world coordinates.\n     */\n    abstract unprojectAltitude(worldPoint: Vector3Like): number;\n\n    /**\n     * Projects bounds in geo coordinates to a bounding box in world coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const bounds = projection.projectBox(geoBox);\n     * console.log(bounds.min, bounds.max);\n     * ```\n     *\n     * @param geoBox - The bounding box in geo coordinates.\n     */\n    abstract projectBox(geoBox: GeoBox): Box3Like;\n\n    /**\n     * Projects bounds in geo coordinates to a bounding box in world coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const bounds = projection.projectBox(geoBox, new THREE.Box3());\n     * console.log(bounds.min, bounds.max);\n     * ```\n     *\n     * @param geoBox - The bounding box in geo coordinates.\n     * @param result - The resulting {@link OrientedBox3Like}.\n     */\n    abstract projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result: WorldBoundingBox\n    ): WorldBoundingBox;\n\n    /**\n     * Converts a bounding box in world coordinates to a bounding box in geo coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const geoPos = projection.unprojectPoint(worldPos);\n     * console.log(geoPos.latitude, geoPos.longitude, geoPos.altitude);\n     * ```\n     *\n     * @param worldBox - The bounding box in world coordinates.\n     */\n    abstract unprojectBox(worldBox: Box3Like): GeoBox;\n\n    /**\n     * Returns the scaling factor that must be used to convert the units used by `worldPoint` to\n     * meters.\n     *\n     * @param worldPoint - The position in world coordinates.\n     */\n    abstract getScaleFactor(worldPoint: Vector3Like): number;\n\n    /**\n     * Returns the surface normal at the given world position.\n     *\n     * @param worldPoint - The position in world coordinates.\n     */\n    abstract surfaceNormal(worldPoint: Vector3Like): Vector3Like;\n\n    /**\n     * Returns the surface normal at the given world position.\n     *\n     * @param worldPoint - The position in world coordinates.\n     * @returns The resulting normal vector.\n     */\n    abstract surfaceNormal<Normal extends Vector3Like>(\n        worldPoint: Vector3Like,\n        result: Normal\n    ): Normal;\n\n    /**\n     * Returns the signed distance between the given coordinates and\n     * the closest point on the surface.\n     *\n     * @param worldPoint - The position in world coordinates.\n     */\n    abstract groundDistance(worldPoint: Vector3Like): number;\n\n    /**\n     * Scales the given world coordinates to the surface.\n     *\n     * @param worldPoint - The position in world coordinates.\n     */\n    abstract scalePointToSurface(worldPoint: Vector3Like): Vector3Like;\n\n    /**\n     * Reproject a world position from the given source {@link Projection}.\n     *\n     * @param sourceProjection - The source projection.\n     * @param worldPos - A valid world position for the given source projection.\n     * @returns The world position reprojected using this {@link Projection}.\n     */\n    reprojectPoint(sourceProjection: Projection, worldPos: Vector3Like): Vector3Like;\n\n    /**\n     * Reproject a world position from the given source {@link Projection}.\n     *\n     * @param sourceProjection - The source projection.\n     * @param worldPos - A valid position in the world space defined by the source projection.\n     * @param result - The resulting position reprojected using this {@link Projection}.\n     */\n    reprojectPoint<WorldCoordinates extends Vector3Like>(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result: WorldCoordinates\n    ): WorldCoordinates;\n\n    /**\n     * Reproject a world position from the given source {@link Projection}.\n     * Implementations should be aware of worldPos and result may be one object\n     *\n     * @param sourceProjection - The source projection.\n     * @param worldPos - A valid position in the world space defined by the source projection.\n     * @param result - The resulting position reprojected using this {@link Projection}.\n     * @hidden\n     */\n    reprojectPoint(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result?: Vector3Like\n    ): Vector3Like {\n        if (sourceProjection === this) {\n            if (result === undefined) {\n                return { x: worldPos.x, y: worldPos.y, z: worldPos.z };\n            }\n            result.x = worldPos.x;\n            result.y = worldPos.y;\n            result.z = worldPos.z;\n            return result;\n        }\n        return this.projectPoint(sourceProjection.unprojectPoint(worldPos), result);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike, isGeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { TransformLike } from \"../math/TransformLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { mercatorProjection, webMercatorProjection } from \"./MercatorProjection\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\n/**\n * Transforms the given vector using the provided basis.\n */\nfunction apply(\n    xAxis: Vector3Like,\n    yAxis: Vector3Like,\n    zAxis: Vector3Like,\n    v: Vector3Like\n): Vector3Like {\n    const x = xAxis.x * v.x + yAxis.x * v.y + zAxis.x * v.z;\n    const y = xAxis.y * v.x + yAxis.y * v.y + zAxis.y * v.z;\n    const z = xAxis.z * v.x + yAxis.z * v.y + zAxis.z * v.z;\n    v.x = x;\n    v.y = y;\n    v.z = z;\n    return v;\n}\n\n/**\n * Returns the quadrants for the given longitude. The quadrant is defined as:\n *  - quadrant(+Math.PI * -1.0) = 0\n *  - quadrant(+Math.PI * -0.5) = 1\n *  - quadrant(+Math.PI *  0.0) = 2\n *  - quadrant(+Math.PI *  0.5) = 3\n *  - quadrant(+Math.PI *  1.0) = 4\n *\n * @param longitude - The longitude in radians.\n */\nfunction getLongitudeQuadrant(longitude: number) {\n    const oneOverPI = 1 / Math.PI;\n    const quadrantIndex = Math.floor(2 * (longitude * oneOverPI + 1));\n    return THREE.MathUtils.clamp(quadrantIndex, 0, 4);\n}\n\nfunction lengthOfVector3(worldPoint: Vector3Like): number {\n    const d = Math.sqrt(\n        worldPoint.x * worldPoint.x + worldPoint.y * worldPoint.y + worldPoint.z * worldPoint.z\n    );\n    return d;\n}\n\n/**\n * Creates a Box3 enclosing the geobox.\n *\n * @param geoBox - Ghe given geobox\n * @param worldBox - The resulting axis aligned bounding box.\n */\nfunction makeBox3<Bounds extends Box3Like>(\n    geoBox: GeoBox,\n    worldBox: Bounds,\n    unitScale: number\n): Bounds {\n    const halfEquatorialRadius = (unitScale + (geoBox.maxAltitude ?? 0)) * 0.5;\n\n    const minLongitude = THREE.MathUtils.degToRad(geoBox.west);\n    const maxLongitude = THREE.MathUtils.degToRad(geoBox.east);\n\n    const minLongitudeQuadrant = getLongitudeQuadrant(minLongitude);\n    const maxLongitudeQuadrant = getLongitudeQuadrant(maxLongitude);\n\n    let xMin = Math.cos(minLongitude);\n    let xMax = xMin;\n    let yMin = Math.sin(minLongitude);\n    let yMax = yMin;\n\n    for (\n        let quadrantIndex = minLongitudeQuadrant + 1;\n        quadrantIndex <= maxLongitudeQuadrant;\n        quadrantIndex++\n    ) {\n        const x = ((quadrantIndex + 1) & 1) * ((quadrantIndex & 2) - 1);\n        xMin = Math.min(x, xMin);\n        xMax = Math.max(x, xMax);\n\n        const y = (quadrantIndex & 1) * ((quadrantIndex & 2) - 1);\n        yMin = Math.min(y, yMin);\n        yMax = Math.max(y, yMax);\n    }\n\n    const cosMaxLongitude = Math.cos(maxLongitude);\n    xMin = Math.min(cosMaxLongitude, xMin);\n    xMax = Math.max(cosMaxLongitude, xMax);\n\n    const sinMaxLongitude = Math.sin(maxLongitude);\n    yMin = Math.min(sinMaxLongitude, yMin);\n    yMax = Math.max(sinMaxLongitude, yMax);\n\n    const xCenter = (xMax + xMin) * halfEquatorialRadius;\n    const xExtent = (xMax - xMin) * halfEquatorialRadius;\n\n    const yCenter = (yMax + yMin) * halfEquatorialRadius;\n    const yExtent = (yMax - yMin) * halfEquatorialRadius;\n\n    // Calculate Z boundaries.\n    const minLatitude = THREE.MathUtils.degToRad(geoBox.south);\n    const maxLatutide = THREE.MathUtils.degToRad(geoBox.north);\n\n    const zMax = Math.sin(maxLatutide);\n    const zMin = Math.sin(minLatitude);\n\n    const zCenter = (zMax + zMin) * halfEquatorialRadius;\n    const zExtent = (zMax - zMin) * halfEquatorialRadius;\n\n    worldBox.min.x = xCenter - xExtent;\n    worldBox.min.y = yCenter - yExtent;\n    worldBox.min.z = zCenter - zExtent;\n    worldBox.max.x = xCenter + xExtent;\n    worldBox.max.y = yCenter + yExtent;\n    worldBox.max.z = zCenter + zExtent;\n\n    return worldBox;\n}\n\n/**\n * Computes the spherical projection of the given geo coordinates.\n *\n * @param geoPoint - The geo coordinates.\n * @param worldpoint - The resulting world coordinates.\n */\nfunction project<WorldCoordinates extends Vector3Like>(\n    geoPoint: GeoCoordinatesLike,\n    worldpoint: WorldCoordinates,\n    unitScale: number\n): typeof worldpoint {\n    const radius = unitScale + (geoPoint.altitude ?? 0);\n    const latitude = THREE.MathUtils.degToRad(geoPoint.latitude);\n    const longitude = THREE.MathUtils.degToRad(geoPoint.longitude);\n    const cosLatitude = Math.cos(latitude);\n    worldpoint.x = radius * cosLatitude * Math.cos(longitude);\n    worldpoint.y = radius * cosLatitude * Math.sin(longitude);\n    worldpoint.z = radius * Math.sin(latitude);\n    return worldpoint;\n}\n\nclass SphereProjection extends Projection {\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Spherical;\n\n    /** @override */\n    worldExtent<Bounds extends Box3Like>(\n        _minElevation: number,\n        maxElevation: number,\n        result: Bounds = (new THREE.Box3() as Box3Like) as Bounds\n    ): Bounds {\n        const radius = this.unitScale + maxElevation;\n        result.min.x = -radius;\n        result.min.y = -radius;\n        result.min.z = -radius;\n        result.max.x = radius;\n        result.max.y = radius;\n        result.max.z = radius;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result: WorldCoordinates = MathUtils.newVector3(0, 0, 0) as WorldCoordinates\n    ): WorldCoordinates {\n        return project(geoPoint, result, this.unitScale);\n    }\n\n    /** @override */\n    unprojectPoint(point: Vector3Like): GeoCoordinates {\n        const parallelRadiusSq = point.x * point.x + point.y * point.y;\n        const parallelRadius = Math.sqrt(parallelRadiusSq);\n        const v = point.z / parallelRadius;\n\n        if (isNaN(v)) {\n            return GeoCoordinates.fromRadians(0, 0, -this.unitScale);\n        }\n\n        const radius = Math.sqrt(parallelRadiusSq + point.z * point.z);\n\n        return GeoCoordinates.fromRadians(\n            Math.atan(v),\n            Math.atan2(point.y, point.x),\n            radius - this.unitScale\n        );\n    }\n\n    /** @override */\n    unprojectAltitude(point: Vector3Like): number {\n        const parallelRadiusSq = point.x * point.x + point.y * point.y + point.z * point.z;\n        return Math.sqrt(parallelRadiusSq) - EarthConstants.EQUATORIAL_RADIUS;\n    }\n\n    /** @override */\n    projectBox<Bounds extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result: Bounds = (new THREE.Box3() as Box3Like) as Bounds\n    ): Bounds {\n        if (isBox3Like(result)) {\n            return makeBox3(geoBox, result, this.unitScale);\n        } else if (isOrientedBox3Like(result)) {\n            if (geoBox.longitudeSpan >= 90) {\n                const bounds = makeBox3(geoBox, new THREE.Box3() as Box3Like, this.unitScale);\n                MathUtils.newVector3(1, 0, 0, result.xAxis);\n                MathUtils.newVector3(0, 1, 0, result.yAxis);\n                MathUtils.newVector3(0, 0, 1, result.zAxis);\n                result.position.x = (bounds.max.x + bounds.min.x) * 0.5;\n                result.position.y = (bounds.max.y + bounds.min.y) * 0.5;\n                result.position.z = (bounds.max.z + bounds.min.z) * 0.5;\n                result.extents.x = (bounds.max.x - bounds.min.x) * 0.5;\n                result.extents.y = (bounds.max.y - bounds.min.y) * 0.5;\n                result.extents.z = (bounds.max.z - bounds.min.z) * 0.5;\n                return result;\n            }\n\n            const { south, west, north, east, center: mid } = geoBox;\n            const midX = mid.longitude;\n            const midY = mid.latitude;\n            const cosSouth = Math.cos(THREE.MathUtils.degToRad(south));\n            const sinSouth = Math.sin(THREE.MathUtils.degToRad(south));\n            const cosWest = Math.cos(THREE.MathUtils.degToRad(west));\n            const sinWest = Math.sin(THREE.MathUtils.degToRad(west));\n            const cosNorth = Math.cos(THREE.MathUtils.degToRad(north));\n            const sinNorth = Math.sin(THREE.MathUtils.degToRad(north));\n            const cosEast = Math.cos(THREE.MathUtils.degToRad(east));\n            const sinEast = Math.sin(THREE.MathUtils.degToRad(east));\n            const cosMidX = Math.cos(THREE.MathUtils.degToRad(midX));\n            const sinMidX = Math.sin(THREE.MathUtils.degToRad(midX));\n            const cosMidY = Math.cos(THREE.MathUtils.degToRad(midY));\n            const sinMidY = Math.sin(THREE.MathUtils.degToRad(midY));\n\n            // Build the orientation of the OBB using the normal vector and its partial derivates.\n\n            // the sperical coordinates of the mid point of the geobox.\n            MathUtils.newVector3(cosMidX * cosMidY, sinMidX * cosMidY, sinMidY, result.zAxis);\n\n            // the partial derivates of the normal vector.\n            MathUtils.newVector3(-sinMidX, cosMidX, 0, result.xAxis);\n            MathUtils.newVector3(-cosMidX * sinMidY, -sinMidX * sinMidY, cosMidY, result.yAxis);\n\n            let width: number;\n            let minY: number;\n            let maxY: number;\n\n            if (south >= 0) {\n                // abs(dot(southWest - southEast, xAxis))\n                width = Math.abs(\n                    cosSouth * (cosMidX * (sinWest - sinEast) + sinMidX * (cosEast - cosWest))\n                );\n\n                // dot(south, yAxis)\n                minY = cosMidY * sinSouth - sinMidY * cosSouth;\n\n                // dot(northEast, zAxis)\n                maxY =\n                    cosMidY * sinNorth -\n                    sinMidY * cosNorth * (cosMidX * cosEast + sinMidX * sinEast);\n            } else {\n                if (north <= 0) {\n                    // abs(dot(northWest - northEast, xAxis))\n                    width = Math.abs(\n                        cosNorth * (cosMidX * (sinWest - sinEast) + sinMidX * (cosEast - cosWest))\n                    );\n\n                    // dot(north, yAxis)\n                    maxY = cosMidY * sinNorth - sinMidY * cosNorth;\n                } else {\n                    // abs(dot(west - east, xAxis))\n                    width = Math.abs(cosMidX * (sinWest - sinEast) + sinMidX * (cosEast - cosWest));\n\n                    // dot(northEast, yAxis)\n                    maxY =\n                        cosMidY * sinNorth -\n                        sinMidY * cosNorth * (sinMidX * sinEast + cosMidX * cosEast);\n                }\n\n                // dot(southEast, yAxis)\n                minY =\n                    cosMidY * sinSouth -\n                    sinMidY * cosSouth * (cosMidX * cosEast + sinMidX * sinEast);\n            }\n\n            const rMax = (this.unitScale + (geoBox.maxAltitude ?? 0)) * 0.5;\n            const rMin = (this.unitScale + (geoBox.minAltitude ?? 0)) * 0.5;\n\n            // min(dot(southEast, zAxis), dot(northEast, zAxis))\n\n            const d = cosMidY * (cosMidX * cosEast + sinMidX * sinEast);\n\n            const minZ = Math.min(\n                cosNorth * d + sinNorth * sinMidY,\n                cosSouth * d + sinSouth * sinMidY\n            );\n\n            MathUtils.newVector3(\n                width * rMax,\n                (maxY - minY) * rMax,\n                rMax - minZ * rMin,\n                result.extents\n            );\n\n            MathUtils.newVector3(0, (minY + maxY) * rMax, rMax + rMax, result.position);\n\n            apply(result.xAxis, result.yAxis, result.zAxis, result.position);\n\n            result.position.x = result.position.x - result.zAxis.x * result.extents.z;\n            result.position.y = result.position.y - result.zAxis.y * result.extents.z;\n            result.position.z = result.position.z - result.zAxis.z * result.extents.z;\n\n            return result;\n        }\n\n        throw new Error(\"Invalid bounding box\");\n    }\n\n    /** @override */\n    unprojectBox(_worldBox: Box3Like): GeoBox {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    /** @override */\n    getScaleFactor(_worldPoint: Vector3Like): number {\n        return 1;\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return lengthOfVector3(worldPoint) - this.unitScale;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        const scale = this.unitScale / (lengthOfVector3(worldPoint) || 1);\n        worldPoint.x *= scale;\n        worldPoint.y *= scale;\n        worldPoint.z *= scale;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 0 };\n        }\n        const scale = 1 / (lengthOfVector3(worldPoint) || 1);\n        normal.x = worldPoint.x * scale;\n        normal.y = worldPoint.y * scale;\n        normal.z = worldPoint.z * scale;\n        return normal;\n    }\n\n    /** @override */\n    reprojectPoint(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result?: Vector3Like\n    ): Vector3Like {\n        if (sourceProjection === mercatorProjection || sourceProjection === webMercatorProjection) {\n            const { x, y, z } = worldPos;\n            const r = this.unitScale;\n            const mx = x / r - Math.PI;\n            const my = y / r - Math.PI;\n            const w = Math.exp(my);\n            const d = w * w;\n            const gx = (2 * w) / (d + 1);\n            const gy = (d - 1) / (d + 1);\n            const scale = r + z;\n\n            if (result === undefined) {\n                result = {} as Vector3Like;\n            }\n\n            result.x = Math.cos(mx) * gx * scale;\n            result.y = Math.sin(mx) * gx * scale;\n            result.z = gy * scale;\n\n            if (sourceProjection === webMercatorProjection) {\n                result.z = -result.z;\n            }\n\n            return result;\n        }\n\n        return super.reprojectPoint(sourceProjection, worldPos, result!);\n    }\n\n    /** @override */\n    localTangentSpace(\n        point: GeoCoordinatesLike | Vector3Like,\n        result: TransformLike\n    ): TransformLike {\n        let geoPoint: GeoCoordinatesLike;\n        if (isGeoCoordinatesLike(point)) {\n            this.projectPoint(point, result.position);\n            geoPoint = point;\n        } else {\n            MathUtils.copyVector3(point, result.position);\n            geoPoint = this.unprojectPoint(point);\n        }\n\n        const latitude = THREE.MathUtils.degToRad(geoPoint.latitude);\n        const longitude = THREE.MathUtils.degToRad(geoPoint.longitude);\n\n        const cosLongitude = Math.cos(longitude);\n        const sinLongitude = Math.sin(longitude);\n        const cosLatitude = Math.cos(latitude);\n        const sinLatitude = Math.sin(latitude);\n\n        MathUtils.newVector3(\n            cosLongitude * cosLatitude,\n            sinLongitude * cosLatitude,\n            sinLatitude,\n            result.zAxis\n        );\n\n        MathUtils.newVector3(-sinLongitude, cosLongitude, 0, result.xAxis);\n\n        MathUtils.newVector3(\n            -cosLongitude * sinLatitude,\n            -sinLongitude * sinLatitude,\n            cosLatitude,\n            result.yAxis\n        );\n        return result;\n    }\n}\n\nexport const sphereProjection: Projection = new SphereProjection(EarthConstants.EQUATORIAL_RADIUS);\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\n/**\n *\n * https://en.wikipedia.org/wiki/Transverse_Mercator_projection\n * http://mathworld.wolfram.com/MercatorProjection.html\n *\n */\nclass TransverseMercatorProjection extends Projection {\n    /**\n     * Like in regular Mercator projection, there are two points on sphere\n     * with radius about 5 degrees, that is out of projected space.\n     *\n     *\n     * in regular Mercator these points are:\n     *     (90, any), (-90, any)\n     *\n     * and in transverse Mercator:\n     *     (0, 90), (0, -90)\n     *\n     * So, in transverse we need to compute distnce to poles, and clamp if\n     * radius is exceeded\n     */\n    static clampGeoPoint(geoPoint: GeoCoordinatesLike, _unitScale: number) {\n        const lat = geoPoint.latitude;\n        const lon = geoPoint.longitude;\n\n        const r = TransverseMercatorUtils.POLE_RADIUS;\n        const rsq = TransverseMercatorUtils.POLE_RADIUS_SQ;\n\n        const nearestQuarter = Math.round(lon / 90);\n        const deltaLon = nearestQuarter * 90 - lon;\n        if (nearestQuarter % 2 === 0 || Math.abs(deltaLon) > r) {\n            return geoPoint;\n        }\n\n        const deltaLat = lat - 0;\n        const distanceToPoleSq = deltaLon * deltaLon + deltaLat * deltaLat;\n        if (distanceToPoleSq < rsq) {\n            const distanceToPole = Math.sqrt(distanceToPoleSq);\n            const scale = (r - distanceToPole) / distanceToPole;\n            // const quarter = ((nearestQuarter % 4) + 4) % 4;\n            // const dir = quarter === 1 ? -1 : quarter === 3 ? 1 : 0;\n            const dir = 1;\n            const offsetLon = deltaLon === 0 && deltaLat === 0 ? r * dir : deltaLon;\n            return new GeoCoordinates(lat + deltaLat * scale, lon + offsetLon * scale);\n        }\n\n        return geoPoint;\n    }\n\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    private readonly m_phi0: number = 0;\n    private readonly m_lambda0: number = 0;\n\n    constructor(readonly unitScale: number) {\n        super(unitScale);\n    }\n\n    /** @override */\n    getScaleFactor(worldPoint: Vector3Like): number {\n        return Math.cosh((worldPoint.x / this.unitScale - 0.5) * 2 * Math.PI);\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        result.min.x = 0;\n        result.min.y = 0;\n        result.min.z = minAltitude;\n        result.max.x = this.unitScale;\n        result.max.y = this.unitScale;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        if (!result) {\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n\n        const clamped = TransverseMercatorProjection.clampGeoPoint(geoPoint, this.unitScale);\n        const normalLon = clamped.longitude / 360 + 0.5;\n        const offset = normalLon === 1 ? 0 : Math.floor(normalLon);\n        const phi = THREE.MathUtils.degToRad(clamped.latitude);\n        const lambda = THREE.MathUtils.degToRad(clamped.longitude - offset * 360) - this.m_lambda0;\n\n        const B = Math.cos(phi) * Math.sin(lambda);\n        // result.x = 1/2 * Math.log((1 + B) / (1 - B));\n        result.x = Math.atanh(B);\n        result.y = Math.atan2(Math.tan(phi), Math.cos(lambda)) - this.m_phi0;\n\n        const outScale = 0.5 / Math.PI;\n        result.x =\n            this.unitScale * (THREE.MathUtils.clamp(result.x * outScale + 0.5, 0, 1) + offset);\n        result.y = this.unitScale * THREE.MathUtils.clamp(result.y * outScale + 0.5, 0, 1);\n\n        result.z = geoPoint.altitude ?? 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const tau = Math.PI * 2;\n        const nx = worldPoint.x / this.unitScale;\n        const ny = worldPoint.y / this.unitScale;\n        const offset = nx === 1 ? 0 : Math.floor(nx);\n        const x = tau * (nx - 0.5 - offset);\n        const y = tau * (ny - 0.5);\n        const z = worldPoint.z || 0;\n\n        const D = y + this.m_phi0;\n\n        const phi = Math.asin(Math.sin(D) / Math.cosh(x));\n        const lambda = this.m_lambda0 + Math.atan2(Math.sinh(x), Math.cos(D)) + offset * tau;\n\n        const geoPoint = GeoCoordinates.fromRadians(phi, lambda, z);\n        return geoPoint;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const { north, south, east, west } = geoBox;\n\n        const pointsToCheck = [\n            geoBox.center,\n            geoBox.northEast,\n            geoBox.southWest,\n            new GeoCoordinates(south, east),\n            new GeoCoordinates(north, west)\n        ];\n\n        const E = TransverseMercatorUtils.POLE_EDGE_DEG;\n\n        const containsWestCut = west < -90 && east > -90;\n        const containsEastCut = west < 90 && east > 90;\n        const containsCenterX = west < 0 && east > 0;\n        const containsCenterY = west < E && east > -E && north > 0 && south < 0;\n\n        if (containsWestCut) {\n            pointsToCheck.push(new GeoCoordinates(north, -90));\n            pointsToCheck.push(new GeoCoordinates(south, -90));\n        }\n\n        if (containsEastCut) {\n            pointsToCheck.push(new GeoCoordinates(north, 90));\n            pointsToCheck.push(new GeoCoordinates(south, 90));\n        }\n\n        if (containsCenterX) {\n            pointsToCheck.push(new GeoCoordinates(north, 0));\n            pointsToCheck.push(new GeoCoordinates(south, 0));\n        }\n\n        if (containsCenterY) {\n            pointsToCheck.push(new GeoCoordinates(0, west));\n            pointsToCheck.push(new GeoCoordinates(0, east));\n        }\n\n        TransverseMercatorUtils.alignLatitude(pointsToCheck, pointsToCheck[0]);\n\n        const projected = pointsToCheck.map(p => this.projectPoint(p));\n        const vx = projected.map(p => p.x);\n        const vy = projected.map(p => p.y);\n        const vz = projected.map(p => p.z);\n\n        const minX = Math.min(...vx);\n        const minY = Math.min(...vy);\n        const minZ = Math.min(...vz);\n        const maxX = Math.max(...vx);\n        const maxY = Math.max(...vy);\n        const maxZ = Math.max(...vz);\n\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        if (isBox3Like(result)) {\n            result.min.x = minX;\n            result.min.y = minY;\n            result.min.z = minZ;\n            result.max.x = maxX;\n            result.max.y = maxY;\n            result.max.z = maxZ;\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = (minX + maxX) / 2;\n            result.position.y = (minY + maxY) / 2;\n            result.position.z = (minZ + maxZ) / 2;\n            result.extents.x = (maxX - minX) / 2;\n            result.extents.y = (maxY - minY) / 2;\n            result.extents.z = (maxZ - minZ) / 2;\n        } else {\n            throw new Error(\"invalid bounding box\");\n        }\n        return result;\n    }\n\n    /**\n     * There are 8 sub-regions on entire projection space\n     * where both longitude and latitude preserve direction.\n     * If bounding box hits more than one region, it should be splitted\n     * into sub-boxes by regions, (un)projected and then united again.\n     *\n     *\n     * directions in form [latitude / longitude]:\n     *    1 ┌─────────|─────────┐\n     *      │ dr / dl | dl / ul │\n     * 0.75 ----------|----------\n     *      │ ur / dr | ul / ur │\n     * 0.5  ----------|----------\n     *      │ ul / ur | ur / dr │\n     * 0.25 ----------|----------\n     *      │ dl / ul | dr / dl │\n     *      └─────────|─────────┘\n     *     0         0.5        1\n     *     @override\n     */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const s = this.unitScale;\n\n        const min = worldBox.min;\n        const max = worldBox.max;\n        const pointsToCheck = [\n            { x: (min.x + max.x) / 2, y: (min.y + max.y) / 2, z: 0 },\n            min,\n            max,\n            { x: min.x, y: max.y, z: 0 },\n            { x: max.x, y: min.y, z: 0 }\n        ];\n\n        const center = 0.5 * s;\n        const lowerQ = 0.25 * s;\n        const upperQ = 0.75 * s;\n\n        const containsCenterX = min.x < center && max.x > center;\n        const containsCenterY = min.y < center && max.y > center;\n        const containsLowerQY = min.y < lowerQ && max.y > lowerQ;\n        const containsUpperQY = min.y < upperQ && max.y > upperQ;\n\n        if (containsCenterY) {\n            pointsToCheck.push({ x: min.x, y: center, z: 0 });\n            pointsToCheck.push({ x: max.x, y: center, z: 0 });\n\n            if (containsCenterX) {\n                pointsToCheck.push({ x: center, y: center, z: 0 });\n            }\n        }\n        if (containsLowerQY) {\n            pointsToCheck.push({ x: min.x, y: lowerQ, z: 0 });\n            pointsToCheck.push({ x: max.x, y: lowerQ, z: 0 });\n\n            if (containsCenterX) {\n                pointsToCheck.push({ x: center, y: lowerQ, z: 0 });\n            }\n        }\n        if (containsUpperQY) {\n            pointsToCheck.push({ x: min.x, y: upperQ, z: 0 });\n            pointsToCheck.push({ x: max.x, y: upperQ, z: 0 });\n\n            if (containsCenterX) {\n                pointsToCheck.push({ x: center, y: upperQ, z: 0 });\n            }\n        }\n\n        const geoPoints = pointsToCheck.map(p => this.unprojectPoint(p));\n        TransverseMercatorUtils.alignLongitude(geoPoints, geoPoints[0]);\n\n        const latitudes = geoPoints.map(g => g.latitude);\n        const longitudes = geoPoints.filter(g => Math.abs(g.latitude) < 90).map(g => g.longitude);\n        const altitudes = geoPoints.map(g => g.altitude ?? 0);\n\n        const minGeo = new GeoCoordinates(\n            Math.min(...latitudes),\n            Math.min(...longitudes),\n            Math.min(...altitudes)\n        );\n\n        const maxGeo = new GeoCoordinates(\n            Math.max(...latitudes),\n            Math.max(...longitudes),\n            Math.max(...altitudes)\n        );\n\n        const geoBox = GeoBox.fromCoordinates(minGeo, maxGeo);\n        return geoBox;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: -1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = -1;\n        }\n        return normal;\n    }\n}\n\nexport class TransverseMercatorUtils {\n    static POLE_EDGE: number = 1.4844222297453323;\n    static POLE_EDGE_DEG: number = THREE.MathUtils.radToDeg(TransverseMercatorUtils.POLE_EDGE);\n    static POLE_RADIUS: number = 90 - TransverseMercatorUtils.POLE_EDGE_DEG;\n    static POLE_RADIUS_SQ: number = Math.pow(TransverseMercatorUtils.POLE_RADIUS, 2);\n\n    /**\n     * There are two regions on projected space that have same geo coordinates,\n     * it's the entire lines   { x: [0..1], y: 0 } and { x: [0..1], y: 1 }\n     * they both have geo coordinates of   (0, [-90..+90])\n     * and should be aligned somehow to fall into first or second region\n     * to make proper bounding boxes, tile bounds, etc.\n     */\n    static alignLatitude(points: GeoCoordinatesLike[], referencePoint: GeoCoordinatesLike): void {\n        const EPSILON = 1e-9;\n\n        for (const point of points) {\n            if (point.latitude === 0) {\n                point.latitude = referencePoint.latitude * EPSILON;\n            }\n        }\n    }\n\n    /**\n     * There are two regions on projected plane,\n     * { x: 0.5, y: [0..0.25] }    and    { x: 0.5, y: [0.75..1] }\n     * that represent longitude edge where -180 and +180 met.\n     * Points falling in this regions should be aligned to get proper boxes etc.\n     */\n    static alignLongitude(points: GeoCoordinatesLike[], referencePoint: GeoCoordinatesLike): void {\n        const bad = referencePoint.longitude < 0 ? 180 : -180;\n        const good = referencePoint.longitude < 0 ? -180 : 180;\n\n        for (const point of points) {\n            if (point.longitude === bad) {\n                point.longitude = good;\n            }\n        }\n    }\n}\n\n/**\n * Transverse Mercator {@link Projection} used to convert geo coordinates to world coordinates\n * and vice versa.\n */\nexport const transverseMercatorProjection: Projection = new TransverseMercatorProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { Box3Like } from \"../math/Box3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { Projection } from \"../projection/Projection\";\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\nimport { TileKey } from \"./TileKey\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * `FlatTileBoundingBoxGenerator` generates bounding boxes in world and geo coordinates for a given\n * TilingScheme.\n */\nexport class FlatTileBoundingBoxGenerator {\n    private readonly m_tilingScheme: TilingScheme;\n    private readonly m_worldDimensions: Vector3Like;\n    private readonly m_worldBox: Box3Like;\n    /**\n     * Creates a new `FlatTileBoundingBoxGenerator` that can generate bounding boxes for the given\n     * TilingScheme.\n     *\n     * @param tilingScheme - The {@link TilingScheme} used to compute bounding boxes.\n     * @param minElevation - The minimum elevation in meters.\n     * @param maxElevation - The maximum elevation in meters.\n     */\n    constructor(\n        readonly tilingScheme: TilingScheme,\n        readonly minElevation: number = 0,\n        readonly maxElevation: number = 0\n    ) {\n        this.m_tilingScheme = tilingScheme;\n        this.m_worldBox = tilingScheme.projection.worldExtent(minElevation, maxElevation);\n        const { min, max } = this.m_worldBox;\n        this.m_worldDimensions = { x: max.x - min.x, y: max.y - min.y, z: max.z - min.z };\n    }\n\n    /**\n     * Returns the {@link Projection} of the {@link TilingScheme}.\n     */\n    get projection(): Projection {\n        return this.m_tilingScheme.projection;\n    }\n\n    /**\n     * Returns the {@link SubdivisionScheme} of the {@link TilingScheme}.\n     */\n    get subdivisionScheme(): SubdivisionScheme {\n        return this.m_tilingScheme.subdivisionScheme;\n    }\n\n    /**\n     * Returns the bounding box in world coordinates of the given {@link TileKey}.\n     *\n     * Example:\n     * ```typescript\n     * const worldBounds = new THREE.Box3();\n     * generator.getWorldBox(geoBox, worldBounds);\n     * console.log(worldBounds.getCenter());\n     * ```\n     *\n     * @param tileKey - The TileKey.\n     * @param result - The optional object used to store the resulting bounding box in world\n     * coordinates.\n     */\n    getWorldBox(tileKey: TileKey, result?: Box3Like): Box3Like {\n        const level = tileKey.level;\n        const levelDimensionX = this.subdivisionScheme.getLevelDimensionX(level);\n        const levelDimensionY = this.subdivisionScheme.getLevelDimensionY(level);\n        const sizeX = this.m_worldDimensions.x / levelDimensionX;\n        const sizeY = this.m_worldDimensions.y / levelDimensionY;\n        const originX = this.m_worldBox.min.x + sizeX * tileKey.column;\n        const originY = this.m_worldBox.min.y + sizeY * tileKey.row;\n\n        if (!result) {\n            result = new THREE.Box3();\n        }\n\n        result.min.x = originX;\n        result.min.y = originY;\n        result.min.z = this.m_worldBox.min.z;\n        result.max.x = originX + sizeX;\n        result.max.y = originY + sizeY;\n        result.max.z = this.m_worldBox.max.z;\n        return result;\n    }\n\n    /**\n     * Returns the bounding box in geo coordinates for the given {@link TileKey}.\n     *\n     * Example:\n     * ```typescript\n     * const geoBox = generator.getGeoBox(worldBounds);\n     * console.log(geoBox.center);\n     * ```\n     *\n     * @param tileKey - The {@link TileKey}.\n     */\n    getGeoBox(tileKey: TileKey): GeoBox {\n        const worldBox = this.getWorldBox(tileKey);\n        return this.projection.unprojectBox(worldBox);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\n\nclass HalfQuadTreeSubdivisionScheme implements SubdivisionScheme {\n    getSubdivisionX(): number {\n        return 2;\n    }\n\n    getSubdivisionY(level: number): number {\n        return level === 0 ? 1 : 2;\n    }\n\n    getLevelDimensionX(level: number): number {\n        return 1 << level;\n    }\n\n    getLevelDimensionY(level: number): number {\n        return level !== 0 ? 1 << (level - 1) : 1;\n    }\n}\n\n/**\n * A {@link SubdivisionScheme} used to represent half quadtrees.\n * This particular subdivision scheme is\n * used by the HERE tiling scheme.\n */\nexport const halfQuadTreeSubdivisionScheme: SubdivisionScheme = new HalfQuadTreeSubdivisionScheme();\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { normalizedEquirectangularProjection } from \"../projection/EquirectangularProjection\";\nimport { halfQuadTreeSubdivisionScheme } from \"./HalfQuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * {@link TilingScheme} used by most of the data published by HERE.\n *\n * The `hereTilingScheme` features a half quadtree subdivision scheme and an equirectangular\n * projection.\n */\nexport const hereTilingScheme = new TilingScheme(\n    halfQuadTreeSubdivisionScheme,\n    normalizedEquirectangularProjection\n);\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { mercatorProjection } from \"../projection/MercatorProjection\";\nimport { quadTreeSubdivisionScheme } from \"./QuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * The {@link TilingScheme} used by the HERE web tiles.\n *\n * The `mercatorTilingScheme` features a quadtree subdivision scheme and a Mercator projection.\n */\nexport const mercatorTilingScheme = new TilingScheme(quadTreeSubdivisionScheme, mercatorProjection);\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { transverseMercatorProjection } from \"../projection/TransverseMercatorProjection\";\nimport { quadTreeSubdivisionScheme } from \"./QuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * A {@link TilingScheme} featuring quadtree subdivision scheme and\n * transverse Mercator projection.\n */\nexport const polarTilingScheme = new TilingScheme(\n    quadTreeSubdivisionScheme,\n    transverseMercatorProjection\n);\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { TileKey } from \"./TileKey\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * A class used to represent a quadtree.\n */\nexport class QuadTree {\n    /**\n     * Constructs a new `QuadTree` for the given {@link TilingScheme}.\n     *\n     * Example:\n     * ```typescript\n     * const quadTree = new QuadTree(hereTilingScheme);\n     * const geoBox = quadTree.getGeoBox(tileKey);\n     * console.log(geoBox.center);\n     * ```\n     *\n     * @param tilingScheme - The TilingScheme used by this `QuadTree`.\n     */\n    constructor(readonly tilingScheme: TilingScheme) {}\n\n    /**\n     * Visits this `QuadTree` and invoke the given accept method\n     * with the current {@link TileKey} and\n     * its bounding box in geo coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const geoPos = new GeoCoordinates(latitude, longitude);\n     * const quadTree = new QuadTree(hereTilingScheme);\n     * quadTree.visit((tileKey, geoBox) => {\n     *     if (geoBox.contains(geoPos)) {\n     *         console.log(\"tile\", tileKey, \"contains\", geoPos);\n     *         return tileKey.level < 14; // stop visiting the quadtree if the level is >= 14.\n     *     }\n     *     return false; // stop visiting the quadtree,\n     *                   // the tile's geoBox doesn't contain the given coordinates.\n     * });\n     * ```\n     *\n     * @param accept - A function that takes a {@link TileKey}\n     * and its bounding box in geo coordinates\n     * and returns `true` if the visit of the `QuadTree`\n     * should continue; otherwise `false`.\n     */\n    visit(accept: (tileKey: TileKey, geoBox: GeoBox) => boolean) {\n        this.visitTileKey(TileKey.fromRowColumnLevel(0, 0, 0), accept);\n    }\n\n    /**\n     * Visits the subtree starting from the given tile.\n     *\n     * @param tileKey - The root of the subtree that should be visited.\n     * @param accept - A function that takes a {@link TileKey}\n     *                 and its bounding box in geo coordinates\n     *                 and returns `true` if the visit of the\n     *                 `QuadTree` should continue; otherwise `false`.\n     */\n    visitTileKey(tileKey: TileKey, accept: (tileKey: TileKey, geoBox: GeoBox) => boolean) {\n        const geoBox = this.tilingScheme.getGeoBox(tileKey);\n\n        if (!accept(tileKey, geoBox)) {\n            return;\n        }\n\n        for (const subTileKey of this.tilingScheme.getSubTileKeys(tileKey)) {\n            this.visitTileKey(subTileKey, accept);\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\n\nclass QuadTreeSubdivisionScheme implements SubdivisionScheme {\n    getSubdivisionX(): number {\n        return 2;\n    }\n\n    getSubdivisionY(): number {\n        return 2;\n    }\n\n    getLevelDimensionX(level: number): number {\n        return 1 << level;\n    }\n\n    getLevelDimensionY(level: number): number {\n        return 1 << level;\n    }\n}\n\n/**\n * {@link SubdivisionScheme} representing a quadtree.\n */\nexport const quadTreeSubdivisionScheme: SubdivisionScheme = new QuadTreeSubdivisionScheme();\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TileKey } from \"./TileKey\";\n\nexport class SubTiles implements Iterable<TileKey> {\n    constructor(public tileKey: TileKey, public sizeX: number, public sizeY: number) {}\n\n    [Symbol.iterator](): Iterator<TileKey> {\n        return this.sizeX === 2 && this.sizeY === 2\n            ? SubTiles.ZCurveIterator(this.tileKey)\n            : SubTiles.RowColumnIterator(this.tileKey, this.sizeX, this.sizeY);\n    }\n}\n\nexport namespace SubTiles {\n    export function* RowColumnIterator(\n        parentKey: TileKey,\n        sizeX: number,\n        sizeY: number\n    ): Iterator<TileKey> {\n        for (let y = 0; y < sizeY; y++) {\n            for (let x = 0; x < sizeX; x++) {\n                yield TileKey.fromRowColumnLevel(\n                    parentKey.row * sizeY + y,\n                    parentKey.column * sizeX + x,\n                    parentKey.level + 1\n                );\n            }\n        }\n    }\n\n    export function* ZCurveIterator(parentKey: TileKey): Iterator<TileKey> {\n        for (let i = 0; i < 4; i++) {\n            yield TileKey.fromRowColumnLevel(\n                (parentKey.row << 1) | (i >> 1),\n                (parentKey.column << 1) | (i & 1),\n                parentKey.level + 1\n            );\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Interface representing a `SubdivisionScheme`.\n */\nexport interface SubdivisionScheme {\n    /**\n     * Returns the number of columns for the given level.\n     *\n     * @param level - The level.\n     */\n    getSubdivisionX(level: number): number;\n\n    /**\n     * Returns the number of rows for the given level.\n     *\n     * @param level - The level.\n     */\n    getSubdivisionY(level: number): number;\n\n    /**\n     * Returns the width of the partitions at the given level.\n     *\n     * @param level - The level.\n     */\n    getLevelDimensionX(level: number): number;\n\n    /**\n     * Returns the height of the partitions at the given level.\n     *\n     * @param level - The level.\n     */\n    getLevelDimensionY(level: number): number;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/** @hidden */\nconst powerOfTwo = [\n    0x1,\n    0x2,\n    0x4,\n    0x8,\n    0x10,\n    0x20,\n    0x40,\n    0x80,\n    0x100,\n    0x200,\n    0x400,\n    0x800,\n    0x1000,\n    0x2000,\n    0x4000,\n    0x8000,\n    0x10000,\n    0x20000,\n    0x40000,\n    0x80000,\n    0x100000,\n    0x200000,\n    0x400000,\n    0x800000,\n    0x1000000,\n    0x2000000,\n    0x4000000,\n    0x8000000,\n    0x10000000,\n    0x20000000,\n    0x40000000,\n    0x80000000,\n    0x100000000,\n    0x200000000,\n    0x400000000,\n    0x800000000,\n    0x1000000000,\n    0x2000000000,\n    0x4000000000,\n    0x8000000000,\n    0x10000000000,\n    0x20000000000,\n    0x40000000000,\n    0x80000000000,\n    0x100000000000,\n    0x200000000000,\n    0x400000000000,\n    0x800000000000,\n    0x1000000000000,\n    0x2000000000000,\n    0x4000000000000,\n    0x8000000000000,\n    0x10000000000000 // Math.pow(2, 52), highest bit that can be set correctly.\n];\n\n/**\n * The `TileKey` instances are used to address a tile in a quadtree.\n *\n * A tile key is defined by a row, a column, and a level. The tree has a root at level 0, with one\n * single tile. On every level, each tile is divided into four children (therefore the name\n * quadtree).\n *\n * Within each [[level]], any particular tile is addressed with [[row]] and [[column]]. The number\n * of rows and columns in each level is 2 to the power of the level. This means: On level 0, only\n * one tile exists, [[columnsAtLevel]]() and [[rowsAtLevel]]() are both 1. On level 1, 4 tiles\n * exist, in 2 rows and 2 columns. On level 2 we have 16 tiles, in 4 rows and 4 columns. And so on.\n *\n * A tile key is usually created using [[fromRowColumnLevel]]() method.\n *\n * `TileKey` instances are immutable, all members return new instances of `TileKey` and do not\n * modify the original object.\n *\n * Utility functions like [[parent]](), [[changedLevelBy]](), and [[changedLevelTo]]() allow for\n * easy vertical navigation of the tree. The number of available rows and columns in the tile's\n * level is given with [[rowCount]]() and [[columnCount]]().\n *\n * Tile keys can be created from and converted into various alternative formats:\n *\n *  - [[toQuadKey]]() / [[fromQuadKey]]() - string representation 4-based\n *  - [[toHereTile]]() / [[fromHereTile]]() - string representation 10-based\n *  - [[mortonCode]]() / [[fromMortonCode]]() - number representation\n *\n * Note - as JavaScript's number type can hold 53 bits in its mantissa, only levels up to 26 can be\n * represented in the number representation returned by [[mortonCode]]().\n */\nexport class TileKey {\n    /**\n     * Creates a tile key.\n     *\n     * @param row - The requested row. Must be less than 2 to the power of level.\n     * @param column - The requested column. Must be less than 2 to the power of level.\n     * @param level - The requested level.\n     */\n    static fromRowColumnLevel(row: number, column: number, level: number): TileKey {\n        return new TileKey(row, column, level);\n    }\n\n    /**\n     * Creates a tile key from a quad string.\n     *\n     * The quad string can be created with [[toQuadKey]].\n     *\n     * @param quadkey - The quadkey to convert.\n     * @returns A new instance of `TileKey`.\n     */\n    static fromQuadKey(quadkey: string): TileKey {\n        const level = quadkey.length;\n        let row = 0;\n        let column = 0;\n        for (let i = 0; i < quadkey.length; ++i) {\n            const mask = 1 << i;\n            const d = parseInt(quadkey.charAt(level - i - 1), 10);\n            if (d & 0x1) {\n                column |= mask;\n            }\n            if (d & 0x2) {\n                row |= mask;\n            }\n        }\n        return TileKey.fromRowColumnLevel(row, column, level);\n    }\n\n    /**\n     * Creates a tile key from a numeric Morton code representation.\n     *\n     * You can convert a tile key into a numeric Morton code with [[mortonCode]].\n     *\n     * @param quadKey64 - The Morton code to be converted.\n     * @returns A new instance of {@link TileKey}.\n     */\n    static fromMortonCode(quadKey64: number): TileKey {\n        let level = 0;\n        let row = 0;\n        let column = 0;\n        let quadKey = quadKey64;\n        while (quadKey > 1) {\n            const mask: number = 1 << level;\n\n            if (quadKey & 0x1) {\n                column |= mask;\n            }\n            if (quadKey & 0x2) {\n                row |= mask;\n            }\n\n            level++;\n            quadKey = (quadKey - (quadKey & 0x3)) / 4;\n        }\n        const result = TileKey.fromRowColumnLevel(row, column, level);\n        result.m_mortonCode = quadKey64;\n        return result;\n    }\n\n    /**\n     * Creates a tile key from a heretile code string.\n     *\n     * The string can be created with [[toHereTile]].\n     *\n     * @param quadkey64 - The string representation of the HERE tile key.\n     * @returns A new instance of `TileKey`.\n     */\n    static fromHereTile(quadkey64: string): TileKey {\n        const result = TileKey.fromMortonCode(parseInt(quadkey64, 10));\n        result.m_hereTile = quadkey64;\n        return result;\n    }\n\n    /**\n     * Returns the number of available columns at a given level.\n     *\n     * This is 2 to the power of the level.\n     *\n     * @param level - The level for which to return the number of columns.\n     * @returns The available columns at the given level.\n     */\n    static columnsAtLevel(level: number): number {\n        return Math.pow(2, level);\n    }\n\n    /**\n     * Returns the number of available rows at a given level.\n     *\n     * This is 2 to the power of the level.\n     *\n     * @param level - The level for which to return the number of rows.\n     * @returns The available rows at the given level.\n     */\n    static rowsAtLevel(level: number): number {\n        return Math.pow(2, level);\n    }\n\n    /**\n     * Returns the closest matching `TileKey` in a cartesian coordinate system.\n     *\n     * @param level - The level for the tile key.\n     * @param coordX - The X coordinate.\n     * @param coordY - The Y coordinate.\n     * @param totalWidth - The maximum X coordinate.\n     * @param totalHeight - The maximum Y coordinate.\n     * @returns A new tile key at the given level that includes the given coordinates.\n     */\n    static atCoords(\n        level: number,\n        coordX: number,\n        coordY: number,\n        totalWidth: number,\n        totalHeight: number\n    ): TileKey {\n        return TileKey.fromRowColumnLevel(\n            Math.floor(coordY / (totalHeight / TileKey.rowsAtLevel(level))),\n            Math.floor(coordX / (totalWidth / TileKey.columnsAtLevel(level))),\n            level\n        );\n    }\n\n    /**\n     * Computes the Morton code of the parent tile key of the given Morton code.\n     *\n     * Note: The parent key of the root key is the root key itself.\n     *\n     * @param mortonCode - A Morton code, for example, obtained from [[mortonCode]].\n     * @returns The Morton code of the parent tile.\n     */\n    static parentMortonCode(mortonCode: number): number {\n        return Math.floor(mortonCode / 4);\n    }\n\n    private m_mortonCode?: number;\n    private m_hereTile?: string;\n\n    /**\n     * Constructs a new immutable instance of a `TileKey`.\n     *\n     * For the better readability, {@link TileKey.fromRowColumnLevel} should be preferred.\n     *\n     * Note - row and column must not be greater than the maximum rows/columns for the given level.\n     *\n     * @param row - Represents the row in the quadtree.\n     * @param column - Represents the column in the quadtree.\n     * @param level - Represents the level in the quadtree.\n     */\n    constructor(readonly row: number, readonly column: number, readonly level: number) {}\n\n    /**\n     * Returns a tile key representing the parent of the tile addressed by this tile key.\n     *\n     * Throws an exception is this tile is already the root.\n     */\n    parent(): TileKey {\n        if (this.level === 0) {\n            throw new Error(\"Cannot get the parent of the root tile key\");\n        }\n        return TileKey.fromRowColumnLevel(this.row >>> 1, this.column >>> 1, this.level - 1);\n    }\n\n    /**\n     * Returns a new tile key at a level that differs from this tile's level by delta.\n     *\n     * Equivalent to `changedLevelTo(level() + delta)`.\n     *\n     * Note - root key is returned if `delta` is smaller than the level of this tile key.\n     *\n     * @param delta - The numeric difference between the current level and the requested level.\n     */\n    changedLevelBy(delta: number): TileKey {\n        const level = Math.max(0, this.level + delta);\n        let row = this.row;\n        let column = this.column;\n\n        if (delta >= 0) {\n            row <<= delta;\n            column <<= delta;\n        } else {\n            row >>>= -delta;\n            column >>>= -delta;\n        }\n        return TileKey.fromRowColumnLevel(row, column, level);\n    }\n\n    /**\n     * Returns a new tile key at the requested level.\n     *\n     * If the requested level is smaller than the tile's level, then the key of an ancestor of this\n     * tile is returned. If the requested level is larger than the tile's level, then the key of\n     * first child or grandchild of this tile is returned, for example, the child with the lowest\n     * row and column number. If the requested level equals this tile's level, then the tile key\n     * itself is returned. If the requested level is negative, the root tile key is returned.\n     *\n     * @param level - The requested level.\n     */\n    changedLevelTo(level: number): TileKey {\n        return this.changedLevelBy(level - this.level);\n    }\n\n    /**\n     * Converts the tile key to a numeric code representation.\n     *\n     * You can create a tile key from a numeric Morton code with [[fromMortonCode]].\n     *\n     * Note - only levels <= 26 are supported.\n     */\n    mortonCode(): number {\n        if (this.m_mortonCode === undefined) {\n            let column = this.column;\n            let row = this.row;\n\n            let result = powerOfTwo[this.level << 1];\n            for (let i = 0; i < this.level; ++i) {\n                if (column & 0x1) {\n                    result += powerOfTwo[2 * i];\n                }\n                if (row & 0x1) {\n                    result += powerOfTwo[2 * i + 1];\n                }\n                column >>>= 1;\n                row >>>= 1;\n            }\n\n            this.m_mortonCode = result;\n        }\n        return this.m_mortonCode;\n    }\n\n    /**\n     * Converts the tile key into a string for using in REST API calls.\n     *\n     * The string is a quadkey Morton code representation as a string.\n     *\n     * You can convert back from a quadkey string with [[fromHereTile]].\n     */\n    toHereTile(): string {\n        if (this.m_hereTile === undefined) {\n            this.m_hereTile = this.mortonCode().toString();\n        }\n        return this.m_hereTile;\n    }\n\n    /**\n     * Converts the tile key into a string for using in REST API calls.\n     *\n     * If the tile is the root tile, the quadkey is '-'. Otherwise the string is a number to the\n     * base of 4, but without the leading 1, with the following properties:\n     *  1. the number of digits equals the level.\n     *  2. removing the last digit gives the parent tile's quadkey string, i.e. appending 0,1,2,3\n     *     to a quadkey string gives the tiles's children.\n     *\n     * You can convert back from a quadkey string with [[fromQuadKey]].\n     */\n    toQuadKey(): string {\n        let result: string = \"\";\n\n        for (let i = this.level; i > 0; --i) {\n            const mask = 1 << (i - 1);\n\n            const col = (this.column & mask) !== 0;\n            const row = (this.row & mask) !== 0;\n\n            if (col && row) {\n                result += \"3\";\n            } else if (row) {\n                result += \"2\";\n            } else if (col) {\n                result += \"1\";\n            } else {\n                result += \"0\";\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Equality operator.\n     *\n     * @param qnr - The tile key to compare to.\n     * @returns `true` if this tile key has identical row, column and level, `false` otherwise.\n     */\n    equals(qnr: TileKey): boolean {\n        return this.row === qnr.row && this.column === qnr.column && this.level === qnr.level;\n    }\n\n    /**\n     * Returns the absolute quadkey that is constructed from its sub quadkey.\n     *\n     * @param sub - The sub key.\n     * @returns The absolute tile key in the quadtree.\n     */\n    addedSubKey(sub: string): TileKey {\n        const subQuad = TileKey.fromQuadKey(sub.length === 0 ? \"-\" : sub);\n        const child = this.changedLevelBy(subQuad.level);\n        return TileKey.fromRowColumnLevel(\n            child.row + subQuad.row,\n            child.column + subQuad.column,\n            child.level\n        );\n    }\n\n    /**\n     * Returns the absolute quadkey that is constructed from its sub HERE tile key.\n     *\n     * @param sub - The sub HERE key.\n     * @returns The absolute tile key in the quadtree.\n     */\n    addedSubHereTile(sub: string): TileKey {\n        const subQuad = TileKey.fromHereTile(sub);\n        const child = this.changedLevelBy(subQuad.level);\n        return TileKey.fromRowColumnLevel(\n            child.row + subQuad.row,\n            child.column + subQuad.column,\n            child.level\n        );\n    }\n\n    /**\n     * Returns a sub quadkey that is relative to its parent.\n     *\n     * This function can be used to generate sub keys that are relative to a parent that is delta\n     * levels up in the quadtree.\n     *\n     * This function can be used to create shortened keys for quads on lower levels if the parent is\n     * known.\n     *\n     * Note - the sub quadkeys fit in a 16-bit unsigned integer if the `delta` is smaller than 8. If\n     * `delta` is smaller than 16, the sub quadkey fits into an unsigned 32-bit integer.\n     *\n     * Deltas larger than 16 are not supported.\n     *\n     * @param delta - The number of levels relative to its parent quadkey. Must be greater or equal\n     * to 0 and smaller than 16.\n     * @returns The quadkey relative to its parent that is `delta` levels up the tree.\n     */\n    getSubHereTile(delta: number): string {\n        const key = this.mortonCode();\n        const msb = 1 << (delta * 2);\n        const mask = msb - 1;\n        const result = (key & mask) | msb;\n        return result.toString();\n    }\n\n    /**\n     * Returns the number of available rows in the tile's [[level]].\n     *\n     * This is 2 to the power of the level.\n     */\n    rowCount(): number {\n        return TileKey.rowsAtLevel(this.level);\n    }\n\n    /**\n     * Returns the number of available columns in the tile's [[level]].\n     *\n     * This is 2 to the power of the level.\n     */\n    columnCount(): number {\n        return TileKey.columnsAtLevel(this.level);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { TileKey } from \"./TileKey\";\nimport { TilingScheme } from \"./TilingScheme\";\n\nexport const powerOfTwo = (() => {\n    let val = 0.5;\n    return new Array(53).fill(0).map(() => (val *= 2));\n})();\n\nexport namespace TileKeyUtils {\n    export function geoCoordinatesToTileKey(\n        tilingScheme: TilingScheme,\n        geoPoint: GeoCoordinatesLike,\n        level: number\n    ): TileKey | null {\n        const projection = tilingScheme.projection;\n        const worldPoint = projection.projectPoint(geoPoint);\n\n        return worldCoordinatesToTileKey(tilingScheme, worldPoint, level);\n    }\n\n    export function worldCoordinatesToTileKey(\n        tilingScheme: TilingScheme,\n        worldPoint: Vector3Like,\n        level: number\n    ): TileKey | null {\n        const projection = tilingScheme.projection;\n        const subdivisionScheme = tilingScheme.subdivisionScheme;\n\n        const cx = subdivisionScheme.getLevelDimensionX(level);\n        const cy = subdivisionScheme.getLevelDimensionY(level);\n\n        const { min, max } = projection.worldExtent(0, 0);\n        const worldSizeX = max.x - min.x;\n        const worldSizeY = max.y - min.y;\n\n        if (worldPoint.x < min.x || worldPoint.x > max.x) {\n            return null;\n        }\n\n        if (worldPoint.y < min.y || worldPoint.y > max.y) {\n            return null;\n        }\n\n        const column = Math.min(cx - 1, Math.floor((cx * (worldPoint.x - min.x)) / worldSizeX));\n        const row = Math.min(cy - 1, Math.floor((cy * (worldPoint.y - min.y)) / worldSizeY));\n\n        return TileKey.fromRowColumnLevel(row, column, level);\n    }\n\n    export function geoRectangleToTileKeys(\n        tilingScheme: TilingScheme,\n        geoBox: GeoBox,\n        level: number\n    ): TileKey[] {\n        const wrap = (value: number, lower: number, upper: number) => {\n            if (value < lower) {\n                return upper - ((lower - value) % (upper - lower));\n            }\n\n            return lower + ((value - lower) % (upper - lower));\n        };\n\n        const clamp = (x: number, minVal: number, maxVal: number) => {\n            return Math.min(Math.max(x, minVal), maxVal);\n        };\n\n        // Clamp at the poles and wrap around the international date line.\n        const southWestLongitude = wrap(geoBox.southWest.longitudeInRadians, -Math.PI, Math.PI);\n        const southWestLatitude = clamp(\n            geoBox.southWest.latitudeInRadians,\n            -(Math.PI * 0.5),\n            Math.PI * 0.5\n        );\n        const northEastLongitude = wrap(geoBox.northEast.longitudeInRadians, -Math.PI, Math.PI);\n        const northEastLatitude = clamp(\n            geoBox.northEast.latitudeInRadians,\n            -(Math.PI * 0.5),\n            Math.PI * 0.5\n        );\n        const minTileKey = TileKeyUtils.geoCoordinatesToTileKey(\n            tilingScheme,\n            GeoCoordinates.fromRadians(southWestLatitude, southWestLongitude),\n            level\n        );\n        const maxTileKey = TileKeyUtils.geoCoordinatesToTileKey(\n            tilingScheme,\n            GeoCoordinates.fromRadians(northEastLatitude, northEastLongitude),\n            level\n        );\n        const columnCount = tilingScheme.subdivisionScheme.getLevelDimensionX(level);\n\n        if (!minTileKey || !maxTileKey) {\n            throw new Error(\"Invalid coordinates\");\n        }\n\n        const minColumn = minTileKey.column;\n        let maxColumn = maxTileKey.column;\n\n        // wrap around case\n        if (southWestLongitude > northEastLongitude) {\n            if (maxColumn !== minColumn) {\n                maxColumn += columnCount;\n            } else {\n                // do not duplicate\n                maxColumn += columnCount - 1;\n            }\n        }\n\n        const minRow = Math.min(minTileKey.row, maxTileKey.row);\n        const maxRow = Math.max(minTileKey.row, maxTileKey.row);\n\n        const keys = new Array<TileKey>();\n\n        for (let row = minRow; row <= maxRow; ++row) {\n            for (let column = minColumn; column <= maxColumn; ++column) {\n                keys.push(TileKey.fromRowColumnLevel(row, column % columnCount, level));\n            }\n        }\n\n        return keys;\n    }\n\n    /**\n     * Creates a unique key based on the supplied parameters. Note, the uniqueness is bounded by the\n     * bitshift. The [[TileKey.mortonCode()]] supports currently up to 26 levels (this is because\n     * 26*2 equals 52, and 2^52 is the highest bit that can be set in an integer in Javascript), the\n     * bitshift reduces this accordingly, so given the default bitshift of four, we support up to 24\n     * levels. Given the current support up to level 19 this should be fine.\n     *\n     * @param tileKey - The unique {@link @here/harp-geoutils#TileKey}\n     *                  from which to compute the unique key.\n     * @param offset - How much the given {@link @here/harp-geoutils#TileKey} is offset\n     * @param bitshift - How much space we have to store the offset. The default of 4 means we have\n     *      enough space to store 16 unique tiles in a single view.\n     */\n    export function getKeyForTileKeyAndOffset(\n        tileKey: TileKey,\n        offset: number,\n        bitshift: number = 4\n    ) {\n        const shiftedOffset = getShiftedOffset(offset, bitshift);\n        return tileKey.mortonCode() + shiftedOffset;\n    }\n\n    /**\n     * Extracts the offset and morton key from the given key (must be created by:\n     * [[getKeyForTileKeyAndOffset]])\n     *\n     * Note, we can't use bitshift operators in Javascript because they work on 32-bit integers, and\n     * would truncate the numbers, hence using powers of two.\n     *\n     * @param key - Key to extract offset and morton key.\n     * @param bitshift - How many bits to shift by, must be the same as was used when creating the\n     * key.\n     */\n    export function extractOffsetAndMortonKeyFromKey(key: number, bitshift: number = 4) {\n        let offset = 0;\n        let mortonCode = key;\n        let i = 0;\n        // Compute the offset\n        for (; i < bitshift; i++) {\n            // Note, we use 52, because 2^53-1 is the biggest value, the highest value\n            // that can be set is the bit in the 52th position.\n            const num = powerOfTwo[52 - i];\n            if (mortonCode >= num) {\n                mortonCode -= num;\n                offset += powerOfTwo[bitshift - 1 - i];\n            }\n        }\n        // We subtract half of the total amount, this undoes what is computed in getShiftedOffset\n        offset -= powerOfTwo[bitshift - 1];\n        return { offset, mortonCode };\n    }\n\n    /**\n     * Returns the key of the parent. Key must have been computed using the function\n     * [[getKeyForTileKeyAndOffset]].\n     *\n     * @param calculatedKey - Key to decompose\n     * @param bitshift - Bit shift used to create the key\n     */\n    export function getParentKeyFromKey(calculatedKey: number, bitshift: number = 4) {\n        const { offset, mortonCode } = extractOffsetAndMortonKeyFromKey(calculatedKey, bitshift);\n        const parentTileKey = TileKey.fromMortonCode(TileKey.parentMortonCode(mortonCode));\n        return getKeyForTileKeyAndOffset(parentTileKey, offset, bitshift);\n    }\n\n    /**\n     * Packs the supplied offset into the high bits, where the highbits are between 2^52 and\n     * 2^(52-bitshift).\n     *\n     * Offsets are wrapped around, to fit in the offsetBits. In practice, this doesn't really\n     * matter, this is primarily used to find a unique id, if there is an offset 10, which is\n     * wrapped to 2, it doesn't matter, because the offset of 10 is still stored in the tile.\n     * What can be a problem though is that the cache gets filled up and isn't emptied.\n     *\n     * Note, because bit shifting in JavaScript works on 32 bit integers, we use powers of 2 to set\n     * the high bits instead.\n     *\n     * @param offset - Offset to pack into the high bits.\n     * @param offsetBits - How many bits to use to pack the offset.\n     */\n    function getShiftedOffset(offset: number, offsetBits: number = 4) {\n        let result = 0;\n        const totalOffsetsToStore = powerOfTwo[offsetBits];\n        //Offsets are stored by adding half 2 ^ (bitshift - 1), i.e.half of the max amount stored,\n        //and then wrapped based on this value.For example, given a bitshift of 3, and an offset -\n        //3, it would have 4 added(half of 2 ^ 3), and be stored as 1, 3 would have 4 added and be\n        //stored as 7, 4 would be added with 4 and be stored as 0 (it wraps around).\n        offset += totalOffsetsToStore / 2;\n        while (offset < 0) {\n            offset += totalOffsetsToStore;\n        }\n        while (offset >= totalOffsetsToStore) {\n            offset -= totalOffsetsToStore;\n        }\n        // Offset is now a number between >= 0 and < totalOffsetsToStore\n        for (let i = 0; i < offsetBits && offset > 0; i++) {\n            // 53 is used because 2^53-1 is the biggest number that Javascript can represent as an\n            // integer safely.\n            if (offset & 0x1) {\n                result += powerOfTwo[53 - offsetBits + i];\n            }\n            offset >>>= 1;\n        }\n        return result;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\nimport { SubTiles } from \"./SubTiles\";\nimport { TileKey } from \"./TileKey\";\n\nexport class TileTreeTraverse {\n    private readonly m_subdivisionScheme: SubdivisionScheme;\n\n    constructor(subdivisionScheme: SubdivisionScheme) {\n        this.m_subdivisionScheme = subdivisionScheme;\n    }\n\n    subTiles(tileKey: TileKey): Iterable<TileKey> {\n        const divX = this.m_subdivisionScheme.getSubdivisionX(tileKey.level);\n        const divY = this.m_subdivisionScheme.getSubdivisionY(tileKey.level);\n\n        return new SubTiles(tileKey, divX, divY);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like } from \"../math/Box3Like\";\nimport { Projection } from \"../projection/Projection\";\nimport { FlatTileBoundingBoxGenerator } from \"./FlatTileBoundingBoxGenerator\";\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\nimport { TileKey } from \"./TileKey\";\nimport { TileKeyUtils } from \"./TileKeyUtils\";\nimport { TileTreeTraverse } from \"./TileTreeTraverse\";\n\n/**\n * The `TilingScheme` represents how the data is tiled.\n */\nexport class TilingScheme {\n    readonly boundingBoxGenerator: FlatTileBoundingBoxGenerator;\n    readonly tileTreeTraverse: TileTreeTraverse;\n\n    /**\n     * Constructs a new `TilingScheme` with the given subdivision scheme and projection.\n     *\n     * @param subdivisionScheme - The subdivision scheme used by this `TilingScheme`.\n     * @param projection - The projection used by this `TilingScheme`.\n     */\n    constructor(readonly subdivisionScheme: SubdivisionScheme, readonly projection: Projection) {\n        this.boundingBoxGenerator = new FlatTileBoundingBoxGenerator(this);\n        this.tileTreeTraverse = new TileTreeTraverse(subdivisionScheme);\n    }\n\n    /**\n     * Returns the sub tile keys of the given tile.\n     *\n     * @param tileKey - The {@link TileKey}.\n     * @returns The list of the sub tile keys.\n     */\n    getSubTileKeys(tileKey: TileKey): Iterable<TileKey> {\n        return this.tileTreeTraverse.subTiles(tileKey);\n    }\n\n    /**\n     * Gets the {@link TileKey} from the given geo position and level.\n     *\n     * @param geoPoint - The position in geo coordinates.\n     * @param level - The level of the resulting `TileKey`.\n     */\n    getTileKey(geoPoint: GeoCoordinatesLike, level: number): TileKey | null {\n        return TileKeyUtils.geoCoordinatesToTileKey(this, geoPoint, level);\n    }\n\n    /**\n     * Gets the list of {@link TileKey}s contained in the given {@link GeoBox}.\n     *\n     * @param geoBox - The bounding box in geo coordinates.\n     * @param level - The level of the resulting `TileKey`.\n     */\n    getTileKeys(geoBox: GeoBox, level: number): TileKey[] {\n        return TileKeyUtils.geoRectangleToTileKeys(this, geoBox, level);\n    }\n\n    /**\n     * Returns the bounding box in geo coordinates for the given {@link TileKey}.\n     *\n     * @param tileKey - The `TileKey`.\n     */\n    getGeoBox(tileKey: TileKey): GeoBox {\n        return this.boundingBoxGenerator.getGeoBox(tileKey);\n    }\n\n    /**\n     * Returns the bounding box in world coordinates.\n     *\n     * @param tileKey - The `TileKey`.\n     * @param result - The optional object that will contain the resulting bounding box.\n     */\n    getWorldBox(tileKey: TileKey, result?: Box3Like): Box3Like {\n        return this.boundingBoxGenerator.getWorldBox(tileKey, result);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { webMercatorProjection } from \"../projection/MercatorProjection\";\nimport { quadTreeSubdivisionScheme } from \"./QuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * A {@link TilingScheme} featuring quadtree subdivision scheme and web Mercator projection.\n */\nexport const webMercatorTilingScheme = new TilingScheme(\n    quadTreeSubdivisionScheme,\n    webMercatorProjection\n);\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/Lines\";\nexport * from \"./lib/TriangulateLines\";\nexport * from \"./lib/HighPrecisionLines\";\nexport * from \"./lib/HighPrecisionUtils\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HighPrecisionLineMaterial } from \"@here/harp-materials\";\nimport * as THREE from \"three\";\n\nimport { HighPrecisionUtils } from \"./HighPrecisionUtils\";\n\n/**\n * Declare interface for `HighPrecisionObject` which describes additional functionality to render\n * high-precision vertices.\n */\nexport interface HighPrecisionObject extends THREE.Object3D {\n    /**\n     * Allow direct access to [[BufferGeometry]] without cast.\n     */\n    bufferGeometry: THREE.BufferGeometry;\n\n    /**\n     * Allow direct access to [[ShaderMaterial]] without cast.\n     */\n    shaderMaterial: THREE.ShaderMaterial;\n\n    /**\n     * Inversed World Matrix.\n     */\n    matrixWorldInverse: THREE.Matrix4;\n\n    /**\n     * Sets up attributes for position (one attribute for major 32 bits position \"halve\", and one\n     * attribute for lower 32 bits).\n     */\n    setPositions(positions: number[] | THREE.Vector3[]): void;\n\n    /**\n     * Prepare the objects \"`onBeforeRender()`\" callback to generate proper high-precision camera\n     * position.\n     */\n    setupForRendering(): void;\n}\n\n/**\n * Class used to render high-precision wireframe lines.\n */\nexport class HighPrecisionWireFrameLine extends THREE.Line implements HighPrecisionObject {\n    matrixWorldInverse: THREE.Matrix4;\n\n    /**\n     * Creates a `HighPrecisionWireFrameLine` object.\n     *\n     * @param geometry - [[BufferGeometry]] used to render this object.\n     * @param material - [[HighPrecisionLineMaterial]] used to render this object.\n     * @param positions - Array of 2D/3D positions.\n     */\n    constructor(\n        geometry: THREE.BufferGeometry,\n        material: HighPrecisionLineMaterial,\n        positions?: number[] | THREE.Vector3[]\n    ) {\n        super(geometry, material);\n        this.matrixWorldInverse = new THREE.Matrix4();\n\n        if (positions) {\n            this.setPositions(positions);\n        }\n    }\n\n    get bufferGeometry(): THREE.BufferGeometry {\n        return this.geometry as THREE.BufferGeometry;\n    }\n\n    get shaderMaterial(): THREE.ShaderMaterial {\n        return this.material as THREE.ShaderMaterial;\n    }\n\n    setPositions(positions: number[] | THREE.Vector3[]): void {\n        HighPrecisionUtils.setPositions(this, positions);\n    }\n\n    setupForRendering(): void {\n        this.onBeforeRender = (\n            _renderer: THREE.WebGLRenderer,\n            _scene: THREE.Scene,\n            camera: THREE.Camera,\n            _geometry: THREE.BufferGeometry,\n            _material: THREE.Material,\n            _group: THREE.Group\n        ) => {\n            HighPrecisionUtils.updateHpUniforms(this, camera, this.shaderMaterial);\n        };\n    }\n\n    updateMatrixWorld(force: boolean) {\n        const doUpdateMatrixWorldInverse = this.matrixWorldNeedsUpdate || force;\n\n        super.updateMatrixWorld(force);\n\n        if (doUpdateMatrixWorldInverse) {\n            this.matrixWorldInverse.copy(this.matrixWorld).invert();\n        }\n    }\n}\n\n/**\n * Class used to render high-precision lines.\n */\nexport class HighPrecisionLine extends THREE.Mesh implements HighPrecisionObject {\n    matrixWorldInverse: THREE.Matrix4;\n\n    /**\n     * Creates a `HighPrecisionLine` object.\n     *\n     * @param geometry - [[BufferGeometry]] used to render this object.\n     * @param material - [[HighPrecisionLineMaterial]] used to render this object.\n     * @param positions - Array of 2D/3D positions.\n     */\n    constructor(\n        geometry: THREE.BufferGeometry,\n        material: HighPrecisionLineMaterial,\n        positions?: number[] | THREE.Vector3[]\n    ) {\n        super(geometry, material);\n\n        this.matrixWorldInverse = new THREE.Matrix4();\n\n        if (positions) {\n            this.setPositions(positions);\n        }\n    }\n\n    get bufferGeometry(): THREE.BufferGeometry {\n        return this.geometry as THREE.BufferGeometry;\n    }\n\n    get shaderMaterial(): THREE.ShaderMaterial {\n        return this.material as THREE.ShaderMaterial;\n    }\n\n    setPositions(positions: number[] | THREE.Vector3[]): void {\n        HighPrecisionUtils.setPositions(this, positions);\n    }\n\n    setupForRendering(): void {\n        this.onBeforeRender = (\n            _renderer: THREE.WebGLRenderer,\n            _scene: THREE.Scene,\n            camera: THREE.Camera,\n            _geometry: THREE.BufferGeometry,\n            _material: THREE.Material,\n            _group: THREE.Group\n        ) => {\n            HighPrecisionUtils.updateHpUniforms(this, camera, this.shaderMaterial);\n        };\n    }\n\n    updateMatrixWorld(force: boolean) {\n        const doUpdateMatrixWorldInverse = this.matrixWorldNeedsUpdate || force;\n\n        super.updateMatrixWorld(force);\n\n        if (doUpdateMatrixWorldInverse) {\n            this.matrixWorldInverse.copy(this.matrixWorld).invert();\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HighPrecisionPointMaterial } from \"@here/harp-materials\";\nimport * as THREE from \"three\";\n\nimport { HighPrecisionObject } from \"./HighPrecisionLines\";\nimport { HighPrecisionUtils } from \"./HighPrecisionUtils\";\n\n/**\n * Class used to render high-precision points.\n */\nexport class HighPrecisionPoints extends THREE.Points implements HighPrecisionObject {\n    matrixWorldInverse: THREE.Matrix4;\n\n    /**\n     * Number of dimensions this `HighPrecisionObject` is specified in (2D/3D).\n     */\n    dimensionality?: number;\n\n    /**\n     * Creates a `HighPrecisionPoints` object.\n     *\n     * @param geometry - [[BufferGeometry]] used to render this object.\n     * @param material - [[HighPrecisionLineMaterial]] used to render this object.\n     *     instances.\n     * @param positions - Array of 2D/3D positions.\n     * @param color - Color of the rendered point.\n     * @param opacity - Opacity of the rendered point.\n     */\n    constructor(\n        geometry?: THREE.BufferGeometry,\n        material?: HighPrecisionPointMaterial,\n        positions?: number[] | THREE.Vector3[],\n        color?: THREE.Color,\n        opacity?: number\n    ) {\n        if (material === undefined) {\n            material = new HighPrecisionPointMaterial({\n                color: color ? color : HighPrecisionPointMaterial.DEFAULT_COLOR,\n                opacity: opacity !== undefined ? opacity : 1\n            });\n        }\n\n        super(geometry === undefined ? new THREE.BufferGeometry() : geometry, material);\n\n        this.matrixWorldInverse = new THREE.Matrix4();\n\n        if (positions) {\n            this.setPositions(positions);\n        }\n    }\n\n    get bufferGeometry(): THREE.BufferGeometry {\n        return this.geometry as THREE.BufferGeometry;\n    }\n\n    /**\n     * Clears the [[BufferGeometry]] used to render this point.\n     */\n    clearGeometry(): THREE.BufferGeometry {\n        return (this.geometry = new THREE.BufferGeometry());\n    }\n\n    get shaderMaterial(): THREE.ShaderMaterial {\n        return this.material as THREE.ShaderMaterial;\n    }\n\n    setPositions(positions: number[] | THREE.Vector3[]): void {\n        HighPrecisionUtils.setPositions(this, positions);\n    }\n\n    setupForRendering(): void {\n        if (\n            (this.material as any).isHighPrecisionPointsMaterial &&\n            this.dimensionality !== undefined\n        ) {\n            (this.material as any).setDimensionality(this.dimensionality);\n        }\n        this.onBeforeRender = (\n            _renderer: THREE.WebGLRenderer,\n            _scene: THREE.Scene,\n            camera: THREE.Camera,\n            _geometry: THREE.BufferGeometry,\n            _material: THREE.Material,\n            _group: THREE.Group\n        ) => {\n            HighPrecisionUtils.updateHpUniforms(this, camera, this.shaderMaterial);\n        };\n    }\n\n    updateMatrixWorld(force: boolean) {\n        const doUpdateMatrixWorldInverse = this.matrixWorldNeedsUpdate || force;\n\n        super.updateMatrixWorld(force);\n\n        if (doUpdateMatrixWorldInverse) {\n            this.matrixWorldInverse.copy(this.matrixWorld).invert();\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    HighPrecisionLineMaterial,\n    HighPrecisionLineMaterialParameters,\n    HighPrecisionPointMaterial,\n    isHighPrecisionPointMaterial\n} from \"@here/harp-materials\";\nimport {\n    BufferAttribute,\n    BufferGeometry,\n    Camera,\n    Float32BufferAttribute,\n    InterleavedBuffer,\n    InterleavedBufferAttribute,\n    Matrix4,\n    PointsMaterialParameters,\n    ShaderMaterial,\n    Vector3\n} from \"three\";\n\nimport * as HPL from \"./HighPrecisionLines\";\nimport * as HPP from \"./HighPrecisionPoints\";\nimport { triangulateLine } from \"./TriangulateLines\";\n\nexport namespace HighPrecisionUtils {\n    /**\n     * Extract the `float` parts of all vector members, Making this a `Vector3` of `float`.\n     * precision.\n     *\n     * @param v -\n     */\n    export function doubleToFloatVec(v: Vector3): Vector3 {\n        return new Vector3(Math.fround(v.x), Math.fround(v.y), Math.fround(v.z));\n    }\n\n    /**\n     * Convert a `Vector3` to `float` (in place!) Returns the minor float vector, which is the\n     * difference of the double elements and their float counterparts.\n     *\n     * @param v - Vector3 to convert to float IN-PLACE!\n     */\n    export function makeFloatVec(v: Vector3): Vector3 {\n        const majorX = Math.fround(v.x);\n        const majorY = Math.fround(v.y);\n        const majorZ = Math.fround(v.z);\n\n        const minorVec = new Vector3(v.x - majorX, v.y - majorY, v.z - majorZ);\n\n        v.x = Math.fround(majorX);\n        v.y = Math.fround(majorY);\n        v.z = Math.fround(majorZ);\n\n        return minorVec;\n    }\n\n    /**\n     * Describes addtional postion data needed to render high-precision vertices. Created by\n     * [[createHighPrecisionCameraPos]].\n     */\n    export interface HighPrecisionCameraInfo {\n        /**\n         * View Projection matrix of this high-precision camera.\n         */\n        viewProjection: Matrix4;\n\n        /**\n         * Low-order bits of the high-precision camera's position.\n         */\n        eyePosLo: Vector3;\n\n        /**\n         * High-order bits of the high-precision camera's position.\n         */\n        eyePosHi: Vector3;\n    }\n\n    /**\n     * Describes different properties used when creating a [[HighPrecisionLine]] or\n     * a [[HighPrecisionWireFrameLine]].\n     */\n    export interface HighPrecisionLineParams extends HighPrecisionLineMaterialParameters {\n        /**\n         * Width of the rendered line (specified in world units).\n         */\n        lineWidth?: number;\n\n        /**\n         * Add rounded caps to the extremes of the line if set to `true`.\n         */\n        addCircles?: boolean;\n\n        /**\n         * Renders a wireframe line if set to `true`.\n         */\n        wireFrame?: boolean;\n    }\n\n    /**\n     * Calculate high-precision camera position used in vertex shader of high-precision materials.\n     *\n     * @param camera - Camera used to get the high-precision position.\n     * @param objectInverseWorldMatrix - Inverse World Matrix of the rendered\n     *                                   [[HighPrecisionObject]].\n     */\n    export function createHighPrecisionCameraPos(\n        camera: Camera,\n        objectInverseWorldMatrix: Matrix4\n    ): HighPrecisionCameraInfo {\n        const _projScreenMatrix = new Matrix4().copy(camera.projectionMatrix);\n        const mvp = _projScreenMatrix.multiply(camera.matrixWorldInverse);\n        const eyePos = new Vector3(0, 0, 0).applyMatrix4(objectInverseWorldMatrix);\n\n        // split the double float vector into hi and lo parts\n        const eyePosFloat = doubleToFloatVec(eyePos);\n\n        const eyePosLo = doubleToFloatVec(eyePos.sub(eyePosFloat));\n\n        return {\n            viewProjection: mvp,\n            eyePosHi: eyePosFloat,\n            eyePosLo\n        };\n    }\n\n    /**\n     * Updates the high-precision uniform data of a material used to render a\n     * [[HighPrecisionObject]].\n     *\n     * @param object - [[HighPrecisionObject]] used for rendering.\n     * @param camera - Camera used to get the high-precision position.\n     * @param shaderMaterial - Material which uniforms will be updated.\n     */\n    export function updateHpUniforms(\n        object: HPL.HighPrecisionObject,\n        camera: Camera,\n        shaderMaterial: ShaderMaterial\n    ): void {\n        const highPrecisionCameraInfo = createHighPrecisionCameraPos(\n            camera,\n            object.matrixWorldInverse\n        );\n        const mvp = highPrecisionCameraInfo.viewProjection;\n\n        if (shaderMaterial !== undefined && shaderMaterial.isMaterial) {\n            if (\n                shaderMaterial.uniforms &&\n                shaderMaterial.uniforms.u_mvp &&\n                shaderMaterial.uniforms.u_eyepos &&\n                shaderMaterial.uniforms.u_eyepos_lowpart\n            ) {\n                shaderMaterial.uniforms.u_mvp.value = new Float32Array(mvp.elements);\n                shaderMaterial.uniforms.u_eyepos.value = new Float32Array(\n                    highPrecisionCameraInfo.eyePosHi.toArray()\n                );\n                shaderMaterial.uniforms.u_eyepos_lowpart.value = new Float32Array(\n                    highPrecisionCameraInfo.eyePosLo.toArray()\n                );\n            } else {\n                throw Error(\"High pecision material has missing uniforms\");\n            }\n        } else {\n            throw Error(\"High pecision line has no high precision material\");\n        }\n    }\n\n    /**\n     * Assembles the necessary attribute buffers needed to render [[HighPrecisionObject]].\n     *\n     * @param positions - Array of positions.\n     */\n    export function createAttributes(\n        positions: ArrayLike<number> | ArrayLike<Vector3>\n    ): {\n        positionHigh: BufferAttribute;\n        positionLow: BufferAttribute;\n    } {\n        if (positions.length > 0) {\n            const v = positions[0];\n\n            if (v === undefined || v === null) {\n                throw Error(\"Empty element in positions\");\n            }\n\n            const positionVec = new Array<number>();\n            const positionVecLow = new Array<number>();\n\n            const addHPValue = (...values: number[]) => {\n                for (const value of values) {\n                    const major = Math.fround(value);\n                    positionVecLow.push(value - major);\n                    positionVec.push(major);\n                }\n            };\n\n            const addHPVector = (vec: Vector3) => {\n                addHPValue(vec.x, vec.y, vec.z);\n            };\n\n            const vAny = v as any;\n            if (vAny.z !== undefined) {\n                (positions as Vector3[]).forEach(vec => {\n                    addHPVector(vec);\n                });\n            } else {\n                if (positionVec.length % 3 !== 0) {\n                    throw Error(\"Positions must be 3D, not 2D\");\n                }\n                (positions as number[]).forEach((n: number): void => {\n                    addHPValue(n);\n                });\n            }\n\n            return {\n                positionHigh: new Float32BufferAttribute(positionVec, 3),\n                positionLow: new Float32BufferAttribute(positionVecLow, 3)\n            };\n        } else {\n            return {\n                positionHigh: new Float32BufferAttribute([], 3),\n                positionLow: new Float32BufferAttribute([], 3)\n            };\n        }\n    }\n\n    /**\n     * Assembles an interleaved buffer containing the position attribute data for a\n     * [[HighPrecisionObject]].\n     *\n     * @param positions - Array of positions.\n     * @param stride - Stride of the elements in the `positions` array.\n     * @param positionOffset - Offset into the `positions` array.\n     */\n    export function addInterleavedAttributes3(\n        positions: ArrayLike<number>,\n        stride: number,\n        positionOffset = 0\n    ): ArrayLike<number> {\n        const newPositions = new Array<number>();\n\n        const end = positions.length;\n\n        for (let i = 0; i < end; i += stride) {\n            for (let j = 0; j < positionOffset; j++) {\n                newPositions.push(positions[i + j]);\n            }\n\n            const x = positions[i + positionOffset];\n            const y = positions[i + positionOffset + 1];\n            const z = positions[i + positionOffset + 2];\n            const majorX = Math.fround(x);\n            const minorX = x - majorX;\n            const majorY = Math.fround(y);\n            const minorY = y - majorY;\n            const majorZ = Math.fround(z);\n            const minorZ = z - majorZ;\n\n            // insert values in interleaved buffer\n            newPositions.push(majorX, majorY, majorZ, minorX, minorY, minorZ);\n\n            for (let j = positionOffset + 3; j < stride; j++) {\n                newPositions.push(positions[i + j]);\n            }\n        }\n\n        return newPositions;\n    }\n\n    /**\n     * Adds the high-precision position attribute data to a [[HighPrecisionObject]].\n     *\n     * @param object - [[HighPrecisionObject]] which position attribute will be set.\n     * @param positions - Array of positions.\n     */\n    export function setPositions(\n        object: HPL.HighPrecisionObject,\n        positions: ArrayLike<number> | ArrayLike<Vector3>\n    ): number {\n        const attributes = createAttributes(positions);\n\n        object.bufferGeometry.setAttribute(\"position\", attributes.positionHigh);\n        object.bufferGeometry.setAttribute(\"positionLow\", attributes.positionLow);\n\n        return attributes.positionHigh.itemSize;\n    }\n\n    /**\n     * Convert positions from `Array<Vector3>` to `Array<number>`.\n     *\n     * @param positions - Array of positions.\n     */\n    export function convertPositions(\n        positions: ArrayLike<number> | ArrayLike<Vector3>\n    ): { positions: number[] } {\n        if (positions.length <= 0) {\n            return { positions: [] };\n        }\n\n        const v = positions[0];\n\n        if (v === undefined || v === null) {\n            throw Error(\"Empty element in positions\");\n        }\n\n        const vAny = v as any;\n        if (vAny.y === undefined && vAny.z === undefined) {\n            return { positions: positions as number[] };\n        }\n\n        const returnPositions = new Array<number>();\n        (positions as Vector3[]).forEach(vec => {\n            returnPositions.push(vec.x, vec.y, vec.z);\n        });\n\n        return { positions: returnPositions };\n    }\n\n    /**\n     * Creates a [[HighPrecisionLine]] or [[HighPrecisionWireFrameLine]] object.\n     *\n     * @param linePositions - Array of 2D/3D positions.\n     * @param params - Parameters used to configure the created [[HighPrecisionObject]].\n     */\n    export function createLine(\n        linePositions: ArrayLike<number>,\n        params: HighPrecisionLineParams\n    ): HPL.HighPrecisionLine | HPL.HighPrecisionWireFrameLine {\n        const lineWidth = params.lineWidth !== undefined ? params.lineWidth : 5;\n        const addCircles = params.addCircles !== undefined ? params.addCircles : false;\n        const wireFrame = params.wireFrame !== undefined ? params.wireFrame : false;\n\n        const positions: number[] = [];\n        const indices: number[] = [];\n\n        triangulateLine(linePositions, lineWidth, positions, indices, addCircles);\n\n        const hpLineGeometry = new BufferGeometry();\n        const hpPositions = addInterleavedAttributes3(positions, 3);\n        const buffer = new InterleavedBuffer(new Float32Array(hpPositions), 6);\n\n        const positionAttribute = new InterleavedBufferAttribute(buffer, 3, 0, false);\n        const positionLowAttribute = new InterleavedBufferAttribute(buffer, 3, 3, false);\n\n        hpLineGeometry.setAttribute(\"position\", positionAttribute);\n        hpLineGeometry.setAttribute(\"positionLow\", positionLowAttribute);\n        hpLineGeometry.setIndex(new BufferAttribute(new Uint32Array(indices), 1));\n\n        const hpSolidMaterial = new HighPrecisionLineMaterial(params);\n\n        const lineObject = wireFrame\n            ? new HPL.HighPrecisionWireFrameLine(hpLineGeometry, hpSolidMaterial)\n            : new HPL.HighPrecisionLine(hpLineGeometry, hpSolidMaterial);\n\n        lineObject.setupForRendering();\n\n        return lineObject;\n    }\n\n    /**\n     * Creates a group of [[HighPrecisionPoints]].\n     *\n     * @param pointPositions - Array of 2D/3D positions.\n     * @param materialParameters - Parameters used to configure the material used to render the\n     * created [[HighPrecisionPoints]].\n     */\n    export function createPoints(\n        pointPositions: ArrayLike<number>,\n        materialParameters?: PointsMaterialParameters | HighPrecisionPointMaterial\n    ): HPP.HighPrecisionPoints {\n        const indices: number[] = [];\n\n        for (let i = 0; i < pointPositions.length; i++) {\n            indices.push(indices.length / 3);\n        }\n\n        const hpPointsGeometry = new BufferGeometry();\n\n        const hpPointsMaterial = isHighPrecisionPointMaterial(materialParameters)\n            ? materialParameters\n            : new HighPrecisionPointMaterial(materialParameters);\n\n        const pointsObject = new HPP.HighPrecisionPoints(hpPointsGeometry, hpPointsMaterial);\n\n        setPositions(pointsObject, pointPositions);\n\n        pointsObject.setupForRendering();\n\n        return pointsObject;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Projection } from \"@here/harp-geoutils\";\nimport { assert } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\n// Preallocate temp variables used during line generation.\nconst tmpV = new THREE.Vector3();\nconst tmpNormal = new THREE.Vector3();\nconst tmpTangent0 = new THREE.Vector3();\nconst tmpTangent1 = new THREE.Vector3();\nconst tmpBitangent = new THREE.Vector3();\nconst SEGMENT_OFFSET = 0.1;\n\n/**\n * Describes vertex attribute parameters of interleaved buffer.\n */\ninterface VertexAttributeDescriptor {\n    name: string;\n    itemSize: number;\n    offset: number;\n}\n\ninterface VertexDescriptor {\n    attributes: VertexAttributeDescriptor[];\n    stride: number;\n}\n\n/**\n * Declares all the vertex attributes used for rendering a line using the [[SolidLineMaterial]].\n */\n\n/** Base line vertex attributes. */\nconst LINE_VERTEX_ATTRIBUTES: VertexDescriptor = {\n    attributes: [\n        // The \"extrusionCoord\" is a vec4 which represents:\n        // xy: Extrusion coordinates\n        // sign(xy): Extrusion direction\n        // z: Line length\n        { name: \"extrusionCoord\", itemSize: 3, offset: 0 },\n        { name: \"position\", itemSize: 3, offset: 3 },\n        { name: \"tangent\", itemSize: 3, offset: 6 },\n        // HARP-17373: Original uniform name 'bitangent' due to shader compilation errors with Metal\n        // in Safari 15 on MacOS Monterrey and iPadOS 15.\n        { name: \"biTangent\", itemSize: 4, offset: 9 }\n    ],\n    stride: 13\n};\n\n/** Optional normal and uv coordinates. */\nconst NORMAL_UV_VERTEX_ATTRIBUTES: VertexDescriptor = {\n    attributes: [\n        { name: \"uv\", itemSize: 2, offset: LINE_VERTEX_ATTRIBUTES.stride },\n        { name: \"normal\", itemSize: 3, offset: LINE_VERTEX_ATTRIBUTES.stride + 2 }\n    ],\n    stride: 5\n};\n\n/** Base line vertex attributes plus normals and uv coordinates. */\nconst LINE_VERTEX_ATTRIBUTES_NUV: VertexDescriptor = {\n    attributes: [...LINE_VERTEX_ATTRIBUTES.attributes, ...NORMAL_UV_VERTEX_ATTRIBUTES.attributes],\n    stride: LINE_VERTEX_ATTRIBUTES.stride + NORMAL_UV_VERTEX_ATTRIBUTES.stride\n};\n\n/**\n * Declares all the vertex attributes used for rendering a line using the\n * [[HighPrecisionLineMaterial]].\n */\nconst HP_LINE_VERTEX_ATTRIBUTES: VertexDescriptor = {\n    attributes: [\n        { name: \"extrusionCoord\", itemSize: 2, offset: 0 },\n        { name: \"position\", itemSize: 3, offset: 2 },\n        { name: \"positionLow\", itemSize: 3, offset: 5 },\n        { name: \"tangent\", itemSize: 3, offset: 8 },\n        // HARP-17373: Original uniform name 'bitangent' due to shader compilation errors with Metal\n        // in Safari 15 on MacOS Monterrey and iPadOS 15.\n        { name: \"biTangent\", itemSize: 4, offset: 11 }\n    ],\n    stride: 15\n};\n\n/** High precision line vertex attributes plus normals and uv coordinates. */\nconst HP_LINE_VERTEX_ATTRIBUTES_NUV: VertexDescriptor = {\n    attributes: [\n        ...HP_LINE_VERTEX_ATTRIBUTES.attributes,\n        ...NORMAL_UV_VERTEX_ATTRIBUTES.attributes\n    ],\n    stride: HP_LINE_VERTEX_ATTRIBUTES.stride + NORMAL_UV_VERTEX_ATTRIBUTES.stride\n};\n\n/**\n * Class that holds the vertex and index attributes for a [[Lines]] object.\n */\nexport class LineGeometry {\n    vertices: number[] = [];\n    vertexColors: number[] = [];\n    indices: number[] = [];\n}\n\nfunction getVertexDescriptor(hasNormalsAndUvs: boolean, highPrecision: boolean): VertexDescriptor {\n    if (highPrecision) {\n        return hasNormalsAndUvs ? HP_LINE_VERTEX_ATTRIBUTES_NUV : HP_LINE_VERTEX_ATTRIBUTES;\n    } else {\n        return hasNormalsAndUvs ? LINE_VERTEX_ATTRIBUTES_NUV : LINE_VERTEX_ATTRIBUTES;\n    }\n}\n\n/**\n * Creates a [[LineGeometry]] object out of a polyline.\n *\n * @param center - Center of the polyline.\n * @param polyline - Array of `numbers` describing a polyline.\n * @param offsets - Array of `numbers` representing line segment offsets.\n * @param uvs - Array of `numbers` representing texture coordinates.\n * @param colors - Array of `numbers` describing a polyline's colors.\n * @param geometry - [[LineGeometry]] object used to store the vertex and index attributes.\n * @param highPrecision - If `true` will create high-precision vertex information.\n */\nexport function createLineGeometry(\n    center: THREE.Vector3,\n    polyline: ArrayLike<number>,\n    projection: Projection,\n    offsets?: ArrayLike<number>,\n    uvs?: ArrayLike<number>,\n    colors?: ArrayLike<number>,\n    geometry = new LineGeometry(),\n    highPrecision: boolean = false\n): LineGeometry {\n    if (polyline.length === 0) {\n        return geometry;\n    }\n\n    const stride = getVertexDescriptor(uvs !== undefined, highPrecision).stride;\n\n    const pointCount = polyline.length / 3;\n    const segments = new Array<number>(pointCount);\n    const tangents = new Array<number>(polyline.length - 3);\n    const baseVertex = geometry.vertices.length / stride;\n\n    const hasSegmentOffsets = offsets !== undefined && offsets.length > 0;\n    const hasTexCoords = uvs !== undefined && uvs.length > 0;\n    const vertexColors = colors !== undefined && colors.length && polyline.length;\n\n    assert(!hasSegmentOffsets || offsets!.length === pointCount);\n    assert(!hasTexCoords || uvs!.length / 2 === pointCount);\n    assert(!vertexColors || colors!.length === polyline.length);\n\n    // Compute segments and tangents.\n    let sum = SEGMENT_OFFSET;\n    segments[0] = sum;\n    for (let i = 0; i < pointCount - 1; ++i) {\n        let sqrLength = 0;\n        for (let j = 0; j < 3; ++j) {\n            const d = polyline[(i + 1) * 3 + j] - polyline[i * 3 + j];\n            tangents[i * 3 + j] = d;\n            sqrLength += d * d;\n        }\n        const len = Math.sqrt(sqrLength);\n        sum = sum + len;\n        segments[i + 1] = sum;\n    }\n\n    const lineCoverage = hasSegmentOffsets\n        ? Math.abs(offsets![offsets!.length - 1] - offsets![0])\n        : 1.0;\n    const lineLength = segments[segments.length - 1] / lineCoverage;\n\n    // Override the segments if offsets are explicitly provided.\n    if (hasSegmentOffsets) {\n        for (let i = 0; i < pointCount; ++i) {\n            segments[i] = offsets![i] * lineLength + SEGMENT_OFFSET;\n        }\n    }\n\n    // Check if we're working with a closed line.\n    let isClosed = true;\n    for (let j = 0; j < 3; ++j) {\n        isClosed = isClosed && polyline[j] === polyline[polyline.length - 3 + j];\n    }\n\n    const tmpVertices: number[] = [];\n\n    const addVertexPair = (\n        i: number,\n        T1: number,\n        T2: number,\n        segment: number,\n        extrusionCoord: number\n    ) => {\n        tmpVertices.length = 0;\n\n        // Store the segment and extrusionCoord attributes.\n        geometry.vertices.push(segment, extrusionCoord * -1, lineLength);\n        tmpVertices.push(segment, extrusionCoord * 1, lineLength);\n\n        // Store the position attribute (component-dependant).\n        for (let j = 0; j < 3; ++j) {\n            if (!highPrecision) {\n                geometry.vertices.push(polyline[i * 3 + j]);\n                tmpVertices.push(polyline[i * 3 + j]);\n            } else {\n                const highComp = Math.fround(polyline[i * 3 + j]);\n                const lowComp = polyline[i * 3 + j] - highComp;\n                geometry.vertices.push(highComp, lowComp);\n                tmpVertices.push(highComp, lowComp);\n            }\n            tmpNormal.setComponent(j, polyline[i * 3 + j]);\n        }\n\n        // Store the bitangent attribute (component-dependant).\n        for (let j = 0; j < 3; ++j) {\n            tmpTangent0.setComponent(j, tangents[T1 + j]);\n            tmpTangent1.setComponent(j, tangents[T2 + j]);\n        }\n        tmpTangent0.normalize();\n        geometry.vertices.push(tmpTangent0.x, tmpTangent0.y, tmpTangent0.z);\n        tmpVertices.push(tmpTangent0.x, tmpTangent0.y, tmpTangent0.z);\n        tmpNormal.add(center); // tmpNormal contains world position\n        projection.surfaceNormal(tmpNormal, tmpNormal);\n        const angle = computeBitangent(\n            tmpNormal,\n            tmpTangent0,\n            tmpTangent1.normalize(),\n            tmpBitangent\n        );\n        geometry.vertices.push(tmpBitangent.x, tmpBitangent.y, tmpBitangent.z, angle);\n        tmpVertices.push(tmpBitangent.x, tmpBitangent.y, tmpBitangent.z, angle);\n\n        if (hasTexCoords) {\n            // uvs\n            geometry.vertices.push(uvs![i * 2], uvs![i * 2 + 1]);\n            tmpVertices.push(uvs![i * 2], uvs![i * 2 + 1]);\n            // normals\n            geometry.vertices.push(tmpNormal.x, tmpNormal.y, tmpNormal.z);\n            tmpVertices.push(tmpNormal.x, tmpNormal.y, tmpNormal.z);\n        }\n\n        geometry.vertices.push(...tmpVertices);\n\n        // Add vertex colors (if supplied).\n        if (vertexColors) {\n            geometry.vertexColors.push(colors![i * 3], colors![i * 3 + 1], colors![i * 3 + 2]);\n            geometry.vertexColors.push(colors![i * 3], colors![i * 3 + 1], colors![i * 3 + 2]);\n        }\n    };\n\n    for (let i = 0; i < pointCount; ++i) {\n        // Retrieve the per-point tangents.\n        const T1 = isClosed && i === 0 ? tangents.length - 3 : Math.max(0, i - 1) * 3;\n        const T2 = isClosed && i === pointCount - 1 ? 0 : Math.min(i * 3, tangents.length - 3);\n\n        // Process v0 and v1.\n        if (i > 0) {\n            addVertexPair(i, T1, T2, segments[i - 1], segments[i]);\n        }\n\n        // Process v2 and v3.\n        if (i + 1 < pointCount) {\n            addVertexPair(\n                i,\n                T1,\n                T2,\n                segments[Math.min(i, segments.length - 1)] * -1,\n                segments[Math.min(i + 1, segments.length - 1)]\n            );\n        }\n    }\n\n    // Store the triangle indices in the final index buffer.\n    for (let i = 0; i < pointCount - 1; ++i) {\n        const base = baseVertex + i * 4;\n        geometry.indices.push(base, base + 1, base + 2, base + 2, base + 1, base + 3);\n    }\n\n    return geometry;\n}\n\n/**\n * Creates a [[LineGeometry]] object out of a polyline.\n *\n * @param polyline - Array of `numbers` describing a polyline.\n * @param colors - Array of `numbers` describing a polyline's colors.\n * @param geometry - [[LineGeometry]] object used to store the vertex and index attributes.\n */\nexport function createSimpleLineGeometry(\n    polyline: ArrayLike<number>,\n    colors?: ArrayLike<number>,\n    geometry = new LineGeometry()\n): LineGeometry {\n    if (polyline.length === 0) {\n        return geometry;\n    }\n\n    const pointCount = polyline.length / 3;\n    let index = geometry.vertices.length / 3;\n\n    const vertexColors = colors !== undefined && colors.length && polyline.length;\n\n    for (let i = 0; i < pointCount; ++i, index++) {\n        if (i > 0) {\n            geometry.indices.push(index);\n        }\n        if (i < pointCount - 1) {\n            geometry.indices.push(index);\n        }\n        for (let j = 0; j < 3; ++j) {\n            geometry.vertices.push(polyline[i * 3 + j]);\n            if (vertexColors) {\n                geometry.vertexColors.push(colors![i * 3 + j]);\n            }\n        }\n    }\n\n    return geometry;\n}\n\n/**\n * Class used to render groups (or batches) of width-variable lines (in the same tile).\n */\nexport class LineGroup {\n    /**\n     * Adds all the attribute data needed to a [[BufferGeometry]] object for rendering `Lines`.\n     *\n     * @param vertices - Array of vertex attributes.\n     * @param colors - Array of vertex colors.\n     * @param indices - Array of vertex indices.\n     * @param geometry - [[BufferGeometry]] object which will store all the `Lines` attribute data.\n     * @param hasNormalsAnUvs - Whether vertices have normal and uv coordinates as attributes.\n     * @param highPrecision - If `true` will create high-precision vertex information.\n     * @param isSimple - `true` to create simple (nonsolid, nonextruded) lines. Defaults to `false`.\n     */\n    static createGeometry(\n        vertices: ArrayLike<number>,\n        colors: ArrayLike<number>,\n        indices: ArrayLike<number>,\n        geometry: THREE.BufferGeometry,\n        hasNormalsAndUvs: boolean = false,\n        highPrecision = false,\n        isSimple = false\n    ): THREE.BufferGeometry {\n        if (isSimple) {\n            geometry.setAttribute(\n                \"position\",\n                new THREE.BufferAttribute(new Float32Array(vertices), 3)\n            );\n            if (colors.length === vertices.length) {\n                geometry.setAttribute(\n                    \"color\",\n                    new THREE.BufferAttribute(new Float32Array(colors), 3)\n                );\n            }\n            geometry.setIndex(new THREE.BufferAttribute(new Uint32Array(indices), 1));\n            return geometry;\n        } else {\n            const vertexDescriptor = getVertexDescriptor(hasNormalsAndUvs, highPrecision);\n\n            const buffer = new THREE.InterleavedBuffer(\n                new Float32Array(vertices),\n                vertexDescriptor.stride\n            );\n            vertexDescriptor.attributes.forEach(descr => {\n                const attribute = new THREE.InterleavedBufferAttribute(\n                    buffer,\n                    descr.itemSize,\n                    descr.offset,\n                    false\n                );\n                geometry.setAttribute(descr.name, attribute);\n            });\n            if (colors.length === vertices.length) {\n                geometry.setAttribute(\n                    \"color\",\n                    new THREE.BufferAttribute(new Float32Array(colors), 3)\n                );\n            }\n\n            geometry.setIndex(new THREE.BufferAttribute(new Uint32Array(indices), 1));\n\n            return geometry;\n        }\n    }\n\n    private readonly m_geometry: LineGeometry;\n\n    constructor(\n        readonly hasNormalsAndUvs: boolean = false,\n        readonly highPrecision: boolean = false,\n        readonly isSimple: boolean = false\n    ) {\n        this.m_geometry = new LineGeometry();\n    }\n\n    /**\n     * Clears the list of line strips.\n     */\n    clear() {\n        this.m_geometry.vertices = [];\n        this.m_geometry.vertexColors = [];\n        this.m_geometry.indices = [];\n    }\n\n    /**\n     * Add the given points to this line group.\n     *\n     * @param center - World center of the provided points.\n     * @param points - Sequence of (x,y,z) coordinates.\n     * @param offsets - Sequence of line segment offsets.\n     * @param uvs - Sequence of (u,v) texture coordinates.\n     * @param colors - Sequence of (r,g,b) color components.\n     */\n    add(\n        center: THREE.Vector3,\n        points: ArrayLike<number>,\n        projection: Projection,\n        offsets?: ArrayLike<number>,\n        uvs?: ArrayLike<number>,\n        colors?: ArrayLike<number>\n    ): this {\n        if (!this.isSimple) {\n            assert(!this.hasNormalsAndUvs || uvs !== undefined);\n            createLineGeometry(\n                center,\n                points,\n                projection,\n                offsets,\n                uvs,\n                colors,\n                this.m_geometry,\n                this.highPrecision\n            );\n        } else {\n            createSimpleLineGeometry(points, colors, this.m_geometry);\n        }\n        return this;\n    }\n\n    /**\n     * Returns the list of vertices.\n     */\n    get vertices(): number[] {\n        return this.m_geometry.vertices;\n    }\n\n    /**\n     * Returns the list of vertex colors.\n     */\n    get vertexColors(): number[] {\n        return this.m_geometry.vertexColors;\n    }\n\n    /**\n     * Returns the list of indices.\n     */\n    get indices(): number[] {\n        return this.m_geometry.indices;\n    }\n\n    /**\n     * Returns the list of [[VertexAttributeDescriptor]]s.\n     */\n    get vertexAttributes(): VertexAttributeDescriptor[] {\n        return getVertexDescriptor(this.hasNormalsAndUvs, this.highPrecision).attributes;\n    }\n\n    /**\n     * Returns the vertex attribute stride.\n     */\n    get stride(): number {\n        return getVertexDescriptor(this.hasNormalsAndUvs, this.highPrecision).stride;\n    }\n\n    /**\n     * Creates a three.js geometry.\n     */\n    createGeometry(geometry?: THREE.BufferGeometry): THREE.BufferGeometry {\n        if (geometry === undefined) {\n            geometry = new THREE.BufferGeometry();\n        }\n        return LineGroup.createGeometry(\n            this.m_geometry.vertices,\n            this.m_geometry.vertexColors,\n            this.m_geometry.indices,\n            geometry,\n            this.hasNormalsAndUvs,\n            this.highPrecision\n        );\n    }\n}\n\nfunction computeBitangent(\n    n: THREE.Vector3,\n    t0: THREE.Vector3,\n    t1: THREE.Vector3,\n    bt: THREE.Vector3\n): number {\n    let angle = 0;\n    if (!t0.equals(t1)) {\n        angle = Math.acos(t0.dot(t1)) * Math.sign(n.dot(tmpV.copy(t0).cross(t1)));\n        if (Number.isNaN(angle)) {\n            angle = 0;\n        }\n    }\n    bt.copy(t0).add(t1).normalize().cross(n).normalize();\n    return angle;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nconst UNIT_Z = new THREE.Vector3(0, 0, 1);\nconst POINTS = [0, 1, 2, 1, 3, 2];\nconst BEVEL_POINTS = [0, 1, 3, 3, 1, 2, 0, 3, 4, 5, 4, 3];\n\nconst SECTORS_IN_CIRCLE = 8;\nconst STEP = Math.PI / SECTORS_IN_CIRCLE;\n\n/**\n * Adds a half-circle geometry to original line\n *\n * @param x - The line end X (used as circle center X)\n * @param y - The line end Y (used as circle center Y)\n * @param lineAngle - The cap incline angle\n * @param radius - The cap (circle) radius\n * @param vertices - The input vertex buffer (cap vertices are added there)\n * @param indices - The input index buffer (cap indices are is added there)\n */\nfunction addCircle(\n    x: number,\n    y: number,\n    lineAngle: number,\n    radius: number,\n    vertices: number[],\n    indices: number[]\n) {\n    const baseVertex = vertices.length / 3;\n\n    // Add cap center to vertices directly (it doesn't need rotation)\n    vertices.push(x, y, 0);\n\n    for (let i = 0; i < SECTORS_IN_CIRCLE + 1; ++i) {\n        const angle = STEP * i + Math.PI / 2 + lineAngle; // Start angle is -90deg\n        vertices.push(x + radius * Math.cos(angle), y + radius * Math.sin(angle), 0);\n\n        indices.push(\n            baseVertex,\n            baseVertex + i + 1,\n            baseVertex + ((i + 1) % (SECTORS_IN_CIRCLE + 1)) + 1\n        );\n    }\n}\n\n/**\n * Returns the number of points in circle used for caps.\n *\n * @param lineWidth - Width of line.\n */\nexport function numCirclePoints(lineWidth: number): number {\n    return SECTORS_IN_CIRCLE + 1;\n}\n\n/**\n * Create a triangle mesh from the given polyline.\n *\n * @param points - Sequence of (x,y,z) coordinates.\n * @param width - The width of the extruded line.\n * @param vertices - The output vertex buffer.\n * @param indices - The output index buffer.\n * @param startWithCircle - `true` if the line should start will a circle.\n * @param endWithCircle - `true` if the line should end with a circle.\n */\nexport function triangulateLine(\n    points: ArrayLike<number>,\n    width: number,\n    vertices: number[],\n    indices: number[],\n    startWithCircle = true,\n    endWithCircle = startWithCircle\n) {\n    if (points.length < 3) {\n        return;\n    }\n\n    // This vector is used for computing cap angle\n    const angleVec = new THREE.Vector2();\n\n    if (startWithCircle) {\n        // Define lineAngle as (direction - origin) vector angle to X axis\n        const lineAngle =\n            points.length !== 3\n                ? angleVec.set(points[3] - points[0], points[4] - points[1]).angle()\n                : 0;\n\n        addCircle(points[0], points[1], lineAngle, width, vertices, indices);\n    }\n\n    const baseVertex = vertices.length / 3;\n\n    // bt = Bitangent (i.e. extrusion vector)\n    const prevBt = new THREE.Vector3();\n    const p = new THREE.Vector3(); // current point\n    const n = new THREE.Vector3(); // next point\n    const bt = new THREE.Vector3();\n    const averageBt = new THREE.Vector3();\n    const p0 = new THREE.Vector3();\n    const p1 = new THREE.Vector3();\n    const p2 = new THREE.Vector3();\n    const p3 = new THREE.Vector3();\n\n    const N = points.length / 3;\n\n    let vertexOffset = 0;\n    for (let i = 0; i < N; ++i) {\n        let useBevel = false;\n        p.set(points[i * 3], points[i * 3 + 1], points[i * 3 + 2]);\n\n        if (i + 1 < N) {\n            n.set(points[(i + 1) * 3], points[(i + 1) * 3 + 1], points[(i + 1) * 3 + 2]);\n\n            bt.copy(n).sub(p).normalize().cross(UNIT_Z);\n\n            averageBt.copy(bt);\n\n            if (i > 0) {\n                averageBt.add(prevBt).multiplyScalar(1.0 - 0.5 * bt.dot(prevBt));\n\n                useBevel = prevBt.angleTo(bt) > Math.PI / 2;\n\n                if (useBevel) {\n                    const inclineWidth = width / Math.cos(bt.angleTo(prevBt) / 2);\n\n                    p0.copy(bt).add(prevBt).normalize().multiplyScalar(-inclineWidth).add(p);\n\n                    p1.copy(prevBt).multiplyScalar(width).add(p);\n\n                    // p2 is used for \"miter\" connections\n                    p2.copy(bt).add(prevBt).normalize().multiplyScalar(inclineWidth).add(p);\n\n                    p3.copy(bt).multiplyScalar(width).add(p);\n                }\n            }\n\n            if (useBevel) {\n                vertices.push(\n                    p0.x,\n                    p0.y,\n                    p0.z,\n                    p1.x,\n                    p1.y,\n                    p1.z,\n                    p2.x,\n                    p2.y,\n                    p2.z,\n                    p3.x,\n                    p3.y,\n                    p3.z\n                );\n            } else {\n                p0.copy(averageBt).multiplyScalar(-width).add(p);\n\n                p1.copy(averageBt).multiplyScalar(width).add(p);\n\n                vertices.push(p0.x, p0.y, p0.z, p1.x, p1.y, p1.z);\n            }\n\n            prevBt.copy(bt);\n        } else {\n            p0.copy(prevBt).multiplyScalar(-width).add(p);\n\n            p1.copy(prevBt).multiplyScalar(width).add(p);\n\n            vertices.push(p0.x, p0.y, p0.z, p1.x, p1.y, p1.z);\n        }\n\n        if (i !== N - 1) {\n            (useBevel ? BEVEL_POINTS : POINTS).forEach(o =>\n                indices.push(baseVertex + vertexOffset + o)\n            );\n            vertexOffset += useBevel ? 4 : 2;\n        }\n    }\n\n    if (endWithCircle) {\n        const lineAngle =\n            points.length !== 2\n                ? angleVec\n                      .set(\n                          points[(N - 3) * 3] - points[(N - 2) * 3],\n                          points[(N - 3) * 3 + 1] - points[(N - 2) * 3 + 1]\n                      )\n                      .angle()\n                : Math.PI;\n\n        addCircle(\n            points[(N - 2) * 3],\n            points[(N - 2) * 3 + 1],\n            lineAngle,\n            width,\n            vertices,\n            indices\n        );\n    }\n}\n\n/**\n * Reconstruct the original points of a line from the vertices of the triangulated line.\n *\n * @param inBuffer - Buffer with vertices.\n * @param startOffset - Start index, will differ from `0` if the line has caps.\n * @returns Buffer containing the original points of the triangulated line.\n */\nexport function reconstructLine(inBuffer: Float32Array, startOffset: number): Float32Array {\n    const outBuffer = new Float32Array(inBuffer.length / 2);\n\n    for (let i = startOffset * 3, i2 = i * 2; i < outBuffer.length; i += 3, i2 += 6) {\n        outBuffer[i] = inBuffer[i2] + (inBuffer[i2 + 3] - inBuffer[i2]) * 0.5;\n        outBuffer[i + 1] = inBuffer[i2 + 1] + (inBuffer[i2 + 3 + 1] - inBuffer[i2 + 1]) * 0.5;\n        outBuffer[i + 2] = inBuffer[i2 + 2] + (inBuffer[i2 + 3 + 2] - inBuffer[i2 + 2]) * 0.5;\n    }\n    return outBuffer;\n}\n\n/**\n * Extract the line width from a triangulated line.\n *\n * @param inBuffer - Array of vertex elements of a triangulated line.\n * @param startIndex - Start index, will differ from `0` if the line has caps.\n */\nexport function reconstructLineWidth(inBuffer: Float32Array, startIndex: number): number {\n    const xd = inBuffer[startIndex * 2 + 3] - inBuffer[startIndex * 2];\n    const yd = inBuffer[startIndex * 2 + 3 + 1] - inBuffer[startIndex * 2 + 1];\n    const zd = inBuffer[startIndex * 2 + 3 + 2] - inBuffer[startIndex * 2 + 2];\n\n    return Math.sqrt(xd * xd + yd * yd + zd * zd) * 0.5;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * LRU cache.\n *\n * @remarks\n *\n * @packageDocumentation\n */\n\nexport * from \"./lib/LRUCache\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { assert } from \"@here/harp-utils\";\n\n/** @hidden */\nexport class Entry<Key, Value> {\n    constructor(\n        public key: Key,\n        public value: Value,\n        public size: number,\n        public newer: Entry<Key, Value> | null,\n        public older: Entry<Key, Value> | null\n    ) {}\n}\n\n/**\n * Fixed size cache that evicts its entries in least-recently-used order when it overflows.\n * Modeled after standard JavaScript `Map` otherwise.\n */\nexport class LRUCache<Key, Value> {\n    /**\n     * Optional callback that is called on every item that is evicted from the cache.\n     *\n     * **Note**: This callback is not called when an item is explicitly deleted from the map via\n     * [[delete]] or [[clear]].\n     */\n    evictionCallback?: (key: Key, value: Value) => void;\n\n    /**\n     * Optional callback that is called on every item that should be evicted from the cache to\n     * determine if it can be removed, or should be locked in the cache.\n     *\n     * It returns `true` if the item can be removed from cache, `false` otherwise. Locking items in\n     * the cache should be a temporary measure, since if the cache is filled with non-evictable\n     * items only, it may grow beyond its capacity.\n     *\n     * **Note**: This callback is not called when an item is explicitly deleted from the map via\n     * [[delete]] or [[clear]].\n     */\n    canEvict?: (key: Key, value: Value) => boolean;\n    private m_capacity: number;\n    private m_size = 0;\n\n    /**\n     * The internal map object that keeps the key-value pairs and their order.\n     */\n    private readonly m_map = new Map<Key, Entry<Key, Value>>();\n\n    /**\n     * The newest entry, i.e. the most recently used item.\n     */\n    private m_newest: Entry<Key, Value> | null = null;\n\n    /**\n     * The oldest entry, i.e. the least recently used item.\n     */\n    private m_oldest: Entry<Key, Value> | null = null;\n\n    /**\n     * A function determining the size per element.\n     */\n    private m_sizeFunction: (v: Value) => number;\n\n    /**\n     * Creates a new instance of `LRUCache`.\n     *\n     * The optional [[sizeFunction]] can be used to fine tune the memory consumption of all cached\n     * elements, thus [[cacheCapacity]] means then memory used (in MBs). Otherwise, if\n     * [[sizeFunction]] is not specified, the [[cacheCapacity]] accounts for the maximum\n     * number of elements stored.\n     *\n     * @param cacheCapacity - Number used to configure the maximum cache size, may express\n     * number of entries or memory consumed in megabytes depending on [[sizeFunction]].\n     * @param sizeFunction - A function determining the size per element.\n     */\n    constructor(cacheCapacity: number, sizeFunction: (v: Value) => number = () => 1) {\n        this.m_capacity = cacheCapacity;\n        this.m_sizeFunction = sizeFunction;\n    }\n\n    /**\n     * Iterates over all items from the most recently used item to the least recently used one.\n     *\n     * **Note**: Results are undefined if the entire cache is modified during iteration. You may\n     * although modify the current element in [[callbackfn]] function.\n     *\n     * @param callbackfn - The callback to call for each item.\n     * @param thisArg - Optional this argument for the callback.\n     */\n    forEach(\n        callbackfn: (value: Value, key: Key, map: LRUCache<Key, Value>) => void,\n        thisArg?: any\n    ): void {\n        let entry = this.m_newest;\n        while (entry !== null) {\n            const older = entry.older;\n            callbackfn.call(thisArg, entry.value, entry.key, this);\n            entry = older;\n        }\n    }\n\n    /**\n     * The size of the cache, i.e. the sum of all the sizes of all the objects in the cache.\n     *\n     * @returns The size of the cache.\n     */\n    get size(): number {\n        return this.m_size;\n    }\n\n    /**\n     * Returns the maximum capacity of the cache, i.e. the maximum number of elements this cache\n     * can contain or the total amount of memory that may be consumed by cache if element size\n     * function was specified in cache c-tor.\n     *\n     * @returns The capacity of the cache.\n     */\n    get capacity(): number {\n        return this.m_capacity;\n    }\n\n    /**\n     * @deprecated - DO NOT USE. Will be removed in future versions.\n     *\n     * Returns the internal map object that keeps the key-value pairs and their order.\n     *\n     * @returns The internal map object.\n     */\n    get map(): Map<Key, Entry<Key, Value>> {\n        // ### TODO - remove me. Cache must not expose its internal object,\n        // modifications to it are fatal for the internal state machine.\n        return this.m_map;\n    }\n\n    /**\n     * Returns the newest entry in the cache.\n     *\n     * @returns Newest entry in the cache.\n     */\n    get newest(): Entry<Key, Value> | null {\n        return this.m_newest;\n    }\n\n    /**\n     * Returns the oldest entry in the cache.\n     *\n     * Note: Does not promote the oldest item as most recently used item.\n     *\n     * @returns Oldest entry in the cache.\n     */\n    get oldest(): Entry<Key, Value> | null {\n        return this.m_oldest;\n    }\n\n    /**\n     * Resets the capacity of this cache. If `newCapacity` is smaller than the current cache size,\n     * all items will be evicted until the cache shrinks to `newCapacity`.\n     *\n     * @param newCapacity - The new capacity of this cache.\n     */\n    setCapacity(newCapacity: number): void {\n        this.m_capacity = newCapacity;\n        this.evict();\n    }\n\n    /**\n     * Resets the cache capacity and function used to measure the element size.\n     *\n     * @param newCapacity - The new capacity masured in units returned from [[sizeMeasure]] funtion.\n     * @param sizeMeasure - Function that defines the size of element, if you want to measure\n     * number of elements only always return 1 from this function (default), you may also\n     * specify own function that measures entries by memory consumed, nubmer of sub-elements, etc.\n     */\n    setCapacityAndMeasure(newCapacity: number, sizeMeasure: (v: Value) => number = () => 1) {\n        this.m_capacity = newCapacity;\n        this.m_sizeFunction = sizeMeasure;\n        this.shrinkToCapacity();\n    }\n\n    /**\n     * Updates the size of all elements in this cache. If their aggregated size is larger than the\n     * capacity, items will be evicted until the cache shrinks to fit the capacity.\n     */\n    shrinkToCapacity(): void {\n        let size = 0;\n        const sizeFunction = this.m_sizeFunction;\n\n        let entry = this.m_newest;\n        while (entry !== null) {\n            const entrySize = sizeFunction(entry.value);\n            entry.size = entrySize;\n            size += entrySize;\n            entry = entry.older;\n        }\n\n        this.m_size = size;\n        this.evict();\n    }\n\n    /**\n     * Inserts or updates a key/value pair in the cache.\n     *\n     * If the key already existed in the cache, it will be updated and promoted to the most recently\n     * used item.\n     *\n     * If the key didn't exist in the cache, it will be inserted as most recently used item. An\n     * eviction of the least recently used item takes place if the cache exceeded its capacity.\n     *\n     * @param key - The key for the key-value pair to insert or update.\n     * @param value - The value for the key-value pair to insert or update.\n     */\n    set(key: Key, value: Value) {\n        const valueSize = this.m_sizeFunction(value);\n        let entry = this.m_map.get(key);\n        if (entry !== undefined) {\n            this.m_size = this.m_size - entry.size + valueSize;\n            entry.value = value;\n            entry.size = valueSize;\n            this.promoteEntry(entry);\n            this.evict();\n        } else {\n            if (valueSize > this.m_capacity) {\n                return; // single item too big to cache\n            }\n\n            entry = new Entry<Key, Value>(key, value, valueSize, null, null);\n            if (this.m_map.size === 0) {\n                this.m_newest = this.m_oldest = entry;\n            } else {\n                assert(this.m_newest !== null);\n                const newest: Entry<Key, Value> = this.m_newest!;\n                entry.older = this.m_newest;\n                newest.newer = entry;\n                this.m_newest = entry;\n            }\n            this.m_map.set(key, entry);\n            this.m_size += valueSize;\n            this.evict();\n        }\n    }\n\n    /**\n     * Looks up key in the cache and returns the associated value.\n     *\n     * @param key - The key to look up.\n     * @returns The associated value, or `undefined` if the key-value pair is not in the cache.\n     */\n    get(key: Key): Value | undefined {\n        const entry = this.m_map.get(key);\n        if (entry === undefined) {\n            return undefined;\n        }\n\n        this.promoteEntry(entry);\n        return entry.value;\n    }\n\n    /**\n     * Test if a key/value pair is in the cache.\n     *\n     * @param key - The key to look up.\n     * @returns `true` if the key-value pair is in the cache, `false` otherwise.\n     */\n    has(key: Key): boolean {\n        return this.m_map.has(key);\n    }\n\n    /**\n     * Clears the cache and removes all stored key-value pairs.\n     *\n     * Does not call the eviction callback. Use [[evictAll]] to clear the cache and call the\n     * eviction callback.\n     */\n    clear(): void {\n        this.m_newest = this.m_oldest = null;\n        this.m_size = 0;\n        this.m_map.clear();\n    }\n\n    /**\n     * Evicts all items from the cache, calling the eviction callback on each item.\n     *\n     * Use [[clear]] to remove all items without calling the eviction callback.\n     */\n    evictAll(): void {\n        const cb = this.evictionCallback;\n        if (cb !== undefined) {\n            this.forEach((value, key) => cb(key, value));\n        }\n        this.clear();\n    }\n\n    /**\n     * Evict selected elements from the cache using [[selector]] function.\n     *\n     * @param selector - The function for selecting elements for eviction.\n     * @param thisArg - Optional _this_ object reference.\n     */\n    evictSelected(selector: (value: Value, key: Key) => boolean, thisArg?: any) {\n        const cb = this.evictionCallback;\n        let entry = this.m_newest;\n        while (entry !== null) {\n            const entryOlder = entry.older;\n            if (selector.call(thisArg, entry.value, entry.key)) {\n                if (cb !== undefined) {\n                    cb(entry.key, entry.value);\n                }\n                this.deleteEntry(entry);\n                this.m_map.delete(entry.key);\n            }\n            entry = entryOlder;\n        }\n    }\n\n    /**\n     * Explicitly removes a key-value pair from the cache.\n     *\n     * **Note**: This is an explicit removal, thus, the eviction callback will not be called.\n     *\n     * @param key - The key of the key-value pair to delete.\n     * @returns `true` if the key-value pair existed and was deleted, `false` otherwise.\n     */\n    delete(key: Key): boolean {\n        const entry = this.m_map.get(key);\n        if (entry === undefined) {\n            return false;\n        }\n        this.deleteEntry(entry);\n        return this.m_map.delete(key);\n    }\n\n    protected evict() {\n        while (this.m_oldest !== null && this.m_size > this.m_capacity) {\n            const evicted = this.evictOldest();\n            if (evicted === undefined) {\n                return;\n            }\n        }\n    }\n\n    protected evictOldest(): Entry<Key, Value> | undefined {\n        assert(this.m_oldest !== null);\n        const oldest = this.m_oldest!;\n        assert(oldest.older === null);\n        let itemToRemove = oldest;\n\n        if (this.canEvict !== undefined) {\n            while (!this.canEvict(itemToRemove.key, itemToRemove.value)) {\n                if (itemToRemove.newer === null) {\n                    return undefined;\n                }\n                itemToRemove = itemToRemove.newer;\n            }\n        }\n\n        if (itemToRemove === oldest) {\n            this.m_oldest = itemToRemove.newer;\n            if (itemToRemove.newer !== null) {\n                assert(itemToRemove.newer.older === itemToRemove);\n                itemToRemove.newer.older = null;\n            }\n        } else {\n            if (itemToRemove.newer !== null) {\n                assert(itemToRemove.newer.older === itemToRemove);\n                itemToRemove.newer.older = itemToRemove.older;\n                if (itemToRemove.older !== null) {\n                    itemToRemove.older.newer = itemToRemove.newer;\n                }\n            } else {\n                return undefined;\n            }\n        }\n\n        const isOk = this.m_map.delete(itemToRemove.key);\n        assert(isOk === true);\n        if (isOk && this.evictionCallback !== undefined) {\n            this.evictionCallback(itemToRemove.key, itemToRemove.value);\n        }\n        this.m_size -= itemToRemove.size;\n        return itemToRemove;\n    }\n\n    private deleteEntry(entry: Entry<Key, Value>): void {\n        if (entry === this.m_newest) {\n            this.m_newest = entry.older;\n        } else if (entry.newer) {\n            entry.newer.older = entry.older;\n        } else {\n            assert(false);\n        }\n\n        if (entry === this.m_oldest) {\n            this.m_oldest = entry.newer;\n        } else if (entry.older) {\n            entry.older.newer = entry.newer;\n        } else {\n            assert(false);\n        }\n\n        this.m_size -= entry.size;\n    }\n\n    private promoteEntry(entry: Entry<Key, Value>): void {\n        if (entry === this.m_newest) {\n            return;\n        } // already newest, nothing to do\n\n        // re-link newer and older items\n        if (entry.newer) {\n            assert(entry.newer.older === entry);\n            entry.newer.older = entry.older;\n        }\n        if (entry.older) {\n            assert(entry.older.newer === entry);\n            entry.older.newer = entry.newer;\n        }\n        if (entry === this.m_oldest) {\n            this.m_oldest = entry.newer;\n        }\n        // re-link ourselves\n        entry.newer = null;\n        entry.older = this.m_newest;\n\n        // finally, set ourselves as the newest entry\n        assert(this.m_newest !== null);\n        const newest = this.m_newest!;\n        assert(newest.newer === null);\n        newest.newer = entry;\n        this.m_newest = entry;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as geoUtils from \"@here/harp-geoutils\";\nimport {\n    CameraUtils,\n    EventDispatcher,\n    MapView,\n    MapViewEventNames,\n    MapViewUtils\n} from \"@here/harp-mapview\";\nimport * as THREE from \"three\";\n\nimport * as utils from \"./Utils\";\n\nenum State {\n    NONE,\n    PAN,\n    ROTATE,\n    ORBIT,\n    TOUCH\n}\n\nexport enum TiltState {\n    Tilted,\n    Down\n}\n\ninterface TouchState {\n    currentTouchPoint: THREE.Vector2;\n    lastTouchPoint: THREE.Vector2;\n    currentWorldPosition: THREE.Vector3;\n    initialWorldPosition: THREE.Vector3;\n}\n\n/**\n * Map interaction events' names.\n */\nexport enum EventNames {\n    Update = \"update\",\n    BeginInteraction = \"begin-interaction\",\n    EndInteraction = \"end-interaction\"\n}\n\n// cast needed to workaround wrong three.js typings.\nconst MAPCONTROL_EVENT: THREE.Event = { type: EventNames.Update } as any;\nconst MAPCONTROL_EVENT_BEGIN_INTERACTION: THREE.Event = {\n    type: EventNames.BeginInteraction\n} as any;\nconst MAPCONTROL_EVENT_END_INTERACTION: THREE.Event = {\n    type: EventNames.EndInteraction\n} as any;\n\n/**\n * The number of user's inputs to consider for panning inertia, to reduce erratic inputs.\n */\nconst USER_INPUTS_TO_CONSIDER = 5;\n\n/**\n * The default maximum for the camera tilt. This value avoids seeing the horizon.\n */\nconst DEFAULT_MAX_TILT_ANGLE = THREE.MathUtils.degToRad(89);\n\n/**\n * Epsilon value to rule out when a number can be considered 0.\n */\nconst EPSILON = 0.01;\n\n/**\n * Maximum duration between start and end touch events to define a finger tap.\n */\nconst MAX_TAP_DURATION = 120;\n\n/**\n * This map control provides basic map-related building blocks to interact with the map. It also\n * provides a default way of handling user input. Currently we support basic mouse interaction and\n * touch input interaction.\n *\n * Mouse interaction:\n *  - Left mouse button + move = Panning the map.\n *  - Right mouse button + move = Orbits the camera around the focus point.\n *  - Middle mouse button + move = Rotating the view. Up down movement changes the pitch. Left/right\n *    movement changes the yaw.\n *  - Mouse wheel = Zooms up and down by one zoom level, zooms on target.\n *\n * Touch interaction:\n *  - One finger = Panning the map.\n *  - Two fingers = Scale, rotate and panning the map.\n *  - Three fingers = Orbiting the map. Up down movements influences the current orbit altitude.\n *    Left/right changes the azimuth.\n */\nexport class MapControls extends EventDispatcher {\n    /**\n     * Creates MapControls object and attaches it specified [[MapView]].\n     *\n     * @param mapView - [[MapView]] object to which MapControls should be attached to.\n     * @param disposeWithMapView - If `true`, an event with MapView is registered to dispose of\n     * `MapControls` if MapView itself is disposed.\n     */\n    static create(mapView: MapView, disposeWithMapView = true) {\n        return new MapControls(mapView, disposeWithMapView);\n    }\n\n    /**\n     * This factor will be applied to the delta of the current mouse pointer position and the last\n     * mouse pointer position: The result then will be used as an offset for the rotation then.\n     * Default value is `0.1`.\n     */\n    rotationMouseDeltaFactor = 0.1;\n\n    /**\n     * This factor will be applied to the delta of the current mouse pointer position and the last\n     * mouse pointer position: The result then will be used as an offset to orbit the camera.\n     * Default value is `0.1`.\n     */\n    orbitingMouseDeltaFactor = 0.1 * THREE.MathUtils.DEG2RAD;\n\n    /**\n     * This factor will be applied to the delta of the current touch pointer position and the last\n     * touch pointer position: The result then will be used as an offset to orbit the camera.\n     * Default value is `0.1`.\n     */\n    orbitingTouchDeltaFactor = 0.1 * THREE.MathUtils.DEG2RAD;\n\n    /**\n     * Set to `true` to enable input handling through this map control, `false` to disable input\n     * handling. Even when disabling input handling, you can manually use the public functions to\n     * change the view to the current map.\n     */\n    enabled = true;\n\n    /**\n     * Set to `true` to enable zooming through these controls, `false` otherwise.\n     */\n    zoomEnabled = true;\n\n    /**\n     * Set to `true` to enable panning through these controls, `false` otherwise.\n     */\n    panEnabled = true;\n\n    /**\n     * Set to `true` to enable tilting through these controls, `false` otherwise.\n     */\n    tiltEnabled = true;\n\n    /**\n     * Set to `true` to enable rotation through this map control, `false` to disable rotation.\n     */\n    rotateEnabled = true;\n\n    /**\n     * Set to `true` to enable an inertia dampening on zooming and panning. `false` cancels inertia.\n     */\n    inertiaEnabled = true;\n\n    /**\n     * Inertia damping duration for the zoom, in seconds.\n     */\n    zoomInertiaDampingDuration = 0.6;\n\n    /**\n     * Inertia damping duration for the panning, in seconds.\n     */\n    panInertiaDampingDuration = 1.0;\n\n    /**\n     * Duration in seconds of the camera animation when the tilt button is clicked. Independent of\n     * inertia.\n     */\n    tiltToggleDuration = 0.5;\n\n    /**\n     * Camera tilt to the target when tilting from the `toggleTilt` public method.\n     */\n    tiltAngle = Math.PI / 4;\n\n    /**\n     * Duration of the animation to reset the camera to looking north, in seconds. Independent of\n     * inertia.\n     */\n    northResetAnimationDuration = 1.5;\n\n    /**\n     * Determines the zoom level delta for single mouse wheel movement. So after each mouse wheel\n     * movement the current zoom level will be added or subtracted by this value.\n     *\n     * The default values are:\n     * - `0.2` when `inertiaEnabled` is `false` - this means that every 5th mouse wheel movement\n     * you will cross a zoom level.\n     * - `0.8`, otherwise.\n     */\n    get zoomLevelDeltaOnMouseWheel(): number {\n        return this.m_zoomLevelDeltaOnMouseWheel !== undefined\n            ? this.m_zoomLevelDeltaOnMouseWheel\n            : this.inertiaEnabled\n            ? 0.8\n            : 0.2;\n    }\n\n    /**\n     * Set the zoom level delta for a single mouse wheel movement.\n     *\n     * **Note**: To reverse the zoom direction, you can provide a negative value.\n     */\n    set zoomLevelDeltaOnMouseWheel(delta: number) {\n        this.m_zoomLevelDeltaOnMouseWheel = delta;\n    }\n\n    /**\n     * @private\n     */\n    private m_zoomLevelDeltaOnMouseWheel?: number;\n\n    /**\n     * Zoom level delta when using the UI controls.\n     */\n    zoomLevelDeltaOnControl = 1.0;\n\n    /**\n     * Determines the minimum zoom level we can zoom to.\n     */\n    minZoomLevel = 0;\n\n    /**\n     * Determines the maximum zoom level we can zoom to.\n     */\n    maxZoomLevel = 20;\n\n    /**\n     * Determines the minimum camera height in meter.\n     */\n    minCameraHeight = 3;\n\n    /**\n     * Zoom level delta to apply when double clicking or double tapping. `0` disables the feature.\n     */\n    zoomLevelDeltaOnDoubleClick = 1.0;\n\n    /**\n     * Double click uses the OS delay through the double click event. Tapping is implemented locally\n     * here in `MapControls` with this duration setting the maximum delay to define a double tap.\n     * The value is in seconds. `300ms` is picked as the default value as jQuery does.\n     */\n    doubleTapTime = 0.3;\n\n    /**\n     * Three.js camera that this controller affects.\n     */\n    readonly camera: THREE.Camera;\n\n    /**\n     * Map's HTML DOM element.\n     */\n    readonly domElement: HTMLCanvasElement;\n\n    private readonly m_currentViewDirection = new THREE.Vector3();\n\n    private readonly m_lastMousePosition = new THREE.Vector2(0, 0);\n    private readonly m_initialMousePosition = new THREE.Vector2(0, 0);\n    private readonly m_mouseDelta = new THREE.Vector2(0, 0);\n\n    private m_needsRenderLastFrame: boolean = true;\n\n    // Internal variables for animating panning (planar + spherical panning).\n    private m_panIsAnimated: boolean = false;\n    private readonly m_panDistanceFrameDelta: THREE.Vector3 = new THREE.Vector3();\n    private m_panAnimationTime: number = 0;\n    private m_panAnimationStartTime: number = 0;\n    private m_lastAveragedPanDistanceOrAngle: number = 0;\n    private m_currentInertialPanningSpeed: number = 0;\n    private readonly m_lastPanVector: THREE.Vector3 = new THREE.Vector3();\n    private readonly m_rotateGlobeQuaternion: THREE.Quaternion = new THREE.Quaternion();\n    private readonly m_lastRotateGlobeAxis: THREE.Vector3 = new THREE.Vector3();\n    private m_lastRotateGlobeAngle: number = 0;\n    private readonly m_lastRotateGlobeFromVector: THREE.Vector3 = new THREE.Vector3();\n    private m_recentPanDistancesOrAngles: [number, number, number, number, number] = [\n        0,\n        0,\n        0,\n        0,\n        0\n    ];\n\n    private m_currentPanDistanceOrAngleIndex: number = 0;\n\n    // Internal variables for animating zoom.\n    private m_zoomIsAnimated: boolean = false;\n    private m_zoomDeltaRequested: number = 0;\n    private readonly m_zoomTargetNormalizedCoordinates: THREE.Vector2 = new THREE.Vector2();\n    private m_zoomAnimationTime: number = 0;\n    private m_zoomAnimationStartTime: number = 0;\n    private m_startZoom: number = 0;\n    private m_targetedZoom?: number;\n    private m_currentZoom?: number;\n\n    // Internal variables for animating tilt.\n    private m_tiltIsAnimated: boolean = false;\n    private m_tiltRequested?: number = undefined;\n    private m_tiltAnimationTime: number = 0;\n    private m_tiltAnimationStartTime: number = 0;\n    private m_startTilt: number = 0;\n    private m_targetedTilt?: number;\n    private m_currentTilt?: number;\n\n    private m_tiltState?: TiltState;\n    private m_state: State = State.NONE;\n\n    private readonly m_tmpVector2: THREE.Vector2 = new THREE.Vector2();\n    private readonly m_tmpVector3: THREE.Vector3 = new THREE.Vector3();\n\n    // Internal variables for animating double tap.\n    private m_tapStartTime: number = 0;\n    private m_lastSingleTapTime: number = 0;\n    private m_fingerMoved: boolean = false;\n    private m_isDoubleTap: boolean = false;\n\n    // Internal variables for animating the movement resetting the north.\n    private m_resetNorthStartTime: number = 0;\n    private m_resetNorthIsAnimated: boolean = false;\n    private m_resetNorthAnimationDuration: number = 0;\n    private m_currentAzimuth: number = 0;\n    private m_lastAzimuth: number = 0;\n    private m_startAzimuth: number = 0;\n\n    /**\n     * Determines the maximum angle the camera can tilt to. It is defined in radians.\n     */\n    private m_maxTiltAngle = DEFAULT_MAX_TILT_ANGLE;\n\n    private m_cleanupMouseEventListeners?: () => void;\n\n    private m_touchState: {\n        touches: TouchState[];\n        currentRotation: number;\n        initialRotation: number;\n    } = {\n        touches: [],\n        currentRotation: 0,\n        initialRotation: 0\n    };\n\n    /**\n     * Constructs a new `MapControls` object.\n     *\n     * @param mapView - [[MapView]] this controller modifies.\n     * @param disposeWithMapView - If `true`, an event with MapView is registered to dispose of\n     * `MapControls` if MapView itself is disposed.\n     */\n    constructor(readonly mapView: MapView, disposeWithMapView = true) {\n        super();\n\n        this.camera = mapView.camera;\n        this.domElement = mapView.renderer.domElement;\n        this.maxZoomLevel = mapView.maxZoomLevel;\n        this.minZoomLevel = mapView.minZoomLevel;\n        this.minCameraHeight = mapView.minCameraHeight;\n        this.bindInputEvents(this.domElement);\n        this.handleZoom = this.handleZoom.bind(this);\n        this.handlePan = this.handlePan.bind(this);\n        this.tilt = this.tilt.bind(this);\n        this.resetNorth = this.resetNorth.bind(this);\n        this.assignZoomAfterTouchZoomRender = this.assignZoomAfterTouchZoomRender.bind(this);\n\n        if (disposeWithMapView) {\n            // Catch the disposal of `MapView`.\n            mapView.addEventListener(MapViewEventNames.Dispose, () => {\n                this.dispose();\n            });\n        }\n    }\n\n    /**\n     * Destroy this `MapControls` instance.\n     *\n     * Unregisters all global event handlers used. This is method should be called when you stop\n     * using `MapControls`.\n     * @override\n     */\n    dispose = () => {\n        // replaced with real code in bindInputEvents\n    };\n\n    /**\n     * Current viewing angles yaw/pitch/roll in degrees.\n     */\n    get attitude(): MapViewUtils.Attitude {\n        const attitude = MapViewUtils.extractAttitude(this.mapView, this.camera);\n        return {\n            yaw: THREE.MathUtils.radToDeg(attitude.yaw),\n            pitch: THREE.MathUtils.radToDeg(attitude.pitch),\n            roll: THREE.MathUtils.radToDeg(attitude.roll)\n        };\n    }\n\n    /**\n     * Reset the camera to looking north, in an orbiting movement around the target point instead\n     * of changing the yaw (which would be the camera rotating on itself).\n     */\n    pointToNorth() {\n        // Use pre-calculated target coordinates, otherwise we could call utility method to evaluate\n        // geo-coordinates here:\n        // targetGeoCoords = MapViewUtils.getTargetCoordinatesFromCamera(camera, projection)\n        this.m_startAzimuth =\n            Math.PI +\n            MapViewUtils.extractSphericalCoordinatesFromLocation(\n                this.mapView,\n                this.camera,\n                this.mapView.target\n            ).azimuth;\n        // Wrap between -PI and PI.\n        this.m_startAzimuth = Math.atan2(\n            Math.sin(this.m_startAzimuth),\n            Math.cos(this.m_startAzimuth)\n        );\n        if (this.m_startAzimuth === 0) {\n            return;\n        }\n        this.stopExistingAnimations();\n        this.m_resetNorthAnimationDuration = this.northResetAnimationDuration;\n        this.m_currentAzimuth = this.m_startAzimuth;\n        this.m_resetNorthStartTime = performance.now();\n        this.resetNorth();\n    }\n\n    /**\n     * Zooms and moves the map in such a way that the given target position remains at the same\n     * position after the zoom.\n     *\n     * @param targetPositionOnScreenXinNDC - Target x position in NDC space.\n     * @param targetPositionOnScreenYinNDC - Target y position in NDC space.\n     */\n    zoomOnTargetPosition(\n        targetPositionOnScreenXinNDC: number,\n        targetPositionOnScreenYinNDC: number,\n        zoomLevel: number\n    ) {\n        MapViewUtils.zoomOnTargetPosition(\n            this.mapView,\n            targetPositionOnScreenXinNDC,\n            targetPositionOnScreenYinNDC,\n            zoomLevel,\n            this.m_maxTiltAngle\n        );\n    }\n\n    /**\n     * Zooms to the desired location by the provided value.\n     *\n     * @param zoomLevel - Zoom level.\n     * @param screenTarget - Zoom target on screen.\n     */\n    setZoomLevel(\n        zoomLevel: number,\n        screenTarget: { x: number; y: number } | THREE.Vector2 = { x: 0, y: 0 }\n    ) {\n        if (!this.enabled || !this.zoomEnabled) {\n            return;\n        }\n\n        this.dispatchEvent(MAPCONTROL_EVENT_BEGIN_INTERACTION);\n\n        // Register the zoom request\n        this.m_startZoom = this.currentZoom;\n        this.m_zoomDeltaRequested = zoomLevel - this.zoomLevelTargeted;\n\n        this.stopExistingAnimations();\n\n        // Assign the new animation start time.\n        this.m_zoomAnimationStartTime = performance.now();\n\n        this.m_zoomTargetNormalizedCoordinates.set(screenTarget.x, screenTarget.y);\n\n        this.handleZoom();\n\n        this.dispatchEvent(MAPCONTROL_EVENT_END_INTERACTION);\n    }\n\n    /**\n     * Toggles the camera tilt between 0 (looking down) and the value at `this.tiltAngle`.\n     */\n    toggleTilt(): void {\n        if (!this.enabled || !this.tiltEnabled) {\n            return;\n        }\n\n        this.stopExistingAnimations();\n        this.m_startTilt = this.currentTilt;\n        const aimTilt = this.m_startTilt < EPSILON;\n        this.m_tiltRequested = aimTilt ? this.tiltAngle : 0;\n        this.m_tiltState = aimTilt ? TiltState.Tilted : TiltState.Down;\n        this.m_tiltAnimationStartTime = performance.now();\n        this.tilt();\n    }\n\n    /**\n     * Set the camera height.\n     */\n    set cameraHeight(height: number) {\n        //Set the cameras height according to the given zoom level.\n        this.camera.position.setZ(height);\n        this.camera.matrixWorldNeedsUpdate = true;\n    }\n\n    /**\n     * Get the current camera height.\n     */\n    get cameraHeight(): number {\n        // ### Sync with the way geoviz is computing the zoom level.\n        return this.mapView.camera.position.z;\n    }\n\n    /**\n     * Set camera max tilt angle. The value is clamped between 0 and 89 degrees. In sphere\n     * projection, at runtime, the value is also clamped so that the camera does not look above the\n     * horizon.\n     *\n     * @param angle - Angle in degrees.\n     */\n    set maxTiltAngle(angle: number) {\n        this.m_maxTiltAngle = Math.max(\n            0,\n            Math.min(DEFAULT_MAX_TILT_ANGLE, THREE.MathUtils.degToRad(angle))\n        );\n    }\n\n    /**\n     * Get the camera max tilt angle in degrees.\n     */\n    get maxTiltAngle(): number {\n        return THREE.MathUtils.radToDeg(this.m_maxTiltAngle);\n    }\n\n    /**\n     * Get the zoom level targeted by `MapControls`. Useful when inertia is on, to add incremented\n     * values to the target instead of getting the random zoomLevel value during the interpolation.\n     */\n    get zoomLevelTargeted(): number {\n        return this.m_targetedZoom === undefined ? this.currentZoom : this.m_targetedZoom;\n    }\n\n    /**\n     * Handy getter to know if the view is in the process of looking down or not.\n     */\n    get tiltState(): TiltState {\n        if (this.m_tiltState === undefined) {\n            this.m_tiltState =\n                this.currentTilt < EPSILON || this.m_tiltState === TiltState.Down\n                    ? TiltState.Tilted\n                    : TiltState.Down;\n        }\n        return this.m_tiltState;\n    }\n\n    private set currentZoom(zoom: number) {\n        this.m_currentZoom = zoom;\n    }\n\n    private get currentZoom(): number {\n        return this.m_currentZoom !== undefined ? this.m_currentZoom : this.mapView.zoomLevel;\n    }\n\n    private set currentTilt(tilt: number) {\n        this.m_currentTilt = tilt;\n    }\n\n    private get currentTilt(): number {\n        return THREE.MathUtils.degToRad(this.mapView.tilt);\n    }\n\n    private get targetedTilt(): number {\n        return this.m_targetedTilt === undefined\n            ? this.m_currentTilt === undefined\n                ? this.currentTilt\n                : this.m_currentTilt\n            : this.m_targetedTilt;\n    }\n\n    private assignZoomAfterTouchZoomRender() {\n        this.m_currentZoom = this.mapView.zoomLevel;\n        this.m_targetedZoom = this.mapView.zoomLevel;\n        this.mapView.removeEventListener(\n            MapViewEventNames.AfterRender,\n            this.assignZoomAfterTouchZoomRender\n        );\n    }\n\n    private stopExistingAnimations() {\n        this.stopResetNorth();\n        this.stopZoom();\n        this.stopPan();\n        this.stopTilt();\n    }\n\n    private resetNorth() {\n        const currentTime = performance.now();\n        const animationTime = (currentTime - this.m_resetNorthStartTime) / 1000;\n        if (this.inertiaEnabled) {\n            if (!this.m_resetNorthIsAnimated) {\n                this.m_resetNorthIsAnimated = true;\n                this.mapView.addEventListener(MapViewEventNames.AfterRender, this.resetNorth);\n            }\n            const resetNorthFinished = animationTime > this.m_resetNorthAnimationDuration;\n            if (resetNorthFinished) {\n                if (this.m_needsRenderLastFrame) {\n                    this.m_needsRenderLastFrame = false;\n                    this.stopResetNorth();\n                }\n            } else {\n                this.m_needsRenderLastFrame = true;\n            }\n        }\n        this.m_lastAzimuth = this.m_currentAzimuth;\n        this.m_currentAzimuth = this.inertiaEnabled\n            ? this.easeOutCubic(\n                  this.m_startAzimuth,\n                  0,\n                  Math.min(1, animationTime / this.m_resetNorthAnimationDuration)\n              )\n            : 0;\n\n        const deltaAzimuth = this.m_currentAzimuth - this.m_lastAzimuth;\n\n        MapViewUtils.orbitAroundScreenPoint(this.mapView, {\n            deltaAzimuth,\n            maxTiltAngle: this.m_maxTiltAngle\n        });\n        this.updateMapView();\n    }\n\n    private stopResetNorth() {\n        this.mapView.removeEventListener(MapViewEventNames.AfterRender, this.resetNorth);\n        this.m_resetNorthIsAnimated = false;\n    }\n\n    private tilt() {\n        if (this.m_tiltRequested !== undefined) {\n            this.m_targetedTilt = Math.max(Math.min(this.m_tiltRequested, this.maxTiltAngle), 0);\n            this.m_tiltRequested = undefined;\n        }\n\n        // Whether the tilt animation has reached full duration & a final frame is rendered. We need\n        // this to know when to stop the tilt (and hence deregister the methon )\n        let tiltAnimationFinished = false;\n        if (this.inertiaEnabled) {\n            if (!this.m_tiltIsAnimated) {\n                this.m_tiltIsAnimated = true;\n                this.mapView.addEventListener(MapViewEventNames.AfterRender, this.tilt);\n            }\n            const currentTime = performance.now();\n            this.m_tiltAnimationTime = (currentTime - this.m_tiltAnimationStartTime) / 1000;\n            const tiltFinished = this.m_tiltAnimationTime >= this.tiltToggleDuration;\n            if (tiltFinished) {\n                if (this.m_needsRenderLastFrame) {\n                    this.m_needsRenderLastFrame = false;\n                    this.m_tiltAnimationTime = this.tiltToggleDuration;\n                    tiltAnimationFinished = true;\n                }\n            } else {\n                this.m_needsRenderLastFrame = true;\n            }\n        }\n\n        this.m_currentTilt = this.inertiaEnabled\n            ? this.easeOutCubic(\n                  this.m_startTilt,\n                  this.targetedTilt,\n                  Math.min(1, this.m_tiltAnimationTime / this.tiltToggleDuration)\n              )\n            : this.targetedTilt;\n\n        const initialTilt = this.currentTilt;\n        const deltaTilt = this.m_currentTilt - initialTilt;\n\n        MapViewUtils.orbitAroundScreenPoint(this.mapView, {\n            deltaTilt,\n            maxTiltAngle: this.m_maxTiltAngle\n        });\n        this.updateMapView();\n\n        if (tiltAnimationFinished) {\n            this.stopTilt();\n        }\n    }\n\n    private stopTilt() {\n        this.mapView.removeEventListener(MapViewEventNames.AfterRender, this.tilt);\n        this.m_tiltIsAnimated = false;\n        this.m_targetedTilt = this.m_currentTilt = undefined;\n    }\n\n    private easeOutCubic(startValue: number, endValue: number, time: number): number {\n        // https://easings.net/#easeOutCubic\n        return startValue + (endValue - startValue) * (1 - Math.pow(1 - time, 3));\n    }\n\n    private easeOutCirc(startValue: number, endValue: number, time: number): number {\n        // https://easings.net/#easeOutCirc\n        const easing = Math.sqrt(1 - Math.pow(time - 1, 2));\n        return startValue + (endValue - startValue) * easing;\n    }\n\n    private handleZoom() {\n        let resetZoomState = false;\n        if (this.m_zoomDeltaRequested !== 0) {\n            this.m_targetedZoom = Math.max(\n                Math.min(this.zoomLevelTargeted + this.m_zoomDeltaRequested, this.maxZoomLevel),\n                this.minZoomLevel\n            );\n            this.m_zoomDeltaRequested = 0;\n        }\n        if (this.inertiaEnabled && this.zoomInertiaDampingDuration > 0) {\n            if (!this.m_zoomIsAnimated) {\n                this.m_zoomIsAnimated = true;\n                this.mapView.addEventListener(MapViewEventNames.AfterRender, this.handleZoom);\n            }\n            const currentTime = performance.now();\n            this.m_zoomAnimationTime = (currentTime - this.m_zoomAnimationStartTime) / 1000;\n            const zoomFinished = this.m_zoomAnimationTime > this.zoomInertiaDampingDuration;\n            if (zoomFinished) {\n                if (this.m_needsRenderLastFrame) {\n                    this.m_needsRenderLastFrame = false;\n                    this.m_zoomAnimationTime = this.zoomInertiaDampingDuration;\n\n                    resetZoomState = true;\n                    this.stopZoom();\n                }\n            } else {\n                this.m_needsRenderLastFrame = true;\n            }\n        }\n\n        this.currentZoom =\n            !this.inertiaEnabled || Math.abs(this.zoomLevelTargeted - this.m_startZoom) < EPSILON\n                ? this.zoomLevelTargeted\n                : this.easeOutCirc(\n                      this.m_startZoom,\n                      this.zoomLevelTargeted,\n                      Math.min(1, this.m_zoomAnimationTime / this.zoomInertiaDampingDuration)\n                  );\n\n        const success = MapViewUtils.zoomOnTargetPosition(\n            this.mapView,\n            this.m_zoomTargetNormalizedCoordinates.x,\n            this.m_zoomTargetNormalizedCoordinates.y,\n            this.currentZoom,\n            this.m_maxTiltAngle\n        );\n\n        if (resetZoomState || !success) {\n            this.m_targetedZoom = undefined;\n            this.m_currentZoom = undefined;\n        }\n        this.updateMapView();\n    }\n\n    private stopZoom() {\n        this.mapView.removeEventListener(MapViewEventNames.AfterRender, this.handleZoom);\n        this.m_zoomIsAnimated = false;\n    }\n\n    /**\n     * Method to flip crêpes.\n     */\n    private handlePan() {\n        if (this.m_state === State.NONE && this.m_lastAveragedPanDistanceOrAngle === 0) {\n            return;\n        }\n\n        if (this.inertiaEnabled && !this.m_panIsAnimated) {\n            this.m_panIsAnimated = true;\n            this.mapView.addEventListener(MapViewEventNames.AfterRender, this.handlePan);\n        }\n\n        const applyInertia =\n            this.inertiaEnabled &&\n            this.panInertiaDampingDuration > 0 &&\n            this.m_state === State.NONE &&\n            this.m_lastAveragedPanDistanceOrAngle > 0;\n\n        if (applyInertia) {\n            const currentTime = performance.now();\n            this.m_panAnimationTime = (currentTime - this.m_panAnimationStartTime) / 1000;\n            const panFinished = this.m_panAnimationTime > this.panInertiaDampingDuration;\n\n            if (panFinished) {\n                if (this.m_needsRenderLastFrame) {\n                    this.m_needsRenderLastFrame = false;\n                    this.m_panAnimationTime = this.panInertiaDampingDuration;\n                    this.mapView.removeEventListener(MapViewEventNames.AfterRender, this.handlePan);\n                    this.m_panIsAnimated = false;\n                }\n            } else {\n                this.m_needsRenderLastFrame = true;\n            }\n\n            const animationTime = this.m_panAnimationTime / this.panInertiaDampingDuration;\n            this.m_currentInertialPanningSpeed = this.easeOutCubic(\n                this.m_lastAveragedPanDistanceOrAngle,\n                0,\n                Math.min(1, animationTime)\n            );\n            if (this.m_currentInertialPanningSpeed === 0) {\n                this.m_lastAveragedPanDistanceOrAngle = 0;\n            }\n            if (this.mapView.projection.type === geoUtils.ProjectionType.Planar) {\n                this.m_panDistanceFrameDelta\n                    .copy(this.m_lastPanVector)\n                    .setLength(this.m_currentInertialPanningSpeed);\n            } else if (this.mapView.projection.type === geoUtils.ProjectionType.Spherical) {\n                this.m_rotateGlobeQuaternion\n                    .setFromAxisAngle(\n                        this.m_lastRotateGlobeAxis,\n                        this.m_currentInertialPanningSpeed\n                    )\n                    .normalize();\n            }\n        } else {\n            let panDistanceOrAngle: number = 0;\n            if (this.mapView.projection.type === geoUtils.ProjectionType.Planar) {\n                panDistanceOrAngle = this.m_lastPanVector\n                    .copy(this.m_panDistanceFrameDelta)\n                    .length();\n            } else if (this.mapView.projection.type === geoUtils.ProjectionType.Spherical) {\n                panDistanceOrAngle = this.m_lastRotateGlobeAngle;\n                this.m_rotateGlobeQuaternion.setFromAxisAngle(\n                    this.m_lastRotateGlobeAxis,\n                    this.m_lastRotateGlobeAngle\n                );\n                this.m_rotateGlobeQuaternion.normalize();\n            }\n            this.m_currentPanDistanceOrAngleIndex =\n                (this.m_currentPanDistanceOrAngleIndex + 1) % USER_INPUTS_TO_CONSIDER;\n            this.m_recentPanDistancesOrAngles[\n                this.m_currentPanDistanceOrAngleIndex\n            ] = panDistanceOrAngle;\n            this.m_lastAveragedPanDistanceOrAngle =\n                this.m_recentPanDistancesOrAngles.reduce((a, b) => a + b) / USER_INPUTS_TO_CONSIDER;\n        }\n\n        if (this.mapView.projection.type === geoUtils.ProjectionType.Planar) {\n            MapViewUtils.panCameraAboveFlatMap(\n                this.mapView,\n                this.m_panDistanceFrameDelta.x,\n                this.m_panDistanceFrameDelta.y\n            );\n        } else if (this.mapView.projection.type === geoUtils.ProjectionType.Spherical) {\n            MapViewUtils.panCameraAroundGlobe(\n                this.mapView,\n                this.m_lastRotateGlobeFromVector,\n                this.m_tmpVector3\n                    .copy(this.m_lastRotateGlobeFromVector)\n                    .applyQuaternion(this.m_rotateGlobeQuaternion)\n            );\n        }\n        if (!applyInertia) {\n            this.m_panDistanceFrameDelta.set(0, 0, 0);\n            this.m_lastRotateGlobeAngle = 0;\n        }\n\n        this.updateMapView();\n    }\n\n    private stopPan() {\n        this.m_panDistanceFrameDelta.set(0, 0, 0);\n        this.m_lastAveragedPanDistanceOrAngle = 0;\n    }\n\n    private bindInputEvents(domElement: HTMLCanvasElement) {\n        const onContextMenu = this.contextMenu.bind(this);\n        const onMouseDown = this.mouseDown.bind(this);\n        const onMouseWheel = this.mouseWheel.bind(this);\n        const onTouchStart = this.touchStart.bind(this);\n        const onTouchEnd = this.touchEnd.bind(this);\n        const onTouchMove = this.touchMove.bind(this);\n        const onMouseDoubleClick = this.mouseDoubleClick.bind(this);\n\n        domElement.addEventListener(\"dblclick\", onMouseDoubleClick, false);\n        domElement.addEventListener(\"contextmenu\", onContextMenu, false);\n        domElement.addEventListener(\"mousedown\", onMouseDown, false);\n        domElement.addEventListener(\"wheel\", onMouseWheel, false);\n        domElement.addEventListener(\"touchstart\", onTouchStart, false);\n        domElement.addEventListener(\"touchend\", onTouchEnd, false);\n        domElement.addEventListener(\"touchmove\", onTouchMove, false);\n\n        this.dispose = () => {\n            domElement.removeEventListener(\"dblclick\", onMouseDoubleClick, false);\n            domElement.removeEventListener(\"contextmenu\", onContextMenu, false);\n            domElement.removeEventListener(\"mousedown\", onMouseDown, false);\n            domElement.removeEventListener(\"wheel\", onMouseWheel, false);\n            domElement.removeEventListener(\"touchstart\", onTouchStart, false);\n            domElement.removeEventListener(\"touchend\", onTouchEnd, false);\n            domElement.removeEventListener(\"touchmove\", onTouchMove, false);\n        };\n    }\n\n    private updateMapView() {\n        this.dispatchEvent(MAPCONTROL_EVENT);\n        this.mapView.update();\n    }\n\n    private mouseDoubleClick(event: MouseEvent) {\n        if (!this.enabled || !this.zoomEnabled) {\n            return;\n        }\n        const mousePos = this.getPointerPosition(event);\n        this.zoomOnDoubleClickOrTap(mousePos.x, mousePos.y);\n    }\n\n    private mouseDown(event: MouseEvent) {\n        if (this.enabled === false) {\n            return;\n        }\n\n        if (event.shiftKey) {\n            return;\n        }\n\n        event.stopPropagation();\n\n        if (this.m_state !== State.NONE) {\n            return;\n        }\n\n        // Support mac users who press ctrl key when wanting to right click\n        if (event.button === 0 && !event.ctrlKey && this.panEnabled) {\n            this.m_state = State.PAN;\n        } else if (event.button === 1) {\n            this.m_state = State.ROTATE;\n        } else if ((event.button === 2 || event.ctrlKey) && this.tiltEnabled) {\n            this.m_state = State.ORBIT;\n        } else {\n            return;\n        }\n\n        this.dispatchEvent(MAPCONTROL_EVENT_BEGIN_INTERACTION);\n\n        const mousePos = this.getPointerPosition(event);\n        this.m_lastMousePosition.copy(mousePos);\n        if (event.altKey === true) {\n            const { width, height } = utils.getWidthAndHeightFromCanvas(this.domElement);\n            this.m_initialMousePosition.copy(\n                utils.calculateNormalizedDeviceCoordinates(mousePos.x, mousePos.y, width, height)\n            );\n        } else {\n            CameraUtils.getPrincipalPoint(this.mapView.camera, this.m_initialMousePosition);\n        }\n\n        const onMouseMove = this.mouseMove.bind(this);\n        const onMouseUp = this.mouseUp.bind(this);\n\n        window.addEventListener(\"mousemove\", onMouseMove, false);\n        window.addEventListener(\"mouseup\", onMouseUp, false);\n\n        this.m_cleanupMouseEventListeners = () => {\n            window.removeEventListener(\"mousemove\", onMouseMove);\n            window.removeEventListener(\"mouseup\", onMouseUp);\n        };\n    }\n\n    private mouseMove(event: MouseEvent) {\n        if (this.enabled === false) {\n            return;\n        }\n\n        const mousePos = this.getPointerPosition(event);\n        this.m_mouseDelta.set(\n            mousePos.x - this.m_lastMousePosition.x,\n            mousePos.y - this.m_lastMousePosition.y\n        );\n\n        if (this.m_state === State.PAN) {\n            const vectors = this.getWorldPositionWithElevation(\n                this.m_lastMousePosition.x,\n                this.m_lastMousePosition.y,\n                mousePos.x,\n                mousePos.y\n            );\n            if (vectors === undefined) {\n                return;\n            }\n            const { fromWorld, toWorld } = vectors;\n            this.panFromTo(fromWorld, toWorld);\n        } else if (this.m_state === State.ROTATE) {\n            this.stopExistingAnimations();\n            MapViewUtils.rotate(\n                this.mapView,\n                -this.rotationMouseDeltaFactor * this.m_mouseDelta.x,\n                this.rotationMouseDeltaFactor * this.m_mouseDelta.y,\n                this.m_maxTiltAngle\n            );\n        } else if (this.m_state === State.ORBIT) {\n            this.stopExistingAnimations();\n\n            MapViewUtils.orbitAroundScreenPoint(this.mapView, {\n                center: this.m_tmpVector2.set(\n                    this.m_initialMousePosition.x,\n                    this.m_initialMousePosition.y\n                ),\n                deltaAzimuth: this.orbitingMouseDeltaFactor * this.m_mouseDelta.x,\n                deltaTilt: -this.orbitingMouseDeltaFactor * this.m_mouseDelta.y,\n                maxTiltAngle: this.m_maxTiltAngle\n            });\n        }\n\n        this.m_lastMousePosition.set(mousePos.x, mousePos.y);\n        this.m_zoomAnimationStartTime = performance.now();\n\n        this.updateMapView();\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    private mouseUp(event: MouseEvent) {\n        if (this.enabled === false) {\n            return;\n        }\n\n        this.updateMapView();\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.m_state = State.NONE;\n\n        if (this.m_cleanupMouseEventListeners) {\n            this.m_cleanupMouseEventListeners();\n        }\n\n        this.dispatchEvent(MAPCONTROL_EVENT_END_INTERACTION);\n    }\n\n    private mouseWheel(event: WheelEvent) {\n        if (!this.enabled || !this.zoomEnabled) {\n            return;\n        }\n\n        const { width, height } = utils.getWidthAndHeightFromCanvas(this.domElement);\n        const screenTarget = utils.calculateNormalizedDeviceCoordinates(\n            event.offsetX,\n            event.offsetY,\n            width,\n            height\n        );\n\n        this.setZoomLevel(\n            this.mapView.zoomLevel - this.zoomLevelDeltaOnMouseWheel * Math.sign(event.deltaY),\n            screenTarget\n        );\n\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    /**\n     * Calculates the angle of the vector, which is formed by two touch points in world space\n     * against the X axis in world space on the map. The resulting angle is in radians and between\n     * `-PI` and `PI`.\n     */\n    private updateCurrentRotation() {\n        if (\n            this.m_touchState.touches.length < 2 ||\n            this.m_touchState.touches[1].currentWorldPosition.length() === 0 ||\n            this.m_touchState.touches[0].currentWorldPosition.length() === 0\n        ) {\n            return;\n        }\n        let x = 0;\n        let y = 0;\n        if (this.mapView.projection.type === geoUtils.ProjectionType.Planar) {\n            // Planar uses world space coordinates to return the angle of the vector between the two\n            // fingers' locations from the north direction.\n            x =\n                this.m_touchState.touches[1].currentWorldPosition.x -\n                this.m_touchState.touches[0].currentWorldPosition.x;\n            y =\n                this.m_touchState.touches[1].currentWorldPosition.y -\n                this.m_touchState.touches[0].currentWorldPosition.y;\n        } else if (this.mapView.projection.type === geoUtils.ProjectionType.Spherical) {\n            // Globe uses screen space coordinates, as the 3d coordinate system cannot define a\n            // reference rotation scalar for the vector between the two fingers' locations.\n            x =\n                this.m_touchState.touches[1].currentTouchPoint.x -\n                this.m_touchState.touches[0].currentTouchPoint.x;\n            // Below the subtraction is inverted, because the Y coordinate in screen space in HTML\n            // has its origin at the top and increases downwards.\n            y =\n                this.m_touchState.touches[0].currentTouchPoint.y -\n                this.m_touchState.touches[1].currentTouchPoint.y;\n            this.m_touchState.initialRotation = this.m_touchState.currentRotation;\n        }\n        this.m_touchState.currentRotation = Math.atan2(y, x);\n    }\n\n    /**\n     * Calculates the difference of the current distance of two touch points against their initial\n     * distance in world space.\n     */\n    private calculatePinchDistanceInWorldSpace(): number {\n        if (this.m_touchState.touches.length < 2) {\n            return 0;\n        }\n        const previousDistance = this.m_tmpVector3\n            .subVectors(\n                this.m_touchState.touches[0].initialWorldPosition,\n                this.m_touchState.touches[1].initialWorldPosition\n            )\n            .length();\n\n        const currentDistance = this.m_tmpVector3\n            .subVectors(\n                this.m_touchState.touches[0].currentWorldPosition,\n                this.m_touchState.touches[1].currentWorldPosition\n            )\n            .length();\n        return currentDistance - previousDistance;\n    }\n\n    private convertTouchPoint(touch: Touch, oldTouchState?: TouchState): TouchState | undefined {\n        // Acquire touch coordinates relative to canvas, this coordinates\n        // are then used to calculate NDC values.\n        const newTouchPoint = this.getPointerPosition(touch);\n\n        if (oldTouchState !== undefined) {\n            const oldTouchPoint = oldTouchState.currentTouchPoint;\n            const vectors = this.getWorldPositionWithElevation(\n                oldTouchPoint.x,\n                oldTouchPoint.y,\n                newTouchPoint.x,\n                newTouchPoint.y\n            );\n            const toWorld = vectors === undefined ? new THREE.Vector3() : vectors.toWorld;\n            // Unless the user is tilting, considering a finger losing the surface as a touchEnd\n            // event. Inertia will get triggered.\n            if (\n                toWorld.length() === 0 &&\n                !(this.m_touchState.touches.length === 3 && this.tiltEnabled)\n            ) {\n                this.setTouchState([] as any);\n                this.m_state = State.NONE;\n                this.dispatchEvent(MAPCONTROL_EVENT_END_INTERACTION);\n                return;\n            }\n            if (this.m_state !== State.TOUCH) {\n                this.dispatchEvent(MAPCONTROL_EVENT_BEGIN_INTERACTION);\n            }\n            this.m_state = State.TOUCH;\n            return {\n                currentTouchPoint: newTouchPoint,\n                lastTouchPoint: newTouchPoint,\n                currentWorldPosition: toWorld,\n                initialWorldPosition: toWorld\n            };\n        } else {\n            const { width, height } = utils.getWidthAndHeightFromCanvas(this.domElement);\n            const to = utils.calculateNormalizedDeviceCoordinates(\n                newTouchPoint.x,\n                newTouchPoint.y,\n                width,\n                height\n            );\n            const result = MapViewUtils.rayCastWorldCoordinates(this.mapView, to.x, to.y);\n            const toWorld = result === null ? new THREE.Vector3() : result;\n            // Unless the user is tilting, considering a finger losing the surface as a touchEnd\n            // event. Inertia will get triggered.\n            if (\n                toWorld.length() === 0 &&\n                !(this.m_touchState.touches.length === 3 && this.tiltEnabled)\n            ) {\n                this.setTouchState([] as any);\n                this.m_state = State.NONE;\n                this.dispatchEvent(MAPCONTROL_EVENT_END_INTERACTION);\n                return;\n            }\n            if (this.m_state !== State.TOUCH) {\n                this.dispatchEvent(MAPCONTROL_EVENT_BEGIN_INTERACTION);\n            }\n            this.m_state = State.TOUCH;\n            return {\n                currentTouchPoint: newTouchPoint,\n                lastTouchPoint: newTouchPoint,\n                currentWorldPosition: toWorld,\n                initialWorldPosition: toWorld\n            };\n        }\n    }\n\n    private setTouchState(touches: TouchList) {\n        this.m_touchState.touches = [];\n\n        // TouchList doesn't conform to iterator interface so we cannot use 'for of'\n        for (let i = 0; i < touches.length; ++i) {\n            const touchState = this.convertTouchPoint(touches[i]);\n            if (touchState !== undefined) {\n                this.m_touchState.touches.push(touchState);\n            }\n        }\n\n        if (this.m_touchState.touches.length !== 0) {\n            this.updateCurrentRotation();\n            this.m_touchState.initialRotation = this.m_touchState.currentRotation;\n        }\n    }\n\n    private updateTouches(touches: TouchList) {\n        const length = Math.min(touches.length, this.m_touchState.touches.length);\n        for (let i = 0; i < length; ++i) {\n            const oldTouchState = this.m_touchState.touches[i];\n            const newTouchState = this.convertTouchPoint(touches[i], oldTouchState);\n            if (newTouchState !== undefined && oldTouchState !== undefined) {\n                newTouchState.initialWorldPosition = oldTouchState.initialWorldPosition;\n                newTouchState.lastTouchPoint = oldTouchState.currentTouchPoint;\n                this.m_touchState.touches[i] = newTouchState;\n            }\n        }\n    }\n\n    private zoomOnDoubleClickOrTap(x: number, y: number) {\n        if (this.zoomLevelDeltaOnDoubleClick === 0) {\n            return;\n        }\n        const { width, height } = utils.getWidthAndHeightFromCanvas(this.domElement);\n        const ndcCoords = utils.calculateNormalizedDeviceCoordinates(x, y, width, height);\n        this.setZoomLevel(this.currentZoom + this.zoomLevelDeltaOnDoubleClick, ndcCoords);\n    }\n\n    private touchStart(event: TouchEvent) {\n        if (this.enabled === false) {\n            return;\n        }\n\n        this.m_tapStartTime = performance.now();\n        this.m_fingerMoved = false;\n\n        this.m_state = State.TOUCH;\n\n        this.dispatchEvent(MAPCONTROL_EVENT_BEGIN_INTERACTION);\n        this.setTouchState(event.touches);\n        this.updateTouches(event.touches);\n\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    private touchMove(event: TouchEvent) {\n        if (this.enabled === false) {\n            return;\n        }\n\n        this.m_fingerMoved = true;\n        this.updateTouches(event.touches);\n\n        if (\n            this.panEnabled &&\n            this.m_touchState.touches.length <= 2 &&\n            this.m_touchState.touches[0] !== undefined\n        ) {\n            this.panFromTo(\n                this.m_touchState.touches[0].initialWorldPosition,\n                this.m_touchState.touches[0].currentWorldPosition\n            );\n        }\n\n        if (this.m_touchState.touches.length === 2) {\n            const touches = this.m_touchState.touches;\n            const center = new THREE.Vector2();\n\n            if (this.zoomEnabled === true || this.rotateEnabled === true) {\n                const { width, height } = utils.getWidthAndHeightFromCanvas(this.domElement);\n                touches.forEach(touch => {\n                    const ndcPoint = utils.calculateNormalizedDeviceCoordinates(\n                        touch.currentTouchPoint.x,\n                        touch.currentTouchPoint.y,\n                        width,\n                        height\n                    );\n                    center.add(ndcPoint);\n                });\n                center.divideScalar(touches.length);\n            }\n            if (this.zoomEnabled) {\n                const pinchDistance = this.calculatePinchDistanceInWorldSpace();\n                if (Math.abs(pinchDistance) < EPSILON) {\n                    return;\n                }\n                const newZL = MapViewUtils.calculateZoomLevelFromDistance(\n                    this.mapView,\n                    this.mapView.targetDistance - pinchDistance\n                );\n\n                MapViewUtils.zoomOnTargetPosition(\n                    this.mapView,\n                    center.x,\n                    center.y,\n                    newZL,\n                    this.m_maxTiltAngle\n                );\n            }\n\n            if (this.rotateEnabled) {\n                this.updateCurrentRotation();\n                const deltaAzimuth =\n                    this.m_touchState.currentRotation - this.m_touchState.initialRotation;\n                this.stopExistingAnimations();\n\n                MapViewUtils.orbitAroundScreenPoint(this.mapView, {\n                    center: this.m_tmpVector2.set(center.x, center.y),\n                    deltaAzimuth,\n                    maxTiltAngle: this.m_maxTiltAngle\n                });\n            }\n        }\n\n        // Tilting\n        if (this.m_touchState.touches.length === 3 && this.tiltEnabled) {\n            const firstTouch = this.m_touchState.touches[0];\n            const diff = this.m_tmpVector2.subVectors(\n                firstTouch.currentTouchPoint,\n                firstTouch.lastTouchPoint\n            );\n            this.stopExistingAnimations();\n            MapViewUtils.orbitAroundScreenPoint(this.mapView, {\n                deltaAzimuth: this.orbitingTouchDeltaFactor * diff.x,\n                deltaTilt: -this.orbitingTouchDeltaFactor * diff.y,\n                maxTiltAngle: this.m_maxTiltAngle\n            });\n        }\n\n        this.m_zoomAnimationStartTime = performance.now();\n\n        this.updateMapView();\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    private touchEnd(event: TouchEvent) {\n        if (this.enabled === false) {\n            return;\n        }\n        this.m_state = State.NONE;\n\n        this.handleDoubleTap();\n\n        this.setTouchState(event.touches);\n\n        this.dispatchEvent(MAPCONTROL_EVENT_END_INTERACTION);\n        this.updateMapView();\n\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    private handleDoubleTap() {\n        // Continue only if no touchmove happened and zoom's enabled.\n        if (this.m_fingerMoved || !this.zoomEnabled) {\n            return;\n        }\n\n        const now = performance.now();\n        const tapDuration = now - this.m_tapStartTime;\n\n        // Continue only if proper tap.\n        if (tapDuration > MAX_TAP_DURATION) {\n            return;\n        }\n\n        // Continue only if this is the second valid tap.\n        if (!this.m_isDoubleTap) {\n            this.m_isDoubleTap = true;\n            this.m_lastSingleTapTime = now;\n            return;\n        }\n\n        // Continue only if the delay between the two taps is short enough.\n        if (now - this.m_lastSingleTapTime > this.doubleTapTime * 1000) {\n            // If too long, restart double tap validator too.\n            this.m_isDoubleTap = false;\n            return;\n        }\n\n        this.zoomOnDoubleClickOrTap(\n            this.m_touchState.touches[0].currentTouchPoint.x,\n            this.m_touchState.touches[0].currentTouchPoint.y\n        );\n\n        // Prevent a string of X valid taps and only consider pairs.\n        this.m_isDoubleTap = false;\n    }\n\n    private contextMenu(event: Event) {\n        event.preventDefault();\n    }\n\n    private getWorldPositionWithElevation(\n        fromX: number,\n        fromY: number,\n        toX: number,\n        toY: number\n    ): { fromWorld: THREE.Vector3; toWorld: THREE.Vector3 } | undefined {\n        const { width, height } = utils.getWidthAndHeightFromCanvas(this.domElement);\n\n        const from = utils.calculateNormalizedDeviceCoordinates(fromX, fromY, width, height);\n        const to = utils.calculateNormalizedDeviceCoordinates(toX, toY, width, height);\n\n        let toWorld: THREE.Vector3 | null;\n        let fromWorld: THREE.Vector3 | null;\n\n        let elevationProviderResult: THREE.Vector3 | undefined;\n\n        if (this.mapView.elevationProvider !== undefined) {\n            elevationProviderResult = this.mapView.elevationProvider.rayCast(fromX, fromY);\n        }\n\n        if (elevationProviderResult === undefined) {\n            fromWorld = MapViewUtils.rayCastWorldCoordinates(this.mapView, from.x, from.y);\n            toWorld = MapViewUtils.rayCastWorldCoordinates(this.mapView, to.x, to.y);\n        } else {\n            fromWorld = elevationProviderResult;\n            const fromGeoAltitude = this.mapView.projection.unprojectAltitude(fromWorld);\n\n            // We can ensure that points under the mouse stay there by projecting the to point onto\n            // a plane with the altitude based on the initial point.\n            toWorld = MapViewUtils.rayCastWorldCoordinates(\n                this.mapView,\n                to.x,\n                to.y,\n                fromGeoAltitude\n            );\n        }\n        if (fromWorld === null || toWorld === null) {\n            return;\n        }\n        return { fromWorld, toWorld };\n    }\n\n    private panFromTo(fromWorld: THREE.Vector3, toWorld: THREE.Vector3): void {\n        this.stopExistingAnimations();\n\n        // Assign the new animation start time.\n        this.m_panAnimationStartTime = performance.now();\n\n        if (this.mapView.projection.type === geoUtils.ProjectionType.Planar) {\n            this.m_panDistanceFrameDelta.subVectors(fromWorld, toWorld);\n        } else if (this.mapView.projection.type === geoUtils.ProjectionType.Spherical) {\n            this.m_lastRotateGlobeFromVector.copy(fromWorld);\n            this.m_lastRotateGlobeAxis.crossVectors(fromWorld, toWorld).normalize();\n            this.m_lastRotateGlobeAngle = fromWorld.angleTo(toWorld);\n            // When fromWorld and toWorld are too close, there is a risk of getting an NaN\n            // value. The following ensures that the controls don't break.\n            if (isNaN(this.m_lastRotateGlobeAngle)) {\n                this.m_lastRotateGlobeAngle = 0;\n            }\n        }\n\n        this.handlePan();\n    }\n\n    /**\n     * Acquire mouse or touch pointer position relative to canvas for `MouseEvent` or `Touch` event.\n     *\n     * Function takes into account canvas position in client space (including scrolling) as also\n     * canvas scaling factor.\n     *\n     * @param event - The mouse event.\n     * @returns [[THREE.Vector2]] containing _x_, _y_ mouse pointer position.\n     */\n    private getPointerPosition(event: MouseEvent | Touch): THREE.Vector2 {\n        const canvasSize = utils.getWidthAndHeightFromCanvas(this.domElement);\n        // Absolute size of a canvas\n        const rect = this.domElement.getBoundingClientRect();\n        // TODO: Test if scaling is needed and works on HiDPI devices.\n        const scaleX = Math.round(rect.width) / canvasSize.width;\n        const scaleY = Math.round(rect.height) / canvasSize.height;\n\n        // Scale mouse coordinates after they have, been adjusted to be relative to element.\n        return new THREE.Vector2(\n            (event.clientX - Math.floor(rect.left)) * scaleX,\n            (event.clientY - Math.floor(rect.top)) * scaleY\n        );\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { mercatorProjection, ProjectionType, sphereProjection } from \"@here/harp-geoutils\";\nimport { MapViewEventNames } from \"@here/harp-mapview\";\n\nimport { MapControls } from \"./MapControls\";\n\n/**\n * Option for MapControlsUI.\n */\ninterface MapControlsUIOptions {\n    /**\n     * If specified, turns on the zoom level display or zoom level input.\n     */\n    zoomLevel?: \"show\" | \"input\";\n\n    /**\n     * If specified, allows to switch between mercator and sphere projections at runtime.\n     */\n    projectionSwitch?: boolean;\n\n    /**\n     * Turns off default CSS styling for controls.\n     */\n    disableDefaultStyle?: boolean;\n}\n\n/**\n * Base class to handle UI overlay elements.\n */\nexport class MapControlsUI {\n    /**\n     * The DOM node containing the UI.\n     */\n    readonly domElement = document.createElement(\"div\");\n\n    private readonly m_buttonsElement: HTMLDivElement = document.createElement(\"div\");\n\n    /**\n     * Displays zoom level if [[MapControlsUIOptions.zoomLevel]] is defined.\n     */\n    private readonly m_zoomLevelElement: HTMLDivElement | HTMLInputElement | null = null;\n\n    /**\n     * Displays zoom level if [[MapControlsUIOptions.projectionSwitch]] is defined.\n     */\n    private readonly m_projectionSwitchElement: HTMLButtonElement | null = null;\n\n    /**\n     * Removes focus from input element.\n     */\n    private readonly m_onWindowClick: (event: MouseEvent) => void;\n\n    /**\n     * Updates the display of the zoom level.\n     */\n    private readonly m_onMapViewRenderEvent: () => void;\n\n    /**\n     * Constructor of the UI.\n     *\n     * @param controls - Controls referencing a [[MapView]].\n     */\n    constructor(readonly controls: MapControls, options: MapControlsUIOptions = {}) {\n        this.m_onMapViewRenderEvent = () => {\n            if (this.m_zoomLevelElement === null) {\n                return;\n            }\n\n            const zoom = this.controls.zoomLevelTargeted.toFixed(1);\n\n            if (this.m_zoomLevelElement.tagName === \"INPUT\") {\n                (this.m_zoomLevelElement as HTMLInputElement).value = zoom;\n            } else {\n                (this.m_zoomLevelElement as HTMLDivElement).innerHTML = zoom;\n            }\n        };\n\n        this.m_onWindowClick = (event: MouseEvent) => {\n            const input = this.m_zoomLevelElement as HTMLInputElement;\n            if (\n                !event ||\n                !event.target ||\n                !(event.target as any).contains ||\n                event.target === input ||\n                (event.target as HTMLElement).contains(input)\n            ) {\n                return;\n            }\n            input.blur();\n        };\n\n        // Empty element to dynamically align the controls vertically, depending on which buttons\n        // are enabled. Avoids unreliable style computations in the script.\n        const verticalAligner = document.createElement(\"span\");\n        verticalAligner.className = \"harp-gl_v-align\";\n        this.domElement.appendChild(verticalAligner);\n\n        // This element will receive the controls and ensure the vertical alignment in the CSS.\n        this.m_buttonsElement = document.createElement(\"div\");\n        this.m_buttonsElement.className = \"harp-gl_v-aligned\";\n        this.domElement.appendChild(this.m_buttonsElement);\n\n        const zoomInButton = document.createElement(\"button\");\n        zoomInButton.innerText = \"+\";\n        zoomInButton.className = \"harp-gl_controls_button-top\";\n        zoomInButton.classList.add(\"harp-gl_controls-button\");\n\n        const zoomOutButton = document.createElement(\"button\");\n        zoomOutButton.innerText = \"-\";\n        zoomOutButton.className = \"harp-gl_controls_button-bottom\";\n        zoomOutButton.classList.add(\"harp-gl_controls-button\");\n\n        const tiltButton = document.createElement(\"button\");\n        tiltButton.innerText = \"3D\";\n        tiltButton.id = \"harp-gl_controls_tilt-button-ui\";\n        tiltButton.title = \"Toggle tilt\";\n        tiltButton.classList.add(\"harp-gl_controls-button\");\n        tiltButton.classList.add(\"harp-gl_controls_button-bottom\");\n\n        const compassButton = document.createElement(\"button\");\n        compassButton.id = \"harp-gl_controls-button_compass\";\n        compassButton.title = \"Reset North\";\n        compassButton.classList.add(\"harp-gl_controls-button\");\n        compassButton.classList.add(\"harp-gl_controls_button-top\");\n        const compass = document.createElement(\"span\");\n        compass.id = \"harp-gl_controls_compass\";\n        compassButton.appendChild(compass);\n\n        // Optional zoom level displaying\n        if (options.zoomLevel === \"show\") {\n            this.m_zoomLevelElement = document.createElement(\"div\");\n            controls.mapView.addEventListener(\n                MapViewEventNames.Render,\n                this.m_onMapViewRenderEvent\n            );\n        } else if (options.zoomLevel === \"input\") {\n            const input = document.createElement(\"input\");\n            input.type = \"number\";\n            input.step = \"0.1\"; // Avoids messages in the UI on hovering, when a tenth value exists.\n            controls.mapView.addEventListener(\n                MapViewEventNames.Render,\n                this.m_onMapViewRenderEvent\n            );\n\n            const updateZoom = (event: KeyboardEvent | FocusEvent) => {\n                controls.setZoomLevel(parseFloat(input.value));\n                event.preventDefault();\n            };\n\n            input.addEventListener(\"blur\", updateZoom);\n            input.addEventListener(\"keypress\", event => {\n                if (event.key === \"Enter\") {\n                    updateZoom(event);\n                }\n            });\n            window.addEventListener(\"click\", this.m_onWindowClick);\n            this.m_zoomLevelElement = input;\n        }\n\n        if (options.projectionSwitch) {\n            const switcher = document.createElement(\"button\");\n            switcher.id = \"harp-gl_controls_switch_projection\";\n            switcher.classList.add(\"harp-gl_controls-button\");\n            const getTitle: () => string = () => {\n                return `Switch to ${\n                    this.controls.mapView.projection.type === ProjectionType.Spherical\n                        ? \"flat\"\n                        : \"globe\"\n                } projection`;\n            };\n            switcher.title = getTitle();\n            const globeSVG = getGlobeSVG();\n            const flatMapSVG = getFlatMapSVG();\n            switcher.innerHTML =\n                this.controls.mapView.projection.type === ProjectionType.Spherical\n                    ? flatMapSVG\n                    : globeSVG;\n            switcher.addEventListener(\"click\", () => {\n                this.controls.mapView.projection =\n                    this.controls.mapView.projection.type === ProjectionType.Spherical\n                        ? mercatorProjection\n                        : sphereProjection;\n                switcher.title = getTitle();\n                switcher.innerHTML =\n                    this.controls.mapView.projection.type === ProjectionType.Spherical\n                        ? flatMapSVG\n                        : globeSVG;\n            });\n            this.m_projectionSwitchElement = switcher;\n        }\n\n        this.m_buttonsElement.appendChild(zoomInButton);\n        if (this.m_zoomLevelElement !== null) {\n            this.m_buttonsElement.appendChild(this.m_zoomLevelElement);\n        }\n        this.m_buttonsElement.appendChild(zoomOutButton);\n        this.m_buttonsElement.appendChild(compassButton);\n        this.m_buttonsElement.appendChild(tiltButton);\n        if (this.m_projectionSwitchElement !== null) {\n            this.m_buttonsElement.appendChild(this.m_projectionSwitchElement);\n        }\n\n        zoomInButton.addEventListener(\"click\", event => {\n            const zoomLevel = controls.zoomLevelTargeted + controls.zoomLevelDeltaOnControl;\n            controls.setZoomLevel(zoomLevel);\n        });\n        zoomInButton.addEventListener(\"dblclick\", event => {\n            // HARP-10298: Avoid double click event propagation to canvas in WebKit-based browsers\n            // when a zoom button is quickly clicked multiple times.\n            event.stopPropagation();\n        });\n        zoomOutButton.addEventListener(\"click\", event => {\n            const zoomLevel = controls.zoomLevelTargeted - controls.zoomLevelDeltaOnControl;\n            controls.setZoomLevel(zoomLevel);\n        });\n        zoomOutButton.addEventListener(\"dblclick\", event => {\n            // HARP-10298: Avoid double click event propagation to canvas in WebKit-based browsers\n            // when a zoom button is quickly clicked multiple times.\n            event.stopPropagation();\n        });\n        tiltButton.addEventListener(\"click\", event => {\n            controls.toggleTilt();\n        });\n        compassButton.addEventListener(\"click\", event => {\n            controls.pointToNorth();\n        });\n        controls.mapView.addEventListener(MapViewEventNames.AfterRender, () => {\n            compass.style.transform = `rotate(${controls.mapView.heading}deg)`;\n        });\n\n        this.domElement.className = \"harp-gl_controls\";\n\n        if (this.m_zoomLevelElement !== null) {\n            this.m_zoomLevelElement.classList.add(\"harp-gl_controls_zoom-level\");\n        }\n\n        if (options.disableDefaultStyle !== true) {\n            this.initStyle();\n            this.domElement.style.cssText = `\n                position: absolute;\n                right: 5px;\n                top: 0;\n                height: 100%; /* Vertical alignment is done dynamically, in the rest of the CSS. */\n                pointer-events: none; /* Allows to click the map even though height is 100%. */\n            `;\n        }\n\n        return this;\n    }\n\n    get projectionSwitchElement(): HTMLButtonElement | null {\n        return this.m_projectionSwitchElement;\n    }\n\n    /**\n     * Destroy this [[MapControlsUI]] instance. Unregisters all event handlers used. This method\n     * should be called when you stop using [[MapControlsUI]].\n     */\n    dispose() {\n        if (this.m_zoomLevelElement !== null && this.m_zoomLevelElement.tagName === \"INPUT\") {\n            window.removeEventListener(\"click\", this.m_onWindowClick);\n        }\n\n        this.controls.mapView.removeEventListener(\n            MapViewEventNames.Render,\n            this.m_onMapViewRenderEvent\n        );\n\n        this.domElement.remove();\n    }\n\n    private initStyle() {\n        if (document.getElementById(\"here-harp-controls.map-controls-ui-styles\") !== null) {\n            return;\n        }\n        const style = document.createElement(\"style\");\n        style.id = \"here-harp-controls.map-controls-ui-styles\";\n        style.appendChild(document.createTextNode(getTextStyle()));\n        document.head.appendChild(style);\n    }\n}\n\nfunction getTextStyle() {\n    return `\n        /* CSS trick to align another div dynamically. */\n        .harp-gl_v-align{\n            height: 100%;\n            display: inline-block;\n            vertical-align: middle;\n        }\n        /* The target element to align vertically with vertical-align. */\n        .harp-gl_v-aligned{\n            pointer-events: all;\n            vertical-align: middle;\n            display: inline-block;\n        }\n        .harp-gl_controls-button {\n            display: block;\n            background-color: #272d37;\n            width: 40px;\n            height: 40px;\n            font-size: 22px;\n            font-weight: bold;\n            outline: none;\n            margin:0;\n            border: none;\n            color: rgba(255, 255, 255, 0.8);\n            cursor: pointer;\n            border-radius: 4px;\n            box-shadow: 0px 0px 5px 0 hsl(220, 4%, 40%);\n            transition: all 0.1s;\n            padding: 0 0 1px 1px;\n            user-select: none;\n            position:relative;\n        }\n        #harp-gl_controls_tilt-button-ui {\n            font-size: 16px;\n        }\n        .harp-gl_controls-button:active {\n            background-color: #37afaa;\n            color: #eee;\n        }\n        .harp-gl_controls-button:focus {\n            outline:none;\n        }\n        .harp-gl_controls_button-top{\n            margin-bottom:0;\n            border-bottom-right-radius:0;\n            border-bottom-left-radius:0;\n        }\n        .harp-gl_controls_button-bottom{\n            margin-top:1px;\n            border-top-right-radius:0;\n            border-top-left-radius:0;\n        }\n        .harp-gl_controls_zoom-level {\n            display: block;\n            background-color: #fff;\n            width: 40px;\n            height: 20px;\n            font-size: 12px;\n            font-weight: bold;\n            outline: none;\n            border: none;\n            color: #555;\n            opacity: 0.87;\n            box-shadow: 0px 0px 4px #aaa;\n            padding: 2px 0 0;\n            text-align: center;\n            user-select: text;\n        }\n        input.harp-gl_controls_zoom-level::-webkit-outer-spin-button,\n        input.harp-gl_controls_zoom-level::-webkit-inner-spin-button {\n            /* display: none; <- Crashes Chrome on hover */\n            -webkit-appearance: none;\n            margin: 0; /* <-- Apparently some margin are still there even though it's hidden */\n        }\n        input.harp-gl_controls_zoom-level[type=number] {\n            -moz-appearance:textfield; /* Firefox */\n        }\n        #harp-gl_controls-button_compass{\n            overflow: hidden;\n            margin: 5px 0 0 0;\n        }\n        #harp-gl_controls_compass{\n            pointer-events:none;\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            margin:0\n        }\n        #harp-gl_controls_compass::after{\n            content: \" \";\n            position:absolute;\n            left:50%;\n            margin-left:-3px;\n            top:50%;\n            margin-top: -18px;\n            border:solid 3px rgba(0,0,0,0);\n            border-bottom:solid 15px #a34f2e;\n        }\n        #harp-gl_controls_compass::before{\n            content: \" \";\n            position:absolute;\n            left:50%;\n            margin-left:-3px;\n            top:50%;\n            margin-top:0px;\n            border:solid 3px rgba(0,0,0,0);\n            border-top:solid 15px #eee;\n        }\n        #harp-gl_controls_switch_projection{\n            margin-top:5px;\n        }\n        .harp-gl_controls_switch_svg{\n            width: 25px;\n            height: 25px;\n            stroke: #d4d5d7;\n            fill: #d4d5d7;\n        }\n    `;\n}\n\nfunction getFlatMapSVG() {\n    return `\n    <svg style=\"margin-top:5px;\" class=\"harp-gl_controls_switch_svg\" width=\"25\" height=\"25\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:svg=\"http://www.w3.org/2000/svg\">\n        <rect id=\"svg_1\" stroke-width=\"2\" height=\"13.51524\" width=\"18.35821\" y=\"5.80349\" x=\"3.21307\" fill=\"none\"/>\n        <path id=\"svg_14\" d=\"m9.52018,7.71815l1.2357,-0.0032l-0.61945,1.18258l-0.61625,-1.17938z\"/>\n        <path id=\"svg_15\" d=\"m4.11409,7.32396l3.65718,-0.0032l0.28156,2.13991l-2.59042,1.57678l0.50682,1.80203l2.25254,0.8447l-0.90101,2.0836l0.28157,2.25254l-3.26619,-3.04093l0.67576,-2.02728l-0.61945,-1.97097l-1.01364,-3.15356l0.73528,-0.50362z\"/>\n        <path id=\"svg_17\" d=\"m13.23688,7.4929l2.02409,-0.0032l0.78839,1.29521l2.47779,-1.35152l2.75936,0.78839l0,1.57678l-0.73208,0.61945l-0.28157,1.97097c0,0 -0.67256,0.8479 -0.72888,0.90422c-0.05631,0.05631 0.28157,1.06996 0.33788,1.18258c0.05631,0.11263 -1.68941,-1.35152 -1.6926,-1.35472c-0.0032,-0.0032 -0.16574,1.29841 -0.16894,1.29521c-0.0032,-0.0032 -1.57358,-1.34832 -1.57678,-1.35152c-0.0032,-0.0032 -0.72888,0.67896 -0.73208,0.67576c-0.0032,-0.0032 -0.8415,-0.67256 -0.8447,-0.67576c-0.0032,-0.0032 0.73528,2.0868 0.79159,2.0868c0.05631,0 -0.50682,3.20987 -0.51002,3.20667c-0.0032,-0.0032 -1.2357,-0.16574 -1.34832,-0.16574c-0.11263,0 -0.95733,-1.52046 -0.90102,-1.57678c0.05631,-0.05631 0,-1.80203 -0.0032,-1.80523c-0.0032,-0.0032 -1.40464,-0.33468 -1.40784,-0.33788c-0.0032,-0.0032 -0.05311,-1.74252 -0.05631,-1.74572c-0.0032,-0.0032 1.18578,-0.8415 1.18258,-0.8447c-0.0032,-0.0032 1.69261,-0.16574 1.74892,-0.16574c0.05631,0 1.2389,-1.06996 1.2357,-1.07316c-0.0032,-0.0032 -1.91146,-0.10943 -1.91466,-0.11263c-0.0032,-0.0032 -1.96777,0.17214 -1.97097,0.16894c-0.0032,-0.0032 1.52366,-3.20667 1.52366,-3.20667z\"/>\n    </svg>`;\n}\n\nfunction getGlobeSVG() {\n    return `\n    <svg style=\"margin-top:5px;\" stroke-width=\"2\" class=\"harp-gl_controls_switch_svg\" width=\"50\" height=\"50\" viewBox=\"0 0 25 25\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:svg=\"http://www.w3.org/2000/svg\">\n        <ellipse ry=\"9.79855\" rx=\"4.56139\" id=\"svg_6\" cy=\"11.99798\" cx=\"11.99798\" fill=\"none\"/>\n        <line id=\"svg_8\" y2=\"8.16866\" x2=\"21.12086\" y1=\"8.16866\" x1=\"3.10044\"/>\n        <line id=\"svg_9\" y2=\"16.10887\" x2=\"21.0645\" y1=\"16.10887\" x1=\"3.04409\"/>\n        <ellipse id=\"svg_11\" ry=\"9.79855\" rx=\"9.82671\" cy=\"11.94167\" cx=\"12.02614\" fill=\"none\"/>\n    </svg>`;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector2, Vector3 } from \"three\";\n\n/**\n * Transforms the given point in screen space into NDC space by taking the given screen dimension\n * into account.\n *\n * @param screenCoordinateX - X coordinate in screen space.\n * @param screenCoordinateY - Y coordinate in screen space.\n * @param screenSizeX - Width of the reference screen size.\n * @param screenSizeY - Height of the reference screen size.\n */\nexport function calculateNormalizedDeviceCoordinates(\n    screenCoordinateX: number,\n    screenCoordinateY: number,\n    screenSizeX: number,\n    screenSizeY: number\n): Vector2 {\n    return new Vector2(\n        (screenCoordinateX / screenSizeX) * 2 - 1,\n        -((screenCoordinateY / screenSizeY) * 2) + 1\n    );\n}\n\n/**\n * Returns the direction vector that is described by the given azimuth and altitude.\n *\n * @param azimuth - Azimuth in radians.\n * @param altitude - Altitude in radians.\n */\nexport function azimuthAltitudeToDirection(azimuth: number, altitude: number): Vector3 {\n    azimuth = azimuth;\n    altitude = altitude;\n    //Shamelessly copied from Jan ;)\n    const result = new Vector3();\n    const cosAltitude = Math.cos(altitude);\n\n    result.setX(Math.sin(azimuth) * cosAltitude);\n    result.setY(Math.cos(azimuth) * cosAltitude);\n    result.setZ(Math.sin(altitude));\n\n    return result;\n}\n\n/**\n * Safely parses decimal value into `number`.\n *\n * Safely falls back to default value for `null`, `undefined`, `NaN`, empty strings, and strings\n * with characters other than digits.\n *\n * @param text - Number as a text to be parsed.\n * @param fallback - Default value, which is returned if `text` doesn't represent a valid number.\n */\nexport function safeParseDecimalInt(text: string | null | undefined, fallback: number): number {\n    if (text === null || text === undefined || text === \"\") {\n        return fallback;\n    }\n    if (!text.match(integerRe)) {\n        return fallback;\n    }\n    const result = Number.parseInt(text, 10);\n    if (isNaN(result)) {\n        return fallback;\n    }\n    return result;\n}\nconst integerRe = /^\\d+$/;\n\n/**\n * Extracts the CSS width and height of the given canvas if available, or width and height of the\n * canvas otherwise.\n *\n * @param canvas - The canvas.\n */\nexport function getWidthAndHeightFromCanvas(\n    canvas: HTMLCanvasElement\n): { width: number; height: number } {\n    return {\n        //use clientWidth and clientHeight to support HiDPI devices\n        width: safeParseDecimalInt(canvas.style.width, canvas.clientWidth),\n        height: safeParseDecimalInt(canvas.style.height, canvas.clientHeight)\n    };\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Decoder worker for {@ref MapView}.\n *\n * @remarks\n *\n * @packageDocumentation\n */\n\nexport * from \"./lib/DataProvider\";\nexport * from \"./lib/TileDataSource\";\nexport * from \"./lib/TileLoader\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport \"@here/harp-fetch\";\n\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { EventDispatcher } from \"three\";\n\n/**\n * Interface for all `DataProvider` subclasses.\n *\n * @remarks\n * The `DataProvider` is an abstraction of the tile\n * loader which is only responsible for loading the data of a specific tile,\n * without any relation to displaying or even decoding the data.\n */\nexport abstract class DataProvider extends EventDispatcher {\n    private readonly m_clients: Set<Object> = new Set();\n    private m_connectPromise: Promise<void> | undefined;\n\n    /**\n     * Registers a client to the data provider.\n     *\n     * @param client - The client to register.\n     * @returns Promise to wait for successful (or failed) connection to the data source.\n     */\n    register(client: Object): Promise<void> {\n        if (this.m_clients.size === 0) {\n            this.m_connectPromise = this.connect();\n        }\n        this.m_clients.add(client);\n        return this.m_connectPromise!;\n    }\n\n    /**\n     * Unregisters a client from the data provider.\n     *\n     * @param client - The client to unregister.\n     */\n    unregister(client: Object) {\n        if (this.m_clients.delete(client) && this.m_clients.size === 0) {\n            this.dispose();\n        }\n    }\n\n    /**\n     * Returns `true` if it has been connected successfully.\n     */\n    abstract ready(): boolean;\n\n    /**\n     * Load the data of a {@link @here/map-view@Tile} asynchronously.\n     *\n     * @param tileKey - Address of a tile.\n     * @param abortSignal - Optional AbortSignal to cancel the request.\n     * @returns A promise delivering the data as an [[ArrayBufferLike]], or any object.\n     */\n    abstract getTile(tileKey: TileKey, abortSignal?: AbortSignal): Promise<ArrayBufferLike | {}>;\n\n    /**\n     * An event which fires when this `DataProvider` is invalidated.\n     *\n     * @param listener - A function to call when this `DataProvider` is invalidated.\n     * @returns The function to call to unregister the listener from this event.\n     *\n     * @example\n     * ```typescript\n     * const dispose = dataProvider.onDidInvalidate?.(() => {\n     *     console.log(\"invalidated\");\n     * });\n     * ```\n     */\n    onDidInvalidate?(listener: () => void): () => void;\n\n    /**\n     * Connect to the data source. Returns a promise to wait for successful (or failed) connection.\n     *\n     * @returns A promise which is resolved when the connection has been established.\n     */\n    protected abstract connect(): Promise<void>;\n\n    /**\n     * Destroys this `DataProvider`. Implementations of `DataProvider` must dispose of\n     * asynchronous operations and services here.\n     */\n    protected abstract dispose(): void;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    FlatTheme,\n    ITileDecoder,\n    OptionsMap,\n    StyleSet,\n    Theme,\n    TileInfo\n} from \"@here/harp-datasource-protocol\";\nimport { TileKey, TilingScheme } from \"@here/harp-geoutils\";\nimport {\n    ConcurrentDecoderFacade,\n    CopyrightInfo,\n    CopyrightProvider,\n    DataSource,\n    DataSourceOptions,\n    Tile,\n    TileLoaderState\n} from \"@here/harp-mapview\";\nimport { ThemeLoader } from \"@here/harp-mapview/lib/ThemeLoader\";\nimport { ILogger, LoggerManager } from \"@here/harp-utils\";\n\nimport { DataProvider } from \"./DataProvider\";\nimport { TileInfoLoader, TileLoader } from \"./TileLoader\";\n\n/**\n * Set of common options for all [[TileDataSource]]s.\n */\nexport interface TileDataSourceOptions extends DataSourceOptions {\n    /**\n     * The [[TilingScheme]] the data source is using.\n     */\n    tilingScheme: TilingScheme;\n\n    /**\n     * The [[DataProvider]] to use for downloading the actual data.\n     */\n    dataProvider: DataProvider;\n\n    /**\n     * Optional: Specify [[ITileDecoder]] instance.\n     */\n    decoder?: ITileDecoder;\n\n    /**\n     * Optional name of decoder service class.\n     * @see [[ConcurrentDecoderFacade]]\n     * @see [[ConcurrentWorkerSet]]\n     */\n    concurrentDecoderServiceName?: string;\n\n    /**\n     * Optional URL for decoder bundle to be loaded into web worker.\n     */\n    concurrentDecoderScriptUrl?: string;\n\n    /**\n     * Optional count of web workers to use with the decoder bundle.\n     */\n    concurrentDecoderWorkerCount?: number;\n\n    /**\n     * Timeout for connecting to the web worker in seconds. Default to 10s, search for:\n     * DEFAULT_WORKER_INITIALIZATION_TIMEOUT\n     */\n    workerConnectionTimeout?: number;\n\n    /**\n     * Optional, default copyright information of tiles provided by this data source.\n     * Implementation should provide this information from the source data if possible.\n     */\n    copyrightInfo?: CopyrightInfo[];\n\n    /**\n     * Optional copyright info provider for tiles provided by this data source. Copyrights from\n     * provider are concatenated with default ones from `copyrightInfo`.\n     */\n    copyrightProvider?: CopyrightProvider;\n}\n\n/**\n * Templated factory class to create instances of [[Tile]].\n */\nexport class TileFactory<TileType extends Tile> {\n    /**\n     * Initialize the factory using the constructor of the element to be called when a [[Tile]] is\n     * created.\n     *\n     * @param m_modelConstructor - Constructor of (subclass of) [[Tile]].\n     */\n    constructor(\n        private readonly m_modelConstructor: new (\n            dataSource: DataSource,\n            tileKey: TileKey\n        ) => TileType\n    ) {}\n\n    /**\n     * Create an instance of (subclass of) [[Tile]]. The required parameters are passed as arguments\n     * to the constructor of [[Tile]].\n     *\n     * @param dataSource - [[Datasource]] this class belongs to.\n     * @param tileKey - Quadtree address of the [[Tile]].\n     */\n    create(dataSource: TileDataSource<TileType>, tileKey: TileKey): TileType {\n        const tile = new this.m_modelConstructor(dataSource, tileKey);\n        tile.tileLoader = new TileLoader(\n            dataSource,\n            tileKey,\n            dataSource.dataProvider(),\n            dataSource.decoder\n        );\n        return tile;\n    }\n}\n\n/**\n * Common base class for the typical [[DataSource]] which uses an [[ITileDecoder]] to decode the\n * tile content asynchronously. The decoder can be passed in as an option, or a default\n * asynchronous one is generated.\n */\nexport class TileDataSource<TileType extends Tile = Tile> extends DataSource {\n    protected readonly logger: ILogger = LoggerManager.instance.create(\"TileDataSource\");\n    protected readonly m_decoder: ITileDecoder;\n    private m_isReady: boolean = false;\n    private readonly m_unregisterClearTileCache?: () => void;\n\n    /**\n     * Set up the `TileDataSource`.\n     *\n     * @param m_tileFactory - Factory to create the [[Tile]] instances.\n     * @param m_options - Options specifying the parameters of the [[DataSource]].\n     */\n    constructor(\n        private readonly m_tileFactory: TileFactory<TileType>,\n        private readonly m_options: TileDataSourceOptions\n    ) {\n        super(m_options);\n        if (m_options.decoder) {\n            this.m_decoder = m_options.decoder;\n        } else if (m_options.concurrentDecoderServiceName) {\n            this.m_decoder = ConcurrentDecoderFacade.getTileDecoder(\n                m_options.concurrentDecoderServiceName,\n                m_options.concurrentDecoderScriptUrl,\n                m_options.concurrentDecoderWorkerCount,\n                m_options.workerConnectionTimeout\n            );\n        } else {\n            throw new Error(\n                `TileDataSource[${this.name}]: unable to create, missing decoder or ` +\n                    `concurrentDecoderServiceName`\n            );\n        }\n        this.useGeometryLoader = true;\n        this.cacheable = true;\n\n        this.m_unregisterClearTileCache = this.dataProvider().onDidInvalidate?.(() =>\n            this.mapView.markTilesDirty(this)\n        );\n    }\n\n    /** @override */\n    dispose() {\n        this.m_unregisterClearTileCache?.();\n        this.decoder.dispose();\n        this.dataProvider().unregister(this);\n    }\n\n    /** @override */\n    ready(): boolean {\n        return this.m_isReady && this.m_options.dataProvider.ready();\n    }\n\n    /**\n     * Get the [[ITileDecoder]] of this `ITileDataSource`, which has either been passed in with\n     * the options, or has been supplied by the [[ConcurrentDecoderFacade]].\n     */\n    get decoder(): ITileDecoder {\n        return this.m_decoder;\n    }\n\n    /** @override */\n    async connect() {\n        await Promise.all([this.m_options.dataProvider.register(this), this.m_decoder.connect()]);\n        this.m_isReady = true;\n\n        let customOptions: OptionsMap = {};\n        if (this.m_options.storageLevelOffset !== undefined) {\n            customOptions = {\n                storageLevelOffset: this.m_options.storageLevelOffset\n            };\n        }\n        this.m_decoder.configure({ languages: this.languages }, customOptions);\n    }\n\n    /**\n     * @override\n     */\n    setLanguages(languages: string[]): void {\n        this.languages = languages;\n\n        this.m_decoder.configure({\n            languages: this.languages\n        });\n        this.mapView.clearTileCache(this.name);\n    }\n\n    /**\n     * Apply the {@link @here/harp-datasource-protocol#Theme} to this data source.\n     *\n     * Applies new {@here/harp-datasource-protocol StyleSet} and definitions from theme only\n     * if matching styleset (see `styleSetName` property) is found in `theme`.\n     * @override\n     */\n    async setTheme(theme: Theme | FlatTheme, languages?: string[]): Promise<void> {\n        // Seems superfluent, but the call to  ThemeLoader.load will resolve extends etc.\n        theme = await ThemeLoader.load(theme);\n\n        let styleSet: StyleSet | undefined;\n        if (this.styleSetName !== undefined && theme.styles !== undefined) {\n            styleSet = theme.styles[this.styleSetName];\n        }\n        if (languages !== undefined) {\n            this.languages = languages;\n        }\n\n        if (styleSet !== undefined) {\n            this.m_decoder.configure({\n                styleSet,\n                definitions: theme.definitions,\n                priorities: theme.priorities,\n                labelPriorities: theme.labelPriorities,\n                languages\n            });\n            this.mapView.clearTileCache(this.name);\n        }\n    }\n\n    /**\n     * Get the [[DataProvider]] that has been passed in with the options.\n     */\n    dataProvider(): DataProvider {\n        return this.m_options.dataProvider;\n    }\n\n    /** @override */\n    getTilingScheme(): TilingScheme {\n        return this.m_options.tilingScheme;\n    }\n\n    /**\n     * Create a [[Tile]] and start the asynchronous download of the tile content. The [[Tile]] will\n     * be empty, but the download and decoding will be scheduled immediately. [[Tile]] instance is\n     * initialized with default copyrights, concatenated with copyrights from copyright provider of\n     * this data source.\n     *\n     * @param tileKey - Quadtree address of the requested tile.\n     * @param delayLoad - If true, the Tile will be created, but Tile.load will not be called.\n     * @default false.\n     * @override\n     */\n    getTile(tileKey: TileKey, delayLoad: boolean = false): TileType | undefined {\n        const tile = this.m_tileFactory.create(this, tileKey);\n        tile.copyrightInfo = this.m_options.copyrightInfo;\n        if (this.m_options.copyrightProvider !== undefined) {\n            this.m_options.copyrightProvider\n                .getCopyrights(tile.geoBox, tileKey.level)\n                .then(copyrightInfo => {\n                    tile.copyrightInfo =\n                        tile.copyrightInfo === undefined\n                            ? copyrightInfo\n                            : [...tile.copyrightInfo, ...copyrightInfo];\n                    this.requestUpdate();\n                });\n        }\n        if (!delayLoad) {\n            tile.load();\n        }\n\n        return tile;\n    }\n\n    /**\n     * Get [[TileInfo]] of a tile.\n     *\n     * @param tileKey - Quadtree address of the requested tile.\n     * @returns A promise which will contain the [[TileInfo]] when resolved.\n     */\n    getTileInfo(tileKey: TileKey): Promise<TileInfo | undefined> {\n        const promise = new Promise<TileInfo | undefined>((resolve, reject) => {\n            const tileLoader = new TileInfoLoader(\n                this,\n                tileKey,\n                this.m_options.dataProvider,\n                this.decoder\n            );\n\n            tileLoader.loadAndDecode().then(loaderState => {\n                if (loaderState === TileLoaderState.Ready) {\n                    resolve(tileLoader.tileInfo);\n                } else {\n                    reject(\n                        new Error(`TileDataSource#getInfoTile wrong final state: ${loaderState}`)\n                    );\n                }\n            });\n        });\n\n        return promise;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport \"@here/harp-fetch\";\n\nimport {\n    DecodedTile,\n    ITileDecoder,\n    RequestController,\n    TileInfo\n} from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { BaseTileLoader, DataSource } from \"@here/harp-mapview\";\nimport { TileLoaderState } from \"@here/harp-mapview/lib/ITileLoader\";\nimport { LoggerManager } from \"@here/harp-utils\";\n\nimport { DataProvider } from \"./DataProvider\";\n\n/**\n * Logger to write to console etc.\n */\nconst logger = LoggerManager.instance.create(\"TileLoader\");\n\n/**\n * The [[TileLoader]] manages the different states of loading and decoding for a [[Tile]]. Used by\n * the [[TileDataSource]].\n */\nexport class TileLoader extends BaseTileLoader {\n    /**\n     * The binary data in form of [[ArrayBufferLike]], or any object.\n     */\n    payload?: ArrayBufferLike | {};\n\n    /**\n     * The result of decoding the `payload`: The [[DecodedTile]].\n     */\n    decodedTile?: DecodedTile;\n\n    /**\n     * The  notifying the [[ITileDecoder]] to cancel decoding.\n     */\n    protected requestController?: RequestController;\n\n    /**\n     * Set up loading of a single [[Tile]].\n     *\n     * @param dataSource - The [[DataSource]] the tile belongs to.\n     * @param tileKey - The quadtree address of a [[Tile]].\n     * @param dataProvider - The [[DataProvider]] that retrieves the binary tile data.\n     * @param tileDecoder - The [[ITileDecoder]] that decodes the binary tile to a [[DecodeTile]].\n     */\n    constructor(\n        protected dataSource: DataSource,\n        protected tileKey: TileKey,\n        protected dataProvider: DataProvider,\n        protected tileDecoder: ITileDecoder\n    ) {\n        super(dataSource, tileKey);\n    }\n\n    /**\n     * @override\n     */\n    get priority(): number {\n        return this.m_priority;\n    }\n\n    /**\n     * @override\n     */\n    set priority(priority: number) {\n        this.m_priority = priority;\n        if (this.requestController !== undefined) {\n            this.requestController.priority = priority;\n        }\n    }\n\n    /**\n     * @override\n     */\n    protected loadImpl(\n        abortSignal: AbortSignal,\n        onDone: (doneState: TileLoaderState) => void,\n        onError: (error: Error) => void\n    ): void {\n        this.dataProvider\n            .getTile(this.tileKey, abortSignal)\n            .then(payload => {\n                if (abortSignal.aborted) {\n                    // safety belt if getTile doesn't really support cancellation tokens\n                    const err = new Error(\"Aborted\");\n                    err.name = \"AbortError\";\n                    throw err;\n                }\n                this.onLoaded(payload, onDone, onError);\n            })\n            .catch(error => {\n                // Handle abort messages from fetch and also our own.\n                if (error.name === \"AbortError\" || error.message === \"AbortError: Aborted\") {\n                    return;\n                }\n                onError(error);\n            });\n    }\n\n    /**\n     * @override\n     */\n    protected cancelImpl(): void {\n        if (this.state === TileLoaderState.Decoding && this.requestController) {\n            // we should cancel any decodes already in progress!\n            this.requestController.abort();\n            this.requestController = undefined;\n        }\n    }\n\n    /**\n     * Start decoding the payload.\n     */\n    protected startDecodeTile(\n        onDone: (doneState: TileLoaderState) => void,\n        onError: (error: Error) => void\n    ) {\n        const payload = this.payload;\n        if (payload === undefined) {\n            logger.error(\"TileLoader#startDecodeTile: Cannot decode without payload\");\n            return;\n        }\n\n        this.state = TileLoaderState.Decoding;\n        this.payload = undefined;\n\n        // Save our cancellation point, so we can be reliably cancelled by any subsequent decode\n        // attempts\n        const requestController = new RequestController(this.priority);\n        this.requestController = requestController;\n\n        const dataSource = this.dataSource;\n        this.tileDecoder\n            .decodeTile(payload, this.tileKey, dataSource.projection, requestController)\n            .then(decodedTile => {\n                if (requestController.signal.aborted) {\n                    // our flow is cancelled, silently return\n                    return;\n                }\n\n                this.onDecoded(decodedTile, onDone);\n            })\n            .catch(error => {\n                // Handle abort messages from fetch and also our own.\n                if (error.name === \"AbortError\" || error.message === \"AbortError: Aborted\") {\n                    // our flow is cancelled, silently return\n                    return;\n                }\n                onError(error);\n            });\n    }\n\n    /**\n     * Called when binary data has been loaded. The loading state is now progressing to decoding.\n     *\n     * @param payload - Binary data in form of [[ArrayBufferLike]], or any object.\n     */\n    private onLoaded(\n        payload: ArrayBufferLike | {},\n        onDone: (doneState: TileLoaderState) => void,\n        onError: (error: Error) => void\n    ) {\n        this.state = TileLoaderState.Loaded;\n        this.payload = payload;\n\n        const byteLength = (payload as ArrayBufferLike).byteLength;\n        if (\n            byteLength === 0 ||\n            (payload.constructor === Object && Object.keys(payload).length === 0)\n        ) {\n            // Object is empty\n            this.onDecoded(\n                {\n                    geometries: [],\n                    techniques: []\n                },\n                onDone\n            );\n            return;\n        }\n\n        // TBD: we might suspend decode if tile is not visible ... ?\n        this.startDecodeTile(onDone, onError);\n    }\n\n    /**\n     * Called when the decoding is finished, and the [[DecodedTile]] has been created.\n     *\n     * @param decodedTile - The [[DecodedTile]].\n     */\n    private onDecoded(\n        decodedTile: DecodedTile | undefined,\n        onDone: (doneState: TileLoaderState) => void\n    ) {\n        this.decodedTile = decodedTile;\n        onDone(TileLoaderState.Ready);\n    }\n}\n\n/**\n * Subclass of [[TileLoader]] which is used by [[TileDataSource]] to load the [[TileInfo]] meta\n * data, not the tile data itself.\n */\nexport class TileInfoLoader extends TileLoader {\n    tileInfo?: TileInfo;\n\n    /** @override */\n    protected startDecodeTile(\n        onDone: (doneState: TileLoaderState) => void,\n        onError: (error: Error) => void\n    ) {\n        const payload = this.payload;\n        if (payload === undefined) {\n            logger.error(\"TileInfoLoader#startDecodeTile: Cannot decode without payload\");\n            return;\n        }\n\n        this.state = TileLoaderState.Decoding;\n        this.payload = undefined;\n\n        // Save our cancellation point, so we can be reliably cancelled by any subsequent decode\n        // attempts\n        const requestController = new RequestController(this.priority);\n        this.requestController = requestController;\n\n        const dataSource = this.dataSource;\n        this.tileDecoder\n            .getTileInfo(payload, this.tileKey, dataSource.projection, requestController)\n            .then(tileInfo => {\n                if (requestController.signal.aborted) {\n                    // our flow is cancelled, silently return\n                    return;\n                }\n                this.tileInfo = tileInfo;\n\n                onDone(TileLoaderState.Ready);\n            })\n            .catch(error => {\n                // Handle abort messages from fetch and also our own.\n                if (error.name === \"AbortError\" || error.message === \"AbortError: Aborted\") {\n                    // our flow is cancelled, silently return\n                    return;\n                }\n                onError(error);\n            });\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Functionality needed to render a map.\n *\n * @remarks\n *\n * @packageDocumentation\n */\n\nexport * from \"./lib/AnimatedExtrusionHandler\";\nexport * from \"./lib/BaseTileLoader\";\nexport * from \"./lib/BoundsGenerator\";\nexport * from \"./lib/CameraMovementDetector\";\nexport * from \"./lib/CameraUtils\";\nexport * from \"./lib/ClipPlanesEvaluator\";\nexport * from \"./lib/ColorCache\";\nexport * from \"./lib/composing\";\nexport * from \"./lib/ConcurrentDecoderFacade\";\nexport * from \"./lib/ConcurrentTilerFacade\";\nexport * from \"./lib/copyrights/CopyrightElementHandler\";\nexport * from \"./lib/copyrights/CopyrightInfo\";\nexport * from \"./lib/copyrights/CopyrightProvider\";\nexport * from \"./lib/copyrights/CopyrightCoverageProvider\";\nexport * from \"./lib/copyrights/UrlCopyrightProvider\";\nexport * from \"./lib/DataSource\";\nexport * from \"./lib/EventDispatcher\";\nexport * from \"./lib/FixedClipPlanesEvaluator\";\nexport * from \"./lib/FovCalculation\";\nexport * from \"./lib/PolarTileDataSource\";\nexport * from \"./lib/DecodedTileHelpers\";\nexport * from \"./lib/DepthPrePass\";\nexport * from \"./lib/DisplacementMap\";\nexport * from \"./lib/ElevationProvider\";\nexport * from \"./lib/ElevationRangeSource\";\nexport * from \"./lib/ITileLoader\";\nexport * from \"./lib/image/Image\";\nexport * from \"./lib/image/ImageCache\";\nexport * from \"./lib/image/MapViewImageCache\";\nexport * from \"./lib/MapAnchors\";\nexport * from \"./lib/MapView\";\nexport * from \"./lib/MapViewAtmosphere\";\nexport * from \"./lib/MapViewFog\";\nexport * from \"./lib/MapViewPoints\";\nexport * from \"./lib/PickHandler\";\nexport * from \"./lib/poi/PoiManager\";\nexport * from \"./lib/poi/PoiTableManager\";\nexport * from \"./lib/Statistics\";\nexport * from \"./lib/text/TextElement\";\nexport * from \"./lib/text/TextElementsRenderer\";\nexport * from \"./lib/text/TextStyleCache\";\nexport * from \"./lib/TextureLoader\";\nexport * from \"./lib/ThemeLoader\";\nexport * from \"./lib/Tile\";\nexport * from \"./lib/geometry/TileDataAccessor\";\nexport * from \"./lib/geometry/TileGeometry\";\nexport * from \"./lib/Utils\";\nexport * from \"./lib/VisibleTileSet\";\nexport * from \"./lib/WorkerBasedDecoder\";\nexport * from \"./lib/WorkerBasedTiler\";\nexport * from \"./lib/workers/WorkerLoader\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    getPropertyValue,\n    isExtrudedPolygonTechnique,\n    MapEnv,\n    Technique\n} from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { ExtrusionFeature, ExtrusionFeatureDefs } from \"@here/harp-materials\";\nimport { MathUtils } from \"@here/harp-utils\";\n\nimport { DataSource } from \"./DataSource\";\nimport { MapView } from \"./MapView\";\nimport { Tile } from \"./Tile\";\n\n/**\n * Animation states for extrusion effect\n */\nexport enum AnimatedExtrusionState {\n    None,\n    Started,\n    Finished\n}\n\nconst DEFAULT_EXTRUSION_DURATION = 750; // milliseconds\nconst DEFAULT_MIN_ZOOM_LEVEL = 1;\n\ninterface TileExtrusionState {\n    materials: ExtrusionFeature[];\n    animated: boolean;\n}\n\n// key is tile's morton code.\ntype TileMap = Map<number, TileExtrusionState>;\n\n/**\n * Handles animated extrusion effect of the buildings in {@link MapView}.\n */\nexport class AnimatedExtrusionHandler {\n    /**\n     * Animate the extrusion of the buildings if set to `true`.\n     */\n    enabled: boolean = true;\n    /**\n     * Duration of the building's extrusion in milliseconds\n     */\n    duration: number = DEFAULT_EXTRUSION_DURATION;\n\n    private m_minZoomLevel: number = DEFAULT_MIN_ZOOM_LEVEL;\n    private m_forceEnabled: boolean = false;\n\n    private readonly m_dataSourceMap: Map<DataSource, TileMap> = new Map();\n    private m_state: AnimatedExtrusionState = AnimatedExtrusionState.None;\n    private m_startTime: number = -1;\n\n    /**\n     * Creates an {@link AnimatedExtrusionHandler} in {@link MapView}.\n     *\n     * @param m_mapView - Instance of {@link MapView} on which the animation will run.\n     */\n    constructor(private readonly m_mapView: MapView) {}\n\n    /**\n     * Returns whether the extrusion animation is force enabled or not.\n     */\n    get forceEnabled(): boolean {\n        return this.m_forceEnabled;\n    }\n\n    /**\n     * If `forceEnabled` is set to `true` then `animateExtrusion` and `animateExtrusionDuration`\n     * values from [[extrudedPolygonTechnique]] will be ignored and\n     * `AnimatedExtrusionHandler.enabled` with `AnimatedExtrusionHandler.duration` will be used\n     */\n    set forceEnabled(force: boolean) {\n        this.m_forceEnabled = force;\n        this.duration = DEFAULT_EXTRUSION_DURATION;\n    }\n\n    /**\n     * Gets min zoom level at which extruded animation is enabled.\n     */\n    get minZoomLevel() {\n        return this.m_minZoomLevel;\n    }\n\n    /**\n     * Sets the extrusion animation properties obtained from a given technique.\n     * @internal\n     * @param technique - The technique where the extrusion animation properties are defined.\n     * @param env - The environment used to evaluate technique properties.\n     * @returns True if the technique has animation enabled (or animation is forced), false\n     * otherwise.\n     */\n    setAnimationProperties(technique: Technique, env: MapEnv) {\n        if (!isExtrudedPolygonTechnique(technique)) {\n            return false;\n        }\n\n        if (technique.hasOwnProperty(\"minZoomLevel\")) {\n            this.m_minZoomLevel = (technique as any).minZoomLevel;\n        }\n\n        if (this.forceEnabled) {\n            return this.enabled;\n        }\n\n        if (technique.animateExtrusionDuration !== undefined) {\n            this.duration = technique.animateExtrusionDuration;\n        }\n\n        const animateExtrusionValue = getPropertyValue(technique.animateExtrusion, env);\n\n        if (animateExtrusionValue === null) {\n            return this.enabled;\n        }\n\n        return typeof animateExtrusionValue === \"boolean\"\n            ? animateExtrusionValue\n            : typeof animateExtrusionValue === \"number\"\n            ? animateExtrusionValue !== 0\n            : false;\n    }\n\n    /**\n     * Updates the extrusion animation for every frame.\n     * @internal\n     */\n    update(zoomLevel: number) {\n        const extrusionVisible = this.m_dataSourceMap.size > 0 && zoomLevel >= this.m_minZoomLevel;\n\n        if (this.m_state === AnimatedExtrusionState.None && extrusionVisible) {\n            this.m_state = AnimatedExtrusionState.Started;\n        } else if (this.m_state !== AnimatedExtrusionState.None && !extrusionVisible) {\n            this.resetAnimation(true);\n        }\n\n        this.animateExtrusion();\n    }\n\n    /**\n     * Adds a tile to be animated.\n     * @internal\n     * @param tile - The tile to be animated.\n     * @param materials - Extruded materials belonging to the tile.\n     */\n    add(tile: Tile, materials: ExtrusionFeature[]): void {\n        tile.addDisposeCallback(this.removeTile.bind(this));\n        let animated = false;\n\n        if (this.m_state !== AnimatedExtrusionState.None) {\n            animated = this.skipAnimation(tile);\n            if (animated) {\n                // Set extrusion ratio to 1 if the tile skips the animation.\n                this.setTileExtrusionRatio(materials, 1);\n            } else if (this.m_state === AnimatedExtrusionState.Finished) {\n                // Otherwise, if animation was finished, restart animation but leave already\n                //  animated tiles untouched.\n                this.resetAnimation(false);\n            }\n        }\n        this.getOrCreateTileMap(tile.dataSource).set(tile.tileKey.mortonCode(), {\n            materials,\n            animated\n        });\n    }\n\n    /**\n     * Is `true` if there's any extrusion animation ongoing.\n     */\n    get isAnimating(): boolean {\n        return (\n            this.m_state !== AnimatedExtrusionState.Finished &&\n            this.m_state !== AnimatedExtrusionState.None\n        );\n    }\n\n    private getTileMap(dataSource: DataSource, create: boolean = false): TileMap | undefined {\n        return this.m_dataSourceMap.get(dataSource);\n    }\n\n    private getOrCreateTileMap(dataSource: DataSource): TileMap {\n        let tileMap = this.m_dataSourceMap.get(dataSource);\n        if (!tileMap) {\n            tileMap = new Map();\n            this.m_dataSourceMap.set(dataSource, tileMap);\n        }\n        return tileMap;\n    }\n\n    private skipAnimation(tile: Tile): boolean {\n        return this.wasAnyAncestorAnimated(tile) || this.wasAnyDescendantAnimated(tile);\n    }\n\n    private wasAnyAncestorAnimated(tile: Tile): boolean {\n        const minLevel = tile.dataSource.getDataZoomLevel(this.m_minZoomLevel);\n        const distanceToMinLevel = Math.max(0, tile.tileKey.level - minLevel);\n        const levelsUp = Math.min(\n            distanceToMinLevel,\n            this.m_mapView.visibleTileSet.options.quadTreeSearchDistanceUp\n        );\n        const tileMap = this.getTileMap(tile.dataSource);\n        if (!tileMap) {\n            return false;\n        }\n        let lastTileKey = tile.tileKey;\n        for (let deltaUp = 1; deltaUp <= levelsUp; ++deltaUp) {\n            lastTileKey = lastTileKey.parent();\n            if (tileMap.get(lastTileKey.mortonCode())?.animated ?? false) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private wasAnyDescendantAnimated(tile: Tile): boolean {\n        const distanceToMaxLevel = tile.dataSource.maxDataLevel - tile.tileKey.level;\n        const levelsDown = Math.min(\n            distanceToMaxLevel,\n            this.m_mapView.visibleTileSet.options.quadTreeSearchDistanceDown\n        );\n\n        const tileMap = this.getTileMap(tile.dataSource);\n        if (!tileMap) {\n            return false;\n        }\n        const tilingScheme = tile.dataSource.getTilingScheme();\n        let nextTileKeys = [tile.tileKey];\n        let childTileKeys: TileKey[] = [];\n        for (let deltaDown = 1; deltaDown <= levelsDown; ++deltaDown) {\n            childTileKeys.length = 0;\n            for (const tileKey of nextTileKeys) {\n                for (const childTileKey of tilingScheme.getSubTileKeys(tileKey)) {\n                    if (tileMap.get(childTileKey.mortonCode())?.animated ?? false) {\n                        return true;\n                    }\n                    childTileKeys.push(childTileKey);\n                }\n            }\n            // swap\n            [nextTileKeys, childTileKeys] = [childTileKeys, nextTileKeys];\n        }\n\n        return false;\n    }\n\n    private removeTile(tile: Tile): void {\n        const tileMap = this.getTileMap(tile.dataSource);\n        if (!tileMap) {\n            return;\n        }\n        tileMap.delete(tile.tileKey.mortonCode());\n\n        // Remove tile map if it's empty. That way, counting the number of data sources in the\n        // map is enough to know if there's any tile.\n        if (tileMap.size === 0) {\n            this.m_dataSourceMap.delete(tile.dataSource);\n        }\n    }\n\n    private animateExtrusion() {\n        if (this.m_state !== AnimatedExtrusionState.Started) {\n            return;\n        }\n\n        const currentTime = Date.now();\n        if (this.m_startTime < 0) {\n            this.m_startTime = currentTime;\n        }\n\n        const duration = this.duration;\n        const timeProgress = Math.min(currentTime - this.m_startTime, duration);\n\n        const extrusionRatio = MathUtils.easeInOutCubic(\n            ExtrusionFeatureDefs.DEFAULT_RATIO_MIN,\n            ExtrusionFeatureDefs.DEFAULT_RATIO_MAX,\n            timeProgress / duration\n        );\n        this.setExtrusionRatio(extrusionRatio);\n\n        if (timeProgress >= duration) {\n            this.m_state = AnimatedExtrusionState.Finished;\n        }\n\n        this.m_mapView.update();\n    }\n\n    private resetAnimation(resetTiles: boolean) {\n        this.m_state = AnimatedExtrusionState.None;\n        this.m_startTime = -1;\n        if (resetTiles) {\n            this.m_dataSourceMap.forEach(tileMap => {\n                tileMap.forEach(state => {\n                    state.animated = false;\n                });\n            });\n        }\n    }\n\n    private setExtrusionRatio(value: number) {\n        this.m_dataSourceMap.forEach(tileMap => {\n            tileMap.forEach(state => {\n                if (!state.animated) {\n                    this.setTileExtrusionRatio(state.materials, value);\n                    if (value >= 1) {\n                        state.animated = true;\n                    }\n                }\n            });\n        });\n    }\n\n    private setTileExtrusionRatio(materials: ExtrusionFeature[], value: number) {\n        materials.forEach(material => {\n            material.extrusionRatio = value;\n        });\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { FlatTheme, Theme } from \"@here/harp-datasource-protocol\";\nimport { TileKey, TilingScheme, webMercatorTilingScheme } from \"@here/harp-geoutils\";\n\nimport { DataSource } from \"./DataSource\";\nimport { addGroundPlane } from \"./geometry/AddGroundPlane\";\nimport { Tile } from \"./Tile\";\n\n/**\n * Provides background geometry for all tiles.\n */\nexport class BackgroundDataSource extends DataSource {\n    static readonly GROUND_RENDER_ORDER = Number.MIN_SAFE_INTEGER;\n    private static readonly DEFAULT_TILING_SCHEME = webMercatorTilingScheme;\n    private m_tilingScheme: TilingScheme = BackgroundDataSource.DEFAULT_TILING_SCHEME;\n\n    constructor() {\n        super({ name: \"background\" });\n        this.cacheable = true;\n        this.addGroundPlane = true;\n        this.enablePicking = false;\n    }\n\n    updateStorageLevelOffset() {\n        let storageLevelOffset: number | undefined;\n\n        this.mapView.dataSources.forEach(ds => {\n            if (ds === this) {\n                return;\n            }\n            const tilingScheme = ds.getTilingScheme();\n            if (tilingScheme === this.m_tilingScheme) {\n                storageLevelOffset =\n                    storageLevelOffset === undefined\n                        ? ds.storageLevelOffset\n                        : Math.max(storageLevelOffset, ds.storageLevelOffset);\n            }\n        });\n\n        if (storageLevelOffset === undefined) {\n            storageLevelOffset = 0;\n        }\n\n        if (storageLevelOffset !== this.storageLevelOffset) {\n            this.storageLevelOffset = storageLevelOffset;\n            this.mapView.clearTileCache(this.name);\n        }\n    }\n\n    /** @override */\n    async setTheme(theme: Theme | FlatTheme, languages?: string[]): Promise<void> {\n        this.mapView.clearTileCache(this.name);\n    }\n\n    setTilingScheme(tilingScheme?: TilingScheme) {\n        const newScheme = tilingScheme ?? BackgroundDataSource.DEFAULT_TILING_SCHEME;\n        if (newScheme === this.m_tilingScheme) {\n            return;\n        }\n\n        this.m_tilingScheme = newScheme;\n        this.updateStorageLevelOffset();\n        this.mapView.clearTileCache(this.name);\n    }\n\n    /** @override */\n    getTilingScheme(): TilingScheme {\n        return this.m_tilingScheme;\n    }\n\n    /** @override */\n    getTile(tileKey: TileKey): Tile | undefined {\n        const tile = new Tile(this, tileKey);\n        tile.forceHasGeometry(true);\n        addGroundPlane(tile, BackgroundDataSource.GROUND_RENDER_ORDER);\n\n        return tile;\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { LoggerManager } from \"@here/harp-utils\";\n\nimport { DataSource } from \"./DataSource\";\nimport { ITileLoader, TileLoaderState } from \"./ITileLoader\";\n\nconst logger = LoggerManager.instance.create(\"BaseTileLoader\");\n\n/**\n * @internal\n * Base class for tile loaders that provides state handling, request abortion and a load promise.\n */\nexport abstract class BaseTileLoader implements ITileLoader {\n    state: TileLoaderState = TileLoaderState.Initialized;\n\n    /**\n     * Error object if loading or decoding failed.\n     */\n    error?: Error;\n\n    protected m_priority: number = 0;\n\n    /**\n     * The abort controller notifying the [[DataProvider]] to cancel loading.\n     */\n    private loadAbortController = new AbortController();\n\n    /**\n     * The promise which is resolved when loading and decoding have finished.\n     */\n    private donePromise?: Promise<TileLoaderState>;\n\n    /**\n     * The internal function that is called when loading and decoding have finished successfully.\n     */\n    private resolveDonePromise?: (state: TileLoaderState) => void;\n\n    /**\n     * The internal function that is called when loading and decoding failed.\n     */\n    private rejectedDonePromise?: (state: TileLoaderState) => void;\n\n    /**\n     * Set up loading of a single [[Tile]].\n     *\n     * @param dataSource - The [[DataSource]] the tile belongs to.\n     * @param tileKey - The quadtree address of a [[Tile]].\n     */\n    constructor(protected dataSource: DataSource, protected tileKey: TileKey) {}\n\n    /**\n     * @override\n     */\n    get priority(): number {\n        return this.m_priority;\n    }\n\n    /**\n     * @override\n     */\n    set priority(value: number) {\n        this.m_priority = value;\n    }\n\n    /**\n     * @override\n     */\n    loadAndDecode(): Promise<TileLoaderState> {\n        switch (this.state) {\n            case TileLoaderState.Loading:\n            case TileLoaderState.Loaded:\n            case TileLoaderState.Decoding:\n                // tile is already loading\n                return this.donePromise!;\n\n            case TileLoaderState.Ready:\n            case TileLoaderState.Failed:\n            case TileLoaderState.Initialized:\n            case TileLoaderState.Canceled:\n                // restart loading\n                this.load();\n                return this.donePromise!;\n        }\n    }\n\n    /**\n     * @override\n     */\n    waitSettled(): Promise<TileLoaderState> {\n        if (!this.donePromise) {\n            return Promise.resolve(this.state);\n        }\n        return this.donePromise;\n    }\n\n    /**\n     * @override\n     */\n    cancel(): void {\n        if (this.state === TileLoaderState.Loading) {\n            this.loadAbortController.abort();\n            this.loadAbortController = new AbortController();\n        }\n        this.cancelImpl();\n\n        this.onDone(TileLoaderState.Canceled);\n    }\n\n    /**\n     * @override\n     */\n    get isFinished(): boolean {\n        return (\n            this.state === TileLoaderState.Ready ||\n            this.state === TileLoaderState.Canceled ||\n            this.state === TileLoaderState.Failed\n        );\n    }\n\n    /**\n     * Called on load cancelation, may be overriden to extend behaviour.\n     */\n    protected cancelImpl(): void {}\n\n    /**\n     * Called on tile load.\n     *\n     * @param abortSignal - Signal emitted to abort loading.\n     * @param onDone - Callback that must be called once the loading is done.\n     * @param onError - Callback that must be called on loading error.\n     */\n    protected abstract loadImpl(\n        abortSignal: AbortSignal,\n        onDone: (doneState: TileLoaderState) => void,\n        onError: (error: Error) => void\n    ): void;\n\n    /**\n     * Start loading. Only call if loading did not start yet.\n     */\n    private load() {\n        this.loadImpl(\n            this.loadAbortController.signal,\n            this.onDone.bind(this),\n            this.onError.bind(this)\n        );\n\n        if (this.donePromise === undefined) {\n            this.donePromise = new Promise<TileLoaderState>((resolve, reject) => {\n                this.resolveDonePromise = resolve;\n                this.rejectedDonePromise = reject;\n            });\n        }\n        this.state = TileLoaderState.Loading;\n    }\n\n    /**\n     * Called when loading and decoding has finished successfully. Resolves loading promise if the\n     * state is Ready, otherwise it rejects the promise with the supplied state.\n     *\n     * @param doneState - The latest state of loading.\n     */\n    private onDone(doneState: TileLoaderState) {\n        if (this.resolveDonePromise && doneState === TileLoaderState.Ready) {\n            this.resolveDonePromise(doneState);\n        } else if (this.rejectedDonePromise) {\n            this.rejectedDonePromise(doneState);\n        }\n        this.resolveDonePromise = undefined;\n        this.rejectedDonePromise = undefined;\n        this.donePromise = undefined;\n        this.state = doneState;\n    }\n\n    /**\n     * Called when loading or decoding has finished with an error.\n     *\n     * @param error - Error object describing the failing.\n     */\n    private onError(error: Error) {\n        if (this.state === TileLoaderState.Canceled) {\n            // If we're canceled, we should simply ignore any state transitions and errors from\n            // underlying load/decode ops.\n            return;\n        }\n        const dataSource = this.dataSource;\n        logger.error(\n            `[${dataSource.name}]: failed to load tile ${this.tileKey.mortonCode()}`,\n            error\n        );\n\n        this.error = error;\n\n        this.onDone(TileLoaderState.Failed);\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { GeoPolygon, Projection, ProjectionType } from \"@here/harp-geoutils\";\nimport { PerspectiveCamera } from \"three\";\n\nimport { PlaneViewBounds } from \"./PlaneViewBounds\";\nimport { SphereViewBounds } from \"./SphereViewBounds\";\nimport { ViewBounds } from \"./ViewBounds\";\n\n/**\n * Generates Bounds for a camera view and a projection\n *\n * @internal\n */\nexport class BoundsGenerator {\n    private m_viewBounds!: ViewBounds;\n\n    constructor(\n        private readonly m_view: {\n            camera: PerspectiveCamera;\n            projection: Projection;\n            tileWrappingEnabled: boolean;\n        }\n    ) {\n        this.createViewBounds();\n    }\n\n    /**\n     * Generates a {@link @here/harp-geoutils#GeoPolygon} covering the visible map.\n     * The coordinates are sorted to ccw winding, so a polygon could be drawn with them.\n     * @returns The GeoPolygon with the view bounds or undefined if world is not in view.\n     */\n    generate(): GeoPolygon | undefined {\n        if (this.m_view.projection !== this.m_viewBounds.projection) {\n            this.createViewBounds();\n        }\n        return this.m_viewBounds.generate();\n    }\n\n    private createViewBounds() {\n        this.m_viewBounds =\n            this.m_view.projection.type === ProjectionType.Planar\n                ? new PlaneViewBounds(this.m_view.camera, this.m_view.projection, this.m_view)\n                : new SphereViewBounds(this.m_view.camera, this.m_view.projection);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3 } from \"three\";\n\nimport { MapView } from \"./MapView\";\nimport { MapViewUtils } from \"./Utils\";\n\n/**\n * The default value for camera movement throttling, in milliseconds.\n */\nconst DEFAULT_THROTTLING_TIMEOUT = 300;\n\n/**\n * The `CameraMovementDetector` class checks for changes in camera position and orientation, to\n * detect continuous movements without the animation mode activated in {@link MapView}. If the\n * interaction is not continuous enough, you can use a throttling timer to reduce the number of\n * callbacks.\n */\nexport class CameraMovementDetector {\n    private m_lastAttitude?: MapViewUtils.Attitude;\n    private readonly m_lastCameraPos = new Vector3();\n    private readonly m_newCameraPos = new Vector3();\n    private m_cameraMovedLastFrame: boolean | undefined;\n    private m_throttlingTimerId?: number = undefined;\n    private m_movementDetectorDeadline: number = 0;\n\n    /**\n     * Initializes the detector with timeout value and callbacks. {@link MapView} also provides\n     * events for client code to be notified when these cues occur.\n     *\n     * @param m_throttlingTimeout - The delay, in milliseconds, between the last user interaction\n     * detected and the call to `m_movementFinishedFunc`; the default is `300`.\n     * @param m_movementStartedFunc - Callback function, called when the user starts interacting.\n     * @param m_movementFinishedFunc - Callback function, called when the user stops interacting.\n     */\n    constructor(\n        private readonly m_throttlingTimeout: number | undefined,\n        private m_movementStartedFunc: (() => void) | undefined,\n        private m_movementFinishedFunc: (() => void) | undefined\n    ) {\n        if (this.m_throttlingTimeout === undefined) {\n            this.m_throttlingTimeout = DEFAULT_THROTTLING_TIMEOUT;\n        }\n    }\n\n    /**\n     * Checks if the camera has moved since the last time it was checked. The\n     * `m_movementStartedFunc` is called when a movement starts. If no movement\n     * is detected, a timer for `m_movementFinishedFunc` starts.\n     *\n     * @param mapView - [[Mapview]]'s position and camera are checked for modifications.\n     */\n    checkCameraMoved(mapView: MapView, now: number): boolean {\n        const newAttitude = MapViewUtils.extractAttitude(mapView, mapView.camera);\n        const newCameraPos = mapView.camera.getWorldPosition(this.m_newCameraPos);\n\n        if (this.m_lastAttitude === undefined) {\n            this.m_lastCameraPos.copy(newCameraPos);\n            this.m_lastAttitude = newAttitude;\n            return false;\n        }\n        const cameraMoved =\n            !this.m_lastCameraPos.equals(newCameraPos) ||\n            newAttitude.yaw !== this.m_lastAttitude.yaw ||\n            newAttitude.pitch !== this.m_lastAttitude.pitch ||\n            newAttitude.roll !== this.m_lastAttitude.roll;\n\n        if (cameraMoved) {\n            this.m_lastCameraPos.copy(newCameraPos);\n            this.m_lastAttitude = newAttitude;\n        }\n\n        if (cameraMoved !== this.m_cameraMovedLastFrame) {\n            if (cameraMoved) {\n                this.movementStarted();\n            }\n            this.m_cameraMovedLastFrame = cameraMoved;\n        }\n        if (cameraMoved) {\n            // Start timer\n            this.m_movementDetectorDeadline = now + this.m_throttlingTimeout!;\n            this.startMovementFinishedTimer(now);\n        }\n\n        return this.m_cameraMovedLastFrame;\n    }\n\n    /**\n     * Reset the saved camera position. Next time checkCameraMoved is called, it will return\n     * `false`.\n     */\n    clear(mapView: MapView) {\n        const newCameraPos = mapView.camera.getWorldPosition(this.m_newCameraPos);\n        this.m_lastCameraPos.set(newCameraPos.x, newCameraPos.y, newCameraPos.z);\n\n        const newAttitude = MapViewUtils.extractAttitude(mapView, mapView.camera);\n        this.m_lastAttitude = newAttitude;\n    }\n\n    /**\n     * Force change of camera position. Next time checkCameraMoved is called, it will return `true`.\n     */\n    forceMoved() {\n        this.m_lastCameraPos.set(Number.NaN, Number.NaN, Number.NaN);\n    }\n\n    /**\n     * Returns `true` if the camera of this {@link MapView} is currently moving. In this case the\n     * `m_movementFinishedFunc` is waiting to be called after the throttling timer runs out.\n     */\n    get cameraIsMoving() {\n        return this.m_throttlingTimerId !== undefined;\n    }\n\n    /**\n     * Disposes resources and kills the throttling timer.\n     */\n    dispose() {\n        this.removeMovementFinishedTimer();\n        this.m_movementStartedFunc = undefined;\n        this.m_movementFinishedFunc = undefined;\n    }\n\n    /**\n     * Returns `true` if the camera has moved in the last frame.\n     */\n    get cameraMovedLastFrame(): boolean {\n        return this.m_cameraMovedLastFrame === true;\n    }\n\n    private movementStarted() {\n        if (this.m_movementStartedFunc !== undefined) {\n            this.m_movementStartedFunc();\n        }\n    }\n\n    private movementFinished() {\n        this.removeMovementFinishedTimer();\n        if (this.m_movementFinishedFunc !== undefined) {\n            this.m_movementFinishedFunc();\n        }\n    }\n\n    private startMovementFinishedTimer(now: number) {\n        if (this.m_throttlingTimerId === undefined) {\n            const remainingTime = Math.max(0, this.m_movementDetectorDeadline - now);\n            this.m_throttlingTimerId = setTimeout(this.onDeadlineTimer, remainingTime) as any;\n        }\n    }\n\n    private readonly onDeadlineTimer = () => {\n        this.m_throttlingTimerId = undefined;\n        const now = performance.now();\n        if (now >= this.m_movementDetectorDeadline) {\n            this.movementFinished();\n        } else {\n            this.startMovementFinishedTimer(now);\n        }\n    };\n\n    private removeMovementFinishedTimer() {\n        if (this.m_throttlingTimerId !== undefined) {\n            clearTimeout(this.m_throttlingTimerId);\n            this.m_throttlingTimerId = undefined;\n        }\n    }\n}\n","/*\n * Copyright (C) 2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector2Like } from \"@here/harp-geoutils\";\nimport { assert } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { MAX_FOV_RAD, MIN_FOV_RAD } from \"./FovCalculation\";\n\n// In centered projections the principal point is at NDC origin, splitting vertical and horizontal\n// fovs in two equal halves.\nfunction isCenteredProjection(principalPoint: Vector2Like): boolean {\n    return principalPoint.x === 0 && principalPoint.y === 0;\n}\n\n/**\n * Computes the fov on the positive side of NDC x or y dimension (i.e. either right or top fov).\n * @param focalLength - Focal length in pixels. It must be larger than 0.\n * @param ppOffset - Principal point NDC offset either in y or x dimension.\n * @param viewportSide - Viewport height or width in pixels, must be same dimension as ppOffset.\n * @returns side fov in radians.\n */\nfunction computePosSideFov(focalLength: number, ppOffset: number, viewportSide: number): number {\n    // see diagram in computeFocalLengthFromFov().\n    assert(focalLength > 0, \"Focal length must be larger than 0\");\n    return Math.atan(((1 - ppOffset) * viewportSide * 0.5) / focalLength);\n}\n\n/**\n * Computes the vertical or horizontal fov.\n * @param focalLength - Focal length in pixels. It must be larger than 0.\n * @param ppOffset - Principal point NDC offset in y (vertical fov) or x dimension (horizontal fov).\n * @param viewportSide - Viewport height or width in pixels, must be same dimension as ppOffset.\n * @returns vertical or horizontal fov in radians.\n */\nfunction computeFov(focalLength: number, ppOffset: number, viewportSide: number): number {\n    assert(focalLength > 0, \"Focal length must be larger than 0\");\n    // For uncentered fov, compute the two fov sides separately. The fov on the negative NDC\n    // side is computed in the same way as that for the positive side but flipping the offset sign.\n    return ppOffset === 0\n        ? 2 * Math.atan((0.5 * viewportSide) / focalLength)\n        : computePosSideFov(focalLength, ppOffset, viewportSide) +\n              computePosSideFov(focalLength, -ppOffset, viewportSide);\n}\n\n/**\n * For off-center projections, fovs are asymmetric. In that case, the camera saves some of the side\n * fovs to save some computations. All values are in radians.\n */\ninterface Fovs {\n    top: number;\n    right: number;\n    horizontal: number; // left = horizontal - right.\n}\n\nfunction getFovs(camera: THREE.PerspectiveCamera): Fovs | undefined {\n    return camera.userData.fovs;\n}\n\n/**\n * Saves camera vertical fov and focal length. For off-center projections, saves side fovs as well.\n */\nfunction setCameraParams(\n    camera: THREE.PerspectiveCamera,\n    ppalPoint: Vector2Like,\n    focalLength: number,\n    viewportHeight: number,\n    verticalFov: number\n): void {\n    const viewportWidth = viewportHeight * camera.aspect;\n    let hFov = computeFov(focalLength, ppalPoint.x, viewportWidth);\n\n    if (hFov < MIN_FOV_RAD || hFov > MAX_FOV_RAD) {\n        // Invalid horizontal fov, clamp and compute again focal length and vertical fov.\n        hFov = THREE.MathUtils.clamp(hFov, MIN_FOV_RAD, MAX_FOV_RAD);\n        const focalLength = computeFocalLengthFromFov(hFov, viewportWidth, ppalPoint.x);\n        verticalFov = computeFov(focalLength, ppalPoint.y, viewportHeight);\n    }\n\n    camera.fov = THREE.MathUtils.radToDeg(verticalFov);\n\n    if (isCenteredProjection(ppalPoint)) {\n        delete camera.userData.fovs;\n    } else {\n        const width = viewportHeight * camera.aspect;\n        camera.userData.fovs = {\n            top: computePosSideFov(focalLength, ppalPoint.y, viewportHeight),\n            right: computePosSideFov(focalLength, ppalPoint.x, width),\n            horizontal: hFov\n        } as Fovs;\n    }\n    camera.userData.focalLength = focalLength;\n}\n\n/**\n * Computes a camera's focal length from vertical fov and viewport height or horizontal fov and\n * viewport width.\n * @beta\n *\n * @param fov - Vertical or horizontal field of view in radians.\n * @param viewportSide - Viewport height if fov is vertical, otherwise viewport width.\n * @param ppOffset - Principal point offset in y direction if fov is vertical,\n * otherwise in x direction.\n * @returns focal length in pixels.\n */\nfunction computeFocalLengthFromFov(fov: number, viewportSide: number, ppOffset: number): number {\n    //               C <- Projection center\n    //              /|-_\n    //             / |  -_                      pfov = fov along positive NDC side (tfov or rfov)\n    //            /  |    -_                    nfov = fov along negative NDC side (bfov or lfov)\n    //           /   |      -_\n    //          /    |        -_\n    //         /pfov |  nfov    -_\n    //        /      |            -_\n    //       /       |              -_\n    //    a /        |focal length(f) -_ b\n    //     /         |                  -_\n    //    /          |  Principal point   -_\n    //   /           | /      (pp)          -_\n    // A/____________P________________________-_B  Viewport\n    //  <------------><------------------------>\n    //  (1-ppOff)*s/2      (1+ppOff)*s/2\n    //  <-------------------------------------->\n    //     s = viewportSide (height or width)\n    //\n    // Diagram of fov splitting (potentially asymmetric) along a viewport side (height or width).\n    // For viewport height, fov is split into top (tfov) and bottom (bfov) fovs. For width, it's\n    // split into right fov (rfov) and left fov (lfov).\n\n    // Case 1. Symmetric fov split. Principal point is centered (centered projection):\n    const halfSide = viewportSide / 2;\n    const ppCentered = ppOffset === 0;\n    if (ppCentered) {\n        return halfSide / Math.tan(fov / 2);\n    }\n\n    // Case 2. Asymmetric fov split. Off-center perspective projection:\n    const eps = 1e-6;\n    const ppOffsetSq = ppOffset ** 2;\n\n    if (Math.abs(fov - Math.PI / 2) < eps) {\n        // Case 2a. Special case for (close to) right angle fov, tangent approaches infinity:\n        // 3 right triangles: ACB, APC, BPC. Use pythagorean theorem on each to get 3 equations:\n        // a^2 = f^2 + (1-ppOff)*s/2\n        // b^2 = f^2 + (1+ppOff)*s/2\n        // h^2 = a^2 + b^2\n        // Substitute a^2 and b^2 in third equation and solve for f to get:\n        // f = (s/2) * sqrt(1-ppOff^2)\n        return halfSide * Math.sqrt(1 - ppOffsetSq);\n    }\n\n    // Case 2b. General asymmetric fov case:\n    // (1)   tan(pfov) = (1-ppOff)*s / (2*f)\n    // (2)   tan(nfov) = (1+ppOff)*s / (2*f)\n    // Use formula for the tan of the sum of two angles:\n    // (3)   tan(fov) = tan(pfov+nfov) = (tan(pfov) + tan(nfov)) / (1 - (tan(pfov) * tan(nfov)))\n\n    // Substitute (1) and (2) in (3) and solve for f to get a quadratic equation:\n    // 4*(tan(fov))^2 - 4*s*f - tan(fov)(1-ppOff^2)*s^2 = 0 , solving for f:\n    // f = (s/2) * (1 +/- sqrt(1 + tan(fov)(1-ppOff^2)^2)) / tan(fov)\n\n    // ppOff (principal point offset) is in [-1,1], so there's two real solutions (radicant is >=1)\n    // and we choose the positive solution on each case:\n    // a) tan(fov) > 0, fov in (0,pi/2) -> f = (s/2) * (1 + sqrt(1 + tan(fov)^2(1-ppOff^2))) / tan(fov)\n    // b) tan(fov) < 0, fov in (pi/2,pi) -> f = (s/2) * (1 - sqrt(1 + tan(fov)^2(1-ppOff^2))) / tan(fov)\n\n    const tanFov = Math.tan(fov);\n    const sign = Math.sign(tanFov);\n    const sqrt = Math.sqrt(1 + tanFov ** 2 * (1 - ppOffsetSq));\n    const f = (halfSide * (1 + sign * sqrt)) / tanFov;\n    assert(f >= 0, \"Focal length must be larger than 0\");\n    return f;\n}\n\nexport namespace CameraUtils {\n    /**\n     * Returns the camera's focal length.\n     * @beta\n     *\n     * @param camera - The camera.\n     * @returns The focal length in pixels or `undefined` if not set.\n     */\n    export function getFocalLength(camera: THREE.PerspectiveCamera): number | undefined {\n        return camera.userData?.focalLength;\n    }\n\n    /**\n     * Sets a camera's focal length.\n     * @remarks The camera's vertical fov will be updated to achieve the given viewport height.\n     * @beta\n     *\n     * @param camera\n     * @param focalLength - Focal length in pixels. It must be larger than 0.\n     * @param viewportHeight - Viewport height in pixels, used to compute vertical fov.\n     * @returns The new camera's focal length in pixels.\n     */\n    export function setFocalLength(\n        camera: THREE.PerspectiveCamera,\n        focalLength: number,\n        viewportHeight: number\n    ): number {\n        const ppalPoint = getPrincipalPoint(camera);\n        const vFov = computeFov(focalLength, ppalPoint.y, viewportHeight);\n        if (vFov < MIN_FOV_RAD || vFov > MAX_FOV_RAD) {\n            // Invalid vertical fov, clamp and compute again focal length.\n            setVerticalFov(camera, vFov, viewportHeight);\n        } else {\n            setCameraParams(camera, ppalPoint, focalLength, viewportHeight, vFov);\n        }\n\n        // focal length might change in setCameraParams due to horizontal fov restrictions.\n        return getFocalLength(camera)!;\n    }\n\n    /**\n     * Returns the camera's vertical field of view.\n     * @param camera - The camera.\n     * @returns The vertical fov in radians.\n     */\n    export function getVerticalFov(camera: THREE.PerspectiveCamera): number {\n        return THREE.MathUtils.degToRad(camera.fov);\n    }\n\n    /**\n     * Sets a camera's vertical fov.\n     * @remarks The camera's focal length will be updated to achieve the given viewport height.\n     * @beta\n     *\n     * @param camera\n     * @param verticalFov - Vertical field of view in radians. It'll be clamped to\n     *                      [{@link MIN_FOV_RAD}, {@link MAX_FOV_RAD}].\n     * @param viewportHeight - Viewport height in pixels, used to compute focal length.\n     * @returns The new camera's vertical fov in radians.\n     */\n    export function setVerticalFov(\n        camera: THREE.PerspectiveCamera,\n        verticalFov: number,\n        viewportHeight: number\n    ): number {\n        verticalFov = THREE.MathUtils.clamp(verticalFov, MIN_FOV_RAD, MAX_FOV_RAD);\n        const ppalPoint = getPrincipalPoint(camera);\n        const focalLength = computeFocalLengthFromFov(verticalFov, viewportHeight, ppalPoint.y);\n\n        setCameraParams(camera, ppalPoint, focalLength, viewportHeight, verticalFov);\n\n        // vertical fov might change in setCameraParams due to horizontal fov restrictions.\n        return getVerticalFov(camera);\n    }\n\n    /**\n     * Calculates object's screen size based on the focal length and it's camera distance.\n     * @beta\n     *\n     * @param focalLength - Focal length in pixels (see {@link setVerticalFov})\n     * @param distance - Object distance in world space.\n     * @param worldSize - Object size in world space.\n     * @return object size in screen space.\n     */\n    export function convertWorldToScreenSize(\n        focalLength: number,\n        distance: number,\n        worldSize: number\n    ): number {\n        return (focalLength * worldSize) / distance;\n    }\n\n    /**\n     * Calculates object's world size based on the focal length and it's camera distance.\n     * @beta\n     *\n     * @param focalLength - Focal length in pixels (see {@link setVerticalFov})\n     * @param distance - Object distance in world space.\n     * @param screenSize - Object size in screen space.\n     * @return object size in world space.\n     */\n    export function convertScreenToWorldSize(\n        focalLength: number,\n        distance: number,\n        screenSize: number\n    ): number {\n        return (distance * screenSize) / focalLength;\n    }\n\n    /**\n     * Returns the camera's principal point (intersection of principal ray and image plane)\n     * in NDC coordinates.\n     * @beta\n     * @see https://en.wikipedia.org/wiki/Pinhole_camera_model\n     * @remarks This point coincides with the principal vanishing point. By default it's located at\n     * the image center (NDC coords [0,0]), and the resulting projection is centered or symmetric.\n     * But it may be offset (@see THREE.PerspectiveCamera.setViewOffset) for some use cases such as\n     * multiview setups (e.g. stereoscopic rendering), resulting in an asymmetric perspective\n     * projection.\n     * @param camera - The camera.\n     * @param result - Optional vector where the principal point coordinates will be copied.\n     * @returns A vector containing the principal point NDC coordinates.\n     */\n    export function getPrincipalPoint(\n        camera: THREE.PerspectiveCamera,\n        result: Vector2Like = new THREE.Vector2()\n    ): Vector2Like {\n        result.x = -camera.projectionMatrix.elements[8];\n        result.y = -camera.projectionMatrix.elements[9];\n        return result;\n    }\n\n    /**\n     * Sets the camera's principal point (intersection of principal ray and image plane)\n     * in NDC coordinates.\n     * @beta\n     * @see {@link getPrincipalPoint}\n     * @param camera - The camera.\n     * @param ndcCoords - The principal point's NDC coordinates, each coordinate can have values in\n     * the open interval (-1,1).\n     */\n    export function setPrincipalPoint(camera: THREE.PerspectiveCamera, ndcCoords: Vector2Like) {\n        // We only need to set to proper elements in the projection matrix:\n        // camera.projectionMatrix.elements[8] = -ndcCoords.x\n        // camera.projectionMatrix.elements[9] = -ndcCoords.y\n        // However, this can't be done directly, otherwise it'd be overwritten on the next call to\n        // camera.updateProjectionMatrix(). The only way to set the principal point is through a\n        // THREE.js camera method for multi-view setup, see:\n        // https://threejs.org/docs/#api/en/cameras/PerspectiveCamera.setViewOffset\n        const height = 1;\n        const width = camera.aspect;\n\n        // Principal point splits fov in two angles that must be strictly less than 90 degrees\n        // (each one belongs to a right triangle). Setting the principal point at the edges (-1 or\n        // 1) would make it impossible to achieve an fov >= 90. Thus, clamp the principal point\n        // coordinates to values slightly smaller than 1.\n        const maxNdcCoord = 1 - 1e-6;\n        camera.setViewOffset(\n            width,\n            height,\n            (-THREE.MathUtils.clamp(ndcCoords.x, -maxNdcCoord, maxNdcCoord) * width) / 2,\n            (THREE.MathUtils.clamp(ndcCoords.y, -maxNdcCoord, maxNdcCoord) * height) / 2,\n            width,\n            height\n        );\n    }\n\n    /**\n     * Returns the camera's horizontal field of view.\n     * @param camera - The camera.\n     * @returns The horizontal fov in radians.\n     */\n    export function getHorizontalFov(camera: THREE.PerspectiveCamera): number {\n        // If horizontal fov is not stored in camera, assume centered projection and compute\n        // it from the vertical fov.\n        return (\n            getFovs(camera)?.horizontal ??\n            2 * Math.atan(Math.tan(THREE.MathUtils.degToRad(camera.fov) / 2) * camera.aspect)\n        );\n    }\n\n    /**\n     * Returns top fov angle for a given perspective camera.\n     * @beta\n     * @remarks In symmetric projections, the principal point coincides with the image center, and\n     * the vertical and horizontal FOVs are each split at that point in two equal halves.\n     * However, in asymmetric projections the principal point is not at the image center, and thus\n     * each fov is split unevenly in two parts:\n     *\n     *    Symmetric projection        Asymmetric projection\n     * -------------------------   --------------------------\n     * |           ^           |   |       ^                |\n     * |           |           |   |       |tFov            |\n     * |           |tFov       |   | lFov  v      rFov      |\n     * |           |           |   |<----->x<-------------->|\n     * |    lFov   v   rFov    |   |  ppal ^ point          |\n     * |<--------->x<--------->|   |       |    o           |\n     * | ppal point=img center |   |       | img center     |\n     * |           ^           |   |       |                |\n     * |           |bFov       |   |       |bFov            |\n     * |           |           |   |       |                |\n     * |           v           |   |       v                |\n     * -------------------------   --------------------------\n     *\n     * @param camera - The camera.\n     * @returns The top fov angle in radians.\n     */\n    export function getTopFov(camera: THREE.PerspectiveCamera): number {\n        return getFovs(camera)?.top ?? THREE.MathUtils.degToRad(camera.fov / 2);\n    }\n\n    /**\n     * Returns bottom fov angle for a given perspective camera.\n     * @see {@link CameraUtils.getTopFov}\n     * @beta\n     * @param camera - The camera.\n     * @returns The bottom fov angle in radians.\n     */\n    export function getBottomFov(camera: THREE.PerspectiveCamera): number {\n        return THREE.MathUtils.degToRad(camera.fov) - getTopFov(camera);\n    }\n\n    /**\n     * Returns right fov angle for a given perspective camera.\n     * @see {@link CameraUtils.getTopFov}\n     * @beta\n     * @param camera - The camera.\n     * @returns The right fov angle in radians.\n     */\n    export function getRightFov(camera: THREE.PerspectiveCamera): number {\n        return getFovs(camera)?.right ?? getHorizontalFov(camera) / 2;\n    }\n\n    /**\n     * Returns left fov angle for a given perspective camera.\n     * @see {@link CameraUtils.getTopFov}\n     * @beta\n     * @param camera - The camera.\n     * @returns The left fov angle in radians.\n     */\n    export function getLeftFov(camera: THREE.PerspectiveCamera): number {\n        return getFovs(camera)?.right !== undefined\n            ? getHorizontalFov(camera) - getRightFov(camera)\n            : getHorizontalFov(camera) / 2;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ViewRanges } from \"@here/harp-datasource-protocol/lib/ViewRanges\";\nimport { EarthConstants, Projection, ProjectionType } from \"@here/harp-geoutils\";\nimport { assert } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { CameraUtils } from \"./CameraUtils\";\nimport { ElevationProvider } from \"./ElevationProvider\";\nimport { MapViewUtils } from \"./Utils\";\n\nconst epsilon = 0.000001;\n\nnamespace SphericalProj {\n    const tmpVectors: THREE.Vector3[] = [new THREE.Vector3(), new THREE.Vector3()];\n    const raycaster = new THREE.Raycaster();\n    const sphere = new THREE.Sphere(new THREE.Vector3(), EarthConstants.EQUATORIAL_RADIUS);\n\n    /**\n     * Calculate the horizon distance from a point above a sphere's surface.\n     *\n     * @remarks\n     * Returns zero if point is below surface or only very slightly above surface of sphere.\n     * @see https://en.wikipedia.org/wiki/Horizon#Derivation\n     * @param d - Distance from point to center of sphere.\n     * @param r - Radius of sphere.\n     */\n    function getHorizonDistance(d: number, r: number): number {\n        // There may be situations when maximum elevation still remains below sea level\n        // (elevation < 0) or it is negligible (elevation ~ epsilon)\n        return d - r < epsilon ? 0 : Math.sqrt(d * d - r * r);\n    }\n\n    /**\n     * Calculate furthest visible distance from camera position projected on eye direction.\n     *\n     * @remarks\n     * Furthest visible distance is assumed to be distance from camera to horizon\n     * plus distance from elevated geometry to horizon(so that high objects behind horizon\n     * remain visible).\n     * @see https://en.wikipedia.org/wiki/Horizon#Objects_above_the_horizon\n     * @param camera - The camera.\n     * @param d - Distance from camera to origin.\n     * @param minR - Min sphere radius.\n     * @param maxR - Max sphere radius.\n     */\n    export function getFarDistanceFromElevatedHorizon(\n        camera: THREE.PerspectiveCamera,\n        d: number,\n        minR: number,\n        maxR: number\n    ): number {\n        //                              F\n        //                         far +_\n        //         , - ~ ~ ~ - ,      +  <_\n        //     , '               ' , +     <_ E\n        //   ,           .          +,    . '\n        //  ,            .   maxR  + , '   /\n        // ,             .     ,  '    ,  /\n        // ,             . O '   +     , / te\n        // ,             | .    +      ,/\n        //  ,            |   . minR   ,/\n        //   ,           |     +.    ,/\n        //     ,         |    +   , '/\n        //       ' -_, _ | _ ,  '  / T (Tangent point = Horizon)\n        //     near      |  +     /\n        //             d | +    / t\n        //               | +   /\n        //               |+  /\n        //               C /---> up\n        //\n        // CF: Forward (look-at) vector.\n        // OC: Normal at camera\n        // OCF: Angle between camera normal and forward vector.\n        const t = getHorizonDistance(d, minR);\n\n        // Because we would like to see elevated geometry that may be visible beyond\n        // the tangent point on ground surface, we need to extend viewing distance along\n        // the tangent line by te (see graph above).\n        const te = getHorizonDistance(maxR, minR);\n\n        const normalToTanAngle = Math.asin(minR / d); // Angle OCT\n        // Angle between fwd vector (CF) and tangent (CT) in camera's up direction: FCT (= FCE)\n        const fwdToTanAngle = Math.abs(\n            normalToTanAngle - SphericalProj.getNormalToFwdAngle(camera)\n        );\n\n        // Project CE vector(length t + te) onto fwd vector (CF) to get far distance.\n        // |CF| = cos(FCE) * |CE| (angle CFE is the projection right angle).\n        const far = Math.cos(fwdToTanAngle) * (t + te);\n\n        return far;\n    }\n\n    /**\n     * Calculate distance to the nearest point where the near plane is tangent to the sphere,\n     * projected onto the camera forward vector.\n     * @param camera - The camera.\n     * @param bottomFov - Angle from camera forward vector to frustum bottom plane.\n     * @param R - The sphere radius.\n     * @returns The tangent point distance if the point is visible, otherwise `undefined`.\n     */\n    export function getProjNearPlaneTanDistance(\n        camera: THREE.Camera,\n        bottomFov: number,\n        R: number\n    ): number | undefined {\n        //                                                          ,^;;;;;;;;;;;;;;;;-\n        //                                                      ^^^^:                `;^^^:\n        //                          near plane              `++^                          '++^\n        //                              ,                 :?;                                `*?'\n        //                              +;              :\\\"                                     ^\\-\n        //                               {-           `/:                                         *>\n        //                                }`  :^^^^` :/                                            '{`\n        //                               ;\\N^^'     :|                                              `}`\n        //              fwdDir     ';^^^;` ,|      :(                                                 }`\n        // up                  :^^^^,   90° *>     }                                                  '}\n        //  ^            :^^^^,              ('   \\'                                                   (-\n        //  |      `;^^^;`                    }   }                                                     }\n        //  | ,^^^^:                          `}  }                                                     }\n        // CAM<--------------------------------{$?&-------------------------O                           {\n        //    \\ ';;;;;;;:`                      ^^}                  :^^^^,                             }\n        //     \\        `;;;;;;;;,               (%            -^^^^;`                                 `}\n        //      \\               `:;;;;;;;'        @, 90°  '^^^^;`                                      (-\n        //       \\       camToTanVec     ';;;;;;;TAN`:^^^^\"   -R*fwdDir                               ,{\n        //        \\                              `:}@-                                               `}\n        //         \\                                *$                                              `}`\n        //   Bottom frustum plane                    }$`                                           \"(\n        //                                            }{^                                        `\\;\n        //                                            `}\"|:                                     >|`\n        //                                             '( ,*+`                               '**`\n        //                                              ;|   ^++-                         :+>:\n        //                                               ;      ;^^^;`               -;^^^,\n        //                                                          `;;;;;;;;;;;;;;;;\"\n\n        const fwdDir = camera.getWorldDirection(tmpVectors[0]);\n        const camToTanVec = tmpVectors[1].copy(fwdDir).multiplyScalar(-R).sub(camera.position);\n        const near = camToTanVec.dot(fwdDir);\n        const cosTanDirToFwdDir = near / camToTanVec.length();\n\n        // Tangent point visible if angle from fwdDir to tangent is less than to frustum bottom.\n        return cosTanDirToFwdDir > Math.cos(bottomFov) ? near : undefined;\n    }\n\n    /**\n     * Calculate the distance to the intersection of a given ray with the sphere,\n     * projected onto the camera forward vector.\n     * @param camera - The camera.\n     * @param ndcDir - Ray direction in NDC coordinates.\n     * @param R - The sphere radius.\n     * @returns Intersection distance or `undefined` if there's no intersection.\n     */\n    export function getProjSphereIntersectionDistance(\n        camera: THREE.Camera,\n        ndcDir: THREE.Vector2,\n        R: number\n    ): number | undefined {\n        raycaster.setFromCamera(ndcDir, camera);\n        sphere.radius = R;\n        const intersection = raycaster.ray.intersectSphere(sphere, tmpVectors[0]);\n\n        return intersection !== null\n            ? intersection.sub(camera.position).dot(camera.getWorldDirection(tmpVectors[1]))\n            : undefined;\n    }\n\n    /**\n     * Calculate angle between forward vector and surface normal at camera position.\n     * @param camera - The camera.\n     * @returns The angle in radians.\n     */\n    export function getNormalToFwdAngle(camera: THREE.PerspectiveCamera): number {\n        const camToOriginDir = tmpVectors[0].copy(camera.position).negate().normalize();\n        const cosAngle = camToOriginDir.dot(camera.getWorldDirection(tmpVectors[1]));\n        return Math.acos(THREE.MathUtils.clamp(cosAngle, -1.0, 1.0));\n    }\n}\n\nexport interface ClipPlanesEvaluator {\n    /**\n     * Minimum elevation to be rendered, values beneath the sea level are negative.\n     */\n    minElevation: number;\n\n    /**\n     * Set maximum elevation to be rendered, values above sea level are positive.\n     */\n    maxElevation: number;\n\n    /**\n     * Compute near and far clipping planes distance.\n     *\n     * @remarks\n     * Evaluation method should be called on every frame  and camera clip planes updated.\n     * This is related to evaluator implementation and its input data, that may suddenly change\n     * such as camera position or angle, projection type or so.\n     * Some evaluators may not depend on all or even any of input objects, but to preserve\n     * compatibility with any evaluator type it is strongly recommended to update on every frame.\n     * @note The camera clipping planes (near/far properties) aren't automatically updated\n     * via #evaluateClipPlanes() call, user should do it manually if needed.\n     * @param camera - The camera in use.\n     * @param projection - The geo-projection currently used for encoding geographic data.\n     * @param elevationProvider - The optional elevation provider for fine tuned range calculation,\n     * taking into account terrain variability and unevenness.\n     *\n     */\n    evaluateClipPlanes(\n        camera: THREE.Camera,\n        projection: Projection,\n        elevationProvider?: ElevationProvider\n    ): ViewRanges;\n}\n\n/**\n * Abstract evaluator class that adds support for elevation constraints.\n *\n * @remarks\n * Classes derived from this should implement algorithms that takes into account rendered\n * features height (elevations), such as ground plane is no more flat (or spherical), but\n * contains geometry that should be overlapped by frustum planes.\n */\nexport abstract class ElevationBasedClipPlanesEvaluator implements ClipPlanesEvaluator {\n    private m_maxElevation: number;\n    private m_minElevation: number;\n\n    constructor(maxElevation: number, minElevation: number) {\n        assert(maxElevation >= minElevation);\n        this.m_minElevation = minElevation;\n        this.m_maxElevation = maxElevation;\n    }\n\n    abstract evaluateClipPlanes(\n        camera: THREE.Camera,\n        projection: Projection,\n        elevationProvider?: ElevationProvider\n    ): ViewRanges;\n\n    /**\n     * Set maximum elevation above sea level to be rendered.\n     *\n     * @remarks\n     * @param elevation - the elevation (altitude) value in world units (meters).\n     * @note If you set this exactly to the maximum rendered feature height (altitude above\n     * the sea, you may notice some flickering or even polygons disappearing related to rounding\n     * errors or depth buffer precision. In such cases increase [[nearFarMargin]] or add a little\n     * bit offset to your assumed maximum elevation.\n     * @note Reasonable values are in between (-DeadSeeDepression, MtEverestHeight>, both values\n     * are defined in [[EarthConstant]] as [[EarthConstant.MIN_ELEVATION]] and\n     * [[EarthConstant.MAX_ELEVATION]] respectively.\n     * @see minElevation for more information about precision and rounding errors.\n     */\n    set maxElevation(elevation: number) {\n        this.m_maxElevation = elevation;\n        // Min elevation should be at least equal or smaller to max elevation.\n        this.m_minElevation = Math.min(elevation, this.m_minElevation);\n    }\n\n    /**\n     * Get maximum elevation to be covered by camera frustum.\n     */\n    get maxElevation(): number {\n        return this.m_maxElevation;\n    }\n\n    /**\n     * Set minimum elevation to be rendered, values beneath the sea level are negative.\n     *\n     * @remarks\n     * @param elevation - the minimum elevation (depression) in world units (meters).\n     * @note If you set this parameter to zero you may not see any features rendered if they are\n     * just below the sea level more than half of [[nearFarMargin]] assumed. Similarly if set to\n     * -100m and rendered features lays exactly in such depression, you may notice that problem.\n     * The errors usually come from projection precision loss and depth buffer nature (significant\n     * precision loss closer to far plane). Thus is such cases either increase the margin (if you\n     * are sure features are just at this elevation, or setup bigger offset for [[minElevation]].\n     * Reasonable values are between <-DeadSeaDepression, MtEverestHeight), where the first denotes\n     * lowest depression on the Earth defined as [[EarthConstants.MIN_ELEVATION]] and the second is\n     * the highest point our planet.\n     * @see https://developer.nvidia.com/content/depth-precision-visualized\n     */\n    set minElevation(elevation: number) {\n        this.m_minElevation = elevation;\n        // Max elevation should be at least equal or bigger than min elevation.\n        this.m_maxElevation = Math.max(elevation, this.m_maxElevation);\n    }\n\n    /**\n     * Get minimum elevation to be covered by camera frustum.\n     */\n    get minElevation(): number {\n        return this.m_minElevation;\n    }\n}\n\n/**\n * Top view, clip planes evaluator that computes view ranges based on ground distance and elevation.\n *\n * @deprecated Default evaluator {@link TiltViewClipPlanesEvaluator} supports top-down views.\n *\n * @remarks\n * This evaluator supports both planar and spherical projections, although it behavior is\n * slightly different in each case. General algorithm sets near plane and far plane close\n * to ground level, but taking into account maximum and minimum elevation of features on the ground.\n *\n * @note This evaluator supports only cameras which are always looking down the ground surface\n * (top-down view) along surface normal and does not preserve correct clip planes when\n * modifying camera pitch (tilt) angle. In simple words it is suitable only for top view camera\n * settings.\n */\nexport class TopViewClipPlanesEvaluator extends ElevationBasedClipPlanesEvaluator {\n    /**\n     * Helper for reducing number of objects created at runtime.\n     */\n    protected m_tmpVectors: THREE.Vector3[] = [\n        new THREE.Vector3(),\n        new THREE.Vector3(),\n        new THREE.Vector3()\n    ];\n\n    /**\n     * Helper object for reducing performance impact.\n     */\n    protected m_tmpQuaternion: THREE.Quaternion = new THREE.Quaternion();\n\n    private readonly m_minimumViewRange: ViewRanges;\n\n    /**\n     * Allows to setup near/far offsets (margins), rendered geometry elevation relative to sea\n     * level as also minimum near plane and maximum far plane distance constraints.\n     *\n     * @remarks\n     * It is strongly recommended to set some reasonable [[nearFarMargin]] (offset) between near\n     * and far planes to avoid flickering.\n     * @param maxElevation - defines near plane offset from the ground in the surface normal\n     * direction, positive values allows to render elevated terrain features (mountains,\n     * buildings). Defaults to Burj Khalifa building height.\n     * @param minElevation - defines far plane offset from the ground surface, negative values moves\n     * far plane below the ground level (use it to render depressions). Default zero - sea level.\n     * @param nearMin - minimum allowable near plane distance from camera, must be bigger than zero.\n     * @param nearFarMarginRatio - minimum distance between near and far plane, as a ratio of\n     * average near/far plane distance, it have to be significantly bigger than zero (especially if\n     * [[maxElevation]] and [[minElevation]] are equal), otherwise you may notice flickering when\n     * rendering, or even render empty scene if frustum planes are almost equal.\n     * @param farMaxRatio - maximum ratio between ground and far plane distance, allows to limit\n     * viewing distance at overall. Have to be bigger than 1.0.\n     * @note Keep in mind that this evaluator does not evaluate terrain (or building) elevation\n     * automatically, to keep such features rendered (between frustum planes) use [[minElevation]],\n     * [[maxElevation]] constraints. You may change this parameters at any time, but it requires\n     * repeating [[evaluatePlanes]] step, if your camera is moving you need to evaluate planes\n     * anyway.\n     * @note You may treat [[minElevation]] and [[maxElevation]] parameters as the maximum and\n     * minimum renderable elevation respectively along the surface normal, when camera is\n     * constantly looking downwards (top-down view). If you need {@link ClipPlanesEvaluator} for\n     * cameras that support tilt or yaw please use {@link TiltViewClipPlanesEvaluator}.\n     * @note [[nearFarMaxRatio]] does not limit far plane when spherical projection is in use,\n     * the algorithm used there estimates distance to point on tangent where line from camera\n     * touches the sphere horizon and there is no reason to clamp it.\n     */\n    constructor(\n        maxElevation: number = EarthConstants.MAX_BUILDING_HEIGHT,\n        minElevation: number = 0,\n        readonly nearMin: number = 1.0,\n        readonly nearFarMarginRatio: number = 0.05,\n        readonly farMaxRatio = 6.0\n    ) {\n        super(maxElevation, minElevation);\n        assert(nearMin > 0);\n        assert(nearFarMarginRatio >= 0);\n        assert(farMaxRatio > 1.0);\n        const nearFarMargin = nearFarMarginRatio * nearMin;\n        this.m_minimumViewRange = {\n            near: nearMin,\n            far: nearMin + nearFarMargin,\n            minimum: this.nearMin,\n            maximum: Math.max(nearMin * farMaxRatio, nearMin + nearFarMargin)\n        };\n    }\n\n    /** @override */\n    evaluateClipPlanes(\n        camera: THREE.Camera,\n        projection: Projection,\n        elevationProvider?: ElevationProvider\n    ): ViewRanges {\n        assert(camera instanceof THREE.PerspectiveCamera, \"Unsupported camera type.\");\n        const persCamera = camera as THREE.PerspectiveCamera;\n        if (projection.type === ProjectionType.Spherical) {\n            return this.evaluateDistanceSphericalProj(persCamera, projection, elevationProvider);\n        } else if (projection.type === ProjectionType.Planar) {\n            return this.evaluateDistancePlanarProj(persCamera, projection, elevationProvider);\n        }\n        assert(false, \"Unsupported projection type\");\n        return { ...this.minimumViewRange };\n    }\n\n    /**\n     * Get minimum view range that is possible to achieve with current evaluator settings.\n     * @note This value will not change after evaluator is constructed.\n     */\n    protected get minimumViewRange(): ViewRanges {\n        return this.m_minimumViewRange;\n    }\n\n    protected evaluateDistancePlanarProj(\n        camera: THREE.PerspectiveCamera,\n        projection: Projection,\n        elevationProvider?: ElevationProvider\n    ): ViewRanges {\n        assert(projection.type !== ProjectionType.Spherical);\n\n        let nearPlane: number = this.nearMin;\n        let farPlane: number = this.nearMin * this.farMaxRatio;\n\n        // Calculate distance to closest point on the ground.\n        const groundDistance = projection.groundDistance(camera.position);\n        const farMax = groundDistance * this.farMaxRatio;\n        // We could at least try to keep margins along the eye vector (center of the view) in\n        // tact with pitch angle changes, but this does not solve all tilt angle problems,\n        // rather use more sophisticated evaluator.\n        nearPlane = groundDistance - this.maxElevation;\n        farPlane = groundDistance - this.minElevation;\n\n        // Apply the constraints.\n        nearPlane = Math.max(nearPlane, this.nearMin);\n        farPlane = Math.min(farPlane, farMax);\n        // Apply margins\n        const nearFarMargin = (this.nearFarMarginRatio * (nearPlane + farPlane)) / 2;\n        nearPlane = Math.max(nearPlane - nearFarMargin / 2, this.nearMin);\n        farPlane = Math.max(farPlane + nearFarMargin / 2, nearPlane + nearFarMargin);\n\n        const viewRanges: ViewRanges = {\n            near: nearPlane,\n            far: farPlane,\n            minimum: this.nearMin,\n            maximum: Math.max(farMax, farPlane)\n        };\n        return viewRanges;\n    }\n\n    protected evaluateDistanceSphericalProj(\n        camera: THREE.PerspectiveCamera,\n        projection: Projection,\n        elevationProvider?: ElevationProvider\n    ): ViewRanges {\n        assert(projection.type === ProjectionType.Spherical);\n\n        // The near plane calculus is quite straight forward and works the same as for planar\n        // projections. We simply search for the closest point of the ground just above\n        // the camera, then we apply margin (elevation) to it along the sphere surface normal:\n        const cameraAltitude = projection.groundDistance(camera.position);\n        let nearPlane = cameraAltitude - this.maxElevation;\n\n        const r = EarthConstants.EQUATORIAL_RADIUS;\n        const d = Math.max(epsilon, camera.position.length());\n\n        // This solution computes near and far plane for a set up where\n        // the camera is looking at the center of the scene.\n\n        // The far plane distance calculus requires finding the sphere tangent line that is\n        // co-linear with (goes thru) camera position, such tangent creates right angle\n        // with sphere diameter where it touches its surface (point T). Given that sphere is\n        // always at world origin and camera orbits around it we have (see\n        // #getTangentBasedFarPlane):\n        // angle(OTC) = 90\n        // sin(OCT) = sin(alpha) = r / d\n        // alpha = asin(r / d)\n        const alpha = Math.asin(r / d);\n        // If alpha it bigger than half fov angle, our visibility limit is set by tangent\n        // line, otherwise we need to find top (or right) plane intersection with sphere,\n        // which is definitely closer than the tangent point mentioned above.\n        // Take fov directly if it is vertical, otherwise we translate it using aspect ratio:\n\n        let halfFovAngle = THREE.MathUtils.degToRad(camera.fov / 2);\n        // If width > height, then we have to compute the horizontal FOV.\n        if (camera.aspect > 1) {\n            halfFovAngle = MapViewUtils.calculateHorizontalFovByVerticalFov(\n                halfFovAngle * 2,\n                camera.aspect\n            );\n        }\n\n        const maxR = r + this.maxElevation;\n        const farTangent = SphericalProj.getFarDistanceFromElevatedHorizon(camera, d, r, maxR);\n        let farPlane =\n            halfFovAngle > alpha\n                ? farTangent\n                : this.getFovBasedFarPlane(camera, d, r, 2 * halfFovAngle, projection);\n        // In extreme cases the largest depression assumed may be further than tangent\n        // based far plane distance, take it into account\n        const farMin = cameraAltitude - this.minElevation;\n        const farMax = cameraAltitude * this.farMaxRatio;\n        // Apply the constraints.\n        nearPlane = Math.max(nearPlane, this.nearMin);\n        farPlane = Math.max(farPlane, farMin);\n        // Apply margins\n        const nearFarMargin = (this.nearFarMarginRatio * (nearPlane + farPlane)) / 2;\n        nearPlane = Math.max(nearPlane - nearFarMargin / 2, this.nearMin);\n        farPlane = Math.max(farPlane + nearFarMargin / 2, nearPlane + nearFarMargin);\n\n        const viewRanges: ViewRanges = {\n            near: nearPlane,\n            far: farPlane,\n            minimum: this.nearMin,\n            maximum: farMax\n        };\n        return viewRanges;\n    }\n\n    protected getFovBasedFarPlane(\n        camera: THREE.PerspectiveCamera,\n        d: number,\n        r: number,\n        fovAngle: number,\n        projection: Projection\n    ) {\n        // Find intersection point that is closer to tangent point.\n        //\n        //         , - ~ ~ ~ - ,\n        //     , '               ' ,\n        //   ,           .           ,\n        //  ,            .     r     ,' T1\n        // ,             .     ,  '  / ,\n        // ,             . O.'  a   /  ,\n        // ,             | .  `  . /   ,\n        //  ,            |   .  r / TA,\n        //   ,           |    .  /   ,\n        //     ,         |     ./  ,'_____ far\n        //       ' -_, _ | _ , /' T0\n        //     near      |    /\n        //               |   / t\n        //             d | /\n        //               |/\n        //               C\n        //\n        // See:\n        // https://www.scratchapixel.com/lessons/3d-basic-rendering/minimal-ray-tracer-rendering-simple-shapes/ray-sphere-intersection\n\n        // Vector from camera to world center\n        const dVec = camera.position;\n        // Extract camera X, Y, Z orientation axes into tmp vectors array.\n        camera.matrixWorld.extractBasis(\n            this.m_tmpVectors[0],\n            this.m_tmpVectors[1],\n            this.m_tmpVectors[2]\n        );\n        // Setup quaternion (X axis based) for angle between frustum plane and camera eye.\n        this.m_tmpQuaternion.setFromAxisAngle(this.m_tmpVectors[0], fovAngle / 2);\n        // Acquire camera (eye) forward vector from Z axis (keep it in tmpVectors[2]).\n        const cameraFwdVec = this.m_tmpVectors[2];\n        // Apply quaternion to forward vector, creating intersection vector, which is\n        // parallel to top or right frustum plane (depending on the aspect ratio).\n        const tVec = this.m_tmpVectors[1].copy(cameraFwdVec).applyQuaternion(this.m_tmpQuaternion);\n        // Calculate camera to origin vector projection onto frustum plane (top or right).\n        // This gives us the length of CTA segment:\n        const cta = dVec.dot(tVec);\n        // If it is negative, it means that the dVec and the tVec points in\n        // opposite directions - there is no intersection - or intersection could\n        // potentially be behind the intersection ray's origin (camera position).\n        if (cta < 0) {\n            // Intersection points are behind camera, camera looks in wrong direction.\n            const groundDistance = projection.groundDistance(camera.position);\n            // Setup far plane to maximum distance.\n            return groundDistance * this.farMaxRatio;\n        }\n        // Knowing the length of |CTA| we just need to subtract the length of |T0TA|\n        // segment from it to get far plane distance.\n        // In order to calculate |T0TA| we firstly need to use use Pythagorean theorem to\n        // find length of |OTA| = a. Here we use the right triangle formed by O-C-TA points:\n        // |OC|^2 = |CTA|^2 + |OTA|^2, where |OTA| = a, |OC| = d, |CTA| = cta\n        // a^2 = d^2 - cta^2\n        const a2 = dVec.dot(dVec) - cta * cta;\n        // Note that if a is greater than sphere radius the ray misses the sphere and\n        // thus there is no intersection at all.\n        const r2 = r * r;\n        assert(a2 <= r2, \"Please use this evaluator only for top view camera poses.\");\n        // Now to find the length of |T0TA| == |T1TA| we use the second right triangle\n        // formed by O-T0-TA points. Of course we know that |T0TA| segment length is\n        // equal to |T1TA|, and |OT0| segment is simply sphere radius.\n        // In order to find |T0TA| length we again use Pythagorean theorem, which says:\n        // |OT0|^2 = |OTA|^2 + |T0TA|^2, where |OTO| = r, |OTA| = a\n        // |T0TA|^2 = r^2 - a^2\n        const tota = Math.sqrt(r2 - a2);\n        // Finally our far plane (intersection point) is defined as:\n        return cta - tota;\n    }\n}\n\n/**\n * Evaluates camera clipping planes taking into account ground distance and camera tilt (pitch)\n * angle (angle between look-at vector and ground surface normal).\n */\nexport class TiltViewClipPlanesEvaluator extends TopViewClipPlanesEvaluator {\n    private readonly m_tmpV2 = new THREE.Vector2();\n\n    /** @override */\n    protected evaluateDistancePlanarProj(\n        camera: THREE.PerspectiveCamera,\n        projection: Projection,\n        elevationProvider?: ElevationProvider\n    ): ViewRanges {\n        // Find intersections of top/bottom frustum side's medians with the ground plane, taking\n        // into account min/max elevations.Top side intersection distance determines the far\n        // distance (it's further away than bottom intersection on tilted views), and bottom side\n        // intersection distance determines the near distance.\n        //   🎥\n        //   C\n        //   |\\\n        //   |.\\ .\n        //   | . \\  . t\n        // z |  .  \\   .c2\n        //   |  c1.  \\e ___. max elev\n        //   |     .   \\      .\n        //___|a___D1.____\\E1_____.D2______ g\n        //   C1      .     \\ __. min elev\n        //            .      \\.E2\n        //          b  .    .\n        //              . .\n        //               .\n        // Where:\n        // - C gives the camera position.\n        // - z is the height of the camera above the ground.\n        // - z1 == z2 == z, for perspective camera all planes origin its the same\n        // - a is a right angle.\n        // - e is the look at vector of the camera.\n        // - t and b are the frustum planes of the camera (top and bottom respectively).\n        // - angle between c1 to c2 is the fov.\n        // - c1, c2 - vectors from camera to the ground along frustum planes.\n        // - angles between c1 and e or e and c2 splits fov on equal halves.\n        // - d1 and d2 are the intersection points of the frustum with the world/ground plane.\n        // - angle between z and e is the pitch of the camera.\n        // - angle between g and e is the tilt angle.\n        // - g is the ground/world surface\n        //\n        // The intersection distances to be found are |c1| (bottom plane) and |c2| (top plane).\n\n        assert(projection.type !== ProjectionType.Spherical);\n        const viewRanges = { ...this.minimumViewRange };\n        const halfPiLimit = Math.PI / 2 - epsilon;\n        const z = projection.groundDistance(camera.position);\n        const cameraTilt = MapViewUtils.extractCameraTilt(camera, projection);\n\n        // Angles between top/bottom plane and eye vector. For centered projections both are equal\n        // to half of the vertical fov.\n        const topFov = CameraUtils.getTopFov(camera);\n        const bottomFov = CameraUtils.getBottomFov(camera);\n        // Angle between z and c2\n        const topAngle = THREE.MathUtils.clamp(cameraTilt + topFov, -halfPiLimit, halfPiLimit);\n        // Angle between z and c1\n        const bottomAngle = THREE.MathUtils.clamp(\n            cameraTilt - bottomFov,\n            -halfPiLimit,\n            halfPiLimit\n        );\n\n        // Compute |c2|. This will determine the far distance (top intersection is further away than\n        // bottom intersection on tilted views), so take the furthest distance possible, i.e.the\n        // distance to the min elevation.\n        // cos(topAngle) = (z2 - minElev) / |c2|\n        // |c2| = (z2 - minElev) / cos(topAngle)\n        const topDist = Math.max(0, (z - this.minElevation) / Math.cos(topAngle));\n        // Compute |c1|. This will determine the near distance, so take the nearest distance\n        // possible, i.e.the distance to the max elevation.\n        const bottomDist = Math.max(0, (z - this.maxElevation) / Math.cos(bottomAngle));\n\n        // Project intersection distances onto the eye vector.\n        // cos(halfFov) = near / bottomDist\n        // near = cos(halfFov) * bottomDist\n        viewRanges.near = bottomDist * Math.cos(bottomFov);\n        // cos(halfFov) = far / topDist\n        // far = cos(halfFov) * topDist\n        viewRanges.far = topDist * Math.cos(topFov);\n\n        return this.applyViewRangeConstraints(viewRanges, camera, projection, elevationProvider);\n    }\n\n    /** @override */\n    protected evaluateDistanceSphericalProj(\n        camera: THREE.PerspectiveCamera,\n        projection: Projection,\n        elevationProvider?: ElevationProvider\n    ): ViewRanges {\n        assert(projection.type === ProjectionType.Spherical);\n        const viewRanges = { ...this.minimumViewRange };\n\n        viewRanges.near = this.computeNearDistSphericalProj(camera, projection);\n        viewRanges.far = this.computeFarDistSphericalProj(camera, projection);\n\n        return this.applyViewRangeConstraints(viewRanges, camera, projection, elevationProvider);\n    }\n\n    private computeNearDistSphericalProj(\n        camera: THREE.PerspectiveCamera,\n        projection: Projection\n    ): number {\n        assert(projection.type === ProjectionType.Spherical);\n\n        // Default near plane approximation.\n        const defaultNear = projection.groundDistance(camera.position) - this.maxElevation;\n        const cameraBelowMaxElevation = defaultNear <= 0;\n        if (cameraBelowMaxElevation) {\n            // Near distance will be adjusted by constraints later.\n            return 0;\n        }\n\n        const maxR = EarthConstants.EQUATORIAL_RADIUS + this.maxElevation;\n\n        // Angles between bottom plane and eye vector. For centered projections it's equal to half\n        // of the vertical fov.\n        const bottomFov = CameraUtils.getBottomFov(camera);\n\n        // First, use the distance of the near plane's tangent point to the sphere.\n        const nearPlaneTanDist = SphericalProj.getProjNearPlaneTanDistance(camera, bottomFov, maxR);\n        if (nearPlaneTanDist !== undefined) {\n            return nearPlaneTanDist;\n        }\n        // If near plan tangent is not visible, use the distance to the closest frustum intersection\n        // with the sphere. If principal point has a y offset <= 0, bottom frustum intersection\n        // is at same distance or closer than top intersection, otherwise both need to be checked.\n        // At least one of the sides must intersect, if not the near plane tangent must have been\n        // visible.\n        CameraUtils.getPrincipalPoint(camera, this.m_tmpV2);\n        const checkTopIntersection = this.m_tmpV2.y > 0;\n        const bottomDist = SphericalProj.getProjSphereIntersectionDistance(\n            camera,\n            this.m_tmpV2.setComponent(1, -1),\n            maxR\n        );\n        const topDist = checkTopIntersection\n            ? SphericalProj.getProjSphereIntersectionDistance(\n                  camera,\n                  this.m_tmpV2.setComponent(1, 1),\n                  maxR\n              )\n            : Infinity;\n        const near = Math.min(bottomDist ?? Infinity, topDist ?? Infinity);\n        assert(near !== Infinity, \"No reference point for near distance found\");\n        return near ?? defaultNear;\n    }\n\n    private computeFarDistSphericalProj(\n        camera: THREE.PerspectiveCamera,\n        projection: Projection\n    ): number {\n        assert(projection.type === ProjectionType.Spherical);\n        const r = EarthConstants.EQUATORIAL_RADIUS;\n        const minR = r + this.minElevation;\n        const maxR = r + this.maxElevation;\n        const d = camera.position.length();\n\n        // If all frustum edges intersect the world, use as far distance the distance to the\n        // farthest intersection projected on eye vector. If principal point has a y offset <= 0,\n        // top frustum intersection is at same distance or farther than bottom intersection,\n        // otherwise both need to be checked.\n        CameraUtils.getPrincipalPoint(camera, this.m_tmpV2);\n        const isRightIntersectionFarther = this.m_tmpV2.x <= 0.0;\n        const ndcX = isRightIntersectionFarther ? 1 : -1;\n        const checkBottomIntersection = this.m_tmpV2.y > 0;\n\n        const topDist = SphericalProj.getProjSphereIntersectionDistance(\n            camera,\n            this.m_tmpV2.set(ndcX, 1),\n            minR\n        );\n        const bottomDist = checkBottomIntersection\n            ? SphericalProj.getProjSphereIntersectionDistance(\n                  camera,\n                  this.m_tmpV2.set(ndcX, -1),\n                  minR\n              )\n            : 0;\n        const largestDist = Math.max(topDist ?? Infinity, bottomDist ?? Infinity);\n        if (largestDist !== Infinity) {\n            return largestDist;\n        }\n\n        // If any frustum edge does not intersect (i.e horizon is visible in that viewport corner),\n        // use the horizon distance at the maximum elevation.\n        return SphericalProj.getFarDistanceFromElevatedHorizon(camera, d, r, maxR);\n    }\n\n    private applyViewRangeConstraints(\n        viewRanges: ViewRanges,\n        camera: THREE.Camera,\n        projection: Projection,\n        elevationProvider?: ElevationProvider\n    ): ViewRanges {\n        // Compute the focus point (target) distance for current camera and projection setup,\n        // in a same way the MapView component does.\n        const { distance } = MapViewUtils.getTargetAndDistance(\n            projection,\n            camera,\n            elevationProvider\n        );\n\n        // Apply the constraints.\n        const farMin = projection.groundDistance(camera.position) - this.minElevation;\n        const farMax = distance * this.farMaxRatio;\n        viewRanges.near = Math.max(viewRanges.near, this.nearMin);\n        viewRanges.far = THREE.MathUtils.clamp(viewRanges.far, farMin, farMax);\n\n        // Apply margins.\n        const nearFarMargin = (this.nearFarMarginRatio * (viewRanges.near + viewRanges.far)) / 2;\n        viewRanges.near = Math.max(viewRanges.near - nearFarMargin / 2, this.nearMin);\n        viewRanges.far = Math.max(\n            viewRanges.far + nearFarMargin / 2,\n            viewRanges.near + nearFarMargin\n        );\n\n        // Set minimum and maximum view range.\n        viewRanges.minimum = this.nearMin;\n        viewRanges.maximum = farMax;\n\n        return viewRanges;\n    }\n}\n\n/**\n * Creates default {@link ClipPlanesEvaluator}.\n * @internal\n */\nexport const createDefaultClipPlanesEvaluator = () => new TiltViewClipPlanesEvaluator();\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\n/**\n * Use `ColorCache` to reuse a color specified by name and save allocation as well as\n * setup time.\n *\n * Implemented as a singleton. Do not modify colors after getting them from the `ColorCache`.\n */\nexport class ColorCache {\n    /**\n     * Return instance of `ColorCache`.\n     */\n    static get instance() {\n        return this.m_instance;\n    }\n\n    private static readonly m_instance: ColorCache = new ColorCache();\n    private readonly m_map: Map<string, THREE.Color> = new Map();\n\n    /**\n     * Returns the color for the given `colorCode`. This function may reuse a previously generated\n     * color, so you cannot modify the contents of the color.\n     *\n     * @param colorCode - ThreeJS color code or name. You must provide a valid color code or name,\n     * as this function does not do any validation.\n     */\n    getColor(colorCode: string | number): THREE.Color {\n        if (typeof colorCode === \"number\") {\n            colorCode = \"#\" + colorCode.toString(16).padStart(6, \"0\");\n        }\n\n        let color = this.m_map.get(colorCode);\n        if (color !== undefined) {\n            return color;\n        }\n        color = new THREE.Color(colorCode);\n        this.m_map.set(colorCode, color);\n        return color;\n    }\n\n    /**\n     * Returns the number of elements in the cache.\n     */\n    get size(): number {\n        return this.m_map.size;\n    }\n\n    /**\n     * Clears the cache. Only references to the THREE.Color are removed from the cache.\n     * Consequently, clearing the cache does not cause any negative visual impact.\n     */\n    clear(): void {\n        this.m_map.clear();\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ITileDecoder } from \"@here/harp-datasource-protocol\";\n\nimport { ConcurrentWorkerSet } from \"./ConcurrentWorkerSet\";\nimport { WorkerBasedDecoder } from \"./WorkerBasedDecoder\";\n\n/**\n * Default concurrent decoder helper.\n *\n * A convenient singleton that maintains a separate [[ConcurrentWorkerSet]] for each bundle\n * requested. Provides easy access to {@link WorkerBasedDecoder}s for data sources.\n */\nexport class ConcurrentDecoderFacade {\n    /**\n     * The URL containing a script to fall back (default) to when looking for worker sets\n     * and decoders.\n     */\n    static defaultScriptUrl: string = \"./decoder.bundle.js\";\n\n    /**\n     * The default number of workers.\n     */\n    static defaultWorkerCount?: number = undefined;\n\n    /**\n     * Returns a {@link WorkerBasedDecoder} instance.\n     *\n     * @param decoderServiceType - The name of the decoder service type.\n     * @param scriptUrl - The optional URL with the workers' script.\n     * @param workerCount - The number of web workers to use.\n     * @param workerConnectionTimeout - Timeout in seconds to connect to the web worker.\n     */\n    static getTileDecoder(\n        decoderServiceType: string,\n        scriptUrl?: string,\n        workerCount?: number,\n        workerConnectionTimeout?: number\n    ): ITileDecoder {\n        const workerSet = this.getWorkerSet(scriptUrl, workerCount, workerConnectionTimeout);\n\n        return new WorkerBasedDecoder(workerSet, decoderServiceType);\n    }\n\n    /**\n     * Returns a [[ConcurrentWorkerSet]] instance based on the script URL specified.\n     *\n     * @param scriptUrl - The optional URL with the workers' script. If not specified,\n     * the function uses [[defaultScriptUrl]] instead.\n     * @param workerCount - The number of web workers to use.\n     * @param workerConnectionTimeout - Timeout in seconds to connect to the web worker.\n     */\n    static getWorkerSet(\n        scriptUrl?: string,\n        workerCount?: number,\n        workerConnectionTimeout?: number\n    ): ConcurrentWorkerSet {\n        if (scriptUrl === undefined) {\n            scriptUrl = this.defaultScriptUrl;\n        }\n\n        let workerSet = this.workerSets[scriptUrl];\n        if (workerSet === undefined) {\n            const workerConnectionTimeoutInMs =\n                workerConnectionTimeout !== undefined ? workerConnectionTimeout * 1000 : undefined;\n            workerSet = new ConcurrentWorkerSet({\n                scriptUrl,\n                workerCount: workerCount ?? this.defaultWorkerCount,\n                workerConnectionTimeout: workerConnectionTimeoutInMs\n            });\n            this.workerSets[scriptUrl] = workerSet;\n        }\n        return workerSet;\n    }\n\n    /**\n     * Destroys a [[ConcurrentWorkerSet]] instance.\n     *\n     * @param scriptUrl - The worker script URL that was used to create the [[ConcurrentWorkerSet]].\n     */\n    static destroyWorkerSet(scriptUrl: string) {\n        const workerSet = this.workerSets[scriptUrl];\n        if (workerSet !== undefined) {\n            workerSet.destroy();\n            delete this.workerSets[scriptUrl];\n        }\n    }\n\n    /**\n     * Destroys all managed [[ConcurrentWorkerSet]]s.\n     */\n    static destroy() {\n        Object.keys(this.workerSets).forEach(name => {\n            this.workerSets[name].destroy();\n        });\n        this.workerSets = {};\n    }\n\n    /**\n     * Destroys this [[ConcurrentDecoderFacade]] if all of the [[ConcurrentWorkerSet]]s are\n     * terminated.\n     */\n    static destroyIfTerminated() {\n        let allWorkerSetsTerminated = true;\n        Object.keys(this.workerSets).forEach(name => {\n            if (!this.workerSets[name].terminated) {\n                allWorkerSetsTerminated = false;\n            }\n        });\n        if (allWorkerSetsTerminated) {\n            ConcurrentDecoderFacade.destroy();\n        }\n    }\n\n    /**\n     * The [[ConcurrentWorkerSet]] instances which are stored by the script URL.\n     */\n    private static workerSets: {\n        [bundleUrl: string]: ConcurrentWorkerSet;\n    } = {};\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ITiler } from \"@here/harp-datasource-protocol\";\n\nimport { ConcurrentWorkerSet } from \"./ConcurrentWorkerSet\";\nimport { WorkerBasedTiler } from \"./WorkerBasedTiler\";\n\n/**\n * Default concurrent tiler helper.\n *\n * A convenient singleton that maintains a separate [[ConcurrentWorkerSet]] for each bundle\n * requested. Provides easy access to {@link WorkerBasedTiler}s for data sources.\n */\nexport class ConcurrentTilerFacade {\n    /**\n     * The URL containing a script to fall back (default) to when looking for worker sets\n     * and tilers.\n     */\n    static defaultScriptUrl: string = \"./decoder.bundle.js\";\n\n    /**\n     * The default number of workers.\n     */\n    static defaultWorkerCount: number = 1;\n\n    /**\n     * Returns a {@link WorkerBasedTiler} instance.\n     *\n     * @param tilerServiceType - The name of the tiler service type.\n     * @param scriptUrl - The optional URL with the workers' script.\n     * @param workerCount - The number of web workers to use.\n     * @param workerConnectionTimeout - Timeout in seconds to connect to the web worker.\n     */\n    static getTiler(\n        tilerServiceType: string,\n        scriptUrl?: string,\n        workerCount?: number,\n        workerConnectionTimeout?: number\n    ): ITiler {\n        const workerSet = this.getWorkerSet(scriptUrl, workerCount, workerConnectionTimeout);\n\n        return new WorkerBasedTiler(workerSet, tilerServiceType);\n    }\n\n    /**\n     * Returns a [[ConcurrentWorkerSet]] instance based on the script URL specified.\n     *\n     * @param scriptUrl - The optional URL with the workers' script. If not specified,\n     * the function uses [[defaultScriptUrl]] instead.\n     * @param workerCount - The number of web workers to use.\n     * @param workerConnectionTimeout - Timeout in seconds to connect to the web worker.\n     */\n    static getWorkerSet(\n        scriptUrl?: string,\n        workerCount?: number,\n        workerConnectionTimeout?: number\n    ): ConcurrentWorkerSet {\n        if (scriptUrl === undefined) {\n            scriptUrl = this.defaultScriptUrl;\n        }\n\n        let workerSet = this.workerSets[scriptUrl];\n        if (workerSet === undefined) {\n            const workerConnectionTimeoutInMs =\n                workerConnectionTimeout !== undefined ? workerConnectionTimeout * 1000 : undefined;\n            workerSet = new ConcurrentWorkerSet({\n                scriptUrl,\n                workerCount: workerCount ?? this.defaultWorkerCount,\n                workerConnectionTimeout: workerConnectionTimeoutInMs\n            });\n            this.workerSets[scriptUrl] = workerSet;\n        }\n        return workerSet;\n    }\n\n    /**\n     * Destroys a [[ConcurrentWorkerSet]] instance.\n     *\n     * @param scriptUrl - The worker script URL that was used to create the [[ConcurrentWorkerSet]].\n     */\n    static destroyWorkerSet(scriptUrl: string) {\n        const workerSet = this.workerSets[scriptUrl];\n        if (workerSet !== undefined) {\n            workerSet.destroy();\n            delete this.workerSets[scriptUrl];\n        }\n    }\n\n    /**\n     * Destroys all managed [[ConcurrentWorkerSet]]s.\n     */\n    static destroy() {\n        Object.keys(this.workerSets).forEach(name => {\n            this.workerSets[name].destroy();\n        });\n        this.workerSets = {};\n    }\n\n    /**\n     * Destroys this [[ConcurrentTilerFacade]] if all of the [[ConcurrentWorkerSet]]s are\n     * terminated.\n     */\n    static destroyIfTerminated() {\n        let allWorkerSetsTerminated = true;\n        Object.keys(this.workerSets).forEach(name => {\n            if (!this.workerSets[name].terminated) {\n                allWorkerSetsTerminated = false;\n            }\n        });\n        if (allWorkerSetsTerminated) {\n            ConcurrentTilerFacade.destroy();\n        }\n    }\n\n    /**\n     * The [[ConcurrentWorkerSet]] instances which are stored by the script URL.\n     */\n    private static workerSets: {\n        [bundleUrl: string]: ConcurrentWorkerSet;\n    } = {};\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { RequestController, WorkerServiceProtocol } from \"@here/harp-datasource-protocol\";\nimport {\n    getOptionValue,\n    IWorkerChannelMessage,\n    LoggerManager,\n    LogLevel,\n    WORKERCHANNEL_MSG_TYPE\n} from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { WorkerLoader } from \"./workers/WorkerLoader\";\n\nconst logger = LoggerManager.instance.create(\"ConcurrentWorkerSet\");\n\nexport function isLoggingMessage(message: IWorkerChannelMessage): message is IWorkerChannelMessage {\n    return message && typeof message.level === \"number\" && message.type === WORKERCHANNEL_MSG_TYPE;\n}\n\ninterface ReadyPromise {\n    count: number;\n    promise?: Promise<void>;\n    resolve: () => void;\n    reject: (reason: any) => void;\n    error?: any;\n}\n\ninterface RequestEntry {\n    promise: Promise<any>;\n    resolver: (error?: Error, response?: object) => void;\n}\n\nexport interface ConcurrentWorkerSetOptions {\n    /**\n     * The URL of the script for each worker to start.\n     */\n    scriptUrl: string;\n\n    /**\n     * The number of Web Workers for processing data.\n     *\n     * Defaults to CLAMP(`navigator.hardwareConcurrency` - 1, 1, 4) or [[DEFAULT_WORKER_COUNT]].\n     */\n    workerCount?: number;\n\n    /**\n     * Timeout in milliseconds, in which each worker should set initial message.\n     *\n     * @default 10 seconds, see [[DEFAULT_WORKER_INITIALIZATION_TIMEOUT]]\n     */\n    workerConnectionTimeout?: number;\n}\n\n/**\n * Interface for an item in the started worker list queue.\n */\ninterface WorkerEntry {\n    worker: Worker;\n    listener: EventListener;\n}\n\n/**\n * Interface for an item in the request queue. Stores the data to be decoded along with an\n * [[AbortController]].\n */\ninterface WorkerRequestEntry {\n    message: WorkerServiceProtocol.RequestMessage;\n    buffers?: ArrayBuffer[] | undefined;\n    requestController?: RequestController;\n}\n\n/**\n * The default number of Web Workers to use if `navigator.hardwareConcurrency` is unavailable.\n */\nconst DEFAULT_WORKER_COUNT = 2;\n\n/**\n * The default timeout for first message from worker.\n *\n * @see {@link WorkerLoader.startWorker}\n */\nexport const DEFAULT_WORKER_INITIALIZATION_TIMEOUT = 10000;\n\n/**\n * A set of concurrent Web Workers. Acts as a Communication Peer for [[WorkerService]] instances\n * running in Web Workers.\n *\n * Starts and manages a certain number of web workers and provides a means to communicate\n * with them using various communication schemes, such as:\n *  - [[addEventListener]] : receive a unidirectional messages\n *  - [[broadcastMessage]] : send unidirectional broadcast message\n *  - [[invokeRequest]] : send a request that waits for a response, with load balancing\n *  - [[postMessage]] : send a unidirectional message, with load balancing\n *\n * The request queue holds all requests before they are stuffed into the event queue, allows for\n * easy (and early) cancelling of requests. The workers now only get a single new RequestMessage\n * when they return their previous result, or if they are idle. When they are idle, they are stored\n * in m_availableWorkers.\n */\nexport class ConcurrentWorkerSet {\n    private readonly m_workerChannelLogger = LoggerManager.instance.create(\"WorkerChannel\");\n    private readonly m_eventListeners = new Map<string, (message: any) => void>();\n    private m_workers = new Array<Worker>();\n\n    // List of idle workers that can be given the next job. It is using a LIFO scheme to reduce\n    // memory consumption in idle workers.\n    private m_availableWorkers = new Array<Worker>();\n    private m_workerPromises = new Array<Promise<WorkerEntry | undefined>>();\n    private m_workerCount: number | undefined;\n\n    private readonly m_readyPromises = new Map<string, ReadyPromise>();\n    private readonly m_requests: Map<number, RequestEntry> = new Map();\n    private m_workerRequestQueue: WorkerRequestEntry[] = [];\n\n    private m_nextMessageId: number = 0;\n    private m_stopped: boolean = true;\n\n    private m_referenceCount: number = 0;\n\n    /**\n     * Creates a new `ConcurrentWorkerSet`.\n     *\n     * Creates as many Web Workers as specified in `options.workerCount`, from the script provided\n     * in `options.scriptUrl`. If `options.workerCount` is not specified, the value specified in\n     * `navigator.hardwareConcurrency` is used instead.\n     *\n     * The worker set is implicitly started when constructed.\n     */\n    constructor(private m_options: ConcurrentWorkerSetOptions) {\n        this.start();\n    }\n\n    /**\n     * Adds an external reference and increments the internal reference counter by one.\n     *\n     * To implement a reference-count based automatic resource cleanup, use this function with\n     * [[removeReference]].\n     */\n    addReference() {\n        this.m_referenceCount += 1;\n        if (this.m_referenceCount === 1 && this.m_stopped) {\n            this.start();\n        }\n    }\n\n    /**\n     * Decrements the internal reference counter by 1.\n     *\n     * When the internal reference counter reaches 0, this function calls [[dispose]] to clear the\n     * resources.\n     *\n     * Use with [[addReference]] to implement reference-count based automatic resource cleanup.\n     */\n    removeReference() {\n        this.m_referenceCount -= 1;\n        if (this.m_referenceCount === 0) {\n            this.destroy();\n        }\n    }\n\n    /**\n     * Starts workers.\n     *\n     * Use to start workers already stopped by [[stop]] or [[destroy]] calls.\n     *\n     * Note: The worker set is implicitly started on construction - no need to call [[start]] on\n     * fresh instance.\n     *\n     * @param options - optional, new worker set options\n     */\n    start(options?: ConcurrentWorkerSetOptions) {\n        if (options !== undefined) {\n            this.m_options = options;\n        }\n        if (!this.m_stopped) {\n            throw new Error(\"ConcurrentWorker set already started\");\n        }\n\n        this.m_workerCount = getOptionValue(\n            this.m_options.workerCount,\n            typeof navigator !== \"undefined\" && navigator.hardwareConcurrency !== undefined\n                ? // We need to have at least one worker\n                  THREE.MathUtils.clamp(navigator.hardwareConcurrency - 1, 1, 2)\n                : undefined,\n            DEFAULT_WORKER_COUNT\n        );\n\n        // Initialize the workers. The workers now have an ID to identify specific workers and\n        // handle their busy state.\n        const timeout = getOptionValue(\n            this.m_options.workerConnectionTimeout,\n            DEFAULT_WORKER_INITIALIZATION_TIMEOUT\n        );\n        for (let workerId = 0; workerId < this.m_workerCount; ++workerId) {\n            const workerPromise = WorkerLoader.startWorker(this.m_options.scriptUrl, timeout).then(\n                worker => {\n                    const listener = (evt: Event): void => {\n                        this.onWorkerMessage(workerId, evt as MessageEvent);\n                    };\n\n                    worker.addEventListener(\"message\", listener);\n                    this.m_workers.push(worker);\n                    this.m_availableWorkers.push(worker);\n                    return {\n                        worker,\n                        listener\n                    };\n                }\n            );\n            this.m_workerPromises.push(workerPromise);\n        }\n        this.m_stopped = false;\n    }\n\n    /**\n     * The number of workers started for this worker set. The value is `undefined` until the workers\n     * have been created.\n     */\n    get workerCount(): number | undefined {\n        return this.m_workerCount;\n    }\n\n    /**\n     * Stops workers.\n     *\n     * Waits for all pending requests to be finished and stops all workers.\n     *\n     * Use [[start]] to start this worker again.\n     *\n     * @returns `Promise` that resolves when all workers are destroyed.\n     */\n    async stop() {\n        this.m_stopped = true;\n\n        await this.waitForAllResponses().then(() => {\n            this.terminateWorkers();\n        });\n    }\n\n    /**\n     * Destroys all workers immediately.\n     *\n     * Resolves all pending request promises with a `worker destroyed` error.\n     *\n     * Use [[start]] to start this worker again.\n     */\n    destroy() {\n        this.m_stopped = true;\n\n        // respond with all pending request\n        this.m_requests.forEach(entry => {\n            entry.resolver(new Error(\"worker destroyed\"));\n        });\n        this.m_requests.clear();\n        this.m_workerRequestQueue = [];\n\n        this.terminateWorkers();\n\n        // clean other stuff\n        this.m_eventListeners.clear();\n    }\n\n    /**\n     * Is `true` if the workers have been terminated.\n     */\n    get terminated(): boolean {\n        return this.m_workers.length === 0;\n    }\n\n    /**\n     * Waits for `service` to be initialized in all workers.\n     *\n     * Each service that starts in a worker sends an [[isInitializedMessage]] to confirm that\n     * it has started successfully. This method resolves when all workers in a set have\n     * `service` initialized.\n     *\n     * Promise is rejected if any of worker fails to start.\n     *\n     * @param serviceId - The service identifier.\n     */\n    async connect(serviceId: string): Promise<void> {\n        this.ensureStarted();\n        await Promise.all(this.m_workerPromises);\n        return await this.getReadyPromise(serviceId).promise;\n    }\n\n    /**\n     * Registers an event listener for events that originated in a web worker, for a given\n     * `serviceId`. You can only set one event listener per `serviceId`.\n     *\n     * @param serviceId - The service to listen to.\n     * @param callback - The callback to invoke for matching events.\n     */\n    addEventListener(serviceId: string, callback: (message: any) => void) {\n        this.m_eventListeners.set(serviceId, callback);\n    }\n\n    /**\n     * Removes a previously set event listener for the given `serviceId`.\n     *\n     * @param serviceId - The service from which to remove the event listeners.\n     */\n    removeEventListener(serviceId: string) {\n        this.m_eventListeners.delete(serviceId);\n    }\n\n    /**\n     * Invokes a request that expects a response from a random worker.\n     *\n     * Sends [[RequestMessage]] and resolves when a matching [[ResponseMessage]] is received from\n     * workers. Use this function when interfacing with \"RPC-like\" calls to services.\n     *\n     * @param serviceId - The name of service, as registered with the [[WorkerClient]] instance.\n     * @param request - The request to process.\n     * @param transferList - An optional array of `ArrayBuffer`s to transfer to the worker context.\n     * @param requestController - An optional [[RequestController]] to store state of cancelling.\n     *\n     * @returns A `Promise` that resolves with a response from the service.\n     */\n    invokeRequest<Res>(\n        serviceId: string,\n        request: WorkerServiceProtocol.ServiceRequest,\n        transferList?: ArrayBuffer[],\n        requestController?: RequestController\n    ): Promise<Res> {\n        this.ensureStarted();\n\n        const messageId = this.m_nextMessageId++;\n        let resolver: ((error?: any, response?: any) => void) | undefined;\n\n        const promise = new Promise<Res>((resolve, reject) => {\n            resolver = (error?: Error, response?: Res) => {\n                this.m_requests.delete(messageId);\n\n                if (error !== undefined) {\n                    reject(error);\n                } else {\n                    resolve(response as Res);\n                }\n            };\n        });\n        this.m_requests.set(messageId, {\n            promise,\n            resolver: resolver!\n        });\n\n        const message: WorkerServiceProtocol.RequestMessage = {\n            service: serviceId,\n            type: WorkerServiceProtocol.ServiceMessageName.Request,\n            messageId,\n            request\n        };\n        this.postRequestMessage(message, transferList, requestController);\n        return promise;\n    }\n\n    /**\n     * Invokes a request that expects responses from all workers.\n     *\n     * Send [[RequestMessage]]  to all workers and resolves when all workers have sent a matching\n     * [[ResponseMessage]]. Use this function to wait on request that need to happen on all workers\n     * before proceeding (like synchronous worker service creation).\n     *\n     * @param serviceId - The name of service, as registered with the [[WorkerClient]] instance.\n     * @param request - The request to process.\n     * @param transferList - An optional array of `ArrayBuffer`s to transfer to the worker context.\n     *\n     * @returns Array of `Promise`s that resolves with a response from each worker (unspecified\n     * order).\n     */\n    broadcastRequest<Res>(\n        serviceId: string,\n        request:\n            | WorkerServiceProtocol.WorkerServiceManagerRequest\n            | WorkerServiceProtocol.ServiceRequest,\n        transferList?: ArrayBuffer[]\n    ): Promise<Res[]> {\n        const promises = [];\n        for (const worker of this.m_workers) {\n            const messageId = this.m_nextMessageId++;\n\n            let resolver: ((error?: any, response?: any) => void) | undefined;\n            const promise = new Promise<Res>((resolve, reject) => {\n                resolver = (error: Error, response: Res) => {\n                    this.m_requests.delete(messageId);\n\n                    if (error !== undefined) {\n                        reject(error);\n                    } else {\n                        resolve(response as Res);\n                    }\n                };\n            });\n            promises.push(promise);\n\n            this.m_requests.set(messageId, {\n                promise,\n                resolver: resolver!\n            });\n\n            const message: WorkerServiceProtocol.RequestMessage = {\n                service: serviceId,\n                type: WorkerServiceProtocol.ServiceMessageName.Request,\n                messageId,\n                request\n            };\n            if (transferList !== undefined) {\n                worker.postMessage(message, transferList);\n            } else {\n                worker.postMessage(message);\n            }\n        }\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Posts a message to all workers.\n     *\n     * @param message - The message to send.\n     * @param buffers - Optional buffers to transfer to the workers.\n     */\n    broadcastMessage(message: any, buffers?: ArrayBuffer[] | undefined) {\n        this.ensureStarted();\n\n        if (buffers !== undefined) {\n            this.m_workers.forEach(worker => worker.postMessage(message, buffers));\n        } else {\n            this.m_workers.forEach(worker => worker.postMessage(message));\n        }\n    }\n\n    /**\n     * The size of the request queue for debugging and profiling.\n     */\n    get requestQueueSize() {\n        return this.m_workerRequestQueue.length;\n    }\n\n    /**\n     * The number of workers for debugging and profiling.\n     */\n    get numWorkers() {\n        return this.m_workers.length;\n    }\n\n    /**\n     * The number of workers for debugging and profiling.\n     */\n    get numIdleWorkers() {\n        return this.m_availableWorkers.length;\n    }\n\n    /**\n     * Subclasses must call this function when a worker emits an event.\n     *\n     * @param event - The event to dispatch.\n     */\n    protected eventHandler(event: any) {\n        if (typeof event.data.type !== \"string\") {\n            return; // not an event generated by us, ignore.\n        }\n\n        this.dispatchEvent(event.data.type, event);\n    }\n\n    /**\n     * Handles messages received from workers. This method is protected so that the message\n     * reception can be simulated through an extended class, to avoid relying on real workers.\n     *\n     * @param workerId - The workerId of the web worker.\n     * @param event - The event to dispatch.\n     */\n    private readonly onWorkerMessage = (workerId: number, event: MessageEvent) => {\n        if (WorkerServiceProtocol.isResponseMessage(event.data)) {\n            const response = event.data;\n            if (response.messageId === null) {\n                logger.error(`[${this.m_options.scriptUrl}]: Bad ResponseMessage: no messageId`);\n                return;\n            }\n            const entry = this.m_requests.get(response.messageId);\n            if (entry === undefined) {\n                logger.error(\n                    `[${this.m_options.scriptUrl}]: Bad ResponseMessage: invalid messageId`\n                );\n                return;\n            }\n\n            if (workerId >= 0 && workerId < this.m_workers.length) {\n                const worker = this.m_workers[workerId];\n                this.m_availableWorkers.push(worker);\n                // Check if any new work has been put into the queue.\n                this.checkWorkerRequestQueue();\n            } else {\n                logger.error(`[${this.m_options.scriptUrl}]: onWorkerMessage: invalid workerId`);\n            }\n            if (response.errorMessage !== undefined) {\n                const error = new Error(response.errorMessage);\n                if (response.errorStack !== undefined) {\n                    error.stack = response.errorStack;\n                }\n                entry.resolver(error);\n            } else {\n                entry.resolver(undefined, response.response);\n            }\n        } else if (WorkerServiceProtocol.isInitializedMessage(event.data)) {\n            const readyPromise = this.getReadyPromise(event.data.service);\n            if (++readyPromise.count === this.m_workerPromises.length) {\n                readyPromise.resolve();\n            }\n        } else if (isLoggingMessage(event.data)) {\n            switch (event.data.level) {\n                case LogLevel.Trace:\n                    this.m_workerChannelLogger.trace(...event.data.message);\n                    break;\n                case LogLevel.Debug:\n                    this.m_workerChannelLogger.debug(...event.data.message);\n                    break;\n                case LogLevel.Log:\n                    this.m_workerChannelLogger.log(...event.data.message);\n                    break;\n                case LogLevel.Info:\n                    this.m_workerChannelLogger.info(...event.data.message);\n                    break;\n                case LogLevel.Warn:\n                    this.m_workerChannelLogger.warn(...event.data.message);\n                    break;\n                case LogLevel.Error:\n                    this.m_workerChannelLogger.error(...event.data.message);\n                    break;\n            }\n        } else {\n            this.eventHandler(event);\n        }\n    };\n\n    /**\n     * Posts a [[WorkerServiceProtocol.RequestMessage]] to an available worker. If no worker is\n     * available, the request is put into a queue.\n     *\n     * @param message - The message to send.\n     * @param buffers - Optional buffers to transfer to the worker.\n     * @param requestController - An optional [[RequestController]] to store state of cancelling.\n     */\n    private postRequestMessage(\n        message: WorkerServiceProtocol.RequestMessage,\n        buffers?: ArrayBuffer[] | undefined,\n        requestController?: RequestController\n    ) {\n        this.ensureStarted();\n        if (this.m_workers.length === 0) {\n            throw new Error(\"ConcurrentWorkerSet#postMessage: no workers started\");\n        }\n\n        // Check if the requestController has received the abort signal, in which case the request\n        // is ignored.\n        if (requestController !== undefined && requestController.signal.aborted) {\n            const entry = this.m_requests.get(message.messageId);\n            if (entry === undefined) {\n                logger.error(\n                    `[${this.m_options.scriptUrl}]: Bad RequestMessage: invalid messageId`\n                );\n                return;\n            }\n\n            const err = new Error(\"Aborted\");\n            err.name = \"AbortError\";\n\n            entry.resolver(err, undefined);\n            return;\n        }\n\n        if (this.m_availableWorkers.length > 0) {\n            const worker = this.m_availableWorkers.pop()!;\n\n            if (buffers !== undefined) {\n                worker.postMessage(message, buffers);\n            } else {\n                worker.postMessage(message);\n            }\n        } else {\n            // We need a priority to keep sorting stable, so we have to add a RequestController.\n            if (requestController === undefined) {\n                requestController = new RequestController(0);\n            }\n            if (requestController.priority === 0) {\n                // If the requests do not get a priority, they should keep their sorting order.\n                requestController.priority = -this.m_nextMessageId;\n            }\n            this.m_workerRequestQueue.unshift({\n                message,\n                buffers,\n                requestController\n            });\n        }\n    }\n\n    private ensureStarted() {\n        if (this.m_stopped) {\n            throw new Error(\"ConcurrentWorkerSet stopped\");\n        }\n    }\n\n    private async waitForAllResponses(): Promise<any> {\n        const promises = new Array<Promise<void>>();\n        this.m_requests.forEach(entry => {\n            promises.push(entry.promise);\n        });\n        await Promise.all(promises);\n    }\n\n    private dispatchEvent(id: string, message: any) {\n        const callback = this.m_eventListeners.get(id);\n        if (callback === undefined) {\n            return;\n        } // unknown event, ignore.\n        callback(message);\n    }\n\n    private terminateWorkers() {\n        // terminate all workers\n        this.m_workerPromises.forEach(workerPromise => {\n            workerPromise.then(workerEntry => {\n                if (workerEntry === undefined) {\n                    return;\n                }\n                workerEntry.worker.removeEventListener(\"message\", workerEntry.listener);\n                workerEntry.worker.terminate();\n            });\n        });\n        this.m_workers = [];\n        this.m_workerPromises = [];\n        this.m_availableWorkers = [];\n        this.m_readyPromises.clear();\n    }\n\n    private getReadyPromise(id: string): ReadyPromise {\n        const readyPromise = this.m_readyPromises.get(id);\n        if (readyPromise !== undefined) {\n            return readyPromise;\n        }\n\n        const newPromise: ReadyPromise = {\n            count: 0,\n            promise: undefined,\n            resolve: () => {\n                /* placeholder */\n            },\n            reject: (error: any) => {\n                newPromise.error = error;\n            },\n            error: undefined\n        };\n\n        newPromise.promise = new Promise<void>((resolve, reject) => {\n            const that = newPromise;\n\n            if (that.error !== undefined) {\n                reject(that.error);\n            } else if (that.count === this.m_workerPromises.length) {\n                resolve();\n            }\n\n            that.resolve = resolve;\n            that.reject = reject;\n        });\n\n        this.m_readyPromises.set(id, newPromise);\n        return newPromise;\n    }\n\n    /**\n     * Check the worker request queue, if there are any queued up decoding jobs and idle workers,\n     * they will be executed with postRequestMessage. The requests in the queue are sorted before\n     * the request with the highest priority is selected for processing.\n     */\n    private checkWorkerRequestQueue() {\n        if (this.m_workerRequestQueue.length === 0 || this.m_availableWorkers.length === 0) {\n            return;\n        }\n        this.m_workerRequestQueue.sort((a: WorkerRequestEntry, b: WorkerRequestEntry) => {\n            return a.requestController!.priority - b.requestController!.priority;\n        });\n\n        // Get the request with the highest priority and send it (again).\n        while (this.m_availableWorkers.length > 0 && this.m_workerRequestQueue.length > 0) {\n            const request = this.m_workerRequestQueue.pop()!;\n            this.postRequestMessage(request.message, request.buffers, request.requestController);\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { FlatTheme, Theme, ValueMap } from \"@here/harp-datasource-protocol\";\nimport { ExprPool } from \"@here/harp-datasource-protocol/lib/ExprPool\";\nimport { Projection, TileKey, TilingScheme } from \"@here/harp-geoutils\";\nimport { assert, LoggerManager } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { MapView } from \"./MapView\";\nimport { Tile } from \"./Tile\";\n\nconst logger = LoggerManager.instance.create(\"DataSource\");\n\n/**\n * Options for a {@link DataSource}.\n */\nexport interface DataSourceOptions {\n    /**\n     * The unique name of a {@link DataSource} instance.\n     */\n    name?: string;\n    /**\n     * The name of the [[StyleSet]] to evaluate for the decoding.\n     */\n    styleSetName?: string;\n    /**\n     * Used to configure the languages used by the `DataSource` according to priority;\n     * the first language in the array has the highest priority.\n     *\n     *  An array of ISO 639-1 language codes.\n     */\n    languages?: string[];\n    /**\n     * The minimum zoom level at which data is available or displayed at\n     * (depending on {@link DataSource} subclass).\n     * @deprecated Use [[minDataLevel]] and [[minDisplayLevel]] instead.\n     */\n    minZoomLevel?: number;\n    /**\n     * The maximum zoom level at which data is available or displayed at\n     * (depending on {@link DataSource} subclass).\n     * @deprecated Use [[maxDataLevel]] and [[maxDisplayLevel]] instead.\n     */\n    maxZoomLevel?: number;\n    /**\n     * The minimum zoom level at which data is available.\n     */\n    minDataLevel?: number;\n    /**\n     * The maximum zoom level at which data is available.\n     */\n    maxDataLevel?: number;\n    /**\n     * The minimum zoom level at which {@link DataSource} is displayed.\n     */\n    minDisplayLevel?: number;\n    /**\n     * The maximum zoom level at which {@link DataSource} is displayed.\n     */\n    maxDisplayLevel?: number;\n    /**\n     * Storage level offset applied to this `DataSource`.\n     */\n    storageLevelOffset?: number;\n    /**\n     * Whether the datasource can overlap tiles. Such overlapping is necessary when zooming out and\n     * waiting for the tiles to load, in this case, we use cached tiles to fill the missing gaps if\n     * available (and in some cases, the tiles can overlap, i.e. for example when a child is next\n     * to a parent, the parent is rendered beneath the child), however for some datasources (those\n     * that produce transparent tiles for example), this gives bad results, and as such, it should\n     * be disabled to reduce flickering. Another way to put it is that loading tiles are replaced\n     * with cached tiles and we then fall (back/forward) to the next appropriate zoom level.\n     * @default true\n     */\n    allowOverlappingTiles?: boolean;\n\n    /**\n     * Whether features from these data source can picked by calling\n     * {@link MapView.intersectMapObjects}. Disabling picking for data sources that don't need it\n     * will improve picking performance.\n     * @default true\n     */\n    enablePicking?: boolean;\n\n    /**\n     * Maximum geometry height above ground level this {@link DataSource} can produce.\n     *\n     * @remarks\n     * Used in first stage of frustum culling before {@link Tile#maxGeometryHeight} data is\n     * available.\n     *\n     * @default [[EarthConstants.MAX_BUILDING_HEIGHT]].\n     */\n    maxGeometryHeight?: number;\n\n    /**\n     * Minimum geometry height below ground level this {@link DataSource} can produce. Negative\n     * values describe height below ground.\n     *\n     * @remarks\n     * Used in first stage of frustum culling before {@link Tile#minGeometryHeight} data is\n     * available.\n     *\n     * @default `0`.\n     */\n    minGeometryHeight?: number;\n\n    /**\n     * Number used to order [DataSource]'s relative to each other, see\n     * {@link DataSource.dataSourceOrder}\n     */\n    dataSourceOrder?: number;\n}\n\n/**\n * Derive a class from `DataSource` to contribute data and geometries to the {@link MapView}.\n */\nexport abstract class DataSource extends THREE.EventDispatcher {\n    /**\n     * Keep the update event here to avoid a global reference to the datasource (and thus prevent garbage collection).\n     */\n    private readonly UPDATE_EVENT = { type: \"update\" };\n\n    /**\n     * A counter to generate unique names for each `DataSource`, if no name is provided in the\n     * constructor.\n     */\n    private static uniqueNameCounter: number = 0;\n\n    /**\n     * Set to `true` if this `DataSource` is enabled; `false` otherwise.\n     */\n    enabled: boolean = true;\n\n    /**\n     * Set to `true` if the {@link MapView} can cache tiles produced by this `DataSource`.\n     */\n    cacheable: boolean = false;\n\n    /**\n     * Set to `true` if the loader should be used to get the tile contents.\n     */\n    useGeometryLoader: boolean = false;\n\n    /**\n     * The unique name of a `DataSource` instance.\n     */\n    name: string;\n\n    /**\n     * Whether the datasource should have a ground plane (this plane covers the tile entirely and\n     * has the minimum possible renderOrder), this can be required in some cases when fallback\n     * parent tiles need to be covered by the children, otherwise the content will overlap.\n     * Default is false\n     */\n    addGroundPlane: boolean = false;\n\n    /**\n     * The minimum zoom level at which data is available.\n     */\n    minDataLevel: number = 1;\n\n    /**\n     * The maximum zoom level at which data is available.\n     */\n    maxDataLevel: number = 20;\n\n    /**\n     * The minimum zoom level at which {@link DataSource} is displayed.\n     */\n    minDisplayLevel: number = 1;\n\n    /**\n     * The maximum zoom level at which {@link DataSource} is displayed.\n     */\n    maxDisplayLevel: number = 20;\n\n    allowOverlappingTiles: boolean = true;\n\n    enablePicking: boolean = true;\n\n    /**\n     * Overrides the default rendering order of this `DataSource`.\n     *\n     * @remarks\n     * When `dataSourceOrder` is defined, all the objects created by this `DataSource`\n     * will be rendered on top of the objects created by other `DataSource`s with\n     * lower `dataSourceOrder` values.\n     *\n     * @defaultValue undefined\n     */\n    dataSourceOrder: number = 0;\n\n    /**\n     * @internal\n     * @hidden\n     */\n    readonly exprPool = new ExprPool();\n\n    /**\n     * The {@link MapView} instance holding a reference to this `DataSource`.\n     */\n    private m_mapView?: MapView;\n\n    /**\n     * The name of the [[StyleSet]] to evaluate for the decoding.\n     */\n    private m_styleSetName?: string;\n\n    /**\n     * Current value of [[maxGeometryHeight]] property.\n     */\n    private m_maxGeometryHeight = 0;\n\n    /**\n     * Current value of [[minGeometryHeight]] property.\n     */\n    private m_minGeometryHeight = 0;\n\n    /**\n     * Storage level offset applied to this `DataSource`.\n     */\n    private m_storageLevelOffset: number = 0;\n\n    private readonly m_featureStateMap = new Map<number | string, ValueMap>();\n\n    /**\n     *  An array of ISO 639-1 language codes.\n     */\n    protected languages?: string[];\n\n    /**\n     * Constructs a new `DataSource`.\n     *\n     * @param options - The options to create the data source.\n     */\n    constructor(options: DataSourceOptions = {}) {\n        super();\n        let { name } = options;\n        const {\n            styleSetName,\n            languages,\n            minZoomLevel,\n            maxZoomLevel,\n            minDataLevel,\n            maxDataLevel,\n            minDisplayLevel,\n            maxDisplayLevel,\n            storageLevelOffset,\n            allowOverlappingTiles,\n            enablePicking,\n            minGeometryHeight,\n            maxGeometryHeight,\n            dataSourceOrder\n        } = options;\n        if (name === undefined || name.length === 0) {\n            name = `anonymous-datasource#${++DataSource.uniqueNameCounter}`;\n        }\n        this.name = name;\n\n        this.styleSetName = styleSetName;\n\n        if (languages !== undefined) {\n            this.languages = languages;\n        }\n\n        if (minDataLevel !== undefined) {\n            this.minDataLevel = minDataLevel;\n        }\n        if (maxDataLevel !== undefined) {\n            this.maxDataLevel = maxDataLevel;\n        }\n        if (minZoomLevel !== undefined) {\n            this.minZoomLevel = minZoomLevel;\n        }\n        if (maxZoomLevel !== undefined) {\n            this.maxZoomLevel = maxZoomLevel;\n        }\n        if (minDisplayLevel !== undefined) {\n            this.minDisplayLevel = minDisplayLevel;\n        }\n        if (maxDisplayLevel !== undefined) {\n            this.maxDisplayLevel = maxDisplayLevel;\n        }\n        if (storageLevelOffset !== undefined) {\n            this.m_storageLevelOffset = storageLevelOffset;\n        }\n        if (allowOverlappingTiles !== undefined) {\n            this.allowOverlappingTiles = allowOverlappingTiles;\n        }\n\n        if (enablePicking !== undefined) {\n            this.enablePicking = enablePicking;\n        }\n\n        if (minGeometryHeight !== undefined) {\n            this.minGeometryHeight = minGeometryHeight;\n        }\n        if (maxGeometryHeight !== undefined) {\n            this.maxGeometryHeight = maxGeometryHeight;\n        }\n        if (dataSourceOrder) {\n            this.dataSourceOrder = dataSourceOrder;\n        }\n    }\n\n    /**\n     * Gets the state of the given feature id.\n     *\n     * @param featureId - The id of the feature. Id numbers are deprecated in favor of strings.\n     */\n    getFeatureState(featureId: number | string): ValueMap | undefined {\n        return this.m_featureStateMap.get(featureId);\n    }\n\n    /**\n     * Clears the state of all the features of this {@link DataSource}.\n     */\n    clearFeatureState() {\n        this.m_featureStateMap.clear();\n    }\n\n    /**\n     * Sets the state of the given feature id.\n     *\n     * ```typescript\n     * dataSource.setFeatureState(featureId, { enabled: true });\n     * ```\n     *\n     * @param featureId - The id of the feature. Id numbers are deprecated in favor of strings.\n     * @param state - The new state of the feature.\n     */\n    setFeatureState(featureId: number | string, state: ValueMap) {\n        this.m_featureStateMap.set(featureId, state);\n    }\n\n    /**\n     * Removes the state associated to the given feature.\n     *\n     * @param featureId - The id of the feature. Id numbers are deprecated in favor of strings.\n     */\n    removeFeatureState(featureId: number | string) {\n        this.m_featureStateMap.delete(featureId);\n    }\n\n    /**\n     * Returns the name of the [[StyleSet]] to use for the decoding.\n     */\n    get styleSetName(): string | undefined {\n        return this.m_styleSetName;\n    }\n\n    /**\n     * Sets the name of the [[StyleSet]] to use for the decoding.\n     * If this {@link DataSource} is already\n     * attached to a {@link MapView}, this setter then reapplies\n     * [[StyleSet]] with this name found in\n     * {@link MapView}s theme.\n     */\n    set styleSetName(styleSetName: string | undefined) {\n        if (styleSetName !== this.m_styleSetName) {\n            this.m_styleSetName = styleSetName;\n            this.clearCache();\n            this.requestUpdate();\n        }\n    }\n\n    /**\n     * Destroys this `DataSource`.\n     */\n    dispose() {\n        // to be overloaded by subclasses\n    }\n\n    /**\n     * Purges all the caching done by this `DataSource`\n     */\n    clearCache() {\n        // to be overloaded by subclasses\n    }\n\n    /**\n     * Boolean which says whether a {@link DataSource} produces\n     * tiles that fully cover the tile, i.e.\n     * tiles underneath are completely hidden. Must be\n     * overridden for {@link DataSource}'s that don't\n     * have a ground plane, but which still fully\n     * cover the tile, e.g. web tiles.\n     */\n    isFullyCovering(): boolean {\n        return this.addGroundPlane;\n    }\n\n    /**\n     * Returns `true` if this `DataSource` is ready\n     * and the {@link MapView} can invoke `getTile()` to\n     * start requesting data.\n     */\n    ready(): boolean {\n        return true;\n    }\n\n    /**\n     * The {@link MapView} that is holding this `DataSource`.\n     */\n    get mapView(): MapView {\n        if (this.m_mapView === undefined) {\n            throw new Error(\"This DataSource was not added to MapView\");\n        }\n\n        return this.m_mapView;\n    }\n\n    /**\n     * The {@link @here/harp-geoutils#Projection} used by\n     * the {@link MapView} that is holding this `DataSource`.\n     *\n     * An `Error` is thrown if you call this method\n     * before this `DataSource` has been added\n     * to a {@link MapView}.\n     */\n    get projection(): Projection {\n        return this.mapView.projection;\n    }\n\n    /**\n     * This method is called when the `DataSource` is added to a {@link MapView}. Override this\n     * method to provide any custom initialization, such as, to establish a network connection,\n     * or to initialize complex data structures.\n     */\n    async connect(): Promise<void> {\n        // to be overloaded by subclasses\n    }\n\n    /**\n     * Returns the {@link @here/harp-geoutils#TilingScheme} used by this `DataSource`.\n     */\n    abstract getTilingScheme(): TilingScheme;\n\n    /**\n     * This method is called when this `DataSource` is added to a {@link MapView}.\n     *\n     * Overrides of this method must invoke the definition of the super class.\n     *\n     * @param mapView - The instance of the {@link MapView}.\n     */\n    attach(mapView: MapView): void {\n        this.m_mapView = mapView;\n    }\n\n    /**\n     * This method is called when this `DataSource` is removed from a {@link MapView}.\n     *\n     * Overrides of this method must invoke the definition of the super class.\n     *\n     * @param mapView - The instance of the {@link MapView}.\n     */\n    detach(mapView: MapView) {\n        assert(this.m_mapView === mapView);\n        this.m_mapView = undefined;\n    }\n\n    /**\n     * @return Whether this `DataSource` is detached from the `MapView`\n     */\n\n    isDetached() {\n        return this.m_mapView === undefined;\n    }\n\n    /**\n     * Apply the {@link @here/harp-datasource-protocol#Theme} to this data source.\n     *\n     * If `DataSource` depends on a `styleSet` defined by this theme or `languages`, it must update\n     * its tiles' geometry.\n     *\n     * @param theme - The Theme to be applied\n     */\n    async setTheme(theme: Theme | FlatTheme): Promise<void>;\n\n    /**\n     * Apply the {@link @here/harp-datasource-protocol#Theme} to this data source.\n     *\n     * If `DataSource` depends on a `styleSet` defined by this theme or `languages`, it must update\n     * its tiles' geometry.\n     *\n     * @param theme - The Theme to be applied\n     * @param languages - optional: The languages in priority order to be applied\n     *\n     * @deprecated use setTheme( Theme | FlatTheme) and setLanguages(string[]) instead\n     */\n    async setTheme(theme: Theme | FlatTheme, languages?: string[]): Promise<void> {\n        // to be overwritten by subclasses\n    }\n\n    /**\n     * Used to configure the languages used by the `DataSource` according to priority;\n     * the first language in the array has the highest priority.\n     *\n     * @param languages - An array of ISO 639-1 language codes.\n     */\n    setLanguages(languages?: string[]): void {\n        this.languages = languages;\n        // to be overloaded by subclasses\n    }\n\n    /**\n     * Used to express different country point of view (political view).\n     *\n     * @note Set to `undefined` (or empty string) if you want to reset to default point of view.\n     * @param pov - The country code which point of view should be presented in lower-case\n     * ISO 3166-1 alpha-2 format.\n     */\n    setPoliticalView(pov?: string): void {\n        // to be overloaded by subclasses\n    }\n\n    /**\n     * This method is called when {@link MapView} needs to visualize or preload the content of a\n     * {@link @here/harp-geoutils#TileKey}.\n     *\n     * @param tileKey - The unique identifier for a map tile.\n     * @param delayLoad - If true, the Tile will be created, but Tile.load will not be called\n     * @default false.\n     */\n    abstract getTile(tileKey: TileKey, delayLoad?: boolean): Tile | undefined;\n\n    /**\n     * This method is called by {@link MapView} before the\n     * tile needs to be updated, for example after\n     * a theme change.\n     *\n     * @param tile - The {@link Tile} to update.\n     */\n    updateTile(tile: Tile) {\n        // to be overloaded by subclasses\n    }\n\n    /**\n     * This method is called by the {@link MapView} to determine if the content of the surrounding\n     * tiles must be preloaded.\n     *\n     * @returns `true` if the {@link MapView} should try to preload tiles surrounding the visible\n     * tiles; `false` otherwise. The default is `false`.\n     */\n    shouldPreloadTiles(): boolean {\n        return false;\n    }\n\n    /**\n     * The minimum zoom level at which data is available or displayed at\n     * (depending on {@link DataSource} subclass).\n     * @deprecated Use [[minDataLevel]] and [[minDisplayLevel]] instead.\n     */\n    get minZoomLevel(): number {\n        logger.warn(\n            \"DataSource.minZoomLevel is deprecated. Use minDataLevel and maxDataLevel instead.\"\n        );\n        return this.minDataLevel;\n    }\n\n    set minZoomLevel(level: number) {\n        logger.warn(\n            \"DataSource.minZoomLevel is deprecated. Use minDataLevel and minDisplayLevel instead.\"\n        );\n        this.minDataLevel = level;\n    }\n\n    /**\n     * The maximum zoom level at which data is available or displayed at\n     * (depending on {@link DataSource} subclass).\n     * @deprecated Use [[maxDataLevel]] and [[maxDisplayLevel]] instead.\n     */\n    get maxZoomLevel(): number {\n        logger.warn(\n            \"DataSource.maxZoomLevel is deprecated. Use maxDataLevel and maxDisplayLevel instead.\"\n        );\n        return this.maxDataLevel;\n    }\n\n    set maxZoomLevel(level: number) {\n        logger.warn(\n            \"DataSource.maxZoomLevel is deprecated. Use maxDataLevel and maxDisplayLevel instead.\"\n        );\n        this.maxDataLevel = level;\n    }\n\n    /**\n     * Maximum geometry height above ground level this `DataSource` can produce.\n     *\n     * Used in first stage of frustum culling before\n     * {@link Tile.maxGeometryHeight} data is available.\n     *\n     * @default 0.\n     */\n    get maxGeometryHeight() {\n        return this.m_maxGeometryHeight;\n    }\n\n    set maxGeometryHeight(value: number) {\n        this.m_maxGeometryHeight = value;\n    }\n\n    /**\n     * Minimum geometry height below ground level this `DataSource` can produce. A negative number\n     * specifies a value below ground level.\n     *\n     * Used in first stage of frustum culling before\n     * {@link Tile.minGeometryHeight} data is available.\n     *\n     * @default 0.\n     */\n    get minGeometryHeight() {\n        return this.m_minGeometryHeight;\n    }\n\n    set minGeometryHeight(value: number) {\n        this.m_minGeometryHeight = value;\n    }\n\n    /**\n     * The difference between storage level and display level of tile.\n     *\n     * Storage level offset is a value applied (added) to current zoom level giving\n     * a final tile level being displayed. This way we may differentiate current\n     * zoom level from the storage level that is displayed, giving fine grained\n     * control over the tiles being decoded an displayed.\n     */\n    get storageLevelOffset() {\n        return this.m_storageLevelOffset;\n    }\n\n    /**\n     * Setup the relative offset between storage level and display level of tile.\n     *\n     * @param levelOffset - Difference between zoom level and display level.\n     */\n    set storageLevelOffset(levelOffset: number) {\n        this.m_storageLevelOffset = levelOffset;\n    }\n\n    /**\n     * Enables or disables overlay of geometry on elevation. It must be overloaded by data sources\n     * supporting this feature.\n     *\n     * @param value - True to enable, false to disable.\n     */\n    setEnableElevationOverlay(enable: boolean) {\n        // to be overloaded by subclasses\n    }\n\n    /**\n     * Computes the data zoom level to use.\n     *\n     * @param zoomLevel - The zoom level of the {@link MapView}.\n     * @returns The data zoom level to use.\n     */\n    getDataZoomLevel(zoomLevel: number): number {\n        return THREE.MathUtils.clamp(\n            zoomLevel + this.m_storageLevelOffset,\n            this.minDataLevel,\n            this.maxDataLevel\n        );\n    }\n\n    /**\n     * Returns `true` if {@link DataSource} should be displayed for the zoom level.\n     * @param zoomLevel - The zoom level of the {@link MapView}.\n     */\n    isVisible(zoomLevel: number): boolean {\n        return zoomLevel >= this.minDisplayLevel && zoomLevel <= this.maxDisplayLevel;\n    }\n\n    /**\n     * Returns `true` if {@link DataSource} can load tile with\n     * given {@link @here/harp-geoutils#TileKey} and zoom level.\n     *\n     * @param zoomLevel - The zoom level of the {@link MapView}.\n     * @param tileKey - The unique identifier for a map tile.\n     * @returns `true` if the tile for the given {@link @here/harp-geoutils#TileKey} can be loaded.\n     */\n    canGetTile(zoomLevel: number, tileKey: TileKey): boolean {\n        return tileKey.level <= zoomLevel;\n    }\n\n    /**\n     * Returns `true` if {@link MapView} should traverse tiles\n     * further with given {@link @here/harp-geoutils#TileKey} and\n     * zoom level.\n     *\n     * @param zoomLevel - The zoom level of the {@link MapView}.\n     * @param tileKey - The unique identifier for a map tile.\n     * @returns `true` if the subtiles of the given {@link @here/harp-geoutils#TileKey} should be\n     * checked for collisions.\n     */\n    shouldSubdivide(zoomLevel: number, tileKey: TileKey): boolean {\n        return tileKey.level <= zoomLevel;\n    }\n\n    /**\n     * Returns `true` if {@link MapView} should render the text\n     * elements with the given {@link @here/harp-geoutils#TileKey} and\n     * zoom level.\n     *\n     * @remarks\n     * This is an additional check for the tiles that are already selected for rendering so the\n     * default implementation returns `true`.\n     *\n     * @param zoomLevel - The zoom level.\n     * @param tileKey - The unique identifier for a map tile.\n     * @returns `true` if the text elements created for the\n     *          given {@link @here/harp-geoutils#TileKey} should be rendered.\n     */\n    shouldRenderText(zoomLevel: number, tileKey: TileKey): boolean {\n        return true;\n    }\n\n    /**\n     * Sends a request to the {@link MapView} to redraw the scene.\n     */\n    requestUpdate() {\n        this.dispatchEvent(this.UPDATE_EVENT);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\n/**\n * Usage in Modules:\n *\n * import { DebugContext, debugContext } from \"../lib/DebugContext\";\n *\n * Declare a debug option:\n * debugContext.settings.setOption(\"MY_DBG_OPT\", \"default\");\n *\n * Access an option:\n * if (debugContext.settings.option(\"MY_DBG_OPT\")) {\n *     ...\n * }\n *\n *\n * Access in browser console:\n *\n * window.__debugContext.settings.addEventListener(\"MY_DBG_OPT\", function(event) {\n *  console.log(\"name:\", event.type, \"value:\", event.value)});\n *\n */\n\n/**\n * Allows access to the global `window` object here. The constructor of [[DebugContext]] adds the\n * instance to `window`, so it is available from the browser console.\n */\n\ninterface DebugInfo {\n    __debugContext?: DebugContext;\n}\n\nconst isNode = typeof window === \"undefined\";\n\n/**\n * A `DebugOption` is a pair that consists of an option value and an array of change listeners.\n * Listeners are called up when setting the option's value.\n */\nclass DebugOption extends THREE.EventDispatcher {\n    static SET_EVENT_TYPE: string = \"set\";\n\n    /**\n     * Constructs the `DebugOption`.\n     *\n     * @param value - The value of the option.\n     */\n    constructor(public value: any) {\n        super();\n    }\n\n    /**\n     * Updates the value of a given option.\n     *\n     * @param value - The new value for the option.\n     * @param name - The name of the option to set.\n     */\n    set(value: any, name: string) {\n        this.value = value;\n        this.dispatchEvent({ type: DebugOption.SET_EVENT_TYPE, name, value });\n    }\n}\n\n/**\n * Maintains a map of [[DebugOption]]s. You can add listeners to debug options by passing their\n * names.\n */\nexport class DebugContext {\n    private readonly m_optionsMap: Map<string, DebugOption>;\n\n    /**\n     * Builds a `DebugContext`.\n     */\n    constructor() {\n        this.m_optionsMap = new Map<string, DebugOption>();\n\n        // If we have a `window` object, we store the context in it to make it available in the\n        // console.\n        if (!isNode && typeof window !== \"undefined\" && window) {\n            const debugInfo = window as DebugInfo;\n            debugInfo.__debugContext = this;\n        }\n    }\n\n    /**\n     * Sets the value of an option. Calls change listeners of that option, even if the value has\n     * not been changed. The change listeners provided here are not called during this set\n     * operation.\n     *\n     * @param name - Name of the option.\n     * @param value - Value of the option.\n     */\n    setValue(name: string, value: any): void {\n        let opt = this.m_optionsMap.get(name);\n        if (!opt) {\n            opt = new DebugOption(value);\n            this.m_optionsMap.set(name, opt);\n        } else {\n            opt.set(value, name);\n        }\n    }\n\n    /**\n     * Gets the option value.\n     *\n     * @param name - Name of option.\n     */\n    getValue(name: string): any {\n        const opt = this.m_optionsMap.get(name);\n        return opt ? opt.value : undefined;\n    }\n\n    /**\n     * Determines if the option is registered.\n     *\n     * @param name - Name of option.\n     */\n    hasOption(name: string): boolean {\n        return this.m_optionsMap.get(name) !== undefined;\n    }\n\n    /**\n     * Adds a listener to a debug option.\n     *\n     * @param name - Name of the option that requires a listener.\n     * @param listener - The listener function to add.\n     */\n    addEventListener(name: string, listener: (event: THREE.Event) => void) {\n        const opt = this.m_optionsMap.get(name);\n        if (opt) {\n            opt.addEventListener(DebugOption.SET_EVENT_TYPE, listener);\n        } else {\n            throw Error(\"Unknown option: \" + name);\n        }\n    }\n\n    /**\n     * Checks for a listener in a debug option.\n     *\n     * @param name - Name of the option to check for.\n     * @param listener - The listener function to check for.\n     */\n    hasEventListener(name: string, listener: (event: THREE.Event) => void) {\n        const opt = this.m_optionsMap.get(name);\n        if (opt) {\n            return opt.hasEventListener(DebugOption.SET_EVENT_TYPE, listener);\n        } else {\n            throw Error(\"Unknown option: \" + name);\n        }\n    }\n\n    /**\n     * Removes a listener from a debug option.\n     *\n     * @param name - Name of the option from which to remove a listener.\n     * @param listener - The listener function to remove.\n     */\n    removeEventListener(name: string, listener: (event: THREE.Event) => void) {\n        const opt = this.m_optionsMap.get(name);\n        if (opt) {\n            opt.removeEventListener(DebugOption.SET_EVENT_TYPE, listener);\n        } else {\n            throw Error(\"Unknown option: \" + name);\n        }\n    }\n\n    /**\n     * Provides access to the options map. This method is useful for creating an automatic\n     * browser GUI.\n     */\n    get options(): Map<string, any> {\n        return this.m_optionsMap;\n    }\n\n    /**\n     * Clears away all debug options. Currently, `THREE.EventDispatcher` does not provide an API\n     * to remove all event listeners.\n     */\n    clear() {\n        this.m_optionsMap.forEach(option => {\n            option.set(undefined, \"\");\n        });\n    }\n}\n\nexport const debugContext = new DebugContext();\n","/*\n * Copyright (C) 2018-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BufferAttribute,\n    ColorUtils,\n    Env,\n    Expr,\n    getPropertyValue,\n    isExtrudedLineTechnique,\n    isExtrudedPolygonTechnique,\n    isShaderTechnique,\n    isTextureBuffer,\n    parseStringEncodedColor,\n    ShaderTechnique,\n    supportsTextures,\n    Technique,\n    TEXTURE_PROPERTY_KEYS,\n    TextureBuffer,\n    TextureProperties,\n    TRANSPARENCY_PROPERTY_KEYS,\n    Value\n} from \"@here/harp-datasource-protocol\";\nimport {\n    getTechniqueAutomaticAttrs,\n    getTechniqueDescriptor\n} from \"@here/harp-datasource-protocol/lib/TechniqueDescriptors\";\nimport {\n    CirclePointsMaterial,\n    disableBlending,\n    enableBlending,\n    HighPrecisionLineMaterial,\n    MapMeshBasicMaterial,\n    MapMeshStandardMaterial,\n    RawShaderMaterial,\n    SolidLineMaterial\n} from \"@here/harp-materials\";\nimport { assert, LoggerManager, pick } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { DisplacedMesh } from \"./geometry/DisplacedMesh\";\nimport { SolidLineMesh } from \"./geometry/SolidLineMesh\";\nimport { MapAdapterUpdateEnv, MapMaterialAdapter, StyledProperties } from \"./MapMaterialAdapter\";\nimport { Circles, Squares } from \"./MapViewPoints\";\nimport { toPixelFormat, toTextureDataType, toTextureFilter, toWrappingMode } from \"./ThemeHelpers\";\nimport { Tile } from \"./Tile\";\n\nconst logger = LoggerManager.instance.create(\"DecodedTileHelpers\");\n\n/**\n * The structure of the options to pass into [[createMaterial]].\n */\nexport interface MaterialOptions {\n    /**\n     * The shader [[Technique]] to choose.\n     */\n    technique: Technique;\n\n    /**\n     * Environment used to evaluate dynamic technique attributes.\n     *\n     * Usually {@link MapView.env}.\n     */\n    env: Env;\n\n    /**\n     * Properties to skip.\n     *\n     * @see [[applyTechniqueToMaterial]]\n     */\n    skipExtraProps?: string[];\n\n    /**\n     * `RawShaderMaterial` instances need to know about the fog at instantiation in order to avoid\n     * recompiling them manually later (ThreeJS does not update fog for `RawShaderMaterial`s).\n     */\n    fog?: boolean;\n\n    /**\n     * Whether shadows are enabled or not, this is required because we change the material used.\n     */\n    shadowsEnabled?: boolean;\n}\n\nfunction createTextureFromURL(\n    url: string,\n    onLoad: (texture: THREE.Texture) => void,\n    onError: (error: ErrorEvent | string) => void,\n    isObjectURL: boolean\n) {\n    const texture = new THREE.TextureLoader().load(\n        url,\n        onLoad,\n        undefined, // onProgress\n        onError\n    );\n\n    if (isObjectURL) {\n        // Remove object URL on dispose to avoid memory leaks.\n        texture.addEventListener(\"dispose\", () => {\n            URL.revokeObjectURL(url);\n        });\n    }\n}\n\nfunction createTextureFromRawImage(\n    textureBuffer: TextureBuffer,\n    onLoad: (texture: THREE.Texture) => void,\n    onError: (error: ErrorEvent | string) => void\n) {\n    const properties = textureBuffer.dataTextureProperties;\n    if (properties) {\n        const textureDataType: THREE.TextureDataType | undefined = properties.type\n            ? toTextureDataType(properties.type)\n            : undefined;\n        const buffer = getTextureBuffer(textureBuffer.buffer, textureDataType);\n\n        const texture = new THREE.DataTexture(\n            buffer,\n            properties.width,\n            properties.height,\n            properties.format ? toPixelFormat(properties.format) : undefined,\n            textureDataType\n        );\n        onLoad(texture);\n    } else {\n        onError(\"no data texture properties provided.\");\n    }\n}\n\nfunction initTextureProperties(texture: THREE.Texture, properties?: TextureProperties) {\n    if (!properties) {\n        return;\n    }\n    if (properties.wrapS !== undefined) {\n        texture.wrapS = toWrappingMode(properties.wrapS);\n    }\n    if (properties.wrapT !== undefined) {\n        texture.wrapT = toWrappingMode(properties.wrapT);\n    }\n    if (properties.magFilter !== undefined) {\n        texture.magFilter = toTextureFilter(properties.magFilter);\n    }\n    if (properties.minFilter !== undefined) {\n        texture.minFilter = toTextureFilter(properties.minFilter);\n    }\n    if (properties.flipY !== undefined) {\n        texture.flipY = properties.flipY;\n    }\n    if (properties.repeatU !== undefined) {\n        texture.repeat.x = properties.repeatU;\n    }\n    if (properties.repeatV !== undefined) {\n        texture.repeat.y = properties.repeatV;\n    }\n}\n\nfunction createTexture(\n    material: THREE.Material,\n    texturePropertyName: string,\n    options: MaterialOptions\n): Promise<THREE.Texture> | undefined {\n    const technique = options.technique;\n    let textureProperty = (technique as any)[texturePropertyName];\n    if (textureProperty === undefined) {\n        return undefined;\n    }\n\n    const texturePromise = new Promise<THREE.Texture>((resolve, reject) => {\n        const onLoad = (texture: THREE.Texture) => {\n            const properties: TextureProperties | undefined = (technique as any)[\n                texturePropertyName + \"Properties\"\n            ];\n            initTextureProperties(texture, properties);\n            (material as any)[texturePropertyName] = texture;\n            material.needsUpdate = true;\n            resolve(texture);\n        };\n        const onError = (error: ErrorEvent | string) => {\n            logger.error(\"#createMaterial: Failed to load texture: \", error);\n            reject(error);\n        };\n\n        if (Expr.isExpr(textureProperty)) {\n            textureProperty = getPropertyValue(textureProperty, options.env);\n            if (!textureProperty) {\n                // Expression may evaluate to a valid texture at any time, create a fake texture to\n                // avoid shader recompilation.\n                onLoad(new THREE.Texture());\n                return;\n            }\n        }\n\n        if (typeof textureProperty === \"string\") {\n            createTextureFromURL(textureProperty, onLoad, onError, false);\n        } else if (isTextureBuffer(textureProperty)) {\n            if (textureProperty.type === \"image/raw\") {\n                createTextureFromRawImage(textureProperty, onLoad, onError);\n            } else {\n                const textureBlob = new Blob([textureProperty.buffer], {\n                    type: textureProperty.type\n                });\n                createTextureFromURL(URL.createObjectURL(textureBlob), onLoad, onError, true);\n            }\n        } else if (\n            typeof textureProperty === \"object\" &&\n            (textureProperty.nodeName === \"IMG\" || textureProperty.nodeName === \"CANVAS\")\n        ) {\n            onLoad(new THREE.CanvasTexture(textureProperty));\n        }\n    });\n    return texturePromise;\n}\n\n/**\n * Create a material, depending on the rendering technique provided in the options.\n *\n * @param rendererCapabilities - The capabilities of the renderer that will use the material.\n * @param options - The material options the subsequent functions need.\n * @param onTextureCreated - Optional callback for each texture created for the material, getting\n * a promise that will be resolved once the texture is loaded. Texture is not uploaded to GPU.\n *\n * @returns new material instance that matches `technique.name`.\n *\n * @internal\n */\nexport function createMaterial(\n    rendererCapabilities: THREE.WebGLCapabilities,\n    options: MaterialOptions,\n    onTextureCreated?: (texture: Promise<THREE.Texture>) => void\n): THREE.Material | undefined {\n    const technique = options.technique;\n    const Constructor = getMaterialConstructor(technique, options.shadowsEnabled === true);\n\n    const settings: { [key: string]: any } = {};\n\n    if (Constructor === undefined) {\n        return undefined;\n    }\n\n    if (Constructor.prototype instanceof RawShaderMaterial) {\n        settings.rendererCapabilities = rendererCapabilities;\n        if (Constructor !== HighPrecisionLineMaterial) {\n            settings.fog = options.fog;\n        }\n    }\n    if (options.shadowsEnabled === true && technique.name === \"fill\") {\n        settings.removeDiffuseLight = true;\n    }\n\n    const material = new Constructor(settings);\n\n    if (technique.id !== undefined) {\n        material.name = technique.id;\n    }\n\n    if (isExtrudedPolygonTechnique(technique)) {\n        (material as MapMeshStandardMaterial).flatShading = true;\n    }\n\n    material.depthTest = isExtrudedPolygonTechnique(technique) && technique.depthTest !== false;\n\n    if (supportsTextures(technique)) {\n        TEXTURE_PROPERTY_KEYS.forEach((texturePropertyName: string) => {\n            const texturePromise = createTexture(material, texturePropertyName, options);\n            if (texturePromise) {\n                onTextureCreated?.(texturePromise);\n            }\n        });\n    }\n\n    if (isShaderTechnique(technique)) {\n        // Special case for ShaderTechnique.\n        applyShaderTechniqueToMaterial(technique, material);\n    } else {\n        MapMaterialAdapter.create(material, getMainMaterialStyledProps(technique));\n    }\n    return material;\n}\n\n/**\n * Returns a [[THREE.BufferAttribute]] created from a provided\n * {@link @here/harp-datasource-protocol#BufferAttribute} object.\n *\n * @param attribute - BufferAttribute a WebGL compliant buffer\n * @internal\n */\nexport function getBufferAttribute(attribute: BufferAttribute): THREE.BufferAttribute {\n    switch (attribute.type) {\n        case \"float\":\n            return new THREE.BufferAttribute(\n                new Float32Array(attribute.buffer),\n                attribute.itemCount\n            );\n        case \"uint8\":\n            return new THREE.BufferAttribute(\n                new Uint8Array(attribute.buffer),\n                attribute.itemCount,\n                attribute.normalized\n            );\n        case \"uint16\":\n            return new THREE.BufferAttribute(\n                new Uint16Array(attribute.buffer),\n                attribute.itemCount,\n                attribute.normalized\n            );\n        case \"uint32\":\n            return new THREE.BufferAttribute(\n                new Uint32Array(attribute.buffer),\n                attribute.itemCount,\n                attribute.normalized\n            );\n        case \"int8\":\n            return new THREE.BufferAttribute(\n                new Int8Array(attribute.buffer),\n                attribute.itemCount,\n                attribute.normalized\n            );\n        case \"int16\":\n            return new THREE.BufferAttribute(\n                new Int16Array(attribute.buffer),\n                attribute.itemCount,\n                attribute.normalized\n            );\n        case \"int32\":\n            return new THREE.BufferAttribute(\n                new Int32Array(attribute.buffer),\n                attribute.itemCount,\n                attribute.normalized\n            );\n        default:\n            throw new Error(`unsupported buffer of type ${attribute.type}`);\n    } // switch\n}\n\n/**\n * Determines if a technique uses THREE.Object3D instances.\n * @param technique - The technique to check.\n * @returns true if technique uses THREE.Object3D, false otherwise.\n * @internal\n */\nexport function usesObject3D(technique: Technique): boolean {\n    const name = technique.name;\n    return (\n        name !== undefined &&\n        name !== \"text\" &&\n        name !== \"labeled-icon\" &&\n        name !== \"line-marker\" &&\n        name !== \"label-rejection-line\"\n    );\n}\n\n/**\n * Builds the object associated with the given technique.\n *\n * @param technique - The technique.\n * @param geometry - The object's geometry.\n * @param material - The object's material.\n * @param tile - The tile where the object is located.\n * @param elevationEnabled - True if elevation is enabled, false otherwise.\n *\n * @internal\n */\nexport function buildObject(\n    technique: Technique,\n    geometry: THREE.BufferGeometry,\n    material: THREE.Material | THREE.Material[],\n    tile: Tile,\n    elevationEnabled: boolean\n): THREE.Object3D {\n    assert(technique.name !== undefined);\n\n    switch (technique.name) {\n        case \"extruded-line\":\n        case \"standard\":\n        case \"extruded-polygon\":\n        case \"fill\":\n            return elevationEnabled\n                ? new DisplacedMesh(geometry, material, () => ({\n                      min: tile.elevationRange.minElevation,\n                      max: tile.elevationRange.maxElevation\n                  }))\n                : new THREE.Mesh(geometry, material);\n        case \"terrain\":\n            return new THREE.Mesh(geometry, material);\n        case \"dashed-line\":\n        case \"solid-line\":\n            return elevationEnabled\n                ? new DisplacedMesh(\n                      geometry,\n                      material,\n                      () => ({\n                          min: tile.elevationRange.minElevation,\n                          max: tile.elevationRange.maxElevation\n                      }),\n                      SolidLineMesh.raycast\n                  )\n                : new SolidLineMesh(geometry, material);\n\n        case \"circles\":\n            return new Circles(geometry, material);\n\n        case \"squares\":\n            return new Squares(geometry, material);\n\n        case \"line\":\n            return new THREE.LineSegments(geometry, material);\n\n        case \"segments\":\n            return new THREE.LineSegments(geometry, material);\n\n        case \"shader\": {\n            assert(isShaderTechnique(technique), \"Invalid technique\");\n\n            switch (technique.primitive) {\n                case \"line\":\n                    return new THREE.Line(geometry, material);\n                case \"segments\":\n                    return new THREE.LineSegments(geometry, material);\n                case \"point\":\n                    return new THREE.Points(geometry, material);\n                case \"mesh\":\n                    return new THREE.Mesh(geometry, material);\n            }\n        }\n    }\n    assert(false, \"Invalid technique\");\n    return new THREE.Object3D();\n}\n\n/**\n * Non material properties of `BaseTechnique`.\n * @internal\n */\nexport const BASE_TECHNIQUE_NON_MATERIAL_PROPS = [\"name\", \"id\", \"renderOrder\", \"transient\"];\n\n/**\n * Generic material type constructor.\n * @internal\n */\nexport type MaterialConstructor = new (params: any) => THREE.Material;\n\n/**\n * Returns a `MaterialConstructor` basing on provided technique object.\n *\n * @param technique - `Technique` object which the material will be based on.\n * @param shadowsEnabled - Whether the material can accept shadows, this is required for some\n *                         techniques to decide which material to create.\n *\n * @internal\n */\nexport function getMaterialConstructor(\n    technique: Technique,\n    shadowsEnabled: boolean\n): MaterialConstructor | undefined {\n    if (technique.name === undefined) {\n        return undefined;\n    }\n\n    switch (technique.name) {\n        case \"extruded-line\":\n            if (!isExtrudedLineTechnique(technique)) {\n                throw new Error(\"Invalid extruded-line technique\");\n            }\n            return technique.shading === \"standard\"\n                ? MapMeshStandardMaterial\n                : MapMeshBasicMaterial;\n\n        case \"standard\":\n        case \"terrain\":\n        case \"extruded-polygon\":\n            return MapMeshStandardMaterial;\n\n        case \"dashed-line\":\n        case \"solid-line\":\n            return SolidLineMaterial;\n\n        case \"fill\":\n            return shadowsEnabled ? MapMeshStandardMaterial : MapMeshBasicMaterial;\n\n        case \"squares\":\n            return THREE.PointsMaterial;\n\n        case \"circles\":\n            return CirclePointsMaterial;\n\n        case \"line\":\n        case \"segments\":\n            return THREE.LineBasicMaterial;\n\n        case \"shader\":\n            return THREE.ShaderMaterial;\n\n        case \"text\":\n        case \"labeled-icon\":\n        case \"line-marker\":\n        case \"label-rejection-line\":\n            return undefined;\n    }\n}\n\n/**\n * Styled properties of main material (created by [[createMaterial]]) managed by\n * [[MapObjectAdapter]].\n */\nfunction getMainMaterialStyledProps(technique: Technique): StyledProperties {\n    const automaticAttributes: any[] = getTechniqueAutomaticAttrs(technique);\n\n    switch (technique.name) {\n        case \"dashed-line\":\n        case \"solid-line\": {\n            const baseProps = pick(technique, automaticAttributes);\n            baseProps.lineWidth = buildMetricValueEvaluator(\n                technique.lineWidth ?? 0, // Compatibility: `undefined` lineWidth means hidden.\n                technique.metricUnit\n            );\n            baseProps.outlineWidth = buildMetricValueEvaluator(\n                technique.outlineWidth,\n                technique.metricUnit\n            );\n            baseProps.dashSize = buildMetricValueEvaluator(\n                technique.dashSize,\n                technique.metricUnit\n            );\n            baseProps.gapSize = buildMetricValueEvaluator(technique.gapSize, technique.metricUnit);\n            baseProps.offset = buildMetricValueEvaluator(technique.offset, technique.metricUnit);\n            return baseProps;\n        }\n        case \"fill\":\n            return pick(technique, automaticAttributes);\n        case \"standard\":\n        case \"terrain\":\n        case \"extruded-polygon\": {\n            const baseProps = pick(technique, automaticAttributes);\n            if (technique.vertexColors !== true) {\n                baseProps.color = technique.color;\n            }\n            return baseProps;\n        }\n        case \"circles\":\n        case \"squares\":\n            return pick(technique, automaticAttributes);\n        case \"extruded-line\":\n            return pick(technique, [\n                \"color\",\n                \"wireframe\",\n                \"transparent\",\n                \"opacity\",\n                \"polygonOffset\",\n                \"polygonOffsetFactor\",\n                \"polygonOffsetUnits\",\n                ...automaticAttributes\n            ]);\n        case \"line\":\n        case \"segments\":\n            return pick(technique, automaticAttributes);\n        default:\n            return {};\n    }\n}\n\n/**\n * Convert metric style property to expression that accounts {@link MapView.pixelToWorld} if\n * `metricUnit === 'Pixel'`.\n * @internal\n */\nexport function buildMetricValueEvaluator(\n    value: Expr | Value | undefined,\n    metricUnit: string | undefined\n) {\n    if (value === undefined || value === null) {\n        return value;\n    }\n    if (typeof value === \"string\") {\n        if (value.endsWith(\"px\")) {\n            metricUnit = \"Pixel\";\n            value = Number.parseFloat(value);\n        } else if (value.endsWith(\"m\")) {\n            value = Number.parseFloat(value);\n        }\n    }\n    if (metricUnit === \"Pixel\") {\n        return (context: MapAdapterUpdateEnv) => {\n            const pixelToWorld = (context.env.lookup(\"$pixelToMeters\") as number) ?? 1;\n            const evaluated = getPropertyValue(value, context.env);\n            return pixelToWorld * evaluated;\n        };\n    } else {\n        return value;\n    }\n}\n\n/**\n * Allows to easy parse/encode technique's base color property value as number coded color.\n *\n * @remarks\n * Function takes care about property parsing, interpolation and encoding if neccessary.\n *\n * @see ColorUtils\n * @param technique - the technique where we search for base (transparency) color value\n * @param env - {@link @here/harp-datasource-protocol#Env} instance\n *              used to evaluate {@link @here/harp-datasource-protocol#Expr}\n *              based properties of `Technique`\n * @returns `number` encoded color value (in custom #TTRRGGBB) format or `undefined` if\n * base color property is not defined in the technique passed.\n *\n * @internal\n */\nexport function evaluateBaseColorProperty(technique: Technique, env: Env): number | undefined {\n    const baseColorProp = getBaseColorProp(technique);\n    if (baseColorProp !== undefined) {\n        return evaluateColorProperty(baseColorProp, env);\n    }\n    return undefined;\n}\n\n/**\n * Apply `ShaderTechnique` parameters to material.\n *\n * @param technique - the `ShaderTechnique` which requires special handling\n * @param material - material to which technique will be applied\n *\n * @internal\n */\nfunction applyShaderTechniqueToMaterial(technique: ShaderTechnique, material: THREE.Material) {\n    if (technique.transparent) {\n        enableBlending(material);\n    } else {\n        disableBlending(material);\n    }\n\n    // The shader technique takes the argument from its `params' member.\n    const params = technique.params as { [key: string]: any };\n    // Remove base color and transparency properties from the processed set.\n    const baseColorPropName = getBaseColorPropName(technique);\n    const hasBaseColor = baseColorPropName && baseColorPropName in technique.params;\n    const props = Object.getOwnPropertyNames(params).filter(propertyName => {\n        // Omit base color and related transparency attributes if its defined in technique\n        if (\n            baseColorPropName === propertyName ||\n            (hasBaseColor && TRANSPARENCY_PROPERTY_KEYS.includes(propertyName))\n        ) {\n            return false;\n        }\n        const prop = propertyName as keyof typeof params;\n        if (prop === \"name\") {\n            // skip reserved property names\n            return false;\n        }\n        return true;\n    });\n\n    // Apply all technique properties omitting base color and transparency attributes.\n    props.forEach(propertyName => {\n        // TODO: Check if properties values should not be interpolated, possible bug in old code!\n        // This behavior is kept in the new version too, level is set to undefined.\n        applyTechniquePropertyToMaterial(material, propertyName, params[propertyName]);\n    });\n\n    if (hasBaseColor) {\n        const propColor = baseColorPropName as keyof THREE.Material;\n        // Finally apply base color and related properties to material (opacity, transparent)\n        applyBaseColorToMaterial(material, material[propColor], technique, params[propColor]);\n    }\n}\n\n/**\n * Apply single and generic technique property to corresponding material parameter.\n *\n * @note Special handling for material attributes of [[THREE.Color]] type is provided thus it\n * does not provide constructor that would take [[string]] or [[number]] values.\n *\n * @param material - target material\n * @param propertyName - material and technique parameter name (or index) that is to be transferred\n * @param techniqueAttrValue - technique property value which will be applied to material attribute\n * @param env - {@link @here/harp-datasource-protocol#Env} instance used\n *              to evaluate {@link @here/harp-datasource-protocol#Expr}\n *              based properties of [[Technique]]\n */\nfunction applyTechniquePropertyToMaterial(\n    material: THREE.Material,\n    propertyName: string,\n    techniqueAttrValue: Value,\n    env?: Env\n) {\n    const m = material as any;\n    if (m[propertyName] instanceof THREE.Color) {\n        applySecondaryColorToMaterial(\n            material[propertyName as keyof THREE.Material],\n            techniqueAttrValue,\n            env\n        );\n    } else {\n        const value = evaluateProperty(techniqueAttrValue, env);\n        if (value !== null) {\n            m[propertyName] = value;\n        }\n    }\n}\n\n/**\n * Apply technique color to material taking special care with transparent (RGBA) colors.\n *\n * @remarks\n * @note This function is intended to be used with secondary, triary etc. technique colors,\n * not the base ones that may contain transparency information. Such colors should be processed\n * with [[applyTechniqueBaseColorToMaterial]] function.\n *\n * @param technique - an technique the applied color comes from\n * @param material - the material to which color is applied\n * @param prop - technique property (color) name\n * @param value - color value\n * @param env - {@link @here/harp-datasource-protocol#Env} instance used\n *              to evaluate {@link @here/harp-datasource-protocol#Expr}\n *              based properties of `Technique`.\n *\n * @internal\n */\nexport function applySecondaryColorToMaterial(\n    materialColor: THREE.Color,\n    techniqueColor: Value | Expr,\n    env?: Env\n) {\n    let value = evaluateColorProperty(techniqueColor, env);\n    if (value === undefined) {\n        return;\n    }\n    if (ColorUtils.hasAlphaInHex(value)) {\n        logger.warn(\"Used RGBA value for technique color without transparency support!\");\n        // Just for clarity remove transparency component, even if that would be ignored\n        // by THREE.Color.setHex() function.\n        value = ColorUtils.removeAlphaFromHex(value);\n    }\n\n    materialColor.setHex(value);\n}\n\n/**\n * Apply technique base color (transparency support) to material with modifying material opacity.\n *\n * @remarks\n * This method applies main (or base) technique color with transparency support to the corresponding\n * material color, with an effect on entire [[THREE.Material]] __opacity__ and __transparent__\n * attributes.\n *\n * @note Transparent colors should be processed as the very last technique attributes,\n * since their effect on material properties like [[THREE.Material.opacity]] and\n * [[THREE.Material.transparent]] could be overridden by corresponding technique params.\n *\n * @param technique - an technique the applied color comes from\n * @param material - the material to which color is applied\n * @param prop - technique property (color) name\n * @param value - color value in custom number format\n * @param env - {@link @here/harp-datasource-protocol#Env} instance used to evaluate\n *              {@link @here/harp-datasource-protocol#Expr} based properties of [[Technique]]\n *\n * @internal\n */\nexport function applyBaseColorToMaterial(\n    material: THREE.Material,\n    materialColor: THREE.Color,\n    technique: Technique,\n    techniqueColor: Value,\n    env?: Env\n) {\n    const colorValue = evaluateColorProperty(techniqueColor, env);\n    if (colorValue === undefined) {\n        return;\n    }\n\n    const { r, g, b, a } = ColorUtils.getRgbaFromHex(colorValue);\n    // Override material opacity and blending by mixing technique defined opacity\n    // with main color transparency\n    const tech = technique as any;\n    let opacity = a;\n    if (tech.opacity !== undefined) {\n        opacity *= evaluateProperty(tech.opacity, env);\n    }\n\n    opacity = THREE.MathUtils.clamp(opacity, 0, 1);\n    if (material instanceof RawShaderMaterial) {\n        material.setOpacity(opacity);\n    } else {\n        material.opacity = opacity;\n    }\n\n    materialColor.setRGB(r, g, b);\n\n    const opaque = opacity >= 1.0;\n    if (!opaque) {\n        enableBlending(material);\n    } else {\n        disableBlending(material);\n    }\n}\n\n/**\n * Calculates the value of the technique defined property.\n *\n * Function takes care about property interpolation (when @param `env` is set) as also parsing\n * string encoded numbers.\n *\n * @note Use with care, because function does not recognize property type.\n * @param value - the value of color property defined in technique\n * @param env - {@link @here/harp-datasource-protocol#Env} instance used to evaluate\n *              {@link @here/harp-datasource-protocol#Expr} based properties of [[Technique]]\n */\nfunction evaluateProperty(value: any, env?: Env): any {\n    if (env !== undefined && Expr.isExpr(value)) {\n        value = getPropertyValue(value, env);\n    }\n    return value;\n}\n\n/**\n * Calculates the numerical value of the technique defined color property.\n *\n * @remarks\n * Function takes care about color interpolation (when @param `env is set) as also parsing\n * string encoded colors.\n *\n * @note Use with care, because function does not recognize property type.\n * @param value - the value of color property defined in technique\n * @param env - {@link @here/harp-datasource-protocol#Env} instance used to evaluate\n *              {@link @here/harp-datasource-protocol#Expr} based properties of [[Technique]]\n * @internal\n */\nexport function evaluateColorProperty(value: Value, env?: Env): number | undefined {\n    value = evaluateProperty(value, env);\n\n    if (value === undefined || value === null) {\n        return undefined;\n    }\n\n    if (typeof value === \"number\") {\n        return value;\n    }\n\n    if (typeof value === \"string\") {\n        const parsed = parseStringEncodedColor(value);\n        if (parsed !== undefined) {\n            return parsed;\n        }\n    }\n\n    logger.error(`Unsupported color format: '${value}'`);\n    return undefined;\n}\n\n/**\n * Allows to access base color property value for given technique.\n *\n * The color value may be encoded in [[number]], [[string]] or even as\n * [[InterpolateProperty]].\n *\n * @param technique - The techniqe where we seach for base color property.\n * @returns The value of technique color used to apply transparency.\n */\nfunction getBaseColorProp(technique: Technique): any {\n    const baseColorPropName = getBaseColorPropName(technique);\n    if (baseColorPropName !== undefined) {\n        if (!isShaderTechnique(technique)) {\n            const propColor = baseColorPropName as keyof typeof technique;\n            return technique[propColor];\n        } else {\n            const params = technique.params as { [key: string]: any };\n            const propColor = baseColorPropName as keyof typeof params;\n            return params[propColor];\n        }\n    }\n    return undefined;\n}\n\nfunction getBaseColorPropName(technique: Technique): string | undefined {\n    return getTechniqueDescriptor(technique)?.attrTransparencyColor;\n}\n\nfunction getTextureBuffer(\n    buffer: ArrayBuffer,\n    textureDataType: THREE.TextureDataType | undefined\n): BufferSource {\n    if (textureDataType === undefined) {\n        return new Uint8Array(buffer);\n    }\n\n    switch (textureDataType) {\n        case THREE.UnsignedByteType:\n            return new Uint8Array(buffer);\n        case THREE.ByteType:\n            return new Int8Array(buffer);\n        case THREE.ShortType:\n            return new Int16Array(buffer);\n        case THREE.UnsignedShortType:\n            return new Uint16Array(buffer);\n        case THREE.IntType:\n            return new Int32Array(buffer);\n        case THREE.UnsignedIntType:\n            return new Uint32Array(buffer);\n        case THREE.FloatType:\n            return new Float32Array(buffer);\n        case THREE.HalfFloatType:\n            return new Uint16Array(buffer);\n    }\n\n    throw new Error(\"Unsupported texture data type\");\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env, ExtrudedPolygonTechnique } from \"@here/harp-datasource-protocol\";\nimport { ColorUtils } from \"@here/harp-datasource-protocol/lib/ColorUtils\";\nimport { enforceBlending, MapMeshStandardMaterial } from \"@here/harp-materials\";\nimport * as THREE from \"three\";\n\nimport { evaluateBaseColorProperty } from \"./DecodedTileHelpers\";\n\n/**\n * Bitmask used for the depth pre-pass to prevent multiple fragments in the same screen position\n * from rendering color.\n * @internal\n */\nexport const DEPTH_PRE_PASS_STENCIL_MASK = 0x01;\n\n/**\n * Render order offset for the depth pre-pass to ensure that it's rendered first.\n */\nconst DEPTH_PRE_PASS_RENDER_ORDER_OFFSET = 1e-6;\n\n/**\n * Check if technique requires (and not disables) use of depth prepass.\n *\n * @remarks\n * Depth prepass is enabled if correct opacity is specified (in range `(0,1)`) _and_ not explicitly\n * disabled by `enableDepthPrePass` option.\n *\n * @param technique - `BaseStandardTechnique` instance to be checked\n * @param env - {@link @here/harp-datasource-protocol#Env} instance used\n *              to evaluate {@link @here/harp-datasource-protocol#Expr}\n *              based properties of `Technique`\n *\n * @internal\n */\nexport function isRenderDepthPrePassEnabled(technique: ExtrudedPolygonTechnique, env: Env) {\n    // Depth pass explicitly disabled\n    if (technique.enableDepthPrePass === false) {\n        return false;\n    }\n    let transparent =\n        technique.opacity !== undefined && technique.opacity > 0.0 && technique.opacity < 1.0;\n    // If not opaque then check if transparency may be modified via alpha in base color.\n    // Otherwise we don't need to even test base color because opacity mixed with any base alpha,\n    // will always produce some transparency effect.\n    if (!transparent) {\n        // We do not support switching depth pass during alpha interpolation, ignore zoom level\n        // when calculating base color value.\n        const color = evaluateBaseColorProperty(technique, env);\n        if (color !== undefined) {\n            const alpha = ColorUtils.getAlphaFromHex(color);\n            transparent = alpha > 0.0 && alpha < 1.0;\n        }\n    }\n    return transparent;\n}\n\n/**\n * Property identifying a material that is being used as a DepthPrePass material.\n */\nexport interface DepthPrePassProperties {\n    /**\n     * This material is a special depth prepass material.\n     */\n    isDepthPrepassMaterial?: true;\n}\n\n/**\n * Creates material for depth prepass.\n *\n * @remarks\n * Creates material that writes only to the z-buffer. Updates the original material instance, to\n * support depth prepass.\n *\n * @param baseMaterial - The base material of mesh that is updated to work with depth prepass\n *     and then used. This parameter is a template for depth prepass material that is returned.\n * @returns depth prepass material, which is a clone of `baseMaterial` with the adapted settings.\n *\n * @internal\n */\nexport function createDepthPrePassMaterial(baseMaterial: THREE.Material): THREE.Material {\n    baseMaterial.depthWrite = false;\n    baseMaterial.depthFunc = THREE.EqualDepth;\n    baseMaterial.colorWrite = true;\n    enforceBlending(baseMaterial);\n\n    const depthPassMaterial: THREE.Material & DepthPrePassProperties = baseMaterial.clone();\n    depthPassMaterial.isDepthPrepassMaterial = true;\n    depthPassMaterial.depthWrite = true;\n    depthPassMaterial.depthTest = true;\n    depthPassMaterial.depthFunc = THREE.LessDepth;\n    depthPassMaterial.colorWrite = false;\n    depthPassMaterial.opacity = 1.0;\n    depthPassMaterial.blending = THREE.NoBlending;\n    return depthPassMaterial;\n}\n\n/**\n * Checks if a given object is a depth prepass mesh.\n *\n * @param object - The object to check whether it's a depth prepass mesh.\n * @returns `true` if the object is a depth prepass mesh, `false` otherwise.\n *\n * @internal\n */\nexport function isDepthPrePassMesh(object: THREE.Object3D): boolean {\n    if ((object as any).isMesh !== true) {\n        return false;\n    }\n    const mesh = object as THREE.Mesh;\n    return mesh.material instanceof Array\n        ? mesh.material.every(material => (material as any).isDepthPrepassMaterial === true)\n        : (mesh.material as any).isDepthPrepassMaterial === true;\n}\n\n/**\n * Clones a given mesh to render it in the depth prepass with another material.\n *\n * @remarks\n * Both the original\n * and depth prepass meshes, when rendered in the correct order, create the proper depth prepass\n * effect. The original mesh material is slightly modified by [[createDepthPrePassMaterial]] to\n * support the depth prepass. This method is usable only if the material of this mesh has an\n * opacity value in the range `(0,1)`.\n *\n * The DepthPrePass object is created wis a slightly smaller `renderOrder` as the original mesh\n * to ensure that it's rendered first.\n *\n * @param mesh - original mesh\n * @returns `Mesh` depth pre pass\n *\n * @internal\n */\nexport function createDepthPrePassMesh(mesh: THREE.Mesh): THREE.Mesh {\n    const originalGeometry = mesh.geometry;\n\n    if (!(originalGeometry instanceof THREE.BufferGeometry)) {\n        throw new Error(\"#createDepthPassMesh only BufferGeometry is supported\");\n    }\n    const positionAttribute = originalGeometry.getAttribute(\"position\");\n    if (!positionAttribute) {\n        throw new Error(\"#createDepthPassMesh position attribute not found\");\n    }\n\n    const depthPassGeometry = new THREE.BufferGeometry();\n    depthPassGeometry.setAttribute(\"position\", positionAttribute);\n    const uvAttribute = originalGeometry.getAttribute(\"uv\");\n    if (uvAttribute) {\n        depthPassGeometry.setAttribute(\"uv\", uvAttribute);\n    }\n    const normalAttribute = originalGeometry.getAttribute(\"normal\");\n    if (normalAttribute) {\n        depthPassGeometry.setAttribute(\"normal\", normalAttribute);\n    }\n    const extrusionAxisAttribute = originalGeometry.getAttribute(\"extrusionAxis\");\n    if (extrusionAxisAttribute) {\n        depthPassGeometry.setAttribute(\"extrusionAxis\", extrusionAxisAttribute);\n    }\n\n    if (originalGeometry.index) {\n        depthPassGeometry.setIndex(originalGeometry.index);\n    }\n\n    for (const group of originalGeometry.groups) {\n        const { start, count, materialIndex } = group;\n        depthPassGeometry.addGroup(start, count, materialIndex);\n    }\n\n    const depthPassMaterial =\n        mesh.material instanceof Array\n            ? mesh.material.map(createDepthPrePassMaterial)\n            : createDepthPrePassMaterial(mesh.material);\n\n    const depthPassMesh = new THREE.Mesh(depthPassGeometry, depthPassMaterial);\n    depthPassMesh.renderOrder = mesh.renderOrder - DEPTH_PRE_PASS_RENDER_ORDER_OFFSET;\n\n    return depthPassMesh;\n}\n\n/**\n * Sets up all the needed stencil logic needed for the depth pre-pass.\n *\n * @remarks\n * This logic is in place to avoid z-fighting artifacts that can appear in geometries that have\n * coplanar triangles inside the same mesh.\n *\n * @param depthMesh - Mesh created by `createDepthPrePassMesh`.\n * @param colorMesh - Original mesh.\n * @internal\n */\nexport function setDepthPrePassStencil(depthMesh: THREE.Mesh, colorMesh: THREE.Mesh) {\n    function setupDepthMaterialStencil(depthMeshMaterial: THREE.Material) {\n        // Set up depth mesh stencil logic.\n        // Set the depth pre-pass stencil bit for all processed fragments. We use\n        // `THREE.AlwaysStencilFunc` and not `THREE.NotEqualStencilFunc` to force all fragments to pass\n        // the stencil test and write the correct depth value.\n        const depthMaterial = depthMeshMaterial as MapMeshStandardMaterial;\n        depthMaterial.stencilWrite = true;\n        depthMaterial.stencilFail = THREE.KeepStencilOp;\n        depthMaterial.stencilZFail = THREE.KeepStencilOp;\n        depthMaterial.stencilZPass = THREE.ReplaceStencilOp;\n        depthMaterial.stencilFunc = THREE.AlwaysStencilFunc;\n        depthMaterial.stencilRef = 0xff;\n        (depthMaterial as any).stencilFuncMask = DEPTH_PRE_PASS_STENCIL_MASK;\n    }\n\n    function setupColorMaterialStencil(colorMeshMaterial: THREE.Material) {\n        // Set up color mesh stencil logic.\n        // Only write color for pixels with the depth pre-pass stencil bit set. Also, once a pixel is\n        // rendered, set the stencil bit to 0 to prevent subsequent pixels in the same clip position\n        // from rendering color again.\n        const colorMaterial = colorMeshMaterial as MapMeshStandardMaterial;\n        colorMaterial.stencilWrite = true;\n        colorMaterial.stencilFail = THREE.KeepStencilOp;\n        colorMaterial.stencilZFail = THREE.KeepStencilOp;\n        colorMaterial.stencilZPass = THREE.ZeroStencilOp;\n        colorMaterial.stencilFunc = THREE.EqualStencilFunc;\n        colorMaterial.stencilRef = 0xff;\n        (colorMaterial as any).stencilFuncMask = DEPTH_PRE_PASS_STENCIL_MASK;\n    }\n\n    if (depthMesh.material instanceof Array) {\n        depthMesh.material.map(setupDepthMaterialStencil);\n    } else {\n        setupDepthMaterialStencil(depthMesh.material);\n    }\n\n    if (colorMesh.material instanceof Array) {\n        colorMesh.material.map(setupColorMaterialStencil);\n    } else {\n        setupColorMaterialStencil(colorMesh.material);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox, TileKey } from \"@here/harp-geoutils\";\n\nexport interface DisplacementMap {\n    xCountVertices: number;\n    yCountVertices: number;\n    buffer: Float32Array;\n}\n\nexport interface TileDisplacementMap {\n    tileKey: TileKey;\n    texture: THREE.DataTexture;\n    displacementMap: DisplacementMap;\n    geoBox: GeoBox;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { TilingScheme } from \"@here/harp-geoutils\";\nimport { TileKey } from \"@here/harp-geoutils/lib/tiling/TileKey\";\n\n/**\n * Status of the elevation range calculation.\n */\nexport enum CalculationStatus {\n    // Calculated approximately. A more precise result may be available later.\n    PendingApproximate,\n    // Calculation completed. The result is final, won't improve upon retrying.\n    FinalPrecise\n}\n\n/**\n * Elevation range with an optional calculation status.\n */\nexport interface ElevationRange {\n    minElevation: number;\n    maxElevation: number;\n    calculationStatus?: CalculationStatus;\n}\n\n/**\n * Source for elevation ranges per tile. The returned elevation ranges will be used in the visible\n * tile computation to calculate proper bounding boxes.\n */\nexport interface ElevationRangeSource {\n    /**\n     * Compute the elevation range for a given {@link @here/harp-geoutils#TileKey}.\n     * @param tileKey - The tile for which the elevation range should be computed.\n     */\n    getElevationRange(tileKey: TileKey): ElevationRange;\n\n    /**\n     * The tiling scheme of this {@link ElevationRangeSource}.\n     *\n     * @remarks\n     * {@link MapView} will only apply the elevation\n     * ranges returned by [[getElevationRange]] that have\n     * the same {@link @here/harp-geoutils#TilingScheme}.\n     */\n    getTilingScheme(): TilingScheme;\n\n    /**\n     * Connects to the underlying data.\n     */\n    connect(): Promise<void>;\n\n    /**\n     * Returns `true` if this `ElevationRangeSource` is ready and the {@link MapView} can invoke\n     * `getElevationRange()` to start requesting data.\n     */\n    ready(): boolean;\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\n/**\n * JavaScript events for custom objects. Stores all listeners to allow removing all listeners for\n * housekeeping.\n *\n * Will be replaced by `THREE.EventDispatcher` once https://github.com/mrdoob/three.js/pull/19844\n * is released.\n */\nexport class EventDispatcher {\n    private readonly m_listeners: Map<string, Array<(event: THREE.Event) => void>> = new Map();\n\n    /**\n     * Destroy this `EventDispatcher` instance.\n     *\n     * Unregister all event handlers used. This is method should be called when you stop\n     * using `EventDispatcher`.\n     */\n    dispose() {\n        this.removeAllEventListeners();\n    }\n\n    /**\n     * Checks if listener is added to an event type.\n     *\n     * @param type - The type of event to listen to.\n     * @param listener - The function that gets called when the event is fired.\n     */\n    hasEventListener(type: string, listener?: (event: THREE.Event) => void): boolean {\n        const listeners = this.m_listeners.get(type);\n        if (listeners === undefined) {\n            return false;\n        }\n        return listener !== undefined ? listeners.includes(listener) : true;\n    }\n\n    /**\n     * Add a new event listener to the event type.\n     *\n     * @param type - The type of event to listen to.\n     * @param listener - The function that gets called when the event is fired.\n     */\n    addEventListener(type: string, listener: (event: THREE.Event) => void): void {\n        let listeners = this.m_listeners.get(type);\n        if (listeners === undefined) {\n            listeners = [];\n            this.m_listeners.set(type, listeners);\n        }\n        if (!listeners.includes(listener)) {\n            listeners.push(listener);\n        }\n    }\n\n    /**\n     * Remove the listener from the event type.\n     *\n     * @param type - The type of event to listen to.\n     * @param listener - The function that gets called when the event is fired. If the value is\n     * `undefined`, all listeners will be removed.\n     */\n    removeEventListener(type: string, listener?: any): void {\n        const listeners = this.m_listeners.get(type);\n        if (listeners === undefined) {\n            return;\n        }\n        if (listener === undefined) {\n            this.m_listeners.delete(type);\n        } else {\n            const index = listeners.indexOf(listener);\n            if (index !== -1) {\n                listeners.splice(index, 1);\n                if (listeners.length === 0) {\n                    this.m_listeners.delete(type);\n                }\n            }\n        }\n    }\n\n    /**\n     * Remove all event listeners for housekeeping.\n     */\n    removeAllEventListeners() {\n        const events = Array.from(this.m_listeners.keys());\n        for (const event of events) {\n            this.removeEventListener(event);\n        }\n    }\n\n    /**\n     * Retrieve the registered event types.\n     *\n     * @returns Array of event types.\n     */\n    get eventTypes(): string[] {\n        return Array.from(this.m_listeners.keys());\n    }\n\n    /**\n     * Retrieve the registered listeners to the specified event.\n     *\n     * @param type - The type of event to listen to.\n     * @returns Array of event listeners.\n     */\n    listeners(type: string): Array<(event: THREE.Event) => void> | undefined {\n        return this.m_listeners.get(type);\n    }\n\n    /**\n     * Dispatch the event to the registered listeners.\n     *\n     * @param event - The event to dispatch.\n     */\n    dispatchEvent(event: THREE.Event) {\n        const listeners = this.m_listeners.get(event.type);\n        if (listeners !== undefined) {\n            event.target = this;\n\n            // Make a copy, in case listeners are removed while iterating.\n            const array = listeners.slice(0);\n\n            for (let i = 0, l = array.length; i < l; i++) {\n                array[i].call(this, event);\n            }\n        }\n    }\n}\n","/*\n * Copyright (C) 2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ViewRanges } from \"@here/harp-datasource-protocol/lib/ViewRanges\";\nimport { Projection } from \"@here/harp-geoutils\";\nimport * as THREE from \"three\";\n\nimport { ClipPlanesEvaluator } from \"./ClipPlanesEvaluator\";\nimport { ElevationProvider } from \"./ElevationProvider\";\n\n/**\n * Provides the most basic evaluation concept giving fixed values with some constraints.\n */\nexport class FixedClipPlanesEvaluator implements ClipPlanesEvaluator {\n    readonly minFar: number;\n    private m_nearPlane: number;\n    private m_farPlane: number;\n\n    constructor(readonly minNear: number = 1, readonly minFarOffset: number = 10) {\n        this.minFar = minNear + minFarOffset;\n        this.m_nearPlane = minNear;\n        this.m_farPlane = this.minFar;\n    }\n\n    get nearPlane(): number {\n        return this.m_nearPlane;\n    }\n\n    set nearPlane(fixedNear: number) {\n        this.invalidatePlanes(fixedNear, this.m_farPlane);\n    }\n\n    get farPlane(): number {\n        return this.m_farPlane;\n    }\n\n    set farPlane(fixedFar: number) {\n        this.invalidatePlanes(this.m_nearPlane, fixedFar);\n    }\n\n    set minElevation(elevation: number) {}\n\n    get minElevation(): number {\n        // This evaluator does not support elevation so its always set to 0.\n        return 0;\n    }\n\n    set maxElevation(elevation: number) {}\n\n    get maxElevation(): number {\n        // This evaluator does not support elevation so its always set to 0.\n        return 0;\n    }\n\n    /** @override */\n    evaluateClipPlanes(\n        camera: THREE.Camera,\n        projection: Projection,\n        elevationProvider?: ElevationProvider\n    ): ViewRanges {\n        // We do not need to perform actual evaluation cause results are precomputed and\n        // kept stable until somebody changes the properties.\n        const viewRanges: ViewRanges = {\n            near: this.m_nearPlane,\n            far: this.m_farPlane,\n            minimum: this.minNear,\n            maximum: this.m_farPlane\n        };\n        return viewRanges;\n    }\n\n    private invalidatePlanes(near: number, far: number) {\n        // When clamping prefer to extend far plane at about minimum distance, giving\n        // near distance setup priority over far.\n        const nearDist: number = Math.max(this.minNear, near);\n        const farDist: number = Math.max(this.minFar, far, nearDist + this.minFarOffset);\n        this.m_nearPlane = nearDist;\n        this.m_farPlane = farDist;\n    }\n}\n","/*\n * Copyright (C) 2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\n/**\n * Specifies how the FOV (Field of View) should be calculated.\n */\nexport interface FovCalculation {\n    /**\n     * How to interpret the [[fov]], can be either `fixed` or `dynamic`.\n     *\n     * `fixed` means that the FOV is fixed regardless of the [[viewportHeight]], such that shrinking\n     * the height causes the map to shrink to keep the content in view. The benefit is that,\n     * regardless of any resizes, the field of view is constant, which means there is no change in\n     * the distortion of buildings near the edges. However the trade off is that the zoom level\n     * changes, which means that the map will pull in new tiles, hence causing some flickering.\n     *\n     * `dynamic` means that the focal length is calculated based on the supplied [[fov]] and\n     * [[viewportHeight]], this means that the map doesn't scale (the image is essentially cropped\n     * but not shrunk) when the [[viewportHeight]] or [[viewportWidth]] is changed. The benefit is\n     * that the zoom level is (currently) stable during resize, because the focal length is used,\n     * however the tradeoff is that changing from a small to a big height will cause the fov to\n     * change a lot, and thus introduce distortion.\n     */\n    type: \"fixed\" | \"dynamic\";\n\n    /**\n     * Vertical field of view in degrees.\n     * If [[type]] is `fixed` then the supplied [[fov]] is fixed regardless of\n     * [[viewportHeight]] or [[viewportWidth]].\n     *\n     * If [[type]] is `dynamic` then the supplied [[fov]] is applied to the\n     * first frame, and the focal length calculated. Changes to the viewport\n     * height no longer shrink the content because the field of view is updated\n     * dynamically.\n     */\n    fov: number;\n}\n\nexport const DEFAULT_FOV_CALCULATION: FovCalculation = { type: \"dynamic\", fov: 40 };\nexport const MIN_FOV_DEG = 10;\nexport const MAX_FOV_DEG = 140;\nexport const MIN_FOV_RAD = THREE.MathUtils.degToRad(MIN_FOV_DEG);\nexport const MAX_FOV_RAD = THREE.MathUtils.degToRad(MAX_FOV_DEG);\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    OrientedBox3,\n    Projection,\n    ProjectionType,\n    TileKey,\n    TileKeyUtils,\n    TilingScheme\n} from \"@here/harp-geoutils\";\nimport { assert } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { DataSource } from \"./DataSource\";\nimport { CalculationStatus, ElevationRange, ElevationRangeSource } from \"./ElevationRangeSource\";\nimport { MapTileCuller } from \"./MapTileCuller\";\nimport { MapView } from \"./MapView\";\nimport { MapViewUtils } from \"./Utils\";\n\nconst tmpVectors3 = [new THREE.Vector3(), new THREE.Vector3()];\nconst tmpVector4 = new THREE.Vector4();\n\n/**\n * Represents a unique TileKey and the area it takes up on screen.\n *\n * Note, in certain tiling projections, it is possible to have an offset, which represents a tile\n * which has fully wrapped around, hence this defaults to 0 to simplify usage for projections which\n * don't require it.\n */\nexport class TileKeyEntry {\n    constructor(\n        public tileKey: TileKey,\n        public area: number,\n        public offset: number = 0,\n        public elevationRange?: ElevationRange,\n        public distance: number = 0\n    ) {}\n}\n\nfunction getGeoBox(tilingScheme: TilingScheme, childTileKey: TileKey, offset: number) {\n    const geoBox = tilingScheme.getGeoBox(childTileKey);\n    const longitudeOffset = 360.0 * offset;\n    geoBox.northEast.longitude += longitudeOffset;\n    geoBox.southWest.longitude += longitudeOffset;\n    return geoBox;\n}\n\n/**\n * Map tile keys to TileKeyEntry.\n * Keys are a combination of morton code and tile offset,\n * see [[TileOffsetUtils.getKeyForTileKeyAndOffset]].\n */\ntype TileKeyEntries = Map<number, TileKeyEntry>;\n\n/**\n * Map zoom level to map of visible tile key entries\n */\ntype ZoomLevelTileKeyMap = Map<number, TileKeyEntries>;\n\n/**\n * Result of frustum intersection\n */\ninterface IntersectionResult {\n    /**\n     * Tiles intersected by the frustum per zoom level.\n     */\n    readonly tileKeyEntries: ZoomLevelTileKeyMap;\n\n    /**\n     * True if the intersection was calculated using precise elevation data, false if it's an\n     * approximation.\n     */\n    calculationFinal: boolean;\n}\n\n/**\n * Computes the tiles intersected by the frustum defined by the current camera setup.\n */\nexport class FrustumIntersection {\n    private readonly m_frustum: THREE.Frustum = new THREE.Frustum();\n    // used to project global coordinates into camera local coordinates\n    private readonly m_viewProjectionMatrix = new THREE.Matrix4();\n    private readonly m_mapTileCuller: MapTileCuller;\n    private m_rootTileKeys: TileKeyEntry[] = [];\n    private readonly m_tileKeyEntries: ZoomLevelTileKeyMap = new Map();\n\n    constructor(\n        private readonly m_camera: THREE.PerspectiveCamera,\n        readonly mapView: MapView,\n        private readonly m_extendedFrustumCulling: boolean,\n        private readonly m_tileWrappingEnabled: boolean,\n        private readonly m_enableMixedLod: boolean,\n        private readonly m_tilePixelSize: number = 256\n    ) {\n        this.m_mapTileCuller = new MapTileCuller(m_camera);\n    }\n\n    /**\n     * Return camera used for generating frustum.\n     */\n    get camera(): THREE.PerspectiveCamera {\n        return this.m_camera;\n    }\n\n    /**\n     * Return projection used to convert geo coordinates to world coordinates.\n     */\n    get projection(): Projection {\n        return this.mapView.projection;\n    }\n\n    /**\n     * Updates the frustum to match the current camera setup.\n     */\n    updateFrustum(projectionMatrixOverride?: THREE.Matrix4) {\n        this.m_viewProjectionMatrix.multiplyMatrices(\n            projectionMatrixOverride !== undefined\n                ? projectionMatrixOverride\n                : this.m_camera.projectionMatrix,\n            this.m_camera.matrixWorldInverse\n        );\n\n        this.m_frustum.setFromProjectionMatrix(this.m_viewProjectionMatrix);\n\n        if (this.m_extendedFrustumCulling) {\n            this.m_mapTileCuller.setup();\n        }\n        this.computeRequiredInitialRootTileKeys(this.m_camera.position);\n    }\n\n    /**\n     * Computes the tiles intersected by the updated frustum, see [[updateFrustum]].\n     *\n     * @param tilingScheme - The tiling scheme used to generate the tiles.\n     * @param elevationRangeSource - Source of elevation range data if any.\n     * @param zoomLevels - A list of zoom levels to render.\n     * @param dataSources - A list of data sources to render.\n     * @returns The computation result, see [[FrustumIntersection.Result]].\n     */\n    compute(\n        tilingScheme: TilingScheme,\n        elevationRangeSource: ElevationRangeSource | undefined,\n        zoomLevels: number[],\n        dataSources: DataSource[]\n    ): IntersectionResult {\n        this.m_tileKeyEntries.clear();\n\n        // Compute target tile area in clip space size.\n        // A tile should take up roughly 256x256 pixels on screen in accordance to\n        // the zoom level chosen by [MapViewUtils.calculateZoomLevelFromDistance].\n        assert(this.mapView.viewportHeight !== 0);\n        const targetTileArea = Math.pow(this.m_tilePixelSize / this.mapView.viewportHeight, 2);\n        const useElevationRangeSource: boolean =\n            elevationRangeSource !== undefined &&\n            elevationRangeSource.getTilingScheme() === tilingScheme;\n        const obbIntersections =\n            this.mapView.projection.type === ProjectionType.Spherical || useElevationRangeSource;\n        const uniqueZoomLevels = new Set(zoomLevels);\n\n        // Gather the minimum and maximum geometry heights of all datasources to enlarge the\n        // bounding boxes of tiles for visibility tests.\n        let minGeometryHeight = 0;\n        let maxGeometryHeight = 0;\n        dataSources.forEach(dataSource => {\n            minGeometryHeight = Math.min(minGeometryHeight, dataSource.minGeometryHeight);\n            maxGeometryHeight = Math.max(maxGeometryHeight, dataSource.maxGeometryHeight);\n        });\n\n        const cache = {\n            calculationFinal: true,\n            tileBounds: obbIntersections ? new OrientedBox3() : new THREE.Box3()\n        };\n\n        // create tile key map per zoom level\n        for (const zoomLevel of uniqueZoomLevels) {\n            this.m_tileKeyEntries.set(zoomLevel, new Map());\n        }\n        for (const tileEntry of this.m_rootTileKeys) {\n            const tileKey = tileEntry.tileKey;\n            const offset = tileEntry.offset;\n\n            // We even check the root tiles against the frustum b/c it can happen that\n            // computeRequiredInitialRootTileKeys is producing false positives.\n            const tileKeyEntry = this.getTileKeyEntry(\n                tileKey,\n                offset,\n                tilingScheme,\n                cache,\n                minGeometryHeight,\n                maxGeometryHeight,\n                useElevationRangeSource ? elevationRangeSource : undefined\n            );\n\n            if (tileKeyEntry !== undefined) {\n                for (const zoomLevel of uniqueZoomLevels) {\n                    const tileKeyEntries = this.m_tileKeyEntries.get(zoomLevel)!;\n                    tileKeyEntries.set(\n                        TileKeyUtils.getKeyForTileKeyAndOffset(tileKey, offset),\n                        tileKeyEntry\n                    );\n                }\n            }\n        }\n\n        const workList = [...this.m_rootTileKeys.values()];\n        while (workList.length > 0) {\n            const tileEntry = workList.pop();\n\n            if (tileEntry === undefined) {\n                break;\n            }\n\n            // Stop subdivision if hightest visible level is reached\n            const tileKey = tileEntry.tileKey;\n            const offset = tileEntry.offset;\n            const subdivide = dataSources.some((ds, i) =>\n                ds.shouldSubdivide(zoomLevels[i], tileKey)\n            );\n            if (!subdivide) {\n                continue;\n            }\n\n            // Stop subdivision if area of tile is too small(mixed LOD only)\n            if (this.m_enableMixedLod && tileEntry.area < targetTileArea) {\n                continue;\n            }\n\n            const tileKeyAndOffset = TileKeyUtils.getKeyForTileKeyAndOffset(tileKey, offset);\n\n            // delete parent tile key from applicable zoom levels\n            for (const zoomLevel of uniqueZoomLevels) {\n                if (tileKey.level >= zoomLevel) {\n                    continue;\n                }\n\n                const tileKeyEntries = this.m_tileKeyEntries.get(zoomLevel)!;\n                tileKeyEntries.delete(tileKeyAndOffset);\n            }\n\n            for (const subTileKey of tilingScheme.getSubTileKeys(tileKey)) {\n                const subTileEntry = this.getTileKeyEntry(\n                    subTileKey,\n                    offset,\n                    tilingScheme,\n                    cache,\n                    minGeometryHeight,\n                    maxGeometryHeight,\n                    useElevationRangeSource ? elevationRangeSource : undefined\n                );\n\n                if (subTileEntry !== undefined) {\n                    // insert sub tile entry into tile entries map per zoom level\n                    for (const zoomLevel of uniqueZoomLevels) {\n                        if (subTileEntry.tileKey.level > zoomLevel) {\n                            continue;\n                        }\n\n                        const subTileKeyAndOffset = TileKeyUtils.getKeyForTileKeyAndOffset(\n                            subTileKey,\n                            offset\n                        );\n                        this.m_tileKeyEntries\n                            .get(zoomLevel)!\n                            .set(subTileKeyAndOffset, subTileEntry);\n                    }\n\n                    workList.push(subTileEntry);\n                }\n            }\n        }\n        return { tileKeyEntries: this.m_tileKeyEntries, calculationFinal: cache.calculationFinal };\n    }\n\n    private getTileKeyEntry(\n        tileKey: TileKey,\n        offset: number,\n        tilingScheme: TilingScheme,\n        cache: { calculationFinal: boolean; tileBounds: OrientedBox3 | THREE.Box3 },\n        minGeometryHeight: number,\n        maxGeometryHeight: number,\n        elevationRangeSource?: ElevationRangeSource\n    ): TileKeyEntry | undefined {\n        const geoBox = getGeoBox(tilingScheme, tileKey, offset);\n\n        // For tiles without elevation range source, default 0 (getGeoBox always\n        // returns box with altitude min/max equal to zero) will be propagated as\n        // min and max elevation, these tiles most probably contains features that\n        // lays directly on the ground surface.\n        if (elevationRangeSource !== undefined) {\n            const range = elevationRangeSource!.getElevationRange(tileKey);\n            geoBox.southWest.altitude = range.minElevation;\n            geoBox.northEast.altitude = range.maxElevation;\n            cache.calculationFinal =\n                cache.calculationFinal &&\n                range.calculationStatus === CalculationStatus.FinalPrecise;\n        }\n\n        // Enlarge the bounding boxes of tiles with min/max geometry height for visibility tests.\n        geoBox.southWest.altitude = (geoBox.southWest.altitude ?? 0) + minGeometryHeight;\n        geoBox.northEast.altitude = (geoBox.northEast.altitude ?? 0) + maxGeometryHeight;\n\n        this.mapView.projection.projectBox(geoBox, cache.tileBounds);\n        const { area, distance } = this.computeTileAreaAndDistance(cache.tileBounds);\n\n        if (area > 0) {\n            return new TileKeyEntry(\n                tileKey,\n                area,\n                offset,\n                {\n                    minElevation: geoBox.southWest.altitude,\n                    maxElevation: geoBox.northEast.altitude\n                },\n                distance\n            );\n        }\n\n        return undefined;\n    }\n\n    /**\n     * Estimate screen space area of tile and distance to center of tile\n     * @param tileBounds - The bounding volume of a tile\n     * @return Area estimate and distance to tile center in clip space\n     */\n    private computeTileAreaAndDistance(\n        tileBounds: THREE.Box3 | OrientedBox3\n    ): { area: number; distance: number } {\n        if (tileBounds instanceof THREE.Box3) {\n            if (\n                (this.m_extendedFrustumCulling &&\n                    !this.m_mapTileCuller.frustumIntersectsTileBox(tileBounds)) ||\n                !this.m_frustum.intersectsBox(tileBounds)\n            ) {\n                return {\n                    area: 0,\n                    distance: Infinity\n                };\n            }\n        } else if (!tileBounds.intersects(this.m_frustum)) {\n            return {\n                area: 0,\n                distance: Infinity\n            };\n        }\n\n        // Project tile bounds center\n        const center = tileBounds.getCenter(tmpVectors3[0]);\n        const projectedPoint = tmpVector4\n            .set(center.x, center.y, center.z, 1.0)\n            .applyMatrix4(this.m_viewProjectionMatrix);\n\n        // Estimate objects screen space size with diagonal of bounds\n        // Dividing by w projects object size to screen space\n        const size = tileBounds.getSize(tmpVectors3[1]);\n        const objectSize = (0.5 * size.length()) / projectedPoint.w;\n\n        return {\n            area: objectSize * objectSize,\n            //Dividing by w means we loose information for whether the point is behind the camera\n            //(i.e. it is in front of the near plane) or beyond the far plane, hence we first clamp\n            //to [-1, 1] range, before doing the division.\n            distance:\n                projectedPoint.z <= -projectedPoint.w\n                    ? -1\n                    : projectedPoint.z >= projectedPoint.w\n                    ? 1\n                    : projectedPoint.z / projectedPoint.w\n        };\n    }\n\n    /**\n     * Create a list of root nodes to test against the frustum. The root nodes each start at level 0\n     * and have an offset (see {@link Tile}) based on:\n     * - the current position [[worldCenter]].\n     * - the height of the camera above the world.\n     * - the field of view of the camera (the maximum value between the horizontal / vertical\n     *   values)\n     * - the tilt of the camera (because we see more tiles when tilted).\n     *\n     * @param worldCenter - The center of the camera in world space.\n     */\n    private computeRequiredInitialRootTileKeys(worldCenter: THREE.Vector3) {\n        this.m_rootTileKeys = [];\n        const rootTileKey = TileKey.fromRowColumnLevel(0, 0, 0);\n        const tileWrappingEnabled = this.mapView.projection.type === ProjectionType.Planar;\n\n        if (!tileWrappingEnabled || !this.m_tileWrappingEnabled) {\n            this.m_rootTileKeys.push(new TileKeyEntry(rootTileKey, Infinity, 0));\n            return;\n        }\n\n        const worldGeoPoint = this.mapView.projection.unprojectPoint(worldCenter);\n        const startOffset = Math.round(worldGeoPoint.longitude / 360.0);\n\n        // This algorithm computes the number of offsets we need to test. The following diagram may\n        // help explain the algorithm below.\n        //\n        //   |🎥\n        //   |.\\ .\n        //   | . \\  .\n        // z |  .  \\   .c2\n        //   |  c1.  \\b    .\n        //   |     .   \\      .\n        //___|a___d1.____\\e______.d2______f\n        //\n        // Where:\n        // - 🎥 is the camera\n        // - z is the height of the camera above the ground.\n        // - a is a right angle.\n        // - b is the look at vector of the camera.\n        // - c1 and c2 are the frustum planes of the camera.\n        // - c1 to c2 is the fov.\n        // - d1 and d2 are the intersection points of the frustum with the world plane.\n        // - e is the tilt/pitch of the camera.\n        // - f is the world\n        //\n        // The goal is to find the distance from e->d2. This is a longitude value, and we convert it\n        // to some offset range. Note e->d2 >= e->d1 (because we can't have a negative tilt).\n        // To find e->d2, we use the right triangle 🎥, a, d2 and subtract the distance a->d2 with\n        // a->e.\n        // a->d2 is found using the angle between a and d2 from the 🎥, this is simply e (because of\n        // similar triangles, angle between a, 🎥 and e equals the tilt) + half of the fov (because\n        // we need the angle between e, 🎥 and d2) and using trigonometry, result is therefore:\n        // (tan(a->d2) * z).\n        // a->e needs just the tilt and trigonometry to compute, result is: (tan(a->e) * z).\n\n        const camera = this.m_camera;\n        const cameraPitch = MapViewUtils.extractAttitude(this.mapView, camera).pitch;\n        // Ensure that the aspect is >= 1.\n        const aspect = camera.aspect > 1 ? camera.aspect : 1 / camera.aspect;\n        // Angle between a->d2, note, the fov is vertical, hence we translate to horizontal.\n        const totalAngleRad = THREE.MathUtils.degToRad((camera.fov * aspect) / 2) + cameraPitch;\n        // Length a->d2\n        const worldLengthHorizontalFull = Math.tan(totalAngleRad) * camera.position.z;\n        // Length a->e\n        const worldLengthHorizontalSmallerHalf = Math.tan(cameraPitch) * camera.position.z;\n        // Length e -> d2\n        const worldLengthHorizontal = worldLengthHorizontalFull - worldLengthHorizontalSmallerHalf;\n        const worldLeftPoint = new THREE.Vector3(\n            worldCenter.x - worldLengthHorizontal,\n            worldCenter.y,\n            worldCenter.z\n        );\n        const worldLeftGeoPoint = this.mapView.projection.unprojectPoint(worldLeftPoint);\n        // We multiply by SQRT2 because we need to account for a rotated view (in which case there\n        // are more tiles that can be seen).\n        const offsetRange = THREE.MathUtils.clamp(\n            Math.ceil(\n                Math.abs((worldGeoPoint.longitude - worldLeftGeoPoint.longitude) / 360) * Math.SQRT2\n            ),\n            0,\n            // We can store currently up to 16 unique keys(2^4, where 4 is the default bit-shift\n            // value which is used currently in the VisibleTileSet methods) hence we can have a\n            // maximum range of 7 (because 2*7+1 = 15).\n            7\n        );\n        for (\n            let offset = -offsetRange + startOffset;\n            offset <= offsetRange + startOffset;\n            offset++\n        ) {\n            this.m_rootTileKeys.push(new TileKeyEntry(rootTileKey, Infinity, offset));\n        }\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DecodedTile } from \"@here/harp-datasource-protocol\";\n\n/**\n * The state the {@link ITileLoader}.\n */\nexport enum TileLoaderState {\n    Initialized,\n    Loading,\n    Loaded,\n    Decoding,\n    Ready,\n    Canceled,\n    Failed\n}\n\n/**\n * The interface for managing tile loading.\n */\nexport interface ITileLoader {\n    /**\n     * Current state of `TileLoader`.\n     */\n    state: TileLoaderState;\n\n    /**\n     * The result of decoding the `payload`: The [[DecodedTile]].\n     */\n    decodedTile?: DecodedTile;\n\n    /**\n     * `true` if [[Tile]] is still loading, `false` otherwise.\n     */\n    readonly isFinished: boolean;\n\n    /**\n     * Priority given to the tile loading task. The greater the number, the higher the priority.\n     */\n    priority: number;\n\n    /**\n     * Start loading and/or proceed through the various states of loading of this tile.\n     *\n     * @param client - Optional client requesting the load.\n     * @returns A promise which resolves the [[TileLoaderState]].\n     */\n    loadAndDecode(client?: any): Promise<TileLoaderState>;\n\n    /**\n     * Return the current state in form of a promise. Caller can then wait for the promise to be\n     * resolved.\n     *\n     * @returns A promise which resolves the current [[TileLoaderState]].\n     */\n    waitSettled(): Promise<TileLoaderState>;\n\n    /**\n     * Cancel loading of the [[Tile]].\n     * Cancellation token is notified, an internal state is cleaned up.\n     * @param client - Optional client requesting the cancelation. It's expected to match one of\n     * the clients that previously called {@link ITileLoader.loadAndDecode}.\n     */\n    cancel(client?: any): void;\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { StylePriority } from \"@here/harp-datasource-protocol\";\nimport {\n    GeoCoordinates,\n    isGeoCoordinatesLike,\n    isVector3Like,\n    Projection,\n    Vector3Like\n} from \"@here/harp-geoutils\";\nimport { GeoCoordLike } from \"@here/harp-geoutils/lib/coordinates/GeoCoordLike\";\nimport * as THREE from \"three\";\n\n/**\n * An interface describing [[THREE.Object3D]]s anchored on\n * given {@link @here/harp-geoutils#GeoCoordinates}.\n *\n * @remarkks\n * @example\n * Example:\n * ```typescript\n * const mesh: MapAnchor<THREE.Mesh> = new THREE.Mesh(geometry, material);\n * mesh.anchor = new GeoCoordinates(latitude, longitude, altitude);\n * mapView.mapAnchors.add(mesh);\n * ```\n */\nexport type MapAnchor<T extends THREE.Object3D = THREE.Object3D> = T & {\n    /**\n     * The position of this [[MapAnchor]] in {@link @here/harp-geoutils#GeoCoordinates}.\n     * @deprecated Use [[anchor]] instead.\n     */\n    geoPosition?: GeoCoordinates;\n\n    /**\n     * The anchor of this Object3D in {@link @here/harp-geoutils#GeoCoordinates}\n     * or world coordinates.\n     */\n    anchor?: GeoCoordLike | Vector3Like;\n\n    /**\n     * Flag defining if the object may be picked.\n     *\n     * @note By default all objects are pickable even if this flag is undefined.\n     */\n    pickable?: boolean;\n\n    /**\n     * The styleSet that owns this map object.\n     *\n     * @remarks\n     * This property is used together with [[Theme.priorities]] to compute the render\n     * order of this map object.\n     */\n    styleSet?: string;\n\n    /**\n     * The category of this style.\n     *\n     * @remarks\n     * This property is used together with [[Theme.priorities]] to compute the render\n     * order of this map object.\n     */\n    category?: string;\n\n    /**\n     * Whether to draw the anchor on top of labels.\n     * @defaultValue false\n     */\n    overlay?: boolean;\n};\n\n/**\n * Container holding [[MapAnchor]] objects.\n */\nexport class MapAnchors {\n    private m_anchors: MapAnchor[] = [];\n    private m_priorities: StylePriority[] = [];\n\n    /**\n     * All currently added [[MapAnchor]]s.\n     */\n    get children() {\n        return this.m_anchors;\n    }\n\n    /**\n     * Add a [[MapAnchor]].\n     * @param mapAnchor [[MapAnchor]] instance to add.\n     */\n    add(mapAnchor: MapAnchor) {\n        this.m_anchors.push(mapAnchor);\n    }\n\n    /**\n     * Remove a [[MapAnchor]].\n     * @param mapAnchor - [[MapAnchor]] instance to remove.\n     *\n     * @note This method is potentially slow when removing a lot of anchors.\n     * [[clear]]ing and [[add]]ing anchors should be considered in that case.\n     */\n    remove(mapAnchor: MapAnchor) {\n        const index = this.m_anchors.findIndex(element => element === mapAnchor);\n        if (index > -1) {\n            this.m_anchors.splice(index, 1);\n        }\n    }\n\n    /**\n     * Remove all [[MapAnchor]]s.\n     */\n    clear() {\n        this.m_anchors.length = 0;\n    }\n\n    setPriorities(priorities: StylePriority[]) {\n        this.m_priorities = priorities;\n    }\n\n    /**\n     * Update the map anchors.\n     * @param projection - Current projection\n     * @param cameraPosition - Current camera position\n     * @param rootNode - Node where normal anchors will be inserted.\n     * @param overlayRootNode - Node where overlay anchors will be insterted.\n     * @param priorities - Optional theme priority list\n     *\n     * @internal\n     * @hidden\n     */\n    update(\n        projection: Projection,\n        cameraPosition: THREE.Vector3,\n        rootNode: THREE.Object3D,\n        overlayRootNode: THREE.Object3D\n    ) {\n        const worldPosition = new THREE.Vector3();\n\n        this.m_anchors.forEach((mapAnchor: MapAnchor) => {\n            if (mapAnchor.styleSet !== undefined) {\n                const priority = this.m_priorities?.findIndex(\n                    entry =>\n                        entry.group === mapAnchor.styleSet && entry.category === mapAnchor.category\n                );\n\n                if (priority !== undefined && priority !== -1) {\n                    mapAnchor.renderOrder = (priority + 1) * 10;\n                }\n            }\n\n            const anchor =\n                mapAnchor.geoPosition !== undefined ? mapAnchor.geoPosition : mapAnchor.anchor;\n            if (anchor !== undefined) {\n                if (isVector3Like(anchor)) {\n                    worldPosition.set(anchor.x, anchor.y, anchor.z);\n                } else if (isGeoCoordinatesLike(anchor)) {\n                    projection.projectPoint(anchor, worldPosition);\n                }\n                mapAnchor.position.copy(worldPosition).sub(cameraPosition);\n            }\n\n            if (mapAnchor.overlay === true) {\n                overlayRootNode.add(mapAnchor);\n            } else {\n                rootNode.add(mapAnchor);\n            }\n        });\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    ColorUtils,\n    Expr,\n    getPropertyValue,\n    TEXTURE_PROPERTY_KEYS,\n    Value\n} from \"@here/harp-datasource-protocol\";\nimport { disableBlending, enableBlending, RawShaderMaterial } from \"@here/harp-materials\";\nimport * as THREE from \"three\";\n\nimport { evaluateColorProperty } from \"./DecodedTileHelpers\";\nimport { MapView } from \"./MapView\";\n\n/**\n * @hidden\n *\n * Pick of {@link MapView} properties required to update materials used [[MapMaterialAdapter]].\n */\nexport type MapAdapterUpdateEnv = Pick<MapView, \"env\" | \"frameNumber\">;\n\n/**\n * @hidden\n *\n * Custom, callback based property evaluator used by [[MapObjectAdapter]] to evaluate dynamic\n * properties of object/material.\n */\nexport type StylePropertyEvaluator = (context: MapAdapterUpdateEnv) => Value;\n\n/**\n * @hidden\n *\n * Styled properties of material managed by [[MapMaterialAdapter]].\n */\nexport interface StyledProperties {\n    [name: string]: Expr | StylePropertyEvaluator | Value | undefined;\n}\n\nfunction isTextureProperty(propertyName: string): boolean {\n    return TEXTURE_PROPERTY_KEYS.includes(propertyName);\n}\n\n/**\n * @hidden\n *\n * {@link MapView} specific data assigned to `THREE.Material` instance in installed in `userData`.\n *\n * [[MapMaterialAdapter]] is registered in `usedData.mapAdapter` property of `THREE.Material`.\n */\nexport class MapMaterialAdapter {\n    /**\n     * Resolve `MapMaterialAdapter` associated with `material`.\n     */\n    static get(material: THREE.Material): MapMaterialAdapter | undefined {\n        const mapAdapter = material.userData?.mapAdapter;\n        if (mapAdapter instanceof MapMaterialAdapter) {\n            return mapAdapter;\n        } else if (mapAdapter !== undefined) {\n            // NOTE: we can rebuild MapMaterialAdapter here if userData.mapAdapter contains\n            // stylesed etc, this can be done to rebuild previously saved scene\n            return undefined;\n        } else {\n            return undefined;\n        }\n    }\n\n    static install(objData: MapMaterialAdapter): MapMaterialAdapter {\n        if (!objData.material.userData) {\n            objData.material.userData = {};\n        }\n        return (objData.material.userData.mapAdapter = objData);\n    }\n\n    static create(\n        material: THREE.Material,\n        styledProperties: StyledProperties\n    ): MapMaterialAdapter {\n        return MapMaterialAdapter.install(new MapMaterialAdapter(material, styledProperties));\n    }\n\n    static ensureUpdated(material: THREE.Material, context: MapAdapterUpdateEnv): boolean {\n        return MapMaterialAdapter.get(material)?.ensureUpdated(context) ?? false;\n    }\n\n    /**\n     * Associated material object.\n     */\n    readonly material: THREE.Material;\n\n    /**\n     * Styled material properties.\n     *\n     * Usually pick from [[Technique]] attributes that constitute material properties managed\n     * by this adapter.\n     */\n    readonly styledProperties: StyledProperties;\n\n    /**\n     * Current values of styled material properties.\n     *\n     * Actual values valid for scope of one frame updated in [[ensureUpdated]].\n     */\n    readonly currentStyledProperties: { [name: string]: Value | undefined };\n\n    private m_lastUpdateFrameNumber = -1;\n    private readonly m_dynamicProperties: Array<[string, Expr | StylePropertyEvaluator]>;\n    private readonly tmpColor = new THREE.Color();\n\n    constructor(material: THREE.Material, styledProperties: StyledProperties) {\n        this.material = material;\n        this.styledProperties = styledProperties;\n\n        this.currentStyledProperties = {};\n        this.m_dynamicProperties = [];\n        for (const propName in styledProperties) {\n            if (!styledProperties.hasOwnProperty(propName)) {\n                continue;\n            }\n            const propDefinition = styledProperties![propName];\n            if (Expr.isExpr(propDefinition) || typeof propDefinition === \"function\") {\n                this.m_dynamicProperties.push([propName, propDefinition as any]);\n            } else {\n                this.currentStyledProperties[propName] = propDefinition;\n            }\n        }\n        this.setupStaticProperties();\n    }\n\n    /**\n     * Serialize contents.\n     *\n     * `THREE.Material.userData` is serialized during `clone`/`toJSON`, so we need to ensure that\n     * we emit only \"data\" set of this object.\n     */\n    toJSON() {\n        return { styledProperties: this.styledProperties };\n    }\n\n    /**\n     * Ensure that underlying object is updated to current state of {@link MapView}.\n     *\n     * Updates dynamically styled properties of material by evaluating scene dependent expressions.\n     *\n     * Executes updates only once per frame basing on [[MapView.frameNumber]].\n     *\n     * @returns `true` if object performed some kind of update, `false` if no update was needed.\n     */\n    ensureUpdated(context: MapAdapterUpdateEnv) {\n        if (this.m_lastUpdateFrameNumber === context.frameNumber) {\n            return false;\n        }\n        this.m_lastUpdateFrameNumber = context.frameNumber;\n\n        return this.updateDynamicProperties(context);\n    }\n\n    /**\n     * Applies static properties to target material.\n     */\n    private setupStaticProperties() {\n        let updateBaseColor = false;\n        for (const propName in this.styledProperties) {\n            if (!this.styledProperties.hasOwnProperty(propName)) {\n                continue;\n            }\n            const currentValue = this.currentStyledProperties[propName];\n            if (currentValue === undefined || currentValue === null) {\n                continue;\n            }\n            if (propName === \"color\" || propName === \"opacity\") {\n                updateBaseColor = true;\n            } else if (!isTextureProperty(propName)) {\n                // Static textures are already set in the material during tile construction.\n                this.applyMaterialGenericProp(propName, currentValue);\n            }\n        }\n        if (updateBaseColor) {\n            const color = (this.currentStyledProperties.color as number) ?? 0xff0000;\n            const opacity = (this.currentStyledProperties.opacity as number) ?? 1;\n            this.applyMaterialBaseColor(color, opacity);\n        }\n    }\n\n    /**\n     * Applies static properties to target material.\n     */\n    private updateDynamicProperties(context: MapAdapterUpdateEnv) {\n        let somethingChanged = false;\n        if (this.m_dynamicProperties.length > 0) {\n            let updateBaseColor = false;\n\n            for (const [propName, propDefinition] of this.m_dynamicProperties) {\n                const newValue = Expr.isExpr(propDefinition)\n                    ? getPropertyValue(propDefinition, context.env)\n                    : propDefinition(context);\n                if (newValue === this.currentStyledProperties[propName]) {\n                    continue;\n                }\n                this.currentStyledProperties[propName] = newValue;\n\n                // `color` and `opacity` are special properties to support RGBA\n                if (propName === \"color\" || propName === \"opacity\") {\n                    updateBaseColor = true;\n                } else if (isTextureProperty(propName)) {\n                    this.applyMaterialTextureProp(propName, newValue);\n                    somethingChanged = true;\n                } else {\n                    this.applyMaterialGenericProp(propName, newValue);\n                    somethingChanged = true;\n                }\n            }\n\n            if (updateBaseColor) {\n                const color = this.currentStyledProperties.color ?? 0xff0000;\n                const opacity = (this.currentStyledProperties.opacity as number) ?? 1;\n                this.applyMaterialBaseColor(color, opacity);\n                somethingChanged = true;\n            }\n        }\n        return somethingChanged;\n    }\n\n    private applyMaterialTextureProp(propName: string, value: Value) {\n        const m = this.material as any;\n        // Wait until the texture is loaded for the first time on tile creation, that way,\n        // the old texture properties can be copied to the new texture.\n        if (!m[propName] || value === null) {\n            return;\n        }\n        const oldTexture = m[propName];\n        let newTexture: THREE.Texture | undefined;\n\n        if (typeof value === \"string\") {\n            newTexture = new THREE.TextureLoader().load(value, (texture: THREE.Texture) => {\n                m[propName] = texture;\n            });\n        } else if (typeof value === \"object\") {\n            const element = value as any;\n            const isImage = element.nodeName === \"IMG\";\n            const isCanvas = element.nodeName === \"CANVAS\";\n            if (isImage || isCanvas) {\n                newTexture = new THREE.CanvasTexture(element);\n\n                if (isImage && !element.complete) {\n                    const onLoad = () => {\n                        m[propName] = newTexture;\n                        element.removeEventListener(\"load\", onLoad);\n                    };\n                    element.addEventListener(\"load\", onLoad);\n                } else {\n                    m[propName] = newTexture;\n                }\n            }\n        }\n\n        if (newTexture) {\n            newTexture.wrapS = oldTexture.wrapS;\n            newTexture.wrapT = oldTexture.wrapT;\n            newTexture.magFilter = oldTexture.magFilter;\n            newTexture.minFilter = oldTexture.minFilter;\n            newTexture.flipY = oldTexture.flipY;\n            newTexture.repeat = oldTexture.repeat;\n        }\n    }\n\n    private applyMaterialGenericProp(propName: string, value: Value) {\n        const m = this.material as any;\n        if (m[propName] instanceof THREE.Color) {\n            let colorValue = value;\n            if (typeof colorValue !== \"number\") {\n                const parsed = evaluateColorProperty(colorValue);\n                if (parsed === undefined) {\n                    return;\n                }\n                colorValue = parsed;\n            }\n            const rgbValue = ColorUtils.removeAlphaFromHex(colorValue);\n            this.tmpColor.set(rgbValue);\n            // We set the value, i.e. using =, as opposed to setting the color directly using set\n            // because the material may be a custom material with a setter.\n            value = this.tmpColor;\n        }\n\n        m[propName] = value;\n    }\n\n    private applyMaterialBaseColor(color: Value, opacity: number | undefined) {\n        if (typeof color !== \"number\") {\n            const parsed = evaluateColorProperty(color);\n            if (parsed === undefined) {\n                return;\n            }\n            color = parsed;\n        }\n        const { r, g, b, a } = ColorUtils.getRgbaFromHex(color ?? 0xff0000);\n\n        const actualOpacity = a * THREE.MathUtils.clamp(opacity ?? 1, 0, 1);\n        if (this.material instanceof RawShaderMaterial) {\n            this.material.setOpacity(actualOpacity);\n        } else {\n            this.material.opacity = actualOpacity;\n        }\n\n        (this.material as any).color.setRGB(r, g, b);\n\n        const opaque = actualOpacity >= 1.0;\n        if (!opaque) {\n            enableBlending(this.material);\n        } else {\n            disableBlending(this.material);\n        }\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { GeometryKind, Pickability, Technique } from \"@here/harp-datasource-protocol\";\nimport * as THREE from \"three\";\n\nimport { DataSource } from \"./DataSource\";\nimport { MapAdapterUpdateEnv, MapMaterialAdapter } from \"./MapMaterialAdapter\";\n\n/**\n * @hidden\n *\n * Construction params of `MapObjectAdapter`.\n */\nexport interface MapObjectAdapterParams {\n    dataSource?: DataSource;\n    technique?: Technique;\n    kind?: GeometryKind[];\n    level?: number;\n    pickability?: Pickability;\n\n    // TODO: Move here in following refactor.\n    //featureData?: TileFeatureData;\n}\n\n/**\n * @hidden\n *\n * {@link MapView} specific data assigned to `THREE.Object3D` instance in installed in `userData`.\n *\n * `MapObjectAdapter` is registered in `usedData.mapAdapter` property of `THREE.Object3D`.\n */\nexport class MapObjectAdapter {\n    /**\n     * Resolve `MapObjectAdapter` associated with `object`.\n     */\n    static get(object: THREE.Object3D): MapObjectAdapter | undefined {\n        return object.userData?.mapAdapter instanceof MapObjectAdapter\n            ? object.userData.mapAdapter\n            : undefined;\n    }\n\n    static install(objData: MapObjectAdapter): MapObjectAdapter {\n        if (!objData.object.userData) {\n            objData.object.userData = {};\n        }\n        return (objData.object.userData.mapAdapter = objData);\n    }\n\n    static create(object: THREE.Object3D, params: MapObjectAdapterParams): MapObjectAdapter {\n        return MapObjectAdapter.install(new MapObjectAdapter(object, params));\n    }\n\n    static ensureUpdated(object: THREE.Object3D, context: MapAdapterUpdateEnv): boolean {\n        return MapObjectAdapter.get(object)?.ensureUpdated(context) ?? false;\n    }\n\n    /**\n     * Associated scene object.\n     */\n    readonly object: THREE.Object3D;\n\n    /**\n     * [[Technique]] that constituted this object.\n     */\n    readonly technique?: Technique;\n\n    /**\n     * [[GeometryKind]] of `object`.\n     */\n    readonly kind: GeometryKind[] | undefined;\n\n    readonly dataSource?: DataSource;\n\n    /**\n     * Which level this object exists on, must match the TileKey's level.\n     */\n    readonly level: number | undefined;\n\n    private readonly m_pickability: Pickability;\n    private m_lastUpdateFrameNumber = -1;\n    private m_notCompletlyTransparent = true;\n\n    constructor(object: THREE.Object3D, params: MapObjectAdapterParams) {\n        this.object = object;\n        this.technique = params.technique;\n        this.kind = params.kind;\n        this.dataSource = params.dataSource;\n        this.m_pickability = params.pickability ?? Pickability.onlyVisible;\n        this.m_notCompletlyTransparent = this.getObjectMaterials().some(\n            material => material.opacity > 0\n        );\n        this.level = params.level;\n    }\n\n    /**\n     * Serialize contents.\n     *\n     * `THREE.Object3d.userData` is serialized during `clone`/`toJSON`, so we need to ensure that\n     * we emit only \"data\" set of this object.\n     */\n    toJSON() {\n        return { kind: this.kind, technique: this.technique };\n    }\n\n    /**\n     * Ensure that underlying object is updated to current state of {@link MapView}.\n     *\n     * Updates object and attachments like materials to current state by evaluating scene dependent\n     * expressions.\n     *\n     * Executes updates only once per frame basing on [[MapView.frameNumber]].\n     *\n     * Delegates updates of materials to [[MapMaterialAdapter.ensureUpdated]].\n     *\n     * @returns `true` if object performed some kind of update, `false` if no update was needed.\n     */\n    ensureUpdated(context: MapAdapterUpdateEnv): boolean {\n        if (this.m_lastUpdateFrameNumber === context.frameNumber) {\n            return false;\n        }\n        this.m_lastUpdateFrameNumber = context.frameNumber;\n\n        return this.updateMaterials(context);\n    }\n\n    /**\n     * Whether underlying `THREE.Object3D` is actually visible in scene.\n     */\n    isVisible() {\n        return this.object.visible && this.m_notCompletlyTransparent;\n    }\n\n    /**\n     * Whether underlying `THREE.Object3D` should be pickable by {@link PickHandler}.\n     */\n    isPickable() {\n        // An object is pickable only if it's visible and Pickabilty.onlyVisible or\n        //  Pickabililty.all set.\n        return (\n            (this.pickability === Pickability.onlyVisible && this.isVisible()) ||\n            this.m_pickability === Pickability.all\n        );\n    }\n\n    get pickability(): Pickability {\n        return this.m_pickability;\n    }\n\n    private updateMaterials(context: MapAdapterUpdateEnv) {\n        let somethingChanged: boolean = false;\n        const materials = this.getObjectMaterials();\n        for (const material of materials) {\n            const changed = MapMaterialAdapter.ensureUpdated(material, context);\n            somethingChanged = somethingChanged || changed;\n        }\n        if (somethingChanged) {\n            this.m_notCompletlyTransparent = materials.some(material => material.opacity > 0);\n        }\n        return somethingChanged;\n    }\n\n    private getObjectMaterials(): THREE.Material[] {\n        const object = this.object as THREE.Mesh;\n        return Array.isArray(object.material)\n            ? object.material\n            : object.material !== undefined\n            ? [object.material]\n            : [];\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\n/**\n * Second step tile culling: Do additional check for intersection of box and frustum by checking if\n * the frustum is outside any plane of the tiles `bbox` (oriented, not AABB). It's in the inverse of\n * the standard frustum test, which excludes many cases where the large terrain tiles straddle the\n * planes of the frustum.\n *\n * @see http://www.iquilezles.org/www/articles/frustumcorrect/frustumcorrect.htm\n */\nexport class MapTileCuller {\n    private m_globalFrustumMin = new THREE.Vector3();\n    private m_globalFrustumMax = new THREE.Vector3();\n\n    private readonly m_frustumCorners = [\n        new THREE.Vector3(),\n        new THREE.Vector3(),\n        new THREE.Vector3(),\n        new THREE.Vector3(),\n        new THREE.Vector3(),\n        new THREE.Vector3(),\n        new THREE.Vector3(),\n        new THREE.Vector3()\n    ];\n\n    /**\n     * Constructs a `MapTileCuller`.\n     *\n     * @param m_camera - A `THREE.Camera`.\n     */\n    constructor(private readonly m_camera: THREE.Camera) {}\n\n    /**\n     * Sets up culling and computes frustum corners. You mus call this function before the culling\n     * starts.\n     */\n    setup() {\n        const frustumCorners = this.getFrustumCorners();\n\n        const matrix = this.m_camera.matrixWorld;\n\n        this.m_globalFrustumMin.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n        this.m_globalFrustumMax.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n\n        for (const frustumCorner of frustumCorners) {\n            frustumCorner.applyMatrix4(matrix);\n\n            this.m_globalFrustumMin.x = Math.min(this.m_globalFrustumMin.x, frustumCorner.x);\n            this.m_globalFrustumMin.y = Math.min(this.m_globalFrustumMin.y, frustumCorner.y);\n            this.m_globalFrustumMin.z = Math.min(this.m_globalFrustumMin.z, frustumCorner.z);\n\n            this.m_globalFrustumMax.x = Math.max(this.m_globalFrustumMax.x, frustumCorner.x);\n            this.m_globalFrustumMax.y = Math.max(this.m_globalFrustumMax.y, frustumCorner.y);\n            this.m_globalFrustumMax.z = Math.max(this.m_globalFrustumMax.z, frustumCorner.z);\n        }\n    }\n\n    /**\n     * Checks if the tile's bounding box intersects with the current view's frustum.\n     *\n     * @param tileBounds - The bounding box for the tile.\n     */\n    frustumIntersectsTileBox(tileBounds: THREE.Box3): boolean {\n        const globalFrustumMin = this.m_globalFrustumMin;\n        const globalFrustumMax = this.m_globalFrustumMax;\n\n        if (\n            globalFrustumMax.x < tileBounds.min.x ||\n            globalFrustumMax.y < tileBounds.min.y ||\n            globalFrustumMax.z < tileBounds.min.z ||\n            globalFrustumMin.x > tileBounds.max.x ||\n            globalFrustumMin.y > tileBounds.max.y ||\n            globalFrustumMin.z > tileBounds.max.z\n        ) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Returns the eight corners of the frustum.\n     */\n    private getFrustumCorners(): THREE.Vector3[] {\n        const frustumCorners = this.m_frustumCorners;\n        const invProjMatrix = (this.m_camera as any).projectionMatrixInverse as THREE.Matrix4;\n\n        let cornerIndex = 0;\n\n        function addPoint(x: number, y: number, z: number) {\n            frustumCorners[cornerIndex++].set(x, y, z).applyMatrix4(invProjMatrix);\n        }\n\n        const w = 1;\n        const h = 1;\n        const n = -1;\n        const f = 1;\n\n        // near\n        addPoint(-w, -h, n);\n        addPoint(w, -h, n);\n        addPoint(-w, h, n);\n        addPoint(w, h, n);\n\n        // far\n        addPoint(-w, -h, f);\n        addPoint(w, -h, f);\n        addPoint(-w, h, f);\n        addPoint(w, h, f);\n\n        return frustumCorners;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    Env,\n    FlatTheme,\n    FontCatalogConfig,\n    MapEnv,\n    PostEffects,\n    TextStyleDefinition,\n    Theme,\n    Value\n} from \"@here/harp-datasource-protocol\";\nimport { ViewRanges } from \"@here/harp-datasource-protocol/lib/ViewRanges\";\nimport {\n    EarthConstants,\n    GeoBox,\n    GeoBoxExtentLike,\n    GeoCoordinates,\n    GeoPolygon,\n    isGeoBoxExtentLike,\n    isGeoCoordinatesLike,\n    isVector3Like,\n    mercatorProjection,\n    OrientedBox3,\n    Projection,\n    ProjectionType,\n    TilingScheme,\n    Vector3Like\n} from \"@here/harp-geoutils\";\nimport { GeoCoordLike } from \"@here/harp-geoutils/lib/coordinates/GeoCoordLike\";\nimport {\n    assert,\n    getOptionValue,\n    LoggerManager,\n    LogLevel,\n    PerformanceTimer,\n    TaskQueue,\n    UriResolver\n} from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { AnimatedExtrusionHandler } from \"./AnimatedExtrusionHandler\";\nimport { BackgroundDataSource } from \"./BackgroundDataSource\";\nimport { CameraMovementDetector } from \"./CameraMovementDetector\";\nimport { CameraUtils } from \"./CameraUtils\";\nimport { ClipPlanesEvaluator, createDefaultClipPlanesEvaluator } from \"./ClipPlanesEvaluator\";\nimport { IMapAntialiasSettings, IMapRenderingManager, MapRenderingManager } from \"./composing\";\nimport { ConcurrentDecoderFacade } from \"./ConcurrentDecoderFacade\";\nimport { ConcurrentTilerFacade } from \"./ConcurrentTilerFacade\";\nimport { CopyrightInfo } from \"./copyrights/CopyrightInfo\";\nimport { DataSource } from \"./DataSource\";\nimport { ElevationProvider } from \"./ElevationProvider\";\nimport { ElevationRangeSource } from \"./ElevationRangeSource\";\nimport { EventDispatcher } from \"./EventDispatcher\";\nimport {\n    DEFAULT_FOV_CALCULATION,\n    FovCalculation,\n    MAX_FOV_DEG,\n    MIN_FOV_DEG\n} from \"./FovCalculation\";\nimport { FrustumIntersection } from \"./FrustumIntersection\";\nimport { overlayOnElevation } from \"./geometry/overlayOnElevation\";\nimport { TileGeometryManager } from \"./geometry/TileGeometryManager\";\nimport { MapViewImageCache } from \"./image/MapViewImageCache\";\nimport { IntersectParams } from \"./IntersectParams\";\nimport { MapAnchors } from \"./MapAnchors\";\nimport { MapViewEnvironment } from \"./MapViewEnvironment\";\nimport { MapViewFog } from \"./MapViewFog\";\nimport { MapViewTaskScheduler } from \"./MapViewTaskScheduler\";\nimport { MapViewThemeManager } from \"./MapViewThemeManager\";\nimport { PickHandler, PickResult } from \"./PickHandler\";\nimport { PoiManager } from \"./poi/PoiManager\";\nimport { PoiTableManager } from \"./poi/PoiTableManager\";\nimport { PolarTileDataSource } from \"./PolarTileDataSource\";\nimport { ScreenProjector } from \"./ScreenProjector\";\nimport { FrameStats, PerformanceStatistics } from \"./Statistics\";\nimport { MapViewState } from \"./text/MapViewState\";\nimport { TextElement } from \"./text/TextElement\";\nimport { TextElementsRenderer } from \"./text/TextElementsRenderer\";\nimport { TextElementsRendererOptions } from \"./text/TextElementsRendererOptions\";\nimport { Tile } from \"./Tile\";\nimport { TileObjectRenderer } from \"./TileObjectsRenderer\";\nimport { MapViewUtils } from \"./Utils\";\nimport { ResourceComputationType, VisibleTileSet, VisibleTileSetOptions } from \"./VisibleTileSet\";\n\ndeclare const process: any;\n\n// Cache value, because access to process.env.NODE_ENV is SLOW!\nconst isProduction = process.env.NODE_ENV === \"production\";\nif (isProduction) {\n    // In production: silence logging below error.\n    LoggerManager.instance.setLogLevelForAll(LogLevel.Error);\n} else {\n    // In dev: silence logging below log (silences \"debug\" and \"trace\" levels).\n    LoggerManager.instance.setLogLevelForAll(LogLevel.Log);\n}\nexport enum TileTaskGroups {\n    FETCH_AND_DECODE = \"fetch\",\n    //DECODE = \"decode\",\n    CREATE = \"create\"\n    //UPLOAD = \"upload\"\n}\n\nexport enum MapViewEventNames {\n    /** Called before this `MapView` starts to render a new frame. */\n    Update = \"update\",\n    /** Called when the WebGL canvas is resized. */\n    Resize = \"resize\",\n    /** Called when the frame is about to be rendered. */\n    Render = \"render\",\n    /** Called after a frame has been rendered. */\n    AfterRender = \"didrender\",\n    /** Called after the first frame has been rendered. */\n    FirstFrame = \"first-render\",\n    /**\n     * Called when the rendered frame was complete, i.e. all the necessary tiles and resources\n     * are loaded and rendered.\n     */\n    FrameComplete = \"frame-complete\",\n    /** Called when the theme has been loaded with the internal {@link ThemeLoader}. */\n    ThemeLoaded = \"theme-loaded\",\n    /** Called when the animation mode has started. */\n    AnimationStarted = \"animation-started\",\n    /** Called when the animation mode has stopped. */\n    AnimationFinished = \"animation-finished\",\n    /** Called when a camera interaction has been detected. */\n    MovementStarted = \"movement-started\",\n    /** Called when a camera interaction has been stopped. */\n    MovementFinished = \"movement-finished\",\n    /** Called when a data source has been connected or failed to connect. */\n    DataSourceConnect = \"datasource-connect\",\n    /** Emitted when copyright info of rendered map has been changed. */\n    CopyrightChanged = \"copyright-changed\",\n    /** Called when the WebGL context is lost. */\n    ContextLost = \"webglcontext-lost\",\n    /** Called when the WebGL context is restored. */\n    ContextRestored = \"webglcontext-restored\",\n    /** Called when camera position has been changed. */\n    CameraPositionChanged = \"camera-changed\",\n    /** Called when dispose has been called, before any cleanup is done. */\n    Dispose = \"dispose\"\n}\n\nconst logger = LoggerManager.instance.create(\"MapView\");\nconst DEFAULT_CAM_NEAR_PLANE = 0.1;\nconst DEFAULT_CAM_FAR_PLANE = 4000000;\nconst DEFAULT_MIN_ZOOM_LEVEL = 1;\n\n/**\n * Default maximum zoom level.\n */\nconst DEFAULT_MAX_ZOOM_LEVEL = 20;\n\n/**\n * Default minimum camera height.\n */\nconst DEFAULT_MIN_CAMERA_HEIGHT = 20;\n\n/**\n * Style set used by {@link PolarTileDataSource} by default.\n */\nconst DEFAULT_POLAR_STYLE_SET_NAME = \"polar\";\n\n/**\n * The type of `RenderEvent`.\n */\nexport interface RenderEvent extends THREE.Event {\n    type: MapViewEventNames;\n    time?: number;\n}\n\nconst cache = {\n    vector2: [new THREE.Vector2()],\n    vector3: [new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()],\n    rayCaster: new THREE.Raycaster(),\n    groundPlane: new THREE.Plane(),\n    groundSphere: new THREE.Sphere(undefined, EarthConstants.EQUATORIAL_RADIUS),\n    matrix4: [new THREE.Matrix4(), new THREE.Matrix4()],\n    transform: [\n        {\n            position: new THREE.Vector3(),\n            xAxis: new THREE.Vector3(),\n            yAxis: new THREE.Vector3(),\n            zAxis: new THREE.Vector3()\n        }\n    ],\n    color: new THREE.Color()\n};\n\n/**\n * Hint for the WebGL implementation on which power mode to prefer.\n *\n * @see https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14.12\n */\nexport enum MapViewPowerPreference {\n    /** Default value. */\n    Default = \"default\",\n    /** Lower power mode, used to conserve energy. */\n    LowPower = \"low-power\",\n    /** Maximum performance. */\n    HighPerformance = \"high-performance\"\n}\n\n/**\n * User configuration for the {@link MapView}.\n */\nexport interface MapViewOptions extends TextElementsRendererOptions, Partial<LookAtParams> {\n    /**\n     * The canvas element used to render the scene.\n     */\n    canvas: HTMLCanvasElement;\n\n    /**\n     * Optional WebGL Rendering Context.\n     * (https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext)\n     */\n    context?: WebGLRenderingContext;\n\n    /**\n     * `true` if the canvas contains an alpha (transparency) buffer or not. Default is `false`.\n     */\n    alpha?: boolean;\n\n    /**\n     * If `true`adds a Background Mesh for each tile\n     *\n     * @default `true`\n     */\n    addBackgroundDatasource?: boolean;\n\n    /**\n     * Whether the native WebGL antialiasing should be enabled. It is better to disable it if the\n     * MapView's MSAA is enabled.\n     *\n     * @default `true` for `pixelRatio` < `2.0`, `false` otherwise.\n     */\n    enableNativeWebglAntialias?: boolean;\n\n    /**\n     * Antialias settings for the map rendering. It is better to disable the native antialiasing if\n     * the custom antialiasing is enabled.\n     */\n    customAntialiasSettings?: IMapAntialiasSettings;\n\n    /**\n     * `Projection` used by the `MapView`.\n     *\n     * The default value is [[mercatorProjection]].\n     */\n    projection?: Projection;\n\n    /**\n     * The URL of the script that the decoder worker runs. The default URL is\n     * `./decoder.bundle.js`.\n     *\n     * Relative URIs are resolved to full URL using the document's base URL\n     * (see: https://www.w3.org/TR/WD-html40-970917/htmlweb.html#h-5.1.2).\n     */\n    decoderUrl?: string;\n\n    /**\n     * The number of Web Workers used to decode data. The default is\n     * CLAMP(`navigator.hardwareConcurrency` - 1, 1, 2).\n     */\n    decoderCount?: number;\n\n    /**\n     * The {@link @here/harp-datasource-protocol#Theme} used by Mapview.\n     *\n     * This Theme can be one of the following:\n     *  - `string` : the URI of the theme file used to style this map\n     *  - `Theme` : the `Theme` object already loaded\n     *  - `Promise<Theme>` : the future `Theme` object\n     *  - `undefined` : the theme is not yet set up, but can be set later. Rendering waits until\n     *     the theme is set.\n     *\n     * **Note:** Layers that use a theme do not render any content until that theme is available.\n     *\n     * Relative URIs are resolved to full URL using the document's base URL\n     * (see: https://www.w3.org/TR/WD-html40-970917/htmlweb.html#h-5.1.2).\n     *\n     * Custom URIs (of theme itself and of resources referenced by theme) may be resolved with help\n     * of [[uriResolver]].\n     *\n     * @see {@link ThemeLoader.load} for details how theme is loaded\n     */\n    theme?: string | Theme | FlatTheme | Promise<Theme>;\n\n    /**\n     * Resolve `URI` referenced in `MapView` assets using this resolver.\n     *\n     * Use, to support application/deployment specific `URI`s into actual `URLs` that can be loaded\n     * with `fetch`.\n     *\n     * Example:\n     * ```\n     * uriResolver: new PrefixMapUriResolver({\n     *     \"local://poiMasterList\": \"/assets/poiMasterList.json\",\n     *        // will match only 'local//:poiMasterList' and\n     *        // resolve to `/assets/poiMasterList.json`\n     *     \"local://icons/\": \"/assets/icons/\"\n     *        // will match only 'local//:icons/ANYPATH' (and similar) and\n     *        // resolve to `/assets/icons/ANYPATH`\n     * })\n     * ```\n     *\n     * @see {@link @here/harp-utils#UriResolver}\n     * @See {@link @here/harp-utils#PrefixMapUriResolver}\n     */\n    uriResolver?: UriResolver;\n\n    /**\n     * The minimum zoom level; default is `1`.\n     */\n    minZoomLevel?: number;\n\n    /**\n     * Determines the minimum camera height, in meters.\n     */\n    minCameraHeight?: number;\n\n    /**\n     * The maximum zoom level. The default is `14`.\n     */\n    maxZoomLevel?: number;\n\n    /**\n     * User-defined camera clipping planes distance evaluator.\n     * If not defined, {@link TiltViewClipPlanesEvaluator} will be used by {@link MapView}.\n     *\n     * @default {@link TiltViewClipPlanesEvaluator}\n     */\n    clipPlanesEvaluator?: ClipPlanesEvaluator;\n\n    /**\n     * Set to true to extend the frustum culling. This improves the rejection of some tiles, which\n     * normal frustum culling cannot detect. You can disable this property to measure performance.\n     *\n     * @default true\n     */\n    extendedFrustumCulling?: boolean;\n\n    /**\n     * The maximum number of tiles rendered from one data source at a time.\n     *\n     * @default See [[MapViewDefaults.maxVisibleDataSourceTiles]].\n     */\n    maxVisibleDataSourceTiles?: number;\n\n    /**\n     * Size of a tile cache for one data source.\n     *\n     * @default See [[MapViewDefaults.tileCacheSize]].\n     */\n    tileCacheSize?: number;\n\n    /**\n     * Specify if the cache should be counted in tiles or in megabytes.\n     *\n     * @see [[MapViewDefaults.resourceComputationType]].\n     */\n    resourceComputationType?: ResourceComputationType;\n\n    /**\n     * Limits the number of reduced zoom levels (lower detail)\n     * to be searched for fallback tiles.\n     *\n     * When zooming in, newly elected tiles may have not\n     * yet loaded. {@link MapView} searches through\n     * the tile cache for tiles ready to be displayed in\n     * lower zoom levels. The tiles may be\n     * located shallower in the quadtree.\n     *\n     * To disable a cache search, set the value to `0`.\n     *\n     * @default [[MapViewDefaults.quadTreeSearchDistanceUp]]\n     */\n    quadTreeSearchDistanceUp?: number;\n\n    /**\n     * Limits the number of higher zoom levels (more detailed)\n     * to be searched for fallback tiles.\n     *\n     * When zooming out, newly elected tiles may have not\n     * yet loaded. {@link MapView} searches through\n     * the tile cache for tiles ready to be displayed in\n     * higher zoom levels. These tiles may be\n     * located deeper in the quadtree.\n     *\n     * To disable a cache search, set the value to `0`.\n     *\n     * @default [[MapViewDefaults.quadTreeSearchDistanceDown]]\n     */\n    quadTreeSearchDistanceDown?: number;\n\n    /**\n     * Set to `true` to measure performance statistics.\n     */\n    enableStatistics?: boolean;\n\n    /**\n     * Preserve the buffers until they are cleared manually or overwritten.\n     *\n     * Set to `true` in order to copy {@link MapView} canvas contents\n     * to an image or another canvas.\n     *\n     * @default `false`.\n     * @see https://threejs.org/docs/#api/renderers/WebGLRenderer.preserveDrawingBuffer\n     */\n    preserveDrawingBuffer?: boolean;\n\n    /**\n     * @deprecated Not needed anymore, roads can be picked by default.\n     */\n    enableRoadPicking?: boolean;\n\n    /**\n     * Set to `true` to allow picking of technique information associated with objects.\n     */\n    enablePickTechnique?: boolean;\n\n    /**\n     * Maximum timeout, in milliseconds, before a [[MOVEMENT_FINISHED_EVENT]] is sent after the\n     * latest frame with a camera movement. The default is 300ms.\n     */\n    movementThrottleTimeout?: number;\n\n    /**\n     * How to calculate the Field of View, if not specified, then\n     * [[DEFAULT_FOV_CALCULATION]] is used.\n     */\n    fovCalculation?: FovCalculation;\n\n    /*\n     * An array of ISO 639-1 language codes for data sources.\n     */\n    languages?: string[];\n\n    /**\n     * Sets the data sources to use specific country point of view (political view).\n     *\n     * This option may result in rendering different country borders then commonly accepted for\n     * some regions and it mainly regards to so called __disputed borders__. Although not all\n     * data sources or themes may support it.\n     *\n     * @note Country code should be coded in lower-case ISO 3166-1 alpha-2 standard, if this option\n     * is `undefined` the majority point of view will be used.\n     */\n    politicalView?: string;\n\n    /**\n     * Set fixed pixel ratio for rendering. Useful when rendering on high resolution displays with\n     * low performance GPUs that may be fill-rate limited.\n     * @default `window.devicePixelRatio`\n     */\n    pixelRatio?: number;\n\n    /**\n     * Set fixed pixel ratio for rendering when the camera is moving or an animation is running.\n     * Useful when rendering on high resolution displays with low performance GPUs that may be\n     * fill-rate limited.\n     *\n     * If a value is specified, a low resolution render pass is used to render the scene into a\n     * low resolution render target, before it is copied to the screen.\n     *\n     * A value of `undefined` disables the low res render pass. Values between 0.5 and\n     * `window.devicePixelRatio` can be tried to give  good results. The value should not be larger\n     * than `window.devicePixelRatio`.\n     *\n     * @note Since no anti-aliasing is applied during dynamic rendering with `dynamicPixelRatio`\n     * defined, visual artifacts may occur, especially with thin lines..\n     *\n     * @note The resolution of icons and text labels is not affected.\n     *\n     * @default `undefined`\n     */\n    dynamicPixelRatio?: number;\n\n    /**\n     * Set maximum FPS (Frames Per Second). If VSync in enabled, the specified number may not be\n     * reached, but instead the next smaller number than `maxFps` that is equal to the refresh rate\n     * divided by an integer number.\n     *\n     * E.g.: If the monitors refresh rate is set to 60hz, and if `maxFps` is set to a value of `40`\n     * (60hz/1.5), the actual used FPS may be 30 (60hz/2). For displays that have a refresh rate of\n     * 60hz, good values for `maxFps` are 30, 20, 15, 12, 10, 6, 3 and 1. A value of `0` is ignored.\n     */\n    maxFps?: number;\n\n    /**\n     * Enable map repeat for planar projections.\n     * If `true`, map will be repeated in longitudinal direction continuously.\n     * If `false`, map will end on lon -180 & 180 deg.\n     *\n     * @default `true`\n     */\n    tileWrappingEnabled?: boolean;\n\n    /**\n     * Set tiling scheme for [[BackgroundDataSource]]\n     */\n    backgroundTilingScheme?: TilingScheme;\n\n    /**\n     * Should be the {@link PolarTileDataSource} used on spherical projection.\n     * Default is `true`.\n     */\n    enablePolarDataSource?: boolean;\n\n    /**\n     * The name of the [[StyleSet]] used by {@link PolarTileDataSource}\n     * to evaluate for the decoding.\n     * Default is `\"polar\"`.\n     */\n    polarStyleSetName?: string;\n\n    /**\n     * Storage level offset of regular tiles from reference datasource to align\n     * {@link PolarTileDataSource} tiles to.\n     * Default is `-1`.\n     */\n    polarGeometryLevelOffset?: number;\n\n    /**\n     * Hint for the WebGL implementation on which power mode to prefer.\n     */\n    powerPreference?: MapViewPowerPreference;\n\n    /**\n     * Set to `true` to allow rendering scene synchronously.\n     *\n     * By calling `renderSync()` scene draws immediately, opposite to default case when\n     * `update` method requests redraw and waits for the next animation frame.\n     *\n     * You need to set up your own render loop controller.\n     * Event `MapViewEventNames.Update` fired when {@link MapView} requests for an redraw.\n     * E.g.: When tiles loaded asynchronously and ready for rendering.\n     *\n     * @note Internal `maxFps` will be overridden and may not work properly as `renderSync`\n     * intended to be called from external render loop.\n     *\n     * @default false.\n     */\n    synchronousRendering?: boolean;\n\n    /**\n     * Set true to enable rendering mixed levels of detail (increases rendering performance).\n     * If not set will enable mixed levels of detail for spherical projection\n     * and disable for other projections.\n     *\n     * @default undefined\n     */\n    enableMixedLod?: boolean;\n\n    /**\n     * If enableMixedLod is `true`, this value will be used to calculate the minimum Pixel Size of a\n     * tile regarding to the screen size. When the area of a tile is smaller then this calculated\n     * area on the screen, the subdivision of tiles is stopped and therefore higher level tiles will\n     * be rendered instead.\n     * @beta\n     *\n     * @default 256\n     */\n    lodMinTilePixelSize?: number;\n\n    /**\n     * Enable shadows in the map. Shadows will only be casted on features that use the \"standard\"\n     * or \"extruded-polygon\" technique in the map theme.\n     * @default false\n     */\n    enableShadows?: boolean;\n\n    /**\n     * Enable throttling for the TaskScheduler\n     * @default false\n     * @beta\n     */\n    throttlingEnabled?: boolean;\n\n    /**\n     * If set, the view will constrained within the given bounds in geo coordinates.\n     */\n    maxBounds?: GeoBox;\n}\n\n/**\n * Default settings used by {@link MapView} collected in one place.\n * @internal\n */\nconst MapViewDefaults = {\n    projection: mercatorProjection,\n    addBackgroundDatasource: true,\n\n    maxVisibleDataSourceTiles: 100,\n    extendedFrustumCulling: true,\n\n    tileCacheSize: 200,\n    resourceComputationType: ResourceComputationType.EstimationInMb,\n    quadTreeSearchDistanceUp: 3,\n    quadTreeSearchDistanceDown: 2,\n\n    pixelRatio:\n        typeof window !== \"undefined\" && window.devicePixelRatio !== undefined\n            ? window.devicePixelRatio\n            : 1.0,\n    target: new GeoCoordinates(25, 0),\n    zoomLevel: 5,\n    tilt: 0,\n    heading: 0,\n    theme: {},\n    maxTilesPerFrame: 0\n};\n\n/**\n * Parameters for {@link (MapView.lookAt:WITH_PARAMS)}.\n */\nexport interface LookAtParams {\n    /**\n     * Target/look at point of the MapView.\n     *\n     * @note If the given point is not on the ground (altitude != 0) {@link MapView} will do a\n     * raycasting internally to find a target on the ground.\n     *\n     * As a consequence {@link MapView.target} and {@link MapView.zoomLevel}\n     * will not match the values\n     * that were passed into the {@link (MapView.lookAt:WITH_PARAMS)} method.\n     * @default `new GeoCoordinates(25, 0)` in {@link MapView.constructor} context.\n     * @default {@link MapView.target} in {@link (MapView.lookAt:WITH_PARAMS)} context.\n     */\n    target: GeoCoordLike;\n\n    /**\n     * Fit MapView to these boundaries.\n     *\n     * If specified, `zoomLevel` and `distance` parameters are ignored and `lookAt` calculates best\n     * `zoomLevel` to fit given bounds.\n     *\n     * * if `bounds` is {@link @here/harp-geoutils#GeoBox}, then `lookAt`\n     *   use {@link LookAtParams.target} or `bounds.target` and\n     *   ensure whole box is visible\n     *\n     * * if `bounds` is {@link @here/harp-geoutils#GeoPolygon}, then `lookAt`\n     *   use `bounds.getCentroid()` and ensure whole polygon is visible\n     *\n     * * if `bounds` is {@link @here/harp-geoutils#GeoBoxExtentLike},\n     *   then `lookAt` will use {@link LookAtParams.target} or\n     *   current {@link MapView.target} and ensure whole extents are visible\n     *\n     * * if `bounds` is [[GeoCoordLike]][], then `lookAt` will use {@link LookAtParams.target} or\n     *   calculated `target` as center of world box covering given points and ensure all points are\n     *   visible\n     *\n     * Note in sphere projection some points are not visible if you specify bounds that span more\n     * than 180 degrees in any direction.\n     *\n     * @see {@link (MapView.lookAt:WITH_PARAMS)} for details on how `bounds`\n     *      interact with `target` parameter\n     */\n    bounds: GeoBox | GeoBoxExtentLike | GeoCoordLike[] | GeoPolygon;\n\n    /**\n     * Camera distance to the target point in world units.\n     * @default zoomLevel defaults will be used if not set.\n     */\n    distance: number;\n\n    /**\n     * Zoomlevel of the MapView.\n     * @note Takes precedence over distance.\n     * @default 5 in {@link MapView.constructor} context.\n     * @default {@link MapView.zoomLevel} in {@link (MapView.lookAt:WITH_PARAMS)} context.\n     */\n    zoomLevel: number;\n\n    /**\n     * Tilt angle in degrees. 0 is top down view.\n     * @default 0 in {@link MapView.constructor} context.\n     * @default {@link MapView.tilt} in {@link (MapView.lookAt:WITH_PARAMS)} context.\n     * @note Maximum supported tilt is 89°\n     */\n    tilt: number;\n\n    /**\n     * Heading angle in degrees and clockwise. 0 is north-up.\n     * @default 0 in {@link MapView.constructor} context.\n     * @default {@link MapView.heading} in {@link (MapView.lookAt:WITH_PARAMS)} context.\n     */\n    heading: number;\n}\n\n/**\n * The core class of the library to call in order to create a map visualization. It needs to be\n * linked to datasources.\n */\nexport class MapView extends EventDispatcher {\n    /**\n     * Keep the events here to avoid a global reference to MapView (and thus prevent garbage collection).\n     */\n    private readonly UPDATE_EVENT: RenderEvent = { type: MapViewEventNames.Update };\n    private readonly RENDER_EVENT: RenderEvent = { type: MapViewEventNames.Render };\n    private readonly DID_RENDER_EVENT: RenderEvent = { type: MapViewEventNames.AfterRender };\n    private readonly FIRST_FRAME_EVENT: RenderEvent = { type: MapViewEventNames.FirstFrame };\n    private readonly FRAME_COMPLETE_EVENT: RenderEvent = {\n        type: MapViewEventNames.FrameComplete\n    };\n\n    private readonly THEME_LOADED_EVENT: RenderEvent = {\n        type: MapViewEventNames.ThemeLoaded\n    };\n\n    private readonly ANIMATION_STARTED_EVENT: RenderEvent = {\n        type: MapViewEventNames.AnimationStarted\n    };\n\n    private readonly ANIMATION_FINISHED_EVENT: RenderEvent = {\n        type: MapViewEventNames.AnimationFinished\n    };\n\n    private readonly MOVEMENT_STARTED_EVENT: RenderEvent = {\n        type: MapViewEventNames.MovementStarted\n    };\n\n    private readonly MOVEMENT_FINISHED_EVENT: RenderEvent = {\n        type: MapViewEventNames.MovementFinished\n    };\n\n    private readonly CONTEXT_LOST_EVENT: RenderEvent = {\n        type: MapViewEventNames.ContextLost\n    };\n\n    private readonly CONTEXT_RESTORED_EVENT: RenderEvent = {\n        type: MapViewEventNames.ContextRestored\n    };\n\n    private readonly COPYRIGHT_CHANGED_EVENT: RenderEvent = {\n        type: MapViewEventNames.CopyrightChanged\n    };\n\n    private readonly DISPOSE_EVENT: RenderEvent = { type: MapViewEventNames.Dispose };\n\n    /**\n     * The instance of {@link MapRenderingManager} managing the rendering of the map. It is a public\n     * property to allow access and modification of some parameters of the rendering process at\n     * runtime.\n     */\n    readonly mapRenderingManager: IMapRenderingManager;\n\n    private m_renderLabels: boolean = true;\n\n    private m_movementFinishedUpdateTimerId?: any;\n    private m_postEffects?: PostEffects;\n\n    private readonly m_screenProjector: ScreenProjector;\n\n    private m_visibleTiles: VisibleTileSet;\n    private readonly m_tileObjectRenderer: TileObjectRenderer;\n\n    private m_elevationSource?: DataSource;\n    private m_elevationRangeSource?: ElevationRangeSource;\n    private m_elevationProvider?: ElevationProvider;\n    private m_visibleTileSetLock: boolean = false;\n    private readonly m_tileGeometryManager: TileGeometryManager;\n\n    private m_tileWrappingEnabled: boolean = true;\n\n    private m_zoomLevel: number = DEFAULT_MIN_ZOOM_LEVEL;\n    private m_minZoomLevel: number = DEFAULT_MIN_ZOOM_LEVEL;\n    private m_maxZoomLevel: number = DEFAULT_MAX_ZOOM_LEVEL;\n    private readonly m_minCameraHeight: number = DEFAULT_MIN_CAMERA_HEIGHT;\n    private m_geoMaxBounds?: GeoBox;\n    private m_worldMaxBounds?: THREE.Box3 | OrientedBox3;\n\n    private readonly m_camera: THREE.PerspectiveCamera;\n\n    /**\n     * Relative to eye camera.\n     *\n     * This camera is internal camera used to improve precision\n     * when rendering geometries.\n     */\n    private readonly m_rteCamera = new THREE.PerspectiveCamera();\n\n    private m_yaw = 0;\n    private m_pitch = 0;\n    private m_roll = 0;\n    private m_targetDistance = 0;\n    private m_targetGeoPos = GeoCoordinates.fromObject(MapViewDefaults.target!);\n    // Focus point world coords may be calculated after setting projection, use dummy value here.\n    private readonly m_targetWorldPos = new THREE.Vector3();\n    private readonly m_viewRanges: ViewRanges = {\n        near: DEFAULT_CAM_NEAR_PLANE,\n        far: DEFAULT_CAM_FAR_PLANE,\n        minimum: DEFAULT_CAM_NEAR_PLANE,\n        maximum: DEFAULT_CAM_FAR_PLANE\n    };\n\n    private m_pointOfView?: THREE.PerspectiveCamera;\n\n    private m_pixelToWorld?: number;\n    private m_pixelRatio?: number;\n\n    /** Default scene for map objects and map anchors */\n    private readonly m_scene: THREE.Scene = new THREE.Scene();\n    /** Separate scene for overlay map anchors */\n    private readonly m_overlayScene: THREE.Scene = new THREE.Scene();\n    /** Root node of [[m_scene]] that gets cleared every frame. */\n    private readonly m_sceneRoot = new THREE.Object3D();\n    /** Root node of [[m_overlayScene]] that gets cleared every frame. */\n    private readonly m_overlaySceneRoot = new THREE.Object3D();\n\n    private readonly m_mapAnchors: MapAnchors = new MapAnchors();\n\n    private m_animationCount: number = 0;\n    private m_animationFrameHandle: number | undefined;\n    private m_drawing: boolean = false;\n    private m_updatePending: boolean = false;\n    private readonly m_renderer: THREE.WebGLRenderer;\n    private m_frameNumber = 0;\n\n    private m_textElementsRenderer: TextElementsRenderer;\n\n    private m_forceCameraAspect: number | undefined = undefined;\n\n    // type any as it returns different types depending on the environment\n    private m_taskSchedulerTimeout: any = undefined;\n\n    //\n    // sources\n    //\n    private readonly m_tileDataSources: DataSource[] = [];\n    private readonly m_connectedDataSources = new Set<string>();\n    private readonly m_failedDataSources = new Set<string>();\n    private readonly m_polarDataSource?: PolarTileDataSource;\n    private readonly m_enablePolarDataSource: boolean = true;\n\n    // gestures\n    private readonly m_raycaster = new THREE.Raycaster();\n    private readonly m_plane = new THREE.Plane(new THREE.Vector3(0, 0, 1));\n    private readonly m_sphere = new THREE.Sphere(undefined, EarthConstants.EQUATORIAL_RADIUS);\n\n    private readonly m_options: MapViewOptions;\n    private readonly m_visibleTileSetOptions: VisibleTileSetOptions;\n\n    private readonly m_uriResolver?: UriResolver;\n\n    private m_previousFrameTimeStamp?: number;\n    private m_firstFrameRendered = false;\n    private m_firstFrameComplete = false;\n\n    private readonly handleRequestAnimationFrame: (frameStartTime: number) => void;\n\n    private readonly m_pickHandler: PickHandler;\n\n    private readonly m_userImageCache: MapViewImageCache = new MapViewImageCache();\n    private readonly m_env: MapEnv = new MapEnv({});\n\n    private readonly m_poiManager: PoiManager = new PoiManager(this);\n\n    private readonly m_poiTableManager: PoiTableManager = new PoiTableManager(this);\n\n    private readonly m_collisionDebugCanvas: HTMLCanvasElement | undefined;\n\n    // Detection of camera movement and scene change:\n    private readonly m_movementDetector: CameraMovementDetector;\n\n    private m_thisFrameTilesChanged: boolean | undefined;\n    private m_lastTileIds: string = \"\";\n    private m_languages: string[] | undefined;\n    private m_politicalView: string | undefined;\n    private m_copyrightInfo: CopyrightInfo[] = [];\n    private readonly m_animatedExtrusionHandler: AnimatedExtrusionHandler;\n\n    private m_enableMixedLod: boolean | undefined;\n    private readonly m_lodMinTilePixelSize: number | undefined;\n\n    private m_taskScheduler: MapViewTaskScheduler;\n    private readonly m_themeManager: MapViewThemeManager;\n    private readonly m_sceneEnvironment: MapViewEnvironment;\n\n    // `true` if dispose() has been called on `MapView`.\n    private m_disposed = false;\n\n    /**\n     * Constructs a new `MapView` with the given options or canvas element.\n     *\n     * @param options - The `MapView` options or the HTML canvas element used to display the map.\n     */\n    constructor(options: MapViewOptions) {\n        super();\n\n        // make a copy to avoid unwanted changes to the original options.\n        this.m_options = { ...options };\n\n        this.m_uriResolver = this.m_options.uriResolver;\n\n        if (this.m_options.minZoomLevel !== undefined) {\n            this.m_minZoomLevel = this.m_options.minZoomLevel;\n        }\n\n        if (this.m_options.maxZoomLevel !== undefined) {\n            this.m_maxZoomLevel = this.m_options.maxZoomLevel;\n        }\n\n        if (this.m_options.minCameraHeight !== undefined) {\n            this.m_minCameraHeight = this.m_options.minCameraHeight;\n        }\n\n        if (this.m_options.maxBounds !== undefined) {\n            this.m_geoMaxBounds = this.m_options.maxBounds;\n        }\n\n        if (this.m_options.decoderUrl !== undefined) {\n            ConcurrentDecoderFacade.defaultScriptUrl = this.m_uriResolver\n                ? this.m_uriResolver.resolveUri(this.m_options.decoderUrl)\n                : this.m_options.decoderUrl;\n        }\n\n        if (this.m_options.decoderCount !== undefined) {\n            ConcurrentDecoderFacade.defaultWorkerCount = this.m_options.decoderCount;\n        }\n\n        this.m_visibleTileSetOptions = {\n            ...MapViewDefaults,\n            clipPlanesEvaluator:\n                options.clipPlanesEvaluator !== undefined\n                    ? options.clipPlanesEvaluator\n                    : createDefaultClipPlanesEvaluator()\n        };\n\n        if (options.projection !== undefined) {\n            this.m_visibleTileSetOptions.projection = options.projection;\n        }\n\n        if (options.extendedFrustumCulling !== undefined) {\n            this.m_visibleTileSetOptions.extendedFrustumCulling = options.extendedFrustumCulling;\n        }\n\n        if (options.maxVisibleDataSourceTiles !== undefined) {\n            this.m_visibleTileSetOptions.maxVisibleDataSourceTiles =\n                options.maxVisibleDataSourceTiles;\n        }\n\n        if (options.tileCacheSize !== undefined) {\n            this.m_visibleTileSetOptions.tileCacheSize = options.tileCacheSize;\n        }\n\n        if (options.resourceComputationType !== undefined) {\n            this.m_visibleTileSetOptions.resourceComputationType = options.resourceComputationType;\n        }\n\n        if (options.quadTreeSearchDistanceUp !== undefined) {\n            this.m_visibleTileSetOptions.quadTreeSearchDistanceUp =\n                options.quadTreeSearchDistanceUp;\n        }\n\n        if (options.quadTreeSearchDistanceDown !== undefined) {\n            this.m_visibleTileSetOptions.quadTreeSearchDistanceDown =\n                options.quadTreeSearchDistanceDown;\n        }\n\n        if (options.enablePolarDataSource !== undefined) {\n            this.m_enablePolarDataSource = options.enablePolarDataSource;\n        }\n\n        this.m_pixelRatio = options.pixelRatio;\n        this.m_options.maxFps = this.m_options.maxFps ?? 0;\n\n        this.m_options.enableStatistics = this.m_options.enableStatistics === true;\n\n        this.m_languages = this.m_options.languages;\n        this.m_politicalView = this.m_options.politicalView;\n\n        this.handleRequestAnimationFrame = this.renderLoop.bind(this);\n\n        if (this.m_options.tileWrappingEnabled !== undefined) {\n            this.m_tileWrappingEnabled = this.m_options.tileWrappingEnabled;\n        }\n\n        // Initialization of the stats\n        this.setupStats(this.m_options.enableStatistics);\n\n        this.canvas.addEventListener(\"webglcontextlost\", this.onWebGLContextLost);\n        this.canvas.addEventListener(\"webglcontextrestored\", this.onWebGLContextRestored);\n\n        // Initialization of the renderer, enable backward compatibility with three.js <= 0.117\n        this.m_renderer = new ((THREE as any).WebGL1Renderer ?? THREE.WebGLRenderer)({\n            canvas: this.canvas,\n            context: this.m_options.context,\n            antialias: this.nativeWebglAntialiasEnabled,\n            alpha: this.m_options.alpha,\n            preserveDrawingBuffer: this.m_options.preserveDrawingBuffer === true,\n            powerPreference:\n                this.m_options.powerPreference === undefined\n                    ? MapViewPowerPreference.Default\n                    : this.m_options.powerPreference\n        });\n        this.m_renderer.autoClear = false;\n        this.m_renderer.debug.checkShaderErrors = !isProduction;\n\n        // This is detailed at https://threejs.org/docs/#api/renderers/WebGLRenderer.info\n        // When using several WebGLRenderer#render calls per frame, it is the only way to get\n        // correct rendering data from ThreeJS.\n        this.m_renderer.info.autoReset = false;\n\n        this.m_tileObjectRenderer = new TileObjectRenderer(this.m_env, this.m_renderer);\n        this.setupRenderer(this.m_tileObjectRenderer);\n\n        this.m_options.fovCalculation =\n            this.m_options.fovCalculation === undefined\n                ? DEFAULT_FOV_CALCULATION\n                : this.m_options.fovCalculation;\n        this.m_options.fovCalculation.fov = THREE.MathUtils.clamp(\n            this.m_options.fovCalculation!.fov,\n            MIN_FOV_DEG,\n            MAX_FOV_DEG\n        );\n        // Initialization of mCamera and mVisibleTiles\n        const { width, height } = this.getCanvasClientSize();\n        const aspect = width / height;\n        this.m_camera = new THREE.PerspectiveCamera(\n            this.m_options.fovCalculation.fov,\n            aspect,\n            DEFAULT_CAM_NEAR_PLANE,\n            DEFAULT_CAM_FAR_PLANE\n        );\n        this.m_camera.up.set(0, 0, 1);\n        this.setFovOnCamera(this.m_options.fovCalculation, height);\n        this.projection.projectPoint(this.m_targetGeoPos, this.m_targetWorldPos);\n        this.m_scene.add(this.m_camera); // ensure the camera is added to the scene.\n        this.m_screenProjector = new ScreenProjector(this.m_camera);\n\n        // Scheduler must be initialized before VisibleTileSet.\n        this.m_taskScheduler = new MapViewTaskScheduler(this.maxFps);\n        this.m_tileGeometryManager = new TileGeometryManager(this);\n\n        if (options.enableMixedLod !== undefined) {\n            this.m_enableMixedLod = options.enableMixedLod;\n        }\n        if (options.lodMinTilePixelSize !== undefined) {\n            this.m_lodMinTilePixelSize = options.lodMinTilePixelSize;\n        }\n        // this.m_visibleTiles is set in createVisibleTileSet, set it here again only to let tsc\n        // know the member is set in the constructor.\n        this.m_visibleTiles = this.createVisibleTileSet();\n        this.m_sceneEnvironment = new MapViewEnvironment(this, options);\n\n        // setup camera with initial position\n        this.setupCamera();\n\n        this.m_pickHandler = new PickHandler(\n            this,\n            this.m_rteCamera,\n            this.m_options.enablePickTechnique === true\n        );\n\n        this.m_movementDetector = new CameraMovementDetector(\n            this.m_options.movementThrottleTimeout,\n            () => this.movementStarted(),\n            () => this.movementFinished()\n        );\n\n        const mapPassAntialiasSettings = this.m_options.customAntialiasSettings;\n        this.mapRenderingManager = new MapRenderingManager(\n            width,\n            height,\n            this.m_options.dynamicPixelRatio,\n            mapPassAntialiasSettings\n        );\n\n        this.m_animatedExtrusionHandler = new AnimatedExtrusionHandler(this);\n\n        if (this.m_enablePolarDataSource) {\n            const styleSetName =\n                options.polarStyleSetName !== undefined\n                    ? options.polarStyleSetName\n                    : DEFAULT_POLAR_STYLE_SET_NAME;\n\n            this.m_polarDataSource = new PolarTileDataSource({\n                styleSetName,\n                geometryLevelOffset: options.polarGeometryLevelOffset\n            });\n\n            this.updatePolarDataSource();\n        }\n\n        this.m_taskScheduler.addEventListener(MapViewEventNames.Update, () => {\n            this.update();\n        });\n\n        if (options.throttlingEnabled !== undefined) {\n            this.m_taskScheduler.throttlingEnabled = options.throttlingEnabled;\n        }\n\n        this.m_themeManager = new MapViewThemeManager(this, this.m_uriResolver);\n\n        // will initialize with an empty theme and updated when theme is loaded and set\n        this.m_textElementsRenderer = this.createTextRenderer();\n\n        this.setTheme(getOptionValue(this.m_options.theme, MapViewDefaults.theme));\n\n        this.update();\n    }\n\n    /**\n     * @returns The lights configured by the theme, this is just a convenience method, because the\n     * lights can still be accessed by traversing the children of the [[scene]].\n     */\n    get lights(): THREE.Light[] {\n        return this.m_sceneEnvironment.lights;\n    }\n\n    get taskQueue(): TaskQueue {\n        return this.m_taskScheduler.taskQueue;\n    }\n\n    /**\n     * @returns Whether label rendering is enabled.\n     */\n    get renderLabels() {\n        return this.m_renderLabels;\n    }\n\n    /**\n     * Enables or disables rendering of labels.\n     * @param value - `true` to enable labels `false` to disable them.\n     */\n    set renderLabels(value: boolean) {\n        this.m_renderLabels = value;\n    }\n\n    /**\n     * @returns Whether adding of new labels during interaction is enabled.\n     */\n    get delayLabelsUntilMovementFinished() {\n        return this.textElementsRenderer.delayLabelsUntilMovementFinished;\n    }\n\n    /**\n     * Enables or disables adding of  new labels during interaction. Has no influence on already\n     * placed labels\n     * @param value - `true` to enable adding `false` to disable them.\n     */\n    set delayLabelsUntilMovementFinished(value: boolean) {\n        this.textElementsRenderer.delayLabelsUntilMovementFinished = value;\n    }\n\n    /**\n     * @hidden\n     * The {@link TextElementsRenderer} select the visible {@link TextElement}s and renders them.\n     */\n    get textElementsRenderer(): TextElementsRenderer {\n        return this.m_textElementsRenderer;\n    }\n\n    /**\n     * @hidden\n     * The {@link CameraMovementDetector} detects camera movements. Made available for performance\n     * measurements.\n     */\n    get cameraMovementDetector(): CameraMovementDetector {\n        return this.m_movementDetector;\n    }\n\n    /**\n     * The {@link AnimatedExtrusionHandler} controls animated extrusion effect\n     * of the extruded objects in the {@link Tile}\n     */\n    get animatedExtrusionHandler(): AnimatedExtrusionHandler {\n        return this.m_animatedExtrusionHandler;\n    }\n\n    /**\n     * The [[TileGeometryManager]] manages geometry during loading and handles hiding geometry of\n     * specified [[GeometryKind]]s.\n     * @deprecated\n     */\n    get tileGeometryManager(): TileGeometryManager | undefined {\n        return this.m_tileGeometryManager;\n    }\n\n    get enableMixedLod(): boolean | undefined {\n        return this.m_enableMixedLod;\n    }\n\n    set enableMixedLod(enableMixedLod: boolean | undefined) {\n        // Skip unnecessary update\n        if (this.m_enableMixedLod === enableMixedLod) {\n            return;\n        }\n\n        this.m_enableMixedLod = enableMixedLod;\n        this.createVisibleTileSet();\n        this.update();\n    }\n\n    get tileWrappingEnabled(): boolean {\n        return this.m_tileWrappingEnabled;\n    }\n\n    set tileWrappingEnabled(enabled: boolean) {\n        if (this.projection.type === ProjectionType.Spherical) {\n            logger.warn(\"Setting this with spherical projection has no affect. Was this intended?\");\n            return;\n        }\n        if (enabled !== this.m_tileWrappingEnabled) {\n            this.m_tileWrappingEnabled = enabled;\n            this.createVisibleTileSet();\n        }\n        this.update();\n    }\n\n    /**\n     * Disposes this `MapView`.\n     * @override\n     *\n     * @param freeContext - `true` to force ThreeJS to loose the context. Supply `false` to keep\n     * the context for further use.\n     *\n     * @remarks\n     * This function cleans the resources that are managed manually including those that exist in\n     * shared caches.\n     *\n     * Note: This function does not try to clean objects that can be disposed off easily by\n     * TypeScript's garbage collecting mechanism. Consequently, if you need to perform a full\n     * cleanup, you must ensure that all references to this `MapView` are removed.\n     */\n    dispose(freeContext = true) {\n        // Enforce listeners that we are about to dispose.\n        this.DISPOSE_EVENT.time = Date.now();\n        this.dispatchEvent(this.DISPOSE_EVENT);\n\n        this.m_disposed = true;\n\n        if (this.m_movementFinishedUpdateTimerId) {\n            clearTimeout(this.m_movementFinishedUpdateTimerId);\n            this.m_movementFinishedUpdateTimerId = undefined;\n        }\n\n        if (this.m_animationFrameHandle !== undefined) {\n            cancelAnimationFrame(this.m_animationFrameHandle);\n            this.m_animationFrameHandle = undefined;\n        }\n\n        this.canvas.removeEventListener(\"webglcontextlost\", this.onWebGLContextLost);\n        this.canvas.removeEventListener(\"webglcontextrestored\", this.onWebGLContextRestored);\n\n        for (const dataSource of this.m_tileDataSources) {\n            dataSource.dispose();\n        }\n        this.m_visibleTiles.clearTileCache();\n        this.m_textElementsRenderer.clearRenderStates();\n        this.m_renderer.dispose();\n\n        if (freeContext) {\n            // See for a discussion of using this call to force freeing the context:\n            //   https://github.com/mrdoob/three.js/pull/17588\n            // The patch to call forceContextLoss() upon WebGLRenderer.dispose() had been merged,\n            // but has been reverted later:\n            //   https://github.com/mrdoob/three.js/pull/19022\n            this.m_renderer.forceContextLoss();\n        }\n\n        this.m_themeManager.dispose();\n        this.m_tileGeometryManager.clear();\n\n        this.m_movementDetector.dispose();\n\n        // Destroy the facade if the there are no workers active anymore.\n        ConcurrentDecoderFacade.destroyIfTerminated();\n        ConcurrentTilerFacade.destroyIfTerminated();\n\n        this.m_taskScheduler.clearQueuedTasks();\n\n        // Remove all event handlers.\n        super.dispose();\n    }\n\n    /**\n     * Is `true` if dispose() as been called on `MapView`.\n     */\n    get disposed(): boolean {\n        return this.m_disposed;\n    }\n\n    /**\n     * The way the cache usage is computed, either based on size in MB (mega bytes) or in number of\n     * tiles.\n     */\n    get resourceComputationType(): ResourceComputationType {\n        return this.m_visibleTiles.resourceComputationType;\n    }\n\n    set resourceComputationType(value: ResourceComputationType) {\n        this.m_visibleTiles.resourceComputationType = value;\n    }\n\n    /**\n     * Returns the cache size.\n     */\n    getCacheSize(): number {\n        return this.m_visibleTiles.getDataSourceCacheSize();\n    }\n\n    /**\n     * Sets the cache size in number of tiles.\n     *\n     * @param size - The cache size in tiles.\n     * @param numVisibleTiles - The number of tiles visible, which is size/2 by default.\n     */\n    setCacheSize(size: number, numVisibleTiles?: number): void {\n        this.m_visibleTiles.setDataSourceCacheSize(size);\n        numVisibleTiles = numVisibleTiles !== undefined ? numVisibleTiles : size / 2;\n        this.m_visibleTiles.setNumberOfVisibleTiles(Math.floor(numVisibleTiles));\n        this.m_themeManager.updateCache();\n        this.m_textElementsRenderer.invalidateCache();\n        this.update();\n    }\n\n    /**\n     * Specifies whether extended frustum culling is enabled or disabled.\n     */\n    get extendedFrustumCulling(): boolean {\n        return this.m_options.extendedFrustumCulling !== undefined\n            ? this.m_visibleTileSetOptions.extendedFrustumCulling\n            : true;\n    }\n\n    /**\n     * Enable of disable extended frustum culling.\n     */\n    set extendedFrustumCulling(value: boolean) {\n        this.m_visibleTileSetOptions.extendedFrustumCulling = value;\n    }\n\n    /**\n     * Returns the status of frustum culling after each update.\n     */\n    get lockVisibleTileSet(): boolean {\n        return this.m_visibleTileSetLock;\n    }\n\n    /**\n     * Enable of disable frustum culling after each update.\n     */\n    set lockVisibleTileSet(value: boolean) {\n        this.m_visibleTileSetLock = value;\n    }\n\n    /**\n     * Gets the optional camera used to render the scene.\n     */\n    get pointOfView(): THREE.PerspectiveCamera | undefined {\n        return this.m_pointOfView;\n    }\n\n    /**\n     * Sets the optional camera used to render the scene.\n     */\n    set pointOfView(pointOfView: THREE.PerspectiveCamera | undefined) {\n        this.m_pointOfView = pointOfView;\n        this.update();\n    }\n\n    /**\n     * Loads a post effects definition file.\n     *\n     * @param postEffectsFile - File URL describing the post effects.\n     */\n    loadPostEffects(postEffectsFile: string) {\n        fetch(postEffectsFile)\n            .then(response => response.json())\n            .then((postEffects: PostEffects) => {\n                this.m_postEffects = postEffects;\n                this.setPostEffects();\n            });\n    }\n\n    /**\n     * The abstraction of the {@link MapRenderingManager} API for post effects.\n     */\n    get postEffects(): PostEffects | undefined {\n        return this.m_postEffects;\n    }\n\n    set postEffects(postEffects: PostEffects | undefined) {\n        this.m_postEffects = postEffects;\n        this.setPostEffects();\n    }\n\n    /**\n     * Gets the current `Theme` used by this `MapView` to style map elements.\n     * @deprecated\n     */\n    get theme(): Theme {\n        return this.m_themeManager.theme;\n    }\n\n    /**\n     * Changes the `Theme` used by this `MapView` to style map elements.\n     * @deprecated use MapView.setTheme instead\n     */\n    set theme(theme: Theme) {\n        this.setTheme(theme);\n    }\n\n    /**\n     * Changes the `Theme`used by this `MapView`to style map elements.\n     */\n    async setTheme(theme: Theme | FlatTheme | string): Promise<Theme> {\n        const newTheme = await this.m_themeManager.setTheme(theme);\n\n        this.THEME_LOADED_EVENT.time = Date.now();\n        this.dispatchEvent(this.THEME_LOADED_EVENT);\n        this.update();\n        return newTheme;\n    }\n\n    /**\n     * Returns the currently set `Theme` as a `Promise` as it might be still loading/updating.\n     */\n    async getTheme(): Promise<Theme> {\n        return await this.m_themeManager.getTheme();\n    }\n\n    /**\n     * {@link @here/harp-utils#UriResolver} used to resolve application/deployment\n     * specific `URI`s into actual `URLs` that can be loaded with `fetch`.\n     */\n    get uriResolver(): UriResolver | undefined {\n        return this.m_uriResolver;\n    }\n\n    /**\n     * Gets the value of the forced custom camera aspect.\n     * Every time a frame is rendered, `MapView` resets the camera aspect.\n     *\n     * You can disable this behavior by setting the value to `undefined`.\n     */\n    get forceCameraAspect(): number | undefined {\n        return this.m_forceCameraAspect;\n    }\n\n    /**\n     * Sets the custom forced camera aspect ratio to use while rendering.\n     */\n    set forceCameraAspect(aspect: number | undefined) {\n        this.m_forceCameraAspect = aspect;\n    }\n\n    /**\n     * Lists the ISO 639-1 language codes for DataSources to use.\n     */\n    get languages(): string[] | undefined {\n        return this.m_languages;\n    }\n\n    /**\n     * Sets the list of ISO 639-1 language codes for DataSources to use.\n     */\n    set languages(languages: string[] | undefined) {\n        this.m_languages = languages;\n        this.m_tileDataSources.forEach((dataSource: DataSource) => {\n            dataSource.setLanguages(this.m_languages);\n        });\n        this.update();\n    }\n\n    /**\n     * Get currently presented political point of view - the country code.\n     *\n     * @note Country code is stored in lower-case ISO 3166-1 alpha-2 standard.\n     * @return Country code or undefined if default\n     * (majorly accepted) point of view is used.\n     */\n    get politicalView(): string | undefined {\n        return this.m_politicalView;\n    }\n\n    /**\n     * Set the political view (country code) to be used when rendering disputed features (borders).\n     *\n     * @note Country code should be encoded in lower-case ISO 3166-1 alpha-2 standard.\n     * @param pov - The code of the country which point of view should be presented,\n     * if `undefined` or empty string is set then \"defacto\" or most widely accepted point of view\n     * will be presented.\n     */\n    set politicalView(pov: string | undefined) {\n        if (this.m_politicalView === pov) {\n            return;\n        }\n        this.m_politicalView = pov;\n        this.m_tileDataSources.forEach((dataSource: DataSource) => {\n            dataSource.setPoliticalView(pov);\n        });\n    }\n\n    get copyrightInfo(): CopyrightInfo[] {\n        return this.m_copyrightInfo;\n    }\n\n    /**\n     * @hidden\n     * Disable all fading animations (for debugging and performance measurement). Defaults to\n     * `false`.\n     */\n    set disableFading(disable: boolean) {\n        this.m_textElementsRenderer.disableFading = disable;\n    }\n\n    get disableFading(): boolean {\n        return this.m_textElementsRenderer.disableFading;\n    }\n\n    /**\n     * @hidden\n     * Return current frame number.\n     */\n    get frameNumber(): number {\n        return this.m_frameNumber;\n    }\n\n    /**\n     * @hidden\n     * Reset the frame number to 0.\n     */\n    resetFrameNumber() {\n        this.m_frameNumber = 0;\n        this.m_previousFrameTimeStamp = undefined;\n    }\n\n    /**\n     * Adds an event listener. There are various events that are sent before or after a new frame\n     * is rendered.\n     *\n     * @see [[MapViewEventNames]].\n     *\n     * @example\n     * ```TypeScript\n     * let frameCount = 0;\n     * mapView.addEventListener(MapViewEventNames.Render, () => {\n     *     ++frameCount;\n     * });\n     * ```\n     *\n     * @param type - One of the [[MapViewEventNames]] strings.\n     * @param listener - The callback invoked when the `MapView` needs to render a new frame.\n     */\n    addEventListener(type: MapViewEventNames, listener: (event: RenderEvent) => void): void;\n\n    // overrides with THREE.js base classes are not recognized by tslint.\n    addEventListener(type: string, listener: any): void {\n        super.addEventListener(type, listener);\n    }\n\n    /**\n     * Removes an event listener. There are various events that are sent before or after a new frame\n     * is rendered.\n     *\n     * @see [[MapViewEventNames]].\n     *\n     * @example\n     * ```TypeScript\n     * mapView.removeEventListener(MapViewEventNames.Render, listener);\n     * ```\n     *\n     * @param type - One of the [[MapViewEventNames]] strings.\n     * @param listener - The callback invoked when the `MapView` needs to render a new frame.\n     */\n    removeEventListener(type: MapViewEventNames, listener?: (event: RenderEvent) => void): void;\n\n    // overrides with THREE.js base classes are not recognized by tslint.\n    removeEventListener(type: string, listener?: any): void {\n        super.removeEventListener(type, listener);\n    }\n\n    /**\n     * The HTML canvas element used by this `MapView`.\n     */\n    get canvas(): HTMLCanvasElement {\n        return this.m_options.canvas;\n    }\n\n    /**\n     * The HTML canvas element used by this `MapView`.\n     */\n    get collisionDebugCanvas(): HTMLCanvasElement | undefined {\n        return this.m_collisionDebugCanvas;\n    }\n\n    /**\n     * The THREE.js scene used by this `MapView`.\n     */\n    get scene(): THREE.Scene {\n        return this.m_scene;\n    }\n\n    /**\n     * The THREE.js overlay scene\n     */\n    get overlayScene(): THREE.Scene {\n        return this.m_overlayScene;\n    }\n\n    /**\n     * The MapViewEnvironment used by this `MapView`.\n     * @internal\n     */\n    get sceneEnvironment(): MapViewEnvironment {\n        return this.m_sceneEnvironment;\n    }\n\n    /**\n     * The THREE.js camera used by this `MapView` to render the main scene.\n     *\n     * @remarks\n     * When modifying the camera all derived properties like:\n     * - {@link MapView.target}\n     * - {@link MapView.zoomLevel}\n     * - {@link MapView.tilt}\n     * - {@link MapView.heading}\n     * could change.\n     * These properties are cached internally and will only be updated in the next animation frame.\n     * FIXME: Unfortunately THREE.js is not dispatching any events when camera properties change\n     * so we should have an API for enforcing update of cached values.\n     */\n    get camera(): THREE.PerspectiveCamera {\n        return this.m_camera;\n    }\n\n    /**\n     * The THREE.js `WebGLRenderer` used by this scene.\n     */\n    get renderer(): THREE.WebGLRenderer {\n        return this.m_renderer;\n    }\n\n    /**\n     * The color used to clear the view.\n     */\n    get clearColor() {\n        const rendererClearColor = this.m_renderer.getClearColor(cache.color);\n        return rendererClearColor !== undefined ? rendererClearColor.getHex() : 0;\n    }\n\n    /**\n     * The color used to clear the view.\n     */\n    set clearColor(color: number) {\n        this.m_renderer.setClearColor(color);\n    }\n\n    /**\n     * The alpha used to clear the view.\n     */\n    get clearAlpha() {\n        const rendererClearAlpha = this.m_renderer.getClearAlpha();\n        return rendererClearAlpha !== undefined ? rendererClearAlpha : 0;\n    }\n\n    /**\n     * The alpha used to clear the view.\n     */\n    set clearAlpha(alpha: number) {\n        this.m_renderer.setClearAlpha(alpha);\n    }\n\n    /**\n     * The projection used to project geo coordinates to world coordinates.\n     */\n    get projection(): Projection {\n        return this.m_visibleTileSetOptions.projection;\n    }\n\n    /**\n     * Changes the projection at run time.\n     *\n     * @param projection - The {@link @here/harp-geoutils#Projection} instance to use.\n     */\n    set projection(projection: Projection) {\n        // Remember tilt and heading before setting the projection.\n        const tilt = this.tilt;\n        const heading = this.heading;\n\n        this.m_visibleTileSetOptions.projection = projection;\n        this.updatePolarDataSource();\n        this.clearTileCache();\n        this.textElementsRenderer.clearRenderStates();\n        this.m_visibleTiles = this.createVisibleTileSet();\n        // Set geo max bounds to compute world bounds with new projection.\n        this.geoMaxBounds = this.geoMaxBounds;\n\n        this.lookAtImpl({ tilt, heading });\n    }\n\n    /**\n     * Get camera clipping planes evaluator used.\n     */\n    get clipPlanesEvaluator(): ClipPlanesEvaluator {\n        return this.m_visibleTileSetOptions.clipPlanesEvaluator;\n    }\n\n    /**\n     * Changes the clip planes evaluator at run time.\n     */\n    set clipPlanesEvaluator(clipPlanesEvaluator: ClipPlanesEvaluator) {\n        this.m_visibleTileSetOptions.clipPlanesEvaluator = clipPlanesEvaluator;\n    }\n\n    /**\n     * The distance (in pixels) between the screen and the camera.\n     * @deprecated Use {@link CameraUtils.getFocalLength}\n     */\n    get focalLength(): number {\n        const focalLength = CameraUtils.getFocalLength(this.m_camera) ?? 0;\n        return focalLength;\n    }\n\n    /**\n     * Get geo coordinates of camera focus (target) point.\n     *\n     * @remarks\n     * This point is not necessarily on the ground, i.e.:\n     *  - if the tilt is high and projection is {@link @here/harp-geoutils#sphereProjection}`\n     *  - if the camera was modified directly and is not pointing to the ground.\n     * In any case the projection of the target point will be in the center of the screen.\n     *\n     * @returns geo coordinates of the camera focus point.\n     */\n    get target(): GeoCoordinates {\n        return this.m_targetGeoPos;\n    }\n\n    /** @internal\n     * Get world coordinates of camera focus point.\n     *\n     * @remarks\n     * @note The focus point coordinates are updated with each camera update so you don't need\n     * to re-calculate it, although if the camera started looking to the void, the last focus\n     * point is stored.\n     *\n     * @returns world coordinates of the camera focus point.\n     */\n    get worldTarget(): THREE.Vector3 {\n        return this.m_targetWorldPos;\n    }\n\n    /** @internal\n     * Get distance from camera to the point of focus in world units.\n     *\n     * @note If camera does not point to any ground anymore the last focus point distance is\n     * then returned.\n     *\n     * @returns Last known focus point distance.\n     */\n    get targetDistance(): number {\n        return this.m_targetDistance;\n    }\n\n    /**\n     * Get object describing frustum planes distances and min/max visibility range for actual\n     * camera setup.\n     *\n     * @remarks\n     * Near and far plane distance are self explanatory while minimum and maximum visibility range\n     * describes the extreme near/far planes distances that may be achieved with current camera\n     * settings, meaning at current zoom level (ground distance) and any possible orientation.\n     * @note Visibility is directly related to camera [[ClipPlaneEvaluator]] used and determines\n     * the maximum possible distance of camera far clipping plane regardless of tilt, but may change\n     * whenever zoom level changes. Distance is measured in world units which may be approximately\n     * equal to meters, but this depends on the distortion related to projection type used.\n     * @internal\n     */\n    get viewRanges(): ViewRanges {\n        return this.m_viewRanges;\n    }\n\n    /**\n     * The position in geo coordinates of the center of the scene.\n     * @internal\n     */\n    get geoCenter(): GeoCoordinates {\n        return this.projection.unprojectPoint(this.m_camera.position).normalized();\n    }\n\n    /**\n     * The position in geo coordinates of the center of the scene.\n     *\n     * @remarks\n     * Longitude values outside of -180 and +180 are acceptable.\n     */\n    set geoCenter(geoCenter: GeoCoordinates) {\n        if (geoCenter.altitude !== undefined) {\n            this.projection.projectPoint(geoCenter, this.m_camera.position);\n        } else {\n            // Preserve the current altitude\n            const altitude = this.geoCenter.altitude;\n\n            this.projection.projectPoint(\n                new GeoCoordinates(geoCenter.latitude, geoCenter.longitude, altitude),\n                this.m_camera.position\n            );\n        }\n\n        this.update();\n    }\n\n    /**\n     * The node in this MapView's scene containing the user {@link MapAnchor}s.\n     *\n     * @remarks\n     * All (first level) children of this node will be positioned in world space according to the\n     * [[MapAnchor.geoPosition]].\n     * Deeper level children can be used to position custom objects relative to the anchor node.\n     */\n    get mapAnchors(): MapAnchors {\n        return this.m_mapAnchors;\n    }\n\n    /**\n     * The position in world coordinates of the center of the scene.\n     */\n    get worldCenter(): THREE.Vector3 {\n        return this.m_camera.position;\n    }\n\n    /**\n     * Get the [[PickHandler]] for this `mapView`.\n     */\n    get pickHandler(): PickHandler {\n        return this.m_pickHandler;\n    }\n\n    /**\n     * @internal\n     * Get the {@link ImageCache} that belongs to this `MapView`.\n     *\n     * Images stored in this cache are primarily used for POIs (icons) and they are used with the\n     * current theme. Although images can be explicitly added and removed from the cache, it is\n     * advised not to remove images from this cache. If an image that is part of client code\n     * should be removed at any point other than changing the theme, the {@link useImageCache}\n     * should be used instead.\n     */\n    get imageCache(): MapViewImageCache {\n        return this.m_themeManager.imageCache;\n    }\n\n    /**\n     * Get the {@link ImageCache} for user images that belongs to this `MapView`.\n     *\n     * Images added to this cache can be removed if no longer required.\n     */\n    get userImageCache(): MapViewImageCache {\n        return this.m_userImageCache;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     * Get the {@link PoiManager} that belongs to this `MapView`.\n     */\n    get poiManager(): PoiManager {\n        return this.m_poiManager;\n    }\n\n    /**\n     * @hidden\n     * Get the array of {@link PoiTableManager} that belongs to this `MapView`.\n     */\n    get poiTableManager(): PoiTableManager {\n        return this.m_poiTableManager;\n    }\n\n    /**\n     * The minimum camera height in meters.\n     */\n    get minCameraHeight(): number {\n        return this.m_minCameraHeight;\n    }\n\n    /**\n     * The minimum zoom level.\n     */\n    get minZoomLevel(): number {\n        return this.m_minZoomLevel;\n    }\n\n    /**\n     * The minimum zoom level.\n     */\n    set minZoomLevel(zoomLevel: number) {\n        this.m_minZoomLevel = zoomLevel;\n        this.update();\n    }\n\n    /**\n     * The maximum zoom level. Default is 14.\n     */\n    get maxZoomLevel(): number {\n        return this.m_maxZoomLevel;\n    }\n\n    /**\n     * The maximum zoom level.\n     */\n    set maxZoomLevel(zoomLevel: number) {\n        this.m_maxZoomLevel = zoomLevel;\n        this.update();\n    }\n\n    /**\n     * The view's maximum bounds in geo coordinates if any.\n     */\n    get geoMaxBounds(): GeoBox | undefined {\n        return this.m_geoMaxBounds;\n    }\n\n    /**\n     * Sets or clears the view's maximum bounds in geo coordinates.\n     *\n     * @remarks\n     * If set, the view will be\n     * constrained to the given geo bounds.\n     */\n    set geoMaxBounds(bounds: GeoBox | undefined) {\n        this.m_geoMaxBounds = bounds;\n        this.m_worldMaxBounds = this.m_geoMaxBounds\n            ? this.projection.projectBox(\n                  this.m_geoMaxBounds,\n                  this.projection.type === ProjectionType.Planar\n                      ? new THREE.Box3()\n                      : new OrientedBox3()\n              )\n            : undefined;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     * The view's maximum bounds in world coordinates if any.\n     */\n    get worldMaxBounds(): THREE.Box3 | OrientedBox3 | undefined {\n        return this.m_worldMaxBounds;\n    }\n\n    /**\n     * Returns the zoom level for the given camera setup.\n     */\n    get zoomLevel(): number {\n        return this.m_zoomLevel;\n    }\n\n    set zoomLevel(zoomLevel: number) {\n        this.lookAtImpl({ zoomLevel });\n    }\n\n    /**\n     * Returns tilt angle in degrees.\n     */\n    get tilt(): number {\n        return THREE.MathUtils.radToDeg(this.m_pitch);\n    }\n\n    /**\n     * Set the tilt angle of the map.\n     * @param tilt -: New tilt angle in degrees.\n     */\n    set tilt(tilt: number) {\n        this.lookAtImpl({ tilt });\n    }\n\n    /**\n     * Returns heading angle in degrees.\n     */\n    get heading(): number {\n        return -THREE.MathUtils.radToDeg(this.m_yaw);\n    }\n\n    /**\n     * Set the heading angle of the map.\n     * @param heading -: New heading angle in degrees.\n     */\n    set heading(heading: number) {\n        this.lookAtImpl({ heading });\n    }\n\n    /**\n     * Environment used to evaluate dynamic scene expressions.\n     */\n    get env(): Env {\n        return this.m_env;\n    }\n\n    /**\n     * Returns the storage level for the given camera setup.\n     * @remarks\n     * Actual storage level of the rendered data also depends\n     * on {@link DataSource.storageLevelOffset}.\n     */\n    get storageLevel(): number {\n        return THREE.MathUtils.clamp(\n            Math.floor(this.m_zoomLevel),\n            this.m_minZoomLevel,\n            this.m_maxZoomLevel\n        );\n    }\n\n    /**\n     * Returns height of the viewport in pixels.\n     */\n    get viewportHeight(): number {\n        return this.canvas.height;\n    }\n\n    /**\n     * Returns `true` if the native WebGL antialiasing is enabled.\n     *\n     * @default `true` for `pixelRatio` < `2.0`, `false` otherwise.\n     */\n    get nativeWebglAntialiasEnabled(): boolean {\n        return this.m_options.enableNativeWebglAntialias === undefined\n            ? this.pixelRatio < 2.0\n            : this.m_options.enableNativeWebglAntialias;\n    }\n\n    /**\n     * Returns {@link DataSource}s displayed by this `MapView`.\n     */\n    get dataSources(): DataSource[] {\n        return this.m_tileDataSources;\n    }\n\n    /**\n     * Set's the way in which the fov is calculated on the map view.\n     *\n     * @remarks\n     * Note, for this to take visual effect, the map should be rendered\n     * after calling this function.\n     * @param fovCalculation - How the FOV is calculated.\n     */\n    setFovCalculation(fovCalculation: FovCalculation) {\n        this.m_options.fovCalculation = fovCalculation;\n        this.updateCameras();\n    }\n\n    /**\n     * Returns the unique {@link DataSource} matching the given name.\n     */\n    getDataSourceByName(dataSourceName: string): DataSource | undefined {\n        return this.m_tileDataSources.find(ds => ds.name === dataSourceName);\n    }\n\n    /**\n     * Returns the array of {@link DataSource}s referring to the same [[StyleSet]].\n     */\n    getDataSourcesByStyleSetName(styleSetName: string): DataSource[] {\n        return this.m_tileDataSources.filter(ds => ds.styleSetName === styleSetName);\n    }\n\n    /**\n     * Returns true if the specified {@link DataSource} is enabled.\n     */\n    isDataSourceEnabled(dataSource: DataSource): boolean {\n        return (\n            dataSource.enabled &&\n            dataSource.ready() &&\n            this.m_connectedDataSources.has(dataSource.name) &&\n            dataSource.isVisible(this.zoomLevel)\n        );\n    }\n\n    /**\n     * Adds a new {@link DataSource} to this `MapView`.\n     *\n     * @remarks\n     * `MapView` needs at least one {@link DataSource} to display something.\n     * @param dataSource - The data source.\n     */\n    async addDataSource(dataSource: DataSource): Promise<void> {\n        const twinDataSource = this.getDataSourceByName(dataSource.name);\n        if (twinDataSource !== undefined) {\n            throw new Error(\n                `A DataSource with the name \"${dataSource.name}\" already exists in this MapView.`\n            );\n        }\n\n        dataSource.attach(this);\n        dataSource.setEnableElevationOverlay(this.m_elevationProvider !== undefined);\n        const conflictingDataSource = this.m_tileDataSources.find(\n            ds => ds.addGroundPlane === true && !(ds instanceof BackgroundDataSource)\n        );\n        if (dataSource.addGroundPlane === true && conflictingDataSource !== undefined) {\n            // eslint-disable-next-line no-console\n            console.warn(\n                `The DataSources ${dataSource.name} and ${conflictingDataSource.name} both have a ground plane added, this will cause problems with the fallback logic, see HARP-14728 & HARP-15488.`\n            );\n        }\n        this.m_tileDataSources.push(dataSource);\n        this.m_sceneEnvironment?.updateBackgroundDataSource();\n\n        try {\n            await dataSource.connect();\n\n            const alreadyRemoved = !this.m_tileDataSources.includes(dataSource);\n            if (alreadyRemoved) {\n                return;\n            }\n            dataSource.addEventListener(MapViewEventNames.Update, () => {\n                this.update();\n            });\n\n            const theme = await this.getTheme();\n            dataSource.setLanguages(this.m_languages);\n\n            if (theme !== undefined && theme.styles !== undefined) {\n                await dataSource.setTheme(theme);\n            }\n\n            this.m_connectedDataSources.add(dataSource.name);\n\n            this.dispatchEvent({\n                type: MapViewEventNames.DataSourceConnect,\n                dataSourceName: dataSource.name\n            });\n\n            this.update();\n        } catch (error) {\n            // error is a string if a promise was rejected.\n            logger.error(\n                `Failed to connect to datasource ${dataSource.name}: ${\n                    (error as Error).message ?? error\n                }`\n            );\n\n            this.m_failedDataSources.add(dataSource.name);\n            this.dispatchEvent({\n                type: MapViewEventNames.DataSourceConnect,\n                dataSourceName: dataSource.name,\n                error\n            });\n        }\n    }\n\n    /**\n     * Removes {@link DataSource} from this `MapView`.\n     *\n     * @param dataSource - The data source to be removed\n     */\n    removeDataSource(dataSource: DataSource) {\n        const dsIndex = this.m_tileDataSources.indexOf(dataSource);\n        if (dsIndex === -1) {\n            return;\n        }\n        dataSource.detach(this);\n\n        this.m_visibleTiles.removeDataSource(dataSource);\n        this.m_tileDataSources.splice(dsIndex, 1);\n        this.m_connectedDataSources.delete(dataSource.name);\n        this.m_failedDataSources.delete(dataSource.name);\n\n        this.m_sceneEnvironment.updateBackgroundDataSource();\n\n        this.update();\n    }\n\n    /**\n     * Access the `VisibleTileSet` to get access to all current datasources and their visible tiles.\n     */\n    get visibleTileSet(): VisibleTileSet {\n        return this.m_visibleTiles;\n    }\n\n    /**\n     * Adds new overlay text elements to this `MapView`.\n     *\n     * @param textElements - Array of {@link TextElement} to be added.\n     */\n    addOverlayText(textElements: TextElement[]): void {\n        this.m_textElementsRenderer.addOverlayText(textElements);\n        this.update();\n    }\n\n    /**\n     * Adds new overlay text elements to this `MapView`.\n     *\n     * @param textElements - Array of {@link TextElement} to be added.\n     */\n    clearOverlayText(): void {\n        this.m_textElementsRenderer.clearOverlayText();\n    }\n\n    /**\n     * Adjusts the camera to look at a given geo coordinate with tilt and heading angles.\n     *\n     * @remarks\n     * #### Note on `target` and `bounds`\n     *\n     * If `bounds` are specified, `zoomLevel` and `distance` parameters are ignored and `lookAt`\n     * calculates best zoomLevel (and possibly target) to fit given bounds.\n     *\n     * Following table shows how relation between `bounds` and target.\n     *\n     * | `bounds`             | `target`    | actual `target`\n     * | ------               | ------      | --------\n     * | {@link @here/harp-geoutils#GeoBox}           | _defined_   | `params.target` is used\n     * | {@link @here/harp-geoutils#GeoBox}           | `undefined` | `bounds.center` is used as new `target`\n     * | {@link @here/harp-geoutils#GeoBoxExtentLike} | `undefined` | current `MapView.target` is used\n     * | {@link @here/harp-geoutils#GeoBoxExtentLike} | _defined_   | `params.target` is used\n     * | [[GeoCoordLike]][]   | `undefined` | new `target` is calculated as center of world box covering given points\n     * | [[GeoCoordLike]][]   | _defined_   | `params.target` is used and zoomLevel is adjusted to view all given geo points\n     *\n     * In each case, `lookAt` finds minimum `zoomLevel` that covers given extents or geo points.\n     *\n     * With flat projection, if `bounds` represents points on both sides of anti-meridian, and\n     * {@link MapViewOptions.tileWrappingEnabled} is used, `lookAt` will use this knowledge and find\n     * minimal view that may cover \"next\" or \"previous\" world.\n     *\n     * With sphere projection if `bounds` represents points on both sides of globe, best effort\n     * method is used to find best `target``.\n     *\n     * #### Examples\n     *\n     * ```typescript\n     * mapView.lookAt({heading: 90})\n     *     // look east retaining current `target`, `zoomLevel` and `tilt`\n     *\n     * mapView.lookAt({lat: 40.707, lng: -74.01})\n     *    // look at Manhattan, New York retaining other view params\n     *\n     * mapView.lookAt(bounds: { latitudeSpan: 10, longitudeSpan: 10})\n     *    // look at current `target`, but extending zoomLevel so we see 10 degrees of lat/long span\n     * ```\n     *\n     * @see More examples in [[LookAtExample]].\n     *\n     * @param params - {@link LookAtParams}\n     *\n     * {@labels WITH_PARAMS}\n     */\n    lookAt(params: Partial<LookAtParams>): void;\n\n    /**\n     * The method that sets the camera to the desired angle (`tiltDeg`) and `distance` (in meters)\n     * to the `target` location, from a certain heading (`headingAngle`).\n     *\n     * @remarks\n     * @param target - The location to look at.\n     * @param distance - The distance of the camera to the target in meters.\n     * @param tiltDeg - The camera tilt angle in degrees (0 is vertical), curbed below 89deg\n     *                @default 0\n     * @param headingDeg - The camera heading angle in degrees and clockwise (as opposed to yaw)\n     *                   @default 0\n     * starting north.\n     * @deprecated Use lookAt version with {@link LookAtParams} object parameter.\n     */\n    lookAt(target: GeoCoordLike, distance: number, tiltDeg?: number, headingDeg?: number): void;\n\n    lookAt(\n        targetOrParams: GeoCoordLike | Partial<LookAtParams>,\n        distance?: number,\n        tiltDeg?: number,\n        headingDeg?: number\n    ): void {\n        if (isGeoCoordinatesLike(targetOrParams)) {\n            const zoomLevel =\n                distance !== undefined\n                    ? MapViewUtils.calculateZoomLevelFromDistance(this, distance)\n                    : undefined;\n\n            const params: Partial<LookAtParams> = {\n                target: targetOrParams,\n                zoomLevel,\n                tilt: tiltDeg,\n                heading: headingDeg\n            };\n            this.lookAtImpl(params);\n        } else if (typeof targetOrParams === \"object\") {\n            this.lookAtImpl(targetOrParams as Partial<LookAtParams>);\n        }\n    }\n\n    /**\n     * Moves the camera to the specified {@link @here/harp-geoutils#GeoCoordinates},\n     * sets the desired `zoomLevel` and\n     * adjusts the yaw and pitch.\n     *\n     * @remarks\n     * The pitch of the camera is\n     * always curbed so that the camera cannot\n     * look above the horizon. This paradigm is necessary\n     * in {@link @here/harp-map-controls#MapControls}, where the center of\n     * the screen is used for the orbiting interaction (3 fingers / right mouse button).\n     *\n     * @param geoPos - Geolocation to move the camera to.\n     * @param zoomLevel - Desired zoom level.\n     * @param yawDeg - Camera yaw in degrees, counter-clockwise (as opposed to heading), starting\n     * north.\n     * @param pitchDeg - Camera pitch in degrees.\n     * @deprecated Use {@link (MapView.lookAt:WITH_PARAMS)} instead.\n     */\n    setCameraGeolocationAndZoom(\n        geoPos: GeoCoordinates,\n        zoomLevel: number,\n        yawDeg: number = 0,\n        pitchDeg: number = 0\n    ): void {\n        this.geoCenter = geoPos;\n        let limitedPitch = Math.min(MapViewUtils.MAX_TILT_DEG, pitchDeg);\n        if (this.projection.type === ProjectionType.Spherical) {\n            const maxPitchRadWithCurvature = Math.asin(\n                EarthConstants.EQUATORIAL_RADIUS /\n                    (MapViewUtils.calculateDistanceToGroundFromZoomLevel(this, zoomLevel) +\n                        EarthConstants.EQUATORIAL_RADIUS)\n            );\n            const maxPitchDegWithCurvature = THREE.MathUtils.radToDeg(maxPitchRadWithCurvature);\n            limitedPitch = Math.min(limitedPitch, maxPitchDegWithCurvature);\n        }\n        MapViewUtils.zoomOnTargetPosition(this, 0, 0, zoomLevel);\n        MapViewUtils.setRotation(this, yawDeg, limitedPitch);\n        this.update();\n    }\n\n    /**\n     * Updates the value of a dynamic property.\n     *\n     * @remarks\n     * Property names starting with a `$`-sign are reserved and any attempt to change their value\n     * will result in an error.\n     *\n     * Themes can access dynamic properties using the `Expr` operator `[\"dynamic-properties\"]`,\n     * for example:\n     *\n     *   `[\"get\", \"property name\", [\"dynamic-properties\"]]`\n     *\n     * @param name - The name of the property.\n     * @param value - The value of the property.\n     */\n    setDynamicProperty(name: string, value: Value) {\n        if (name.startsWith(\"$\")) {\n            throw new Error(`failed to update the value of the dynamic property '${name}'`);\n        }\n        this.m_env.entries[name] = value;\n        this.update();\n    }\n\n    /**\n     * Removes the given dynamic property from this {@link MapView}.\n     *\n     * @remarks\n     * Property names starting with a `$`-sign are reserved and any attempt to change their value\n     * will result in an error.\n     *\n     * @param name - The name of the property to remove.\n     */\n    removeDynamicProperty(name: string) {\n        if (name.startsWith(\"$\")) {\n            throw new Error(`failed to remove the dynamic property '${name}'`);\n        }\n        delete this.m_env.entries[name];\n        this.update();\n    }\n\n    /**\n     * Returns `true` if this `MapView` is constantly redrawing the scene.\n     */\n    get animating(): boolean {\n        return this.m_animationCount > 0;\n    }\n\n    /**\n     * Begin animating the scene.\n     */\n    beginAnimation() {\n        if (this.m_animationCount++ === 0) {\n            this.update();\n            this.ANIMATION_STARTED_EVENT.time = Date.now();\n            this.dispatchEvent(this.ANIMATION_STARTED_EVENT);\n        }\n    }\n\n    /**\n     * Stop animating the scene.\n     */\n    endAnimation() {\n        if (this.m_animationCount > 0) {\n            --this.m_animationCount;\n        }\n\n        if (this.m_animationCount === 0) {\n            this.ANIMATION_FINISHED_EVENT.time = Date.now();\n            this.dispatchEvent(this.ANIMATION_FINISHED_EVENT);\n        }\n    }\n\n    /**\n     * Returns `true` if the camera moved in the last frame.\n     */\n    get cameraIsMoving() {\n        return this.m_movementDetector.cameraIsMoving;\n    }\n\n    /**\n     * Returns `true` if the current frame will immediately be followed by another frame.\n     * @deprecated This should only be used for the internal handling of the render loop,\n     * if you use your own RenderLoop use {@link MapView::renderSync} in combination with\n     * {@link MapViewEventNames.FrameComplete}\n     **/\n    get isDynamicFrame(): boolean {\n        return (\n            !this.m_visibleTiles.allVisibleTilesLoaded ||\n            this.m_themeManager.isUpdating() ||\n            this.cameraIsMoving ||\n            this.animating ||\n            this.m_updatePending ||\n            this.m_animatedExtrusionHandler.isAnimating ||\n            this.m_textElementsRenderer.isUpdatePending ||\n            this.m_textElementsRenderer.loading\n        );\n    }\n\n    /**\n     * Returns the ratio between a pixel and a world unit for the current camera (in the center of\n     * the camera projection).\n     */\n    get pixelToWorld(): number {\n        if (this.m_pixelToWorld === undefined) {\n            // At this point fov calculation should be always defined.\n            assert(this.m_options.fovCalculation !== undefined);\n            // NOTE: Look at distance is the distance to camera focus (and pivot) point.\n            // In screen space this point is located in the center of canvas.\n            // Given that zoom level is not modified (clamped by camera pitch), the following\n            // formulas are all equivalent:\n            // lookAtDistance = (EQUATORIAL_CIRCUMFERENCE * focalLength) / (256 * zoomLevel^2);\n            // lookAtDistance = abs(cameraPos.z) / cos(cameraPitch);\n            // Here we may use precalculated target distance (once pre frame):\n            const lookAtDistance = this.m_targetDistance;\n            const focalLength = CameraUtils.getFocalLength(this.m_camera);\n            assert(focalLength !== undefined);\n\n            // Find world space object size that corresponds to one pixel on screen.\n            this.m_pixelToWorld = CameraUtils.convertScreenToWorldSize(\n                focalLength!,\n                lookAtDistance,\n                1\n            );\n        }\n        return this.m_pixelToWorld;\n    }\n\n    /**\n     * Returns the ratio between a world and a pixel unit for the current camera (in the center of\n     * the camera projection).\n     */\n    get worldToPixel() {\n        return 1.0 / this.pixelToWorld;\n    }\n\n    get pixelRatio(): number {\n        if (this.m_pixelRatio !== undefined) {\n            return this.m_pixelRatio;\n        }\n        return typeof window !== \"undefined\" && window.devicePixelRatio !== undefined\n            ? window.devicePixelRatio\n            : 1.0;\n    }\n\n    /**\n     * PixelRatio in the WebGlRenderer. May contain values > 1.0 for high resolution screens\n     * (HiDPI).\n     *\n     * @remarks\n     * A value of `undefined` will make the getter return `window.devicePixelRatio`, setting a value\n     * of `1.0` will disable the use of HiDPI on all devices.\n     *\n     * @note Since the current pixelRatio may have been used in some calculations (e.g. the icons)\n     * they may appear in the wrong size now. To ensure proper display of data, a call to\n     * `clearTileCache()` is required if the pixelRatio is changed after tiles have been loaded.\n     *\n     * @memberof MapView\n     */\n    set pixelRatio(pixelRatio: number) {\n        this.m_pixelRatio = pixelRatio;\n        if (this.renderer.getPixelRatio() !== this.pixelRatio) {\n            this.renderer.setPixelRatio(this.pixelRatio);\n        }\n    }\n\n    /**\n     * Maximum FPS (Frames Per Second).\n     *\n     * @remarks\n     * If VSync in enabled, the specified number may not be\n     * reached, but instead the next smaller number than `maxFps` that is equal to the refresh rate\n     * divided by an integer number.\n     *\n     * E.g.: If the monitors refresh rate is set to 60hz, and if `maxFps` is set to a value of `40`\n     * (60hz/1.5), the actual used FPS may be 30 (60hz/2). For displays that have a refresh rate of\n     * 60hz, good values for `maxFps` are 30, 20, 15, 12, 10, 6, 3 and 1. A value of `0` is ignored.\n     */\n    set maxFps(value: number) {\n        this.m_options.maxFps = value;\n        this.m_taskScheduler.maxFps = value;\n    }\n\n    get maxFps(): number {\n        //this cannot be undefined, as it is defaulting to 0 in the constructor\n        return this.m_options.maxFps as number;\n    }\n\n    /**\n     * PixelRatio ratio for rendering when the camera is moving or an animation is running.\n     *\n     * @remarks\n     * Useful when rendering on high resolution displays with low performance GPUs\n     * that may be fill-rate-limited.\n     *\n     * If a value is specified, a low resolution render pass is used to render the scene into a\n     * low resolution render target, before it is copied to the screen.\n     *\n     * A value of `undefined` disables the low res render pass. Values between 0.5 and\n     * `window.devicePixelRatio` can be tried to give  good results. The value should not be larger\n     * than `window.devicePixelRatio`.\n     *\n     * @note Since no anti-aliasing is applied during dynamic rendering with `dynamicPixelRatio`\n     * defined, visual artifacts may occur, especially with thin lines..\n     *\n     * @note The resolution of icons and text labels is not affected.\n     *\n     * @default `undefined`\n     */\n    set dynamicPixelRatio(ratio: number | undefined) {\n        this.mapRenderingManager.lowResPixelRatio = ratio;\n    }\n\n    get dynamicPixelRatio(): number | undefined {\n        return this.mapRenderingManager.lowResPixelRatio;\n    }\n\n    /**\n     * Returns the screen position of the given geo or world position.\n     *\n     * @param pos - The position as a {@link @here/harp-geoutils#GeoCoordLike} or\n     * {@link https://threejs.org/docs/#api/en/math/Vector3 | THREE.Vector3} world position.\n     * @returns The screen position in CSS/client coordinates (no pixel ratio applied) or\n     * `undefined`.\n     */\n    getScreenPosition(pos: GeoCoordLike | THREE.Vector3): THREE.Vector2 | undefined {\n        if (isVector3Like(pos)) {\n            cache.vector3[0].copy(pos);\n        } else {\n            this.projection.projectPoint(GeoCoordinates.fromObject(pos), cache.vector3[0]);\n        }\n        const p = this.m_screenProjector.project(cache.vector3[0]);\n        if (p !== undefined) {\n            const { width, height } = this.getCanvasClientSize();\n            p.x = p.x + width / 2;\n            p.y = height - (p.y + height / 2);\n        }\n        return p;\n    }\n\n    getWorldPositionAt(x: number, y: number, fallback: true): THREE.Vector3;\n    getWorldPositionAt(x: number, y: number, fallback?: boolean): THREE.Vector3 | null;\n\n    /**\n     * Returns the world space position from the given screen position.\n     *\n     * @remarks\n     * If `fallback !== true` the return value can be `null`, in case the camera has a high tilt\n     * and the given `(x, y)` value is not intersecting the ground plane.\n     * If `fallback === true` the return value will always exist but it might not be on the earth\n     * surface.\n     *\n     * @param x - The X position in css/client coordinates (without applied display ratio).\n     * @param y - The Y position in css/client coordinates (without applied display ratio).\n     * @param fallback - Whether to compute a fallback position if the earth surface is not hit.\n     */\n    getWorldPositionAt(x: number, y: number, fallback?: boolean): THREE.Vector3 | null {\n        this.m_raycaster.setFromCamera(this.getNormalizedScreenCoordinates(x, y), this.m_camera);\n        const worldPos =\n            this.projection.type === ProjectionType.Spherical\n                ? this.m_raycaster.ray.intersectSphere(this.m_sphere, cache.vector3[0])\n                : this.m_raycaster.ray.intersectPlane(this.m_plane, cache.vector3[0]);\n\n        if (worldPos === null && fallback === true) {\n            // Fall back to the far plane\n            const cosAlpha = this.m_camera\n                .getWorldDirection(cache.vector3[0])\n                .dot(this.m_raycaster.ray.direction);\n\n            return cache.vector3[0]\n                .copy(this.m_raycaster.ray.direction)\n                .multiplyScalar(this.m_camera.far / cosAlpha)\n                .add(this.m_camera.position);\n        }\n        return worldPos;\n    }\n\n    /**\n     * Same as {@link MapView.getGeoCoordinatesAt} but always returning a geo coordinate.\n     */\n    getGeoCoordinatesAt(x: number, y: number, fallback: true): GeoCoordinates;\n\n    /**\n     * Returns the {@link @here/harp-geoutils#GeoCoordinates} from the\n     * given screen position.\n     *\n     * @remarks\n     * If `fallback !== true` the return value can be `null`, in case the camera has a high tilt\n     * and the given `(x, y)` value is not intersecting the ground plane.\n     * If `fallback === true` the return value will always exist but it might not be on the earth\n     * surface.\n     * If {@link MapView.tileWrappingEnabled} is `true` the returned geo coordinates will have a\n     * longitude clamped to [-180,180] degrees.\n     * The returned geo coordinates are not normalized so that a map object placed at that position\n     * will be below the (x,y) screen coordinates, regardless which world repetition was on screen.\n     *\n     * @param x - The X position in css/client coordinates (without applied display ratio).\n     * @param y - The Y position in css/client coordinates (without applied display ratio).\n     * @param fallback - Whether to compute a fallback position if the earth surface is not hit.\n     * @returns Un-normalized geo coordinates\n     */\n    getGeoCoordinatesAt(x: number, y: number, fallback?: boolean): GeoCoordinates | null;\n\n    getGeoCoordinatesAt(x: number, y: number, fallback?: boolean): GeoCoordinates | null {\n        const worldPosition = this.getWorldPositionAt(x, y, fallback);\n        if (!worldPosition) {\n            return null;\n        }\n\n        const geoPos = this.projection.unprojectPoint(worldPosition);\n        if (!this.tileWrappingEnabled && this.projection.type === ProjectionType.Planar) {\n            // When the map is not wrapped we clamp the longitude\n            geoPos.longitude = THREE.MathUtils.clamp(geoPos.longitude, -180, 180);\n        }\n        return geoPos;\n    }\n\n    /**\n     * Returns the normalized screen coordinates from the given pixel position.\n     *\n     * @param x - The X position in css/client coordinates (without applied display ratio).\n     * @param y - The Y position in css/client coordinates (without applied display ratio).\n     */\n    getNormalizedScreenCoordinates(x: number, y: number): THREE.Vector3 {\n        // use clientWidth and clientHeight as it does not apply the pixelRatio and\n        // therefore supports also HiDPI devices\n        const { width, height } = this.getCanvasClientSize();\n        return new THREE.Vector3((x / width) * 2 - 1, -((y / height) * 2) + 1, 0);\n    }\n\n    /**\n     * Do a raycast on all objects in the scene. Useful for picking.\n     *\n     * @remarks\n     * Limited to objects that THREE.js can raycast, the solid lines\n     * that get their geometry in the shader cannot be tested\n     * for intersection.\n     *\n     * Note, if a {@link DataSource} adds an [[Object3D]]\n     * to a {@link Tile}, it will be only pickable once\n     * {@link MapView.render} has been called, this is because\n     * {@link MapView.render} method creates the\n     * internal three.js root [[Object3D]] which is used in the [[PickHandler]] internally.\n     * This method will not test for intersection custom objects added to the scene by for\n     * example calling directly the [[scene.add]] method from THREE.\n     *\n     * @param x - The X position in css/client coordinates (without applied display ratio).\n     * @param y - The Y position in css/client coordinates (without applied display ratio).\n     * @param parameters - The intersection test behaviour may be adjusted by providing an instance\n     * of {@link IntersectParams}.\n     * @returns The list of intersection results.\n     */\n    intersectMapObjects(x: number, y: number, parameters?: IntersectParams): PickResult[] {\n        return this.m_pickHandler.intersectMapObjects(x, y, parameters);\n    }\n\n    /**\n     * Resize the HTML canvas element and the THREE.js `WebGLRenderer`.\n     *\n     * @param width - The new width.\n     * @param height - The new height.\n     */\n    resize(width: number, height: number) {\n        this.m_renderer.setSize(width, height, false);\n        if (this.m_renderer.getPixelRatio() !== this.pixelRatio) {\n            this.m_renderer.setPixelRatio(this.pixelRatio);\n        }\n\n        if (this.mapRenderingManager !== undefined) {\n            this.mapRenderingManager.setSize(width, height);\n        }\n\n        if (this.collisionDebugCanvas !== undefined) {\n            this.collisionDebugCanvas.width = width;\n            this.collisionDebugCanvas.height = height;\n        }\n\n        this.updateCameras();\n        this.update();\n\n        this.dispatchEvent({\n            type: MapViewEventNames.Resize,\n            size: {\n                width,\n                height\n            }\n        });\n    }\n\n    /**\n     * Redraws scene immediately\n     *\n     * @remarks\n     * @note Before using this method, set `synchronousRendering` to `true`\n     * in the {@link MapViewOptions}\n     *\n     * @param frameStartTime - Optional timestamp for start of frame.\n     * Default: [[PerformanceTimer.now()]]\n     */\n    renderSync(frameStartTime?: number) {\n        if (frameStartTime === undefined) {\n            frameStartTime = PerformanceTimer.now();\n        }\n        this.render(frameStartTime);\n    }\n\n    /**\n     * Requests a redraw of the scene.\n     */\n    update() {\n        if (this.disposed) {\n            logger.warn(\"update(): MapView has been disposed of.\");\n            return;\n        }\n\n        this.dispatchEvent(this.UPDATE_EVENT);\n\n        // Skip if update is already in progress\n        if (this.m_updatePending) {\n            return;\n        }\n\n        // Set update flag\n        this.m_updatePending = true;\n\n        this.startRenderLoop();\n    }\n\n    /**\n     * Returns `true` if an update has already been requested, such that after a currently rendering\n     * frame, the next frame will be rendered immediately.\n     */\n    get updatePending(): boolean {\n        return this.m_updatePending;\n    }\n\n    /**\n     * Requests a redraw of the scene.\n     * @deprecated Use the [[update]] method instead.\n     */\n    requestUpdateIfNeeded() {\n        this.update();\n    }\n\n    /**\n     * Clear the tile cache.\n     *\n     * @remarks\n     * Remove the {@link Tile} objects created by cacheable\n     * {@link DataSource}s. If a {@link DataSource} name is\n     * provided, this method restricts the eviction the {@link DataSource} with the given name.\n     *\n     * @param dataSourceName - The name of the {@link DataSource}.\n     * @param filter Optional tile filter\n     */\n    clearTileCache(dataSourceName?: string, filter?: (tile: Tile) => boolean) {\n        if (this.m_visibleTiles === undefined) {\n            // This method is called in the shadowsEnabled function, which is initialized in the\n            // setupRenderer function,\n            return;\n        }\n        if (dataSourceName !== undefined) {\n            const dataSource = this.getDataSourceByName(dataSourceName);\n            if (dataSource) {\n                this.m_visibleTiles.clearTileCache(dataSource, filter);\n                dataSource.clearCache();\n            }\n        } else {\n            this.m_visibleTiles.clearTileCache(undefined, filter);\n            this.m_tileDataSources.forEach(dataSource => dataSource.clearCache());\n        }\n\n        if (this.m_elevationProvider !== undefined) {\n            this.m_elevationProvider.clearCache();\n        }\n    }\n\n    /**\n     * Apply visitor to all visible tiles.\n     *\n     * @param fun - Visitor function\n     */\n    forEachVisibleTile(fun: (tile: Tile) => void) {\n        this.m_visibleTiles.forEachVisibleTile(fun);\n    }\n\n    /**\n     * Apply a visitor function to all tiles in the cache.\n     *\n     * @param visitor - Visitor function\n     */\n    forEachCachedTile(visitor: (tile: Tile) => void) {\n        this.m_visibleTiles.forEachCachedTile(visitor);\n    }\n\n    /**\n     * Visit each tile in visible, rendered, and cached sets.\n     *\n     * @remarks\n     *  * Visible and temporarily rendered tiles will be marked for update and retained.\n     *  * Cached but not rendered/visible will be evicted.\n     *\n     * @param dataSource - If passed, only the tiles from this {@link DataSource} instance\n     * are processed. If `undefined`, tiles from all {@link DataSource}s are processed.\n     * @param filter Optional tile filter\n     */\n    markTilesDirty(dataSource?: DataSource, filter?: (tile: Tile) => boolean) {\n        this.m_visibleTiles.markTilesDirty(dataSource, filter);\n        this.update();\n    }\n\n    /**\n     * Sets the DataSource which contains the elevations, the elevation range source, and the\n     * elevation provider.\n     *\n     * @remarks\n     * Only a single elevation source is possible per {@link MapView}.\n     * If the terrain-datasource is merged with this repository, we could internally construct\n     * the {@link ElevationRangeSource} and the {@link ElevationProvider}\n     * and access would be granted to\n     * the application when it asks for it, to simplify the API.\n     *\n     * @param elevationSource - The datasource containing the terrain tiles.\n     * @param elevationRangeSource - Allows access to the elevation min / max per tile.\n     * @param elevationProvider - Allows access to the elevation at a given location or a ray\n     *      from the camera.\n     */\n    async setElevationSource(\n        elevationSource: DataSource,\n        elevationRangeSource: ElevationRangeSource,\n        elevationProvider: ElevationProvider\n    ) {\n        // Remove previous elevation source if present\n        if (this.m_elevationSource && this.m_elevationSource !== elevationSource) {\n            this.removeDataSource(this.m_elevationSource);\n        }\n\n        // Add as datasource if it was not added before\n        const isPresent = this.m_tileDataSources.includes(elevationSource);\n        if (!isPresent) {\n            await this.addDataSource(elevationSource);\n        }\n        this.m_elevationSource = elevationSource;\n        this.m_elevationRangeSource = elevationRangeSource;\n        if (!this.m_elevationRangeSource.ready()) {\n            await this.m_elevationRangeSource.connect();\n        }\n        this.m_elevationProvider = elevationProvider;\n        this.dataSources.forEach(dataSource => {\n            dataSource.setEnableElevationOverlay(true);\n        });\n        this.m_tileGeometryManager.setTileUpdateCallback((tile: Tile) => {\n            overlayOnElevation(tile);\n        });\n        this.clearTileCache();\n    }\n\n    /**\n     * Clears any elevation sources and provider previously set.\n     * @param elevationSource - The datasource to be cleared.\n     */\n    clearElevationSource(elevationSource: DataSource) {\n        this.removeDataSource(elevationSource);\n        this.m_elevationSource = undefined;\n        this.m_elevationRangeSource = undefined;\n        this.m_elevationProvider = undefined;\n        this.dataSources.forEach(dataSource => {\n            dataSource.setEnableElevationOverlay(false);\n        });\n        this.m_tileGeometryManager.setTileUpdateCallback(undefined);\n        this.clearTileCache();\n    }\n\n    /**\n     * Public access to {@link MapViewFog} allowing to toggle it by setting its `enabled` property.\n     */\n    get fog(): MapViewFog {\n        return this.m_sceneEnvironment.fog;\n    }\n\n    private setPostEffects() {\n        // First clear all the effects, then enable them from what is specified.\n        this.mapRenderingManager.bloom.enabled = false;\n        this.mapRenderingManager.outline.enabled = false;\n        this.mapRenderingManager.vignette.enabled = false;\n        this.mapRenderingManager.sepia.enabled = false;\n\n        if (this.m_postEffects !== undefined) {\n            if (this.m_postEffects.bloom !== undefined) {\n                this.mapRenderingManager.bloom = this.m_postEffects.bloom;\n            }\n            if (this.m_postEffects.outline !== undefined) {\n                this.mapRenderingManager.outline.enabled = this.m_postEffects.outline.enabled;\n                this.mapRenderingManager.updateOutline(this.m_postEffects.outline);\n            }\n            if (this.m_postEffects.vignette !== undefined) {\n                this.mapRenderingManager.vignette = this.m_postEffects.vignette;\n            }\n            if (this.m_postEffects.sepia !== undefined) {\n                this.mapRenderingManager.sepia = this.m_postEffects.sepia;\n            }\n        }\n    }\n\n    /**\n     * Returns the elevation provider.\n     */\n    get elevationProvider(): ElevationProvider | undefined {\n        return this.m_elevationProvider;\n    }\n\n    /**\n     * @beta\n     */\n    get throttlingEnabled(): boolean {\n        return this.m_taskScheduler.throttlingEnabled === true;\n    }\n\n    /**\n     * @beta\n     */\n    set throttlingEnabled(enabled: boolean) {\n        this.m_taskScheduler.throttlingEnabled = enabled;\n    }\n\n    get shadowsEnabled(): boolean {\n        return this.m_options.enableShadows === true;\n    }\n\n    set shadowsEnabled(enabled: boolean) {\n        // shadowMap is undefined if we are testing (three.js always set it to be defined).\n        if (\n            this.m_renderer.shadowMap === undefined ||\n            enabled === this.m_renderer.shadowMap.enabled\n        ) {\n            return;\n        }\n        this.m_options.enableShadows = enabled;\n        // There is a bug in three.js where this doesn't currently work once enabled.\n        this.m_renderer.shadowMap.enabled = enabled;\n        // TODO: Make this configurable. Note, there is currently issues when using the\n        // VSMShadowMap type, this should be investigated if this type is requested.\n        this.m_renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n        this.clearTileCache();\n    }\n\n    private extractAttitude() {\n        const camera = this.m_camera;\n        const projection = this.projection;\n\n        const cameraPos = cache.vector3[1];\n        const transform = cache.transform[0];\n        const tangentSpaceMatrix = cache.matrix4[1];\n        // 1. Build the matrix of the tangent space of the camera.\n        cameraPos.setFromMatrixPosition(camera.matrixWorld); // Ensure using world position.\n        projection.localTangentSpace(this.m_targetGeoPos, transform);\n        tangentSpaceMatrix.makeBasis(transform.xAxis, transform.yAxis, transform.zAxis);\n\n        // 2. Change the basis of matrixWorld to the tangent space to get the new base axes.\n        cache.matrix4[0].copy(tangentSpaceMatrix).invert().multiply(camera.matrixWorld);\n        transform.xAxis.setFromMatrixColumn(cache.matrix4[0], 0);\n        transform.yAxis.setFromMatrixColumn(cache.matrix4[0], 1);\n        transform.zAxis.setFromMatrixColumn(cache.matrix4[0], 2);\n\n        // 3. Deduce orientation from the base axes.\n        let yaw = 0;\n        let pitch = 0;\n        let roll = 0;\n\n        // Decompose rotation matrix into Z0 X Z1 Euler angles.\n        const epsilon = 1e-10;\n        const d = transform.zAxis.dot(cameraPos.set(0, 0, 1));\n        if (d < 1.0 - epsilon) {\n            if (d > -1.0 + epsilon) {\n                yaw = Math.atan2(transform.zAxis.x, -transform.zAxis.y);\n                pitch = Math.acos(transform.zAxis.z);\n                roll = Math.atan2(transform.xAxis.x, transform.yAxis.z);\n            } else {\n                // Looking bottom-up with space.z.z == -1.0\n                yaw = -Math.atan2(-transform.yAxis.x, transform.xAxis.x);\n                pitch = 180;\n                roll = 0;\n            }\n        } else {\n            // Looking top-down with space.z.z == 1.0\n            yaw = Math.atan2(-transform.yAxis.x, transform.xAxis.x);\n            pitch = 0.0;\n            roll = 0.0;\n        }\n\n        return {\n            yaw,\n            pitch,\n            roll\n        };\n    }\n\n    private lookAtImpl(params: Partial<LookAtParams>): void {\n        const tilt = Math.min(getOptionValue(params.tilt, this.tilt), MapViewUtils.MAX_TILT_DEG);\n        const heading = getOptionValue(params.heading, this.heading);\n        const distance =\n            params.zoomLevel !== undefined\n                ? MapViewUtils.calculateDistanceFromZoomLevel(\n                      this,\n                      THREE.MathUtils.clamp(\n                          params.zoomLevel,\n                          this.m_minZoomLevel,\n                          this.m_maxZoomLevel\n                      )\n                  )\n                : params.distance !== undefined\n                ? params.distance\n                : this.m_targetDistance;\n\n        let target: GeoCoordinates | undefined;\n        if (params.bounds !== undefined) {\n            let geoPoints: GeoCoordLike[];\n\n            if (params.bounds instanceof GeoBox) {\n                target = params.target\n                    ? GeoCoordinates.fromObject(params.target)\n                    : params.bounds.center;\n                geoPoints = MapViewUtils.geoBoxToGeoPoints(params.bounds);\n            } else if (params.bounds instanceof GeoPolygon) {\n                target = params.bounds.getCentroid();\n                geoPoints = params.bounds.coordinates;\n            } else if (isGeoBoxExtentLike(params.bounds)) {\n                target = params.target ? GeoCoordinates.fromObject(params.target) : this.target;\n                const box = GeoBox.fromCenterAndExtents(target, params.bounds);\n                geoPoints = MapViewUtils.geoBoxToGeoPoints(box);\n            } else if (Array.isArray(params.bounds)) {\n                geoPoints = params.bounds;\n                if (params.target !== undefined) {\n                    target = GeoCoordinates.fromObject(params.target);\n                }\n            } else {\n                throw Error(\"#lookAt: Invalid 'bounds' value\");\n            }\n            if (\n                // if the points are created from the corners of the geoBox don't cluster them\n                !(params.bounds instanceof GeoBox || params.bounds instanceof GeoPolygon) &&\n                this.m_tileWrappingEnabled &&\n                this.projection.type === ProjectionType.Planar\n            ) {\n                // In flat projection, with wrap around enabled, we should detect clusters of\n                // points around  anti-meridian and possible move some points to sibling worlds.\n                //\n                // Here, we fit points into minimal geo box taking world wrapping into account.\n                geoPoints = MapViewUtils.wrapGeoPointsToScreen(geoPoints, target!);\n            }\n            const worldPoints = geoPoints.map(point =>\n                this.projection.projectPoint(GeoCoordinates.fromObject(point), new THREE.Vector3())\n            );\n            const worldTarget = new THREE.Vector3();\n            if (target! === undefined) {\n                const box = new THREE.Box3().setFromPoints(worldPoints);\n                box.getCenter(worldTarget);\n                this.projection.scalePointToSurface(worldTarget);\n                target = this.projection.unprojectPoint(worldTarget);\n            } else {\n                this.projection.projectPoint(target, worldTarget);\n            }\n\n            if (params.zoomLevel !== undefined || params.distance !== undefined) {\n                return this.lookAtImpl({\n                    tilt,\n                    heading,\n                    distance,\n                    target\n                });\n            }\n\n            return this.lookAtImpl(\n                MapViewUtils.getFitBoundsLookAtParams(target, worldTarget, worldPoints, {\n                    tilt,\n                    heading,\n                    minDistance: MapViewUtils.calculateDistanceFromZoomLevel(\n                        this,\n                        this.maxZoomLevel\n                    ),\n                    projection: this.projection,\n                    camera: this.camera\n                })\n            );\n        }\n        target =\n            params.target !== undefined ? GeoCoordinates.fromObject(params.target) : this.target;\n\n        // MapViewUtils#setRotation uses pitch, not tilt, which is different in sphere projection.\n        // But in sphere, in the tangent space of the target of the camera, pitch = tilt. So, put\n        // the camera on the target, so the tilt can be passed to getRotation as a pitch.\n        MapViewUtils.getCameraRotationAtTarget(\n            this.projection,\n            target,\n            -heading,\n            tilt,\n            this.camera.quaternion\n        );\n        MapViewUtils.getCameraPositionFromTargetCoordinates(\n            target,\n            distance,\n            -heading,\n            tilt,\n            this.projection,\n            this.camera.position\n        );\n        this.camera.updateMatrixWorld(true);\n\n        // Make sure to update all properties that are accessible via API (e.g. zoomlevel) b/c\n        // otherwise they would be updated as recently as in the next animation frame.\n        this.updateLookAtSettings();\n        this.update();\n    }\n\n    /**\n     * Plug-in PolarTileDataSource for spherical projection and plug-out otherwise\n     */\n    private updatePolarDataSource() {\n        const dataSource = this.m_polarDataSource;\n        if (this.m_enablePolarDataSource === true && dataSource !== undefined) {\n            const twinDataSource = this.getDataSourceByName(dataSource.name);\n\n            if (this.projection.type === ProjectionType.Spherical) {\n                if (twinDataSource === undefined) {\n                    this.addDataSource(dataSource);\n                }\n            } else {\n                if (twinDataSource !== undefined) {\n                    this.removeDataSource(dataSource);\n                }\n            }\n        }\n    }\n\n    /**\n     * Updates the camera and the projections and resets the screen collisions,\n     * note, setupCamera must be called before this is called.\n     *\n     * @remarks\n     * @param viewRanges - optional parameter that supplies new view ranges, most importantly\n     * near/far clipping planes distance. If parameter is not provided view ranges will be\n     * calculated from [[ClipPlaneEvaluator]] used in {@link VisibleTileSet}.\n     */\n    private updateCameras(viewRanges?: ViewRanges) {\n        // Update look at settings first, so that other components (e.g. ClipPlanesEvaluator) get\n        // the up to date tilt, targetDistance, ...\n        this.m_camera.updateMatrixWorld(false);\n        this.updateLookAtSettings();\n\n        const { width, height } = this.m_renderer.getSize(cache.vector2[0]);\n        this.m_camera.aspect =\n            this.m_forceCameraAspect !== undefined ? this.m_forceCameraAspect : width / height;\n        this.setFovOnCamera(this.m_options.fovCalculation!, height);\n\n        // When calculating clip planes account for the highest building on the earth,\n        // multiplying its height by projection scaling factor. This approach assumes\n        // constantHeight property of extruded polygon technique is set as default false,\n        // otherwise the near plane margins will be bigger then required, but still correct.\n        const projectionScale = this.projection.getScaleFactor(this.camera.position);\n        const maxGeometryHeightScaled =\n            projectionScale *\n            this.m_tileDataSources.reduce((r, ds) => Math.max(r, ds.maxGeometryHeight), 0);\n\n        const minGeometryHeightScaled =\n            projectionScale *\n            this.m_tileDataSources.reduce((r, ds) => Math.min(r, ds.minGeometryHeight), 0);\n\n        // Copy all properties from new view ranges to our readonly object.\n        // This allows to keep all view ranges references valid and keeps up-to-date\n        // information within them. Works the same as copping all properties one-by-one.\n        Object.assign(\n            this.m_viewRanges,\n            viewRanges === undefined\n                ? this.m_visibleTiles.updateClipPlanes(\n                      maxGeometryHeightScaled,\n                      minGeometryHeightScaled\n                  )\n                : viewRanges\n        );\n        this.m_camera.near = this.m_viewRanges.near;\n        this.m_camera.far = this.m_viewRanges.far;\n\n        this.m_camera.updateProjectionMatrix();\n\n        // Update the \"relative to eye\" camera. Copy the public camera parameters\n        // and place the \"relative to eye\" at the world's origin.\n        this.m_rteCamera.copy(this.m_camera);\n        this.m_rteCamera.position.setScalar(0);\n        this.m_rteCamera.updateMatrixWorld(true);\n\n        this.m_textElementsRenderer?.updateCamera();\n\n        this.m_screenProjector.update(this.camera, width, height);\n\n        this.m_pixelToWorld = undefined;\n        this.m_sceneEnvironment.update();\n    }\n\n    /**\n     * Derive the look at settings (i.e. target, zoom, ...) from the current camera.\n     */\n    private updateLookAtSettings() {\n        let { target, distance, final } = MapViewUtils.getTargetAndDistance(\n            this.projection,\n            this.camera,\n            this.elevationProvider\n        );\n        if (!final) {\n            this.update();\n        }\n        if (this.geoMaxBounds) {\n            ({ target, distance } = MapViewUtils.constrainTargetAndDistanceToViewBounds(\n                target,\n                distance,\n                this\n            ));\n        }\n\n        this.m_targetWorldPos.copy(target);\n        this.m_targetGeoPos = this.projection.unprojectPoint(this.m_targetWorldPos);\n        this.m_targetDistance = distance;\n        this.m_zoomLevel = MapViewUtils.calculateZoomLevelFromDistance(this, this.m_targetDistance);\n\n        const { yaw, pitch, roll } = this.extractAttitude();\n        this.m_yaw = yaw;\n        this.m_pitch = pitch;\n        this.m_roll = roll;\n    }\n\n    /**\n     * Update `Env` instance used for style `Expr` evaluations.\n     */\n    private updateEnv() {\n        this.m_env.entries.$zoom = this.m_zoomLevel;\n\n        // This one introduces unnecessary calculation of pixelToWorld, even if it's barely\n        // used in our styles.\n        this.m_env.entries.$pixelToMeters = this.pixelToWorld;\n\n        this.m_env.entries.$frameNumber = this.m_frameNumber;\n    }\n\n    /**\n     * Transfer the NDC point to view space.\n     * @param vector - Vector to transform.\n     * @param result - Result to place calculation.\n     */\n    public ndcToView(vector: Vector3Like, result: THREE.Vector3): THREE.Vector3 {\n        result\n            .set(vector.x, vector.y, vector.z)\n            .applyMatrix4(this.camera.projectionMatrixInverse)\n            // Make sure to apply rotation, hence use the rte camera\n            .applyMatrix4(this.m_rteCamera.matrixWorld);\n        return result;\n    }\n\n    /**\n     * Render loop callback that should only be called by [[requestAnimationFrame]].\n     * Will trigger [[requestAnimationFrame]] again if updates are pending or  animation is running.\n     * @param frameStartTime - The start time of the current frame\n     */\n    private renderLoop(frameStartTime: number) {\n        // Render loop shouldn't run when synchronous rendering is enabled or if `MapView` has been\n        // disposed of.\n        if (this.m_options.synchronousRendering === true || this.disposed) {\n            return;\n        }\n\n        if (this.maxFps === 0) {\n            // Render with max fps\n            this.render(frameStartTime);\n        } else {\n            // Limit fps by skipping frames\n\n            // Magic ingredient to compensate time flux.\n            const fudgeTimeInMs = 3;\n            const frameInterval = 1000 / this.maxFps;\n            const previousFrameTime =\n                this.m_previousFrameTimeStamp === undefined ? 0 : this.m_previousFrameTimeStamp;\n            const targetTime = previousFrameTime + frameInterval - fudgeTimeInMs;\n\n            if (frameStartTime >= targetTime) {\n                this.render(frameStartTime);\n            }\n        }\n\n        // Continue rendering if update is pending or animation is running\n        if (this.isDynamicFrame) {\n            this.m_animationFrameHandle = requestAnimationFrame(this.handleRequestAnimationFrame);\n        } else {\n            // Stop rendering if no update is pending\n            this.m_animationFrameHandle = undefined;\n        }\n    }\n\n    /**\n     * Start render loop if not already running.\n     */\n    private startRenderLoop() {\n        if (this.m_animationFrameHandle !== undefined || this.m_options.synchronousRendering) {\n            return;\n        }\n\n        this.m_animationFrameHandle = requestAnimationFrame(this.handleRequestAnimationFrame);\n    }\n\n    /**\n     * Returns the list of the enabled data sources.\n     */\n    private getEnabledTileDataSources(): DataSource[] {\n        // ### build this list once decoders && datasources are ready\n\n        const enabledDataSources: DataSource[] = [];\n\n        for (const dataSource of this.m_tileDataSources) {\n            if (this.isDataSourceEnabled(dataSource)) {\n                enabledDataSources.push(dataSource);\n            }\n        }\n\n        return enabledDataSources;\n    }\n\n    /**\n     * Renders the current frame.\n     */\n    private render(frameStartTime: number): void {\n        if (this.m_drawing) {\n            return;\n        }\n\n        if (this.disposed) {\n            logger.warn(\"render(): MapView has been disposed of.\");\n            return;\n        }\n\n        this.RENDER_EVENT.time = frameStartTime;\n        this.dispatchEvent(this.RENDER_EVENT);\n\n        this.m_tileObjectRenderer.prepareRender();\n\n        ++this.m_frameNumber;\n\n        let currentFrameEvent: FrameStats | undefined;\n        const stats = PerformanceStatistics.instance;\n        const gatherStatistics: boolean = stats.enabled;\n        if (gatherStatistics) {\n            currentFrameEvent = stats.currentFrame;\n\n            if (this.m_previousFrameTimeStamp !== undefined) {\n                // In contrast to fullFrameTime we also measure the application code\n                // for the FPS. This means FPS != 1000 / fullFrameTime.\n                const timeSincePreviousFrame = frameStartTime - this.m_previousFrameTimeStamp;\n                currentFrameEvent.setValue(\"render.fps\", 1000 / timeSincePreviousFrame);\n            }\n\n            // We store the last frame statistics at the beginning of the next frame b/c additional\n            // work (i.e. geometry creation) is done outside of the animation frame but still needs\n            // to be added to the `fullFrameTime` (see [[TileGeometryLoader]]).\n            stats.storeAndClearFrameInfo();\n\n            currentFrameEvent = currentFrameEvent as FrameStats;\n            currentFrameEvent.setValue(\"renderCount.frameNumber\", this.m_frameNumber);\n        }\n\n        this.m_previousFrameTimeStamp = frameStartTime;\n\n        let setupTime: number | undefined;\n        let cullTime: number | undefined;\n        let textPlacementTime: number | undefined;\n        let drawTime: number | undefined;\n        let textDrawTime: number | undefined;\n        let endTime: number | undefined;\n\n        this.m_renderer.info.reset();\n\n        this.m_updatePending = false;\n        this.m_thisFrameTilesChanged = undefined;\n\n        this.m_drawing = true;\n\n        if (this.m_renderer.getPixelRatio() !== this.pixelRatio) {\n            this.m_renderer.setPixelRatio(this.pixelRatio);\n        }\n\n        this.updateCameras();\n        this.updateEnv();\n\n        this.m_renderer.clear();\n\n        // clear the scenes\n        this.m_sceneRoot.children.length = 0;\n        this.m_overlaySceneRoot.children.length = 0;\n\n        if (gatherStatistics) {\n            setupTime = PerformanceTimer.now();\n        }\n\n        // TBD: Update renderList only any of its params (camera, etc...) has changed.\n        if (!this.lockVisibleTileSet) {\n            const viewRangesStatus = this.m_visibleTiles.updateRenderList(\n                this.storageLevel,\n                Math.floor(this.zoomLevel),\n                this.getEnabledTileDataSources(),\n                this.m_frameNumber,\n                this.m_elevationRangeSource\n            );\n            // View ranges has changed due to features (with elevation) that affects clip planes\n            // positioning, update cameras with new clip planes positions.\n            if (viewRangesStatus.viewRangesChanged) {\n                this.updateCameras(viewRangesStatus.viewRanges);\n            }\n        }\n\n        if (gatherStatistics) {\n            cullTime = PerformanceTimer.now();\n        }\n\n        const renderList = this.m_visibleTiles.dataSourceTileList;\n\n        // no need to check everything if we're not going to create text renderer.\n        renderList.forEach(({ zoomLevel, renderedTiles }) => {\n            renderedTiles.forEach(tile => {\n                this.m_tileObjectRenderer.render(\n                    tile,\n                    zoomLevel,\n                    this.zoomLevel,\n                    this.m_camera.position,\n                    this.m_sceneRoot\n                );\n\n                //We know that rendered tiles are visible (in the view frustum), so we update the\n                //frame number, note we don't do this for the visibleTiles because some may still be\n                //loading (and therefore aren't visible in the sense of being seen on the screen).\n                //Note also, this number isn't currently used anywhere so should be considered to be\n                //removed in the future (though could be good for debugging purposes).\n                tile.frameNumLastVisible = this.m_frameNumber;\n            });\n        });\n\n        this.m_mapAnchors.update(\n            this.projection,\n            this.camera.position,\n            this.m_sceneRoot,\n            this.m_overlaySceneRoot\n        );\n\n        this.m_animatedExtrusionHandler.update(this.zoomLevel);\n\n        if (currentFrameEvent !== undefined) {\n            // Make sure the counters all have a value.\n            currentFrameEvent.addValue(\"renderCount.numTilesRendered\", 0);\n            currentFrameEvent.addValue(\"renderCount.numTilesVisible\", 0);\n            currentFrameEvent.addValue(\"renderCount.numTilesLoading\", 0);\n\n            // Increment the counters for all data sources.\n            renderList.forEach(({ zoomLevel, renderedTiles, visibleTiles, numTilesLoading }) => {\n                currentFrameEvent!.addValue(\"renderCount.numTilesRendered\", renderedTiles.size);\n                currentFrameEvent!.addValue(\"renderCount.numTilesVisible\", visibleTiles.length);\n                currentFrameEvent!.addValue(\"renderCount.numTilesLoading\", numTilesLoading);\n            });\n        }\n\n        if (this.m_movementDetector.checkCameraMoved(this, frameStartTime)) {\n            //FIXME: Shouldn't we use target here?\n            const { latitude, longitude, altitude } = this.geoCenter;\n            this.dispatchEvent({\n                type: MapViewEventNames.CameraPositionChanged,\n                latitude,\n                longitude,\n                altitude,\n                // FIXME: Can we remove yaw, pitch and roll\n                yaw: this.m_yaw,\n                pitch: this.m_pitch,\n                roll: this.m_roll,\n                tilt: this.tilt,\n                heading: this.heading,\n                zoom: this.zoomLevel\n            });\n        }\n\n        // The camera used to render the scene.\n        const camera = this.m_pointOfView !== undefined ? this.m_pointOfView : this.m_rteCamera;\n\n        if (this.renderLabels && !this.m_pointOfView) {\n            this.m_textElementsRenderer.placeText(renderList, frameStartTime);\n        }\n\n        if (gatherStatistics) {\n            textPlacementTime = PerformanceTimer.now();\n        }\n\n        this.mapRenderingManager.render(\n            this.m_renderer,\n            this.m_scene,\n            camera,\n            !this.isDynamicFrame\n        );\n\n        if (gatherStatistics) {\n            drawTime = PerformanceTimer.now();\n        }\n\n        if (this.renderLabels && !this.m_pointOfView) {\n            this.m_textElementsRenderer.renderText(this.m_viewRanges.maximum);\n        }\n\n        if (this.m_overlaySceneRoot.children.length > 0) {\n            this.m_renderer.render(this.m_overlayScene, camera);\n        }\n\n        if (gatherStatistics) {\n            textDrawTime = PerformanceTimer.now();\n        }\n\n        if (!this.m_firstFrameRendered) {\n            this.m_firstFrameRendered = true;\n\n            if (gatherStatistics) {\n                stats.appResults.set(\"firstFrame\", frameStartTime);\n            }\n\n            this.FIRST_FRAME_EVENT.time = frameStartTime;\n            this.dispatchEvent(this.FIRST_FRAME_EVENT);\n        }\n\n        this.m_visibleTiles.disposePendingTiles();\n\n        this.m_drawing = false;\n\n        this.checkCopyrightUpdates();\n\n        // do this post paint therefore use a Timeout, if it has not been executed cancel and\n        // create a new one\n        if (this.m_taskSchedulerTimeout !== undefined) {\n            clearTimeout(this.m_taskSchedulerTimeout);\n        }\n        this.m_taskSchedulerTimeout = setTimeout(() => {\n            this.m_taskSchedulerTimeout = undefined;\n            this.m_taskScheduler.processPending(frameStartTime);\n        }, 0);\n\n        if (currentFrameEvent !== undefined) {\n            endTime = PerformanceTimer.now();\n\n            const frameRenderTime = endTime - frameStartTime;\n\n            currentFrameEvent.setValue(\"render.setupTime\", setupTime! - frameStartTime);\n            currentFrameEvent.setValue(\"render.cullTime\", cullTime! - setupTime!);\n            currentFrameEvent.setValue(\"render.textPlacementTime\", textPlacementTime! - cullTime!);\n            currentFrameEvent.setValue(\"render.drawTime\", drawTime! - textPlacementTime!);\n            currentFrameEvent.setValue(\"render.textDrawTime\", textDrawTime! - drawTime!);\n            currentFrameEvent.setValue(\"render.cleanupTime\", endTime - textDrawTime!);\n            currentFrameEvent.setValue(\"render.frameRenderTime\", frameRenderTime);\n\n            // Initialize the fullFrameTime with the frameRenderTime If we also create geometry in\n            // this frame, this number will be increased in the TileGeometryLoader.\n            currentFrameEvent.setValue(\"render.fullFrameTime\", frameRenderTime);\n            currentFrameEvent.setValue(\"render.geometryCreationTime\", 0);\n\n            // Add THREE.js statistics\n            stats.addWebGLInfo(this.m_renderer.info);\n\n            // Add memory statistics\n            // FIXME:\n            // This will only measure the memory of the rendering and not of the geometry creation.\n            // Assuming the garbage collector is not kicking in immediately we will at least see\n            // the geometry creation memory consumption accounted in the next frame.\n            stats.addMemoryInfo();\n        }\n\n        this.DID_RENDER_EVENT.time = frameStartTime;\n        this.dispatchEvent(this.DID_RENDER_EVENT);\n\n        // After completely rendering this frame, it is checked if this frame was the first complete\n        // frame, with no more tiles, geometry and labels waiting to be added, and no animation\n        // running. The initial placement of text in this render call may have changed the loading\n        // state of the TextElementsRenderer, so this has to be checked again.\n        // HARP-10919: Fading is currently ignored by the frame complete event.\n        if (!this.isDynamicFrame) {\n            if (this.m_firstFrameComplete === false) {\n                this.m_firstFrameComplete = true;\n                if (gatherStatistics) {\n                    stats.appResults.set(\"firstFrameComplete\", frameStartTime);\n                }\n            }\n\n            this.FRAME_COMPLETE_EVENT.time = frameStartTime;\n            this.dispatchEvent(this.FRAME_COMPLETE_EVENT);\n        }\n    }\n\n    private setupCamera() {\n        assert(this.m_visibleTiles !== undefined);\n\n        this.m_options.target = GeoCoordinates.fromObject(\n            getOptionValue(this.m_options.target, MapViewDefaults.target)\n        );\n        // ensure that look at target has height of 0\n        (this.m_options.target as GeoCoordinates).altitude = 0;\n        this.m_options.tilt = getOptionValue(this.m_options.tilt, MapViewDefaults.tilt);\n\n        this.m_options.heading = getOptionValue(this.m_options.heading, MapViewDefaults.heading);\n\n        this.m_options.zoomLevel = getOptionValue(\n            this.m_options.zoomLevel,\n            MapViewDefaults.zoomLevel\n        );\n\n        this.lookAtImpl(this.m_options);\n\n        // ### move & customize\n        const { width, height } = this.getCanvasClientSize();\n        this.resize(width, height);\n    }\n\n    private createVisibleTileSet(): VisibleTileSet {\n        assert(this.m_tileGeometryManager !== undefined);\n\n        if (this.m_visibleTiles) {\n            // Dispose of all resources before the old instance is replaced.\n            this.m_visibleTiles.clearTileCache();\n            this.m_visibleTiles.disposePendingTiles();\n        }\n\n        const enableMixedLod =\n            this.m_enableMixedLod === undefined\n                ? this.projection.type === ProjectionType.Spherical\n                : this.m_enableMixedLod;\n\n        this.m_visibleTiles = new VisibleTileSet(\n            new FrustumIntersection(\n                this.m_camera,\n                this,\n                this.m_visibleTileSetOptions.extendedFrustumCulling,\n                this.m_tileWrappingEnabled,\n                enableMixedLod,\n                this.m_lodMinTilePixelSize\n            ),\n            this.m_tileGeometryManager,\n            this.m_visibleTileSetOptions,\n            this.taskQueue\n        );\n        return this.m_visibleTiles;\n    }\n\n    private movementStarted() {\n        this.m_textElementsRenderer.movementStarted();\n\n        this.MOVEMENT_STARTED_EVENT.time = Date.now();\n        this.dispatchEvent(this.MOVEMENT_STARTED_EVENT);\n    }\n\n    private movementFinished() {\n        this.m_textElementsRenderer.movementFinished();\n\n        this.MOVEMENT_FINISHED_EVENT.time = Date.now();\n        this.dispatchEvent(this.MOVEMENT_FINISHED_EVENT);\n\n        // render at the next possible time.\n        if (!this.animating) {\n            if (this.m_movementFinishedUpdateTimerId !== undefined) {\n                clearTimeout(this.m_movementFinishedUpdateTimerId);\n            }\n            this.m_movementFinishedUpdateTimerId = setTimeout(() => {\n                this.m_movementFinishedUpdateTimerId = undefined;\n                this.update();\n            }, 0);\n        }\n    }\n\n    /**\n     * Check if the set of visible tiles changed since the last frame.\n     *\n     * May be called multiple times per frame.\n     *\n     * Equality is computed by creating a string containing the IDs of the tiles.\n     */\n    private checkIfTilesChanged() {\n        if (this.m_thisFrameTilesChanged !== undefined) {\n            return this.m_thisFrameTilesChanged;\n        }\n        const renderList = this.m_visibleTiles.dataSourceTileList;\n\n        const tileIdList: string[] = [];\n\n        tileIdList.length = 0;\n\n        renderList.forEach(({ dataSource, renderedTiles }) => {\n            renderedTiles.forEach(tile => {\n                tileIdList.push(dataSource.name + \"-\" + tile.tileKey.mortonCode());\n            });\n        });\n\n        tileIdList.sort();\n\n        const newTileIds = tileIdList.join(\"#\");\n\n        if (newTileIds !== this.m_lastTileIds) {\n            this.m_lastTileIds = newTileIds;\n            this.m_thisFrameTilesChanged = true;\n        } else {\n            this.m_thisFrameTilesChanged = false;\n        }\n\n        return this.m_thisFrameTilesChanged;\n    }\n\n    private checkCopyrightUpdates() {\n        if (!this.checkIfTilesChanged()) {\n            return;\n        }\n\n        const newCopyrightInfo = this.getRenderedTilesCopyrightInfo();\n        if (newCopyrightInfo === this.m_copyrightInfo) {\n            return;\n        }\n        if (newCopyrightInfo.length === this.m_copyrightInfo.length) {\n            let allEqual = true;\n            for (let i = 0; i < newCopyrightInfo.length; i++) {\n                const a = newCopyrightInfo[i];\n                const b = this.m_copyrightInfo[i];\n                if (a.label !== b.label) {\n                    allEqual = false;\n                    break;\n                }\n            }\n            if (allEqual) {\n                return;\n            }\n        }\n        this.m_copyrightInfo = newCopyrightInfo;\n        this.dispatchEvent(this.COPYRIGHT_CHANGED_EVENT);\n    }\n\n    private getRenderedTilesCopyrightInfo(): CopyrightInfo[] {\n        let result: CopyrightInfo[] = [];\n        for (const tileList of this.m_visibleTiles.dataSourceTileList) {\n            for (const tile of tileList.renderedTiles.values()) {\n                const tileCopyrightInfo = tile.copyrightInfo;\n                if (tileCopyrightInfo === undefined || tileCopyrightInfo.length === 0) {\n                    continue;\n                }\n                result = CopyrightInfo.mergeArrays(result, tileCopyrightInfo);\n            }\n        }\n        return result;\n    }\n\n    private setupStats(enable: boolean) {\n        new PerformanceStatistics(enable, 1000);\n    }\n\n    private setupRenderer(tileObjectRenderer: TileObjectRenderer) {\n        this.m_scene.add(this.m_sceneRoot);\n        this.m_overlayScene.add(this.m_overlaySceneRoot);\n\n        this.shadowsEnabled = this.m_options.enableShadows ?? false;\n\n        tileObjectRenderer.setupRenderer();\n    }\n\n    private createTextRenderer(): TextElementsRenderer {\n        return new TextElementsRenderer(\n            new MapViewState(this, this.checkIfTilesChanged.bind(this)),\n            this.m_screenProjector,\n            this.m_poiManager,\n            this.m_renderer,\n            [this.imageCache, this.userImageCache],\n            this.m_options\n        );\n    }\n\n    /**\n     * @internal\n     * @param fontCatalogs\n     * @param textStyles\n     * @param defaultTextStyle\n     */\n    public async resetTextRenderer(\n        fontCatalogs?: FontCatalogConfig[],\n        textStyles?: TextStyleDefinition[],\n        defaultTextStyle?: TextStyleDefinition\n    ): Promise<void> {\n        await this.m_textElementsRenderer.updateFontCatalogs(fontCatalogs);\n        await this.m_textElementsRenderer.updateTextStyles(textStyles, defaultTextStyle);\n        this.update();\n    }\n\n    /**\n     * Default handler for webglcontextlost event.\n     *\n     * Note: The renderer `this.m_renderer` may not be initialized when this function is called.\n     */\n    private readonly onWebGLContextLost = (event: Event) => {\n        this.dispatchEvent(this.CONTEXT_LOST_EVENT);\n        logger.warn(\"WebGL context lost\", event);\n    };\n\n    /**\n     * Default handler for webglcontextrestored event.\n     *\n     * Note: The renderer `this.m_renderer` may not be initialized when this function is called.\n     */\n    private readonly onWebGLContextRestored = (event: Event) => {\n        this.dispatchEvent(this.CONTEXT_RESTORED_EVENT);\n        if (this.m_renderer !== undefined) {\n            this.textElementsRenderer.restoreRenderers(this.m_renderer);\n            this.getTheme().then(theme => {\n                this.m_sceneEnvironment.updateClearColor(theme.clearColor, theme.clearAlpha);\n                this.update();\n            });\n        }\n        logger.warn(\"WebGL context restored\", event);\n    };\n\n    /**\n     * Sets the field of view calculation, and applies it immediately to the camera.\n     *\n     * @param fovCalculation - How to calculate the FOV\n     * @param height - Viewport height.\n     */\n    private setFovOnCamera(fovCalculation: FovCalculation, height: number) {\n        const fovRad = THREE.MathUtils.degToRad(fovCalculation.fov);\n\n        if (fovCalculation.type === \"fixed\") {\n            CameraUtils.setVerticalFov(this.m_camera, fovRad, height);\n            return;\n        }\n\n        let focalLength = CameraUtils.getFocalLength(this.m_camera);\n        if (focalLength === undefined) {\n            CameraUtils.setVerticalFov(this.m_camera, fovRad, height);\n            focalLength = CameraUtils.getFocalLength(this.m_camera);\n        }\n        CameraUtils.setFocalLength(this.m_camera, focalLength!, height);\n    }\n\n    /**\n     * Get canvas client size in css/client pixels.\n     *\n     * Supports canvases not attached to DOM, which have 0 as `clientWidth` and `clientHeight` by\n     * calculating it from actual canvas size and current pixel ratio.\n     */\n    private getCanvasClientSize(): { width: number; height: number } {\n        const { clientWidth, clientHeight } = this.canvas;\n        if (\n            clientWidth === 0 ||\n            clientHeight === 0 ||\n            typeof clientWidth !== \"number\" ||\n            typeof clientHeight !== \"number\"\n        ) {\n            const pixelRatio = this.m_renderer.getPixelRatio();\n            return {\n                width: Math.round(this.canvas.width / pixelRatio),\n                height: Math.round(this.canvas.height / pixelRatio)\n            };\n        } else {\n            return { width: clientWidth, height: clientHeight };\n        }\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Theme } from \"@here/harp-datasource-protocol\";\nimport { EarthConstants, Projection, ProjectionType } from \"@here/harp-geoutils\";\nimport { GroundAtmosphereMaterial, SkyAtmosphereMaterial } from \"@here/harp-materials\";\nimport { assert } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { TiltViewClipPlanesEvaluator } from \"./ClipPlanesEvaluator\";\nimport { MapAnchor, MapAnchors } from \"./MapAnchors\";\n\n/**\n * Atmosphere effect variants.\n */\nenum AtmosphereVariant {\n    Ground = 0x1,\n    Sky = 0x2,\n    SkyAndGround = 0x3\n}\n\n/**\n * Atmosphere shader variants.\n */\nenum AtmosphereShadingVariant {\n    ScatteringShader,\n    SimpleColor,\n    Wireframe\n}\n\n/**\n * Lists light modes.\n */\nexport enum AtmosphereLightMode {\n    LightOverhead = 0,\n    LightDynamic = 1\n}\n\n/**\n * Maximum altitude that atmosphere reaches as the percent of the Earth radius.\n */\nconst SKY_ATMOSPHERE_ALTITUDE_FACTOR = 0.025;\n\n/**\n * Maximum altitude that ground atmosphere is visible as the percent of the Earth radius.\n */\nconst GROUND_ATMOSPHERE_ALTITUDE_FACTOR = 0.0001;\n\n/**\n * Utility cache for holding temporary values.\n */\nconst cache = {\n    clipPlanes: { near: 0, far: 0 }\n};\n\n/**\n * Class that provides {@link MapView}'s atmospheric scattering effect.\n */\nexport class MapViewAtmosphere {\n    /**\n     * User data name attribute assigned to created mesh.\n     */\n    static SkyAtmosphereUserName: string = \"SkyAtmosphere\";\n    /**\n     * User data name attribute assigned to created mesh.\n     */\n    static GroundAtmosphereUserName: string = \"GroundAtmosphere\";\n\n    /**\n     * Check if map anchors have already atmosphere effect added.\n     *\n     * @param mapAnchors - MapAnchors to check.\n     */\n    static isPresent(mapAnchors: MapAnchors): boolean {\n        for (const mapAnchor of mapAnchors.children) {\n            if (\n                mapAnchor.name === MapViewAtmosphere.SkyAtmosphereUserName ||\n                mapAnchor.name === MapViewAtmosphere.GroundAtmosphereUserName\n            ) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private m_enabled: boolean = true;\n    private m_skyGeometry?: THREE.BufferGeometry;\n    private m_skyMaterial?: THREE.Material;\n    private m_skyMesh?: THREE.Mesh;\n    private m_groundGeometry?: THREE.BufferGeometry;\n    private m_groundMaterial?: THREE.Material;\n    private m_groundMesh?: THREE.Mesh;\n\n    private readonly m_clipPlanesEvaluator = new TiltViewClipPlanesEvaluator(\n        EarthConstants.EQUATORIAL_RADIUS * SKY_ATMOSPHERE_ALTITUDE_FACTOR,\n        0,\n        1.0,\n        0.05,\n        10000000.0\n    );\n    // TODO: Support for Theme definition should be added.\n    //private m_cachedTheme: Theme = { styles: {} };\n\n    private readonly m_lightDirection = new THREE.Vector3(0.0, 1.0, 0.0);\n\n    /**\n     * Creates and adds `Atmosphere` effects to the scene.\n     *\n     * @note Currently works only with globe projection.\n     *\n     * @param m_mapAnchors - The {@link MapAnchors} instance where the effect will be added.\n     * @param m_sceneCamera - The camera used to render entire scene.\n     * @param m_projection - The geo-projection used to transform geo coordinates to\n     *                       cartesian space.\n     * @param m_rendererCapabilities The capabilities of the WebGL renderer.\n     * @param m_updateCallback - The optional callback to that should be called whenever atmosphere\n     * configuration changes, may be used to inform related components (`MapView`) to redraw.\n     * @param m_atmosphereVariant - The optional atmosphere configuration variant enum\n     * [[AtmosphereVariant]], which denotes where the atmosphere scattering effect should be\n     * applied, it may be ground or sky atmosphere only or most realistic for both, which is\n     * chosen by default.\n     * @param m_materialVariant - The optional material variant to be used, mainly for\n     * testing and tweaking purposes.\n     */\n    constructor(\n        private readonly m_mapAnchors: MapAnchors,\n        private readonly m_sceneCamera: THREE.Camera,\n        private readonly m_projection: Projection,\n        private readonly m_rendererCapabilities: THREE.WebGLCapabilities,\n        private readonly m_updateCallback?: () => void,\n        private readonly m_atmosphereVariant: AtmosphereVariant = AtmosphereVariant.SkyAndGround,\n        private readonly m_materialVariant = AtmosphereShadingVariant.ScatteringShader\n    ) {\n        if (this.m_atmosphereVariant & AtmosphereVariant.Sky) {\n            this.createSkyGeometry();\n        }\n        if (this.m_atmosphereVariant & AtmosphereVariant.Ground) {\n            this.createGroundGeometry();\n        }\n        this.addToMapAnchors(this.m_mapAnchors);\n    }\n\n    get skyMesh(): THREE.Mesh | undefined {\n        return this.m_skyMesh;\n    }\n\n    get groundMesh(): THREE.Mesh | undefined {\n        return this.m_groundMesh;\n    }\n\n    /**\n     * Allows to enable/disable the atmosphere effect, regardless of the theme settings.\n     *\n     * Use this method to change the setup in runtime without defining corresponding theme setup.\n     *\n     * @param enable - A boolean that specifies whether the atmosphere should be enabled or\n     *                 disabled.\n     */\n    set enabled(enable: boolean) {\n        // Check already disposed.\n        if (this.disposed) {\n            return;\n        }\n        if (this.m_enabled === enable) {\n            return;\n        }\n        this.m_enabled = enable;\n        const isAdded = MapViewAtmosphere.isPresent(this.m_mapAnchors);\n        if (enable && !isAdded) {\n            this.addToMapAnchors(this.m_mapAnchors);\n        } else if (!enable && isAdded) {\n            this.removeFromMapAnchors(this.m_mapAnchors);\n        }\n    }\n\n    /**\n     * Returns the current atmosphere status, enabled or disabled.\n     */\n    get enabled(): boolean {\n        return this.m_enabled;\n    }\n\n    set lightMode(lightMode: AtmosphereLightMode) {\n        if (this.m_materialVariant !== AtmosphereShadingVariant.ScatteringShader) {\n            return;\n        }\n        const dynamicLight = lightMode === AtmosphereLightMode.LightDynamic;\n        if (this.m_groundMaterial !== undefined) {\n            const groundMat = this.m_groundMaterial as GroundAtmosphereMaterial;\n            groundMat.setDynamicLighting(dynamicLight);\n        }\n        if (this.m_skyMaterial !== undefined) {\n            const skyMat = this.m_skyMaterial as SkyAtmosphereMaterial;\n            skyMat.setDynamicLighting(dynamicLight);\n        }\n    }\n\n    /**\n     * Disposes allocated resources.\n     */\n    dispose() {\n        // Unlink from scene and mapview anchors\n        if (this.enabled) {\n            this.enabled = false;\n        }\n\n        this.m_skyMaterial?.dispose();\n        this.m_groundMaterial?.dispose();\n\n        this.m_skyGeometry?.dispose();\n        this.m_groundGeometry?.dispose();\n\n        // After disposal we may no longer enable effect.\n        this.m_skyGeometry = undefined;\n        this.m_groundGeometry = undefined;\n\n        this.m_skyMaterial = undefined;\n        this.m_groundMaterial = undefined;\n\n        this.m_skyMesh = undefined;\n        this.m_groundMesh = undefined;\n    }\n\n    /**\n     * Sets the atmosphere depending on the\n     * {@link @here/harp-datasource-protocol#Theme} instance provided.\n     *\n     * This function is called when a theme is loaded. Atmosphere is added only if the theme\n     * contains a atmosphere definition with a:\n     * - `color` property, used to set the atmosphere color.\n     *\n     * @param theme - A {@link @here/harp-datasource-protocol#Theme} instance.\n     */\n    reset(theme: Theme) {\n        //this.m_cachedTheme = theme;\n    }\n\n    private get disposed() {\n        return this.m_skyMesh === undefined && this.m_groundMesh === undefined;\n    }\n\n    /**\n     * Handles atmosphere effect adding.\n     */\n    private addToMapAnchors(mapAnchors: MapAnchors) {\n        assert(!MapViewAtmosphere.isPresent(mapAnchors), \"Atmosphere already added\");\n        if (this.m_skyMesh !== undefined) {\n            mapAnchors.add(createMapAnchor(this.m_skyMesh, Number.MIN_SAFE_INTEGER));\n        }\n        if (this.m_groundMesh !== undefined) {\n            mapAnchors.add(createMapAnchor(this.m_groundMesh, Number.MAX_SAFE_INTEGER));\n        }\n\n        // Request an update once the anchor is added to {@link MapView}.\n        if (this.m_updateCallback) {\n            this.m_updateCallback();\n        }\n    }\n\n    /**\n     * Handles atmosphere effect removal.\n     */\n    private removeFromMapAnchors(mapAnchors: MapAnchors) {\n        if (!MapViewAtmosphere.isPresent(mapAnchors)) {\n            return;\n        }\n        let update = false;\n        if (this.m_skyMesh !== undefined) {\n            mapAnchors.remove(this.m_skyMesh);\n            update = true;\n        }\n        if (this.m_groundMesh !== undefined) {\n            mapAnchors.remove(this.m_groundMesh);\n            update = true;\n        }\n        if (update && this.m_updateCallback) {\n            this.m_updateCallback();\n        }\n    }\n\n    private createSkyGeometry() {\n        switch (this.m_projection.type) {\n            case ProjectionType.Spherical:\n                this.m_skyGeometry = new THREE.SphereGeometry(\n                    EarthConstants.EQUATORIAL_RADIUS * (1 + SKY_ATMOSPHERE_ALTITUDE_FACTOR),\n                    256,\n                    256\n                );\n                break;\n            default: {\n                this.m_skyGeometry = new THREE.PlaneGeometry(200, 200);\n                break;\n            }\n        }\n\n        this.m_skyGeometry.translate(0, 0, 0);\n\n        if (this.m_materialVariant === AtmosphereShadingVariant.ScatteringShader) {\n            this.m_skyMaterial = new SkyAtmosphereMaterial({\n                rendererCapabilities: this.m_rendererCapabilities\n            });\n        } else if (this.m_materialVariant === AtmosphereShadingVariant.SimpleColor) {\n            this.m_skyMaterial = new THREE.MeshBasicMaterial({\n                color: new THREE.Color(0xc4f8ed),\n                opacity: 0.4,\n                transparent: false,\n                depthTest: true, // hide atmosphere behind globe (note: transparent changes order)\n                depthWrite: false,\n                side: THREE.BackSide,\n                blending: THREE.NormalBlending,\n                fog: false\n            });\n        } else {\n            this.m_skyMaterial = new THREE.MeshStandardMaterial({\n                color: 0x7fffff,\n                depthTest: false,\n                depthWrite: false,\n                normalScale: new THREE.Vector2(-1, -1),\n                side: THREE.BackSide, // not truly supported in wireframe mode\n                wireframe: true\n            });\n        }\n\n        this.m_skyMesh = new THREE.Mesh(this.m_skyGeometry, this.m_skyMaterial);\n        // Assign custom name so sky object may be easily recognized withing the scene.\n        this.m_skyMesh.name = MapViewAtmosphere.SkyAtmosphereUserName;\n        this.setupSkyForRendering();\n    }\n\n    private createGroundGeometry() {\n        switch (this.m_projection.type) {\n            case ProjectionType.Spherical:\n                this.m_groundGeometry = new THREE.SphereGeometry(\n                    EarthConstants.EQUATORIAL_RADIUS * (1 + GROUND_ATMOSPHERE_ALTITUDE_FACTOR),\n                    256,\n                    256\n                );\n                break;\n            default: {\n                this.m_groundGeometry = new THREE.PlaneGeometry(200, 200);\n                break;\n            }\n        }\n        this.m_groundGeometry.translate(0, 0, 0);\n\n        if (this.m_materialVariant === AtmosphereShadingVariant.ScatteringShader) {\n            this.m_groundMaterial = new GroundAtmosphereMaterial({\n                rendererCapabilities: this.m_rendererCapabilities\n            });\n        } else if (this.m_materialVariant === AtmosphereShadingVariant.SimpleColor) {\n            this.m_groundMaterial = new THREE.MeshBasicMaterial({\n                color: new THREE.Color(0x00c5ff),\n                opacity: 0.4,\n                transparent: true,\n                depthTest: false,\n                depthWrite: false,\n                side: THREE.FrontSide,\n                blending: THREE.NormalBlending,\n                fog: false\n            });\n        } else {\n            this.m_groundMaterial = new THREE.MeshStandardMaterial({\n                color: 0x11899a,\n                depthTest: true, // FrontSide is not fully supported, so need depth test\n                depthWrite: false,\n                side: THREE.FrontSide,\n                wireframe: true\n            });\n        }\n\n        this.m_groundMesh = new THREE.Mesh(this.m_groundGeometry, this.m_groundMaterial);\n        // Assign name so object may be recognized withing the scene.\n        this.m_groundMesh.name = MapViewAtmosphere.GroundAtmosphereUserName;\n\n        this.setupGroundForRendering();\n    }\n\n    private setupSkyForRendering(): void {\n        if (this.m_skyMesh === undefined) {\n            return;\n        }\n        // Depending on material variant we need to update uniforms or only\n        // update camera near/far planes cause camera need to see further then\n        // actual earth geometry.\n        let onBeforeCallback: (_camera: THREE.Camera, _material: THREE.Material) => void;\n        if (this.m_materialVariant !== AtmosphereShadingVariant.ScatteringShader) {\n            // Setup only further clip planes before rendering.\n            onBeforeCallback = (camera: THREE.Camera, _material: THREE.Material) => {\n                this.overrideClipPlanes(camera);\n            };\n        } else {\n            // Setup proper clip planes and update uniforms values.\n            onBeforeCallback = (camera: THREE.Camera, material: THREE.Material) => {\n                this.overrideClipPlanes(camera);\n                // Check material wasn't swapped.\n                assert(material instanceof SkyAtmosphereMaterial);\n                const mat = this.m_skyMaterial as SkyAtmosphereMaterial;\n                mat.updateUniforms(mat, this.m_skyMesh!, camera, this.m_lightDirection);\n            };\n        }\n\n        // Sky material should be already created with mesh.\n        assert(this.m_skyMaterial !== undefined);\n        this.m_skyMesh.onBeforeRender = (\n            _renderer: THREE.WebGLRenderer,\n            _scene: THREE.Scene,\n            camera: THREE.Camera,\n            _geometry: THREE.BufferGeometry,\n            material: THREE.Material,\n            _group: THREE.Group\n        ) => {\n            onBeforeCallback(camera, material);\n        };\n\n        this.m_skyMesh.onAfterRender = (\n            _renderer: THREE.WebGLRenderer,\n            _scene: THREE.Scene,\n            camera: THREE.Camera,\n            _geometry: THREE.BufferGeometry,\n            _material: THREE.Material,\n            _group: THREE.Group\n        ) => {\n            this.revertClipPlanes(camera);\n        };\n    }\n\n    private setupGroundForRendering(): void {\n        if (this.m_groundMesh === undefined) {\n            return;\n        }\n        if (this.m_materialVariant !== AtmosphereShadingVariant.ScatteringShader) {\n            return;\n        }\n        // Ground material should be already created.\n        assert(this.m_groundMaterial !== undefined);\n        // Ground mesh does not need custom clip planes and uses the same camera setup as\n        // real (data source based) geometry.\n        this.m_groundMesh.onBeforeRender = (\n            _renderer: THREE.WebGLRenderer,\n            _scene: THREE.Scene,\n            camera: THREE.Camera,\n            _geometry: THREE.BufferGeometry,\n            material: THREE.Material,\n            _group: THREE.Group\n        ) => {\n            assert(material instanceof GroundAtmosphereMaterial);\n            const mat = this.m_groundMaterial as GroundAtmosphereMaterial;\n            mat.updateUniforms(mat, this.m_groundMesh!, camera, this.m_lightDirection);\n        };\n    }\n\n    private overrideClipPlanes(rteCamera: THREE.Camera) {\n        // Store current clip planes used by global camera before modifying them.\n        const sceneCam = this.m_sceneCamera as THREE.PerspectiveCamera;\n        cache.clipPlanes.near = sceneCam.near;\n        cache.clipPlanes.far = sceneCam.far;\n        // Calculate view ranges using world camera.\n        // NOTE: ElevationProvider is not passed to evaluator, leaves min/max altitudes unchanged.\n        const viewRanges = this.m_clipPlanesEvaluator.evaluateClipPlanes(\n            this.m_sceneCamera,\n            this.m_projection\n        );\n        // Update relative to eye camera used internally in rendering.\n        assert(rteCamera instanceof THREE.PerspectiveCamera);\n        const c = rteCamera as THREE.PerspectiveCamera;\n        c.near = viewRanges.near;\n        // Small margin ensures that we never cull small triangles just below or at\n        // horizon - possible due to frustum culling in-precisions.\n        c.far = viewRanges.far + EarthConstants.EQUATORIAL_RADIUS * 0.1;\n        c.updateProjectionMatrix();\n    }\n\n    private revertClipPlanes(rteCamera: THREE.Camera) {\n        assert(rteCamera instanceof THREE.PerspectiveCamera);\n        const c = rteCamera as THREE.PerspectiveCamera;\n        // Restore scene camera clip planes.\n        c.near = cache.clipPlanes.near;\n        c.far = cache.clipPlanes.far;\n        c.updateProjectionMatrix();\n    }\n}\n\nfunction createMapAnchor(mesh: THREE.Mesh, renderOrder: number): MapAnchor<THREE.Mesh> {\n    const anchor = mesh as MapAnchor<THREE.Mesh>;\n    anchor.renderOrder = renderOrder;\n    anchor.pickable = false;\n    anchor.anchor = new THREE.Vector3(0, 0, 0);\n    return anchor;\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { GradientSky, Light, Sky } from \"@here/harp-datasource-protocol\";\nimport { ProjectionType, Vector3Like } from \"@here/harp-geoutils\";\nimport { getOptionValue, LoggerManager } from \"@here/harp-utils\";\nimport THREE = require(\"three\");\n\nimport { BackgroundDataSource } from \"./BackgroundDataSource\";\nimport { MapView, MapViewOptions } from \"./MapView\";\nimport { MapViewFog } from \"./MapViewFog\";\nimport { SkyBackground } from \"./SkyBackground\";\nimport { createLight } from \"./ThemeHelpers\";\n\nconst logger = LoggerManager.instance.create(\"MapViewEnvironment\");\n\n//  the default breaks the ibct tests, seems it had not been used in all cases before\n\nexport const DEFAULT_CLEAR_COLOR = 0xffffff; //0xefe9e1;\n\nconst cache = {\n    vector3: [new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()],\n    frustumPoints: [\n        new THREE.Vector3(),\n        new THREE.Vector3(),\n        new THREE.Vector3(),\n        new THREE.Vector3(),\n        new THREE.Vector3(),\n        new THREE.Vector3(),\n        new THREE.Vector3(),\n        new THREE.Vector3()\n    ]\n};\n\nexport type MapViewEnvironmentOptions = Pick<\n    MapViewOptions,\n    \"addBackgroundDatasource\" | \"backgroundTilingScheme\"\n>;\n/**\n * Class handling the Scene Environment, like fog, sky, background datasource, clearColor etc\n *  for MapView\n */\nexport class MapViewEnvironment {\n    private readonly m_fog: MapViewFog;\n    private m_skyBackground?: SkyBackground;\n    private m_createdLights?: THREE.Light[];\n    private m_overlayCreatedLights?: THREE.Light[];\n    private readonly m_backgroundDataSource?: BackgroundDataSource;\n\n    constructor(private readonly m_mapView: MapView, options: MapViewEnvironmentOptions) {\n        this.m_fog = new MapViewFog(this.m_mapView.scene);\n        if (options.addBackgroundDatasource !== false) {\n            this.m_backgroundDataSource = new BackgroundDataSource();\n            this.m_mapView.addDataSource(this.m_backgroundDataSource);\n        }\n        if (\n            options.backgroundTilingScheme !== undefined &&\n            this.m_backgroundDataSource !== undefined\n        ) {\n            this.m_backgroundDataSource.setTilingScheme(options.backgroundTilingScheme);\n        }\n        this.updateClearColor();\n    }\n\n    get lights(): THREE.Light[] {\n        return this.m_createdLights ?? [];\n    }\n\n    get fog(): MapViewFog {\n        return this.m_fog;\n    }\n\n    updateBackgroundDataSource() {\n        if (this.m_backgroundDataSource) {\n            this.m_backgroundDataSource.updateStorageLevelOffset();\n        }\n    }\n\n    clearBackgroundDataSource() {\n        if (this.m_backgroundDataSource !== undefined) {\n            this.m_mapView.clearTileCache(this.m_backgroundDataSource.name);\n        }\n    }\n\n    update() {\n        this.m_fog.update(this.m_mapView, this.m_mapView.viewRanges.maximum);\n        if (\n            this.m_skyBackground !== undefined &&\n            this.m_mapView.projection.type === ProjectionType.Planar\n        ) {\n            this.m_skyBackground.updateCamera(this.m_mapView.camera);\n        }\n        this.updateLights();\n    }\n\n    updateClearColor(clearColor?: string, clearAlpha?: number) {\n        if (clearColor !== undefined) {\n            this.m_mapView.renderer.setClearColor(new THREE.Color(clearColor), clearAlpha);\n        } else {\n            this.m_mapView.renderer.setClearColor(DEFAULT_CLEAR_COLOR, clearAlpha);\n        }\n    }\n\n    updateSkyBackground(sky?: Sky, clearColor?: string) {\n        if (this.m_skyBackground instanceof SkyBackground && sky !== undefined) {\n            // there is a sky in the view and there is a sky option in the theme. Update the colors\n            this.updateSkyBackgroundColors(sky, clearColor);\n        } else if (this.m_skyBackground === undefined && sky !== undefined) {\n            // there is no sky in the view but there is a sky option in the theme\n            this.addNewSkyBackground(sky, clearColor);\n            return;\n        } else if (this.m_skyBackground instanceof SkyBackground && sky === undefined) {\n            // there is a sky in the view, but not in the theme\n            this.removeSkyBackGround();\n        }\n    }\n\n    updateLighting(lights?: Light[]) {\n        if (this.m_createdLights) {\n            this.m_createdLights.forEach((light: THREE.Light) => {\n                this.m_mapView.scene.remove(light);\n            });\n        }\n\n        this.m_overlayCreatedLights?.forEach(light => {\n            this.m_mapView.overlayScene.remove(light);\n            if (light instanceof THREE.DirectionalLight) {\n                this.m_mapView.overlayScene.remove(light.target);\n            }\n        });\n\n        if (lights !== undefined) {\n            this.m_createdLights = [];\n            this.m_overlayCreatedLights = [];\n\n            lights.forEach((lightDescription: Light) => {\n                const light = createLight(lightDescription);\n                if (!light) {\n                    logger.warn(\n                        `MapView: failed to create light ${lightDescription.name} of type ${lightDescription.type}`\n                    );\n                    return;\n                }\n                this.m_mapView.scene.add(light);\n\n                if ((light as any).isDirectionalLight) {\n                    const directionalLight = light as THREE.DirectionalLight;\n                    // This is needed so that the target is updated automatically, see:\n                    // https://threejs.org/docs/#api/en/lights/DirectionalLight.target\n                    this.m_mapView.scene.add(directionalLight.target);\n                }\n                this.m_createdLights!.push(light);\n\n                const clonedLight: THREE.Light = light.clone() as THREE.Light;\n                this.m_mapView.overlayScene.add(clonedLight);\n                if (clonedLight instanceof THREE.DirectionalLight) {\n                    this.m_mapView.overlayScene.add(clonedLight.target.clone());\n                }\n            });\n        }\n    }\n\n    /**\n     * Update the directional light camera. Note, this requires the cameras to first be updated.\n     */\n    updateLights() {\n        // TODO: HARP-9479 Globe doesn't support shadows.\n        if (\n            !this.m_mapView.shadowsEnabled ||\n            this.m_mapView.projection.type === ProjectionType.Spherical ||\n            this.m_createdLights === undefined ||\n            this.m_createdLights.length === 0\n        ) {\n            return;\n        }\n\n        const points: Vector3Like[] = [\n            // near plane points\n            { x: -1, y: -1, z: -1 },\n            { x: 1, y: -1, z: -1 },\n            { x: -1, y: 1, z: -1 },\n            { x: 1, y: 1, z: -1 },\n\n            // far planes points\n            { x: -1, y: -1, z: 1 },\n            { x: 1, y: -1, z: 1 },\n            { x: -1, y: 1, z: 1 },\n            { x: 1, y: 1, z: 1 }\n        ];\n        const transformedPoints = points.map((p, i) =>\n            this.m_mapView.ndcToView(p, cache.frustumPoints[i])\n        );\n\n        this.m_createdLights.forEach(element => {\n            const directionalLight = element as THREE.DirectionalLight;\n            if (directionalLight.isDirectionalLight === true) {\n                const lightDirection = cache.vector3[0];\n                lightDirection.copy(directionalLight.target.position);\n                lightDirection.sub(directionalLight.position);\n                lightDirection.normalize();\n\n                const normal = cache.vector3[1];\n                if (this.m_mapView.projection.type === ProjectionType.Planar) {\n                    // -Z points to the camera, we can't use Projection.surfaceNormal, because\n                    // webmercator and mercator give different results.\n                    normal.set(0, 0, -1);\n                } else {\n                    // Enable shadows for globe...\n                    //this.projection.surfaceNormal(target, normal);\n                }\n\n                // The camera of the shadow has the same height as the map camera, and the target is\n                // also the same. The position is then calculated based on the light direction and\n                // the height\n                // using basic trigonometry.\n                const tilt = this.m_mapView.tilt;\n                const cameraHeight =\n                    this.m_mapView.targetDistance * Math.cos(THREE.MathUtils.degToRad(tilt));\n                const lightPosHyp = cameraHeight / normal.dot(lightDirection);\n\n                directionalLight.target.position\n                    .copy(this.m_mapView.worldTarget)\n                    .sub(this.m_mapView.camera.position);\n                directionalLight.position.copy(this.m_mapView.worldTarget);\n                directionalLight.position.addScaledVector(lightDirection, -lightPosHyp);\n                directionalLight.position.sub(this.m_mapView.camera.position);\n                directionalLight.updateMatrixWorld();\n                directionalLight.shadow.updateMatrices(directionalLight);\n\n                const camera = directionalLight.shadow.camera;\n                const pointsInLightSpace = transformedPoints.map(p =>\n                    this.viewToLightSpace(p.clone(), camera)\n                );\n\n                const box = new THREE.Box3();\n                pointsInLightSpace.forEach(point => {\n                    box.expandByPoint(point);\n                });\n                camera.left = box.min.x;\n                camera.right = box.max.x;\n                camera.top = box.max.y;\n                camera.bottom = box.min.y;\n                // Moving back to the light the near plane in order to catch high buildings, that\n                // are not visible by the camera, but existing on the scene.\n                camera.near = -box.max.z * 0.95;\n                camera.far = -box.min.z;\n                camera.updateProjectionMatrix();\n            }\n        });\n    }\n\n    private addNewSkyBackground(sky: Sky, clearColor: string | undefined) {\n        if (sky.type === \"gradient\" && (sky as GradientSky).groundColor === undefined) {\n            sky.groundColor = getOptionValue(clearColor, \"#000000\");\n        }\n        this.m_skyBackground = new SkyBackground(\n            sky,\n            this.m_mapView.projection.type,\n            this.m_mapView.camera\n        );\n        this.m_mapView.scene.background = this.m_skyBackground.texture;\n    }\n\n    private removeSkyBackGround() {\n        this.m_mapView.scene.background = null;\n        if (this.m_skyBackground !== undefined) {\n            this.m_skyBackground.dispose();\n            this.m_skyBackground = undefined;\n        }\n    }\n\n    private updateSkyBackgroundColors(sky: Sky, clearColor: string | undefined) {\n        if (sky.type === \"gradient\" && (sky as GradientSky).groundColor === undefined) {\n            sky.groundColor = getOptionValue(clearColor, \"#000000\");\n        }\n        if (this.m_skyBackground !== undefined) {\n            this.m_skyBackground.updateTexture(sky, this.m_mapView.projection.type);\n            this.m_mapView.scene.background = this.m_skyBackground?.texture;\n        }\n    }\n\n    /**\n     * Transfer from view space to camera space.\n     * @param viewPos - position in view space, result is stored here.\n     */\n    private viewToLightSpace(viewPos: THREE.Vector3, camera: THREE.Camera): THREE.Vector3 {\n        return viewPos.applyMatrix4(camera.matrixWorldInverse);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Fog } from \"@here/harp-datasource-protocol\";\nimport { HighPrecisionLineMaterial } from \"@here/harp-materials\";\nimport { RawShaderMaterial } from \"@here/harp-materials/lib/RawShaderMaterial\";\nimport { assert, MathUtils } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { MapView } from \"./MapView\";\n\n/**\n * Manages the fog display in {@link MapView}.\n */\nexport class MapViewFog {\n    private m_enabled: boolean = true;\n    private m_fog: THREE.Fog = new THREE.Fog(0x000000); // Default color asked by DefinitelyTyped.\n    private m_fogIsDefined: boolean = false;\n    private m_cachedFog: Fog | undefined;\n\n    /**\n     * Constructs a `MapViewFog` instance.\n     *\n     * @param m_scene - The scene used in {@link MapView} that contains the map objects.\n     */\n    constructor(private m_scene: THREE.Scene) {}\n\n    /**\n     * Allows for disabling the fog, even if it is defined in the theme. Use this property for\n     * custom views like the demo app's debug camera. However, if the theme does not define a\n     * fog, enabling this property here has no effect.\n     *\n     * @param value - A boolean that specifies whether the fog should be enabled or disabled.\n     */\n    set enabled(enableFog: boolean) {\n        this.m_enabled = enableFog;\n        if (enableFog && this.m_fogIsDefined && this.m_scene.fog === null) {\n            this.add();\n        } else if (!enableFog && this.m_scene.fog !== null) {\n            this.remove();\n        }\n    }\n\n    /**\n     * Returns the current fog status, enabled or disabled.\n     */\n    get enabled(): boolean {\n        return this.m_enabled;\n    }\n\n    /**\n     * Sets the fog depending on the {@link @here/harp-datasource-protocol#Theme}\n     * instance provided. This function is called when a\n     * theme is loaded. Fog is added only if the theme contains a fog definition with a:\n     * - `color` property, used to set the fog color.\n     * - `startRatio` property, used to set the start distance of the fog as a ratio of the far\n     * clipping plane distance.\n     *\n     * @param theme - A {@link @here/harp-datasource-protocol#Theme} instance.\n     */\n    reset(fog?: Fog) {\n        this.m_cachedFog = fog;\n        if (fog !== undefined && fog.color !== undefined && fog.startRatio !== undefined) {\n            this.m_fogIsDefined = true;\n            this.m_fog.color.set(fog.color);\n            if (this.m_enabled && this.m_scene.fog === null) {\n                this.add();\n            }\n        } else {\n            this.m_fogIsDefined = false;\n            if (this.m_scene.fog !== null) {\n                this.remove();\n            }\n        }\n    }\n\n    /**\n     * Updates the fog at runtime, depending on the camera.\n     *\n     * @param camera - An instance of a `THREE.Camera` with a `far` property.\n     */\n    update(mapView: MapView, viewDistance?: number) {\n        if (\n            this.m_scene.fog !== null &&\n            this.m_cachedFog !== undefined &&\n            this.m_cachedFog &&\n            this.m_cachedFog.startRatio !== undefined &&\n            (mapView.camera.far !== undefined || viewDistance !== undefined)\n        ) {\n            // If maximum visibility range is available use it instead of camera.far distance,\n            // this makes fog independent from dynamic camera planes and keeps consistent\n            // distance based \"melting\" (fog) effect during a tilt.\n            const viewRange = viewDistance !== undefined ? viewDistance : mapView.camera.far;\n            // TODO: We may move below constants to theme Fog definition\n            // Density of the fog when viewing straight along the horizon line.\n            const horizontalDensity = 1.0;\n            // Theoretical density of the fog when viewing straight from top to down.\n            const verticalDensity = 0.0;\n            // The fraction of the maximum viewing distance along the eye vector\n            // to start applying the fog.\n            const startRatio = this.m_cachedFog.startRatio;\n            // The fraction of maximum viewing range at which fog fully covers geometry.\n            const endRatio = 1.0;\n            assert(startRatio <= endRatio);\n            const t = Math.abs(Math.cos(mapView.tilt));\n            const density = MathUtils.smoothStep(horizontalDensity, verticalDensity, t);\n            this.m_fog.near = THREE.MathUtils.lerp(\n                viewRange * startRatio,\n                viewRange,\n                1.0 - density\n            );\n            this.m_fog.far = THREE.MathUtils.lerp(viewRange * endRatio, viewRange, density);\n            this.m_fog.near = Math.min(this.m_fog.near, mapView.camera.far);\n            this.m_fog.far = Math.min(this.m_fog.far, mapView.camera.far);\n        }\n    }\n\n    /**\n     * Handles fog addition.\n     */\n    private add() {\n        // When the fog is changed, ThreeJS takes care of recompiling its built-in materials...\n        this.m_scene.fog = this.m_fog;\n        // ...except the `RawShaderMaterial`, on purpose, so it needs to be updated from the app.\n        this.setFogInRawShaderMaterials(true);\n    }\n\n    /**\n     * Handles fog removal.\n     */\n    private remove() {\n        // When the fog is changed, ThreeJS takes care of recompiling its built-in materials...\n        this.m_scene.fog = null;\n        // ...except the `RawShaderMaterial`, on purpose, so it needs to be updated from the app.\n        this.setFogInRawShaderMaterials(false);\n    }\n\n    /**\n     * ThreeJS lets users manage the `RawShaderMaterial` themselves, so they need to be modified\n     * explicitly.\n     *\n     * @see https://github.com/mrdoob/three.js/blob/dev/src/renderers/webgl/WebGLProgram.js#L298\n     */\n    private setFogInRawShaderMaterials(enableFog: boolean) {\n        this.m_scene.traverse(object => {\n            if (object instanceof THREE.Mesh) {\n                const material = object.material;\n                if (\n                    material instanceof THREE.Material &&\n                    // HighPrecisionLineMaterial does not support fog:\n                    !(material instanceof HighPrecisionLineMaterial) &&\n                    // We may skip redundant updates:\n                    material.fog !== enableFog\n                ) {\n                    material.fog = enableFog;\n                    if (material instanceof RawShaderMaterial) {\n                        // Fog properties can't be easily changed at runtime (once the material\n                        // is rendered at least once) and thus requires building of new shader\n                        // program - force material update.\n                        material.invalidateFog();\n                    }\n                }\n            }\n        });\n    }\n}\n","/*\n * Copyright (C) 2018-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { PickingRaycaster } from \"./PickingRaycaster\";\n\n/**\n * `MapViewPoints` is a class to extend for the `\"circles\"` and `\"squares\"` techniques to\n * implement raycasting of `THREE.Points` as expected in {@link MapView},\n * that are in screen space.\n *\n * @remarks\n * It copies the behaviour of the `raycast` method in [[THREE.Points]] and dispatches it to its\n * children classes, {@link Circles} and {@link Squares}, who hold the intersection testing in the\n * `testPoint` method. This class also has the ability to dismiss the testing via the\n * `enableRayTesting` flag.\n *\n * Its main motivation is to handle the point styles of XYZ projects.\n *\n * @see https://github.com/mrdoob/three.js/blob/master/src/objects/Points.js\n *\n * @internal\n */\nexport abstract class MapViewPoints extends THREE.Points {\n    /**\n     * This allows to discard the ray testing.\n     */\n    enableRayTesting: boolean = true;\n\n    /**\n     * Implements the intersection testing in screen space between the drawn points and the ray.\n     *\n     * @remarks The drawing of the points being different between {@link Circles}\n     * and {@link Squares}, this method is implemented in these child classes.\n     *\n     * @param point - The point to test.\n     * @param screenPosition - The point position on screen.\n     * @param pickCoordinates - The picking position on screen.\n     * @param index - The index of the point in the [[THREE.BufferGeometry]].\n     * @param distance - The distance between the point and the ray origin.\n     * @param intersects - The results array.\n     */\n    abstract testPoint(\n        point: THREE.Vector3,\n        screenPosition: THREE.Vector2,\n        pickCoordinates: THREE.Vector2,\n        index: number,\n        distance: number,\n        intersects: THREE.Intersection[]\n    ): void;\n\n    /**\n     * This method is similar to the original method `raycast` in [[THREE.Points]] except that it\n     * then calls the tailored `testPoint` method in the children classes to test intersections\n     * depending on whether the points are circles or squares, which [[THREE.Points]] cannot do.\n     *\n     * @param raycaster - The raycaster.\n     * @param intersects - The array to fill with the results.\n     */\n    raycast(raycaster: PickingRaycaster, intersects: THREE.Intersection[]) {\n        if (!this.enableRayTesting) {\n            return;\n        }\n\n        const geometry = this.geometry;\n        const matrixWorld = this.matrixWorld;\n        const ndc = raycaster.ray.origin\n            .clone()\n            .add(raycaster.ray.direction)\n            .project(raycaster.camera);\n        const mouseCoords = ndcToScreen(ndc, raycaster);\n\n        const testPoint = (point: THREE.Vector3, index: number) => {\n            const pointInfo = getPointInfo(point, matrixWorld, raycaster);\n            if (pointInfo.pointIsOnScreen) {\n                this.testPoint(\n                    point,\n                    pointInfo.absoluteScreenPosition!,\n                    mouseCoords,\n                    index,\n                    pointInfo.distance!,\n                    intersects\n                );\n            }\n        };\n\n        const point = new THREE.Vector3();\n        const index = geometry.index;\n        const attributes = geometry.attributes;\n        const positions = attributes.position.array;\n        if (index !== null) {\n            const indices = index.array;\n            for (let i = 0, il = indices.length; i < il; i++) {\n                testPoint(point.fromArray(positions as number[], indices[i] * 3), i);\n            }\n        } else {\n            for (let i = 0, l = positions.length / 3; i < l; i++) {\n                testPoint(point.fromArray(positions as number[], i * 3), i);\n            }\n        }\n    }\n}\n\nfunction ndcToScreen(ndc: THREE.Vector3, raycaster: PickingRaycaster): THREE.Vector2 {\n    return new THREE.Vector2(ndc.x + 1, 1 - ndc.y)\n        .divideScalar(2)\n        .multiply(raycaster.canvasSize)\n        .ceil();\n}\n\nfunction getPointInfo(\n    point: THREE.Vector3,\n    matrixWorld: THREE.Matrix4,\n    raycaster: PickingRaycaster\n): {\n    pointIsOnScreen: boolean;\n    absoluteScreenPosition?: THREE.Vector2;\n    distance?: number;\n} {\n    const worldPosition = point.clone().applyMatrix4(matrixWorld);\n    const distance = worldPosition.distanceTo(raycaster.ray.origin);\n    const ndc = worldPosition.project(raycaster.camera);\n    const pointIsOnScreen = ndc.x < 1 && ndc.x > -1 && ndc.y < 1 && ndc.y > -1;\n    if (pointIsOnScreen) {\n        const absoluteScreenPosition = ndcToScreen(ndc, raycaster);\n        return {\n            absoluteScreenPosition,\n            pointIsOnScreen,\n            distance\n        };\n    }\n    return {\n        pointIsOnScreen\n    };\n}\n\n/**\n * Point object that implements the raycasting of circles in screen space.\n * @internal\n */\nexport class Circles extends MapViewPoints {\n    /** @override */\n    testPoint(\n        point: THREE.Vector3,\n        screenPosition: THREE.Vector2,\n        pickCoordinates: THREE.Vector2,\n        index: number,\n        distance: number,\n        intersects: THREE.Intersection[]\n    ) {\n        const dx = screenPosition.x - pickCoordinates.x;\n        const dy = screenPosition.y - pickCoordinates.y;\n        const dist = Math.sqrt(dx * dx + dy * dy);\n        const radius = (this.material as THREE.PointsMaterial).size / 2;\n\n        if (dist <= radius) {\n            intersects.push({\n                point,\n                distance,\n                index,\n                object: this\n            });\n        }\n    }\n}\n\n/**\n * Point object that implements the raycasting of squares in screen space.\n * @internal\n */\nexport class Squares extends MapViewPoints {\n    /** @override */\n    testPoint(\n        point: THREE.Vector3,\n        screenPosition: THREE.Vector2,\n        pickCoordinates: THREE.Vector2,\n        index: number,\n        distance: number,\n        intersects: THREE.Intersection[]\n    ) {\n        const dx = screenPosition.x - pickCoordinates.x;\n        const dy = screenPosition.y - pickCoordinates.y;\n        const halfSize = (this.material as THREE.PointsMaterial).size / 2;\n\n        if (Math.abs(dx) <= halfSize && Math.abs(dy) <= halfSize) {\n            intersects.push({\n                point,\n                distance,\n                index,\n                object: this\n            });\n        }\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { PerformanceTimer, Task, TaskQueue } from \"@here/harp-utils\";\nimport THREE = require(\"three\");\n\nimport { TileTaskGroups } from \"./MapView\";\nimport { PerformanceStatistics } from \"./Statistics\";\n\nconst DEFAULT_MAX_FPS = 60;\nconst DEFAULT_PROCESSING_ESTIMATE_TIME = 2;\nconst UPDATE_EVENT = { type: \"update\" };\n\nexport class MapViewTaskScheduler extends THREE.EventDispatcher {\n    private readonly m_taskQueue: TaskQueue;\n    private m_throttlingEnabled: boolean = false;\n\n    constructor(private m_maxFps: number = DEFAULT_MAX_FPS) {\n        super();\n        this.m_taskQueue = new TaskQueue({\n            groups: [TileTaskGroups.FETCH_AND_DECODE, TileTaskGroups.CREATE],\n            prioSortFn: (a: Task, b: Task) => {\n                return a.getPriority() - b.getPriority();\n            }\n        });\n        this.maxFps = m_maxFps;\n    }\n\n    set maxFps(fps: number) {\n        this.m_maxFps = fps <= 0 ? DEFAULT_MAX_FPS : fps;\n    }\n\n    get maxFps(): number {\n        return this.m_maxFps;\n    }\n\n    get taskQueue() {\n        return this.m_taskQueue;\n    }\n\n    get throttlingEnabled(): boolean {\n        return this.m_throttlingEnabled === true;\n    }\n\n    set throttlingEnabled(enabled: boolean) {\n        this.m_throttlingEnabled = enabled;\n    }\n\n    /**\n     * Sends a request to the [[MapView]] to redraw the scene.\n     */\n    requestUpdate() {\n        this.dispatchEvent(UPDATE_EVENT);\n    }\n\n    /**\n     * Processes the pending Tasks of the underlying [[TaskQueue]]\n     * !! This should run at the end of the renderLoop, so the calculations of the available\n     * frame time are better estimated\n     *\n     * @param frameStartTime the start time of the current frame, is used to calculate the\n     * still available time in the frame to process Tasks\n     *\n     */\n    processPending(frameStartTime: number) {\n        const stats = PerformanceStatistics.instance;\n        const currentFrameEvent = stats.enabled ? stats.currentFrame : undefined;\n        let startTime: number | undefined;\n        if (stats.enabled) {\n            startTime = PerformanceTimer.now();\n        }\n\n        //update the task queue, to remove expired and sort with priority\n        this.m_taskQueue.update();\n        let numItemsLeft = this.taskQueue.numItemsLeft();\n        currentFrameEvent?.setValue(\"TaskScheduler.numPendingTasks\", numItemsLeft);\n\n        if (this.throttlingEnabled) {\n            // get the available time in this frame to achieve a max fps rate\n            let availableTime = this.spaceInFrame(frameStartTime);\n            // get some buffer to balance the inaccurate estimates\n            availableTime = availableTime > 2 ? availableTime - 2 : availableTime;\n            currentFrameEvent?.setValue(\"TaskScheduler.estimatedAvailableTime\", availableTime);\n\n            let counter = 0;\n            // check if ther is still time available and tasks left\n            while (availableTime > 0 && numItemsLeft > 0) {\n                counter++;\n                // create a processing condition for the tasks\n                function shouldProcess(task: Task) {\n                    // if there is a time estimate use it, otherwise default to 1 ms\n                    // TODO: check whats a sane default, 1 seems to do it for now\n                    availableTime -=\n                        task.estimatedProcessTime?.() ?? DEFAULT_PROCESSING_ESTIMATE_TIME;\n                    // always process at least 1 Task, so in the worst case the fps over tiles\n                    // paradigma is sacrificed to not have an empty screen\n                    if (availableTime > 0 || counter === 1) {\n                        return true;\n                    }\n                    return false;\n                }\n\n                // process the CREATE tasks first, as they will have a faster result on the\n                // visual outcome and have already spend time in the application during\n                // fetching and decoding\n                // fetching has lower priority as it wont make to much of a difference if not\n                // called at the exact frame, and the tile might expire in the next anyway\n                [TileTaskGroups.CREATE, TileTaskGroups.FETCH_AND_DECODE].forEach(tag => {\n                    if (this.m_taskQueue.numItemsLeft(tag)) {\n                        //TODO:\n                        // * if one tag task does not fit another might, how to handle this?\n                        // *    ** what if a task of another group could fit instead\n                        // * whats the average of time we have here at this point in the programm?\n                        this.m_taskQueue.processNext(tag, shouldProcess);\n                    }\n                });\n                numItemsLeft = this.m_taskQueue.numItemsLeft();\n            }\n            // if there is tasks left in the TaskQueue, request an update to be able to process them\n            // in a next frame\n            numItemsLeft = this.m_taskQueue.numItemsLeft();\n            if (numItemsLeft > 0) {\n                currentFrameEvent?.setValue(\n                    \"TaskScheduler.pendingTasksNotYetProcessed\",\n                    numItemsLeft\n                );\n                this.requestUpdate();\n            }\n        } else {\n            //if throttling is disabled, process all pending tasks\n            this.m_taskQueue.processNext(\n                TileTaskGroups.CREATE,\n                undefined,\n                this.m_taskQueue.numItemsLeft(TileTaskGroups.CREATE)\n            );\n            this.m_taskQueue.processNext(\n                TileTaskGroups.FETCH_AND_DECODE,\n                undefined,\n                this.m_taskQueue.numItemsLeft(TileTaskGroups.FETCH_AND_DECODE)\n            );\n        }\n\n        if (stats.enabled) {\n            currentFrameEvent?.setValue(\n                \"TaskScheduler.pendingTasksTime\",\n                PerformanceTimer.now() - startTime!\n            );\n        }\n    }\n\n    /**\n     * Removes all tasks that have been queued.\n     */\n    clearQueuedTasks() {\n        this.m_taskQueue.clear();\n    }\n\n    private spaceInFrame(frameStartTime: number): number {\n        const passedTime = (performance || Date).now() - frameStartTime;\n        return Math.max(1000 / this.m_maxFps - passedTime, 0);\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    FlatTheme,\n    ImageDefinitions,\n    ImageTexture,\n    PoiTableRef,\n    Theme\n} from \"@here/harp-datasource-protocol\";\nimport { LoggerManager, UriResolver } from \"@here/harp-utils\";\n\nimport { MapViewImageCache } from \"./image/MapViewImageCache\";\nimport { MapView } from \"./MapView\";\nimport { ThemeLoader } from \"./ThemeLoader\";\n\nconst logger = LoggerManager.instance.create(\"MapViewThemeManager\");\n\n/**\n * Class handling theme updates for MapView\n */\nexport class MapViewThemeManager {\n    private readonly m_imageCache: MapViewImageCache;\n    private m_updatePromise: Promise<void> | undefined;\n    private m_abortControllers: AbortController[] = [];\n    private m_theme: Theme = {};\n\n    constructor(private readonly m_mapView: MapView, private readonly m_uriResolver?: UriResolver) {\n        this.m_imageCache = new MapViewImageCache();\n    }\n\n    async setTheme(theme: Theme | FlatTheme | string): Promise<Theme> {\n        if (this.isUpdating()) {\n            logger.warn(\"Formerly set Theme is still updating, update will be canceled\");\n            this.cancelThemeUpdate();\n        }\n\n        this.m_updatePromise = this.loadTheme(theme).then(async theme => {\n            await this.updateTheme(theme);\n        });\n        await this.m_updatePromise;\n        this.m_updatePromise = undefined;\n        return this.m_theme;\n    }\n\n    async getTheme(): Promise<Theme> {\n        if (this.isUpdating()) {\n            await this.m_updatePromise;\n        }\n        return this.m_theme;\n    }\n\n    isUpdating(): boolean {\n        return this.m_updatePromise !== undefined;\n    }\n\n    /**\n     * @deprecated\n     * A helper for the deprecated MapView.theme getter, remove when\n     * after deprecation\n     */\n    get theme() {\n        return this.isUpdating() ? {} : this.m_theme;\n    }\n\n    private async loadTheme(theme: Theme | string | FlatTheme): Promise<Theme> {\n        let loadedTheme: Theme = {};\n        if (typeof theme === \"string\" || !ThemeLoader.isThemeLoaded(theme)) {\n            try {\n                loadedTheme = await ThemeLoader.load(theme, {\n                    uriResolver: this.m_uriResolver,\n                    signal: this.createAbortController().signal\n                });\n            } catch (error) {\n                if (error.name === \"AbortError\") {\n                    logger.warn(`theme loading was aborted due to: ${error}`);\n                } else {\n                    logger.error(`failed to load theme: ${error}`);\n                }\n            }\n        } else {\n            loadedTheme = theme as Theme;\n        }\n        return loadedTheme;\n    }\n\n    private async updateTheme(theme: Theme): Promise<void> {\n        const environment = this.m_mapView.sceneEnvironment;\n        // Fog and sky.\n        this.m_theme.fog = theme.fog;\n        this.m_theme.sky = theme.sky;\n        environment.updateSkyBackground(theme.sky);\n        environment.fog.reset(theme.fog);\n\n        this.m_theme.lights = theme.lights;\n        environment.updateLighting(theme.lights);\n\n        // Clear color.\n        this.m_theme.clearColor = theme.clearColor;\n        this.m_theme.clearAlpha = theme.clearAlpha;\n        environment.updateClearColor(theme.clearColor, theme.clearAlpha);\n\n        // Images.\n        this.m_theme.images = theme.images;\n        this.m_theme.imageTextures = theme.imageTextures;\n        await this.updateImages(theme.images, theme.imageTextures);\n\n        // POI tables.\n        this.m_theme.poiTables = theme.poiTables;\n        await this.loadPoiTables(theme.poiTables);\n        // Text.\n        this.m_theme.textStyles = theme.textStyles;\n        this.m_theme.defaultTextStyle = theme.defaultTextStyle;\n        this.m_theme.fontCatalogs = theme.fontCatalogs;\n\n        await this.m_mapView.resetTextRenderer(\n            theme.fontCatalogs,\n            theme.textStyles,\n            theme.defaultTextStyle\n        );\n\n        if (Array.isArray(theme.priorities)) {\n            this.m_theme.priorities = theme.priorities;\n        }\n        this.m_mapView.mapAnchors.setPriorities(theme.priorities ?? []);\n\n        if (Array.isArray(theme.labelPriorities)) {\n            this.m_theme.labelPriorities = theme.labelPriorities;\n        }\n\n        if (this.m_theme.styles === undefined) {\n            this.m_theme.styles = {};\n        }\n\n        this.m_theme.styles = theme.styles ?? {};\n        this.m_theme.definitions = theme.definitions;\n\n        environment.clearBackgroundDataSource();\n        for (const dataSource of this.m_mapView.dataSources) {\n            await dataSource.setTheme(this.m_theme);\n        }\n    }\n\n    updateCache() {\n        this.updateImages(this.m_theme.images, this.m_theme.imageTextures);\n        this.m_mapView.sceneEnvironment.updateLighting(this.m_theme.lights);\n        this.m_mapView.sceneEnvironment.updateSkyBackground(\n            this.m_theme.sky,\n            this.m_theme.clearColor\n        );\n    }\n\n    get imageCache(): MapViewImageCache {\n        return this.m_imageCache;\n    }\n\n    dispose() {\n        this.m_imageCache.clear();\n    }\n\n    private async loadPoiTables(poiTables?: PoiTableRef[]) {\n        this.m_mapView.poiTableManager.clear();\n\n        // Add the POI tables defined in the theme.\n        await this.m_mapView.poiTableManager.loadPoiTables(poiTables);\n    }\n\n    private cancelThemeUpdate() {\n        for (var i = 0; i < this.m_abortControllers.length; i++) {\n            this.m_abortControllers[i].abort();\n        }\n        this.m_abortControllers = [];\n        this.m_imageCache.clear();\n        this.m_mapView.poiManager.clear();\n        this.m_mapView.poiTableManager.clear();\n    }\n\n    private createAbortController(): AbortController {\n        this.m_abortControllers.push(new AbortController());\n        return this.m_abortControllers[this.m_abortControllers.length - 1];\n    }\n\n    private async updateImages(images?: ImageDefinitions, imageTextures?: ImageTexture[]) {\n        this.m_imageCache.clear();\n        this.m_mapView.poiManager.clear();\n\n        if (images !== undefined) {\n            for (const name of Object.keys(images)) {\n                const image = images[name];\n                this.m_imageCache.addImage(name, image.url, image.preload === true);\n                if (typeof image.atlas === \"string\") {\n                    await this.m_mapView.poiManager.addTextureAtlas(\n                        name,\n                        image.atlas,\n                        this.createAbortController().signal\n                    );\n                }\n            }\n        }\n\n        if (imageTextures !== undefined) {\n            imageTextures.forEach((imageTexture: ImageTexture) => {\n                this.m_mapView.poiManager.addImageTexture(imageTexture);\n            });\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"@here/harp-geoutils\";\nimport * as THREE from \"three\";\n\n/**\n * This path in world coordinates is projected to screen space and blocks all other labels.\n *\n * It could be used for example:\n * - Border rejects labels.\n * - Route blocks street labels from being rendered underneath.\n *\n * Could potentially be expanded in future to have a priority, however for now, this isn't required.\n */\n\nexport class PathBlockingElement {\n    /**\n     * Note, [[screenSpaceLines]] is only used as a performance improvement and contains no\n     * useful information. They are used to contain the screen space coordinates of the\n     * points. By allocating the space here, we avoid per frame allocations, see\n     * [[TextElementsRenderer.prepopulateScreenWithBlockingElements]].\n     */\n    readonly screenSpaceLines: THREE.Line3[];\n\n    /**\n     * Constructs a path from a list of points.\n     * Pre allocates the [[screenSpaceLines]] used to render.\n     * @param points - Points in world coordinates.\n     */\n    constructor(readonly points: Vector3Like[]) {\n        this.screenSpaceLines = new Array<THREE.Line3>(points.length >= 2 ? points.length - 1 : 0);\n        for (let i = 0; i < this.screenSpaceLines.length; i++) {\n            this.screenSpaceLines[i] = new THREE.Line3(new THREE.Vector3(), new THREE.Vector3());\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeometryType, getFeatureId, Technique } from \"@here/harp-datasource-protocol\";\nimport { OrientedBox3, TileKey } from \"@here/harp-geoutils\";\nimport * as THREE from \"three\";\n\nimport { IntersectParams } from \"./IntersectParams\";\nimport { MapView } from \"./MapView\";\nimport { MapViewPoints } from \"./MapViewPoints\";\nimport { PickingRaycaster } from \"./PickingRaycaster\";\nimport { PickListener } from \"./PickListener\";\nimport { Tile, TileFeatureData } from \"./Tile\";\nimport { MapViewUtils } from \"./Utils\";\n\n/**\n * Describes the general type of a picked object.\n */\nexport enum PickObjectType {\n    /**\n     * Unspecified.\n     */\n    Unspecified = 0,\n\n    /**\n     * A point object.\n     */\n    Point,\n\n    /**\n     * A line object.\n     */\n    Line,\n\n    /**\n     * An area object.\n     */\n    Area,\n\n    /**\n     * The text part of a {@link TextElement}\n     */\n    Text,\n\n    /**\n     * The Icon of a {@link TextElement}.\n     */\n    Icon,\n\n    /**\n     * Any general 3D object, for example, a landmark.\n     */\n    Object3D\n}\n\n/**\n * A general pick result. You can access the details of a picked geometry from the property\n * `intersection`, which is available if a geometry was hit. If a road was hit, a [[RoadPickResult]]\n * is returned, which has additional information, but no `intersection`.\n */\nexport interface PickResult {\n    /**\n     * General type of object.\n     */\n    type: PickObjectType;\n\n    /**\n     * A 2D point in screen coordinates, or a 3D point in world coordinates.\n     */\n    point: THREE.Vector2 | THREE.Vector3;\n\n    /**\n     * Distance from the camera to the picking point; used to determine the closest object.\n     */\n    distance: number;\n\n    /**\n     * Uniquely identifies the data source which provided the picked object.\n     */\n    dataSourceName: string | undefined;\n\n    /**\n     * Data source order, useful for sorting a collection of picking results.\n     * A number for objects/features coming from tiles (as those have data sources attached),\n     * an undefined when objects are added via \"mapView.mapAnchors.add(object)\" - those are treated as\n     * base layer objects during picking (same as \"dataSourceOrder: 0\").\n     */\n    dataSourceOrder: number | undefined;\n\n    /**\n     * Render order of the intersected object.\n     */\n    renderOrder?: number;\n\n    /**\n     * An optional feature ID of the picked object.\n     * @remarks The ID may be assigned by the object's {@link DataSource}, for example in case of\n     * Optimized Map Vector (OMV) and GeoJSON data sources.\n     */\n    featureId?: number | string;\n\n    /**\n     * Defined for geometry only.\n     */\n    intersection?: THREE.Intersection;\n\n    /**\n     * Defined for roads or if `enableTechniqueInfo` option is enabled.\n     */\n    technique?: Technique;\n\n    /**\n     * Optional user data that has been defined in the picked object.\n     *\n     * @remarks\n     * This object points directly to\n     * information contained in the original {@link TileFeatureData}\n     * stored in {@link MapView}, and should\n     * not be modified.\n     */\n    userData?: any;\n\n    /**\n     * The tile key containing the picked object.\n     */\n    tileKey?: TileKey;\n}\n\nconst tmpV3 = new THREE.Vector3();\nconst tmpOBB = new OrientedBox3();\n\n// Intersects the dependent tile objects using the supplied raycaster. Note, because multiple\n// tiles can point to the same dependency we need to store which results we have already\n// raycasted, see checkedDependencies.\nfunction intersectDependentObjects(\n    tile: Tile,\n    intersects: THREE.Intersection[],\n    rayCaster: THREE.Raycaster,\n    checkedDependencies: Set<number>,\n    mapView: MapView\n) {\n    for (const tileKey of tile.dependencies) {\n        const mortonCode = tileKey.mortonCode();\n        if (checkedDependencies.has(mortonCode)) {\n            continue;\n        }\n        checkedDependencies.add(mortonCode);\n        const otherTile = mapView.visibleTileSet.getCachedTile(\n            tile.dataSource,\n            tileKey,\n            tile.offset,\n            mapView.frameNumber\n        );\n        if (otherTile !== undefined) {\n            rayCaster.intersectObjects(otherTile.objects, true, intersects);\n        }\n    }\n}\n\n/**\n * Handles the picking of scene geometry and roads.\n * @internal\n */\nexport class PickHandler {\n    private readonly m_pickingRaycaster: PickingRaycaster;\n\n    constructor(\n        readonly mapView: MapView,\n        readonly camera: THREE.Camera,\n        public enablePickTechnique = false\n    ) {\n        this.m_pickingRaycaster = new PickingRaycaster(\n            mapView.renderer.getSize(new THREE.Vector2())\n        );\n    }\n\n    /**\n     * Does a raycast on all objects in the scene; useful for picking.\n     *\n     * @param x - The X position in CSS/client coordinates, without the applied display ratio.\n     * @param y - The Y position in CSS/client coordinates, without the applied display ratio.\n     * @param parameters - The intersection test behaviour may be adjusted by providing an instance\n     * of {@link IntersectParams}.\n     * @returns the list of intersection results.\n     */\n    intersectMapObjects(x: number, y: number, parameters?: IntersectParams): PickResult[] {\n        const ndc = this.mapView.getNormalizedScreenCoordinates(x, y);\n        const rayCaster = this.setupRaycaster(x, y);\n        const pickListener = new PickListener(parameters);\n\n        if (this.mapView.textElementsRenderer !== undefined) {\n            const { clientWidth, clientHeight } = this.mapView.canvas;\n            const screenX = ndc.x * clientWidth * 0.5;\n            const screenY = ndc.y * clientHeight * 0.5;\n            const scenePosition = new THREE.Vector2(screenX, screenY);\n            this.mapView.textElementsRenderer.pickTextElements(scenePosition, pickListener);\n        }\n\n        const intersects: THREE.Intersection[] = [];\n        const intersectedTiles = this.getIntersectedTiles(rayCaster);\n\n        // This ensures that we check a given dependency only once (because multiple tiles could\n        // have the same dependency).\n        const checkedDependencies = new Set<number>();\n\n        for (const { tile, distance } of intersectedTiles) {\n            if (pickListener.done && pickListener.furthestResult!.distance < distance) {\n                // Stop when the listener has all results it needs and remaining tiles are further\n                // away than then furthest pick result found so far.\n                break;\n            }\n\n            intersects.length = 0;\n            rayCaster.intersectObjects(tile.objects, true, intersects);\n            intersectDependentObjects(\n                tile,\n                intersects,\n                rayCaster,\n                checkedDependencies,\n                this.mapView\n            );\n\n            for (const intersect of intersects) {\n                pickListener.addResult(this.createResult(intersect, tile));\n            }\n        }\n\n        // Intersect any objects added by the user.\n        intersects.length = 0;\n        for (const child of this.mapView.mapAnchors.children) {\n            rayCaster.intersectObject(child, true, intersects);\n\n            for (const intersect of intersects) {\n                pickListener.addResult(this.createResult(intersect));\n            }\n        }\n\n        pickListener.finish();\n        return pickListener.results;\n    }\n\n    /**\n     * Returns a ray caster using the supplied screen positions.\n     *\n     * @param x - The X position in css/client coordinates (without applied display ratio).\n     * @param y - The Y position in css/client coordinates (without applied display ratio).\n     *\n     * @return Raycaster with origin at the camera and direction based on the supplied x / y screen\n     * points.\n     */\n    raycasterFromScreenPoint(x: number, y: number): THREE.Raycaster {\n        this.m_pickingRaycaster.setFromCamera(\n            this.mapView.getNormalizedScreenCoordinates(x, y),\n            this.camera\n        );\n\n        this.mapView.renderer.getSize(this.m_pickingRaycaster.canvasSize);\n        return this.m_pickingRaycaster;\n    }\n\n    private createResult(intersection: THREE.Intersection, tile?: Tile): PickResult {\n        const pickResult: PickResult = {\n            type: PickObjectType.Unspecified,\n            point: intersection.point,\n            distance: intersection.distance,\n            dataSourceName: intersection.object.userData?.dataSource,\n            dataSourceOrder: tile?.dataSource?.dataSourceOrder,\n            intersection,\n            tileKey: tile?.tileKey\n        };\n\n        if (\n            intersection.object.userData === undefined ||\n            intersection.object.userData.feature === undefined\n        ) {\n            return pickResult;\n        }\n\n        if (this.enablePickTechnique) {\n            pickResult.technique = intersection.object.userData.technique;\n        }\n        pickResult.renderOrder = intersection.object?.renderOrder;\n\n        const featureData: TileFeatureData = intersection.object.userData.feature;\n        this.addObjInfo(featureData, intersection, pickResult);\n        if (pickResult.userData) {\n            const featureId = getFeatureId(pickResult.userData);\n            pickResult.featureId = featureId === 0 ? undefined : featureId;\n        }\n\n        let pickObjectType: PickObjectType;\n\n        switch (featureData.geometryType) {\n            case GeometryType.Point:\n            case GeometryType.Text:\n                pickObjectType = PickObjectType.Point;\n                break;\n            case GeometryType.Line:\n            case GeometryType.ExtrudedLine:\n            case GeometryType.SolidLine:\n            case GeometryType.TextPath:\n                pickObjectType = PickObjectType.Line;\n                break;\n            case GeometryType.Polygon:\n            case GeometryType.ExtrudedPolygon:\n                pickObjectType = PickObjectType.Area;\n                break;\n            case GeometryType.Object3D:\n                pickObjectType = PickObjectType.Object3D;\n                break;\n            default:\n                pickObjectType = PickObjectType.Unspecified;\n        }\n\n        pickResult.type = pickObjectType;\n        return pickResult;\n    }\n\n    private getIntersectedTiles(\n        rayCaster: THREE.Raycaster\n    ): Array<{ tile: Tile; distance: number }> {\n        const tiles = new Array<{\n            tile: Tile;\n            distance: number;\n        }>();\n        const tileList = this.mapView.visibleTileSet.dataSourceTileList;\n        tileList.forEach(dataSourceTileList => {\n            if (!dataSourceTileList.dataSource.enablePicking) {\n                return;\n            }\n\n            dataSourceTileList.renderedTiles.forEach(tile => {\n                tmpOBB.copy(tile.boundingBox);\n                tmpOBB.position.sub(this.mapView.worldCenter);\n                // This offset shifts the box by the given tile offset, see renderTileObjects in\n                // MapView\n                const worldOffsetX = tile.computeWorldOffsetX();\n                tmpOBB.position.x += worldOffsetX;\n                const distance = tmpOBB.intersectsRay(rayCaster.ray);\n                if (distance !== undefined) {\n                    tiles.push({ tile, distance });\n                }\n            });\n        });\n\n        tiles.sort(\n            (lhs: { tile: Tile; distance: number }, rhs: { tile: Tile; distance: number }) => {\n                return lhs.distance - rhs.distance;\n            }\n        );\n        return tiles;\n    }\n\n    private addObjInfo(\n        featureData: TileFeatureData,\n        intersect: THREE.Intersection,\n        pickResult: PickResult\n    ) {\n        if (featureData.objInfos === undefined) {\n            return;\n        }\n\n        if (pickResult.intersection!.object instanceof MapViewPoints) {\n            pickResult.userData = featureData.objInfos[intersect.index!];\n            return;\n        }\n\n        if (\n            featureData.starts === undefined ||\n            featureData.starts.length === 0 ||\n            (typeof intersect.faceIndex !== \"number\" && intersect.index === undefined)\n        ) {\n            if (featureData.objInfos.length === 1) {\n                pickResult.userData = featureData.objInfos[0];\n            }\n            return;\n        }\n\n        if (featureData.starts.length === 1) {\n            pickResult.userData = featureData.objInfos[0];\n            return;\n        }\n\n        const intersectIndex =\n            typeof intersect.faceIndex === \"number\" ? intersect.faceIndex * 3 : intersect.index!;\n\n        // TODO: Implement binary search.\n        let objInfosIndex = 0;\n        for (const featureStartIndex of featureData.starts) {\n            if (featureStartIndex > intersectIndex) {\n                break;\n            }\n            objInfosIndex++;\n        }\n        pickResult.userData = featureData.objInfos[objInfosIndex - 1];\n    }\n\n    private setupRaycaster(x: number, y: number): THREE.Raycaster {\n        const camera = this.mapView.camera;\n        const rayCaster = this.raycasterFromScreenPoint(x, y);\n\n        // A threshold must be set for picking of line and line segments, indicating the maximum\n        // distance in world units from the ray to a line to consider it as picked. Use the world\n        // units equivalent to one pixel at the furthest intersection (i.e. intersection with ground\n        // or far plane).\n        const furthestIntersection = this.mapView.getWorldPositionAt(x, y, true);\n        const furthestDistance =\n            camera.position.distanceTo(furthestIntersection) /\n            this.mapView.camera.getWorldDirection(tmpV3).dot(rayCaster.ray.direction);\n        rayCaster.params.Line!.threshold = MapViewUtils.calculateWorldSizeByFocalLength(\n            this.mapView.focalLength,\n            furthestDistance,\n            1\n        );\n        return rayCaster;\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { assert } from \"@here/harp-utils\";\n\nimport { IntersectParams } from \"./IntersectParams\";\nimport { PickResult } from \"./PickHandler\";\n\n// Default sorting by:\n// 1. reversed data source order (higher first)\n// 2. distance to the camera (closer first)\n// 3. reversed render order (higher first)\n//\n// This criteria order is temporary, until HARP-16245 gets implemented.\n// Currently, rendering is configured in a way that makes 2D spatials occlude extruded buildings,\n// since spatials belong to a higher layer. Picking order reflects that, but comparison by distance should\n// happen first, once extruded buildings become rendered on top of spatials.\nfunction defaultSort(lhs: PickResult, rhs: PickResult) {\n    // HARP-14531: Compare by \"dataSourceOrder\" first,\n    // to ensure that picking results are sorted according to their layers.\n    // The bigger \"dataSourceOrder\" value is, the higher its stacked in the data model,\n    // meaning the higher it should be appear in the resulting picking collection.\n    // Defaulting \"dataSourceOrder\" to 0 (base layer) to not skip comparison when it's undefined - in that case\n    // sorting results would not be consistent, as some objects become compared by different criteria.\n    const lDataSourceOrder = lhs.dataSourceOrder ?? 0;\n    const rDataSourceOrder = rhs.dataSourceOrder ?? 0;\n    if (lDataSourceOrder !== rDataSourceOrder) {\n        return rDataSourceOrder - lDataSourceOrder;\n    }\n\n    // HARP-14553: Set a distance tolerance to ignore small distance differences between 2D objects\n    // that are supposed to lie on the same plane.\n    const eps = 1e-4;\n    const distanceDiff = lhs.distance - rhs.distance;\n    const haveRenderOrder = lhs.renderOrder !== undefined && rhs.renderOrder !== undefined;\n    if (Math.abs(distanceDiff) > eps || !haveRenderOrder) {\n        return distanceDiff;\n    }\n\n    return rhs.renderOrder! - lhs.renderOrder!;\n}\n\n/**\n * Collects results from a picking (intersection) test.\n *\n * @internal\n */\nexport class PickListener {\n    private m_results: PickResult[] = [];\n    private m_sorted: boolean = true;\n    private m_finished: boolean = true;\n\n    /**\n     * Constructs a new `PickListener`.\n     *\n     * @param m_parameters - Optional parameters to customize picking behaviour.\n     */\n    constructor(private readonly m_parameters?: IntersectParams) {}\n\n    /**\n     * Adds a pick result.\n     *\n     * @param result - The result to be added.\n     */\n    addResult(result: PickResult): void {\n        // Add the result only if it's a different feature from the ones already collected.\n        const foundFeatureIdx = this.m_results.findIndex(otherResult => {\n            const sameType = otherResult.type === result.type;\n            const dataSource = result.intersection?.object.userData?.dataSource;\n            const sameDataSource =\n                dataSource && otherResult.intersection?.object.userData?.dataSource === dataSource;\n            const sameId =\n                result.featureId !== undefined && otherResult.featureId === result.featureId;\n            const noId = result.featureId === undefined && otherResult.featureId === undefined;\n            const sameUserData = result.userData && otherResult.userData === result.userData;\n            return sameType && sameDataSource && (sameId || (noId && sameUserData));\n        });\n\n        if (foundFeatureIdx < 0) {\n            this.m_sorted = false;\n            this.m_finished = false;\n            this.m_results.push(result);\n            return;\n        }\n\n        // Replace the result for the same feature if it's sorted after the new result.\n        const oldResult = this.m_results[foundFeatureIdx];\n        if (defaultSort(result, oldResult) < 0) {\n            this.m_results[foundFeatureIdx] = result;\n            this.m_sorted = false;\n            this.m_finished = false;\n        }\n    }\n\n    /**\n     * Indicates whether the listener is satisfied with the results already provided.\n     * @returns `True` if the listener doesn't expect more results, `False` otherwise.\n     */\n    get done(): boolean {\n        return this.maxResults ? this.m_results.length >= this.maxResults : false;\n    }\n\n    /**\n     * Orders the collected results by distance first, then by reversed render order\n     * (topmost/highest render order first), and limits the number of results to the maximum\n     * accepted number, see {@link IntersectParams.maxResultCount}.\n     */\n    finish(): void {\n        // Keep only the closest max results.\n        this.sortResults();\n        if (this.maxResults && this.m_results.length > this.maxResults) {\n            this.m_results.length = this.maxResults;\n        }\n        this.m_finished = true;\n    }\n\n    /**\n     * Returns the collected results. {@link PickListener.finish} should be called first to ensure\n     * the proper sorting and result count.\n     * @returns The pick results.\n     */\n    get results(): PickResult[] {\n        assert(this.m_finished, \"finish() was not called before getting the results\");\n        return this.m_results;\n    }\n\n    /**\n     * Returns the closest result collected so far, following the order documented in\n     * {@link PickListener.finish}\n     * @returns The closest pick result, or `undefined` if no result was collected.\n     */\n    get closestResult(): PickResult | undefined {\n        this.sortResults();\n        return this.m_results.length > 0 ? this.m_results[0] : undefined;\n    }\n\n    /**\n     * Returns the furthest result collected so far, following the order documented in\n     * {@link PickListener.results}\n     * @returns The furthest pick result, or `undefined` if no result was collected.\n     */\n    get furthestResult(): PickResult | undefined {\n        this.sortResults();\n        return this.m_results.length > 0 ? this.m_results[this.m_results.length - 1] : undefined;\n    }\n\n    private get maxResults(): number | undefined {\n        const maxCount = this.m_parameters?.maxResultCount ?? 0;\n        return maxCount > 0 ? maxCount : undefined;\n    }\n\n    private sortResults(): void {\n        if (this.m_sorted) {\n            return;\n        }\n\n        // HARP-14531: group zero-distance results first,\n        // as screen-space objects (e.g. labels) are currently rendered on top.\n        const zeroDistanceGroup: PickResult[] = [];\n        const nonZeroDistanceGroup: PickResult[] = [];\n\n        this.m_results\n            .sort(defaultSort)\n            .forEach(result =>\n                (result.distance === 0 ? zeroDistanceGroup : nonZeroDistanceGroup).push(result)\n            );\n        // both groups are sorted because \"this.m_results\" are sorted\n        this.m_results = zeroDistanceGroup.concat(nonZeroDistanceGroup);\n        this.m_sorted = true;\n    }\n}\n","/*\n * Copyright (C) 2018-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { MapObjectAdapter } from \"./MapObjectAdapter\";\n\nfunction intersectObject(\n    object: THREE.Object3D,\n    raycaster: PickingRaycaster,\n    intersects: THREE.Intersection[],\n    recursive?: boolean\n) {\n    if (object.layers.test(raycaster.layers) && object.visible) {\n        const mapObjectAdapter = MapObjectAdapter.get(object);\n        if (!mapObjectAdapter || mapObjectAdapter.isPickable()) {\n            object.raycast(raycaster, intersects);\n        }\n    }\n\n    if (recursive === true) {\n        for (const child of object.children) {\n            intersectObject(child, raycaster, intersects, true);\n        }\n    }\n}\n\n/**\n * Raycasting points is not supported as necessary in Three.js. This class extends a\n * [[THREE.Raycaster]] and adds the width / height of the canvas to allow picking of screen space\n * geometry.\n *\n * @internal\n */\nexport class PickingRaycaster extends THREE.Raycaster {\n    /**\n     * Constructor.\n     *\n     * @param canvasSize - the canvas width and height.\n     */\n    constructor(readonly canvasSize: THREE.Vector2) {\n        super();\n    }\n\n    // HARP-9585: Override of base class method, however tslint doesn't recognize overrides of\n    // three.js classes.\n    intersectObject(\n        object: THREE.Object3D,\n        recursive?: boolean,\n        optionalTarget?: THREE.Intersection[]\n    ): THREE.Intersection[] {\n        const intersects: THREE.Intersection[] = optionalTarget ?? [];\n\n        intersectObject(object, this, intersects, recursive);\n\n        return intersects;\n    }\n\n    // HARP-9585: Override of base class method, however tslint doesn't recognize overrides of\n    // three.js classes.\n    intersectObjects(\n        objects: THREE.Object3D[],\n        recursive?: boolean,\n        optionalTarget?: THREE.Intersection[]\n    ): THREE.Intersection[] {\n        const intersects: THREE.Intersection[] = optionalTarget ?? [];\n\n        for (const object of objects) {\n            intersectObject(object, this, intersects, recursive);\n        }\n\n        return intersects;\n    }\n}\n","/*\n * Copyright (C) 2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    EarthConstants,\n    GeoCoordinates,\n    GeoPolygon,\n    GeoPolygonCoordinates,\n    Projection,\n    ProjectionType\n} from \"@here/harp-geoutils\";\nimport { assert } from \"@here/harp-utils\";\nimport { Frustum, Line3, Matrix4, PerspectiveCamera, Plane, Ray, Vector3 } from \"three\";\n\nimport { TileCorners } from \"./geometry/ProjectTilePlaneCorners\";\nimport { MapViewUtils } from \"./Utils\";\nimport { ViewBounds } from \"./ViewBounds\";\n\n/**\n * Generates Bounds for a camera view and a planar projection.\n *\n * @internal\n */\nexport class PlaneViewBounds implements ViewBounds {\n    private readonly m_groundPlaneNormal = new Vector3(0, 0, 1);\n    private readonly m_groundPlane = new Plane(this.m_groundPlaneNormal.clone());\n\n    constructor(\n        readonly camera: PerspectiveCamera,\n        readonly projection: Projection,\n        private readonly m_options: { tileWrappingEnabled: boolean }\n    ) {\n        assert(projection.type === ProjectionType.Planar);\n    }\n\n    /**\n     * @override\n     */\n    generate(): GeoPolygon | undefined {\n        //!!!!!!!ALTITUDE IS NOT TAKEN INTO ACCOUNT!!!!!!!!!\n        const coordinates: GeoCoordinates[] = [];\n\n        // 1.) Raycast into all four corners of the canvas\n        //     => if an intersection is found, add it to the polygon\n        this.addCanvasCornerIntersection(coordinates);\n\n        // => All 4 corners found an intersection, therefore the screen is covered with the map\n        // and the polygon complete\n        if (coordinates.length === 4) {\n            return this.createPolygon(coordinates);\n        }\n\n        //2.) Raycast into the two corners of the horizon cutting the canvas sides\n        //    => if an intersection is found, add it to the polygon\n        this.addHorizonIntersection(coordinates);\n\n        //Setup the frustum for further checks\n        const frustum = new Frustum().setFromProjectionMatrix(\n            new Matrix4().multiplyMatrices(\n                this.camera.projectionMatrix,\n                this.camera.matrixWorldInverse\n            )\n        );\n\n        // Setup the world corners for further checks.\n        // Cast to TileCorners as it cannot be undefined here, due to the forced\n        // PlanarProjection above\n        const worldCorners: TileCorners = this.getWorldConers(this.projection) as TileCorners;\n\n        if (!this.m_options.tileWrappingEnabled) {\n            // 3.) If no wrapping, check if any corners of the world plane are inside the view\n            //     => if true, add it to the polygon\n            [worldCorners.ne, worldCorners.nw, worldCorners.se, worldCorners.sw].forEach(corner => {\n                this.addPointInFrustum(corner, frustum, coordinates);\n            });\n        }\n\n        //4.) Check for any edges of the world plane intersecting with the frustum?\n        //    => if true, add to polygon\n\n        if (!this.m_options.tileWrappingEnabled) {\n            // if no tile wrapping:\n            //       check with limited lines around the world edges\n            [\n                new Line3(worldCorners.sw, worldCorners.se), // south edge\n                new Line3(worldCorners.ne, worldCorners.nw), // north edge\n                new Line3(worldCorners.se, worldCorners.ne), // east edge\n                new Line3(worldCorners.nw, worldCorners.sw) //  west edge\n            ].forEach(edge => {\n                this.addFrustumIntersection(edge, frustum, coordinates);\n            });\n        } else {\n            // if tile wrapping:\n            //       check for intersections with rays along the south and north edges\n            const directionEast = new Vector3() //west -> east\n                .subVectors(worldCorners.sw, worldCorners.se)\n                .normalize();\n            const directionWest = new Vector3() //east -> west\n                .subVectors(worldCorners.se, worldCorners.sw)\n                .normalize();\n\n            [\n                new Ray(worldCorners.se, directionEast), // south east ray\n                new Ray(worldCorners.se, directionWest), // south west ray\n                new Ray(worldCorners.ne, directionEast), // north east ray\n                new Ray(worldCorners.ne, directionWest) //  north west ray\n            ].forEach(ray => {\n                this.addFrustumIntersection(ray, frustum, coordinates);\n            });\n        }\n\n        // 5.) Create the Polygon and set needsSort to `true`as we expect it to be convex and\n        //     sortable\n        return this.createPolygon(coordinates);\n    }\n\n    private createPolygon(coordinates: GeoCoordinates[]): GeoPolygon | undefined {\n        if (coordinates.length > 2) {\n            return new GeoPolygon(coordinates as GeoPolygonCoordinates, true);\n        }\n        return undefined;\n    }\n\n    private getWorldConers(projection: Projection): TileCorners | undefined {\n        const worldBox = projection.worldExtent(0, 0);\n        return {\n            sw: worldBox.min as Vector3,\n            se: new Vector3(worldBox.max.x, worldBox.min.y, 0),\n            nw: new Vector3(worldBox.min.x, worldBox.max.y, 0),\n            ne: worldBox.max as Vector3\n        };\n    }\n\n    private addNDCRayIntersection(\n        ndcPoints: Array<[number, number]>,\n        geoPolygon: GeoCoordinates[]\n    ) {\n        ndcPoints.forEach(corner => {\n            const intersection = MapViewUtils.rayCastWorldCoordinates(\n                { camera: this.camera, projection: this.projection },\n                corner[0],\n                corner[1]\n            );\n            if (intersection) {\n                this.validateAndAddToGeoPolygon(intersection, geoPolygon);\n            }\n        });\n    }\n\n    private addHorizonIntersection(geoPolygon: GeoCoordinates[]) {\n        const verticalHorizonPosition = this.getVerticalHorizonPositionInNDC();\n        if (!verticalHorizonPosition) {\n            return;\n        }\n        this.addNDCRayIntersection(\n            [\n                [-1, verticalHorizonPosition], //horizon left\n                [1, verticalHorizonPosition] //horizon right\n            ],\n            geoPolygon\n        );\n    }\n\n    private addCanvasCornerIntersection(geoPolygon: GeoCoordinates[]) {\n        this.addNDCRayIntersection(\n            [\n                [-1, -1], //lower left\n                [1, -1], //lower right\n                [1, 1], //upper right\n                [-1, 1] //upper left\n            ],\n            geoPolygon\n        );\n    }\n\n    private validateAndAddToGeoPolygon(point: Vector3, geoPolygon: GeoCoordinates[]) {\n        if (this.isInVisibleMap(point)) {\n            geoPolygon.push(this.projection.unprojectPoint(point));\n        }\n    }\n\n    private isInVisibleMap(point: Vector3): boolean {\n        if (point.y < 0 || point.y > EarthConstants.EQUATORIAL_CIRCUMFERENCE) {\n            return false;\n        }\n\n        if (\n            !this.m_options.tileWrappingEnabled &&\n            (point.x < 0 || point.x > EarthConstants.EQUATORIAL_CIRCUMFERENCE)\n        ) {\n            return false;\n        }\n        return true;\n    }\n\n    private addPointInFrustum(point: Vector3, frustum: Frustum, geoPolygon: GeoCoordinates[]) {\n        if (frustum.containsPoint(point)) {\n            const geoPoint = this.projection.unprojectPoint(point);\n            geoPoint.altitude = 0;\n            geoPolygon.push(geoPoint);\n        }\n    }\n\n    private addFrustumIntersection(\n        edge: Line3 | Ray,\n        frustum: Frustum,\n        geoPolygon: GeoCoordinates[]\n    ) {\n        frustum.planes.forEach(plane => {\n            let intersection: Vector3 | null | undefined = null;\n            const target: Vector3 = new Vector3();\n            if (edge instanceof Ray && edge.intersectsPlane(plane)) {\n                intersection = edge.intersectPlane(plane, target);\n            } else if (edge instanceof Line3 && plane.intersectsLine(edge)) {\n                intersection = plane.intersectLine(edge, target);\n            }\n\n            if (intersection) {\n                //uses this check to fix inaccuracies\n                if (MapViewUtils.closeToFrustum(intersection, this.camera)) {\n                    const geoIntersection = this.projection.unprojectPoint(intersection);\n\n                    //correct altitude caused by inaccuracies, due to large numbers to 0\n                    geoIntersection.altitude = 0;\n                    geoPolygon.push(geoIntersection);\n                }\n            }\n        });\n    }\n\n    private getVerticalHorizonPositionInNDC(): number | undefined {\n        const bottomMidFarPoint = new Vector3(-1, -1, 1)\n            .unproject(this.camera)\n            .add(new Vector3(1, -1, 1).unproject(this.camera))\n            .multiplyScalar(0.5);\n        const topMidFarPoint = new Vector3(-1, 1, 1)\n            .unproject(this.camera)\n            .add(new Vector3(1, 1, 1).unproject(this.camera))\n            .multiplyScalar(0.5);\n        const farPlaneVerticalCenterLine = new Line3(bottomMidFarPoint, topMidFarPoint);\n\n        const verticalHorizonPosition: Vector3 = new Vector3();\n        if (\n            !this.m_groundPlane.intersectLine(farPlaneVerticalCenterLine, verticalHorizonPosition)\n        ) {\n            return undefined;\n        }\n        return verticalHorizonPosition.project(this.camera).y;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    FlatTheme,\n    StandardGeometryKind,\n    StyleSet,\n    Technique,\n    Theme\n} from \"@here/harp-datasource-protocol\";\nimport { MapEnv, StyleSetEvaluator } from \"@here/harp-datasource-protocol/index-decoder\";\nimport {\n    GeoCoordinates,\n    MercatorConstants,\n    polarTilingScheme,\n    TileKey,\n    TilingScheme,\n    TransverseMercatorUtils\n} from \"@here/harp-geoutils\";\nimport * as THREE from \"three\";\n\nimport { DataSource, DataSourceOptions } from \"./DataSource\";\nimport { createMaterial } from \"./DecodedTileHelpers\";\nimport { MapObjectAdapter } from \"./MapObjectAdapter\";\nimport { ThemeLoader } from \"./ThemeLoader\";\nimport { Tile } from \"./Tile\";\n\nexport interface PolarTileDataSourceOptions extends DataSourceOptions {\n    /**\n     * Optional level offset of regular tiles from reference datasource to align tiles to.\n     * Default is -1.\n     */\n    geometryLevelOffset?: number;\n\n    /**\n     * Enable debug display for generated tiles.\n     * Default is false.\n     */\n    debugTiles?: boolean;\n}\n\ninterface TechniqueEntry {\n    technique: Technique;\n    material: THREE.Material;\n}\n\n/**\n * {@link DataSource} providing geometry for poles\n */\nexport class PolarTileDataSource extends DataSource {\n    private readonly m_tilingScheme: TilingScheme = polarTilingScheme;\n    private readonly m_maxLatitude = THREE.MathUtils.radToDeg(MercatorConstants.MAXIMUM_LATITUDE);\n    private m_geometryLevelOffset: number;\n    private readonly m_debugTiles: boolean;\n\n    private m_styleSetEvaluator?: StyleSetEvaluator;\n    private m_northPoleEntry?: TechniqueEntry;\n    private m_southPoleEntry?: TechniqueEntry;\n\n    constructor({\n        name = \"polar\",\n        styleSetName = \"polar\",\n        minDataLevel,\n        maxDataLevel,\n        minDisplayLevel,\n        maxDisplayLevel,\n        storageLevelOffset = -2,\n        geometryLevelOffset = 1,\n        debugTiles = false\n    }: PolarTileDataSourceOptions) {\n        super({\n            name,\n            styleSetName,\n            minDataLevel,\n            maxDataLevel,\n            minDisplayLevel,\n            maxDisplayLevel,\n            storageLevelOffset\n        });\n\n        this.m_geometryLevelOffset = geometryLevelOffset;\n        this.m_debugTiles = debugTiles;\n        this.cacheable = false;\n        this.enablePicking = false;\n    }\n\n    /** @override */\n    dispose() {\n        if (this.m_northPoleEntry) {\n            this.m_northPoleEntry.material.dispose();\n            delete this.m_northPoleEntry;\n        }\n        if (this.m_southPoleEntry) {\n            this.m_southPoleEntry.material.dispose();\n            delete this.m_southPoleEntry;\n        }\n        if (this.m_styleSetEvaluator) {\n            delete this.m_styleSetEvaluator;\n        }\n    }\n\n    createTechiqueEntry(kind: string): TechniqueEntry | undefined {\n        if (!this.m_styleSetEvaluator) {\n            return undefined;\n        }\n        const env = new MapEnv({\n            $geometryType: \"polygon\",\n            $layer: \"earth\",\n            kind\n        });\n        const techniques = this.m_styleSetEvaluator.getMatchingTechniques(env);\n\n        if (techniques.length === 0) {\n            return undefined;\n        }\n        const technique = techniques[0];\n        const material = createMaterial(this.mapView.renderer.capabilities, {\n            technique,\n            env: this.mapView.env\n        });\n        if (!material) {\n            return undefined;\n        }\n        return { material, technique };\n    }\n\n    /** @override */\n    async setTheme(theme: Theme | FlatTheme): Promise<void> {\n        // Seems superfluent, but the call to  ThemeLoader.load will resolve extends etc.\n        theme = await ThemeLoader.load(theme);\n        let styleSet: StyleSet | undefined;\n\n        if (this.styleSetName !== undefined && theme.styles !== undefined) {\n            styleSet = theme.styles[this.styleSetName];\n        }\n\n        this.m_styleSetEvaluator = new StyleSetEvaluator({\n            styleSet: styleSet ?? [],\n            definitions: theme.definitions,\n            priorities: theme.priorities,\n            labelPriorities: theme.labelPriorities\n        });\n\n        this.m_northPoleEntry = this.createTechiqueEntry(\"north_pole\");\n        this.m_southPoleEntry = this.createTechiqueEntry(\"south_pole\");\n\n        this.mapView.markTilesDirty(this);\n    }\n\n    /** @override */\n    canGetTile(zoomLevel: number, tileKey: TileKey): boolean {\n        if (zoomLevel !== tileKey.level || tileKey.level < 1) {\n            return false;\n        }\n\n        const { north, south } = this.m_tilingScheme.getGeoBox(tileKey);\n\n        return north > this.m_maxLatitude || south < -this.m_maxLatitude;\n    }\n\n    /** @override */\n    shouldSubdivide(zoomLevel: number, tileKey: TileKey): boolean {\n        if (zoomLevel <= tileKey.level) {\n            return false;\n        }\n\n        const { north, south } = this.m_tilingScheme.getGeoBox(tileKey);\n\n        return north > this.m_maxLatitude || south < -this.m_maxLatitude;\n    }\n\n    /** @override */\n    getTilingScheme(): TilingScheme {\n        return this.m_tilingScheme;\n    }\n\n    /** @override */\n    getTile(tileKey: TileKey): Tile {\n        const tile = new Tile(this, tileKey);\n\n        this.createTileGeometry(tile);\n\n        return tile;\n    }\n\n    get geometryLevelOffset(): number {\n        return this.m_geometryLevelOffset;\n    }\n\n    set geometryLevelOffset(geometryLevelOffset: number) {\n        this.m_geometryLevelOffset = geometryLevelOffset;\n    }\n\n    private intersectEdge(latitude: number, a: GeoCoordinates, b: GeoCoordinates): GeoCoordinates {\n        const latA = a.latitude;\n        const latB = b.latitude;\n\n        let lonA = a.longitude;\n        let lonB = b.longitude;\n\n        if (Math.abs(latA) === 90) {\n            lonA = lonB;\n        }\n        if (Math.abs(latB) === 90) {\n            lonB = lonA;\n        }\n        const deltaLat = latB - latA;\n        const deltaLon = lonB - lonA;\n        const scale = (latitude - latA) / deltaLat;\n\n        return new GeoCoordinates(latitude, lonA + deltaLon * scale, 0);\n    }\n\n    private createTileGeometry(tile: Tile): void {\n        const { north, south } = tile.geoBox;\n\n        const isNorthPole = north > 0 && south >= 0;\n        const techniqueEntry = isNorthPole ? this.m_northPoleEntry : this.m_southPoleEntry;\n        if (techniqueEntry === undefined) {\n            tile.forceHasGeometry(true);\n            return;\n        }\n\n        const srcProjection = this.m_tilingScheme.projection;\n        const dstProjection = this.projection;\n\n        const maxLat = this.m_maxLatitude;\n        const poleLat = isNorthPole ? maxLat : -maxLat;\n\n        const box = this.m_tilingScheme.boundingBoxGenerator.getWorldBox(tile.tileKey);\n\n        const pBL = srcProjection.unprojectPoint(new THREE.Vector3(box.min.x, box.min.y, 0));\n        const pBR = srcProjection.unprojectPoint(new THREE.Vector3(box.max.x, box.min.y, 0));\n        const pTR = srcProjection.unprojectPoint(new THREE.Vector3(box.max.x, box.max.y, 0));\n        const pTL = srcProjection.unprojectPoint(new THREE.Vector3(box.min.x, box.max.y, 0));\n\n        let points: GeoCoordinates[];\n        let needsGeometryCut = false;\n\n        // special case where tile contains half of the hemisphere\n        if (tile.tileKey.level === 1) {\n            const isLeftHalf = box.min.x === 0;\n\n            const poleX = isLeftHalf ? box.max.x : box.min.x;\n            const poleY = (box.max.y + box.min.y) / 2;\n            const pPole = srcProjection.unprojectPoint(new THREE.Vector3(poleX, poleY, 0));\n\n            // coordinates are not used, needed for right position\n            const pXX = isLeftHalf ? pBL : pBR;\n\n            points = isNorthPole\n                ? isLeftHalf\n                    ? [pPole, pTR, pXX, pBR]\n                    : [pPole, pBL, pXX, pTL]\n                : isLeftHalf\n                ? [pPole, pBR, pXX, pTR]\n                : [pPole, pTL, pXX, pBL];\n\n            needsGeometryCut = true;\n        } else {\n            // ccw for north, cw for south\n            points = isNorthPole ? [pBL, pBR, pTR, pTL] : [pBL, pTL, pTR, pBR];\n\n            const lats = points.map(p => p.latitude);\n            const lmax = Math.max(...lats);\n            const lmin = Math.min(...lats);\n\n            const isAllPointsOut = isNorthPole ? lmax < poleLat : lmin > poleLat;\n            if (isAllPointsOut) {\n                return;\n            }\n\n            const isSomePointsOut = isNorthPole ? lmin < poleLat : lmax > poleLat;\n            needsGeometryCut = isSomePointsOut;\n\n            if (needsGeometryCut) {\n                const nearest = lats.indexOf(isNorthPole ? lmax : lmin);\n                if (nearest !== 0) {\n                    for (let i = 0; i < nearest; i++) {\n                        points.push(points.shift() as GeoCoordinates);\n                    }\n                }\n            }\n        }\n\n        if (needsGeometryCut) {\n            const centerX = (box.min.x + box.max.x) / 2;\n            const centerY = (box.min.y + box.max.y) / 2;\n            const center = srcProjection.unprojectPoint(new THREE.Vector3(centerX, centerY, 0));\n\n            TransverseMercatorUtils.alignLongitude(points, center);\n\n            // points aligned as follows:\n            // a - nearest to the pole, always in\n            // b - next to nearest\n            // c - farthes from the pole, always out\n            // d - prev from nearest\n            const a = points[0];\n            const b = points[1];\n            const c = points[2];\n            const d = points[3];\n\n            const inPointB = Math.abs(b.latitude) >= maxLat;\n            const inPointD = Math.abs(d.latitude) >= maxLat;\n\n            const cutStart = inPointB\n                ? this.intersectEdge(poleLat, b, c)\n                : this.intersectEdge(poleLat, a, b);\n\n            const cutEnd = inPointD\n                ? this.intersectEdge(poleLat, d, c)\n                : this.intersectEdge(poleLat, a, d);\n\n            points.splice(inPointB ? 2 : 1, 4, cutStart);\n\n            const level = tile.tileKey.level - this.storageLevelOffset + this.m_geometryLevelOffset;\n            const subdivisions = 1 << Math.max(0, level);\n            const step = 360 / subdivisions;\n\n            const cutIndexStart = Math.floor((cutStart.longitude + 180) / step);\n            const cutIndexEnd = Math.ceil((cutEnd.longitude + 180) / step);\n\n            for (let i = cutIndexStart + 1; i < cutIndexEnd; i++) {\n                points.push(new GeoCoordinates(poleLat, i * step - 180, 0));\n            }\n\n            points.push(cutEnd);\n            if (inPointD) {\n                points.push(d);\n            }\n        }\n\n        const geometry = new THREE.BufferGeometry();\n\n        const vertices: THREE.Vector3[] = points.map(point => {\n            const projected = dstProjection.projectPoint(point, new THREE.Vector3());\n            projected.sub(tile.center);\n            return projected;\n        });\n        geometry.setFromPoints(vertices);\n\n        const indices: number[] = [];\n        for (let i = 1; i < vertices.length - 1; i++) {\n            isNorthPole ? indices.push(0, i, i + 1) : indices.push(0, i + 1, i);\n        }\n        geometry.setIndex(indices);\n\n        const mesh = new THREE.Mesh(geometry, techniqueEntry.material);\n        mesh.userData = {\n            dataSource: this.name,\n            tileKey: tile.tileKey\n        };\n\n        if (this.m_debugTiles) {\n            const color = Math.round(Math.abs(Math.sin(11 * tile.tileKey.mortonCode())) * 0xffffff);\n            mesh.material = new THREE.MeshBasicMaterial({ color, transparent: true, opacity: 0.5 });\n\n            tile.objects.push(\n                new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({ color, wireframe: true }))\n            );\n        }\n\n        MapObjectAdapter.create(mesh, {\n            dataSource: this,\n            technique: techniqueEntry.technique,\n            kind: [isNorthPole ? StandardGeometryKind.Water : StandardGeometryKind.Background]\n        });\n\n        tile.objects.push(mesh);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LoggerManager, Math2D } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { debugContext } from \"./DebugContext\";\n\ndeclare const require: any;\n\nconst RBush = require(\"rbush\");\n\nconst logger = LoggerManager.instance.create(\"ScreenCollissions\");\n\nexport interface IBox {\n    minX: number;\n    minY: number;\n    maxX: number;\n    maxY: number;\n}\n\nexport class CollisionBox extends Math2D.Box implements IBox {\n    constructor(box?: Math2D.Box | THREE.Box2 | IBox) {\n        super();\n        if (box !== undefined) {\n            this.copy(box);\n        }\n    }\n\n    copy(box: Math2D.Box | THREE.Box2 | IBox): CollisionBox {\n        if (box instanceof Math2D.Box) {\n            this.set(box.x, box.y, box.w, box.h);\n        } else if (box instanceof THREE.Box2) {\n            this.set(box.min.x, box.min.y, box.max.x - box.min.x, box.max.y - box.min.y);\n        } else {\n            this.set(box.minX, box.minY, box.maxX - box.minX, box.maxY - box.minY);\n        }\n        return this;\n    }\n\n    get minX(): number {\n        return this.x;\n    }\n\n    set minX(minX: number) {\n        this.x = minX;\n    }\n\n    get maxX(): number {\n        return this.x + this.w;\n    }\n\n    set maxX(maxX: number) {\n        this.w = maxX - this.x;\n    }\n\n    get minY(): number {\n        return this.y;\n    }\n\n    set minY(minY: number) {\n        this.y = minY;\n    }\n\n    get maxY(): number {\n        return this.y + this.h;\n    }\n\n    set maxY(maxY: number) {\n        this.h = maxY - this.y;\n    }\n}\n\n/**\n * Collision box with additional boxes defining tighter bounds for the enclosed feature\n * (e.g.glyph bounds for text).\n */\nexport class DetailedCollisionBox extends CollisionBox {\n    constructor(box: Math2D.Box | THREE.Box2 | IBox, readonly detailBoxes: CollisionBox[]) {\n        super(box);\n    }\n}\n\nexport interface LineWithBound extends IBox {\n    line: THREE.Line3;\n}\n\nexport function isLineWithBound(box: IBox): box is LineWithBound {\n    return (box as LineWithBound).line !== undefined;\n}\n\nconst tmpCollisionBox = new CollisionBox();\n\nexport class ScreenCollisions {\n    /** The screen bounding box. */\n    readonly screenBounds = new Math2D.Box();\n\n    /** Tree of allocated bounds. */\n\n    private readonly rtree = new RBush();\n\n    /**\n     * Constructs a new ScreenCollisions object.\n     */\n    constructor() {\n        //\n    }\n\n    /**\n     * Resets the list of allocated screen bounds.\n     */\n    reset() {\n        this.rtree.clear();\n    }\n\n    /**\n     * Updates the screen bounds that are used to check if bounding boxes are visible.\n     *\n     * @param width - The width of the container.\n     * @param height - The height of the container.\n     */\n    update(width: number, height: number) {\n        this.screenBounds.set(width / -2, height / -2, width, height);\n        this.reset();\n    }\n\n    /**\n     * Marks the region of the screen intersecting with the given bounding box as allocated.\n     *\n     * @param bounds - The bounding box in NDC scaled coordinates (i.e. top left is -width/2,\n     * -height/2)\n     */\n    allocate(bounds: Math2D.Box | CollisionBox | DetailedCollisionBox): void {\n        const bbox = !(bounds instanceof CollisionBox) ? new CollisionBox(bounds) : bounds;\n        this.rtree.insert(bbox);\n    }\n\n    /**\n     * Inserts the given bounds into the rtree.\n     *\n     * @param bounds - The bounding boxes (the bounding boxes must be in the space returned from the\n     * ScreenProjector.project method).\n     */\n    allocateIBoxes(bounds: IBox[]) {\n        this.rtree.load(bounds);\n    }\n\n    /**\n     * Search for all bounds in the tree intersecting with the given box.\n     * @param box - The box used for the search.\n     * @returns An array of all IBoxes intersecting with the given box.\n     */\n    search(box: CollisionBox): IBox[] {\n        return this.rtree.search(box);\n    }\n\n    /**\n     * Checks if the given bounding box is already allocated.\n     *\n     * @param bounds - The bounding box in world coordinates.\n     */\n    isAllocated(bounds: Math2D.Box | CollisionBox): boolean {\n        const collisionBox = bounds instanceof CollisionBox ? bounds : tmpCollisionBox.copy(bounds);\n        const results = this.search(collisionBox);\n        return this.intersectsDetails(collisionBox, results);\n    }\n\n    /**\n     * Checks if the given screen bounds intersects with the frustum of the active camera.\n     *\n     * @param bounds - The bounding box in world coordinates.\n     */\n    isVisible(bounds: Math2D.Box): boolean {\n        return this.screenBounds.intersects(bounds);\n    }\n\n    /**\n     * Checks if the given screen bounds is contained within the frustum of the active camera.\n     *\n     * @param bounds - The bounding box in world coordinates.\n     */\n    isFullyVisible(bounds: Math2D.Box): boolean {\n        return this.screenBounds.containsBox(bounds);\n    }\n\n    /**\n     * Test whether a given [[CollisionBox]] intersects with any of the details in the specified\n     * [[IBox]]es.\n     *\n     * @param testBox - The box to test for intersection.\n     * @param boxes - The candidate boxes the test box may intersect with. It's assumed that the\n     * global bounds of these boxes intersect with the given test box.\n     * @returns `true` if any intersection found.\n     */\n    intersectsDetails(testBox: CollisionBox, boxes: IBox[]): boolean {\n        for (const box of boxes) {\n            if (box instanceof DetailedCollisionBox) {\n                for (const detailBox of box.detailBoxes) {\n                    if (detailBox.intersects(testBox)) {\n                        return true;\n                    }\n                }\n            } else if (isLineWithBound(box)) {\n                const boundedLine = box as LineWithBound;\n                if (this.intersectsLine(testBox, boundedLine)) {\n                    return true;\n                }\n            } else {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Computes the intersection between the supplied CollisionBox and the LineWithBound.\n     * @note The [[CollisionBox]] is in Screen Bounds space, whereas the line must be\n     * in Screen Coordinate space\n     */\n    private intersectsLine(bbox: CollisionBox, boundedLine: LineWithBound): boolean {\n        const line = boundedLine.line;\n\n        // Note, these aren't normalized, but it doesn't matter, we are just interested\n        // in the sign.\n        const lineXDiffTransformed = line.end.x - line.start.x;\n\n        // Sign of bottom left, bottom right, top left and top right corners.\n        let signBL: number;\n        let signBR: number;\n        let signTL: number;\n        let signTR: number;\n        if (lineXDiffTransformed !== 0) {\n            const lineYDiffTransformed = line.end.y - line.start.y;\n            const normalX = lineYDiffTransformed;\n            const normalY = -lineXDiffTransformed;\n            const D = line.start.y - (lineYDiffTransformed / lineXDiffTransformed) * line.start.x;\n\n            signBL = Math.sign(bbox.minX * normalX + (bbox.minY - D) * normalY);\n            signBR = Math.sign(bbox.maxX * normalX + (bbox.minY - D) * normalY);\n            signTL = Math.sign(bbox.minX * normalX + (bbox.maxY - D) * normalY);\n            signTR = Math.sign(bbox.maxX * normalX + (bbox.maxY - D) * normalY);\n        } else {\n            signBL = Math.sign(bbox.minX - line.start.x);\n            signBR = Math.sign(bbox.maxX - line.start.x);\n            signTL = Math.sign(bbox.minX - line.start.x);\n            signTR = Math.sign(bbox.maxX - line.start.x);\n        }\n        return signBL !== signBR || signBL !== signTL || signBL !== signTR;\n    }\n}\n\n/**\n * @hidden\n *\n * Shows requests for screen space during labelling in an HTML canvas, which should be sized like\n * the actual map canvas. It can be placed on top of the map canvas to show exactly which requests\n * for screen space were done.\n *\n * Also logs statistics.\n */\nexport class ScreenCollisionsDebug extends ScreenCollisions {\n    /** 2D rendering context. */\n    private m_renderContext: CanvasRenderingContext2D | null = null;\n    private m_renderingEnabled = false;\n    private m_numAllocations = 0;\n    private m_numSuccessfulTests = 0;\n    private m_numFailedTests = 0;\n    private m_numSuccessfulVisibilityTests = 0;\n    private m_numFailedVisibilityTests = 0;\n\n    /**\n     * Constructs a new ScreenCollisions object which renders its state to a 2D canvas.\n     */\n    constructor(debugCanvas: HTMLCanvasElement) {\n        super();\n\n        if (debugCanvas !== undefined && debugCanvas !== null) {\n            this.m_renderContext = debugCanvas.getContext(\"2d\");\n        }\n    }\n\n    /**\n     * Resets the list of allocated bounds and clears the debug canvas.\n     * @override\n     */\n    reset() {\n        super.reset();\n\n        this.m_numAllocations = 0;\n        this.m_numSuccessfulTests = 0;\n        this.m_numFailedTests = 0;\n        this.m_numSuccessfulVisibilityTests = 0;\n        this.m_numFailedVisibilityTests = 0;\n    }\n\n    /**\n     * Updates the screen bounds used to check if bounding boxes are visible.\n     *\n     * @param width - The width of the container.\n     * @param height - The height of the container.\n     * @override\n     */\n    update(width: number, height: number) {\n        if (this.m_renderingEnabled) {\n            logger.log(\n                `Allocations: ${this.m_numAllocations} Successful Tests: ${this.m_numSuccessfulTests} Failed Tests: ${this.m_numFailedTests}  Successful Visibility Tests: ${this.m_numSuccessfulVisibilityTests}  Failed Visibility Tests: ${this.m_numFailedVisibilityTests} `\n            );\n        }\n\n        super.update(width, height);\n\n        if (this.m_renderContext !== null) {\n            this.m_renderContext.canvas.width = width;\n            this.m_renderContext.canvas.height = height;\n        }\n\n        // activate in the browser with:\n        // window.__debugContext.setValue(\"DEBUG_SCREEN_COLLISIONS\", true)\n        this.m_renderingEnabled = debugContext.getValue(\"DEBUG_SCREEN_COLLISIONS\");\n    }\n\n    /**\n     * Marks the region of the screen intersecting with the given bounding box as allocated.\n     *\n     * @param bounds - the bounding box in world coordinates.\n     * @override\n     */\n    allocate(bounds: Math2D.Box | CollisionBox): void {\n        super.allocate(bounds);\n\n        this.m_numAllocations++;\n\n        if (this.m_renderingEnabled && this.m_renderContext !== null) {\n            this.m_renderContext.strokeStyle = \"#6666ff\";\n            this.m_renderContext.strokeRect(\n                bounds.x - this.screenBounds.x,\n                this.screenBounds.y + this.screenBounds.h - bounds.y,\n                bounds.w,\n                -bounds.h\n            );\n        }\n    }\n\n    /** @override */\n    allocateIBoxes(boundsArray: IBox[]) {\n        for (const bounds of boundsArray) {\n            this.m_numAllocations++;\n\n            if (this.m_renderingEnabled && this.m_renderContext !== null) {\n                this.m_renderContext.strokeStyle = \"#aa2222\";\n                this.m_renderContext.strokeRect(\n                    bounds.minX - this.screenBounds.x,\n                    this.screenBounds.y + this.screenBounds.h - bounds.minY,\n                    bounds.maxX - bounds.minX,\n                    -(bounds.maxY - bounds.minY)\n                );\n            }\n        }\n        super.allocateIBoxes(boundsArray);\n    }\n\n    /** @override */\n    intersectsDetails(testBox: CollisionBox, boxes: IBox[]): boolean {\n        const collisionFound = super.intersectsDetails(testBox, boxes);\n        if (this.m_renderingEnabled && this.m_renderContext !== null) {\n            const padding = collisionFound ? 2 : 1;\n            this.m_renderContext.strokeStyle = collisionFound ? \"#FF0000\" : \"#00ff00\";\n            this.m_renderContext.strokeRect(\n                testBox.x - this.screenBounds.x - padding,\n                this.screenBounds.y + this.screenBounds.h - testBox.y + padding,\n                testBox.w + 2 * padding,\n                -testBox.h - 2 * padding\n            );\n        }\n\n        if (collisionFound) {\n            this.m_numFailedTests++;\n        } else {\n            this.m_numSuccessfulTests++;\n        }\n\n        return collisionFound;\n    }\n\n    /**\n     * Checks if the given screen bounds intersects with the frustum of the active camera.\n     *\n     * @param bounds - The bounding box in world coordinates.\n     * @override\n     */\n    isVisible(bounds: Math2D.Box): boolean {\n        const visible = super.isVisible(bounds);\n\n        if (visible) {\n            this.m_numSuccessfulVisibilityTests++;\n        } else {\n            this.m_numFailedVisibilityTests++;\n        }\n        return visible;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"@here/harp-geoutils\";\nimport * as THREE from \"three\";\n\n/**\n * Determines whether a position in NDC (Normalized Device Coordinates) is inside the screen.\n * @param ndc - The position to check.\n */\nfunction isOnScreen(ndc: THREE.Vector3) {\n    return ndc.z > -1 && ndc.z < 1 && ndc.x >= -1 && ndc.x <= 1 && ndc.y >= -1 && ndc.y <= 1;\n}\n\n/**\n * Determines whether a position in NDC (Normalized Device Coordinates) is between the near\n * and far plane.\n * @param ndc - The position to check.\n */\nfunction isInRange(ndc: THREE.Vector3) {\n    return ndc.z > -1 && ndc.z < 1;\n}\n\n/**\n * @hidden\n * Handles the projection of world coordinates to screen coordinates.\n */\nexport class ScreenProjector {\n    static tempV2 = new THREE.Vector2();\n    static tempV3 = new THREE.Vector3();\n\n    private m_width: number = 0;\n    private m_height: number = 0;\n\n    /**\n     * Constructs a new `ScreenProjector`.\n     *\n     * @param m_camera - Camera to project against.\n     */\n    constructor(private m_camera: THREE.Camera) {}\n\n    /**\n     * Height of the screen.\n     */\n    get width(): number {\n        return this.m_width;\n    }\n\n    /**\n     * Width of the screen.\n     */\n    get height(): number {\n        return this.m_height;\n    }\n\n    /**\n     * Apply current projectionViewMatrix of the camera to project the source vector into\n     * screen coordinates.\n     *\n     * @param {(Vector3Like)} source The source vector to project.\n     * @param {THREE.Vector2} target The target vector.\n     * @returns {THREE.Vector2} The projected vector (the parameter 'target')\n     */\n    project(\n        source: Vector3Like,\n        target: THREE.Vector2 = new THREE.Vector2()\n    ): THREE.Vector2 | undefined {\n        const p = this.projectVector(source, ScreenProjector.tempV3);\n        return this.ndcToScreen(p, target);\n    }\n\n    /**\n     * Apply current projectionViewMatrix of the camera to project the source vector into\n     * screen coordinates.\n     *\n     * @param {(Vector3Like)} source The source vector to project.\n     * @param {THREE.Vector2} target The target vector.\n     * @returns {THREE.Vector2} The projected vector (the parameter 'target') or undefined if\n     * outside of the near/far plane. The point may be outside the screen.\n     */\n    projectToScreen(\n        source: Vector3Like,\n        target: THREE.Vector2 = new THREE.Vector2()\n    ): THREE.Vector2 | undefined {\n        const p = this.projectVector(source, ScreenProjector.tempV3);\n        if (isInRange(p)) {\n            return this.ndcToScreen(p, target);\n        }\n        return undefined;\n    }\n\n    /**\n     * Test if the area around the specified point is visible on the screen.\n     *\n     * @param {(Vector3Like)} source The centered source vector to project.\n     * @param {(Number)} halfWidth Half of the width of the area in screen space [0..1].\n     * @param {(Number)} halfHeight Half of the height of the area in screen space [0..1].\n     * @param {THREE.Vector2} target The target vector.\n     * @returns {THREE.Vector2} The projected vector (the parameter 'target') or undefined if\n     * the area is completely outside the screen.\n     */\n    projectAreaToScreen(\n        source: Vector3Like,\n        halfWidth: number,\n        halfHeight: number,\n        target: THREE.Vector2 = new THREE.Vector2()\n    ): THREE.Vector2 | undefined {\n        halfWidth *= 2;\n        halfHeight *= 2;\n        const p = this.projectVector(source, ScreenProjector.tempV3);\n        if (\n            isInRange(p) &&\n            p.x + halfWidth >= -1 &&\n            p.x - halfWidth <= 1 &&\n            p.y + halfHeight >= -1 &&\n            p.y - halfHeight <= 1\n        ) {\n            return this.ndcToScreen(p, target);\n        }\n        return undefined;\n    }\n\n    /**\n     * Apply current projectionViewMatrix of the camera to project the source vector into\n     * screen coordinates. The z component between -1 and 1 is also returned.\n     *\n     * @param {(Vector3Like)} source The source vector to project.\n     * @param {THREE.Vector3} target The target vector.\n     * @returns {THREE.Vector3} The projected vector (the parameter 'target') or undefined if\n     * outside the near / far plane.\n     */\n    project3(\n        source: Vector3Like,\n        target: THREE.Vector3 = new THREE.Vector3()\n    ): THREE.Vector3 | undefined {\n        const p = this.projectVector(source, ScreenProjector.tempV3);\n        if (p.z > -1 && p.z < 1) {\n            target.set((p.x * this.m_width) / 2, (p.y * this.m_height) / 2, p.z);\n            return target;\n        }\n        return undefined;\n    }\n\n    /**\n     * Apply current projectionViewMatrix of the camera to project the source vector. Stores\n     * result in NDC in the target vector.\n     *\n     * @param {(Vector3Like)} source The source vector to project.\n     * @param {THREE.Vector3} target The target vector.\n     * @returns {THREE.Vector3} The projected vector (the parameter 'target').\n     */\n    projectVector(source: Vector3Like, target: THREE.Vector3): THREE.Vector3 {\n        target.set(source.x, source.y, source.z).project(this.m_camera);\n        return target;\n    }\n\n    /**\n     * Fast test to check if projected point is on screen.\n     *\n     * @returns {boolean} `true` if point is on screen, `false` otherwise.\n     */\n    onScreen(source: Vector3Like): boolean {\n        const p = this.projectVector(source, ScreenProjector.tempV3);\n        return isOnScreen(p);\n    }\n\n    /**\n     * Update the `ScreenProjector` with the latest values of the screen and the camera.\n     *\n     * @param {THREE.Camera} camera Camera to project against.\n     * @param {number} width Width of screen/canvas.\n     * @param {number} height Height of screen/canvas.\n     */\n    update(camera: THREE.Camera, width: number, height: number) {\n        this.m_camera = camera;\n        this.m_width = width;\n        this.m_height = height;\n    }\n\n    private ndcToScreen(ndc: THREE.Vector3, screenCoords: THREE.Vector2): THREE.Vector2 {\n        return screenCoords.set((ndc.x * this.m_width) / 2, (ndc.y * this.m_height) / 2);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CubemapSky, GradientSky } from \"@here/harp-datasource-protocol\";\nimport { ProjectionType } from \"@here/harp-geoutils\";\nimport * as THREE from \"three\";\n\nimport { SkyCubemapTexture } from \"./SkyCubemapTexture\";\nimport { SkyGradientTexture } from \"./SkyGradientTexture\";\n\n/**\n * Class that handles {@link MapView}'s sky background.\n */\nexport class SkyBackground {\n    private m_skyTexture?: SkyGradientTexture | SkyCubemapTexture;\n\n    /**\n     * Constructs a new `SkyBackground`.\n     *\n     * @param m_sky - Sky configuration parameters.\n     * @param m_projectionType - {@link MapView}'s projection type.\n     * @param camera - {@link MapView}'s camera.\n     */\n    constructor(\n        private m_sky: GradientSky | CubemapSky,\n        private m_projectionType: ProjectionType,\n        camera: THREE.Camera\n    ) {\n        switch (this.m_sky.type) {\n            case \"gradient\":\n                this.m_skyTexture = new SkyGradientTexture(this.m_sky, this.m_projectionType);\n                this.updateCamera(camera);\n                break;\n            case \"cubemap\": {\n                this.m_skyTexture = new SkyCubemapTexture(this.m_sky);\n                break;\n            }\n        }\n    }\n\n    /**\n     * Disposes allocated resources.\n     */\n    dispose() {\n        this.m_skyTexture!.dispose();\n    }\n\n    /**\n     * Sky texture.\n     */\n    get texture(): THREE.Texture {\n        return this.m_skyTexture!.texture;\n    }\n\n    /**\n     * This method updates the skybox based on the camera position (needed for some types of sky).\n     *\n     * @param camera - The camera used in the map view.\n     */\n    updateCamera(camera: THREE.Camera) {\n        if (this.m_sky.type === \"gradient\") {\n            (this.m_skyTexture! as SkyGradientTexture).update(camera);\n        }\n    }\n\n    /**\n     * Updates the sky texture with new parameters.\n     *\n     * @param params - New sky configuration parameters.\n     * @param projectionType - Which projection is used, this may also change (in which case the\n     * textures should be recreated).\n     */\n    updateTexture(params: GradientSky | CubemapSky, projectionType: ProjectionType) {\n        const isSameSkyType =\n            this.m_sky.type === params.type && this.m_projectionType === projectionType;\n        switch (params.type) {\n            case \"gradient\":\n                if (isSameSkyType) {\n                    (this.m_skyTexture! as SkyGradientTexture).updateTexture(params);\n                } else {\n                    this.m_skyTexture = new SkyGradientTexture(params, projectionType);\n                }\n                break;\n            case \"cubemap\": {\n                if (isSameSkyType) {\n                    (this.m_skyTexture! as SkyCubemapTexture).updateTexture(params);\n                } else {\n                    this.m_skyTexture = new SkyCubemapTexture(params);\n                }\n                break;\n            }\n        }\n        this.m_projectionType = projectionType;\n        this.m_sky = params;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CubemapSky } from \"@here/harp-datasource-protocol\";\nimport { LoggerManager } from \"@here/harp-utils\";\nimport { CubeTexture, CubeTextureLoader, Texture } from \"three\";\n\nconst logger = LoggerManager.instance.create(\"SkyCubemapTexture\");\n\n/**\n * Number of faces that form a [[SkyCubemapTexture]].\n */\nexport const SKY_CUBEMAP_FACE_COUNT = 6;\n\n/**\n * Maps the faceId to the expected position in the threejs faces array.\n */\nexport enum SkyCubemapFaceId {\n    \"positiveX\",\n    \"negativeX\",\n    \"positiveY\",\n    \"negativeY\",\n    \"positiveZ\",\n    \"negativeZ\"\n}\n\n/**\n * Class that handles loading all 6 faces of a [[CubeTexture]], to be used with [[SkyBackground]].\n */\nexport class SkyCubemapTexture {\n    private m_skybox: CubeTexture;\n\n    /**\n     * Constructs a new `SkyCubemapTexture`.\n     *\n     * @param sky - Initial [[CubemapSky]] configuration.\n     */\n    constructor(sky: CubemapSky) {\n        const faces = this.createCubemapFaceArray(sky);\n        this.m_skybox =\n            faces !== undefined ? new CubeTextureLoader().load(faces) : new CubeTexture();\n    }\n\n    /**\n     * Disposes allocated resources.\n     */\n    dispose() {\n        this.m_skybox.dispose();\n    }\n\n    /**\n     * `SkyCubemapTexture`'s texture resource.\n     */\n    get texture(): Texture {\n        return this.m_skybox;\n    }\n\n    /**\n     * Updates the `SkyCubemapTexture` with new parameters.\n     *\n     * @param params - New [[CubemapSky]] configuration.\n     */\n    updateTexture(sky: CubemapSky) {\n        const faces = this.createCubemapFaceArray(sky);\n        if (faces === undefined) {\n            return;\n        }\n        this.m_skybox = new CubeTextureLoader().load(faces);\n    }\n\n    private createCubemapFaceArray(sky: CubemapSky): string[] | undefined {\n        const faces: Array<string | undefined> = [\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            undefined\n        ];\n        for (let i = 0; i < SKY_CUBEMAP_FACE_COUNT; ++i) {\n            const face: string | undefined = (sky as any)[SkyCubemapFaceId[i]];\n            if (face === undefined) {\n                logger.error(`Face \"${SkyCubemapFaceId[i]}\" was not defined.`);\n                return;\n            }\n            faces[i] = face;\n        }\n\n        return faces as string[];\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GradientSky } from \"@here/harp-datasource-protocol\";\nimport { ProjectionType } from \"@here/harp-geoutils\";\nimport { getOptionValue } from \"@here/harp-utils\";\nimport { Color, CubeTexture, DataTexture, Line3, Plane, RGBFormat, Texture, Vector3 } from \"three\";\n\nexport const DEFAULT_TEXTURE_SIZE = 512;\nexport const DEFAULT_MONOMIAL_POWER = 1;\n\n// Vectors used for skybox bitmap computation.\nconst cameraDir = [\n    new Vector3(1, 0, 0),\n    new Vector3(-1, 0, 0),\n    new Vector3(0, -1, 0),\n    new Vector3(0, 1, 0),\n    new Vector3(0, 0, 1),\n    new Vector3(0, 0, -1)\n];\nconst cameraRight = [\n    new Vector3(0, 0, -1),\n    new Vector3(0, 0, 1),\n    new Vector3(1, 0, 0),\n    new Vector3(1, 0, 0),\n    new Vector3(1, 0, 0),\n    new Vector3(-1, 0, 0)\n];\nconst cameraUp = [\n    new Vector3(0, 1, 0),\n    new Vector3(0, 1, 0),\n    new Vector3(0, 0, 1),\n    new Vector3(0, 0, -1),\n    new Vector3(0, 1, 0),\n    new Vector3(0, 1, 0)\n];\n\n/**\n * Class tha generates a texture containing a linear gradient, to be used with [[SkyBackground]].\n *\n * The gradient is mapped onto a sphere, where `topColor` maps to the top of the upper hemisphere,\n * `bottomColor` to the bottom of the upper hemisphere, and `groundColor` fills the bottom\n *  hemisphere..\n */\nexport class SkyGradientTexture {\n    private readonly m_width: number;\n    private readonly m_faceCount: number;\n    private readonly m_faces: DataTexture[];\n    private readonly m_skybox?: CubeTexture;\n\n    // Used only in the planar case.\n    private readonly m_farClipPlaneDividedVertically?: THREE.Line3;\n    private readonly m_groundPlane?: THREE.Plane;\n    private readonly m_bottomMidFarPoint?: THREE.Vector3;\n    private readonly m_topMidFarPoint?: THREE.Vector3;\n    private readonly m_horizonPosition?: THREE.Vector3;\n    private readonly m_farClipPlaneCorners?: THREE.Vector3[];\n\n    /**\n     * Constructs a new `SkyGradientTexture`.\n     *\n     * @param sky - Initial [[GradientSky]] configuration.\n     * @param m_projectionType - {@link MapView}'s projection type.\n     * @param m_height - Optional height parameter.\n     */\n    constructor(\n        sky: GradientSky,\n        private readonly m_projectionType: ProjectionType,\n        private readonly m_height: number = DEFAULT_TEXTURE_SIZE\n    ) {\n        const topColor = new Color(sky.topColor);\n        const bottomColor = new Color(sky.bottomColor);\n        const groundColor = new Color(sky.groundColor);\n\n        this.m_width = this.m_projectionType === ProjectionType.Planar ? 1.0 : this.m_height;\n        this.m_faceCount = this.m_projectionType === ProjectionType.Planar ? 1.0 : 6.0;\n        this.m_faces = [];\n        for (let i = 0; i < this.m_faceCount; ++i) {\n            const data = new Uint8Array(3 * this.m_width * this.m_height);\n            this.fillTextureData(data, i, topColor, bottomColor, groundColor, sky.monomialPower);\n\n            const texture = new DataTexture(data, this.m_width, this.m_height, RGBFormat);\n            texture.needsUpdate = true;\n            texture.unpackAlignment = 1;\n            this.m_faces.push(texture);\n        }\n\n        if (this.m_projectionType === ProjectionType.Spherical) {\n            this.m_skybox = new CubeTexture(this.m_faces);\n            this.m_skybox.needsUpdate = true;\n        } else {\n            this.m_farClipPlaneDividedVertically = new Line3();\n            this.m_groundPlane = new Plane(new Vector3(0, 0, 1));\n            this.m_bottomMidFarPoint = new Vector3();\n            this.m_topMidFarPoint = new Vector3();\n            this.m_horizonPosition = new Vector3();\n            this.m_farClipPlaneCorners = [\n                new Vector3(),\n                new Vector3(),\n                new Vector3(),\n                new Vector3()\n            ];\n        }\n    }\n\n    /**\n     * Disposes allocated resources.\n     */\n    dispose() {\n        for (let i = 0; i < this.m_faceCount; ++i) {\n            this.m_faces[i].dispose();\n        }\n        if (this.m_projectionType === ProjectionType.Spherical) {\n            this.m_skybox!.dispose();\n        }\n    }\n\n    /**\n     * `SkyGradientTexture`'s texture resource (simple texture or cubemap depending on\n     * {@link MapView}'s projection).\n     */\n    get texture(): Texture {\n        return this.m_projectionType === ProjectionType.Planar ? this.m_faces[0] : this.m_skybox!;\n    }\n\n    /**\n     * This method updates the position of the texture depending on the camera frustum.\n     *\n     * @param camera - The camera used in the map view.\n     */\n    update(camera: THREE.Camera) {\n        if (this.m_projectionType === ProjectionType.Planar) {\n            this.setHorizonPosition(camera);\n            this.updateTexturePosition();\n        }\n    }\n\n    /**\n     * Updates the `SkyGradientTexture` with new parameters.\n     *\n     * @param params - New [[GradientSky]] configuration.\n     */\n    updateTexture(sky: GradientSky) {\n        for (let i = 0; i < this.m_faceCount; ++i) {\n            this.fillTextureData(\n                this.m_faces[i].image.data,\n                i,\n                new Color(sky.topColor),\n                new Color(sky.bottomColor),\n                new Color(sky.groundColor),\n                sky.monomialPower\n            );\n            this.m_faces[i].needsUpdate = true;\n        }\n        if (this.m_projectionType === ProjectionType.Spherical) {\n            this.m_skybox!.needsUpdate = true;\n        }\n    }\n\n    // When creating the texture, a Uint8Array is required, because the resulting texture passed\n    // to the scene as a background, is a texImage2D object, that does not accept UintClampedArray\n    // https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\n    // But, when updating the texture, a Uint8ClampedArray is passed as argument, because\n    // this.m_texture.image.data returns a Uint8ClampedArray. That's why this method accepts both.\n    private fillTextureData(\n        data: Uint8ClampedArray | Uint8Array,\n        faceIdx: number,\n        topColor: Color,\n        bottomColor: Color,\n        groundColor: Color,\n        monomialPower?: number\n    ) {\n        const color = new Color();\n        const dir = new Vector3();\n        const right = new Vector3();\n        const up = new Vector3();\n\n        const upDir = new Vector3(0, 0, 1);\n        for (let i = 0; i < this.m_height; ++i) {\n            for (let j = 0; j < this.m_width; ++j) {\n                if (this.m_projectionType === ProjectionType.Spherical) {\n                    const offsetX = right\n                        .copy(cameraRight[faceIdx])\n                        .multiplyScalar(((j + 0.5) / this.m_width) * 2.0 - 1.0);\n                    const offsetY = up\n                        .copy(cameraUp[faceIdx])\n                        .multiplyScalar(((i + 0.5) / this.m_height) * 2.0 - 1.0);\n                    dir.copy(cameraDir[faceIdx]).add(offsetX).add(offsetY).normalize();\n                    const t = Math.max(upDir.dot(dir), 0);\n\n                    color\n                        .copy(groundColor)\n                        .lerp(bottomColor, Math.min(t * 100, 1))\n                        .lerp(topColor, t ** getOptionValue(monomialPower, DEFAULT_MONOMIAL_POWER))\n                        .multiplyScalar(255);\n                } else {\n                    const t = i / this.m_height;\n                    if (i === 0) {\n                        color.copy(groundColor).multiplyScalar(255);\n                    } else {\n                        color\n                            .copy(bottomColor)\n                            .lerp(\n                                topColor,\n                                t ** getOptionValue(monomialPower, DEFAULT_MONOMIAL_POWER)\n                            )\n                            .multiplyScalar(255);\n                    }\n                }\n\n                data[i * this.m_width * 3 + j * 3] = color.r;\n                data[i * this.m_width * 3 + j * 3 + 1] = color.g;\n                data[i * this.m_width * 3 + j * 3 + 2] = color.b;\n            }\n        }\n    }\n\n    private setHorizonPosition(camera: THREE.Camera) {\n        this.m_farClipPlaneCorners![0].set(-1, -1, 1).unproject(camera);\n        this.m_farClipPlaneCorners![1].set(1, -1, 1).unproject(camera);\n        this.m_farClipPlaneCorners![2].set(-1, 1, 1).unproject(camera);\n        this.m_farClipPlaneCorners![3].set(1, 1, 1).unproject(camera);\n\n        this.m_bottomMidFarPoint!.copy(this.m_farClipPlaneCorners![0])\n            .add(this.m_farClipPlaneCorners![1])\n            .multiplyScalar(0.5);\n        this.m_topMidFarPoint!.copy(this.m_farClipPlaneCorners![2])\n            .add(this.m_farClipPlaneCorners![3])\n            .multiplyScalar(0.5);\n        this.m_farClipPlaneDividedVertically!.set(this.m_bottomMidFarPoint, this.m_topMidFarPoint);\n\n        const hasIntersection = this.m_groundPlane!.intersectLine(\n            this.m_farClipPlaneDividedVertically!,\n            this.m_horizonPosition!\n        );\n\n        // When there is no intersection between the ground plane and the\n        // farClipPlaneDividedVertically, be sure that the horizon is reset. Otherwise a previous\n        // intersection point stored in the m_horizonPosition will be considered the valid one.\n        if (!hasIntersection) {\n            this.m_horizonPosition!.set(0.0, 0.0, 0.0);\n        }\n    }\n\n    private updateTexturePosition() {\n        const coveredBySky = this.m_bottomMidFarPoint!.distanceTo(this.m_horizonPosition!);\n        const frustumHeight = this.m_farClipPlaneDividedVertically!.distance();\n        const skyRatio = coveredBySky / frustumHeight;\n\n        // If there is no intersection between the ground plane and the line that defines the far\n        // clip plane divided vertically, it means that there is no sky visible and therefore the\n        // ground color should be displayed. When there is no intersection, the length of the\n        // this.m_horizonPosition is still equal to zero, as threejs initialize an empty vector with\n        // all the three components to zero.\n        // If there is an intersection, calculate the offset.\n        const ratio = this.m_horizonPosition!.length() === 0 ? 1 : skyRatio - 2 / this.m_height;\n\n        // If the bottom part of the far clipping plane is under the ground plane, scroll the\n        // texture down. Otherwise, the camera is looking at the sky, therefore, scroll the texture\n        // up.\n        this.m_faces[0].offset.set(0, this.m_bottomMidFarPoint!.z <= 0 ? -ratio : skyRatio);\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { EarthConstants, sphereProjection } from \"@here/harp-geoutils\";\nimport { Math2D } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { CameraUtils } from \"./CameraUtils\";\nimport { MapViewUtils } from \"./Utils\";\n\nconst twoPi = Math.PI * 2;\n\n// Keep counter clockwise order.\nexport enum CanvasSide {\n    Bottom,\n    Right,\n    Top,\n    Left\n}\n\nexport function nextCanvasSide(side: CanvasSide): CanvasSide {\n    return (side + 1) % 4;\n}\n\nexport function previousCanvasSide(side: CanvasSide): CanvasSide {\n    return (side + 3) % 4;\n}\n\n/**\n * Class computing horizon tangent points and intersections with canvas for spherical projection.\n *\n * @remarks\n *\n * The horizon for a sphere is a circle formed by all intersections of tangent lines passing through\n * the camera with said sphere. It lies on a plane perpendicular to the sphere normal at the camera\n * and it's center is at the line segment joining the sphere center and the camera.\n *\n * The further the camera is, the nearer the horizon center gets to the sphere center, only reaching\n * the sphere center when the camera is at infinity. In other words, the horizon observed from a\n * finite distance is always smaller than a great circle (a circle with the sphere radius, dividing\n * the sphere in two hemispheres, and therefore it's radius is smaller than the sphere's.\n *\n * @internal\n */\nexport class SphereHorizon {\n    private readonly m_matrix: THREE.Matrix4;\n    private readonly m_radius: number;\n    private readonly m_normalToTangentAngle: number;\n    private readonly m_distanceToHorizonCenter: number;\n    private readonly m_intersections: number[][] = [];\n    private m_isFullyVisible: boolean = true;\n    private readonly m_cameraPitch: number;\n\n    /**\n     * Constructs the SphereHorizon for the given camera.\n     *\n     * @param m_camera - The camera used as a reference to compute the horizon.\n     * @param m_cornerIntersects - Array with a boolean for each canvas corner telling whether it\n     * intersects with the world. Corners are in ccw-order starting with bottom left.\n     */\n    constructor(\n        private readonly m_camera: THREE.PerspectiveCamera,\n        private readonly m_cornerIntersects: boolean[]\n    ) {\n        //\n        //          TL :,,,,,,,,,,,,,,,,,,,,,,,,,,,,! TR canvas corner (proj. on horizon plane)\n        //             >                            +\n        //             >                            +\n        //             ::                           +\n        //              +                           >\n        //              >         `::::::'         !\"\n        //              >     `:::\"      ':::,     +\n        //              +   :!,              .!!`  +\n        //              ,,:;`                   :+`>\n        //              >T                        T# <-- Sphere radius to tangent angle (90 deg).\n        //             !!>                       `+!(`\n        //            =' +                      `.+  {:\n        //           /.  +                     `` >   |:`\n        //          /`   ::                   .`  >    |:.\n        //         /`     >         camZ     '`  `+     /`'`\n        //        ;,      +           *,`   '    !,      ( `'\n        //       ,^       +              `.~     +       ./  .`\n        //       )        +               ' ```  >        !~  `.\n        //      *`        '~             '    ``.>         (    .` tangentDistance\n        //     `\\          +           `'        ?``       '?    `'\n        //     /`          +          `.        :.  ```     )      `.\n        //    `\\           >         `.         >     ```   .=       .`\n        //    |`           +        ``          +        ``` (        `.\n        //    /            \"!      .`           +           `?!         '`\n        //   ,+             !,,,,,!:,,,,,,,,,,,,,             {.`        `.\n        //   /`            BL    '               BR           )  ```       .`\n        //   /                  '                             >`    ``      `'\n        //   /                 '                              `*      ```     .`\n        //  ,:                ' Sphere radius                  )     camZ```   `.\n        //  ?`              `.                                 )           ```   `.\n        //  /              `.                                  )              `.`  '`    camY\n        //  /             ``              horizon radius       /                 ````.   ^\n        //  /            .`          |<----------------------->/                   ``.'` '\n        //  /           .`           |                         /`                     `','  camX\n        //  /          O`````````````C`````````````````````````(,````````````````````````E-----*\n        //             |             |                distanceToHorizonCenter            |\n        //             |             |<------------------------------------------------->|\n        //             |                                                                 |\n        //             |<--------------------------------------------------------------->|\n        //                                      cameraHeight\n        // O -> Sphere center\n        // C -> Horizon center\n        // E -> Camera (eye)\n        // T -> Tangent points (also intersections with projected canvas)\n\n        const earthRadiusSq = EarthConstants.EQUATORIAL_RADIUS * EarthConstants.EQUATORIAL_RADIUS;\n        const xAxis = new THREE.Vector3().setFromMatrixColumn(m_camera.matrixWorld, 0).normalize();\n        const zAxis = m_camera.position.clone().normalize();\n        const yAxis = new THREE.Vector3().crossVectors(zAxis, xAxis);\n\n        const cameraHeight = m_camera.position.length();\n        this.m_normalToTangentAngle = Math.asin(EarthConstants.EQUATORIAL_RADIUS / cameraHeight);\n\n        const tangentDistance = Math.sqrt(cameraHeight * cameraHeight - earthRadiusSq);\n        this.m_distanceToHorizonCenter = tangentDistance * Math.cos(this.m_normalToTangentAngle);\n        const horizonCenterLength = cameraHeight - this.m_distanceToHorizonCenter;\n        this.m_radius = Math.sqrt(earthRadiusSq - horizonCenterLength * horizonCenterLength);\n        this.m_cameraPitch = MapViewUtils.extractAttitude(\n            { projection: sphereProjection },\n            this.m_camera\n        ).pitch;\n        const horizonCenter = new THREE.Vector3().copy(zAxis).setLength(horizonCenterLength);\n        this.m_matrix = new THREE.Matrix4()\n            .makeBasis(xAxis, yAxis, zAxis)\n            .setPosition(horizonCenter);\n        this.computeIntersections();\n    }\n\n    /**\n     * Gets the world coordinates of a point in the horizon corresponding to the given parameter.\n     *\n     * @param t - Parameter value in [0,1] corresponding to the point in the horizon circle at\n     * angle t*(arcEnd - arcStart)*2*pi counter clockwise.\n     * @param arcStart - Start of the arc covered by parameter t, corresponds to angle\n     * arcStart*2*pi.\n     * @param arcEnd - End of the arc covered by parameter t, corresponds to angle arcEnd*2*pi.\n     * @param target - Optional target where resulting world coordinates will be set.\n     * @returns the resulting point in world space.\n     */\n    getPoint(\n        t: number,\n        arcStart: number = 0,\n        arcEnd: number = 1,\n        target: THREE.Vector3 = new THREE.Vector3()\n    ): THREE.Vector3 {\n        const startAngle = arcStart * twoPi;\n        const endAngle = arcEnd >= arcStart ? arcEnd * twoPi : (arcEnd + 1) * twoPi;\n        const deltaAngle = endAngle - startAngle;\n        const angle = startAngle + t * deltaAngle;\n\n        target.set(this.m_radius * Math.cos(angle), this.m_radius * Math.sin(angle), 0);\n        target.applyMatrix4(this.m_matrix);\n        return target;\n    }\n\n    /**\n     * Subdivides and arc of the horizon circle, providing the world coordinates of the divisions.\n     *\n     * @param callback - Function called for every division point, getting the point world\n     * coordinates as parameter.\n     * @param tStart - Angular parameter of the arc's start point [0,1].\n     * @param tEnd - Angular parameter of the arc's end point [0,1].\n     * @param maxNumPoints - Number of division points for the whole horizon. Smaller arcs will\n     * be assigned a proportionally smaller number of points.\n     */\n    getDivisionPoints(\n        callback: (point: THREE.Vector3) => void,\n        tStart: number = 0,\n        tEnd: number = 1,\n        maxNumPoints: number = 10\n    ) {\n        const numPoints = Math.max(\n            Math.ceil(((tEnd < tStart ? 1 + tEnd : tEnd) - tStart) * maxNumPoints),\n            1\n        );\n        // Point corresponding to tEnd is omitted, hence the strict less condition in the loop.\n        for (let d = 0; d < numPoints; d++) {\n            callback(this.getPoint(d / numPoints, tStart, tEnd));\n        }\n    }\n\n    /**\n     * Indicates whether the horizon circle is fully visible.\n     * @returns 'True' if horizon is fully visible, false otherwise.\n     */\n    get isFullyVisible(): boolean {\n        return this.m_isFullyVisible;\n    }\n\n    /**\n     * Gets the horizon intersections with the specified canvas side, specified in angular\n     * parameters [0,1].\n     * @returns the intersections with the canvas.\n     */\n    getSideIntersections(side: CanvasSide): number[] {\n        return this.m_intersections[side];\n    }\n\n    private isTangentVisible(side: CanvasSide): boolean {\n        switch (side) {\n            case CanvasSide.Top: {\n                const eyeToTangentAngle = this.m_normalToTangentAngle - this.m_cameraPitch;\n                return CameraUtils.getTopFov(this.m_camera) >= Math.abs(eyeToTangentAngle);\n            }\n            case CanvasSide.Bottom: {\n                const eyeToTangentAngle = this.m_normalToTangentAngle + this.m_cameraPitch;\n                return CameraUtils.getBottomFov(this.m_camera) >= Math.abs(eyeToTangentAngle);\n            }\n            case CanvasSide.Left: {\n                const eyeToTangentAngle = this.m_normalToTangentAngle;\n                return (\n                    CameraUtils.getLeftFov(this.m_camera) >= Math.abs(eyeToTangentAngle) &&\n                    this.m_cameraPitch <= CameraUtils.getBottomFov(this.m_camera)\n                );\n            }\n            case CanvasSide.Right: {\n                const eyeToTangentAngle = this.m_normalToTangentAngle;\n                return (\n                    CameraUtils.getRightFov(this.m_camera) >= Math.abs(eyeToTangentAngle) &&\n                    this.m_cameraPitch <= CameraUtils.getBottomFov(this.m_camera)\n                );\n            }\n        }\n    }\n\n    private getTangentOnSide(side: CanvasSide): number {\n        switch (side) {\n            case CanvasSide.Bottom:\n                return 0.75;\n            case CanvasSide.Right:\n                return 0;\n            case CanvasSide.Top:\n                return 0.25;\n            case CanvasSide.Left:\n                return 0.5;\n        }\n    }\n\n    private computeIntersections() {\n        // Look for the intersections of the canvas sides projected in the horizon plane with the\n        // horizon circle.\n        // Top and bottom canvas sides are horizontal lines at plane coordinates yTop and yBottom\n        // respectively. Left and right sides are lines whose slope depends on the camera pitch.\n        //\n        // Front View (horizon plane):\n        //\n        //                        Top\n        //        TL '{~~~~~~~~~~~~~~~~~~~~~~~~~~}. TR\n        //            (                          (\n        //            ;\"   '!;!!!!!!!!!!!!;!'   ::\n        //             I>^^:                :^^|I <--------- Canvas-Horizon intersection\n        //          ~>+%.                      ,$+>,\n        //        !|~   (                      (   :|!\n        //      ~/'   L (----------C----------`) R   ,/\"\n        //     /;       `/         ^,         )`       ^|\n        //    }'         (         |`         (         '}\n        //   }`          ,^        |`        *.          .}\n        //  ('         BL !::::::::|:::::::::: BR         ,)\n        // ,{                      |`  Bottom              }`\n        // }                   camZ|`                      `}\n        // }                       |`                       }\n        // }                       E----> camX              }\n        // }                                                } Horizon circle\n        // }                                               `}\n        // ~{                                              }.\n        //  {.                                            '(\n        //   }`                                          `}\n        //   `}.                                        .}\n        //     )!                                      !/\n        //      :/.                                  '/:\n        //        ^|'                              ,|^\n        //          :>+.                        .+>:\n        //             !^^;'                ';^^!\n        //                 :;!!!!!!!!!!!!;!;:\n        //\n        // Top-down view (plane defined by camZ and camX):\n        //\n        //                        Top\n        //        TL_______________________________ TR\n        //          \\              |              /\n        //           \\   :;!!!!!!!!!!!!!!;!;:    /\n        //            I^;'         |        ';^^I\n        //         :>+.\\           |           /.+>:\n        //       ^|'    \\          |          /    ,|^ <--- Horizon\n        //     :/.       \\         |         /       '/:\n        //      }         L--------C--------R_________}_________\n        //     }           \\       ^camZ   /           }       ^\n        //      }           \\      |      /           }        |\n        //     :/.           \\     |     /           :/.       |\n        //       ^|'          BL----B----BR_______ !|'         |\n        //         :>+.        \\   |   /        ^              | eyeToHorizon\n        //            !^;'      \\  |  /      ';!|              |\n        //               :;!!!!!!\\ | /!!;!;:!   | eyeToBottom  |\n        //                        \\|/           |              |\n        //                         E----> camX__v______________v\n\n        const yBottom =\n            this.m_distanceToHorizonCenter *\n            Math.tan(this.m_cameraPitch - CameraUtils.getBottomFov(this.m_camera));\n        let tTopRight: number | undefined;\n        let tBottomRight: number | undefined;\n\n        // Collect all intersections in counter-clockwise order.\n        for (let side = CanvasSide.Bottom; side < 4; side++) {\n            if (this.isTangentVisible(side)) {\n                this.m_intersections.push([this.getTangentOnSide(side)]);\n                continue;\n            }\n\n            const sideIntersections = new Array<number | undefined>();\n            this.m_isFullyVisible = false;\n            switch (side) {\n                case CanvasSide.Bottom: {\n                    sideIntersections.push(...this.computeTBIntersections(yBottom));\n                    break;\n                }\n                case CanvasSide.Right: {\n                    const rightFov = CameraUtils.getRightFov(this.m_camera);\n                    const intersections = this.computeLRIntersections(yBottom, rightFov);\n                    if (intersections) {\n                        [tTopRight, tBottomRight] = intersections;\n                        sideIntersections.push(\n                            tBottomRight !== undefined ? 1 + tBottomRight : undefined,\n                            tTopRight\n                        );\n                    }\n                    break;\n                }\n                case CanvasSide.Top: {\n                    const yTop =\n                        this.m_distanceToHorizonCenter *\n                        Math.tan(this.m_cameraPitch + CameraUtils.getTopFov(this.m_camera));\n                    sideIntersections.push(...this.computeTBIntersections(yTop).reverse());\n                    break;\n                }\n                case CanvasSide.Left: {\n                    const leftFov = CameraUtils.getLeftFov(this.m_camera);\n                    if (leftFov === CameraUtils.getRightFov(this.m_camera)) {\n                        // Left side intersections are symmetrical to right ones.\n                        sideIntersections.push(\n                            tTopRight !== undefined ? 0.5 - tTopRight : undefined,\n                            tBottomRight !== undefined ? 0.5 - tBottomRight : undefined\n                        );\n                    } else {\n                        const isections = this.computeLRIntersections(yBottom, leftFov);\n                        if (isections) {\n                            sideIntersections.push(\n                                0.5 - isections[0], // top\n                                isections[1] !== undefined ? 0.5 - isections[1] : undefined // bottom\n                            );\n                        }\n                    }\n                    break;\n                }\n            }\n\n            // Filter out undefined values and horizon intersections that are not visible because\n            // the canvas corner intersects the world (this may happen with off-center projections).\n            const hasCorners = [\n                this.m_cornerIntersects[side],\n                this.m_cornerIntersects[nextCanvasSide(side)]\n            ];\n            this.m_intersections.push(\n                sideIntersections.filter(\n                    (val, i) => val !== undefined && !hasCorners[i]\n                ) as number[]\n            );\n        }\n    }\n\n    /**\n     * Computes horizon intersections with top or bottom canvas side.\n     *\n     * @returns positions of the intersections in the horizon circle, first left, then right\n     * Values are in range [0,1].\n     */\n    private computeTBIntersections(y: number): [number, number] {\n        const radiusSq = this.m_radius * this.m_radius;\n        const x = Math.sqrt(radiusSq - y * y);\n        const t = Math.atan2(y, x) / twoPi;\n        return [0.5 - t, t > 0 ? t : 1 + t];\n    }\n\n    /**\n     * Computes horizon intersections with left or right canvas side.\n     *\n     * @returns positions of the intersections in the horizon circle, first top, then bottom\n     * (or undefined if not visible). Values are in range [-0.5,0.5].\n     */\n    private computeLRIntersections(\n        yBottom: number,\n        sideFov: number\n    ): [number, number?] | undefined {\n        // Define vertical canvas side line by finding the middle and bottom points of\n        // its projection on the horizon plane.\n        const eyeToHorizon = this.m_distanceToHorizonCenter / Math.cos(this.m_cameraPitch);\n        const yMiddle = this.m_distanceToHorizonCenter * Math.tan(this.m_cameraPitch);\n        const xMiddle = eyeToHorizon * Math.tan(sideFov);\n        const bottomFov = CameraUtils.getBottomFov(this.m_camera);\n        const eyeToBottom =\n            (this.m_distanceToHorizonCenter * Math.cos(bottomFov)) /\n            Math.cos(this.m_cameraPitch - bottomFov);\n        const xBottom = (xMiddle * eyeToBottom) / eyeToHorizon;\n        const intersections = Math2D.intersectLineAndCircle(\n            xBottom,\n            yBottom,\n            xMiddle,\n            yMiddle,\n            this.m_radius\n        );\n\n        if (!intersections) {\n            return undefined;\n        }\n        const yTopRight = intersections.y1;\n        const tTop = Math.atan2(yTopRight, intersections.x1) / twoPi;\n\n        // If there's a bottom intersection check if it's visible (its above the y\n        // coordinate of the bottom canvas side).\n        const hasBottomIntersection = -yTopRight >= yBottom && intersections.x2 !== undefined;\n        const tBottom = hasBottomIntersection\n            ? Math.atan2(intersections.y2!, intersections.x2!) / twoPi\n            : undefined;\n        return [tTop, tBottom];\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    EarthConstants,\n    GeoCoordinates,\n    GeoPolygon,\n    GeoPolygonCoordinates,\n    isAntimeridianCrossing,\n    Projection,\n    ProjectionType\n} from \"@here/harp-geoutils\";\nimport { assert } from \"@here/harp-utils\";\nimport { PerspectiveCamera, Vector2, Vector3 } from \"three\";\n\nimport { CanvasSide, nextCanvasSide, previousCanvasSide, SphereHorizon } from \"./SphereHorizon\";\nimport { MapViewUtils } from \"./Utils\";\nimport { ViewBounds } from \"./ViewBounds\";\n\n// Rough, empirical rule to compute the number of divisions needed for a geopolygon edge to keep\n// the deviation from the view bound edge it must follow within acceptable values.\nexport function computeEdgeDivisions(geoStart: GeoCoordinates, geoEnd: GeoCoordinates): number {\n    const maxLatitudeSpan = 20;\n    const maxLongitudeSpan = 5;\n\n    const latitudeSpan = Math.abs(geoEnd.latitude - geoStart.latitude);\n    const longitudeSpan = geoStart.minLongitudeSpanTo(geoEnd);\n    return Math.ceil(Math.max(latitudeSpan / maxLatitudeSpan, longitudeSpan / maxLongitudeSpan));\n}\n\nconst ccwCanvasCornersNDC: Array<{ x: number; y: number }> = [\n    { x: -1, y: -1 }, // bottom left\n    { x: 1, y: -1 }, // bottom right\n    { x: 1, y: 1 }, // top right\n    { x: -1, y: 1 } // top left\n];\n\n/**\n * Generates Bounds for a camera view and a spherical projection\n *\n * @internal\n */\nexport class SphereViewBounds implements ViewBounds {\n    constructor(readonly camera: PerspectiveCamera, readonly projection: Projection) {\n        assert(projection.type === ProjectionType.Spherical);\n    }\n\n    /**\n     * @override\n     */\n    generate(): GeoPolygon | undefined {\n        const coordinates = this.findBoundsIntersections();\n\n        this.wrapAroundPoles(coordinates);\n\n        return coordinates.length > 2\n            ? new GeoPolygon(coordinates as GeoPolygonCoordinates, false, true)\n            : undefined;\n    }\n\n    private addSideSegmentSubdivisions(\n        coordinates: GeoCoordinates[],\n        NDCStart: { x: number; y: number },\n        NDCEnd: { x: number; y: number },\n        geoStart: GeoCoordinates,\n        geoEnd: GeoCoordinates\n    ) {\n        coordinates.push(geoStart);\n\n        const divisionCount = computeEdgeDivisions(geoStart, geoEnd);\n        if (divisionCount <= 1) {\n            return;\n        }\n\n        const NDCStep = new Vector2(NDCEnd.x - NDCStart.x, NDCEnd.y - NDCStart.y).multiplyScalar(\n            1 / divisionCount\n        );\n\n        const NDCDivision = new Vector2(NDCStart.x, NDCStart.y);\n        for (let i = 0; i < divisionCount - 1; i++) {\n            NDCDivision.add(NDCStep);\n            const intersection = MapViewUtils.rayCastWorldCoordinates(\n                { camera: this.camera, projection: this.projection },\n                NDCDivision.x,\n                NDCDivision.y\n            );\n            if (intersection) {\n                coordinates.push(this.projection.unprojectPoint(intersection));\n            }\n        }\n    }\n\n    private addSideIntersections(\n        coordinates: GeoCoordinates[],\n        side: CanvasSide,\n        geoStartCorner?: GeoCoordinates,\n        geoEndCorner?: GeoCoordinates,\n        horizon?: SphereHorizon\n    ) {\n        const startNDCCorner = ccwCanvasCornersNDC[side];\n        const endNDCCorner = ccwCanvasCornersNDC[nextCanvasSide(side)];\n\n        if (geoStartCorner && geoEndCorner) {\n            // No horizon visible on this side of the canvas, generate polygon vertices from\n            // intersections of the canvas side with the world.\n            this.addSideSegmentSubdivisions(\n                coordinates,\n                startNDCCorner,\n                endNDCCorner,\n                geoStartCorner,\n                geoEndCorner\n            );\n            return;\n        }\n\n        if (!horizon) {\n            return;\n        }\n\n        // Bounds on this side of the canvas need to be completed with the horizon.\n        const horizonIntersections = horizon.getSideIntersections(side);\n        if (horizonIntersections.length === 0) {\n            return;\n        }\n\n        if (geoStartCorner) {\n            // Generate polygon vertices from intersections of this canvas side with the world\n            // from its starting corner till the last intersection with the horizon.\n\n            const worldHorizonPoint = horizon.getPoint(\n                horizonIntersections[horizonIntersections.length - 1]\n            );\n            const geoHorizonPoint = this.projection.unprojectPoint(worldHorizonPoint);\n            this.addSideSegmentSubdivisions(\n                coordinates,\n                startNDCCorner,\n                worldHorizonPoint.project(this.camera),\n                geoStartCorner,\n                geoHorizonPoint\n            );\n        } else {\n            // Subdivide horizon from last horizon intersection on previous side to this side first.\n            const prevSide = previousCanvasSide(side);\n            let prevSideIntersections = horizon.getSideIntersections(prevSide);\n            if (prevSideIntersections.length === 0) {\n                // When bottom canvas side cuts the horizon above its center, right horizon\n                // tangent is not visible. Last horizon tangent is top one.\n                prevSideIntersections = horizon.getSideIntersections(previousCanvasSide(prevSide));\n            }\n            assert(prevSideIntersections.length > 0);\n\n            horizon.getDivisionPoints(\n                point => {\n                    coordinates.push(this.projection.unprojectPoint(point));\n                },\n                prevSideIntersections[prevSideIntersections.length - 1],\n                horizonIntersections[0]\n            );\n        }\n\n        if (horizonIntersections.length > 1) {\n            // Subdivide side segment between two horizon intersections.\n            const worldHorizonStart = horizon.getPoint(horizonIntersections[0]);\n            const worldHorizonEnd = horizon.getPoint(horizonIntersections[1]);\n            const geoHorizonStart = this.projection.unprojectPoint(worldHorizonStart);\n            const geoHorizonEnd = this.projection.unprojectPoint(worldHorizonEnd);\n\n            this.addSideSegmentSubdivisions(\n                coordinates,\n                worldHorizonStart.project(this.camera),\n                worldHorizonEnd.project(this.camera),\n                geoHorizonStart,\n                geoHorizonEnd\n            );\n        }\n\n        if (geoEndCorner) {\n            // Subdivice side segment from last horizon intersection to the ending corner of this\n            // canvas side.\n            const worldHorizonPoint = horizon.getPoint(horizonIntersections[0]);\n            const geoHorizonPoint = this.projection.unprojectPoint(worldHorizonPoint);\n            this.addSideSegmentSubdivisions(\n                coordinates,\n                worldHorizonPoint.project(this.camera),\n                endNDCCorner,\n                geoHorizonPoint,\n                geoEndCorner\n            );\n        }\n    }\n\n    private findBoundsIntersections(): GeoCoordinates[] {\n        const coordinates: GeoCoordinates[] = [];\n        const [cornerCoordinates, numCorners] = this.addCanvasCornerIntersection();\n\n        // Horizon points need to be added to complete the bounds if not all canvas corners\n        // intersect with the world.\n        const horizon =\n            numCorners < 4\n                ? new SphereHorizon(\n                      this.camera,\n                      cornerCoordinates.map(value => value !== undefined)\n                  )\n                : undefined;\n\n        if (numCorners === 0 && horizon!.isFullyVisible) {\n            // Bounds are generated entirely from equidistant points obtained from the horizon\n            // circle.\n            horizon!.getDivisionPoints(point => {\n                coordinates.push(this.projection.unprojectPoint(point));\n            });\n            return coordinates;\n        }\n\n        for (let side = CanvasSide.Bottom; side < 4; side++) {\n            const startCorner = cornerCoordinates[side];\n            const endCorner = cornerCoordinates[nextCanvasSide(side)];\n            this.addSideIntersections(coordinates, side, startCorner, endCorner, horizon);\n        }\n        return coordinates;\n    }\n\n    private wrapAroundPoles(coordinates: GeoCoordinates[]) {\n        // If one of the poles is inside the view bounds, the polygon would have to cover the pole,\n        // which is not possible in geo space. Instead, additional vertices (numbered in order from\n        // 1 to 6 in the diagram below) are added to the polygon so that it wraps around the pole,\n        // covering the same area(except for the pole circle that cannot be mapped to geospace).\n        // The globe is cut in two hemispheres by the meridians at the camera longitude (camLon) and\n        // its antimeridian (at camLon+180). Then, the polygon side crossing the camera antimeridian\n        // is found, and the new pole wrapping vertices are inserted between its start and end\n        // vertices.\n        //\n        //    (end) hem.crossing side (start)\n        //        \\|<-------------->|/\n        // x-------x------6!--------x--------x\n        // |         , - ~5!1 ~ -,           |\n        // |     , '       !       ' ,       |\n        // |   ,           !           ,     |\n        // |  ,            !            ,    |\n        // | ,             !             ,   |\n        // | 4           POLE            2   | <- Bounds polygon\n        // | ,             !             ,   |\n        // |  ,            !            ,    |\n        // |   ,           !           ,     |\n        // |     ,         !         ,'      |\n        // |       ' -_, _ ! _ ,_ -'         |\n        // |               3                 |\n        // x---------------!-----------------x\n        //                 ! <- hemisphere partition\n\n        const northPoleCenter = new Vector3(0, 0, EarthConstants.EQUATORIAL_RADIUS);\n        const southPoleCenter = new Vector3(0, 0, -EarthConstants.EQUATORIAL_RADIUS);\n        const northPoleInView = MapViewUtils.closeToFrustum(northPoleCenter, this.camera);\n        const southPoleInView = MapViewUtils.closeToFrustum(southPoleCenter, this.camera);\n\n        if (!northPoleInView && !southPoleInView) {\n            return;\n        }\n\n        // Create first wrapping vertex (number 1 in the diagram above).\n        const camLon = this.projection.unprojectPoint(this.camera.position).lng;\n        const wrapLat = northPoleInView ? 90 : -90;\n        const wrapLon = northPoleInView ? camLon + 180 : camLon - 180;\n        const geoWrapTopRight = new GeoCoordinates(wrapLat, wrapLon);\n        const geoWrapTopRightNorm = geoWrapTopRight.normalized();\n\n        // Find the polygon side crossing the camera antimeridian.\n        const crossLon = geoWrapTopRightNorm.lng;\n        let prevLon = coordinates[coordinates.length - 1].lng;\n        // Check whether the camera antimeridian crossing also crosses greenwich antimerdian.\n        let isGwAntimerCross = false;\n        const hSphereCrossEndIndex = coordinates.findIndex((value: GeoCoordinates) => {\n            const crossesAntimer = isAntimeridianCrossing(prevLon, value.lng);\n            const sameSign = Math.sign(crossLon - value.lng) === Math.sign(crossLon - prevLon);\n            if (sameSign === crossesAntimer) {\n                isGwAntimerCross = crossesAntimer;\n                return true;\n            }\n            prevLon = value.lng;\n            return false;\n        });\n\n        if (hSphereCrossEndIndex < 0) {\n            // No polygon side crosses the camera antimeridian, meaning that the polygon doesn't\n            // actually go above the pole to the other side of the world, no wrapping needed.\n            return;\n        }\n\n        // Create rest of wrapping vertices at pole's latitude (vertices 2-5 in diagram above).\n        const wrapSideOffset = northPoleInView ? 90 : -90;\n        const wrapCornerOffset = northPoleInView ? 0.00001 : -0.00001;\n\n        // Added to ensure antimeridian crossing detection when coordinates are wrapped around it by\n        // GeoPolygon (all polygon sides must have longitude spans smaller than 180 degrees).\n        const geoWrapRight = new GeoCoordinates(wrapLat, camLon + wrapSideOffset).normalized();\n        const geoWrapBottom = new GeoCoordinates(wrapLat, camLon).normalized();\n\n        // Added to ensure antimeridian crossing detection when coordinates are wrapped around it by\n        // GeoPolygon (all polygon sides must have longitude spans smaller than 180 degrees).\n        const geoWrapLeft = new GeoCoordinates(wrapLat, camLon - wrapSideOffset).normalized();\n        const geoWrapTopLeft = new GeoCoordinates(wrapLat, wrapLon + wrapCornerOffset).normalized();\n\n        const hSphereCrossStartIndex =\n            (hSphereCrossEndIndex + coordinates.length - 1) % coordinates.length;\n        const crossStart = coordinates[hSphereCrossStartIndex];\n        const crossEnd = coordinates[hSphereCrossEndIndex];\n\n        // Last wrapping vertex (number 6) is linearly interpolated at the polygon side crossing the\n        // camera antimeridian.\n        let crossLerp = GeoCoordinates.lerp(crossStart, crossEnd, 0.01, isGwAntimerCross);\n        if (isGwAntimerCross && northPoleInView) {\n            crossLerp.longitude -= 360;\n        } else {\n            crossLerp = crossLerp.normalized();\n        }\n\n        // Add the wrapping vertices to the array in the proper order (see diagram above).\n        coordinates.splice(\n            hSphereCrossEndIndex,\n            0,\n            wrapLon < -180 ? geoWrapTopRight : geoWrapTopRightNorm, // 1\n            geoWrapRight, // 2\n            geoWrapBottom, // 3\n            geoWrapLeft, // 4\n            geoWrapTopLeft, // 5\n            crossLerp // 6\n        );\n    }\n\n    // Returns a tuple with the array of canvas corner intersection geocoordinates in ccw order\n    // (undefined values for corners not intersecting the world) and the number of intersections.\n    private addCanvasCornerIntersection(): [Array<GeoCoordinates | undefined>, number] {\n        const geoCorners = new Array<GeoCoordinates | undefined>();\n        let numIntersections = 0;\n        ccwCanvasCornersNDC.forEach(corner => {\n            const intersection = MapViewUtils.rayCastWorldCoordinates(\n                { camera: this.camera, projection: this.projection },\n                corner.x,\n                corner.y\n            );\n            if (intersection) {\n                geoCorners.push(this.projection.unprojectPoint(intersection));\n                ++numIntersections;\n            } else {\n                geoCorners.push(undefined);\n            }\n        });\n        return [geoCorners, numIntersections];\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { LoggerManager, PerformanceTimer } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nconst logger = LoggerManager.instance.create(\"Statistics\");\n\n/**\n * A simple ring buffer to store the last `n` values of the timer. The buffer works on\n * a First-In-First-Out (FIFO) basis.\n */\nexport class RingBuffer<T> {\n    buffer: T[];\n    size: number;\n    head: number;\n    tail: number;\n\n    /**\n     * Sets up the ring buffer.\n     *\n     * @param capacity - The buffer's capacity.\n     */\n    constructor(readonly capacity: number) {\n        this.buffer = new Array(capacity);\n        this.capacity = capacity;\n        this.head = this.tail = this.size = 0;\n    }\n\n    /**\n     * Clears the contents, removes all elements.\n     */\n    clear(): void {\n        this.head = this.tail = this.size = 0;\n    }\n\n    /**\n     * Adds a single element to the ring buffer.\n     *\n     * @param data - Data element.\n     */\n    enqOne(data: T): void {\n        let next = this.head + 1;\n        if (next >= this.capacity) {\n            next = 0;\n        }\n        if (this.size < this.capacity) {\n            this.size++;\n        }\n\n        this.buffer[this.head] = data;\n        this.head = next;\n\n        if (this.size === this.capacity) {\n            this.tail = this.head;\n        }\n    }\n\n    /**\n     * Adds one or more elements.\n     *\n     * @param data - The elements to add.\n     */\n    enq(...data: T[]): void {\n        for (const v of data) {\n            this.enqOne(v);\n        }\n    }\n\n    /**\n     * Obtains the oldest element (FIFO). May throw an exception if a buffer underrun occurs.\n     * Before calling this method, make sure that `size > 0`.\n     */\n    deq(): T {\n        if (this.size === 0) {\n            throw new Error(\"Ringbuffer underrun\");\n        }\n\n        const data = this.buffer[this.tail];\n        let next = this.tail + 1;\n        if (next >= this.capacity) {\n            next = 0;\n        }\n        if (this.size > 0) {\n            this.size--;\n        }\n\n        this.tail = next;\n        return data;\n    }\n\n    /**\n     * Obtains the oldest element (FIFO) without removing it. Throws an exception if a buffer is\n     * empty. Before calling this method, make sure that `size > 0`.\n     */\n    get top(): T {\n        if (this.size === 0) {\n            throw new Error(\"Ringbuffer underrun\");\n        }\n\n        return this.buffer[this.tail];\n    }\n\n    /**\n     * Obtains the latest element (LIFO) without removing it. Throws an exception if a buffer is\n     * empty. Before calling this method, make sure that `size > 0`.\n     */\n    get bottom(): T {\n        if (this.size === 0) {\n            throw new Error(\"Ringbuffer underrun\");\n        }\n\n        let previous = this.head - 1;\n        if (previous < 0) {\n            previous = this.capacity - 1;\n        }\n        return this.buffer[previous];\n    }\n\n    /**\n     * Creates an iterator for the buffer.\n     */\n    iterator(): RingBuffer.Iterator<T> {\n        return new RingBuffer.Iterator<T>(this);\n    }\n\n    /**\n     * Returns a copy of the buffer, where the elements are properly sorted from oldest to newest.\n     */\n    asArray(): T[] {\n        const array = new Array<T>();\n        for (let i = 0; i < this.size; i++) {\n            array.push(this.buffer[(this.tail + i) % this.capacity]);\n        }\n        return array;\n    }\n}\n\nexport namespace RingBuffer {\n    /**\n     * A local class for RingBuffer<T>\n     */\n    export class Iterator<T> {\n        /**\n         * Creates an iterator for the ring buffer.\n         *\n         * @param m_buffer - `Ringbuffer` to iterate over.\n         * @param m_index - Start index.\n         */\n        constructor(private readonly m_buffer: RingBuffer<T>, private m_index: number = 0) {}\n\n        /**\n         * Gets the iterator's current value. This function does not fail even if an overrun occurs.\n         * To detect an overrun, watch the result for [[next]].\n         */\n        get value(): T {\n            return this.m_buffer.buffer[\n                (this.m_buffer.tail + this.m_index) % this.m_buffer.capacity\n            ];\n        }\n\n        /**\n         * Advances the iterator to the next element.\n         *\n         * @returns `true` if the iterator is still valid; `false` if an overrun occurs.\n         */\n        next(): boolean {\n            this.m_index++;\n            return this.m_index < this.m_buffer.size;\n        }\n    }\n}\n\n/**\n * An interface for a Timer class, that abstracts the basic functions of a Timer.\n *\n * @remarks\n * Implemented by SimpleTimer, SampledTimer, and MultiStageTimer.\n *\n * @internal\n */\nexport interface Timer {\n    readonly name: string;\n    readonly value?: number;\n\n    /**\n     * Resets value to be able to start again.\n     */\n    reset(): void;\n\n    /**\n     * Starts the timer. Returns the current time, based on `Performance.now()`.\n     */\n    start(): number;\n\n    /**\n     * Stops the timer. Requires that the timer has started.\n     */\n    stop(): number;\n\n    /**\n     * Samples the timer. Requires that the timer has started. This function does not modify\n     * the timer's internal state.\n     *\n     * @returns Current timer value. `-1` if statistics are disabled.\n     */\n    now(): number;\n\n    /**\n     * Sets the measurement value for the amount of time that has elapsed from start() to stop().\n     * Use this function to override the timer's duration.\n     *\n     * @param val - The timer's duration.\n     */\n    setValue(val: number | undefined): void;\n}\n\n/**\n * A simple timer that stores only the latest measurement.\n *\n * @internal\n */\nexport class SimpleTimer implements Timer {\n    /** `true` if timer has been started. */\n    running = false;\n\n    private m_currentValue?: number;\n\n    constructor(public statistics: Statistics, readonly name: string) {}\n\n    /**\n     * Gets the latest measurement. This function may return `undefined` if no measurement\n     * was done.\n     */\n    get value(): number | undefined {\n        return this.m_currentValue;\n    }\n\n    /**\n     * Sets the measurement value for the amount of time that has elapsed from start() to stop().\n     * Use this function to override the timer's duration.\n     *\n     * @param val - The timer's duration.\n     */\n    setValue(val: number | undefined) {\n        this.m_currentValue = val;\n    }\n\n    /**\n     * Resets the value to be able to start again.\n     */\n    reset() {\n        this.m_currentValue = undefined;\n    }\n\n    /**\n     * Starts the timer. Returns the current time, based on `Performance.now()`.\n     */\n    start(): number {\n        if (!this.statistics.enabled) {\n            return -1;\n        }\n        if (this.running) {\n            throw new Error(\"Timer '\" + this.name + \"' is already running\");\n        }\n        this.running = true;\n        return (this.m_currentValue = PerformanceTimer.now());\n    }\n\n    /**\n     * Stops the timer. Requires that the timer has started.\n     */\n    stop(): number {\n        if (!this.statistics.enabled) {\n            return -1;\n        }\n        if (!this.running) {\n            throw new Error(\"Timer '\" + this.name + \"' has not been started\");\n        } else {\n            // this.currentValue is a number now!\n            const t = PerformanceTimer.now() - (this.m_currentValue ?? 0);\n            this.m_currentValue = t;\n            this.setValue(t);\n            this.running = false;\n            return t;\n        }\n    }\n\n    /**\n     * Samples the timer. Requires that the timer has started.\n     *\n     * @returns the current timer value; `-1` if statistics are disabled.\n     */\n    now(): number {\n        if (!this.statistics.enabled) {\n            return -1;\n        }\n        if (!this.running) {\n            throw new Error(\"Timer '\" + this.name + \"' has not been started\");\n        } else {\n            const t = PerformanceTimer.now() - (this.m_currentValue ?? 0);\n            return t;\n        }\n    }\n}\n\n/**\n * Simple statistics about the values in an array.\n *\n * @internal\n */\nexport interface Stats {\n    /**\n     * The lowest value in the array.\n     */\n    min: number;\n\n    /**\n     * The highest value in the array.\n     */\n    max: number;\n\n    /**\n     * The average duration of all values in the array.\n     */\n    avg: number;\n\n    /**\n     * The median duration of all values in the array.\n     */\n    median: number;\n\n    /**\n     * The 75th percentile median of all values in the array.\n     */\n    median75: number;\n\n    /**\n     * The 90th percentile median of all values in the array.\n     */\n    median90: number;\n\n    /**\n     * The 95th percentile median of all values in the array.\n     */\n    median95: number;\n\n    /**\n     * The 97th percentile median of all values in the array.\n     */\n    median97: number;\n\n    /**\n     * The 99th percentile median of all values in the array.\n     */\n    median99: number;\n\n    /**\n     * The 99.9th percentile median of all values in the array.\n     */\n    median999: number;\n\n    /**\n     * The number of values in the array.\n     */\n    numSamples: number;\n}\n\n/**\n * A timer that stores the last `n` samples in a ring buffer.\n *\n * @internal\n */\nexport class SampledTimer extends SimpleTimer {\n    /**\n     * The number of times the timer has reset.\n     */\n    numResets = 0;\n\n    /**\n     * Maximum samples until the statistics are reset and updated, which may destroy a median\n     * computation.\n     */\n    maxNumSamples = 1000;\n\n    /**\n     * The array of sampled values, its length cannot exceed `maxNumSamples`.\n     */\n    samples = new RingBuffer<number>(this.maxNumSamples);\n\n    /**\n     * Creates a `SampledTimer` instance. Must still be added to statistics if it should be logged!\n     *\n     * @param statistics - Statistics to use for management.\n     * @param name - Name of the timer. Use colons to build a hierarchy.\n     */\n    constructor(public statistics: Statistics, readonly name: string) {\n        super(statistics, name);\n    }\n\n    /**\n     * Resets the timer and clears all of its historical values.\n     * @override\n     */\n    reset() {\n        super.reset();\n        this.getStats();\n        this.samples.clear();\n        this.numResets++;\n    }\n\n    /**\n     * Add a single measurement to the sample.\n     *\n     * @param val - A measurement to add.\n     * @override\n     */\n    setValue(val: number | undefined) {\n        super.setValue(val);\n\n        if (val !== undefined) {\n            this.samples.enqOne(val);\n        }\n    }\n\n    /**\n     * Updates the `min`, `max`, `avg`, and `median` values. Currently, this function is expensive,\n     * as it requires a copy of the sampled values.\n     */\n    getStats(): Stats | undefined {\n        return computeArrayStats(this.samples.asArray());\n    }\n}\n\n/**\n * Only exported for testing\n * @ignore\n *\n * @remarks\n * Compute the [[ArrayStats]] for the passed in array of numbers.\n *\n * @param {number[]} samples Array containing sampled values. Will be modified (!) by sorting the\n *      entries.\n * @returns {(Stats | undefined)}\n *\n * @internal\n */\nexport function computeArrayStats(samples: number[]): Stats | undefined {\n    if (samples.length === 0) {\n        return undefined;\n    }\n\n    samples.sort((a: number, b: number) => {\n        return a - b;\n    });\n\n    const min: number = samples[0];\n    const max: number = samples[samples.length - 1];\n    let median: number;\n    let median75: number;\n    let median90: number;\n    let median95: number;\n    let median97: number;\n    let median99: number;\n    let median999: number;\n\n    if (samples.length === 1) {\n        median75 = median90 = median95 = median97 = median99 = median999 = median = samples[0];\n    } else if (samples.length === 2) {\n        median = samples[0] * 0.5 + samples[1] * 0.5;\n        median75 = median90 = median95 = median97 = median99 = median999 = samples[1];\n    } else {\n        const mid = Math.floor(samples.length / 2);\n        median =\n            samples.length % 2 === 0 ? samples[mid - 1] * 0.5 + samples[mid] * 0.5 : samples[mid];\n\n        const mid75 = Math.round(samples.length * 0.75) - 1;\n        median75 = samples[mid75];\n        const mid90 = Math.round(samples.length * 0.9) - 1;\n        median90 = samples[mid90];\n        const mid95 = Math.round(samples.length * 0.95) - 1;\n        median95 = samples[mid95];\n        const mid97 = Math.round(samples.length * 0.97) - 1;\n        median97 = samples[mid97];\n        const mid99 = Math.round(samples.length * 0.99) - 1;\n        median99 = samples[mid99];\n        const mid999 = Math.round(samples.length * 0.999) - 1;\n        median999 = samples[mid999];\n    }\n\n    let sum = 0;\n\n    for (let i = 0, l = samples.length; i < l; i++) {\n        sum += samples[i];\n    }\n\n    const avg = sum / samples.length;\n\n    return {\n        min,\n        max,\n        avg,\n        median,\n        median75,\n        median90,\n        median95,\n        median97,\n        median99,\n        median999,\n        numSamples: samples.length\n    };\n}\n\n/**\n * Only exported for testing\n * @ignore\n *\n * @remarks\n * Compute the averages for the passed in array of numbers.\n *\n * @param {number[]} samples Array containing sampled values.\n * @returns {(Stats | undefined)}\n *\n * @internal\n */\nexport function computeArrayAverage(samples: number[]): number | undefined {\n    if (samples.length === 0) {\n        return undefined;\n    }\n\n    let sum = 0;\n\n    for (let i = 0, l = samples.length; i < l; i++) {\n        sum += samples[i];\n    }\n\n    const avg = sum / samples.length;\n\n    return avg;\n}\n\n/**\n * Measures a sequence of connected events, such as multiple processing stages in a function.\n *\n * @remarks\n * Each stage is identified with a timer name, that must be a valid timer in the statistics\n * object. Additionally, all timers within a `MultiStageTimer` must be unique.\n *\n * Internally, the `MultiStageTimer` manages a list of timers where at the end of each stage,\n * one timer stops and the next timer starts.\n *\n * @internal\n */\nexport class MultiStageTimer {\n    private currentStage: string | undefined;\n\n    /**\n     * Defines the `MultiStageTimer` with a list of timer names that represent its stages.\n     *\n     * @param statistics - The statistics object that manages the timers.\n     * @param name - Name of this `MultiStageTimer`.\n     * @param stages - List of timer names.\n     */\n    constructor(\n        private readonly statistics: Statistics,\n        readonly name: string,\n        public stages: string[]\n    ) {\n        if (stages.length < 1) {\n            throw new Error(\"MultiStageTimer needs stages\");\n        }\n\n        stages.forEach(stage => {\n            if (!statistics.hasTimer(stage)) {\n                throw new Error(\"Unknown timer: \" + stage);\n            }\n        });\n    }\n\n    /**\n     * Gets the timer value for the last stage. If the `MultiStageTimer` did not finish its\n     * last stage, the value is `undefined`.\n     */\n    get value(): number | undefined {\n        return this.statistics.getTimer(this.stages[this.stages.length - 1]).value;\n    }\n\n    /**\n     * Resets the timers across all stages.\n     */\n    reset(): void {\n        if (!this.statistics.enabled) {\n            return;\n        }\n        this.stages.forEach(stage => {\n            this.statistics.getTimer(stage).reset();\n        });\n    }\n\n    /**\n     * Starts the `MultiStageTimer` at its first stage.\n     */\n    start(): number {\n        this.stage = this.stages[0];\n\n        return this.statistics.getTimer(this.stages[0]).value ?? -1;\n    }\n\n    /**\n     * Stops the `MultiStageTimer`. Returns the measurement of the last stage, which may be\n     * `undefined` if not all stages started.\n     */\n    stop(): number {\n        this.stage = undefined;\n        return this.value !== undefined ? this.value : -1;\n    }\n\n    /**\n     * Gets the current stage.\n     */\n    get stage(): string | undefined {\n        return this.currentStage;\n    }\n\n    /**\n     * Sets the current stage. If a new stage is provided, the current timer (if available) is\n     * stopped, and the next timer is started. If the timer in the next stage is `undefined`,\n     * this is equivalent to calling `stop` on the `MultiStageTimer`.\n     *\n     * @param stage - The next stage to start.\n     */\n    set stage(stage: string | undefined) {\n        if (this.currentStage === stage) {\n            return;\n        }\n\n        if (this.statistics.enabled && this.currentStage !== undefined) {\n            this.statistics.getTimer(this.currentStage).stop();\n        }\n\n        this.currentStage = stage;\n\n        if (this.statistics.enabled && this.currentStage !== undefined) {\n            this.statistics.getTimer(this.currentStage).start();\n        }\n    }\n}\n\n/**\n * Manages a set of timers.\n *\n * @remarks\n * The main objective of `Statistics` is to log these timers. You can\n * disable statistics to minimize their impact on performance.\n *\n * @internal\n */\nexport class Statistics {\n    private readonly timers: Map<string, Timer>;\n\n    private readonly nullTimer: Timer;\n\n    /**\n     * Sets up a group of timers.\n     *\n     * @param name - The statistics name, for logging purposes.\n     * @param enabled - If `false`, the timers do not measure the performance.\n     */\n    constructor(public name?: string, public enabled = false) {\n        this.timers = new Map<string, Timer>();\n        this.nullTimer = new SimpleTimer(this, \"<null>\");\n    }\n\n    /**\n     * Adds a timer, based on the name specified.\n     *\n     * @param name - The timer's name; must be unique.\n     */\n    createTimer(name: string, keepSamples = true): Timer {\n        const timer = keepSamples ? new SampledTimer(this, name) : new SimpleTimer(this, name);\n\n        return this.addTimer(timer);\n    }\n\n    /**\n     * Adds the timer specified.\n     *\n     * @param timer - The timer's name, which must be unique within this statistics object.\n     */\n    addTimer(timer: Timer): Timer {\n        if (this.timers.get(timer.name) !== undefined) {\n            throw new Error(\"Duplicate timer name: '\" + timer.name + \"'\");\n        }\n\n        this.timers.set(timer.name, timer);\n\n        return timer;\n    }\n\n    /**\n     * Gets a timer by name.\n     *\n     * @param name - The timer's name.\n     */\n    getTimer(name: string): Timer {\n        if (!this.enabled) {\n            return this.nullTimer;\n        }\n\n        const t = this.timers.get(name);\n        return t === undefined ? this.nullTimer : t;\n    }\n\n    /**\n     * Checks if a timer with the specified name already exists.\n     *\n     * @param name - The timer's name.\n     * @returns `true` if a timer with `name` already exists; `false` otherwise.\n     */\n    hasTimer(name: string): boolean {\n        const t = this.timers.get(name);\n        return t !== undefined;\n    }\n\n    /**\n     * Resets all timers.\n     */\n    reset() {\n        this.timers.forEach((timer: Timer) => {\n            timer.reset();\n        });\n    }\n\n    /**\n     * Prints all values to the console.\n     *\n     * @param header - Optional header line.\n     * @param footer - Optional footer line.\n     */\n    log(header?: string, footer?: string) {\n        if (header !== undefined || this.name !== undefined) {\n            logger.log(header !== undefined ? header : this.name);\n        }\n\n        let maxNameLength = 0;\n\n        this.timers.forEach((timer: Timer) => {\n            maxNameLength = Math.max(maxNameLength, timer.name.length);\n        });\n\n        // simple printing function for number limits the number of decimal points.\n        const print = (v: number | undefined) => {\n            return v !== undefined ? v.toFixed(5) : \"?\";\n        };\n\n        this.timers.forEach((timer: Timer) => {\n            let s = timer.name + \": \" + \" \".repeat(maxNameLength - timer.name.length);\n            s += print(timer.value);\n\n            // sampled timers also update their stats and log them\n            if (timer instanceof SampledTimer) {\n                const simpleStats = timer.getStats();\n                if (simpleStats !== undefined) {\n                    s +=\n                        `  [ min=${print(simpleStats.min)}, max=${print(simpleStats.max)}, ` +\n                        `avg=${print(simpleStats.avg)}, med=${print(simpleStats.median)}, ` +\n                        `med95=${print(simpleStats.median95)}, med99=${print(\n                            simpleStats.median99\n                        )}, ` +\n                        `N=${print(simpleStats.numSamples)} ]`;\n                }\n            }\n            logger.log(s);\n        });\n\n        if (footer !== undefined) {\n            logger.log(footer);\n        }\n    }\n}\n\n/**\n * Class containing all counters, timers and events of the current frame.\n *\n * @internal\n */\nexport class FrameStats {\n    readonly entries: Map<string, number> = new Map();\n    messages?: string[] = undefined;\n\n    /**\n     * Retrieve the value of the performance number.\n     *\n     * @param name - Name of the performance number.\n     * @returns The value of the performance number or `undefined` if it has not been declared by\n     *      `setValue` before.\n     */\n    getValue(name: string): number | undefined {\n        return this.entries.get(name);\n    }\n\n    /**\n     * Set the value of the performance number.\n     *\n     * @param name - Name of the performance number.\n     * @param name - New value of the performance number.\n     */\n    setValue(name: string, value: number) {\n        this.entries.set(name, value);\n    }\n\n    /**\n     * Add a value to the current value of the performance number. If the performance is not known,\n     * it will be initialized with `value`.\n     *\n     * @param name - Name of the performance number.\n     * @param name - Value to be added to the performance number.\n     */\n    addValue(name: string, value: number) {\n        const oldValue = this.entries.get(name);\n        this.entries.set(name, value + (oldValue === undefined ? 0 : oldValue));\n    }\n\n    /**\n     * Add a text message to the frame, like \"Font XYZ has been loaded\"\n     *\n     * @param message - The message to add.\n     */\n    addMessage(message: string) {\n        if (this.messages === undefined) {\n            this.messages = [];\n        }\n        this.messages.push(message);\n    }\n\n    /**\n     * Reset all known performance values to `0` and the messages to `undefined`.\n     */\n    reset() {\n        this.entries.forEach((value: number, name: string) => {\n            this.entries.set(name, 0);\n        });\n\n        this.messages = undefined;\n    }\n}\n\n/**\n * @ignore\n * Only exported for testing.\n *\n * @remarks\n * Instead of passing around an array of objects, we store the frame statistics as an object of\n * arrays. This allows convenient computations from {@link RingBuffer},\n */\nexport class FrameStatsArray {\n    readonly frameEntries: Map<string, RingBuffer<number>> = new Map();\n    readonly messages: RingBuffer<string[] | undefined>;\n\n    constructor(readonly capacity: number = 0) {\n        this.messages = new RingBuffer<string[] | undefined>(capacity);\n    }\n\n    get length(): number {\n        return this.messages.size;\n    }\n\n    reset() {\n        this.frameEntries.forEach((buffer: RingBuffer<number>, name: string) => {\n            buffer.clear();\n        });\n        this.messages.clear();\n    }\n\n    addFrame(frameStats: FrameStats) {\n        const currentSize = this.length;\n        const frameEntries = this.frameEntries;\n\n        frameStats.entries.forEach((value: number, name: string) => {\n            let buffer = frameEntries.get(name);\n\n            if (buffer === undefined) {\n                // If there is a buffer that has not been known before, add it to the known buffers,\n                // fill it up with with 0 to the size of all the other buffers to make them of equal\n                // size to make PerfViz happy.\n                buffer = new RingBuffer<number>(this.capacity);\n                for (let i = 0; i < currentSize; i++) {\n                    buffer.enqOne(0);\n                }\n                this.frameEntries.set(name, buffer);\n            }\n            buffer.enqOne(value);\n        });\n\n        this.messages.enq(frameStats.messages);\n    }\n\n    /**\n     * Prints all values to the console.\n     */\n    log() {\n        let maxNameLength = 0;\n        this.frameEntries.forEach((buffer: RingBuffer<number>, name: string) => {\n            maxNameLength = Math.max(maxNameLength, name.length);\n        });\n\n        // simple printing function for number limits the number of decimal points.\n        const print = (v: number | undefined) => {\n            return v !== undefined ? v.toFixed(5) : \"?\";\n        };\n\n        this.frameEntries.forEach((buffer: RingBuffer<number>, name: string) => {\n            let s = name + \": \" + \" \".repeat(maxNameLength - name.length);\n\n            const simpleStats = computeArrayStats(buffer.asArray());\n            if (simpleStats !== undefined) {\n                s +=\n                    `  [ min=${print(simpleStats.min)}, max=${print(simpleStats.max)}, ` +\n                    `avg=${print(simpleStats.avg)}, med=${print(simpleStats.median)}, ` +\n                    `med95=${print(simpleStats.median95)}, med99=${print(simpleStats.median99)}, ` +\n                    `N=${print(simpleStats.numSamples)} ]`;\n            }\n            logger.log(s);\n        });\n    }\n}\n\n/**\n * Chrome's MemoryInfo interface.\n */\ninterface ChromeMemoryInfo {\n    totalJSHeapSize: number;\n    usedJSHeapSize: number;\n    jsHeapSizeLimit: number;\n}\n\n/**\n * @internal\n */\nexport interface SimpleFrameStatistics {\n    configs: Map<string, string>;\n    appResults: Map<string, number>;\n    frames: Map<string, number | number[]>;\n    messages: Array<string[] | undefined>;\n    frameStats?: Map<string, Stats | undefined>;\n    zoomLevelLabels?: string[];\n    zoomLevelData?: Map<string, number | number[]>;\n}\n\n/**\n * Performance measurement central.\n *\n * @remarks\n * Maintains the current. Implemented as an instance for easy access.\n *\n * {@link FrameStats}, which holds all individual performance numbers.\n *\n * @internal\n */\nexport class PerformanceStatistics {\n    /**\n     * Returns `true` when the maximum number of storable frames is reached.\n     *\n     * @readonly\n     * @type {boolean}\n     * @memberof PerformanceStatistics\n     */\n    get isFull(): boolean {\n        return this.m_frameEvents.length >= this.maxNumFrames;\n    }\n\n    /**\n     * Global instance to the instance. The current instance can be overridden by creating a new\n     * `PerformanceStatistics`.\n     */\n    static get instance(): PerformanceStatistics {\n        if (PerformanceStatistics.m_instance === undefined) {\n            PerformanceStatistics.m_instance = new PerformanceStatistics(false, 0);\n        }\n        return PerformanceStatistics.m_instance;\n    }\n\n    private static m_instance?: PerformanceStatistics = undefined;\n\n    /**\n     * Current frame statistics. Contains all values for the current frame. Will be cleared when\n     * [[PerformanceStatistics#storeFrameInfo]] is called.\n     *\n     * @type {FrameStats}\n     * @memberof PerformanceStatistics\n     */\n    readonly currentFrame: FrameStats = new FrameStats();\n\n    /**\n     * @ignore\n     * Only exported for testing.\n     *\n     * Return the array of frame events.\n     */\n    get frameEvents(): FrameStatsArray {\n        return this.m_frameEvents;\n    }\n\n    /**\n     * Additional results stored for the current application run, not per frame. Only the last value\n     * is stored.\n     *\n     * @type {(Map<string, number>)}\n     */\n    readonly appResults: Map<string, number> = new Map();\n\n    /**\n     * Additional configuration values stored for the current application run, not per frame. Only\n     * the last value is stored.\n     *\n     * @type {(Map<string, string>)}\n     * @memberof PerformanceStatistics\n     */\n    readonly configs: Map<string, string> = new Map();\n\n    // Current array of frame events.\n    private readonly m_frameEvents: FrameStatsArray;\n\n    /**\n     * Creates an instance of PerformanceStatistics. Overrides the current `instance`.\n     *\n     * @param {boolean} [enabled=true] If `false` the performance values will not be stored.\n     * @param {number} [maxNumFrames=1000] The maximum number of frames that are to be stored.\n     * @memberof PerformanceStatistics\n     */\n    constructor(public enabled = true, public maxNumFrames = 1000) {\n        PerformanceStatistics.m_instance = this;\n        this.m_frameEvents = new FrameStatsArray(maxNumFrames);\n    }\n\n    /**\n     * Clears all settings, all stored frame events as well as the current frame values.\n     *\n     * @memberof PerformanceStatistics\n     */\n    clear() {\n        this.clearFrames();\n        this.configs.clear();\n        this.appResults.clear();\n    }\n\n    /**\n     * Clears only all stored frame events as well as the current frame values.\n     *\n     * @memberof PerformanceStatistics\n     */\n    clearFrames() {\n        this.m_frameEvents.reset();\n        this.currentFrame.reset();\n    }\n\n    /**\n     * Add the render state information from [[THREE.WebGLInfo]] to the current frame.\n     * @param {THREE.WebGLInfo} webGlInfo\n     */\n    addWebGLInfo(webGlInfo: THREE.WebGLInfo) {\n        if (webGlInfo.render !== undefined) {\n            this.currentFrame.setValue(\n                \"gl.numCalls\",\n                webGlInfo.render.calls === null ? 0 : webGlInfo.render.calls\n            );\n            this.currentFrame.setValue(\n                \"gl.numPoints\",\n                webGlInfo.render.points === null ? 0 : webGlInfo.render.points\n            );\n            this.currentFrame.setValue(\n                \"gl.numLines\",\n                webGlInfo.render.lines === null ? 0 : webGlInfo.render.lines\n            );\n            this.currentFrame.setValue(\n                \"gl.numTriangles\",\n                webGlInfo.render.triangles === null ? 0 : webGlInfo.render.triangles\n            );\n        }\n        if (webGlInfo.memory !== undefined) {\n            this.currentFrame.setValue(\n                \"gl.numGeometries\",\n                webGlInfo.memory.geometries === null ? 0 : webGlInfo.memory.geometries\n            );\n            this.currentFrame.setValue(\n                \"gl.numTextures\",\n                webGlInfo.memory.textures === null ? 0 : webGlInfo.memory.textures\n            );\n        }\n        if (webGlInfo.programs !== undefined) {\n            this.currentFrame.setValue(\n                \"gl.numPrograms\",\n                webGlInfo.programs === null ? 0 : webGlInfo.programs.length\n            );\n        }\n    }\n\n    /**\n     * Add memory statistics to the current frame if available.\n     * @note Currently only supported on Chrome\n     */\n    addMemoryInfo() {\n        if (window !== undefined && window.performance !== undefined) {\n            const memory = (window.performance as any).memory as ChromeMemoryInfo;\n            if (memory !== undefined) {\n                this.currentFrame.setValue(\"memory.totalJSHeapSize\", memory.totalJSHeapSize);\n                this.currentFrame.setValue(\"memory.usedJSHeapSize\", memory.usedJSHeapSize);\n                this.currentFrame.setValue(\"memory.jsHeapSizeLimit\", memory.jsHeapSizeLimit);\n            }\n        }\n    }\n\n    /**\n     * Stores the current frame events into the array of events and clears all values.\n     *\n     * @returns {boolean} Returns `false` if the maximum number of storable frames has been reached.\n     * @memberof PerformanceStatistics\n     */\n    storeAndClearFrameInfo(): boolean {\n        if (this.m_frameEvents.length >= this.maxNumFrames) {\n            return false;\n        }\n\n        this.m_frameEvents.addFrame(this.currentFrame);\n\n        this.currentFrame.reset();\n        return true;\n    }\n\n    /**\n     * Logs all values to the logger.\n     *\n     * @param header - Optional header line.\n     * @param footer - Optional footer line.\n     */\n    log(header?: string, footer?: string) {\n        logger.log(header !== undefined ? header : \"PerformanceStatistics\");\n\n        const appResults = this.appResults;\n        appResults.forEach((value: number, name: string) => {\n            logger.log(name, value);\n        });\n        const configs = this.configs;\n        configs.forEach((value: string, name: string) => {\n            logger.log(name, value);\n        });\n        this.m_frameEvents.log();\n\n        if (footer !== undefined) {\n            logger.log(footer);\n        }\n    }\n\n    /**\n     * Convert to a plain object that can be serialized. Required to copy the test results over to\n     * nightwatch.\n     */\n    getAsPlainObject(onlyLastFrame: boolean = false): any {\n        const appResults: any = {};\n        const configs: any = {};\n        const frames: any = {};\n        const plainObject: any = {\n            configs,\n            appResults,\n            frames\n        };\n\n        const appResultValues = this.appResults;\n        appResultValues.forEach((value: number, name: string) => {\n            appResults[name] = value;\n        });\n\n        const configValues = this.configs;\n        configValues.forEach((value: string, name: string) => {\n            configs[name] = value;\n        });\n\n        if (onlyLastFrame) {\n            for (const [name, buffer] of this.m_frameEvents.frameEntries) {\n                frames[name] = buffer.bottom;\n            }\n        } else {\n            for (const [name, buffer] of this.m_frameEvents.frameEntries) {\n                frames[name] = buffer.asArray();\n            }\n        }\n        plainObject.messages = this.m_frameEvents.messages.asArray();\n        return plainObject;\n    }\n\n    /**\n     * Convert the last frame values to a plain object that can be serialized. Required to copy the\n     * test results over to nightwatch.\n     */\n    getLastFrameStatistics(): any {\n        return this.getAsPlainObject(true);\n    }\n\n    /**\n     * Convert to a plain object that can be serialized. Required to copy the test results over to\n     * nightwatch.\n     */\n    getAsSimpleFrameStatistics(onlyLastFrame: boolean = false): SimpleFrameStatistics {\n        const configs: Map<string, string> = new Map();\n        const appResults: Map<string, number> = new Map();\n        const frames: Map<string, number | number[]> = new Map();\n\n        const simpleStatistics: SimpleFrameStatistics = {\n            configs,\n            appResults,\n            frames,\n            messages: this.m_frameEvents.messages.asArray()\n        };\n\n        const appResultValues = this.appResults;\n        appResultValues.forEach((value: number, name: string) => {\n            appResults.set(name, value);\n        });\n\n        const configValues = this.configs;\n        configValues.forEach((value: string, name: string) => {\n            configs.set(name, value);\n        });\n\n        if (onlyLastFrame) {\n            for (const [name, buffer] of this.m_frameEvents.frameEntries) {\n                frames.set(name, buffer.bottom);\n            }\n        } else {\n            for (const [name, buffer] of this.m_frameEvents.frameEntries) {\n                frames.set(name, buffer.asArray());\n            }\n        }\n        return simpleStatistics;\n    }\n}\n","/*\n * Copyright (C) 2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nexport interface RequestHeaders {\n    [field: string]: string;\n}\n\n/**\n * A texture loader that supports request headers(e.g. for Authorization)\n */\nexport class TextureLoader {\n    private readonly m_textureLoader = new THREE.TextureLoader();\n\n    /**\n     * Load an image from url and create a texture\n     * @param url - URL to the image\n     * @param requestHeaders - Optional request headers to load image(e.g. Authorization)\n     * @param abortSignal - Optional AbortSignal to cancel the load.\n     * @param crossOrigin - Enable/disable CORS\n     */\n    async load(\n        url: string,\n        requestHeaders?: RequestHeaders | undefined,\n        abortSignal?: AbortSignal,\n        crossOrigin: boolean = true\n    ): Promise<THREE.Texture> {\n        // Use THREE.js texture loader directly if no request header is set\n        if (requestHeaders === undefined) {\n            return await this.loadWithThreeLoader(url);\n        }\n\n        // Load image with fetch API if request header is set\n        const response = await fetch(url, {\n            headers: requestHeaders,\n            signal: abortSignal,\n            mode: crossOrigin ? \"cors\" : \"no-cors\"\n        });\n        const blob = await response.blob();\n\n        // Load image from blob using THREE.js loader\n        const texture = await this.loadWithThreeLoader(URL.createObjectURL(blob));\n\n        // Set correct image format from original URL or blob mime type\n        // (object URL does not contain file format)\n        const isJPEG =\n            blob.type === \"image/jpeg/\" ||\n            url.search(/\\.jpe?g($|\\?)/i) > 0 ||\n            url.search(/^data\\:image\\/jpeg/) === 0;\n        texture.format = isJPEG ? THREE.RGBFormat : THREE.RGBAFormat;\n\n        return texture;\n    }\n\n    private loadWithThreeLoader(url: string): Promise<THREE.Texture> {\n        return new Promise<THREE.Texture>((resolve, reject) => {\n            this.m_textureLoader.setCrossOrigin(\"\");\n            this.m_textureLoader.load(\n                url,\n                texture => resolve(texture),\n                undefined,\n                () => reject(new Error(\"failed to load texture\"))\n            );\n        });\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    Light,\n    MagFilter,\n    MinFilter,\n    PixelFormat,\n    TextureDataType,\n    WrappingMode\n} from \"@here/harp-datasource-protocol\";\nimport * as THREE from \"three\";\n\n/**\n * Returns `three.js` pixel format object basing on a [[PixelFormat]] specified.\n */\nexport function toPixelFormat(format: PixelFormat): THREE.PixelFormat {\n    switch (format) {\n        case \"Alpha\":\n            return THREE.AlphaFormat;\n        case \"RGB\":\n            return THREE.RGBFormat;\n        case \"RGBA\":\n            return THREE.RGBAFormat;\n        case \"Luminance\":\n            return THREE.LuminanceFormat;\n        case \"LuminanceAlpha\":\n            return THREE.LuminanceAlphaFormat;\n        case \"RGBE\":\n            return THREE.RGBEFormat;\n        case \"Depth\":\n            return THREE.DepthFormat;\n        case \"DepthStencil\":\n            return THREE.DepthStencilFormat;\n        case \"Red\":\n            return THREE.RedFormat;\n        default:\n            throw new Error(`invalid pixel format: ${format}`);\n    }\n}\n\n/**\n * Returns `three.js` texture data types based on a [[TextureDataType]] specified.\n */\nexport function toTextureDataType(dataType: TextureDataType): THREE.TextureDataType {\n    switch (dataType) {\n        case \"UnsignedByte\":\n            return THREE.UnsignedByteType;\n        case \"Byte\":\n            return THREE.ByteType;\n        case \"Short\":\n            return THREE.ShortType;\n        case \"UnsignedShort\":\n            return THREE.UnsignedShortType;\n        case \"Int\":\n            return THREE.IntType;\n        case \"UnsignedInt\":\n            return THREE.UnsignedIntType;\n        case \"Float\":\n            return THREE.FloatType;\n        case \"HalfFloat\":\n            return THREE.HalfFloatType;\n        default:\n            throw new Error(`invalid texture data type: ${dataType}`);\n    }\n}\n\n/**\n * Returns `three.js` wrapping mode object based on a [[WrappingMode]] specified.\n */\nexport function toWrappingMode(mode: WrappingMode): THREE.Wrapping {\n    switch (mode) {\n        case \"clamp\":\n            return THREE.ClampToEdgeWrapping;\n        case \"repeat\":\n            return THREE.RepeatWrapping;\n        case \"mirror\":\n            return THREE.MirroredRepeatWrapping;\n        default:\n            throw new Error(`invalid wrapping mode: ${mode}`);\n    }\n}\n\n/**\n * Returns `three.js` texture filter object based on a [[MagFilter]] or [[MinFilter]] specified.\n */\nexport function toTextureFilter(filter: MagFilter | MinFilter): THREE.TextureFilter {\n    switch (filter) {\n        case \"nearest\":\n            return THREE.NearestFilter;\n        case \"nearestMipMapNearest\":\n            return THREE.NearestMipMapNearestFilter;\n        case \"nearestMipMapLinear\":\n            return THREE.NearestMipMapLinearFilter;\n        case \"linear\":\n            return THREE.LinearFilter;\n        case \"linearMipMapNearest\":\n            return THREE.LinearMipMapNearestFilter;\n        case \"linearMipMapLinear\":\n            return THREE.LinearMipMapLinearFilter;\n        default:\n            throw new Error(`invalid texture filter: ${filter}`);\n    }\n}\n\n/**\n * Create a specific light for lighting the map.\n */\nexport function createLight(lightDescription: Light): THREE.Light {\n    switch (lightDescription.type) {\n        case \"ambient\": {\n            const light = new THREE.AmbientLight(\n                lightDescription.color,\n                lightDescription.intensity\n            );\n            light.name = lightDescription.name;\n            return light;\n        }\n        case \"directional\": {\n            const light = new THREE.DirectionalLight(\n                lightDescription.color,\n                lightDescription.intensity\n            );\n            light.name = lightDescription.name;\n            if (lightDescription.castShadow !== undefined) {\n                light.castShadow = lightDescription.castShadow;\n            }\n            if (light.castShadow) {\n                light.shadow.bias = 0.00001;\n                light.shadow.mapSize.width = 1024;\n                light.shadow.mapSize.height = 1024;\n            }\n            light.position.set(\n                lightDescription.direction.x,\n                lightDescription.direction.y,\n                lightDescription.direction.z\n            );\n            light.position.normalize();\n            return light;\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport \"@here/harp-fetch\";\n\nimport { isJsonExpr } from \"@here/harp-datasource-protocol\";\nimport {\n    Definitions,\n    FlatTheme,\n    getDefinitionValue,\n    ImageTexture,\n    isJsonExprReference,\n    Style,\n    Styles,\n    StyleSet,\n    Theme\n} from \"@here/harp-datasource-protocol/lib/Theme\";\nimport {\n    composeUriResolvers,\n    ContextLogger,\n    getAppBaseUrl,\n    getOptionValue,\n    IContextLogger,\n    ISimpleChannel,\n    RelativeUriResolver,\n    UriResolver\n} from \"@here/harp-utils\";\n\nimport { SKY_CUBEMAP_FACE_COUNT, SkyCubemapFaceId } from \"./SkyCubemapTexture\";\n\n/**\n * @internal\n */\nexport const DEFAULT_MAX_THEME_INTHERITANCE_DEPTH = 4;\n\n/**\n * Options to customize {@link @here/harp-datasource-protocol#Theme} loading process.\n *\n * @see {@link ThemeLoader.load}\n */\nexport interface ThemeLoadOptions {\n    /**\n     * Whether to resolve `ref` expressions in `definition` and `styles` elements.\n     *\n     * @default `false`, as datasources resolve definitions in [[StyleSetEvaluator]].\n     */\n    resolveDefinitions?: boolean;\n\n    /**\n     * Resolve the URIs to resources like fonts, icons, ...\n     * If true, [[uriResolver]] will be used to resolve the URI\n     * @default true\n     */\n    resolveResourceUris?: boolean;\n\n    /**\n     * Resolve the URIs of inherited themes (using `extends` feature).\n     * If true, [[uriResolver]] will be used to resolve the URI\n     * @default true\n     */\n    resolveIncludeUris?: boolean;\n\n    /**\n     * An `AbortSignal` object instance; allows you to communicate with a loading process\n     * (including fetch requests) request and abort it if desired via an `AbortController`.\n     *\n     * Modeled after Web APIs `fetch`s `init.signal`.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/AbortController\n     */\n    signal?: AbortSignal;\n\n    /**\n     * Maximum recursion depth when resolving base themes\n     * through [{@link @here/harp-datasource-protocol#Theme}s `extends` property.\n     *\n     * @default [[DEFAULT_MAX_THEME_INTHERITANCE_DEPTH]]\n     */\n    maxInheritanceDepth?: number;\n\n    /**\n     * Custom logging channel on which diagnostics and warnings will be reported.\n     *\n     * If not specified, {@link ThemeLoader.load} will log to `console`.\n     */\n    logger?: ISimpleChannel;\n\n    /**\n     * Resolve asset `URI`s referenced in `Theme` assets using this resolver.\n     */\n    uriResolver?: UriResolver;\n}\n\n/**\n * Loads and validates a theme from URL objects.\n */\nexport class ThemeLoader {\n    /**\n     * Loads a {@link @here/harp-datasource-protocol#Theme} from a\n     * remote resource, provided as a URL that points to a\n     * JSON-encoded theme.\n     *\n     * By default, resolves following features of theme:\n     *\n     *  -  `extends` - loads and merges all inherited themes (see [[resolveBaseTheme]])\n     *  -  `ref` - resolves all `ref` instances to their values defined in `definitions` section\n     *     of theme (see [[resolveThemeReferences]])\n     *\n     * Relative URIs of reference resources are resolved to full URL using the document's base URL\n     * (see [[resolveUrls]]).\n     *\n     * Custom URIs (of theme itself and of resources referenced by theme) may be resolved with by\n     * providing {@link @here/harp-utils#UriResolver} using {@link ThemeLoadOptions.uriResolver}\n     * option.\n     *\n     * @param theme - {@link @here/harp-datasource-protocol#Theme} instance or theme URL\n     *                to the theme.\n     * @param options - Optional, a {@link ThemeLoadOptions} objects\n     *                  containing any custom settings for\n     *                  this load request.\n     */\n    static async load(\n        theme: string | Theme | FlatTheme,\n        options?: ThemeLoadOptions\n    ): Promise<Theme> {\n        options = options ?? {};\n        if (typeof theme === \"string\") {\n            const uriResolver = options.uriResolver;\n            const themeUrl = uriResolver !== undefined ? uriResolver.resolveUri(theme) : theme;\n            const response = await fetch(themeUrl, { signal: options.signal });\n            if (!response.ok) {\n                throw new Error(`ThemeLoader#load: cannot load theme: ${response.statusText}`);\n            }\n            theme = (await response.json()) as Theme;\n            theme.url = themeUrl;\n            theme = this.resolveUrls(theme, options);\n        } else if (theme.url === undefined) {\n            // assume that theme url is same as baseUrl\n            theme.url = getAppBaseUrl();\n            theme = this.resolveUrls(theme, options);\n        } else {\n            theme = this.convertFlatTheme(theme);\n        }\n\n        if (theme === null || theme === undefined) {\n            throw new Error(\"ThemeLoader#load: loaded resource is not valid JSON\");\n        }\n\n        ThemeLoader.checkTechniqueSupport(theme);\n\n        const resolveDefinitions = getOptionValue<boolean>(options.resolveDefinitions, false);\n        theme = await ThemeLoader.resolveBaseThemes(theme, options);\n        if (resolveDefinitions) {\n            const contextLoader = new ContextLogger(\n                options.logger ?? console,\n                `when processing Theme ${theme.url}:`\n            );\n            ThemeLoader.resolveThemeReferences(theme, contextLoader);\n        }\n        return theme;\n    }\n\n    /**\n     * Checks if `theme` instance is completely loaded, meaning that `extends` property is resolved.\n     *\n     * @param theme -\n     */\n    static isThemeLoaded(theme: Theme | FlatTheme): boolean {\n        // TODO: Remove array check, when FlatTheme is fully supported\n        return theme.extends === undefined && !Array.isArray(theme.styles);\n    }\n\n    /**\n     * @deprecated Please use `ThemeLoader.load`\n     *\n     * Loads a {@link @here/harp-datasource-protocol#Theme} from a remote resource,\n     * provided as a URL that points to a JSON-encoded\n     * theme.\n     *\n     * @param themeUrl - The URL to the theme.\n     *\n     */\n    static async loadAsync(themeUrl: string): Promise<Theme> {\n        return await ThemeLoader.load(themeUrl);\n    }\n\n    /**\n     * Resolves all {@link @here/harp-datasource-protocol#Theme}'s relatives URLs\n     * to full URL using the {@link @here/harp-datasource-protocol#Theme}'s URL\n     * (see: https://www.w3.org/TR/WD-html40-970917/htmlweb.html#h-5.1.2).\n     *\n     * This method mutates original `theme` instance.\n     *\n     * @param theme - The {@link @here/harp-datasource-protocol#Theme} to resolve.\n     */\n    private static resolveUrls(theme: Theme | FlatTheme, options?: ThemeLoadOptions): Theme {\n        // Ensure that all resources referenced in theme by relative URIs are in fact relative to\n        // theme.\n        theme = ThemeLoader.convertFlatTheme(theme);\n        if (theme.url === undefined) {\n            return theme;\n        }\n\n        const childUrlResolver = composeUriResolvers(\n            options?.uriResolver,\n            new RelativeUriResolver(theme.url)\n        );\n\n        const resolveIncludes = options === undefined || !(options.resolveIncludeUris === false);\n        if (theme.extends && resolveIncludes) {\n            theme.extends = (Array.isArray(theme.extends) ? theme.extends : [theme.extends]).map(\n                baseTheme => {\n                    if (typeof baseTheme === \"string\") {\n                        return childUrlResolver.resolveUri(baseTheme);\n                    } else {\n                        if (baseTheme.url !== undefined) {\n                            return baseTheme;\n                        } else {\n                            baseTheme.url = theme.url;\n                            return this.resolveUrls(baseTheme, options);\n                        }\n                    }\n                }\n            );\n        }\n\n        if (!ThemeLoader.convertFlatTheme(theme)) {\n            return theme;\n        }\n\n        const resolveResources = options === undefined || !(options.resolveResourceUris === false);\n        if (resolveResources) {\n            ThemeLoader.resolveResources(theme, childUrlResolver);\n        }\n\n        return theme;\n    }\n\n    private static checkTechniqueSupport(theme: Theme) {\n        if (theme.styles !== undefined) {\n            for (const styleSetName in theme.styles) {\n                if (!theme.styles.hasOwnProperty(styleSetName)) {\n                    continue;\n                }\n                for (const style of theme.styles[styleSetName]) {\n                    switch ((style as any).technique) {\n                        // TODO: Re-enable this once \"dashed-line\" is deprecated.\n                        /* case \"dashed-line\":\n                            console.warn(\n                                `Using deprecated \"dashed-line\" technique.\n                                Use \"solid-line\" technique instead`\n                            ); */\n                        default:\n                            break;\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Expand all `ref` expressions in {@link @here/harp-datasource-protocol#Theme}\n     * basing on `definitions`.\n     *\n     * @remarks\n     * This method mutates original `theme` instance.\n     */\n    private static resolveThemeReferences(theme: Theme, contextLogger: IContextLogger): Theme {\n        if (theme.styles !== undefined) {\n            for (const styleSetName in theme.styles) {\n                if (!theme.styles.hasOwnProperty(styleSetName)) {\n                    continue;\n                }\n                contextLogger.pushAttr(\"styles\");\n                contextLogger.pushAttr(styleSetName);\n\n                theme.styles[styleSetName] = ThemeLoader.resolveStyleSet(\n                    theme.styles[styleSetName],\n                    theme.definitions,\n                    contextLogger\n                );\n                contextLogger.pop();\n                contextLogger.pop();\n            }\n        }\n        return theme;\n    }\n\n    /**\n     * Expand all `ref` in [[StyleSet]] basing on `definitions`.\n     */\n    private static resolveStyleSet(\n        styleSet: StyleSet,\n        definitions: Definitions | undefined,\n        contextLogger: IContextLogger\n    ): StyleSet {\n        const result: StyleSet = [];\n\n        for (let index = 0; index < styleSet.length; ++index) {\n            const currentStyle = styleSet[index];\n            contextLogger.pushIndex(index);\n            const resolvedStyle = ThemeLoader.resolveStyle(\n                currentStyle,\n                definitions,\n                contextLogger\n            );\n            if (resolvedStyle !== undefined) {\n                result.push(resolvedStyle);\n            } else {\n                contextLogger.warn(\"invalid style, ignored\");\n            }\n            contextLogger.pop();\n        }\n        return result;\n    }\n\n    /**\n     * Expand all `ref` in [[Style]] instance basing on `definitions`.\n     */\n    private static resolveStyle(\n        style: Style,\n        definitions: Definitions | undefined,\n        contextLogger: IContextLogger\n    ): Style | undefined {\n        if (Array.isArray(style.when)) {\n            contextLogger.pushAttr(\"when\");\n            const resolvedWhen = this.resolveExpressionReferences(\n                style.when,\n                definitions,\n                contextLogger\n            );\n            contextLogger.pop();\n            if (resolvedWhen === undefined) {\n                return undefined;\n            }\n            style.when = resolvedWhen;\n        }\n\n        if (style.attr !== undefined) {\n            const attr = style.attr as any;\n\n            contextLogger.pushAttr(\"attr\");\n            for (const prop in attr) {\n                if (!attr.hasOwnProperty(prop)) {\n                    continue;\n                }\n\n                const value = attr[prop];\n\n                if (!Array.isArray(value)) {\n                    continue; // nothing to do\n                }\n\n                contextLogger.pushAttr(prop);\n                const resolvedValue = this.resolveExpressionReferences(\n                    value,\n                    definitions,\n                    contextLogger\n                );\n                contextLogger.pop();\n\n                if (resolvedValue !== undefined) {\n                    attr[prop] = resolvedValue;\n                } else {\n                    delete attr[prop];\n                }\n            }\n            contextLogger.pop();\n        }\n        return style;\n    }\n\n    /**\n     * Resolve `[ref, ...]` in expressions.\n     *\n     * Returns `undefined` some reference was invalid (missing or wrong type).\n     */\n    private static resolveExpressionReferences<T>(\n        value: T,\n        definitions: Definitions | undefined,\n        contextLogger: IContextLogger\n    ): T | undefined {\n        let failed = false;\n        function resolveInternal(node: any) {\n            if (isJsonExprReference(node)) {\n                const defName = node[1];\n                const def = definitions && definitions[defName];\n                if (def === undefined) {\n                    contextLogger.warn(`invalid reference '${defName}' - not found`);\n                    failed = true;\n                    return undefined;\n                }\n                if (isJsonExpr(def)) {\n                    return def;\n                }\n                return getDefinitionValue(def);\n            } else if (Array.isArray(node)) {\n                const result = [...node];\n                for (let i = 1; i < result.length; ++i) {\n                    result[i] = resolveInternal(result[i]);\n                }\n                return result;\n            } else {\n                return node;\n            }\n        }\n        const r = resolveInternal(value);\n        if (failed) {\n            return undefined;\n        }\n        return r;\n    }\n\n    /**\n     * Realize `extends` clause by merging `theme` with\n     * its base {@link @here/harp-datasource-protocol#Theme}.\n     *\n     * @param theme - {@link @here/harp-datasource-protocol#Theme} object\n     * @param options - Optional, a {@link ThemeLoadOptions} objects\n     *                  containing any custom settings for\n     *                  this load request.\n     */\n    private static async resolveBaseThemes(\n        theme: Theme,\n        options?: ThemeLoadOptions\n    ): Promise<Theme> {\n        options = options ?? {};\n        if (theme.extends === undefined) {\n            return theme;\n        }\n\n        const maxInheritanceDepth = getOptionValue(\n            options.maxInheritanceDepth,\n            DEFAULT_MAX_THEME_INTHERITANCE_DEPTH\n        );\n        if (maxInheritanceDepth <= 0) {\n            throw new Error(`maxInheritanceDepth reached when attempting to load base theme`);\n        }\n\n        const baseThemes = !Array.isArray(theme.extends) ? [theme.extends] : theme.extends;\n        delete theme.extends;\n        let baseThemesMerged: Theme = {};\n        for (const baseTheme of baseThemes) {\n            const actualBaseTheme = await ThemeLoader.load(baseTheme, {\n                ...options,\n                resolveDefinitions: false,\n                maxInheritanceDepth: maxInheritanceDepth - 1\n            });\n\n            baseThemesMerged = ThemeLoader.mergeThemes(actualBaseTheme, baseThemesMerged);\n        }\n        return ThemeLoader.mergeThemes(theme, baseThemesMerged);\n    }\n\n    private static mergeThemes(theme: Theme, baseTheme: Theme): Theme {\n        const definitions = { ...baseTheme.definitions, ...theme.definitions };\n\n        let styles!: Styles;\n\n        if (baseTheme.styles && theme.styles) {\n            const currentStyleSets = Object.keys(baseTheme.styles);\n            const incomingStyleSets = Object.keys(theme.styles);\n\n            styles = {};\n\n            currentStyleSets.forEach(styleSetName => {\n                const index = incomingStyleSets.indexOf(styleSetName);\n\n                if (index !== -1) {\n                    // merge the current and incoming styleset\n                    // and add the result to `styles`.\n\n                    const baseStyleSet = baseTheme.styles![styleSetName];\n\n                    const newStyleSet: StyleSet = [];\n                    const styleIdMap = new Map<string, number>();\n                    baseStyleSet.forEach(style => {\n                        if (typeof style.id === \"string\") {\n                            styleIdMap.set(style.id, newStyleSet.length);\n                        }\n                        newStyleSet.push(style);\n                    });\n\n                    const incomingStyleSet = theme.styles![styleSetName];\n                    incomingStyleSet.forEach(style => {\n                        if (typeof style.extends === \"string\" && styleIdMap.has(style.extends)) {\n                            // extends the existing style referenced by `style.extends`.\n                            const baseStyleIndex = styleIdMap.get(style.extends)!;\n                            const baseStyle = newStyleSet[baseStyleIndex];\n                            newStyleSet[baseStyleIndex] = { ...baseStyle, ...style } as any;\n                            newStyleSet[baseStyleIndex].extends = undefined;\n                            return;\n                        }\n\n                        if (typeof style.id === \"string\" && styleIdMap.has(style.id)) {\n                            // overrides the existing style with `id` equals to `style.id`.\n                            const styleIndex = styleIdMap.get(style.id)!;\n                            newStyleSet[styleIndex] = style;\n                            return;\n                        }\n\n                        newStyleSet.push(style);\n                    });\n\n                    styles[styleSetName] = newStyleSet;\n\n                    // remove the styleset from the incoming list\n                    incomingStyleSets.splice(index, 1);\n                } else {\n                    // copy the existing style set to `styles`.\n                    styles[styleSetName] = baseTheme.styles![styleSetName];\n                }\n            });\n\n            // add the remaining stylesets to styles.\n            incomingStyleSets.forEach(p => {\n                styles[p] = theme.styles![p];\n            });\n        } else if (baseTheme.styles) {\n            styles = { ...baseTheme.styles };\n        } else if (theme.styles) {\n            styles = { ...theme.styles };\n        }\n\n        return {\n            ...baseTheme,\n            ...theme,\n            // Due to nested structure of the images/textures it needs a\n            // deep merge with a duplicate exclusion.\n            ...ThemeLoader.mergeImageTextures(theme, baseTheme),\n            definitions,\n            styles\n        };\n    }\n\n    private static mergeImageTextures(\n        theme: Theme,\n        baseTheme: Theme\n    ): Pick<FlatTheme, \"images\" | \"imageTextures\"> {\n        const images = { ...baseTheme.images, ...theme.images };\n        let imageTextures: ImageTexture[] = [];\n\n        if (!baseTheme.imageTextures && theme.imageTextures) {\n            imageTextures = theme.imageTextures;\n        } else if (baseTheme.imageTextures && !theme.imageTextures) {\n            imageTextures = baseTheme.imageTextures;\n        } else if (baseTheme.imageTextures && theme.imageTextures) {\n            imageTextures = theme.imageTextures.slice();\n            baseTheme.imageTextures.forEach(val => {\n                if (!imageTextures.find(({ name }) => name === val.name)) {\n                    imageTextures.push(val);\n                }\n            });\n        }\n\n        return {\n            images,\n            imageTextures\n        };\n    }\n\n    private static convertFlatTheme(theme: Theme | FlatTheme): Theme {\n        if (Array.isArray(theme.styles)) {\n            // Convert the flat theme to a standard theme.\n            const styles: Styles = {};\n            theme.styles.forEach(style => {\n                if (isJsonExpr(style)) {\n                    throw new Error(\"invalid usage of theme reference\");\n                }\n                const styleSetName = style.styleSet;\n                if (styleSetName === undefined) {\n                    throw new Error(\"missing reference to style set\");\n                }\n                if (!styles[styleSetName]) {\n                    styles[styleSetName] = [];\n                }\n                styles[styleSetName].push(style);\n            });\n            theme.styles = styles;\n        }\n        return theme as Theme;\n    }\n\n    private static resolveResources(theme: Theme, childUrlResolver: UriResolver) {\n        if (theme.sky && theme.sky.type === \"cubemap\") {\n            for (let i = 0; i < SKY_CUBEMAP_FACE_COUNT; ++i) {\n                const faceUrl: string | undefined = (theme.sky as any)[SkyCubemapFaceId[i]];\n                if (faceUrl !== undefined) {\n                    (theme.sky as any)[SkyCubemapFaceId[i]] = childUrlResolver.resolveUri(faceUrl);\n                }\n            }\n        }\n        if (theme.images) {\n            for (const name of Object.keys(theme.images)) {\n                const image = theme.images[name];\n                image.url = childUrlResolver.resolveUri(image.url);\n                if (image.atlas !== undefined) {\n                    image.atlas = childUrlResolver.resolveUri(image.atlas);\n                }\n            }\n        }\n        if (theme.fontCatalogs) {\n            for (const font of theme.fontCatalogs) {\n                font.url = childUrlResolver.resolveUri(font.url);\n            }\n        }\n        if (theme.poiTables) {\n            for (const poiTable of theme.poiTables) {\n                poiTable.url = childUrlResolver.resolveUri(poiTable.url);\n            }\n        }\n\n        if (theme.styles !== undefined) {\n            for (const styleSetName in theme.styles) {\n                if (!theme.styles.hasOwnProperty(styleSetName)) {\n                    continue;\n                }\n                const styleSet = theme.styles[styleSetName] as Style[];\n                for (const style of styleSet) {\n                    if (!style.attr) {\n                        continue;\n                    }\n                    [\"map\", \"normalMap\", \"displacementMap\", \"roughnessMap\"].forEach(\n                        texturePropertyName => {\n                            const textureProperty = (style.attr! as any)[texturePropertyName];\n                            if (textureProperty && typeof textureProperty === \"string\") {\n                                (style.attr! as any)[\n                                    texturePropertyName\n                                ] = childUrlResolver.resolveUri(textureProperty);\n                            }\n                        }\n                    );\n                }\n            }\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    DecodedTile,\n    GeometryKindSet,\n    GeometryType,\n    TextPathGeometry\n} from \"@here/harp-datasource-protocol\";\nimport { GeoBox, OrientedBox3, Projection, TileKey, TileKeyUtils } from \"@here/harp-geoutils\";\nimport { assert, CachedResource, chainCallbacks, LoggerManager } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { CopyrightInfo } from \"./copyrights/CopyrightInfo\";\nimport { DataSource } from \"./DataSource\";\nimport { ElevationRange } from \"./ElevationRangeSource\";\nimport { LodMesh } from \"./geometry/LodMesh\";\nimport { Object3DUtils } from \"./geometry/Object3DUtils\";\nimport { TileGeometryLoader } from \"./geometry/TileGeometryLoader\";\nimport { ITileLoader, TileLoaderState } from \"./ITileLoader\";\nimport { MapView } from \"./MapView\";\nimport { PathBlockingElement } from \"./PathBlockingElement\";\nimport { PerformanceStatistics } from \"./Statistics\";\nimport { TextElement } from \"./text/TextElement\";\nimport { TextElementGroup } from \"./text/TextElementGroup\";\nimport { TextElementGroupPriorityList } from \"./text/TextElementGroupPriorityList\";\nimport { TileTextStyleCache } from \"./text/TileTextStyleCache\";\n\nconst logger = LoggerManager.instance.create(\"Tile\");\n\nexport type TileObject = THREE.Object3D & {\n    /**\n     * Distance of this object from the {@link Tile}'s center.\n     */\n    displacement?: THREE.Vector3;\n};\n\ninterface DisposableObject {\n    geometry?: THREE.BufferGeometry;\n    geometries?: THREE.BufferGeometry[];\n    material?: THREE.Material[] | THREE.Material;\n}\n\n/**\n * An interface for optional feature data that is saved in a `THREE.Object3D`'s `userData`\n * property.\n */\nexport interface TileFeatureData {\n    /**\n     * The original type of geometry.\n     */\n    geometryType?: GeometryType;\n\n    /**\n     * An optional array of sorted indices into geometry where the feature starts. The lists of IDs\n     * and starting indices (starts) must have the same size.\n     * Feature i starts at starts[i] and ends at starts[i+1]-1, except for the last feature, which\n     * ends at the last index in the object's geometry.\n     */\n    starts?: number[];\n\n    /**\n     * An optional object containing properties defined by the developer. It has the same size as\n     * the list of IDs and the starting indices (starts).\n     */\n    objInfos?: Array<{} | undefined>;\n}\n\n/**\n * Minimum estimated size of a JS object.\n */\nconst MINIMUM_SMALL_OBJECT_SIZE_ESTIMATION = 16;\nconst MINIMUM_OBJECT_SIZE_ESTIMATION = 100;\n\n/**\n * Compute the memory footprint of `TileFeatureData`.\n *\n * @internal\n */\nexport function getFeatureDataSize(featureData: TileFeatureData): number {\n    let numBytes = MINIMUM_OBJECT_SIZE_ESTIMATION;\n\n    if (featureData.starts !== undefined) {\n        numBytes += featureData.starts.length * 8;\n    }\n    if (featureData.objInfos !== undefined) {\n        // 16 (estimated) bytes per objInfos\n        numBytes += featureData.objInfos.length * MINIMUM_SMALL_OBJECT_SIZE_ESTIMATION;\n    }\n\n    return numBytes;\n}\n\n/**\n * An object that contains information about resources used by a tile.\n */\nexport interface TileResourceUsage {\n    /**\n     * The estimated memory usage, in bytes.\n     */\n    estimatedMemoryUsage: number;\n    /**\n     * The amount of vertices used by a tile.\n     */\n    numVertices: number;\n    /**\n     * The amount of colors used by a tile.\n     */\n    numColors: number;\n    /**\n     * The amount of objects used by a tile.\n     */\n    numObjects: number;\n    /**\n     * The amount of geometries used by a tile.\n     */\n    numGeometries: number;\n    /**\n     * The amount of materials used by a tile.\n     */\n    numMaterials: number;\n}\n\n/**\n * Simple information about resource usage by the {@link Tile}.\n *\n * @remarks\n * Heap and GPU information are\n * estimations.\n */\nexport interface TileResourceInfo {\n    /**\n     * Estimated number of bytes used on the heap.\n     */\n    heapSize: number;\n    /**\n     * Estimated number of bytes used on the GPU.\n     */\n    gpuSize: number;\n    /**\n     * Number of [[THREE.Object3D]] in this tile.\n     */\n    num3dObjects: number;\n    /**\n     * Number of {@link TextElement}s in this tile.\n     */\n    numTextElements: number;\n    /**\n     * @deprecated This counter has been merged with numTextElements.\n     * Number of user {@link TextElement}s in this tile.\n     */\n    numUserTextElements: number;\n}\n\n/**\n * @internal\n */\nexport interface TextElementIndex {\n    groupIndex: number;\n    elementIndex: number;\n}\n\ntype TileCallback = (tile: Tile) => void;\n\n/**\n * The class that holds the tiled data for a {@link DataSource}.\n */\nexport class Tile implements CachedResource {\n    /**\n     * A list of the THREE.js objects stored in this `Tile`.\n     */\n    readonly objects: TileObject[] = [];\n\n    /**\n     * The optional list of HERE TileKeys of tiles with geometries that cross the boundaries of this\n     * `Tile`.\n     */\n    readonly dependencies: TileKey[] = [];\n\n    /**\n     * The bounding box of this `Tile` in geocoordinates.\n     */\n    readonly geoBox: GeoBox;\n\n    /**\n     * Copyright information of this `Tile`'s data.\n     */\n    copyrightInfo?: CopyrightInfo[];\n\n    /**\n     * Keeping some stats for the individual {@link Tile}s to analyze caching behavior.\n     *\n     * The frame the {@link Tile} was last requested. This is\n     * required to know when the given {@link Tile}\n     * can be removed from the cache.\n     */\n    frameNumLastRequested: number = -1;\n\n    /**\n     * The frame the `Tile` was first visible.\n     */\n    frameNumVisible: number = -1;\n\n    /**\n     * The last frame this `Tile` has been rendered (or was in the visible set). Used to determine\n     * visibility of `Tile` at the end of a frame, if the number is the current frame number, it is\n     * visible.\n     */\n    frameNumLastVisible: number = -1;\n\n    /**\n     * After removing from cache, this is the number of frames the `Tile` was visible.\n     */\n    numFramesVisible: number = 0;\n\n    /**\n     * Version stamp of the visibility set in the [[TileManager]]. If the counter is different, the\n     * visibility of the Tile's objects has to be calculated. Optimization to reduce overhead of\n     * computing visibility.\n     */\n    visibilityCounter: number = -1;\n\n    /**\n     * @hidden\n     *\n     * Used to tell if the Tile is used temporarily as a fallback tile.\n     *\n     * levelOffset is in in the range [-quadTreeSearchDistanceUp,\n     * quadTreeSearchDistanceDown], where these values come from the\n     * {@link VisibleTileSetOptions}\n     */\n    levelOffset: number = 0;\n\n    /**\n     * If the tile should not be rendered, this is used typically when the tile in question\n     * is completely covered by another tile and therefore can be skipped without any visual\n     * impact. Setting this value directly affects the [[willRender]] method, unless\n     * overriden by deriving classes.\n     */\n    skipRendering: boolean = false;\n\n    /**\n     * If the tile should not yet be rendered, this is used typically when the tile in question\n     * does not fit into the gpu upload limit of the current frame.\n     * Setting this value directly affects the [[willRender]] method, unless\n     * overriden by deriving classes.\n     */\n    delayRendering = false;\n\n    /**\n     * @hidden\n     *\n     * Prepared text geometries optimized for display.\n     */\n    protected preparedTextPaths: TextPathGeometry[] | undefined;\n    protected readonly m_tileGeometryLoader?: TileGeometryLoader;\n\n    /**\n     * The bounding box of this `Tile` in world coordinates.\n     */\n    private readonly m_boundingBox = new OrientedBox3();\n\n    private m_disposed: boolean = false;\n    private m_disposeCallback?: TileCallback;\n    private readonly m_localTangentSpace: boolean;\n\n    private m_forceHasGeometry: boolean | undefined = undefined;\n\n    private m_tileLoader?: ITileLoader;\n    private m_decodedTile?: DecodedTile;\n\n    // Used for {@link TextElement}s that are stored in the data, and that are placed explicitly,\n    // fading in and out.\n    private m_textElementGroups = new TextElementGroupPriorityList();\n\n    // Blocks other labels from showing.\n    private readonly m_pathBlockingElements: PathBlockingElement[] = [];\n\n    // If `true`, the text content of the {@link Tile} changed after the last time it was rendered.\n    // It's `Undefined` when no text content has been added yet.\n    private m_textElementsChanged: boolean | undefined;\n\n    // Center of the tile's un-elevated bounding box world coordinates.\n    private readonly m_worldCenter = new THREE.Vector3();\n    private m_visibleArea: number = 0;\n    // Tile elevation range in meters\n    private readonly m_elevationRange: ElevationRange = { minElevation: 0, maxElevation: 0 };\n    // Maximum height of geometry on this tile above ground level.\n    private m_maxGeometryHeight?: number;\n    // Minimum height of geometry on this tile below ground level. Should be negative for values\n    // below ground.\n    private m_minGeometryHeight?: number;\n\n    private m_resourceInfo: TileResourceInfo | undefined;\n\n    // List of owned textures for disposal\n    private readonly m_ownedTextures: WeakSet<THREE.Texture> = new WeakSet();\n\n    private readonly m_textStyleCache: TileTextStyleCache;\n    private m_uniqueKey: number;\n    private m_offset: number;\n    /**\n     * Creates a new {@link Tile}.\n     *\n     * @param dataSource - The {@link DataSource} that created this {@link Tile}.\n     * @param tileKey - The unique identifier for this {@link Tile}.\n     *                  Currently only up to level 24 is\n     *                  supported, because of the use of the upper bits for the offset.\n     * @param offset - The optional offset, this is an integer which represents what multiple of 360\n     *                 degrees to shift, only useful for flat projections, hence optional.\n     * @param localTangentSpace - Whether the tile geometry is in local tangent space or not.\n     */\n    constructor(\n        readonly dataSource: DataSource,\n        readonly tileKey: TileKey,\n        offset: number = 0,\n        localTangentSpace?: boolean\n    ) {\n        this.geoBox = this.dataSource.getTilingScheme().getGeoBox(this.tileKey);\n        this.updateBoundingBox();\n        this.m_worldCenter.copy(this.boundingBox.position);\n        this.m_localTangentSpace = localTangentSpace ?? false;\n        this.m_textStyleCache = new TileTextStyleCache(this);\n        this.m_offset = offset;\n        this.m_uniqueKey = TileKeyUtils.getKeyForTileKeyAndOffset(this.tileKey, this.offset);\n        if (dataSource.useGeometryLoader) {\n            this.m_tileGeometryLoader = new TileGeometryLoader(this, this.mapView.taskQueue);\n            this.attachGeometryLoadedCallback();\n        }\n    }\n\n    /**\n     * The visibility status of the {@link Tile}. It is actually\n     * visible or planned to become visible.\n     */\n    get isVisible(): boolean {\n        // Tiles are not evaluated as invisible until the second frame they aren't requested.\n        // This happens in order to prevent that, during VisibleTileSet visibility evaluation,\n        // visible tiles that haven't yet been evaluated for the current frame are preemptively\n        // removed from [[DataSourceCache]].\n        // There is cases when a tile was already removed from the MapView, i.e. the PolaCaps\n        // Datasource might get remove on a change of projection, in this case\n        // this.dataSource.mapView will throw an error\n        try {\n            return this.frameNumLastRequested >= this.dataSource.mapView.frameNumber - 1;\n        } catch (error) {\n            logger.debug(error);\n            return false;\n        }\n    }\n\n    /**\n     * Sets the tile visibility status.\n     * @param visible - `True` to mark the tile as visible, `False` otherwise.\n     */\n    set isVisible(visible: boolean) {\n        this.frameNumLastRequested = visible ? this.dataSource.mapView.frameNumber : -1;\n\n        if (!visible && this.m_tileGeometryLoader && !this.m_tileGeometryLoader.isSettled) {\n            this.m_tileGeometryLoader.cancel();\n        }\n    }\n\n    /**\n     * The {@link @here/harp-geoutils#Projection} currently used by the {@link MapView}.\n     */\n    get projection(): Projection {\n        return this.dataSource.projection;\n    }\n\n    /**\n     * The {@link MapView} this `Tile` belongs to.\n     */\n    get mapView(): MapView {\n        return this.dataSource.mapView;\n    }\n\n    /**\n     * Whether the data of this tile is in local tangent space or not.\n     *\n     * @remarks\n     * If the data is in local tangent space (i.e. up vector is (0,0,1) for high zoomlevels) then\n     * {@link MapView} will rotate the objects before rendering using the rotation matrix of the\n     * oriented [[boundingBox]].\n     */\n    get localTangentSpace(): boolean {\n        return this.m_localTangentSpace;\n    }\n\n    /*\n     * The size of this Tile in system memory.\n     */\n    get memoryUsage(): number {\n        if (this.m_resourceInfo === undefined) {\n            this.computeResourceInfo();\n        }\n        return this.m_resourceInfo!.heapSize;\n    }\n\n    /**\n     * The center of this `Tile` in world coordinates.\n     */\n    get center(): THREE.Vector3 {\n        return this.m_worldCenter;\n    }\n\n    /**\n     * Gets the key to uniquely represent this tile (based on\n     * the {@link tileKey} and {@link offset}).\n     *\n     * @remarks\n     * This key is only unique within the given {@link DataSource},\n     * to get a key which is unique across\n     * {@link DataSource}s see [[DataSourceCache.getKeyForTile]].\n     */\n    get uniqueKey(): number {\n        return this.m_uniqueKey;\n    }\n\n    /**\n     * The optional offset, this is an integer which represents what multiple of 360 degrees to\n     * shift, only useful for flat projections, hence optional.\n     */\n    get offset(): number {\n        return this.m_offset;\n    }\n\n    /**\n     * The optional offset, this is an integer which represents what multiple of 360 degrees to\n     * shift, only useful for flat projections, hence optional.\n     * @param offset - Which multiple of 360 degrees to apply to the {@link Tile}.\n     */\n    set offset(offset: number) {\n        if (this.m_offset !== offset) {\n            this.m_uniqueKey = TileKeyUtils.getKeyForTileKeyAndOffset(this.tileKey, offset);\n        }\n        this.m_offset = offset;\n    }\n\n    /**\n     * Compute {@link TileResourceInfo} of this `Tile`.\n     *\n     * @remarks\n     * May be using a cached value. The method\n     * `invalidateResourceInfo` can be called beforehand to force a recalculation.\n     *\n     * @returns `TileResourceInfo` for this `Tile`.\n     */\n    getResourceInfo(): TileResourceInfo {\n        if (this.m_resourceInfo === undefined) {\n            this.computeResourceInfo();\n        }\n        return this.m_resourceInfo!;\n    }\n\n    /**\n     * Force invalidation of the cached {@link TileResourceInfo}.\n     *\n     * @remarks\n     * Useful after the `Tile` has been\n     * modified.\n     */\n    invalidateResourceInfo(): void {\n        this.m_resourceInfo = undefined;\n    }\n\n    /**\n     * Add ownership of a texture to this tile.\n     *\n     * @remarks\n     * The texture will be disposed if the `Tile` is disposed.\n     * @param texture - Texture to be owned by the `Tile`\n     */\n    addOwnedTexture(texture: THREE.Texture): void {\n        this.m_ownedTextures.add(texture);\n    }\n\n    /**\n     * @internal\n     * @deprecated User text elements are deprecated.\n     *\n     * Gets the list of developer-defined {@link TextElement} in this `Tile`.\n     *\n     * @remarks\n     * This list is always rendered first.\n     */\n    get userTextElements(): TextElementGroup {\n        let group = this.m_textElementGroups.groups.get(TextElement.HIGHEST_PRIORITY);\n        if (group === undefined) {\n            group = new TextElementGroup(TextElement.HIGHEST_PRIORITY);\n            this.m_textElementGroups.groups.set(group.priority, group);\n        }\n        return group;\n    }\n\n    /**\n     * Adds a developer-defined {@link TextElement} to this `Tile`.\n     *\n     * @remarks\n     * The {@link TextElement} is always\n     * visible, if it's in the map's currently visible area.\n     *\n     * @deprecated use [[addTextElement]].\n     *\n     * @param textElement - The Text element to add.\n     */\n    addUserTextElement(textElement: TextElement) {\n        textElement.priority = TextElement.HIGHEST_PRIORITY;\n        this.addTextElement(textElement);\n    }\n\n    /**\n     * Removes a developer-defined {@link TextElement} from this `Tile`.\n     *\n     * @deprecated use `removeTextElement`.\n     *\n     * @param textElement - A developer-defined TextElement to remove.\n     * @returns `true` if the element has been removed successfully; `false` otherwise.\n     */\n    removeUserTextElement(textElement: TextElement): boolean {\n        textElement.priority = TextElement.HIGHEST_PRIORITY;\n        return this.removeTextElement(textElement);\n    }\n\n    /**\n     * Adds a {@link TextElement} to this `Tile`, which is added to the visible set of\n     * {@link TextElement}s based on the capacity and visibility.\n     *\n     * @remarks\n     * The {@link TextElement}'s priority controls if or when it becomes visible.\n     *\n     * To ensure that a TextElement is visible, use a high value for its priority, such as\n     * `TextElement.HIGHEST_PRIORITY`. Since the number of visible TextElements is limited by the\n     * screen space, not all TextElements are visible at all times.\n     *\n     * @param textElement - The TextElement to add.\n     */\n    addTextElement(textElement: TextElement) {\n        this.textElementGroups.add(textElement);\n\n        if (this.m_textElementsChanged === false) {\n            // HARP-8733: Clone all groups so that they are handled as new element groups\n            // by TextElementsRenderer and it doesn't try to reuse the same state stored\n            // for the old groups.\n            this.m_textElementGroups = this.textElementGroups.clone();\n        }\n        this.textElementsChanged = true;\n    }\n\n    /**\n     * Adds a `PathBlockingElement` to this `Tile`.\n     *\n     * @remarks\n     * This path has the highest priority and blocks\n     * all other labels. There maybe in future a use case to give it a priority, but as that isn't\n     * yet required, it is left to be implemented later if required.\n     * @param blockingElement - Element which should block all other labels.\n     */\n    addBlockingElement(blockingElement: PathBlockingElement) {\n        this.m_pathBlockingElements.push(blockingElement);\n    }\n\n    /**\n     * Removes a {@link TextElement} from this `Tile`.\n     *\n     * @remarks\n     * For the element to be removed successfully, the\n     * priority of the {@link TextElement} has to be equal to its priority when it was added.\n     *\n     * @param textElement - The TextElement to remove.\n     * @returns `true` if the TextElement has been removed successfully; `false` otherwise.\n     */\n    removeTextElement(textElement: TextElement): boolean {\n        const groups = this.textElementGroups;\n        if (!groups.remove(textElement)) {\n            return false;\n        }\n        if (this.m_textElementsChanged === false) {\n            // HARP-8733: Clone all groups so that they are handled as new element groups\n            // by TextElementsRenderer and it doesn't try to reuse the same state stored\n            // for the old groups.\n            this.m_textElementGroups = groups.clone();\n        }\n        this.textElementsChanged = true;\n        return true;\n    }\n\n    /**\n     * @internal\n     *\n     * Gets the current `GroupedPriorityList` which\n     * contains a list of all {@link TextElement}s to be\n     * selected and placed for rendering.\n     */\n    get textElementGroups(): TextElementGroupPriorityList {\n        return this.m_textElementGroups;\n    }\n\n    /**\n     * Gets the current modification state for the list\n     * of {@link TextElement}s in the `Tile`.\n     *\n     * @remarks\n     * If the value is `true` the `TextElement` is placed for\n     * rendering during the next frame.\n     */\n    get textElementsChanged(): boolean {\n        return this.m_textElementsChanged ?? false;\n    }\n\n    set textElementsChanged(changed: boolean) {\n        this.m_textElementsChanged = changed;\n    }\n\n    /**\n     * Returns true if the `Tile` has any text elements to render.\n     */\n    hasTextElements(): boolean {\n        return this.m_textElementGroups.count() > 0;\n    }\n\n    /**\n     * Get the current blocking elements.\n     */\n    get blockingElements(): PathBlockingElement[] {\n        return this.m_pathBlockingElements;\n    }\n\n    /**\n     * Called before {@link MapView} starts rendering this `Tile`.\n     *\n     * @remarks\n     * @param zoomLevel - The current zoom level.\n     * @returns Returns `true` if this `Tile` should be rendered. Influenced directly by the\n     *      `skipRendering` property unless specifically overriden in deriving classes.\n     */\n    willRender(_zoomLevel: number): boolean {\n        return !this.skipRendering && !this.delayRendering;\n    }\n\n    /**\n     * Called after {@link MapView} has rendered this `Tile`.\n     */\n    didRender(): void {\n        // to be overridden by subclasses\n    }\n\n    /**\n     * Estimated visible area of tile used for sorting the priorities during loading.\n     */\n    get visibleArea(): number {\n        return this.m_visibleArea;\n    }\n\n    set visibleArea(area: number) {\n        this.m_visibleArea = area;\n        if (this.tileLoader !== undefined) {\n            this.tileLoader.priority = area;\n        }\n    }\n\n    /**\n     * @internal\n     * Gets the tile's ground elevation range in meters.\n     */\n    get elevationRange(): ElevationRange {\n        return this.m_elevationRange;\n    }\n\n    /**\n     * @internal\n     * Sets the tile's ground elevation range in meters.\n     *\n     * @param elevationRange - The elevation range.\n     */\n    set elevationRange(elevationRange: ElevationRange) {\n        if (\n            elevationRange.minElevation === this.m_elevationRange.minElevation &&\n            elevationRange.maxElevation === this.m_elevationRange.maxElevation &&\n            elevationRange.calculationStatus === this.m_elevationRange.calculationStatus\n        ) {\n            return;\n        }\n\n        this.m_elevationRange.minElevation = elevationRange.minElevation;\n        this.m_elevationRange.maxElevation = elevationRange.maxElevation;\n        this.m_elevationRange.calculationStatus = elevationRange.calculationStatus;\n        this.elevateGeoBox();\n\n        // Only update bounding box if tile has already been decoded and a maximum/minimum geometry\n        // height is provided by the data source.\n        if (this.m_maxGeometryHeight !== undefined || this.m_minGeometryHeight !== undefined) {\n            assert(this.decodedTile?.boundingBox === undefined);\n            this.updateBoundingBox();\n        }\n    }\n\n    /**\n     * Gets the decoded tile; it is removed after geometry handling.\n     */\n    get decodedTile(): DecodedTile | undefined {\n        return this.m_decodedTile;\n    }\n\n    /**\n     * Applies the decoded tile to the tile.\n     *\n     * @remarks\n     * If the geometry is empty, then the tile's forceHasGeometry flag is set.\n     * Map is updated.\n     * @param decodedTile - The decoded tile to set.\n     */\n    set decodedTile(decodedTile: DecodedTile | undefined) {\n        this.m_decodedTile = decodedTile;\n        this.invalidateResourceInfo();\n\n        if (decodedTile === undefined) {\n            return;\n        }\n\n        if (decodedTile.geometries.length === 0) {\n            this.forceHasGeometry(true);\n        }\n\n        // If the decoder provides a more accurate bounding box than the one we computed from\n        // the flat geo box we take it instead. Otherwise, if an elevation range was set, elevate\n        // bounding box to match the elevated geometry.\n        this.m_maxGeometryHeight = decodedTile.boundingBox\n            ? undefined\n            : decodedTile.maxGeometryHeight ?? 0;\n        this.m_minGeometryHeight = decodedTile.boundingBox\n            ? undefined\n            : decodedTile.minGeometryHeight ?? 0;\n        this.elevateGeoBox();\n        this.updateBoundingBox(decodedTile.boundingBox);\n\n        const stats = PerformanceStatistics.instance;\n        if (stats.enabled && decodedTile.decodeTime !== undefined) {\n            stats.currentFrame.addValue(\"decode.decodingTime\", decodedTile.decodeTime);\n            stats.currentFrame.addValue(\"decode.decodedTiles\", 1);\n        }\n\n        if (decodedTile.copyrightHolderIds !== undefined) {\n            this.copyrightInfo = decodedTile.copyrightHolderIds.map(id => ({ id }));\n        }\n\n        this.dataSource.requestUpdate();\n    }\n\n    /**\n     * Called when the default implementation of `dispose()` needs\n     * to free the geometry of a `Tile` object.\n     *\n     * @param object - The object that references the geometry.\n     * @returns `true` if the geometry can be disposed.\n     */\n    shouldDisposeObjectGeometry(object: TileObject): boolean {\n        return true;\n    }\n\n    /**\n     * Called when the default implementation of `dispose()` needs\n     * to free a `Tile` object's material.\n     *\n     * @param object - The object referencing the geometry.\n     * @returns `true` if the material can be disposed.\n     */\n    shouldDisposeObjectMaterial(object: TileObject): boolean {\n        return true;\n    }\n\n    /**\n     * Called when the default implementation of `dispose()` needs\n     * to free a Texture that is part of a `Tile` object's material.\n     *\n     * @param texture - The texture about to be disposed.\n     * @returns `true` if the texture can be disposed.\n     */\n    shouldDisposeTexture(texture: THREE.Texture): boolean {\n        return this.m_ownedTextures.has(texture);\n    }\n\n    /**\n     * Returns `true` if this `Tile` has been disposed.\n     */\n    get disposed(): boolean {\n        return this.m_disposed;\n    }\n\n    /**\n     * `True` if all geometry of the `Tile` has been loaded.\n     */\n    get allGeometryLoaded(): boolean {\n        return this.m_tileGeometryLoader?.isFinished ?? this.hasGeometry;\n    }\n\n    /**\n     * MapView checks if this `Tile` is ready to be rendered while culling.\n     *\n     * By default, MapView checks if the [[objects]] list is not empty. However, you can override\n     * this check by manually setting this property.\n     */\n    get hasGeometry(): boolean {\n        if (this.m_forceHasGeometry === undefined) {\n            return this.objects.length !== 0;\n        } else {\n            return this.m_forceHasGeometry;\n        }\n    }\n\n    /**\n     * Overrides the default value for [[hasGeometry]] if value is not `undefined`.\n     *\n     * @param value - A new value for the [[hasGeometry]] flag.\n     */\n    forceHasGeometry(value: boolean | undefined) {\n        this.m_forceHasGeometry = value;\n    }\n\n    /**\n     * Reset the visibility counter. This will force the visibility check to be rerun on all objects\n     * in this `Tile`.\n     */\n    resetVisibilityCounter(): void {\n        this.visibilityCounter = -1;\n    }\n\n    /**\n     * Gets the {@link ITileLoader} that manages this tile.\n     */\n    get tileLoader(): ITileLoader | undefined {\n        return this.m_tileLoader;\n    }\n\n    /**\n     * Sets the {@link ITileLoader} to manage this tile.\n     *\n     * @param tileLoader - A {@link ITileLoader} instance to manage\n     *                     the loading process for this tile.\n     */\n    set tileLoader(tileLoader: ITileLoader | undefined) {\n        this.m_tileLoader = tileLoader;\n    }\n\n    /**\n     * Loads this `Tile` geometry.\n     *\n     * @returns Promise which can be used to wait for the loading to be finished.\n     */\n    async load(): Promise<void> {\n        const tileLoader = this.tileLoader;\n        if (tileLoader === undefined) {\n            return await Promise.resolve();\n        }\n\n        if (this.m_tileGeometryLoader) {\n            const wasSettled = this.m_tileGeometryLoader.isSettled;\n            this.m_tileGeometryLoader.reset();\n            if (wasSettled) {\n                this.attachGeometryLoadedCallback();\n            }\n        }\n\n        return await tileLoader\n            .loadAndDecode()\n            .then(tileLoaderState => {\n                assert(tileLoaderState === TileLoaderState.Ready);\n                const decodedTile = tileLoader.decodedTile;\n                this.decodedTile = decodedTile;\n                decodedTile?.dependencies?.forEach(mortonCode => {\n                    this.dependencies.push(TileKey.fromMortonCode(mortonCode));\n                });\n            })\n            .catch(tileLoaderState => {\n                if (tileLoaderState === TileLoaderState.Failed) {\n                    this.dispose();\n                } else if (tileLoaderState !== TileLoaderState.Canceled) {\n                    logger.error(\"Unknown error\" + tileLoaderState);\n                }\n            });\n    }\n\n    /**\n     * Text style cache for this tile.\n     * @hidden\n     */\n    get textStyleCache(): TileTextStyleCache {\n        return this.m_textStyleCache;\n    }\n\n    /**\n     * Frees the rendering resources allocated by this `Tile`.\n     *\n     * @remarks\n     * The default implementation of this method frees the geometries and the materials for all the\n     * reachable objects.\n     * Textures are freed if they are owned by this `Tile` (i.e. if they where created by this\n     * `Tile`or if the ownership was explicitely set to this `Tile` by [[addOwnedTexture]]).\n     */\n    clear() {\n        const disposeMaterial = (material: THREE.Material) => {\n            Object.getOwnPropertyNames(material).forEach((property: string) => {\n                const materialProperty = (material as any)[property];\n                if (materialProperty !== undefined && materialProperty instanceof THREE.Texture) {\n                    const texture = materialProperty;\n                    if (this.shouldDisposeTexture(texture)) {\n                        texture.dispose();\n                    }\n                }\n            });\n            material.dispose();\n        };\n\n        const disposeObject = (object: TileObject & DisposableObject) => {\n            if (this.shouldDisposeObjectGeometry(object)) {\n                if (object.geometry !== undefined) {\n                    object.geometry.dispose();\n                }\n\n                if (object.geometries !== undefined) {\n                    for (const geometry of object.geometries) {\n                        geometry.dispose();\n                    }\n                }\n            }\n\n            if (object.material !== undefined && this.shouldDisposeObjectMaterial(object)) {\n                if (object.material instanceof Array) {\n                    object.material.forEach((material: THREE.Material | undefined) => {\n                        if (material !== undefined) {\n                            disposeMaterial(material);\n                        }\n                    });\n                } else {\n                    disposeMaterial(object.material);\n                }\n            }\n        };\n\n        this.objects.forEach((rootObject: TileObject & DisposableObject) => {\n            rootObject.traverse((object: TileObject & DisposableObject) => {\n                disposeObject(object);\n            });\n\n            disposeObject(rootObject);\n        });\n        this.objects.length = 0;\n\n        if (this.preparedTextPaths) {\n            this.preparedTextPaths = [];\n        }\n\n        this.m_textStyleCache.clear();\n        this.clearTextElements();\n        this.invalidateResourceInfo();\n    }\n\n    /**\n     * Removes all {@link TextElement} from the tile.\n     */\n    clearTextElements() {\n        if (!this.hasTextElements()) {\n            return;\n        }\n        this.textElementsChanged = true;\n        this.m_pathBlockingElements.splice(0);\n        this.textElementGroups.forEach((element: TextElement) => {\n            element.dispose();\n        });\n        this.textElementGroups.clear();\n    }\n\n    /**\n     * Adds a callback that will be called whenever the tile is disposed.\n     *\n     * @remarks\n     * Multiple callbacks may be added.\n     * @internal\n     * @param callback - The callback to be called when the tile is disposed.\n     */\n    addDisposeCallback(callback: TileCallback) {\n        this.m_disposeCallback = chainCallbacks(this.m_disposeCallback, callback);\n    }\n\n    /**\n     * Disposes this `Tile`, freeing all geometries and materials for the reachable objects.\n     */\n    dispose() {\n        if (this.m_disposed) {\n            return;\n        }\n        if (this.m_tileLoader) {\n            this.m_tileLoader.cancel();\n            this.m_tileLoader = undefined;\n        }\n        this.clear();\n        // Ensure that tile is removable from tile cache.\n        this.frameNumLastRequested = 0;\n        this.m_disposed = true;\n        this.m_tileGeometryLoader?.dispose();\n\n        if (this.m_disposeCallback) {\n            this.m_disposeCallback(this);\n        }\n    }\n\n    /**\n     * Computes the offset in the x world coordinates corresponding to this tile, based on\n     * its {@link offset}.\n     *\n     * @returns The x offset.\n     */\n    computeWorldOffsetX(): number {\n        return this.projection.worldExtent(0, 0).max.x * this.offset;\n    }\n\n    /**\n     * Update tile for current map view zoom level\n     * @param zoomLevel - Zoom level of the map view\n     * @internal\n     */\n    update(zoomLevel: number): void {\n        for (const object of this.objects) {\n            if (object instanceof LodMesh) {\n                object.setLevelOfDetail(zoomLevel - this.tileKey.level);\n            }\n        }\n    }\n\n    /**\n     * Gets the tile's bounding box.\n     */\n    get boundingBox(): OrientedBox3 {\n        return this.m_boundingBox;\n    }\n\n    /**\n     * Start with or continue with loading geometry for tiles requiring this step. Called\n     * repeatedly until loading is finished.\n     * @param priority - Priority assigned to asynchronous tasks doing the geometry update.\n     * @param enabledKinds - {@link GeometryKind}s that will be created.\n     * @param disabledKinds - {@link GeometryKind}s that will not be created.\n     * @return `true` if tile uses a geometry loader, `false` otherwise.\n     * @internal\n     */\n    updateGeometry(\n        priority?: number,\n        enabledKinds?: GeometryKindSet,\n        disabledKinds?: GeometryKindSet\n    ): boolean {\n        if (!this.m_tileGeometryLoader) {\n            return false;\n        }\n\n        if (this.m_tileGeometryLoader.isSettled) {\n            return true;\n        }\n\n        if (this.dataSource.isDetached()) {\n            this.m_tileGeometryLoader.cancel();\n            return true;\n        }\n\n        if (this.tileLoader) {\n            if (!this.tileLoader.isFinished) {\n                return true;\n            } else if (!this.decodedTile) {\n                // Finish loading if tile has no data.\n                this.m_tileGeometryLoader.finish();\n                return true;\n            }\n        }\n\n        if (priority !== undefined) {\n            this.m_tileGeometryLoader.priority = priority;\n        }\n        this.m_tileGeometryLoader.update(enabledKinds, disabledKinds);\n        return true;\n    }\n\n    /**\n     * Gets a set of the {@link GeometryKind}s that were loaded (if any).\n     * @internal\n     */\n    get loadedGeometryKinds(): GeometryKindSet | undefined {\n        return this.m_tileGeometryLoader?.availableGeometryKinds;\n    }\n\n    /**\n     * Called when {@link TileGeometryLoader} is finished.\n     *\n     * @remarks\n     * It may be used to add content to the `Tile`.\n     * The {@link @here/harp-datasource-protocol#DecodedTile} is still available.\n     */\n    protected loadingFinished() {\n        // To be used in subclasses.\n    }\n\n    private attachGeometryLoadedCallback() {\n        assert(this.m_tileGeometryLoader !== undefined);\n        this.m_tileGeometryLoader!.waitFinished()\n            .then(() => {\n                this.loadingFinished();\n                this.removeDecodedTile();\n            })\n            .catch(() => {\n                if (this.disposed) {\n                    return;\n                }\n                // Loader was canceled, dispose tile.\n                if (!this.dataSource.isDetached()) {\n                    this.mapView.visibleTileSet.disposeTile(this);\n                }\n            });\n    }\n\n    /**\n     * Remove the decodedTile when no longer needed.\n     */\n    private removeDecodedTile() {\n        this.m_decodedTile = undefined;\n        this.invalidateResourceInfo();\n    }\n\n    /**\n     * Updates the tile's world bounding box.\n     * @param newBoundingBox - The new bounding box to set. If undefined, the bounding box will be\n     *                         computed by projecting the tile's geoBox.\n     */\n    private updateBoundingBox(newBoundingBox?: OrientedBox3) {\n        if (newBoundingBox) {\n            this.m_boundingBox.copy(newBoundingBox);\n            this.m_worldCenter.copy(this.boundingBox.position);\n        } else {\n            this.projection.projectBox(this.geoBox, this.boundingBox);\n        }\n    }\n\n    /**\n     * Elevates the tile's geo box using the elevation range and maximum geometry height.\n     */\n    private elevateGeoBox() {\n        this.geoBox.southWest.altitude =\n            this.m_elevationRange.minElevation + (this.m_minGeometryHeight ?? 0);\n        this.geoBox.northEast.altitude =\n            this.m_elevationRange.maxElevation + (this.m_maxGeometryHeight ?? 0);\n    }\n\n    private computeResourceInfo(): void {\n        let heapSize = 0;\n        let num3dObjects = 0;\n        let numTextElements = 0;\n\n        const aggregatedObjSize = {\n            heapSize: 0,\n            gpuSize: 0\n        };\n\n        // Keep a map of the uuids of the larger objects, like Geometries, Materials and Attributes.\n        // They should be counted only once even if they are shared.\n        const visitedObjects: Map<string, boolean> = new Map();\n\n        for (const object of this.objects) {\n            if (object.visible) {\n                num3dObjects++;\n            }\n            Object3DUtils.estimateSize(object, aggregatedObjSize, visitedObjects);\n        }\n\n        for (const group of this.textElementGroups.groups) {\n            numTextElements += group[1].elements.length;\n        }\n        // 216 was the shallow size of a single TextElement last time it has been checked, 312 bytes\n        // was the minimum retained size of a TextElement that was not being rendered. If a\n        // TextElement is actually rendered, the size may be _much_ bigger.\n        heapSize += numTextElements * 312;\n\n        if (this.m_decodedTile !== undefined && this.m_decodedTile.tileInfo !== undefined) {\n            aggregatedObjSize.heapSize += this.m_decodedTile.tileInfo.numBytes;\n        }\n\n        this.m_resourceInfo = {\n            heapSize: aggregatedObjSize.heapSize + heapSize,\n            gpuSize: aggregatedObjSize.gpuSize,\n            num3dObjects,\n            numTextElements,\n            numUserTextElements: 0\n        };\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    Expr,\n    getFeatureId,\n    getPropertyValue,\n    IndexedTechnique,\n    MapEnv,\n    Pickability\n} from \"@here/harp-datasource-protocol\";\n\nimport { BackgroundDataSource } from \"./BackgroundDataSource\";\nimport { SolidLineMesh } from \"./geometry/SolidLineMesh\";\nimport { MapObjectAdapter } from \"./MapObjectAdapter\";\nimport { Tile, TileFeatureData, TileObject } from \"./Tile\";\n\nconst DEFAULT_STENCIL_VALUE = 1;\n\n/*\n * Interface to represent the items of three.js render lists.\n */\ninterface RenderItem {\n    groupOrder: number;\n    renderOrder: number;\n    program: { id: number };\n    material: { id: number };\n    z: number;\n    id: number;\n    object: THREE.Object3D;\n}\n\nexport class TileObjectRenderer {\n    private readonly m_renderOrderStencilValues = new Map<number, number>();\n    // Valid values start at 1, because the screen is cleared to zero\n    private m_stencilValue: number = DEFAULT_STENCIL_VALUE;\n\n    constructor(private readonly m_env: MapEnv, private readonly m_renderer: THREE.WebGLRenderer) {}\n\n    render(\n        tile: Tile,\n        storageLevel: number,\n        zoomLevel: number,\n        cameraPosition: THREE.Vector3,\n        rootNode: THREE.Object3D\n    ) {\n        const worldOffsetX = tile.computeWorldOffsetX();\n        if (tile.willRender(storageLevel)) {\n            for (const object of tile.objects) {\n                const mapObjectAdapter = MapObjectAdapter.get(object);\n                if (\n                    !this.processTileObject(tile, storageLevel, zoomLevel, object, mapObjectAdapter)\n                ) {\n                    continue;\n                }\n\n                this.updateStencilRef(object);\n\n                object.position.copy(tile.center);\n                if (object.displacement !== undefined) {\n                    object.position.add(object.displacement);\n                }\n                object.position.x += worldOffsetX;\n                object.position.sub(cameraPosition);\n                if (tile.localTangentSpace) {\n                    object.setRotationFromMatrix(tile.boundingBox.getRotationMatrix());\n                }\n                object.frustumCulled = false;\n\n                rootNode.add(object);\n            }\n            tile.didRender();\n        }\n    }\n\n    prepareRender() {\n        this.m_stencilValue = DEFAULT_STENCIL_VALUE;\n        this.m_renderOrderStencilValues.clear();\n    }\n\n    /**\n     * Prepares the sorting of tile objects.\n     */\n    setupRenderer() {\n        /**\n         * Custom sorting function to avoid non-deterministic IBCT testcases. It's basically a copy\n         * of the three.js internal sorting, see:\n         * https://github.com/mrdoob/three.js/blob/r118/src/renderers/webgl/WebGLRenderLists.js#L5\n         * but additionally checking tile-id before checking object.id, material.id and program.id\n         * b/c these ids are generated by incrementing a counter. This means if for two test\n         * executions the tiles are processed in a different order the ids hence draw call order\n         * will also be different.\n         */\n        const stableSort = (a: RenderItem, b: RenderItem): number => {\n            if (a.groupOrder !== b.groupOrder) {\n                return a.groupOrder - b.groupOrder;\n            } else if (a.renderOrder !== b.renderOrder) {\n                return a.renderOrder - b.renderOrder;\n            } else if (\n                a.object.userData.tileKey &&\n                b.object.userData.tileKey &&\n                a.object.userData.tileKey.mortonCode() !== b.object.userData.tileKey.mortonCode()\n            ) {\n                return (\n                    a.object.userData.tileKey.mortonCode() - b.object.userData.tileKey.mortonCode()\n                );\n            } else if (a.program !== b.program) {\n                return a.program.id - b.program.id;\n            } else if (a.material.id !== b.material.id) {\n                return a.material.id - b.material.id;\n            } else if (a.z !== b.z) {\n                return a.z - b.z;\n            } else {\n                return a.id - b.id;\n            }\n        };\n\n        // Custom sorting function which first sorts by the data source order, then by the level,\n        // then by the function `stableSort` above.\n        const painterSortStable = (a: RenderItem, b: RenderItem): number => {\n            const mapObjectAdapterA = MapObjectAdapter.get(a.object);\n            const mapObjectAdapterB = MapObjectAdapter.get(b.object);\n\n            const dataSourceOrder = mapObjectAdapterA?.dataSource?.dataSourceOrder;\n            const otherDataSourceOrder = mapObjectAdapterB?.dataSource?.dataSourceOrder;\n            if (\n                // We need to check against undefined because if either is 0, it will evaluate false\n                dataSourceOrder !== undefined &&\n                otherDataSourceOrder !== undefined &&\n                dataSourceOrder !== otherDataSourceOrder\n            ) {\n                return dataSourceOrder - otherDataSourceOrder;\n            }\n            // Background data source must be sorted by rendorOrder and not level, otherwise\n            // fallback tiles are useless, because they will be covered by this datasource\n            if (\n                a.renderOrder === BackgroundDataSource.GROUND_RENDER_ORDER ||\n                b.renderOrder === BackgroundDataSource.GROUND_RENDER_ORDER\n            ) {\n                return stableSort(a, b);\n            }\n            if (mapObjectAdapterA?.level !== undefined && mapObjectAdapterB?.level !== undefined) {\n                // Extruded buildings may interfere with landmarks, so we need to sort by\n                // renderOrder, see LandmarkDataSource.computeRenderOrder\n                const eitherIsBuilding =\n                    mapObjectAdapterA.kind?.find(s => s === \"building\") !== undefined ||\n                    mapObjectAdapterB.kind?.find(s => s === \"building\") !== undefined;\n                const sameLevel = mapObjectAdapterA.level === mapObjectAdapterB.level;\n                if (sameLevel || eitherIsBuilding) {\n                    return stableSort(a, b);\n                }\n                return mapObjectAdapterA.level - mapObjectAdapterB.level;\n            }\n            return stableSort(a, b);\n        };\n\n        // Temporary workaround due to incorrect comparator type definition:\n        // https://github.com/three-types/three-ts-types/issues/41\n        this.m_renderer.setOpaqueSort(painterSortStable);\n    }\n\n    private updateStencilRef(object: TileObject) {\n        // TODO: acquire a new style value of if transparent\n        if (object.renderOrder !== undefined && object instanceof SolidLineMesh) {\n            const material = object.material;\n            if (Array.isArray(material)) {\n                material.forEach(\n                    mat => (mat.stencilRef = this.getStencilValue(object.renderOrder))\n                );\n            } else {\n                material.stencilRef = this.getStencilValue(object.renderOrder);\n            }\n        }\n    }\n\n    private allocateStencilValue(renderOrder: number) {\n        const stencilValue = this.m_stencilValue++;\n        this.m_renderOrderStencilValues.set(renderOrder, stencilValue);\n        return stencilValue;\n    }\n\n    private getStencilValue(renderOrder: number) {\n        return (\n            this.m_renderOrderStencilValues.get(renderOrder) ??\n            this.allocateStencilValue(renderOrder)\n        );\n    }\n\n    /**\n     * Process dynamic updates of [[TileObject]]'s style.\n     *\n     * @returns `true` if object shall be used in scene, `false` otherwise\n     */\n    private processTileObject(\n        tile: Tile,\n        storageLevel: number,\n        zoomLevel: number,\n        object: TileObject,\n        mapObjectAdapter?: MapObjectAdapter\n    ) {\n        if (!object.visible) {\n            return false;\n        }\n        if (!this.processTileObjectFeatures(tile, storageLevel, zoomLevel, object)) {\n            return false;\n        }\n\n        if (mapObjectAdapter) {\n            mapObjectAdapter.ensureUpdated(tile.mapView);\n            if (\n                !mapObjectAdapter.isVisible() &&\n                !(mapObjectAdapter.pickability === Pickability.all)\n            ) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Process the features owned by the given `TileObject`.\n     *\n     * @param tile - The {@link Tile} owning the `TileObject`'s features.\n     * @param storageLevel - The storage level of the `Tile` containing the object,\n     * @param zoomLevel - The current zoom level of `MapView`.\n     * @param object - The `TileObject` to process.\n     * @returns `false` if the given `TileObject` should not be added to the scene.\n     */\n    private processTileObjectFeatures(\n        tile: Tile,\n        storageLevel: number,\n        zoomLevel: number,\n        object: TileObject\n    ): boolean {\n        const technique: IndexedTechnique | undefined = object.userData.technique;\n\n        const minZoomLevel = getPropertyValue(technique?.minZoomLevel, this.m_env);\n        const maxZoomLevel = getPropertyValue(technique?.maxZoomLevel, this.m_env);\n\n        if (typeof minZoomLevel === \"number\" && zoomLevel < minZoomLevel) {\n            return false;\n        }\n\n        if (typeof maxZoomLevel === \"number\" && zoomLevel >= maxZoomLevel) {\n            return false;\n        }\n\n        if (technique?.enabled === undefined) {\n            // Nothing to do, there's no technique.\n            return true;\n        }\n\n        const feature: TileFeatureData = object.userData.feature;\n\n        if (!feature || !Expr.isExpr(technique.enabled)) {\n            return Boolean(getPropertyValue(technique.enabled, this.m_env));\n        }\n\n        const { starts, objInfos } = feature;\n\n        if (!Array.isArray(objInfos) || !Array.isArray(starts)) {\n            // Nothing to do, the object is missing feature ids and their position\n            // in the index buffer.\n            return true;\n        }\n\n        const geometry: THREE.BufferGeometry | undefined = (object as any).geometry;\n\n        if (!geometry || !geometry.isBufferGeometry) {\n            // Nothing to do, the geometry is not a [[THREE.BufferGeometry]]\n            // and we can't generate groups.\n            return true;\n        }\n\n        // ExtrudeBufferGeometry for example doesn't have an index, hence we get the final index\n        // from the number of vertices.\n        const finalIndex = geometry.getIndex()?.count ?? geometry.attributes.position.count;\n\n        // clear the groups.\n        geometry.clearGroups();\n\n        // The offset in the index buffer of the end of the last\n        // pushed group.\n        let endOfLastGroup: number | undefined;\n\n        objInfos.forEach((properties, featureIndex) => {\n            // the id of the current feature.\n            const featureId = getFeatureId(properties);\n\n            let enabled = true;\n\n            if (Expr.isExpr(technique.enabled)) {\n                // the state of current feature.\n                const featureState = tile.dataSource.getFeatureState(featureId);\n\n                // create a new {@link @here/harp-datasource-protocol#Env} that can be used\n                // to evaluate expressions that access the feature state.\n                const $state = featureState ? new MapEnv(featureState) : null;\n\n                const parentEnv =\n                    typeof properties === \"object\"\n                        ? new MapEnv(properties, this.m_env)\n                        : this.m_env;\n\n                const env = new MapEnv({ $state }, parentEnv);\n\n                enabled = Boolean(getPropertyValue(technique.enabled, env));\n            }\n\n            if (!enabled) {\n                // skip this feature, it was disabled.\n                return;\n            }\n\n            // HARP-12247, geometry with no featureStarts would set start to `undefined`, in this\n            // case, `endOfLastGroup` is also undefined (first execution in this loop), so it would\n            // try to change the count of a group which hasn't yet been added, `addGroup` wasn't yet\n            // called, hence we use the `??` operator and fall back to 0. Because featureStarts are\n            // optional, we need to have a fallback.\n            const start = starts[featureIndex] ?? 0;\n            const end = starts[featureIndex + 1] ?? finalIndex;\n            const count = end - start;\n\n            if (start === endOfLastGroup) {\n                // extend the last group\n                geometry.groups[geometry.groups.length - 1].count += count;\n            } else {\n                geometry.addGroup(start, count);\n            }\n\n            endOfLastGroup = start + count;\n        });\n\n        return geometry.groups.length > 0;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    GeoBox,\n    GeoCoordinates,\n    GeoCoordinatesLike,\n    MathUtils,\n    OrientedBox3,\n    Projection,\n    ProjectionType,\n    sphereProjection,\n    TileKeyUtils,\n    Vector2Like,\n    Vector3Like\n} from \"@here/harp-geoutils\";\nimport { GeoCoordLike } from \"@here/harp-geoutils/lib/coordinates/GeoCoordLike\";\nimport { EarthConstants } from \"@here/harp-geoutils/lib/projection/EarthConstants\";\nimport { assert, DOMUtils, LoggerManager } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { CameraUtils } from \"./CameraUtils\";\nimport { ElevationProvider } from \"./ElevationProvider\";\nimport { Object3DUtils } from \"./geometry/Object3DUtils\";\nimport { MapView } from \"./MapView\";\n\nconst logger = LoggerManager.instance.create(\"MapViewUtils\");\n\n/**\n * Zoom level to request terrain tiles for getting the height of the camera above terrain.\n */\nconst TERRAIN_ZOOM_LEVEL = 4;\n\n// Caching those for performance reasons.\nconst groundNormalPlanarProj = new THREE.Vector3(0, 0, 1);\nconst groundPlane = new THREE.Plane(groundNormalPlanarProj.clone());\nconst groundSphere = new THREE.Sphere(undefined, EarthConstants.EQUATORIAL_RADIUS);\nconst rayCaster = new THREE.Raycaster();\nconst epsilon = 1e-5;\n\n/**\n * Cached ThreeJS instances for realtime maths.\n */\nconst space = {\n    x: new THREE.Vector3(),\n    y: new THREE.Vector3(),\n    z: new THREE.Vector3()\n};\nconst tangentSpace = {\n    x: new THREE.Vector3(),\n    y: new THREE.Vector3(),\n    z: new THREE.Vector3()\n};\nconst cache = {\n    box3: [new THREE.Box3()],\n    obox3: [new OrientedBox3()],\n    quaternions: [new THREE.Quaternion(), new THREE.Quaternion()],\n    vector2: [new THREE.Vector2(), new THREE.Vector2()],\n    vector3: [new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()],\n    matrix4: [new THREE.Matrix4(), new THREE.Matrix4()],\n    transforms: [\n        {\n            xAxis: new THREE.Vector3(),\n            yAxis: new THREE.Vector3(),\n            zAxis: new THREE.Vector3(),\n            position: new THREE.Vector3()\n        }\n    ]\n};\n\nconst tmpCamera = new THREE.PerspectiveCamera();\n\n/**\n * Rounds a given zoom level up to the nearest integer value if it's close enough.\n *\n * The zoom level set in {@link MapView} after a zoom level\n * target is given to {@link (MapView.lookAt:WITH_PARAMS)} or\n * {@link @here/harp-map-controls#MapControls} never matches\n * exactly the target due to the precision loss caused by the\n * conversion from zoom level to camera distance (done in\n * {@link (MapView.lookAt:WITH_PARAMS)} and {@link @here/harp-map-controls#MapControls})\n * and from distance back to zoom level (done at every frame on camera update).\n * As a result, given a fixed integer zoom level input, the final zoom level computed at every frame\n * may fall sometimes below the integer value and others above. This causes flickering since each\n * frame will use different tile levels and different style evaluations for object visibility.\n * See HARP-9673 and HARP-8523.\n * @param zoomLevel - Input zoom level\n * @return The ceiling zoom level if input zoom level is close enough, otherwise the unmodified\n * input zoom level.\n */\nfunction snapToCeilingZoomLevel(zoomLevel: number) {\n    const eps = 1e-6;\n    const ceiling = Math.ceil(zoomLevel);\n    return ceiling - zoomLevel < eps ? ceiling : zoomLevel;\n}\n\n/**\n * MapView utilities: View transformations, camera setup, view bounds computation...\n */\nexport namespace MapViewUtils {\n    export const MAX_TILT_DEG = 89;\n    export const MAX_TILT_RAD = MAX_TILT_DEG * THREE.MathUtils.DEG2RAD;\n\n    /**\n     * The anti clockwise rotation of an object along the axes of its tangent space, with itself\n     * as origin.\n     */\n    export interface Attitude {\n        /**\n         * Rotation of the object along its vertical axis.\n         */\n        yaw: number;\n\n        /**\n         * Rotation of the object along its horizontal axis.\n         */\n        pitch: number;\n\n        /**\n         * Rotation of the object along its forward axis.\n         */\n        roll: number;\n    }\n\n    /**\n     * @deprecated\n     */\n    export interface MemoryUsage extends Object3DUtils.MemoryUsage {}\n\n    /**\n     * Zooms and moves the map in such a way that the given target position remains at the same\n     * position after the zoom.\n     *\n     * @param mapView - Instance of MapView.\n     * @param targetNDCx - Target x position in NDC space.\n     * @param targetNDCy - Target y position in NDC space.\n     * @param zoomLevel - The desired zoom level.\n     * @param maxTiltAngle - The maximum tilt angle to comply by, in globe projection, in radian.\n     * @returns `false` if requested zoom cannot be achieved due to the map view's maximum bounds\n     * {@link MapView.geoMaxBounds},`true` otherwise.\n     */\n    export function zoomOnTargetPosition(\n        mapView: MapView,\n        targetNDCx: number,\n        targetNDCy: number,\n        zoomLevel: number,\n        maxTiltAngle: number = MAX_TILT_RAD\n    ): boolean {\n        const { elevationProvider, camera, projection } = mapView;\n\n        // Use for now elevation at camera position. See getTargetAndDistance.\n        const elevation = elevationProvider\n            ? elevationProvider.getHeight(\n                  projection.unprojectPoint(camera.position),\n                  TERRAIN_ZOOM_LEVEL\n              )\n            : undefined;\n\n        // Get current target position in world space before we zoom.\n        const zoomTarget = rayCastWorldCoordinates(mapView, targetNDCx, targetNDCy, elevation);\n\n        // Compute current camera target, it may not be the one set in MapView, e.g. when this\n        // function is called multiple times between frames.\n        const cameraTarget = MapViewUtils.getTargetAndDistance(\n            projection,\n            camera,\n            elevationProvider\n        ).target;\n        const newCameraDistance = calculateDistanceFromZoomLevel(mapView, zoomLevel);\n\n        if (mapView.geoMaxBounds) {\n            // If map view has maximum bounds set, constrain camera target and distance to ensure\n            // they remain within bounds.\n            const constrained = constrainTargetAndDistanceToViewBounds(\n                cameraTarget,\n                newCameraDistance,\n                mapView\n            );\n            if (constrained.distance !== newCameraDistance) {\n                // Only indicate failure when zooming out. This avoids zoom in cancellations when\n                // camera is already at the maximum distance allowed by the view bounds.\n                return zoomLevel >= mapView.zoomLevel;\n            }\n        }\n        // Set the camera distance according to the given zoom level.\n        camera\n            .getWorldDirection(camera.position)\n            .multiplyScalar(-newCameraDistance)\n            .add(cameraTarget);\n\n        // In sphere, we may have to also orbit the camera around the target, in order to limit the\n        // the tilt to `maxTiltAngle`, as we change this tilt by changing the camera's height above.\n        if (projection.type === ProjectionType.Spherical) {\n            // FIXME: We cannot use mapView.tilt here b/c it does not reflect the latest camera\n            // changes.\n            const tilt = extractCameraTilt(camera, projection);\n            const deltaTilt = tilt - maxTiltAngle;\n            if (deltaTilt > 0) {\n                orbitAroundScreenPoint(mapView, { deltaTilt, maxTiltAngle });\n            }\n        }\n\n        // Get new target position after the zoom\n        const newZoomTarget = rayCastWorldCoordinates(mapView, targetNDCx, targetNDCy, elevation);\n        if (!zoomTarget || !newZoomTarget) {\n            return true;\n        }\n\n        if (projection.type === ProjectionType.Planar) {\n            // Calculate the difference and pan the map to maintain the map relative to the target\n            // position.\n            zoomTarget.sub(newZoomTarget);\n            panCameraAboveFlatMap(mapView, zoomTarget.x, zoomTarget.y);\n        } else if (projection.type === ProjectionType.Spherical) {\n            panCameraAroundGlobe(mapView, zoomTarget, newZoomTarget);\n        }\n        return true;\n    }\n\n    /**\n     * Parameters for {@link orbitAroundScreenPoint}.\n     */\n    export interface OrbitParams {\n        /**\n         * Delta azimuth in radians (default 0).\n         */\n        deltaAzimuth?: number;\n        /**\n         * Delta tilt in radians (default 0);\n         */\n        deltaTilt?: number;\n        /**\n         * Maximum tilt between the camera and its target in radians.\n         */\n        maxTiltAngle: number;\n        /**\n         * Orbiting center in NDC coordinates, defaults to camera's principal point.\n         * @see {@link CameraUtils.getPrincipalPoint}.\n         */\n        center?: Vector2Like;\n    }\n\n    /**\n     * Orbits the camera around a given point on the screen.\n     *\n     * @param mapView - The {@link MapView} instance to manipulate.\n     * @param offsetX - Orbit point in NDC space.\n     * @param offsetY - Orbit point in NDC space.\n     * @param deltaAzimuth - Delta azimuth in radians.\n     * @param deltaTilt - Delta tilt in radians.\n     * @param maxTiltAngle - The maximum tilt between the camera and its target in radian.\n     * @deprecated Use overload with {@link OrbitParams} object parameter.\n     */\n    export function orbitAroundScreenPoint(\n        mapView: MapView,\n        offsetX: number,\n        offsetY: number,\n        deltaAzimuth: number,\n        deltaTilt: number,\n        maxTiltAngle: number\n    ): void;\n\n    /**\n     * Orbits the camera around a given point on the screen.\n     *\n     * @param mapView - The {@link MapView} instance to manipulate.\n     * @param orbitParams - {@link OrbitParams}.\n     */\n    export function orbitAroundScreenPoint(mapView: MapView, orbitParams: OrbitParams): void;\n\n    export function orbitAroundScreenPoint(\n        mapView: MapView,\n        offsetXOrOrbitParams: number | OrbitParams,\n        offsetY?: number,\n        deltaAzimuth?: number,\n        deltaTilt?: number,\n        maxTiltAngle?: number\n    ): void {\n        const ppalPoint = CameraUtils.getPrincipalPoint(mapView.camera, cache.vector2[0]);\n        const mapTargetWorld = MapViewUtils.rayCastWorldCoordinates(\n            mapView,\n            ppalPoint.x,\n            ppalPoint.y\n        );\n        if (mapTargetWorld === null) {\n            return;\n        }\n\n        let orbitCenter: Vector2Like | undefined;\n        if (typeof offsetXOrOrbitParams === \"number\") {\n            orbitCenter = cache.vector2[1].set(offsetXOrOrbitParams, offsetY!);\n        } else {\n            const params = offsetXOrOrbitParams;\n            orbitCenter = params.center ?? ppalPoint;\n            deltaAzimuth = params.deltaAzimuth ?? 0;\n            deltaTilt = params.deltaTilt ?? 0;\n            maxTiltAngle = params.maxTiltAngle;\n        }\n        const orbitAroundPpalPoint = orbitCenter.x === ppalPoint.x && orbitCenter.y === ppalPoint.y;\n        const rotationTargetWorld = orbitAroundPpalPoint\n            ? mapTargetWorld\n            : MapViewUtils.rayCastWorldCoordinates(mapView, orbitCenter.x, orbitCenter.y);\n        if (rotationTargetWorld === null) {\n            return;\n        }\n\n        applyAzimuthAroundTarget(mapView, rotationTargetWorld, -deltaAzimuth!);\n\n        const tiltAxis = new THREE.Vector3(1, 0, 0).applyQuaternion(mapView.camera.quaternion);\n        const clampedDeltaTilt = computeClampedDeltaTilt(\n            mapView,\n            orbitCenter.y - ppalPoint.y,\n            deltaTilt!,\n            maxTiltAngle!,\n            mapTargetWorld,\n            rotationTargetWorld,\n            tiltAxis\n        );\n\n        applyTiltAroundTarget(mapView, rotationTargetWorld, clampedDeltaTilt, tiltAxis);\n    }\n\n    /**\n     * @hidden\n     * @internal\n     *\n     * Applies the given Azimith to the camera around the supplied target.\n     */\n    function applyAzimuthAroundTarget(\n        mapView: MapView,\n        rotationTargetWorld: THREE.Vector3,\n        deltaAzimuth: number\n    ) {\n        const camera = mapView.camera;\n        const projection = mapView.projection;\n\n        const headingAxis = projection.surfaceNormal(rotationTargetWorld, cache.vector3[0]);\n        const headingQuat = cache.quaternions[0].setFromAxisAngle(headingAxis, deltaAzimuth);\n        camera.quaternion.premultiply(headingQuat);\n        camera.position.sub(rotationTargetWorld);\n        camera.position.applyQuaternion(headingQuat);\n        camera.position.add(rotationTargetWorld);\n    }\n\n    /**\n     * @hidden\n     * @internal\n     *\n     * Clamps the supplied `deltaTilt` to the `maxTiltAngle` supplied. Note, when a non-zero offset\n     * is applied, we apply another max angle of 89 degrees to the rotation center to prevent some\n     * corner cases where the angle at the rotation center is 90 degrees and therefore intersects\n     * the geometry with the near plane.\n     */\n    function computeClampedDeltaTilt(\n        mapView: MapView,\n        offsetY: number,\n        deltaTilt: number,\n        maxTiltAngle: number,\n        mapTargetWorld: THREE.Vector3,\n        rotationTargetWorld: THREE.Vector3,\n        tiltAxis: THREE.Vector3\n    ): number {\n        const camera = mapView.camera;\n        const projection = mapView.projection;\n\n        const tilt = extractTiltAngleFromLocation(projection, camera, mapTargetWorld, tiltAxis);\n        if (tilt + deltaTilt < 0) {\n            // Clamp the final tilt to 0\n            return -tilt;\n        } else if (deltaTilt <= 0) {\n            // Reducing the tilt isn't clamped (apart from above).\n            return deltaTilt;\n        } else if (mapTargetWorld.equals(rotationTargetWorld) || offsetY < 0) {\n            // When the rotation target is the center, or the offsetY is < 0, i.e. the angle at the\n            // `mapTargetWorld` is always bigger, then we have a simple formula\n            return MathUtils.clamp(deltaTilt + tilt, 0, maxTiltAngle) - tilt;\n        }\n\n        const rotationCenterTilt = extractTiltAngleFromLocation(\n            projection,\n            camera,\n            rotationTargetWorld!,\n            tiltAxis\n        );\n\n        const maxRotationTiltAngle = THREE.MathUtils.degToRad(89);\n\n        // The rotationCenterTilt may exceed 89 degrees when for example the user has tilted to 89\n        // at the mapTargetWorld, then choose a rotation center target above the mapTargetWorld,\n        // i.e. offsetY > 0. In such case, we just return 0, i.e. we don't let the user increase\n        // the tilt (but it can decrease, see check above for \"deltaTilt <= 0\").\n        if (rotationCenterTilt > maxRotationTiltAngle) {\n            return 0;\n        }\n\n        // This is used to find the max tilt angle, because the difference in normals is needed\n        // to correct the triangle used to find the max tilt angle at the rotation center.\n        let angleBetweenNormals = 0;\n        if (projection === sphereProjection) {\n            const projectedRotationTargetNormal = projection\n                .surfaceNormal(rotationTargetWorld, cache.vector3[0])\n                .projectOnPlane(tiltAxis)\n                .normalize();\n            const mapTargetNormal = projection.surfaceNormal(mapTargetWorld, cache.vector3[1]);\n            angleBetweenNormals = projectedRotationTargetNormal.angleTo(mapTargetNormal);\n        }\n\n        const ninetyRad = THREE.MathUtils.degToRad(90);\n\n        // The following terminology will be used:\n        // Ta = Tilt axis, tilting is achieved by rotating the camera around this direction.\n        // R = rotation target, i.e. the point about which we are rotating: `rotationTargetWorld`\n        // Rp = rotation target projected on to Ta\n        // C = camera position\n        // M = map target, i.e. the point which the camera is looking at at the NDC coordinates 0,0\n\n        // Note, the points Rp, C, and M create a plane that is perpendicular to the earths surface,\n        // because the tilt axis is perpendicular to the up vector. The following variable `RpCM` is\n        // the angle between the two rays C->Rp and C->M. This angle remains constant when tilting\n        // with a fixed `offsetX` and `offsetY`. It is calculated by using the intersection of the\n        // two rays with the earth.\n\n        // Note the use of `angleBetweenNormals` to ensure this works for spherical projections.\n        // Note, this calculation only works when the tilt at M is less than the tilt\n        // at Rp, otherwise the above formula won't work. We however don't need to worry about this\n        // case because this happens only when offsetY is less than zero, and this is handled above.\n        const MRpC = ninetyRad + angleBetweenNormals - rotationCenterTilt;\n        const CMRp = ninetyRad + tilt;\n        const RpCM = ninetyRad * 2 - (MRpC + CMRp);\n\n        // We want to find the greatest angle at the rotation target that gives us the max\n        // angle at the map center target.\n        const CMRpMaxTilt = ninetyRad * 2 - RpCM - ninetyRad - maxTiltAngle;\n\n        // Converting the `MRpC` back to a tilt is as easy as subtracting it from 90 and the\n        // `angleBetweenNormals`, i.e. this gives us the maximum allowed tilt at R that satisfies\n        // the `maxTiltAngle` constraint. Note, for globe projection, this is just an approximation,\n        // because once we move the camera by delta, the map target changes, and therefore the\n        // normal also changes, this would need to be applied iteratively until the difference in\n        // normals is reduced to some epsilon. I don't apply this because it is computationally\n        // expensive and the user would never notice this in practice.\n        const maxTilt = ninetyRad + angleBetweenNormals - CMRpMaxTilt;\n\n        // Here we clamp to the min of `maxTilt` and 89 degrees. The check for 89 is to prevent it\n        // intersecting with the world at 90. This is possible for example when the R position is\n        // near the horizon. If the angle RCM is say 5 degrees, then an angle of say 89 degrees at\n        // R, plus 5 degrees means the tilt at M would be 84 degrees, so the camera can reach 90\n        // from the point R whilst the tilt to M never reaches the `maxTiltAngle`\n        const clampedDeltaTilt =\n            MathUtils.clamp(\n                deltaTilt + rotationCenterTilt,\n                0,\n                Math.min(maxTilt, maxRotationTiltAngle)\n            ) - rotationCenterTilt;\n\n        return clampedDeltaTilt;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     *\n     * Applies the given tilt to the camera around the supplied target.\n     */\n    function applyTiltAroundTarget(\n        mapView: MapView,\n        rotationTargetWorld: THREE.Vector3,\n        deltaTilt: number,\n        tiltAxis: THREE.Vector3\n    ) {\n        const camera = mapView.camera;\n        // Consider to use the cache if necessary, but beware, because the `rayCastWorldCoordinates`\n        // also uses this cache.\n        const posBackup = camera.position.clone();\n        const quatBackup = camera.quaternion.clone();\n\n        const tiltQuat = cache.quaternions[0].setFromAxisAngle(tiltAxis, deltaTilt);\n        camera.quaternion.premultiply(tiltQuat);\n        camera.position.sub(rotationTargetWorld);\n        camera.position.applyQuaternion(tiltQuat);\n        camera.position.add(rotationTargetWorld);\n\n        if (MapViewUtils.rayCastWorldCoordinates(mapView, 0, 0) === null) {\n            logger.warn(\"Target got invalidated during rotation.\");\n            camera.position.copy(posBackup);\n            camera.quaternion.copy(quatBackup);\n        }\n    }\n\n    /**\n     * Calculate target (focus) point geo-coordinates for given camera.\n     * @see getTargetPositionFromCamera\n     *\n     * @param camera - The camera looking on target point.\n     * @param projection - The geo-projection used.\n     * @param elevation - Optional elevation above (or below) sea level measured in world units.\n     *\n     * @deprecated This function is for internal use only and will be removed in the future. Use\n     * MapView.worldTarget instead.\n     */\n    export function getGeoTargetFromCamera(\n        camera: THREE.Camera,\n        projection: Projection,\n        elevation?: number\n    ): GeoCoordinates | null {\n        // This function does almost the same as:\n        // rayCastGeoCoordinates(mapView, 0, 0)\n        // but in more gentle and performance wise manner\n        const targetWorldPos = getWorldTargetFromCamera(camera, projection, elevation);\n        if (targetWorldPos !== null) {\n            return projection.unprojectPoint(targetWorldPos);\n        }\n        return null;\n    }\n\n    /**\n     * Calculate target (focus) point world coordinates for given camera position and orientation.\n     * @param camera - The camera looking on target point.\n     * @param projection - The geo-projection used.\n     * @param elevation - Optional elevation above (or below) sea level in world units.\n     *\n     * @deprecated This function is for internal use only and will be removed in the future.\n     */\n    export function getWorldTargetFromCamera(\n        camera: THREE.Camera,\n        projection: Projection,\n        elevation?: number\n    ): THREE.Vector3 | null {\n        const cameraPos = cache.vector3[0].copy(camera.position);\n        const cameraLookAt = camera.getWorldDirection(cache.vector3[1]);\n        rayCaster.set(cameraPos, cameraLookAt);\n        if (elevation !== undefined) {\n            groundPlane.constant -= elevation;\n            groundSphere.radius += elevation;\n        }\n        const targetWorldPos = new THREE.Vector3();\n        const result =\n            projection.type === ProjectionType.Planar\n                ? rayCaster.ray.intersectPlane(groundPlane, targetWorldPos)\n                : rayCaster.ray.intersectSphere(groundSphere, targetWorldPos);\n        if (elevation !== undefined) {\n            groundPlane.constant = 0;\n            groundSphere.radius = EarthConstants.EQUATORIAL_RADIUS;\n        }\n        return result;\n    }\n\n    /**\n     * Constrains given camera target and distance to {@link MapView.maxBounds}.\n     *\n     * @remarks\n     * The resulting\n     * target and distance will keep the view within the maximum bounds for a camera with tilt and\n     * yaw set to 0.\n     * @param target - The camera target.\n     * @param distance - The camera distance.\n     * @param mapView - The map view whose maximum bounds will be used as constraints.\n     * @returns constrained target and distance, or the unchanged input arguments if the view\n     * does not have maximum bounds set.\n     */\n    export function constrainTargetAndDistanceToViewBounds(\n        target: THREE.Vector3,\n        distance: number,\n        mapView: MapView\n    ): { target: THREE.Vector3; distance: number } {\n        const unconstrained = { target, distance };\n        const worldMaxBounds = mapView.worldMaxBounds;\n        const camera = mapView.camera;\n        const projection = mapView.projection;\n\n        if (!worldMaxBounds) {\n            return unconstrained;\n        }\n\n        /**\n         * Constraints are checked similarly for planar and sphere. The extents of a top down view\n         * (even if camera isn't top down) using the given camera distance are compared with those\n         * of the maximum bounds to compute a scale. There are two options:\n         * a) scale > 1. The view covers a larger area than the maximum bounds. The distance is\n         * is reduced to match the bounds extents and the target is set at the bounds center.\n         * b) scale <= 1. The view may fit within the bounds without changing the distance, only the\n         * target is moved to fit the whole view within the bounds.\n         **/\n\n        const boundsSize = worldMaxBounds.getSize(cache.vector3[1]);\n        const screenSize = mapView.renderer.getSize(cache.vector2[0]);\n        const viewHeight = CameraUtils.convertScreenToWorldSize(\n            mapView.focalLength,\n            unconstrained.distance,\n            screenSize.height\n        );\n        const viewWidth = viewHeight * camera.aspect;\n        const scale = Math.max(viewWidth / boundsSize.x, viewHeight / boundsSize.y);\n        const viewHalfSize = new THREE.Vector3(viewWidth / 2, viewHeight / 2, 0);\n\n        const constrained = {\n            target: unconstrained.target.clone(),\n            distance: unconstrained.distance\n        };\n\n        if (projection.type === ProjectionType.Planar) {\n            if (scale > 1) {\n                constrained.distance /= scale;\n                camera\n                    .getWorldDirection(camera.position)\n                    .multiplyScalar(-constrained.distance)\n                    .add(worldMaxBounds.getCenter(constrained.target));\n            } else {\n                const targetBounds = cache.box3[0]\n                    .copy(worldMaxBounds as THREE.Box3)\n                    .expandByVector(viewHalfSize.multiplyScalar(-1));\n                targetBounds\n                    .clampPoint(unconstrained.target, constrained.target)\n                    .setZ(unconstrained.target.z);\n                if (constrained.target.equals(unconstrained.target)) {\n                    return unconstrained;\n                }\n\n                camera.position.x += constrained.target.x - unconstrained.target.x;\n                camera.position.y += constrained.target.y - unconstrained.target.y;\n            }\n            return constrained;\n        }\n\n        // Spherical projection\n        if (scale > 1) {\n            // Set target to center of max bounds but keeping same height as unconstrained target.\n            worldMaxBounds.getCenter(constrained.target);\n            constrained.target.setLength(unconstrained.target.length());\n            constrained.distance /= scale;\n        } else {\n            // Compute the bounds where the target must be to ensure a top down view remains within\n            // the maximum bounds.\n            const targetMaxBounds = cache.obox3[0];\n            targetMaxBounds.copy(worldMaxBounds as OrientedBox3);\n            targetMaxBounds.position.setLength(unconstrained.target.length());\n            targetMaxBounds.extents.sub(viewHalfSize);\n\n            // Project unconstrained target to local tangent plane at the max bounds center.\n            const rotMatrix = targetMaxBounds.getRotationMatrix(cache.matrix4[0]);\n            const localTarget = cache.vector3[1]\n                .copy(constrained.target)\n                .sub(targetMaxBounds.position)\n                .applyMatrix4(cache.matrix4[1].copy(rotMatrix).transpose())\n                .setZ(0);\n\n            // Clamp the projected target with the target bounds and check if it changes.\n            const constrainedLocalTarget = cache.vector3[2]\n                .copy(localTarget)\n                .clamp(\n                    cache.vector3[3].copy(targetMaxBounds.extents).multiplyScalar(-1),\n                    targetMaxBounds.extents\n                );\n            if (constrainedLocalTarget.equals(localTarget)) {\n                return unconstrained;\n            }\n\n            // Project the local constrained target back into the sphere.\n            constrained.target\n                .copy(constrainedLocalTarget)\n                .applyMatrix4(rotMatrix)\n                .add(targetMaxBounds.position);\n            const targetHeightSq = targetMaxBounds.position.lengthSq();\n            const constTargetDistSq = constrained.target.distanceToSquared(\n                targetMaxBounds.position\n            );\n            const constTargetDistToGround =\n                Math.sqrt(targetHeightSq) - Math.sqrt(targetHeightSq - constTargetDistSq);\n            constrained.target.addScaledVector(targetMaxBounds.zAxis, -constTargetDistToGround);\n\n            // Set the constrained target to the same height as the unconstrained one.\n            constrained.target.setLength(unconstrained.target.length());\n        }\n\n        // Pan camera to constrained target and set constrained distance.\n        MapViewUtils.panCameraAroundGlobe(\n            mapView,\n            cache.vector3[1].copy(constrained.target),\n            cache.vector3[2].copy(unconstrained.target)\n        );\n        camera\n            .getWorldDirection(camera.position)\n            .multiplyScalar(-constrained.distance)\n            .add(constrained.target);\n        return constrained;\n    }\n    /**\n     * @internal\n     * Computes the target for a given camera and the distance between them.\n     * @param projection - The world space projection.\n     * @param camera - The camera whose target will be computed.\n     * @param elevationProvider - If provided, elevation at the camera position will be used.\n     * @returns The target, the distance to it and a boolean flag set to false in case an elevation\n     * provider was passed but the elevation was not available yet.\n     */\n    export function getTargetAndDistance(\n        projection: Projection,\n        camera: THREE.Camera,\n        elevationProvider?: ElevationProvider\n    ): { target: THREE.Vector3; distance: number; final: boolean } {\n        const cameraPitch = extractAttitude({ projection }, camera).pitch;\n\n        //FIXME: For now we keep the old behaviour when terrain is enabled (i.e. use the camera\n        //       height above terrain to deduce the target distance).\n        //       This leads to zoomlevel changes while panning. We have to find a proper solution\n        //       for terrain (e.g. raycast with the ground surfcae that is elevated by the average\n        //       elevation in the scene)\n        const elevation = elevationProvider\n            ? elevationProvider.getHeight(\n                  projection.unprojectPoint(camera.position),\n                  TERRAIN_ZOOM_LEVEL\n              )\n            : undefined;\n        const final = !elevationProvider || elevation !== undefined;\n\n        // Even for a tilt of 90° raycastTargetFromCamera is returning some point almost at\n        // infinity.\n        const target =\n            cameraPitch < MAX_TILT_RAD\n                ? getWorldTargetFromCamera(camera, projection, elevation)\n                : null;\n        if (target !== null) {\n            const distance = camera.position.distanceTo(target);\n            return { target, distance, final };\n        } else {\n            // We either reached the [[PITCH_LIMIT]] or we did not hit the ground surface.\n            // In this case we do the reverse, i.e. compute some fallback distance and\n            // use it to compute the tagret point by using the camera direction.\n            const groundDistance = projection.groundDistance(camera.position);\n            const heightAboveTerrain = Math.max(groundDistance - (elevation ?? 0), 0);\n\n            //For flat projection we fallback to the target distance at 89 degree pitch.\n            //For spherical projection we fallback to the tangent line distance\n            const distance =\n                projection.type === ProjectionType.Planar\n                    ? heightAboveTerrain / Math.cos(Math.min(cameraPitch, MAX_TILT_RAD))\n                    : Math.sqrt(\n                          Math.pow(heightAboveTerrain + EarthConstants.EQUATORIAL_RADIUS, 2) -\n                              Math.pow(EarthConstants.EQUATORIAL_RADIUS, 2)\n                      );\n            const cameraDir = camera.getWorldDirection(cache.vector3[0]);\n            cameraDir.multiplyScalar(distance);\n            const fallbackTarget = cache.vector3[1];\n            fallbackTarget.copy(camera.position).add(cameraDir);\n            return { target: fallbackTarget, distance, final };\n        }\n    }\n\n    /**\n     * Returns the {@link @here/harp-geoutils#GeoCoordinates} of the camera,\n     * given its target coordinates on the map and its\n     * zoom, yaw and pitch.\n     *\n     * @param targetCoordinates - Coordinates of the center of the view.\n     * @param distance - Distance to the target in meters.\n     * @param yawDeg - Camera yaw in degrees.\n     * @param pitchDeg - Camera pitch in degrees.\n     * @param projection - Active MapView, needed to get the camera fov and map projection.\n     * @param result - Optional output vector.\n     * @returns Camera position in world space.\n     */\n    export function getCameraPositionFromTargetCoordinates(\n        targetCoordinates: GeoCoordinates,\n        distance: number,\n        yawDeg: number,\n        pitchDeg: number,\n        projection: Projection,\n        result: THREE.Vector3 = new THREE.Vector3()\n    ): THREE.Vector3 {\n        const pitchRad = THREE.MathUtils.degToRad(pitchDeg);\n        const altitude = Math.cos(pitchRad) * distance;\n        const yawRad = THREE.MathUtils.degToRad(yawDeg);\n        projection.projectPoint(targetCoordinates, result);\n        const groundDistance = distance * Math.sin(pitchRad);\n        if (projection.type === ProjectionType.Planar) {\n            result.x = result.x + Math.sin(yawRad) * groundDistance;\n            result.y = result.y - Math.cos(yawRad) * groundDistance;\n            result.z = result.z + altitude;\n        } else if (projection.type === ProjectionType.Spherical) {\n            // In globe yaw and pitch are understood to be in tangent space. The approach below is\n            // to find the Z and Y tangent space axes, then rotate Y around Z by the given yaw, and\n            // set its new length (groundDistance). Finally the up vector's length is set to the\n            // camera height and added to the transformed Y above.\n\n            // Get the Z axis in tangent space: it is the normalized position vector of the target.\n            tangentSpace.z.copy(result).normalize();\n\n            // Get the Y axis (north axis in tangent space):\n            tangentSpace.y.set(0, 0, 1).projectOnPlane(tangentSpace.z).normalize();\n\n            // Rotate this north axis by the given yaw, giving the camera direction relative to\n            // the target.\n            cache.quaternions[0].setFromAxisAngle(tangentSpace.z, yawRad - Math.PI);\n            tangentSpace.y.applyQuaternion(cache.quaternions[0]);\n\n            // Push the camera to the specified distance.\n            tangentSpace.y.setLength(groundDistance);\n\n            // Now get the actual camera position vector: from the target position, add the\n            // previous computation to get the projection of the camera on the ground, then add\n            // the height of the camera in the tangent space.\n            const height = distance * Math.cos(pitchRad);\n            result.add(tangentSpace.y).add(tangentSpace.z.setLength(height));\n\n            const a = EarthConstants.EQUATORIAL_RADIUS + altitude;\n            const b = Math.sin(pitchRad) * distance;\n            const cameraHeight = Math.sqrt(a * a + b * b);\n            result.setLength(cameraHeight);\n        }\n\n        return result;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     *\n     * Add offset to geo points for minimal view box in flat projection with tile wrapping.\n     *\n     * @remarks\n     * In flat projection, with wrap around enabled, we should detect clusters of points around that\n     * wrap antimeridian.\n     *\n     * Here, we fit points into minimal geo box taking world wrapping into account.\n     */\n    export function wrapGeoPointsToScreen(\n        points: GeoCoordLike[],\n        startPosition?: GeoCoordinates\n    ): GeoCoordinates[] {\n        let startIndex = 0;\n        if (startPosition === undefined) {\n            startPosition = GeoCoordinates.fromObject(points[0]);\n            startIndex = 1;\n        }\n        let north = startPosition.latitude;\n        let south = startPosition.latitude;\n        let lonCenter = MathUtils.normalizeLongitudeDeg(startPosition.longitude);\n        let lonSpan = 0;\n        let east = startPosition.longitude;\n        let west = startPosition.longitude;\n\n        const result: GeoCoordinates[] = [];\n        result.push(new GeoCoordinates(north, lonCenter));\n        for (let i = startIndex; i < points.length; i++) {\n            const p = GeoCoordinates.fromObject(points[i]);\n            if (p.latitude > north) {\n                north = p.latitude;\n            } else if (p.latitude < south) {\n                south = p.latitude;\n            }\n\n            let longitude = MathUtils.normalizeLongitudeDeg(p.longitude);\n\n            const relToCenter = MathUtils.angleDistanceDeg(lonCenter, longitude);\n            longitude = lonCenter - relToCenter;\n            if (relToCenter < 0 && -relToCenter > lonSpan / 2) {\n                east = Math.max(east, lonCenter - relToCenter);\n                lonSpan = east - west;\n                lonCenter = (east + west) / 2;\n            } else if (relToCenter > 0 && relToCenter > lonSpan / 2) {\n                west = Math.min(west, longitude);\n                lonSpan = east - west;\n                lonCenter = (east + west) / 2;\n            }\n            result.push(new GeoCoordinates(p.latitude, longitude));\n        }\n        return result;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     *\n     * Given `cameraPos`, force all points that lie on non-visible sphere half to be \"near\" max\n     * possible viewable circle from given camera position.\n     *\n     * @remarks\n     * Assumes that shpere projection with world center is in `(0, 0, 0)`.\n     */\n    export function wrapWorldPointsToView(points: THREE.Vector3[], cameraPos: THREE.Vector3) {\n        const cameraPosNormalized = cameraPos.clone().normalize();\n        for (const point of points) {\n            if (point.angleTo(cameraPos) > Math.PI / 2) {\n                // Point is on other side of sphere, we \"clamp it to\" max possible viewable circle\n                // from given camera position\n\n                const pointLen = point.length();\n\n                point.projectOnPlane(cameraPosNormalized).setLength(pointLen);\n            }\n        }\n    }\n\n    /**\n     * @hidden\n     * @internal\n     *\n     * Return `GeoPoints` bounding {@link @here/harp-geoutils#GeoBox}\n     * applicable for {@link getFitBoundsDistance}.\n     *\n     * @returns {@link @here/harp-geoutils#GeoCoordinates} set that covers `box`\n     */\n    export function geoBoxToGeoPoints(box: GeoBox): GeoCoordinates[] {\n        const center = box.center;\n        return [\n            new GeoCoordinates(box.north, box.west),\n            new GeoCoordinates(box.north, box.east),\n            new GeoCoordinates(center.latitude, box.west),\n            new GeoCoordinates(center.latitude, box.east),\n            new GeoCoordinates(box.south, box.west),\n            new GeoCoordinates(box.south, box.east),\n            new GeoCoordinates(box.north, center.longitude),\n            new GeoCoordinates(box.south, center.longitude)\n        ];\n    }\n\n    /**\n     * @hidden\n     * @internal\n     *\n     * Get minimal distance required for `camera` looking at `worldTarget` to cover `points`.\n     *\n     * All dimensions belong to world space.\n     *\n     * @param points - points which must be in view.\n     * @param worldTarget - readonly, world target of {@link MapView}\n     * @param camera - readonly, camera with proper `position` and rotation set\n     * @returns new distance to camera to be used with {@link (MapView.lookAt:WITH_PARAMS)}\n     */\n    export function getFitBoundsDistance(\n        points: THREE.Vector3[],\n        worldTarget: THREE.Vector3,\n        camera: THREE.PerspectiveCamera\n    ): number {\n        // Diagram of the camera space YZ plane with the initial situation. Camera is at C0 and may\n        // need to be moved to make point P visible.\n        //\n        //                camY\n        //       targetDist^\n        //      |<-------->|     Ps\n        //     constD pEyeZ|    /|  ^\n        //      |<-->|<--->|   / |  |\n        //      |    |     |  /  |  | |ndcY-O.y|*h/2\n        //      |    |     | /   |  |\n        //  <---T----P'----C0----O  v\n        // camZ      |_|  /|     |                              C0  - Initial camera position\n        //           |   / |<--->|                              T   - Camera target\n        //      PcamY|  /     f                                 P   - Bounds point (world space)\n        //           | / (focal length)                         O   - Principal point.\n        //           |/                                         h   - viewport height.\n        //           P\n        //\n        // Diagram of camera space YZ plane with the final camera position C1 that leaves P at the\n        // edge of the viewport. The new camera distance is the sum of a constant term (constD) and\n        // the new distance to P (newPEyeZ), which is the initial distance (pEyeZ) multiplied by a\n        // factor that needs to be found.\n        //\n        //                            camY\n        //     constD      newPEyeZ    ^          Ps\n        //      |<-->|<--------------->|       _-`|  ^\n        //      |    |                 |    _-`   |  | |sign(ndcY)-O.y|h/2\n        //      |    |                 | _-`      |  |\n        //  <---T----P'----C0----------C1---------O  v\n        // camZ      |_|            _-`|          |              C0  - Initial camera position\n        //           |           _-`   |<-------->|              C1  - New camera position\n        //      PcamY|        _-`           f                    T   - Camera target\n        //           |     _-`        (focal length)             P   - Bounds point (world space)\n        //           |  _-`                                      Ps  - P projected on screen.\n        //           P-`                                         O   - Principal point.\n        //                                                       h   - viewport height.\n        //\n        // P is between target and initial camera position, but calculations are equivalent for\n        // points beyond the target (pEyeZ negative) or behind the camera (constD negative).\n        // Right triangles PP'C0 and PsOC0 are equivalent, as well as PP'C1 and Ps0C1, that means:\n        // |ndcY-O.y|*h/(2*f) = PcamY / |pEyeZ| (1) (ndcY-O.y,pEyeZ may be negative, take abs vals).\n        // |sign(ndcY)-O.y|h/(2*f) = PcamY / newPEyeZ (2)\n        // Dividing (1) by (2) and solving for newPEyeZ we get:\n        // newPEyeZ = | pEyeZ || ndcY - O.y | / |sign(ndcY)-O.y|\n        // The target distance to project P at the top/bottom border of the viewport is then:\n        // constD + newPEyeZ = targetDist - pEyeZ + |pEyeZ||ndcY-O.y| / |sign(ndcY)-O.y|\n        // The target distance to project P at the left/right border of the viewport is similarly:\n        // targetDist - pEyeZ + |pEyeZ||ndcX-O.x| / |sign(ndcX)-O.x|\n        // Take the largest of both distances to ensure the point is inside the viewport:\n        // newDistance = targetDist - pEyeZ +\n        // max(| ndcX - O.x | /|sign(ndcX)-O.x|, |ndcY-O.y|/sign(ndcY) - O.y |) *| pEyeZ |\n\n        const targetDist = cache.vector3[0].copy(worldTarget).sub(camera.position).length();\n        const ppalPoint = CameraUtils.getPrincipalPoint(camera);\n        let newDistance = targetDist;\n\n        const getDistanceFactor = (pointNDC: number, ppNDC: number) => {\n            // Use as maximum NDC a value slightly smaller than 1 to ensure the point is visible\n            // with the final camera distance. Otherwise any precision loss might leave it just\n            // outside of the viewport.\n            const maxNDC = 0.99;\n            return Math.abs(pointNDC) > 1\n                ? Math.abs((pointNDC - ppNDC) / (maxNDC * Math.sign(pointNDC) - ppNDC))\n                : 1;\n        };\n        for (const point of points) {\n            const pEyeZ = -cache.vector3[0].copy(point).applyMatrix4(camera.matrixWorldInverse).z;\n            const pointNDC = cache.vector3[0].applyMatrix4(camera.projectionMatrix);\n            const maxFactor = Math.max(\n                getDistanceFactor(pointNDC.x, ppalPoint.x),\n                getDistanceFactor(pointNDC.y, ppalPoint.y)\n            );\n            if (maxFactor > 1) {\n                const constDist = targetDist - pEyeZ;\n                const newPEyeZ = Math.abs(pEyeZ) * maxFactor + constDist;\n                newDistance = Math.max(newDistance, newPEyeZ);\n            }\n        }\n        return newDistance;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     *\n     * Paremeters for [[getFitBoundsLookAtParams]] function.\n     */\n    export interface FitPointParams {\n        tilt: number;\n        heading: number;\n        projection: Projection;\n        minDistance: number;\n        camera: THREE.PerspectiveCamera;\n    }\n\n    /**\n     * @hidden\n     * @internal\n     *\n     * Get {@link LookAtParams} that fit all `worldPoints`\n     * giving that {@link MapView} will target at\n     * `geoTarget`.\n     *\n     * @param geoTarget - desired target (see {@link MapView.target}) as geo point\n     * @param worldTarget - same as `geoTarget` but in world space\n     * @param worldPoints - points we want to see\n     * @param params - other params derived from {@link MapView}.\n     */\n    export function getFitBoundsLookAtParams(\n        geoTarget: GeoCoordinates,\n        worldTarget: THREE.Vector3,\n        worldPoints: THREE.Vector3[],\n        params: FitPointParams\n    ) {\n        const { tilt, heading, projection } = params;\n        const startDistance = params.minDistance;\n        const tmpCamera = params.camera.clone() as THREE.PerspectiveCamera;\n\n        getCameraRotationAtTarget(projection, geoTarget, -heading, tilt, tmpCamera.quaternion);\n        getCameraPositionFromTargetCoordinates(\n            geoTarget,\n            startDistance,\n            -heading,\n            tilt,\n            projection,\n            tmpCamera.position\n        );\n        tmpCamera.updateMatrixWorld(true);\n\n        if (projection.type === ProjectionType.Spherical) {\n            wrapWorldPointsToView(worldPoints, tmpCamera.position);\n        }\n        const distance = getFitBoundsDistance(worldPoints, worldTarget, tmpCamera);\n        return {\n            target: geoTarget,\n            distance,\n            heading,\n            tilt\n        };\n    }\n\n    /**\n     * @deprecated use getCameraPositionFromTargetCoordinates instead\n     */\n    export function getCameraCoordinatesFromTargetCoordinates(\n        targetCoordinates: GeoCoordinates,\n        distance: number,\n        yawDeg: number,\n        pitchDeg: number,\n        mapView: MapView\n    ): GeoCoordinates {\n        return mapView.projection.unprojectPoint(\n            getCameraPositionFromTargetCoordinates(\n                targetCoordinates,\n                distance,\n                yawDeg,\n                pitchDeg,\n                mapView.projection,\n                cache.vector3[1]\n            )\n        );\n    }\n\n    /**\n     * Casts a ray in NDC space from the current map view and returns the intersection point of that\n     * ray wih the map in world space.\n     *\n     * @param mapView - Instance of MapView.\n     * @param pointOnScreenXinNDC - X coordinate in NDC space.\n     * @param pointOnScreenYinNDC - Y coordinate in NDC space.\n     * @param elevation - Optional param used to offset the ground plane. Used when wanting to pan\n     * based on a plane at some altitude. Necessary for example when panning with terrain.\n     *\n     * @returns Intersection coordinates, or `null` if raycast failed.\n     */\n    export function rayCastWorldCoordinates(\n        mapView: MapView | { camera: THREE.Camera; projection: Projection },\n        pointOnScreenXinNDC: number,\n        pointOnScreenYinNDC: number,\n        elevation?: number\n    ): THREE.Vector3 | null {\n        const pointInNDCPosition = cache.vector3[0].set(\n            pointOnScreenXinNDC,\n            pointOnScreenYinNDC,\n            0\n        );\n\n        mapView.camera.updateMatrixWorld();\n        const cameraPos = cache.vector3[1].copy(mapView.camera.position);\n\n        cache.matrix4[0].extractRotation(mapView.camera.matrixWorld);\n\n        // Prepare the unprojection matrix which projects from NDC space to camera space\n        // and takes the current rotation of the camera into account.\n        cache.matrix4[1].multiplyMatrices(\n            cache.matrix4[0],\n            cache.matrix4[1].copy(mapView.camera.projectionMatrix).invert()\n        );\n        // Unproject the point via the unprojection matrix.\n        const pointInCameraSpace = pointInNDCPosition.applyMatrix4(cache.matrix4[1]);\n        // Use the point in camera space as the vector towards this point.\n        rayCaster.set(cameraPos, pointInCameraSpace.normalize());\n        if (elevation !== undefined) {\n            groundPlane.constant -= elevation;\n            groundSphere.radius += elevation;\n        }\n\n        const worldPosition = new THREE.Vector3();\n        const result =\n            mapView.projection.type === ProjectionType.Planar\n                ? rayCaster.ray.intersectPlane(groundPlane, worldPosition)\n                : rayCaster.ray.intersectSphere(groundSphere, worldPosition);\n\n        if (elevation !== undefined) {\n            groundPlane.constant = 0;\n            groundSphere.radius = EarthConstants.EQUATORIAL_RADIUS;\n        }\n        return result;\n    }\n\n    /**\n     * Pans the camera according to the projection.\n     *\n     * @param mapView - Instance of MapView.\n     * @param xOffset - In world space. Value > 0 will pan the map to the right, value < 0 will pan\n     *                  the map to the left in default camera orientation.\n     * @param yOffset - In world space. Value > 0 will pan the map upwards, value < 0 will pan the\n     *                  map downwards in default camera orientation.\n     */\n    export function panCameraAboveFlatMap(\n        mapView: MapView,\n        offsetX: number,\n        offsetY: number\n    ): void {\n        mapView.camera.position.x += offsetX;\n        mapView.camera.position.y += offsetY;\n    }\n\n    /**\n     * The function doing a pan in the spherical space\n     * when {@link MapView}'s active [[ProjectionType]]\n     * is spherical. In other words, the function that rotates the camera around the globe.\n     *\n     * @param mapView - MapView instance.\n     * @param fromWorld - Start vector representing the scene position of a geolocation.\n     * @param toWorld - End vector representing the scene position of a geolocation.\n     */\n    export function panCameraAroundGlobe(\n        mapView: MapView,\n        fromWorld: THREE.Vector3,\n        toWorld: THREE.Vector3\n    ) {\n        cache.quaternions[0]\n            .setFromUnitVectors(fromWorld.normalize(), toWorld.normalize())\n            .invert();\n        cache.matrix4[0].makeRotationFromQuaternion(cache.quaternions[0]);\n        mapView.camera.applyMatrix4(cache.matrix4[0]);\n        mapView.camera.updateMatrixWorld();\n    }\n\n    /**\n     * Rotates the camera by the given delta yaw and delta pitch. The pitch will be clamped to the\n     * maximum possible tilt to the new target, and under the horizon in sphere projection.\n     *\n     * @param mapView - The {@link MapView} instance in use.\n     * @param deltaYawDeg - Delta yaw in degrees.\n     * @param deltaPitchDeg - Delta pitch in degrees.\n     * @param maxTiltAngleRad - Max tilt angle in radians.\n     */\n    export function rotate(\n        mapView: { projection: Projection; camera: THREE.PerspectiveCamera },\n        deltaYawDeg: number,\n        deltaPitchDeg: number = 0,\n        maxTiltAngleRad = Math.PI / 4\n    ) {\n        // 1. Apply yaw: rotate around the vertical axis.\n        mapView.camera.rotateOnWorldAxis(\n            mapView.projection.type === ProjectionType.Spherical\n                ? cache.vector3[0].copy(mapView.camera.position).normalize()\n                : cache.vector3[0].set(0, 0, 1),\n            THREE.MathUtils.degToRad(-deltaYawDeg)\n        );\n        mapView.camera.updateMatrixWorld();\n\n        // 2. Apply pitch: rotate around the camera's local X axis.\n        if (deltaPitchDeg === 0) {\n            return;\n        }\n        const pitch = MapViewUtils.extractAttitude(mapView, mapView.camera).pitch;\n        // `maxTiltAngle` is equivalent to a `maxPitchAngle` in flat projections.\n        let newPitch = THREE.MathUtils.clamp(\n            pitch + THREE.MathUtils.degToRad(deltaPitchDeg),\n            0,\n            maxTiltAngleRad\n        );\n        // In sphere projection, the value of a maximum pitch is smaller than the value of the\n        // maximum tilt, as the curvature of the surface adds up to it.\n        if (mapView.projection.type === ProjectionType.Spherical) {\n            // Deduce max pitch from max tilt. To this end the sine law of triangles is used below.\n            const maxPitch = Math.asin(\n                (EarthConstants.EQUATORIAL_RADIUS * Math.sin(Math.PI - maxTiltAngleRad)) /\n                    mapView.camera.position.length()\n            );\n            newPitch = Math.min(newPitch, maxPitch);\n        }\n        mapView.camera.rotateX(newPitch - pitch);\n    }\n\n    /**\n     * Computes the rotation of the camera according to yaw and pitch in degrees. The computations\n     * hinge on the current `projection` and `target`, because yaw and pitch are defined in\n     * tangent space of the target point.\n     *\n     * **Note:** `yaw == 0 && pitch == 0` will north up the map and you will look downwards onto the\n     * map.\n     *\n     * @param projection - Current projection.\n     * @param target - The camera target.\n     * @param yawDeg - Yaw in degrees, counter-clockwise (as opposed to azimuth), starting north.\n     * @param pitchDeg - Pitch in degrees.\n     */\n    export function getCameraRotationAtTarget(\n        projection: Projection,\n        target: GeoCoordinates,\n        yawDeg: number,\n        pitchDeg: number,\n        result: THREE.Quaternion = new THREE.Quaternion()\n    ): THREE.Quaternion {\n        const transform = cache.transforms[0];\n        projection.localTangentSpace(target, transform);\n\n        cache.matrix4[0].makeBasis(transform.xAxis, transform.yAxis, transform.zAxis);\n        result.setFromRotationMatrix(cache.matrix4[0]);\n\n        cache.quaternions[0].setFromAxisAngle(\n            cache.vector3[1].set(0, 0, 1),\n            THREE.MathUtils.degToRad(yawDeg)\n        );\n        cache.quaternions[1].setFromAxisAngle(\n            cache.vector3[1].set(1, 0, 0),\n            THREE.MathUtils.degToRad(pitchDeg)\n        );\n\n        result.multiply(cache.quaternions[0]);\n        result.multiply(cache.quaternions[1]);\n        return result;\n    }\n\n    /**\n     * Sets the rotation of the camera according to yaw and pitch in degrees. The computations hinge\n     * on the current projection and `geoCenter`, because yaw and pitch are defined in tangent\n     * space. In particular, `MapView#geoCenter` needs to be set before calling `setRotation`.\n     *\n     * **Note:** `yaw == 0 && pitch == 0` will north up the map and you will look downwards onto the\n     * map.\n     *\n     * @param mapView - Instance of MapView.\n     * @param yawDeg - Yaw in degrees, counter-clockwise (as opposed to azimuth), starting north.\n     * @param pitchDeg - Pitch in degrees.\n     */\n    export function setRotation(mapView: MapView, yawDeg: number, pitchDeg: number) {\n        getCameraRotationAtTarget(\n            mapView.projection,\n            mapView.geoCenter,\n            yawDeg,\n            pitchDeg,\n            mapView.camera.quaternion\n        );\n    }\n\n    /**\n     * Extracts current camera tilt angle in radians.\n     *\n     * @param camera - The [[Camera]] in use.\n     * @param projection - The {@link @here/harp-geoutils#Projection} used to\n     *                     convert between geo and world coordinates.\n     *\n     * @deprecated Use MapView.tilt\n     */\n    export function extractCameraTilt(camera: THREE.Camera, projection: Projection): number {\n        // For planar projections the camera target point local tangent is the same\n        // at every point on the ground (ignoring terrain fluctuations), so we may\n        // simply use inverted ground normal for tilt calculation. This simplifies\n        // the more generic calculus used for spherical projections.\n        if (projection.type === ProjectionType.Planar) {\n            const lookAt: THREE.Vector3 = camera.getWorldDirection(cache.vector3[0]).normalize();\n            const normal: THREE.Vector3 = projection\n                .surfaceNormal(camera.position, cache.vector3[1])\n                .negate();\n            const cosTheta = lookAt.dot(normal);\n            return Math.acos(THREE.MathUtils.clamp(cosTheta, -1, 1));\n        } else {\n            // Sanity check if new projection type is introduced.\n            assert(projection.type === ProjectionType.Spherical);\n            const targetGeoCoords = MapViewUtils.getGeoTargetFromCamera(camera, projection);\n            // If focus point is lost we then expose maximum allowable tilt value.\n            if (targetGeoCoords !== null) {\n                return MapViewUtils.extractTiltAngleFromLocation(\n                    projection,\n                    camera,\n                    targetGeoCoords\n                );\n            } else {\n                logger.warn(\n                    \"MapView camera is pointing in the void, using maxTilt: \",\n                    MAX_TILT_RAD\n                );\n                return MAX_TILT_RAD;\n            }\n        }\n    }\n\n    /**\n     * Extracts yaw, pitch, and roll rotation in radians.\n     * - Yaw : Rotation around the vertical axis, counter-clockwise (as opposed to azimuth),\n     * starting north.\n     * - Pitch :Rotation around the horizontal axis.\n     * - Roll : Rotation around the view axis.\n     *\n     * @see https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles\n     *\n     * @param options - Subset of necessary {@link MapView} properties.\n     * @param object - The [[THREE.Object3D]] instance to extract the rotations from.\n     */\n    export function extractAttitude(\n        mapView: { projection: Projection },\n        object: THREE.Object3D\n    ): Attitude {\n        // 1. Build the matrix of the tangent space of the object.\n        cache.vector3[1].setFromMatrixPosition(object.matrixWorld); // Ensure using world position.\n        mapView.projection.localTangentSpace(cache.vector3[1], {\n            xAxis: tangentSpace.x,\n            yAxis: tangentSpace.y,\n            zAxis: tangentSpace.z,\n            position: cache.vector3[0]\n        });\n        cache.matrix4[1].makeBasis(tangentSpace.x, tangentSpace.y, tangentSpace.z);\n\n        // 2. Change the basis of matrixWorld to the tangent space to get the new base axes.\n        cache.matrix4[0].copy(cache.matrix4[1]).invert().multiply(object.matrixWorld);\n        space.x.setFromMatrixColumn(cache.matrix4[0], 0);\n        space.y.setFromMatrixColumn(cache.matrix4[0], 1);\n        space.z.setFromMatrixColumn(cache.matrix4[0], 2);\n\n        // 3. Deduce orientation from the base axes.\n        let yaw = 0;\n        let pitch = 0;\n        let roll = 0;\n\n        // Decompose rotation matrix into Z0 X Z1 Euler angles.\n        const d = space.z.dot(cache.vector3[1].set(0, 0, 1));\n        if (d < 1.0 - Number.EPSILON) {\n            if (d > -1.0 + Number.EPSILON) {\n                yaw = Math.atan2(space.z.x, -space.z.y);\n                pitch = Math.acos(space.z.z);\n                roll = Math.atan2(space.x.z, space.y.z);\n            } else {\n                // Looking bottom-up with space.z.z == -1.0\n                yaw = -Math.atan2(-space.y.x, space.x.x);\n                pitch = 180;\n                roll = 0;\n            }\n        } else {\n            // Looking top-down with space.z.z == 1.0\n            yaw = Math.atan2(-space.y.x, space.x.x);\n            pitch = 0.0;\n            roll = 0.0;\n        }\n\n        return {\n            yaw,\n            pitch,\n            roll\n        };\n    }\n\n    /**\n     * Gets the spherical coordinates in radian of the object to the coordinates of `point`.\n     *\n     * Note: this method can be used to get the direction that an object points to, when `location`\n     * is the target of that object, by adding PI to it. Otherwise it only returns the spherical\n     * coordinates of `object` in the tangent space of `location`.\n     *\n     * @param mapView - The {@link MapView} instance to consider.\n     * @param object - The object to get the coordinates from.\n     * @param location - The reference point.\n     */\n    export function extractSphericalCoordinatesFromLocation(\n        mapView: { projection: Projection },\n        object: THREE.Object3D,\n        location: GeoCoordinatesLike | Vector3Like\n    ): { azimuth: number; tilt: number } {\n        // if (projection instanceof MapView) {\n        //     logger.warn(\"Passing MapView to extractSphericalCoordinatesFromLocation is deprecated\");\n        //     projection = projection.projection;\n        // }\n        mapView.projection.localTangentSpace(location, {\n            xAxis: tangentSpace.x,\n            yAxis: tangentSpace.y,\n            zAxis: tangentSpace.z,\n            position: cache.vector3[0]\n        });\n\n        let tilt = 0;\n        let azimuth = 0;\n\n        // Get point to object vector in `cache.vector3[1]` and deduce `tilt` from the angle with\n        // tangent Z.\n        cache.vector3[1].copy(object.position).sub(cache.vector3[0]).normalize();\n        if (cache.vector3[1].dot(tangentSpace.z) > 1 - Number.EPSILON) {\n            // Top down view: the azimuth of the object would be opposite the yaw, and clockwise.\n            azimuth = Math.PI - extractAttitude(mapView, object).yaw;\n            // Wrap between -PI and PI.\n            azimuth = Math.atan2(Math.sin(azimuth), Math.cos(azimuth));\n            tilt = 0;\n            return { tilt, azimuth };\n        }\n        tilt = cache.vector3[1].angleTo(tangentSpace.z);\n        // Tilted view: the azimuth is the direction of the object from the origin.\n        cache.vector3[1]\n            .copy(object.position)\n            .sub(cache.vector3[0])\n            .projectOnPlane(tangentSpace.z)\n            .normalize();\n        azimuth = cache.vector3[1].angleTo(tangentSpace.y);\n        if (cache.vector3[1].cross(tangentSpace.y).dot(tangentSpace.z) < 0) {\n            azimuth = -azimuth;\n        }\n        return { tilt, azimuth };\n    }\n\n    /**\n     * Gets the tilt angle (in radians) of the object relative to the coordinates of `location`.\n     *\n     * Note: this method can be used to get the direction that an object points to, when `location`\n     * is the target of that object, by adding PI to it. Otherwise it only returns the tilt angle\n     * (in radians) of `object` in the tangent space of `location`.\n     *\n     * @param projection - The {@link @here/harp-geoutils#Projection} used when\n     *                     converting from geo to world coordinates.\n     * @param object - The object to get the coordinates from.\n     * @param location - The reference point.\n     * @param tiltAxis - Optional axis used to define the rotation about which the object's tilt\n     * occurs, the direction vector to the location from the camera is projected on the plane with\n     * the given angle.\n     */\n    export function extractTiltAngleFromLocation(\n        projection: Projection,\n        object: THREE.Object3D,\n        location: GeoCoordinates | Vector3Like,\n        tiltAxis?: THREE.Vector3\n    ): number {\n        projection.localTangentSpace(location, {\n            xAxis: tangentSpace.x,\n            yAxis: tangentSpace.y,\n            zAxis: tangentSpace.z,\n            position: cache.vector3[0]\n        });\n        // Get point to object vector (dirVec) and compute the `tilt` as the angle with tangent Z.\n        const dirVec = cache.vector3[2].copy(object.position).sub(cache.vector3[0]);\n        if (tiltAxis) {\n            dirVec.projectOnPlane(tiltAxis);\n            tangentSpace.z.projectOnPlane(tiltAxis).normalize();\n        }\n        const dirLen = dirVec.length();\n        if (dirLen < epsilon) {\n            logger.error(\"Can not calculate tilt for the zero length vector!\");\n            return 0;\n        }\n        dirVec.divideScalar(dirLen);\n\n        const cosTheta = dirVec.dot(tangentSpace.z);\n        if (cosTheta >= 1 - Number.EPSILON) {\n            // Top down view.\n            return 0;\n        }\n        return Math.acos(THREE.MathUtils.clamp(cosTheta, -1, 1));\n    }\n\n    /**\n     * Get perspective camera frustum planes distances.\n     * @deprecated\n     * @return all plane distances in helper object.\n     */\n    export function getCameraFrustumPlanes(\n        camera: THREE.PerspectiveCamera\n    ): { left: number; right: number; top: number; bottom: number; near: number; far: number } {\n        const near = camera.near;\n        const far = camera.far;\n        let top = (near * Math.tan(THREE.MathUtils.degToRad(0.5 * camera.fov))) / camera.zoom;\n        let height = 2 * top;\n        let width = camera.aspect * height;\n        let left = -0.5 * width;\n\n        const view = camera.view;\n        if (view !== null && view.enabled) {\n            const fullWidth = view.fullWidth;\n            const fullHeight = view.fullHeight;\n\n            left += (view.offsetX * width) / fullWidth;\n            top -= (view.offsetY * height) / fullHeight;\n            width *= view.width / fullWidth;\n            height *= view.height / fullHeight;\n        }\n\n        // Correct by skew factor\n        left += camera.filmOffset !== 0 ? (near * camera.filmOffset) / camera.getFilmWidth() : 0;\n\n        return {\n            left,\n            right: left + width,\n            top,\n            bottom: top - height,\n            near,\n            far\n        };\n    }\n\n    /**\n     * Casts a ray in NDC space from the current view of the camera and returns the intersection\n     * point of that ray against the map in geo coordinates. The return value can be `null` when\n     * the raycast is above the horizon.\n     *\n     * @param mapView - Instance of MapView.\n     * @param pointOnScreenXNDC -  Abscissa in NDC space.\n     * @param pointOnScreenYNDC -  Ordinate in NDC space.\n     * @returns Intersection geo coordinates, or `null` if raycast is above the horizon.\n     */\n    export function rayCastGeoCoordinates(\n        mapView: MapView,\n        pointOnScreenXinNDC: number,\n        pointOnScreenYinNDC: number\n    ): GeoCoordinates | null {\n        const worldCoordinates = rayCastWorldCoordinates(\n            mapView,\n            pointOnScreenXinNDC,\n            pointOnScreenYinNDC\n        );\n\n        if (!worldCoordinates) {\n            return null;\n        }\n\n        return mapView.projection.unprojectPoint(worldCoordinates);\n    }\n\n    /**\n     * Calculates and returns the distance from the ground, which is needed to put the camera to\n     * this height, to see the size of the area that would be covered by one tile for the given zoom\n     * level.\n     *\n     * @param mapView - Instance of MapView.\n     * @param options - Subset of necessary {@link MapView} properties.\n     */\n    export function calculateDistanceToGroundFromZoomLevel(\n        mapView: { projection: Projection; focalLength: number; camera: THREE.PerspectiveCamera },\n        zoomLevel: number\n    ): number {\n        const cameraPitch = extractAttitude(mapView, mapView.camera).pitch;\n        const tileSize = EarthConstants.EQUATORIAL_CIRCUMFERENCE / Math.pow(2, zoomLevel);\n        return ((mapView.focalLength * tileSize) / 256) * Math.cos(cameraPitch);\n    }\n\n    /**\n     * Calculates and returns the distance to the target point.\n     *\n     * @param options - Necessary subset of MapView properties to compute the distance.\n     * @param zoomLevel - The zoom level to get the equivalent height to.\n     */\n    export function calculateDistanceFromZoomLevel(\n        options: { focalLength: number },\n        zoomLevel: number\n    ): number {\n        const tileSize = EarthConstants.EQUATORIAL_CIRCUMFERENCE / Math.pow(2, zoomLevel);\n        return (options.focalLength * tileSize) / 256;\n    }\n\n    /**\n     * Calculates the zoom level, which corresponds to the current distance from\n     * camera to lookAt point.\n     * Therefore the zoom level is a `float` and not an `int`. The height of the camera can be in\n     * between zoom levels. By setting the zoom level, you change the height position of the camera\n     * in away that the field of view of the camera should be able to cover one tile for the given\n     * zoom level.\n     *\n     * As an example for this, when you have a tile of zoom level 14 in front of the camera and you\n     * set the zoom level of the camera to 14, then you are able to see the whole tile in front of\n     * you.\n     *\n     * @param options - Subset of necessary {@link MapView} properties.\n     * @param distance - The distance in meters, which are scene units in {@link MapView}.\n     */\n    export function calculateZoomLevelFromDistance(\n        options: { focalLength: number; minZoomLevel: number; maxZoomLevel: number },\n        distance: number\n    ): number {\n        const tileSize = (256 * distance) / options.focalLength;\n        const zoomLevel = THREE.MathUtils.clamp(\n            Math.log2(EarthConstants.EQUATORIAL_CIRCUMFERENCE / tileSize),\n            options.minZoomLevel,\n            options.maxZoomLevel\n        );\n        return snapToCeilingZoomLevel(zoomLevel);\n    }\n\n    /**\n     * @deprecated\n     * Translates a linear clip-space distance value to the actual value stored in the depth buffer.\n     * This is useful as the depth values are not stored in the depth buffer linearly, and this can\n     * lead into confusing behavior when not taken into account.\n     *\n     * @param clipDistance - Distance from the camera in clip space (range: [0, 1]).\n     * @param camera - Camera applying the perspective projection.\n     */\n    export function calculateDepthFromClipDistance(\n        clipDistance: number,\n        camera: THREE.Camera\n    ): number {\n        const perspCam = camera as THREE.PerspectiveCamera;\n        const cameraRange = perspCam.far - perspCam.near;\n        const viewSpaceDistance = clipDistance * perspCam.far;\n\n        return (1.0 - perspCam.near / viewSpaceDistance) * (perspCam.far / cameraRange);\n    }\n\n    /**\n     * @deprecated\n     * Translates a linear distance value [0..1], where 1 is the distance to the far plane, into\n     * [0..cameraFar].\n     *\n     * @param distance - Distance from the camera (range: [0, 1]).\n     * @param camera - Camera applying the perspective projection.\n     */\n    export function cameraToWorldDistance(distance: number, camera: THREE.Camera): number {\n        const perspCam = camera as THREE.PerspectiveCamera;\n        return distance * perspCam.far;\n    }\n\n    /**\n     * @deprecated\n     */\n    export function calculateVerticalFovByHorizontalFov(hFov: number, aspect: number): number {\n        return 2 * Math.atan(Math.tan(hFov / 2) / aspect);\n    }\n\n    /**\n     * @deprecated Use {@link CameraUtils.getHorizontalFov}.\n     */\n    export function calculateHorizontalFovByVerticalFov(vFov: number, aspect: number): number {\n        tmpCamera.fov = THREE.MathUtils.radToDeg(vFov);\n        tmpCamera.aspect = aspect;\n        return CameraUtils.getHorizontalFov(tmpCamera);\n    }\n\n    /**\n     * @deprecated Use {@link CameraUtils.setVerticalFov}.\n     */\n    export function calculateFocalLengthByVerticalFov(vFov: number, height: number): number {\n        // setVerticalFov takes into account the principal point position to support\n        // off-center projections. Keep previous behaviour by passing a camera with centered\n        // principal point.\n        CameraUtils.setPrincipalPoint(tmpCamera, new THREE.Vector2());\n        CameraUtils.setVerticalFov(tmpCamera, vFov, height);\n        return CameraUtils.getFocalLength(tmpCamera)!;\n    }\n\n    /**\n     * @deprecated Use {@link CameraUtils.setFocalLength}.\n     */\n    export function calculateFovByFocalLength(focalLength: number, height: number): number {\n        // setFocalLength takes into account the principal point position to support\n        // off-center projections. Keep previous behaviour by passing a camera with centered\n        // principal point.\n        CameraUtils.setPrincipalPoint(tmpCamera, new THREE.Vector2());\n        CameraUtils.setFocalLength(tmpCamera, focalLength, height);\n        return tmpCamera.fov;\n    }\n\n    /**\n     * @deprecated Use {@link CameraUtils.convertWorldToScreenSize}.\n     */\n    export const calculateScreenSizeByFocalLength = CameraUtils.convertWorldToScreenSize;\n\n    /**\n     * @deprecated Use {@link CameraUtils.convertScreenToWorldSize}.\n     */\n    export const calculateWorldSizeByFocalLength = CameraUtils.convertScreenToWorldSize;\n\n    /**\n     * @deprecated\n     */\n    export const estimateObject3dSize = Object3DUtils.estimateSize;\n\n    /**\n     * Check if tiles or other content is currently being loaded.\n     *\n     * This method can be removed once HARP-7932 is implemented.\n     *\n     * @returns `true` if MapView has visible tiles or other content that is being loaded.\n     */\n    export function mapViewIsLoading(mapView: MapView) {\n        let numTilesLoading = 0;\n\n        for (const tileList of mapView.visibleTileSet.dataSourceTileList) {\n            numTilesLoading += tileList.numTilesLoading;\n\n            for (const tile of tileList.visibleTiles) {\n                if (!tile.allGeometryLoaded) {\n                    numTilesLoading++;\n                }\n            }\n        }\n        let isLoading = numTilesLoading > 0;\n\n        if (mapView.textElementsRenderer !== undefined) {\n            isLoading = isLoading || mapView.textElementsRenderer.loading;\n        }\n\n        isLoading =\n            isLoading ||\n            !mapView.poiTableManager.finishedLoading ||\n            !mapView.visibleTileSet.allVisibleTilesLoaded;\n\n        return isLoading;\n    }\n\n    export function closeToFrustum(\n        point: THREE.Vector3,\n        camera: THREE.Camera,\n        eps: number = 1e-13\n    ): boolean {\n        const ndcPoint = new THREE.Vector3().copy(point).project(camera);\n        if (\n            Math.abs(ndcPoint.x) - eps < 1 &&\n            Math.abs(ndcPoint.y) - eps < 1 &&\n            Math.abs(ndcPoint.z) - eps < 1\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @deprecated Use {@link @here/harp-utils#DOMUtils.getBrowserLanguages}\n     */\n    export const getBrowserLanguages = DOMUtils.getBrowserLanguages;\n}\n\nexport namespace TileOffsetUtils {\n    /**\n     * @deprecated Use {@link @here/harp-geoutils#TileKeyUtils.getKeyForTileKeyAndOffset}.\n     */\n    export const getKeyForTileKeyAndOffset = TileKeyUtils.getKeyForTileKeyAndOffset;\n\n    /**\n     * @deprecated Use {@link @here/harp-geoutils#TileKeyUtils.getKeyForTileKeyAndOffset}.\n     */\n    export const extractOffsetAndMortonKeyFromKey = TileKeyUtils.extractOffsetAndMortonKeyFromKey;\n\n    /**\n     * @deprecated Use {@link @here/harp-geoutils#TileKeyUtils.getParentKeyFromKey}.\n     */\n    export const getParentKeyFromKey = TileKeyUtils.getParentKeyFromKey;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { ViewRanges } from \"@here/harp-datasource-protocol/lib/ViewRanges\";\nimport {\n    GeoCoordinates,\n    Projection,\n    ProjectionType,\n    TileKey,\n    TileKeyUtils,\n    TilingScheme\n} from \"@here/harp-geoutils\";\nimport { LRUCache } from \"@here/harp-lrucache\";\nimport { assert, MathUtils, TaskQueue } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { BackgroundDataSource } from \"./BackgroundDataSource\";\nimport { ClipPlanesEvaluator } from \"./ClipPlanesEvaluator\";\nimport { DataSource } from \"./DataSource\";\nimport { ElevationRangeSource } from \"./ElevationRangeSource\";\nimport { FrustumIntersection, TileKeyEntry } from \"./FrustumIntersection\";\nimport { TileGeometryManager } from \"./geometry/TileGeometryManager\";\nimport { TileTaskGroups } from \"./MapView\";\nimport { Tile } from \"./Tile\";\n\n/**\n * Way the memory consumption of a tile is computed. Either in number of tiles, or in MegaBytes. If\n * it is in MB, an estimation is used.\n */\nexport enum ResourceComputationType {\n    EstimationInMb = 0,\n    NumberOfTiles\n}\n\n// Direction in quad tree to search: up -> shallower levels, down -> deeper levels.\nenum SearchDirection {\n    NONE,\n    UP,\n    DOWN,\n    BOTH\n}\n\n/**\n * Limited set of {@link MapViewOptions} used for {@link VisibleTileSet}.\n */\nexport interface VisibleTileSetOptions {\n    /**\n     * The projection of the view.\n     */\n    projection: Projection;\n\n    /**\n     * User-defined camera clipping planes evaluator.\n     */\n    clipPlanesEvaluator: ClipPlanesEvaluator;\n\n    /**\n     * Limit of tiles that can be visible per datasource.\n     */\n    maxVisibleDataSourceTiles: number;\n\n    /**\n     * In addition to the simple frustum culling also do additional checks with [[MapTileCuller]].\n     */\n    extendedFrustumCulling: boolean;\n\n    /**\n     * Missing Typedoc\n     */\n    tileCacheSize: number;\n\n    /**\n     * Missing Typedoc\n     */\n    resourceComputationType: ResourceComputationType;\n\n    /**\n     * Number of levels to go up when searching for fallback tiles.\n     */\n    quadTreeSearchDistanceUp: number;\n\n    /**\n     * Number of levels to go down when searching for fallback tiles.\n     */\n    quadTreeSearchDistanceDown: number;\n\n    /**\n     * Maximal number of new tiles, that can be added to the scene per frame.\n     * if set to `0`the limit will be ignored and all available tiles be uploaded.\n     * @beta\n     * @internal\n     * @defaultValue 0\n     */\n    maxTilesPerFrame: number;\n}\n\nconst MB_FACTOR = 1.0 / (1024.0 * 1024.0);\n\ntype TileCacheId = string;\n\n/**\n * Wrapper for LRU cache that encapsulates tiles caching for any {@link DataSource} used.\n *\n * Provides LRU based caching mechanism where each tile is identified by its tile key\n * (morton code) and data source name.\n * Tiles are kept in the cache based on last recently used policy, cached tile may be evicted\n * only when cache reaches full saturation and tile is no longer visible.\n * @note Currently cached entries (tiles) are identified by unique tile code (morton code) and\n * data source name, thus it is required that each {@link DataSource} used should have unique\n * name, but implementation could be improved to omit this limitation.\n */\nclass DataSourceCache {\n    /**\n     * Creates unique tile key for caching based on morton code, tile offset and its data source.\n     *\n     * @param mortonCode - The tile morton code.\n     * @param offset - The tile offset.\n     * @param dataSource - The {@link DataSource} from which tile was loaded.\n     */\n    static getKey(mortonCode: number, offset: number, dataSource: DataSource): TileCacheId {\n        return `${dataSource.name}_${mortonCode}_${offset}`;\n    }\n\n    /**\n     * Create unique tile identifier for caching, based on tile object passed in.\n     *\n     * @param tile - The tile for which key is generated.\n     */\n    static getKeyForTile(tile: Tile): TileCacheId {\n        return DataSourceCache.getKey(tile.tileKey.mortonCode(), tile.offset, tile.dataSource);\n    }\n\n    private readonly m_tileCache: LRUCache<TileCacheId, Tile>;\n    private readonly m_disposedTiles: Tile[] = [];\n    private m_resourceComputationType: ResourceComputationType;\n\n    constructor(\n        cacheSize: number,\n        rct: ResourceComputationType = ResourceComputationType.EstimationInMb\n    ) {\n        this.m_resourceComputationType = rct;\n        this.m_tileCache = new LRUCache<string, Tile>(cacheSize, (tile: Tile) => {\n            if (this.m_resourceComputationType === ResourceComputationType.EstimationInMb) {\n                // Default is size in MB.\n                return tile.memoryUsage * MB_FACTOR;\n            } else {\n                return 1;\n            }\n        });\n        this.m_tileCache.evictionCallback = (_, tile) => {\n            if (tile.tileLoader !== undefined) {\n                // Cancel downloads as early as possible.\n                tile.tileLoader.cancel();\n            }\n            this.m_disposedTiles.push(tile);\n        };\n        this.m_tileCache.canEvict = (_, tile) => {\n            // Tiles can be evicted that weren't requested in the last frame.\n            return !tile.isVisible;\n        };\n    }\n\n    /**\n     * Get information how cached tiles affects cache space available.\n     *\n     * The way how cache evaluates the __resources size__ have a big influence on entire\n     * caching mechanism, if [[resourceComputationType]] is set to:\n     * [[ResourceComputationType.EstimationInMb]] then each tiles contributes to cache size\n     * differently depending on the memory consumed, on other side\n     * [[ResourceComputationType.NumberOfTiles]] says each tile occupies single slot in cache,\n     * so its real memory consumed does not matter affect caching behavior. Of course in\n     * the second scenario cache may grow significantly in terms of memory usage and thus it\n     * is out of control.\n     *\n     * @return [[ResourceComputationType]] enum that describes if resources are counted by\n     * space occupied in memory or just by number of them.\n     */\n    get resourceComputationType(): ResourceComputationType {\n        return this.m_resourceComputationType;\n    }\n\n    /**\n     * Get the cache capacity measured as number if megabytes or number of entries.\n     *\n     * The total cached tiles size determines cache saturation, if it reaches the capacity value\n     * then the resources becomes evicted (released) starting from the oldest (the latest used).\n     *\n     * @see size.\n     * @see resourceComputationType.\n     */\n    get capacity(): number {\n        return this.m_tileCache.capacity;\n    }\n\n    /**\n     * Get total cache size described as number of megabytes consumed or number of tiles stored.\n     *\n     * @see capacity.\n     * @see resourceComputationType.\n     */\n    get size(): number {\n        return this.m_tileCache.size;\n    }\n\n    /**\n     * Set cache capacity and the algorithm used for cache size calculation.\n     *\n     * @see capacity.\n     * @see resourceComputationType.\n     * @param size - The new capacity declared in megabytes or number of entires.\n     * @param rct - The enum value that determines how size and capacity are evaluated.\n     */\n    setCapacity(size: number, rct: ResourceComputationType) {\n        this.m_resourceComputationType = rct;\n        this.m_tileCache.setCapacityAndMeasure(size, (tile: Tile) => {\n            if (this.m_resourceComputationType === ResourceComputationType.EstimationInMb) {\n                // Default is size in MB.\n                return tile.memoryUsage * MB_FACTOR;\n            } else {\n                return 1;\n            }\n        });\n    }\n\n    /**\n     * Get tile cached or __undefined__ if tile is not yet in cache.\n     *\n     * @param mortonCode - An unique tile morton code.\n     * @param offset - Tile offset.\n     * @param dataSource - A {@link DataSource} the tile comes from.\n     */\n    get(mortonCode: number, offset: number, dataSource: DataSource): Tile | undefined {\n        return this.m_tileCache.get(DataSourceCache.getKey(mortonCode, offset, dataSource));\n    }\n\n    /**\n     * Add new tile to the cache.\n     *\n     * @param mortonCode - En unique tile code (morton code).\n     * @param offset - The tile offset.\n     * @param dataSource - A {@link DataSource} the tile comes from.\n     * @param tile - The tile reference.\n     */\n    set(mortonCode: number, offset: number, dataSource: DataSource, tile: Tile) {\n        this.m_tileCache.set(DataSourceCache.getKey(mortonCode, offset, dataSource), tile);\n    }\n\n    /**\n     * Delete tile from cache.\n     *\n     * @note This method will not call eviction callback.\n     * @param tile - The tile reference to be removed from cache.\n     */\n    delete(tile: Tile) {\n        const tileKey = DataSourceCache.getKeyForTile(tile);\n        this.deleteByKey(tileKey);\n    }\n\n    /**\n     * Delete tile using its unique identifier.\n     *\n     * @note Tile identifier its constructed using information about tile code (morton code) and its\n     * {@link DataSource}.\n     * @note This is explicit removal thus eviction callback will not be processed.\n     * @see DataSourceCache.getKey.\n     * @param tileKey - The unique tile identifier.\n     */\n    deleteByKey(tileKey: TileCacheId) {\n        this.m_tileCache.delete(tileKey);\n    }\n\n    /**\n     * Dispose all tiles releasing their internal data.\n     */\n    disposeTiles() {\n        this.m_disposedTiles.forEach(tile => {\n            tile.dispose();\n        });\n\n        this.m_disposedTiles.length = 0;\n    }\n\n    /**\n     * Shrink cache to its allowed capacity.\n     *\n     * This method should be called each time after operations are performed on the cache entries,\n     * in order to keep cache size consistent. It informs caching mechanism to invalidate memory\n     * consumed by its entries and check if cache is overgrown, is such case some tiles will be\n     * evicted.\n     */\n    shrinkToCapacity() {\n        this.m_tileCache.shrinkToCapacity();\n    }\n\n    /**\n     * Evict all cached tiles implicitly even without checking if still in use.\n     */\n    evictAll() {\n        this.m_tileCache.evictAll();\n    }\n\n    /**\n     * Evict selected tiles implicitly.\n     *\n     * @param selector - The callback used to determine if tile should be evicted.\n     */\n    evictSelected(selector: (tile: Tile, key: TileCacheId) => boolean) {\n        this.m_tileCache.evictSelected(selector);\n    }\n\n    /**\n     * Call functor (callback) on each tile store in cache.\n     *\n     * Optionally you may specify from which {@link DataSource} tiles should be processed.\n     * This limits the tiles visited to a sub-set originating from single {@link DataSource}.\n     * @param callback - The function to be called for each visited tile.\n     * @param inDataSource - The optional {@link DataSource} to which tiles should belong.\n     */\n    forEach(callback: (tile: Tile, key: TileCacheId) => void, inDataSource?: DataSource): void {\n        this.m_tileCache.forEach((entry: Tile, key: TileCacheId) => {\n            if (inDataSource === undefined || entry.dataSource === inDataSource) {\n                callback(entry, key);\n            }\n        });\n    }\n}\n\n/**\n * List of visible tiles for a {@link DataSource}.\n */\nexport interface DataSourceTileList {\n    /**\n     * The datasource that was producing the tiles.\n     */\n    dataSource: DataSource;\n\n    /**\n     * The current {@link MapView} zoom level.\n     */\n    zoomLevel: number;\n\n    /**\n     * The storage level of the visibleTiles.\n     * Note: renderedTiles might contain tiles from different levels.\n     */\n    storageLevel: number;\n\n    /**\n     * True if all [[visibleTiles]] are loaded.\n     */\n    allVisibleTileLoaded: boolean;\n\n    /**\n     * The number of tiles which are still loading.\n     */\n    numTilesLoading: number;\n\n    /**\n     * List of tiles we want to render (i.e. the tiles computed from the zoom level and view\n     * frustum). However some might not be renderable yet (e.g. loading). See [[renderedTiles]] for\n     * the actual list of tiles that the user will see.\n     */\n    visibleTiles: Tile[];\n\n    /**\n     * Map of tiles that will be rendered, key is the the combination of tile key and offset, see\n     * [[getKeyForTileKeyAndOffset]]. This includes tiles that are not in the [[visibleTiles]]\n     * list but that are used as fallbacks b/c they are still in the cache.\n     */\n    renderedTiles: Map<number, Tile>;\n}\n\n// Sort by distance to camera, now the tiles that are further away are at the end\n// of the list.\n//\n// Sort is unstable if distance is equal, which happens a lot when looking top-down.\n// Unstable sorting makes label placement unstable at tile borders, leading to\n// flickering.\nconst compareDistances = (a: TileKeyEntry, b: TileKeyEntry) => {\n    const distanceDiff = a.distance - b.distance;\n\n    // Take care or numerical precision issues\n    const minDiff = (a.distance + b.distance) * 0.000001;\n\n    return Math.abs(distanceDiff) < minDiff\n        ? a.tileKey.mortonCode() - b.tileKey.mortonCode()\n        : distanceDiff;\n};\n\n/**\n * Manages visible {@link Tile}s for {@link MapView}.\n *\n * Responsible for election of rendered tiles:\n *  - quad-tree traversal\n *  - frustum culling\n *  - sorting tiles by relevance (visible area) to prioritize load\n *  - limiting number of visible tiles\n *  - caching tiles\n *  - searching cache to replace visible but yet empty tiles with already loaded siblings in nearby\n *    zoom levels\n */\nexport class VisibleTileSet {\n    dataSourceTileList: DataSourceTileList[] = [];\n    allVisibleTilesLoaded: boolean = false;\n\n    private readonly m_cameraOverride = new THREE.PerspectiveCamera();\n    private readonly m_dataSourceCache: DataSourceCache;\n    private m_viewRange: ViewRanges = {\n        near: 0.1,\n        far: Infinity,\n        minimum: 0.1,\n        maximum: Infinity\n    };\n\n    // Maps morton codes to a given Tile, used to find overlapping Tiles. We only need to have this\n    // for a single TilingScheme, i.e. that of the BackgroundDataSource.\n    private readonly m_coveringMap = new Map<number, Tile>();\n\n    private m_resourceComputationType: ResourceComputationType =\n        ResourceComputationType.EstimationInMb;\n\n    constructor(\n        private readonly m_frustumIntersection: FrustumIntersection,\n        private readonly m_tileGeometryManager: TileGeometryManager,\n        public options: VisibleTileSetOptions,\n        private readonly m_taskQueue: TaskQueue\n    ) {\n        this.options = options;\n        this.options.maxTilesPerFrame = Math.floor(this.options.maxTilesPerFrame ?? 0);\n        this.m_resourceComputationType =\n            options.resourceComputationType === undefined\n                ? ResourceComputationType.EstimationInMb\n                : options.resourceComputationType;\n        this.m_dataSourceCache = new DataSourceCache(\n            this.options.tileCacheSize,\n            this.m_resourceComputationType\n        );\n    }\n\n    /**\n     * Returns cache size.\n     */\n    getDataSourceCacheSize(): number {\n        return this.options.tileCacheSize;\n    }\n\n    /**\n     * Sets cache size.\n     *\n     * @param size - cache size\n     * @param computationType - Optional value specifying the way a {@link Tile}s cache usage is\n     *      computed, either based on size in MB (mega bytes) or in number of tiles. Defaults to\n     *      `ResourceComputationType.EstimationInMb`.\n     */\n    setDataSourceCacheSize(\n        size: number,\n        computationType: ResourceComputationType = ResourceComputationType.EstimationInMb\n    ): void {\n        this.options.tileCacheSize = size;\n        // This effectively invalidates DataSourceCache\n        this.resourceComputationType = computationType;\n    }\n\n    /**\n     * Retrieves maximum number of visible tiles.\n     */\n    getNumberOfVisibleTiles() {\n        return this.options.maxVisibleDataSourceTiles;\n    }\n\n    /**\n     * Sets maximum number of visible tiles.\n     *\n     * @param size - size of visible tiles array\n     */\n    setNumberOfVisibleTiles(size: number) {\n        this.options.maxVisibleDataSourceTiles = size;\n    }\n\n    /**\n     * Gets the maximum number of tiles that can be added to the scene per frame\n     * @beta\n     * @internal\n     */\n    get maxTilesPerFrame(): number {\n        return this.options.maxTilesPerFrame;\n    }\n\n    /**\n     * Gets the maximum number of tiles that can be added to the scene per frame\n     * @beta\n     * @internal\n     * @param value\n     */\n    set maxTilesPerFrame(value: number) {\n        if (value < 0) {\n            throw new Error(\"Invalid value, this will result in no tiles ever showing\");\n        }\n        this.options.maxTilesPerFrame = Math.floor(value);\n    }\n\n    /**\n     * The way the cache usage is computed, either based on size in MB (mega bytes) or in number of\n     * tiles.\n     */\n    get resourceComputationType(): ResourceComputationType {\n        return this.m_resourceComputationType;\n    }\n\n    /**\n     * Sets the way tile cache is managing its elements.\n     *\n     * Cache may be either keeping number of elements stored or the memory consumed by them.\n     *\n     * @param computationType - Type of algorith used in cache for checking full saturation,\n     * may be counting number of elements or memory consumed by them.\n     */\n    set resourceComputationType(computationType: ResourceComputationType) {\n        this.m_resourceComputationType = computationType;\n        this.m_dataSourceCache.setCapacity(this.options.tileCacheSize, computationType);\n    }\n\n    /**\n     * Evaluate frustum near/far clip planes and visibility ranges.\n     */\n    updateClipPlanes(maxElevation?: number, minElevation?: number): ViewRanges {\n        if (maxElevation !== undefined) {\n            this.options.clipPlanesEvaluator.maxElevation = maxElevation;\n        }\n        if (minElevation !== undefined) {\n            this.options.clipPlanesEvaluator.minElevation = minElevation;\n        }\n        const { camera, projection, elevationProvider } = this.m_frustumIntersection.mapView;\n        this.m_viewRange = this.options.clipPlanesEvaluator.evaluateClipPlanes(\n            camera,\n            projection,\n            elevationProvider\n        );\n        return this.m_viewRange;\n    }\n\n    /**\n     * Calculates a new set of visible tiles.\n     * @param storageLevel - The camera storage level, see {@link MapView.storageLevel}.\n     * @param zoomLevel - The camera zoom level.\n     * @param dataSources - The data sources for which the visible tiles will be calculated.\n     * @param elevationRangeSource - Source of elevation range data if any.\n     * @returns view ranges and their status since last update (changed or not).\n     */\n    updateRenderList(\n        storageLevel: number,\n        zoomLevel: number,\n        dataSources: DataSource[],\n        frameNumber: number,\n        elevationRangeSource?: ElevationRangeSource\n    ): { viewRanges: ViewRanges; viewRangesChanged: boolean } {\n        let allVisibleTilesLoaded: boolean = true;\n        // This isn't really const, because we pass by ref to the methods below.\n        const newTilesPerFrame = 0;\n\n        const visibleTileKeysResult = this.getVisibleTileKeysForDataSources(\n            zoomLevel,\n            dataSources,\n            elevationRangeSource\n        );\n        this.dataSourceTileList = [];\n        this.m_coveringMap.clear();\n        for (const { dataSource, visibleTileKeys } of visibleTileKeysResult.tileKeys) {\n            visibleTileKeys.sort(compareDistances);\n\n            // Create actual tiles only for the allowed number of visible tiles\n            const dataZoomLevel = dataSource.getDataZoomLevel(zoomLevel);\n\n            const visibleResult = this.processVisibleTiles(\n                visibleTileKeys,\n                dataSource,\n                frameNumber,\n                {\n                    newTilesPerFrame\n                },\n                true\n            );\n            const dependentResult = this.processVisibleTiles(\n                visibleResult.dependentTiles,\n                dataSource,\n                frameNumber,\n                {\n                    newTilesPerFrame\n                },\n                false\n            );\n            // creates geometry if not yet available\n            this.m_tileGeometryManager.updateTiles(visibleResult.visibleTiles);\n            this.m_tileGeometryManager.updateTiles(dependentResult.visibleTiles);\n            // used to actually render the tiles or find alternatives for incomplete tiles\n            this.dataSourceTileList.push({\n                dataSource,\n                storageLevel,\n                zoomLevel: dataZoomLevel,\n                allVisibleTileLoaded:\n                    visibleResult.allDataSourceTilesLoaded &&\n                    dependentResult.allDataSourceTilesLoaded,\n                numTilesLoading: visibleResult.numTilesLoading + dependentResult.numTilesLoading,\n                visibleTiles: [...visibleResult.visibleTiles, ...dependentResult.visibleTiles],\n                renderedTiles: new Map<number, Tile>()\n            });\n            allVisibleTilesLoaded = allVisibleTilesLoaded && visibleResult.allDataSourceTilesLoaded;\n        }\n\n        this.allVisibleTilesLoaded =\n            allVisibleTilesLoaded && visibleTileKeysResult.allBoundingBoxesFinal;\n\n        this.populateRenderedTiles();\n\n        this.forEachCachedTile(tile => {\n            // Remove all tiles that are still being loaded, but are no longer visible. They have to\n            // be reloaded when they become visible again. Hopefully, they are still in the browser\n            // cache by then.\n            if (!tile.isVisible && !tile.allGeometryLoaded) {\n                // The internal TileLoader is cancelled automatically when the Tile is disposed.\n                this.disposeTile(tile);\n            }\n        });\n\n        this.m_dataSourceCache.shrinkToCapacity();\n\n        let minElevation: number | undefined;\n        let maxElevation: number | undefined;\n        this.dataSourceTileList.forEach(renderListEntry => {\n            // Calculate min/max elevation from every data source tiles,\n            // data sources without elevationRangeSource will contribute to\n            // values with zero levels for both elevations.\n            const tiles = renderListEntry.renderedTiles;\n            tiles.forEach(tile => {\n                tile.update(renderListEntry.zoomLevel);\n                minElevation = MathUtils.min2(minElevation, tile.geoBox.minAltitude);\n                maxElevation = MathUtils.max2(maxElevation, tile.geoBox.maxAltitude);\n            });\n        });\n\n        if (minElevation === undefined) {\n            minElevation = 0;\n        }\n        if (maxElevation === undefined) {\n            maxElevation = 0;\n        }\n        // If clip planes evaluator depends on the tiles elevation re-calculate\n        // frustum planes and update the camera near/far plane distances.\n        let viewRangesChanged: boolean = false;\n        const oldViewRanges = this.m_viewRange;\n        const newViewRanges = this.updateClipPlanes(maxElevation, minElevation);\n        viewRangesChanged = viewRangesEqual(newViewRanges, oldViewRanges) === false;\n\n        return {\n            viewRanges: newViewRanges,\n            viewRangesChanged\n        };\n    }\n\n    /**\n     * Gets the tile corresponding to the given data source, key and offset, creating it if\n     * necessary.\n     *\n     * @param dataSource - The data source the tile belongs to.\n     * @param tileKey - The key identifying the tile.\n     * @param offset - Tile offset.\n     * @param frameNumber - Frame in which the tile was requested\n     * @return The tile if it was found or created, undefined otherwise.\n     */\n    getTile(\n        dataSource: DataSource,\n        tileKey: TileKey,\n        offset: number,\n        frameNumber: number\n    ): Tile | undefined {\n        const cacheOnly = false;\n        return this.getTileImpl(dataSource, tileKey, offset, cacheOnly, frameNumber);\n    }\n\n    /**\n     * Gets the tile corresponding to the given data source, key and offset from the cache.\n     *\n     * @param dataSource - The data source the tile belongs to.\n     * @param tileKey - The key identifying the tile.\n     * @param offset - Tile offset.\n     * @param frameNumber - Frame in which the tile was requested\n     * @return The tile if found in cache, undefined otherwise.\n     */\n    getCachedTile(\n        dataSource: DataSource,\n        tileKey: TileKey,\n        offset: number,\n        frameNumber: number\n    ): Tile | undefined {\n        assert(dataSource.cacheable);\n        const cacheOnly = true;\n        return this.getTileImpl(dataSource, tileKey, offset, cacheOnly, frameNumber);\n    }\n\n    /**\n     * Gets the tile corresponding to the given data source, key and offset from the rendered tiles.\n     *\n     * @param dataSource - The data source the tile belongs to.\n     * @param tileKey - The key identifying the tile.\n     * @param offset - Tile offset.\n     * @return The tile if found among the rendered tiles, undefined otherwise.\n     */\n    getRenderedTile(\n        dataSource: DataSource,\n        tileKey: TileKey,\n        offset: number = 0\n    ): Tile | undefined {\n        const dataSourceVisibleTileList = this.dataSourceTileList.find(list => {\n            return list.dataSource === dataSource;\n        });\n\n        if (dataSourceVisibleTileList === undefined) {\n            return undefined;\n        }\n\n        return dataSourceVisibleTileList.renderedTiles.get(\n            TileKeyUtils.getKeyForTileKeyAndOffset(tileKey, offset)\n        );\n    }\n\n    /**\n     * Gets the tile corresponding to the given data source and location from the rendered tiles.\n     *\n     * @param dataSource - The data source the tile belongs to.\n     * @param geoPoint - The geolocation included within the tile.\n     * @return The tile if found among the rendered tiles, undefined otherwise.\n     */\n    getRenderedTileAtLocation(\n        dataSource: DataSource,\n        geoPoint: GeoCoordinates,\n        offset: number = 0\n    ): Tile | undefined {\n        const dataSourceVisibleTileList = this.dataSourceTileList.find(list => {\n            return list.dataSource === dataSource;\n        });\n\n        if (dataSourceVisibleTileList === undefined) {\n            return undefined;\n        }\n\n        const tilingScheme = dataSource.getTilingScheme();\n        const visibleLevel = dataSourceVisibleTileList.zoomLevel;\n        const visibleTileKey = tilingScheme.getTileKey(geoPoint, visibleLevel);\n\n        if (!visibleTileKey) {\n            return undefined;\n        }\n\n        let tile = dataSourceVisibleTileList.renderedTiles.get(\n            TileKeyUtils.getKeyForTileKeyAndOffset(visibleTileKey, offset)\n        );\n\n        if (tile !== undefined) {\n            return tile;\n        }\n\n        const { searchLevelsUp, searchLevelsDown } = this.getSearchDirection(\n            dataSource,\n            visibleLevel\n        );\n\n        let parentTileKey = visibleTileKey;\n        for (let levelOffset = 1; levelOffset <= searchLevelsUp; ++levelOffset) {\n            parentTileKey = parentTileKey.parent();\n\n            tile = dataSourceVisibleTileList.renderedTiles.get(\n                TileKeyUtils.getKeyForTileKeyAndOffset(parentTileKey, offset)\n            );\n            if (tile !== undefined) {\n                return tile;\n            }\n        }\n\n        const worldPoint = tilingScheme.projection.projectPoint(geoPoint);\n\n        for (let levelOffset = 1; levelOffset <= searchLevelsDown; ++levelOffset) {\n            const childLevel = visibleLevel + levelOffset;\n            const childTileKey = TileKeyUtils.worldCoordinatesToTileKey(\n                tilingScheme,\n                worldPoint,\n                childLevel\n            );\n            if (childTileKey) {\n                tile = dataSourceVisibleTileList.renderedTiles.get(\n                    TileKeyUtils.getKeyForTileKeyAndOffset(childTileKey, offset)\n                );\n\n                if (tile !== undefined) {\n                    return tile;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Removes all internal bookkeeping entries and cache related to specified datasource.\n     *\n     * Called by {@link MapView} when {@link DataSource} has been removed from {@link MapView}.\n     */\n    removeDataSource(dataSource: DataSource) {\n        this.clearTileCache(dataSource);\n        this.dataSourceTileList = this.dataSourceTileList.filter(\n            tileList => tileList.dataSource !== dataSource\n        );\n    }\n\n    /**\n     * Clear the tile cache.\n     *\n     * Remove the {@link Tile} objects created by cacheable {@link DataSource}.\n     * If a {@link DataSource} name is\n     * provided, this method restricts the eviction\n     * the {@link DataSource} with the given name.\n     *\n     * @param dataSourceName - The name of the {@link DataSource}.\n     * @param filter Optional tile filter\n     */\n    clearTileCache(dataSource?: DataSource, filter?: (tile: Tile) => boolean) {\n        if (dataSource !== undefined) {\n            this.m_dataSourceCache.evictSelected((tile: Tile, _) => {\n                return (\n                    tile.dataSource === dataSource && (filter !== undefined ? filter(tile) : true)\n                );\n            });\n        } else if (filter !== undefined) {\n            this.m_dataSourceCache.evictSelected(filter);\n        } else {\n            this.m_dataSourceCache.evictAll();\n        }\n    }\n\n    /**\n     * Visit each tile in visible, rendered, and cached sets.\n     *\n     *  * Visible and temporarily rendered tiles will be marked for update and retained.\n     *  * Cached but not rendered/visible will be evicted.\n     *\n     * @param dataSource - If passed, only the tiles from this {@link DataSource} instance\n     *      are processed. If `undefined`, tiles from all {@link DataSource}s are processed.\n     * @param filter Optional tile filter\n     */\n    markTilesDirty(dataSource?: DataSource, filter?: (tile: Tile) => boolean) {\n        if (dataSource === undefined) {\n            this.dataSourceTileList.forEach(renderListEntry => {\n                this.markDataSourceTilesDirty(renderListEntry, filter);\n            });\n        } else {\n            const renderListEntry = this.dataSourceTileList.find(e => e.dataSource === dataSource);\n            if (renderListEntry === undefined) {\n                return;\n            }\n            this.markDataSourceTilesDirty(renderListEntry, filter);\n        }\n    }\n\n    /**\n     * Dispose tiles that are marked for removal by {@link @here/harp-lrucache#LRUCache} algorithm.\n     */\n    disposePendingTiles() {\n        this.m_dataSourceCache.disposeTiles();\n    }\n\n    /**\n     * Process callback function [[fun]] with each visible tile in set.\n     *\n     * @param fun - The callback function to be called.\n     */\n    forEachVisibleTile(fun: (tile: Tile) => void): void {\n        for (const listEntry of this.dataSourceTileList) {\n            listEntry.renderedTiles.forEach(fun);\n        }\n    }\n\n    /**\n     * Process callback function [[fun]] with each tile in the cache.\n     *\n     * Optional [[dataSource]] parameter limits processing to the tiles that belongs to\n     * DataSource passed in.\n     *\n     * @param fun - The callback function to be called.\n     * @param dataSource - The optional DataSource reference for tiles selection.\n     */\n    forEachCachedTile(fun: (tile: Tile) => void, dataSource?: DataSource): void {\n        this.m_dataSourceCache.forEach((tile, _) => fun(tile), dataSource);\n    }\n\n    /**\n     * Dispose a `Tile` from cache, 'dispose()' is also called on the tile to free its resources.\n     */\n    disposeTile(tile: Tile): void {\n        // TODO: Consider using evict here!\n        this.m_dataSourceCache.delete(tile);\n        tile.dispose();\n    }\n\n    // Requests the tiles using the tilekeys from the DataSource and returns them, including whether\n    // all tiles were loaded and how many are loading.\n    private processVisibleTiles(\n        visibleTileKeys: TileKeyEntry[],\n        dataSource: DataSource,\n        frameNumber: number,\n        // Must be passed by reference\n        refs: {\n            newTilesPerFrame: number;\n        },\n        processDependentTiles: boolean\n    ): {\n        allDataSourceTilesLoaded: boolean;\n        numTilesLoading: number;\n        visibleTiles: Tile[];\n        dependentTiles: TileKeyEntry[];\n    } {\n        let allDataSourceTilesLoaded = true;\n        let numTilesLoading = 0;\n        const visibleTiles: Tile[] = [];\n        const dependentTiles: TileKeyEntry[] = [];\n        for (\n            let i = 0;\n            i < visibleTileKeys.length &&\n            visibleTiles.length < this.options.maxVisibleDataSourceTiles;\n            i++\n        ) {\n            const tileEntry = visibleTileKeys[i];\n            const tile = this.getTile(dataSource, tileEntry.tileKey, tileEntry.offset, frameNumber);\n            if (tile === undefined) {\n                continue;\n            }\n            visibleTiles.push(tile);\n\n            allDataSourceTilesLoaded = allDataSourceTilesLoaded && tile.allGeometryLoaded;\n            if (!tile.allGeometryLoaded) {\n                numTilesLoading++;\n            } else {\n                // If this tile's data source is \"covering\" then other tiles beneath it have\n                // their rendering skipped, see [[Tile.willRender]].\n                this.skipOverlappedTiles(dataSource, tile);\n                if (this.processDelayTileRendering(tile, refs.newTilesPerFrame, frameNumber)) {\n                    refs.newTilesPerFrame++;\n                }\n            }\n            // Update the visible area of the tile. This is used for those tiles that are\n            // currently loaded and are waiting to be decoded to sort the jobs by area.\n            tile.visibleArea = tileEntry.area;\n            tile.elevationRange = tileEntry.elevationRange ?? { minElevation: 0, maxElevation: 0 };\n\n            if (processDependentTiles) {\n                // Add any dependent tileKeys if not already visible. Consider to optimize with a\n                // Set if this proves to be a bottleneck (because of O(n^2) search). Given the fact\n                // that dependencies are rare and used for non tiled data, this shouldn't be a\n                // problem.\n                for (const tileKey of tile.dependencies) {\n                    if (\n                        visibleTileKeys.find(\n                            tileKeyEntry =>\n                                tileKeyEntry.tileKey.mortonCode() === tileKey.mortonCode()\n                        ) === undefined &&\n                        // Check that we haven't already added this TileKey\n                        dependentTiles.find(\n                            tileKeyEntry =>\n                                tileKeyEntry.tileKey.mortonCode() === tileKey.mortonCode()\n                        ) === undefined\n                    ) {\n                        dependentTiles.push(new TileKeyEntry(tileKey, 0));\n                    }\n                }\n            }\n        }\n\n        return {\n            allDataSourceTilesLoaded,\n            numTilesLoading,\n            visibleTiles,\n            dependentTiles\n        };\n    }\n\n    // Processes if the tile should delay its rendering, returns if the tile is new, which is needed\n    // to count how many tiles are generated per frame.\n    private processDelayTileRendering(\n        tile: Tile,\n        newTilesPerFrame: number,\n        frameNumber: number\n    ): boolean {\n        let isNewTile: boolean = false;\n        if (\n            // if set to 0, it will ignore the limit and upload all available\n            this.options.maxTilesPerFrame !== 0 &&\n            newTilesPerFrame > this.options.maxTilesPerFrame &&\n            //if the tile was already visible last frame dont delay it\n            !(tile.frameNumLastVisible === frameNumber - 1)\n        ) {\n            tile.delayRendering = true;\n            tile.mapView.update();\n        } else {\n            if (tile.frameNumVisible < 0) {\n                // Store the fist frame the tile became visible.\n                tile.frameNumVisible = frameNumber;\n                isNewTile = true;\n            }\n            tile.numFramesVisible++;\n            tile.delayRendering = false;\n        }\n        return isNewTile;\n    }\n\n    /**\n     * Skips rendering of tiles that are overlapped. The overlapping {@link Tile} comes from a\n     * {@link DataSource} which is fully covering, i.e. there it is fully opaque.\n     **/\n    private skipOverlappedTiles(dataSource: DataSource, tile: Tile) {\n        if (this.options.projection.type === ProjectionType.Spherical) {\n            // HARP-7899, currently the globe has no background planes in the tiles (it relies on\n            // the BackgroundDataSource), because the LOD mismatches, hence disabling for globe.\n            return;\n        }\n        if (dataSource.isFullyCovering()) {\n            const key = tile.uniqueKey;\n            const entry = this.m_coveringMap.get(key);\n            if (entry === undefined) {\n                // We need to reset the flag so that if the covering datasource is disabled, that\n                // the tiles beneath then start to render.\n                tile.skipRendering = false;\n                this.m_coveringMap.set(key, tile);\n            } else {\n                // Skip the Tile if either the stored entry or the tile to consider is from the\n                // [[BackgroundDataSource]]\n                if (entry.dataSource instanceof BackgroundDataSource) {\n                    entry.skipRendering = true;\n                } else if (dataSource instanceof BackgroundDataSource) {\n                    tile.skipRendering = true;\n                }\n            }\n        }\n    }\n\n    // Returns the search direction and the number of levels up / down that can be searched.\n    private getSearchDirection(\n        dataSource: DataSource,\n        visibleLevel: number\n    ): {\n        searchDirection: SearchDirection;\n        searchLevelsUp: number;\n        searchLevelsDown: number;\n    } {\n        const searchLevelsUp = Math.min(\n            this.options.quadTreeSearchDistanceUp,\n            Math.max(0, visibleLevel - dataSource.minDataLevel)\n        );\n        const searchLevelsDown = Math.min(\n            this.options.quadTreeSearchDistanceDown,\n            Math.max(0, dataSource.maxDataLevel - visibleLevel)\n        );\n        const searchDirection =\n            searchLevelsDown > 0 && searchLevelsUp > 0\n                ? SearchDirection.BOTH\n                : searchLevelsDown > 0\n                ? SearchDirection.DOWN\n                : searchLevelsUp > 0\n                ? SearchDirection.UP\n                : SearchDirection.NONE;\n        return { searchDirection, searchLevelsUp, searchLevelsDown };\n    }\n\n    /**\n     * Populates the list of tiles to render, see \"renderedTiles\". Tiles that are loaded and which\n     * are an exact match are added straight to the list, tiles that are still loading are replaced\n     * with tiles in the cache that are either a parent or child of the requested tile. This helps\n     * to prevent flickering when zooming in / out. The distance to search is based on the options\n     * [[quadTreeSearchDistanceDown]] and [[quadTreeSearchDistanceUp]].\n     *\n     * Each {@link DataSource} can also switch this behaviour on / off using the\n     * [[allowOverlappingTiles]] flag.\n     *\n     */\n    private populateRenderedTiles() {\n        this.dataSourceTileList.forEach(renderListEntry => {\n            const renderedTiles = renderListEntry.renderedTiles;\n\n            // Tiles for which we need to fall(back/forward) to.\n            const incompleteTiles: number[] = [];\n\n            // Populate the list of tiles which can be shown (\"renderedTiles\"), and the list of\n            // tiles that are incomplete, and for which we search for an alternative\n            // (\"incompleteTiles\").\n            renderListEntry.visibleTiles.forEach(tile => {\n                tile.levelOffset = 0;\n                if (tile.hasGeometry && !tile.delayRendering) {\n                    renderedTiles.set(tile.uniqueKey, tile);\n                } else {\n                    // if dataSource supports cache and it was existing before this render\n                    // then enable searching for loaded tiles in cache\n                    incompleteTiles.push(tile.uniqueKey);\n                }\n            });\n\n            const dataSource = renderListEntry.dataSource;\n            if (incompleteTiles.length === 0 || dataSource.allowOverlappingTiles === false) {\n                // Either all tiles are loaded or the datasource doesn't support using cached tiles\n                // from other levels.\n                return;\n            }\n\n            const dataZoomLevel = renderListEntry.zoomLevel;\n            const { searchDirection } = this.getSearchDirection(dataSource, dataZoomLevel);\n\n            // Minor optimization for the fallback search, only check parent tiles once, otherwise\n            // the recursive algorithm checks all parent tiles multiple times, the key is the code\n            // of the tile that is checked and the value is whether a parent was found or not.\n            const checkedTiles = new Map<number, boolean>();\n            // Iterate over incomplete (not loaded tiles) and find their parents or children that\n            // are in cache that can be rendered temporarily until tile is loaded. Note, we favour\n            // falling back to parent tiles rather than children.\n            for (const tileKeyCode of incompleteTiles) {\n                if (\n                    searchDirection === SearchDirection.BOTH ||\n                    searchDirection === SearchDirection.UP\n                ) {\n                    if (\n                        this.findUp(\n                            tileKeyCode,\n                            dataZoomLevel,\n                            renderedTiles,\n                            checkedTiles,\n                            dataSource\n                        )\n                    ) {\n                        // Continue to next entry so we don't search down.\n                        continue;\n                    }\n                }\n\n                if (\n                    searchDirection === SearchDirection.BOTH ||\n                    searchDirection === SearchDirection.DOWN\n                ) {\n                    this.findDown(tileKeyCode, dataZoomLevel, renderedTiles, dataSource);\n                }\n            }\n        });\n    }\n\n    private findDown(\n        tileKeyCode: number,\n        dataZoomLevel: number,\n        renderedTiles: Map<number, Tile>,\n        dataSource: DataSource\n    ) {\n        const { offset, mortonCode } = TileKeyUtils.extractOffsetAndMortonKeyFromKey(tileKeyCode);\n        const tileKey = TileKey.fromMortonCode(mortonCode);\n\n        const tilingScheme = dataSource.getTilingScheme();\n        for (const childTileKey of tilingScheme.getSubTileKeys(tileKey)) {\n            const childTileCode = TileKeyUtils.getKeyForTileKeyAndOffset(childTileKey, offset);\n            const childTile = this.m_dataSourceCache.get(\n                childTileKey.mortonCode(),\n                offset,\n                dataSource\n            );\n\n            const nextLevelDiff = Math.abs(childTileKey.level - dataZoomLevel);\n            if (childTile !== undefined && childTile.hasGeometry && !childTile.delayRendering) {\n                //childTile has geometry and was/can be uploaded to the GPU,\n                //so we can use it as fallback\n                renderedTiles.set(childTileCode, childTile);\n                childTile.levelOffset = nextLevelDiff;\n                continue;\n            }\n\n            // Recurse down until the max distance is reached.\n            if (nextLevelDiff < this.options.quadTreeSearchDistanceDown) {\n                this.findDown(childTileCode, dataZoomLevel, renderedTiles, dataSource);\n            }\n        }\n    }\n\n    /**\n     * Returns true if a tile was found in the cache which is a parent\n     * @param tileKeyCode - Morton code of the current tile that should be searched for.\n     * @param dataZoomLevel - The current data zoom level of tiles that are to be displayed.\n     * @param renderedTiles - The list of tiles that are shown to the user.\n     * @param checkedTiles - Used to map a given code to a boolean which tells us if an ancestor is\n     * displayed or not.\n     * @param dataSource - The provider of tiles.\n     * @returns Whether a parent tile exists.\n     */\n    private findUp(\n        tileKeyCode: number,\n        dataZoomLevel: number,\n        renderedTiles: Map<number, Tile>,\n        checkedTiles: Map<number, boolean>,\n        dataSource: DataSource\n    ): boolean {\n        const parentCode = TileKeyUtils.getParentKeyFromKey(tileKeyCode);\n        // Check if another sibling has already added the parent.\n        if (renderedTiles.get(parentCode) !== undefined) {\n            return true;\n        }\n        const exists = checkedTiles.get(parentCode)!;\n        if (exists !== undefined) {\n            return exists;\n        }\n\n        const { offset, mortonCode } = TileKeyUtils.extractOffsetAndMortonKeyFromKey(parentCode);\n        const parentTile = this.m_dataSourceCache.get(mortonCode, offset, dataSource);\n        const parentTileKey = parentTile ? parentTile.tileKey : TileKey.fromMortonCode(mortonCode);\n        const nextLevelDiff = Math.abs(dataZoomLevel - parentTileKey.level);\n        if (parentTile !== undefined && parentTile.hasGeometry && !parentTile.delayRendering) {\n            checkedTiles.set(parentCode, true);\n            // parentTile has geometry, so can be reused as fallback\n            renderedTiles.set(parentCode, parentTile);\n\n            // We want to have parent tiles as -ve, hence the minus.\n            parentTile.levelOffset = -nextLevelDiff;\n\n            return true;\n        } else {\n            checkedTiles.set(parentCode, false);\n        }\n\n        // Recurse up until the max distance is reached or we go to the parent of all parents.\n        if (nextLevelDiff < this.options.quadTreeSearchDistanceUp && parentTileKey.level !== 0) {\n            const foundUp = this.findUp(\n                parentCode,\n                dataZoomLevel,\n                renderedTiles,\n                checkedTiles,\n                dataSource\n            );\n            // If there was a tile upstream found, then add it to the list, so we can\n            // early skip checkedTiles.\n            checkedTiles.set(parentCode, foundUp);\n            if (foundUp) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private getTileImpl(\n        dataSource: DataSource,\n        tileKey: TileKey,\n        offset: number,\n        cacheOnly: boolean,\n        frameNumber: number\n    ): Tile | undefined {\n        function touchTile(tileToUpdate: Tile) {\n            // Keep the tile from being removed from the cache.\n            tileToUpdate.frameNumLastRequested = frameNumber;\n        }\n\n        if (!dataSource.cacheable && !cacheOnly) {\n            const resultTile = dataSource.getTile(tileKey, true);\n            if (resultTile !== undefined) {\n                this.addToTaskQueue(resultTile);\n                touchTile(resultTile);\n            }\n            return resultTile;\n        }\n\n        const tileCache = this.m_dataSourceCache;\n        let tile = tileCache.get(tileKey.mortonCode(), offset, dataSource);\n\n        if (tile !== undefined && tile.offset === offset) {\n            touchTile(tile);\n            return tile;\n        }\n\n        if (cacheOnly) {\n            return undefined;\n        }\n\n        tile = dataSource.getTile(tileKey, true);\n        // TODO: Update all tile information including area, min/max elevation from TileKeyEntry\n        if (tile !== undefined) {\n            this.addToTaskQueue(tile);\n            tile.offset = offset;\n            touchTile(tile);\n            tileCache.set(tileKey.mortonCode(), offset, dataSource, tile);\n        }\n        return tile;\n    }\n\n    private addToTaskQueue(tile: Tile) {\n        this.m_taskQueue.add({\n            execute: tile.load.bind(tile),\n            group: TileTaskGroups.FETCH_AND_DECODE,\n            getPriority: () => {\n                return tile?.tileLoader?.priority ?? 0;\n            },\n            isExpired: () => {\n                return !tile?.isVisible;\n            },\n            estimatedProcessTime: () => {\n                return 1;\n            }\n        });\n    }\n\n    private markDataSourceTilesDirty(\n        renderListEntry: DataSourceTileList,\n        filter?: (tile: Tile) => boolean\n    ) {\n        const dataSourceCache = this.m_dataSourceCache;\n        const retainedTiles: Set<TileCacheId> = new Set();\n\n        const markTileDirty = (tile: Tile) => {\n            const tileKey = DataSourceCache.getKeyForTile(tile);\n            if (!retainedTiles.has(tileKey)) {\n                retainedTiles.add(tileKey);\n                // We need to cancel the loader first because if we don't then the call to\n                // tileLoader.loadAndDecode() inside Tile::load will return the existing promise (if\n                // the tile is still loading) and not re-request the tile data from the provider as\n                // required.\n                tile.tileLoader?.cancel();\n                this.addToTaskQueue(tile);\n            }\n        };\n\n        renderListEntry.visibleTiles.forEach(tile => {\n            if (filter === undefined || filter(tile)) {\n                markTileDirty(tile);\n            }\n        });\n        renderListEntry.renderedTiles.forEach(tile => {\n            if (filter === undefined || filter(tile)) {\n                markTileDirty(tile);\n            }\n        });\n\n        dataSourceCache.forEach((tile, key) => {\n            if ((filter === undefined || filter(tile)) && !retainedTiles.has(key)) {\n                dataSourceCache.deleteByKey(key);\n                tile.dispose();\n            }\n        }, renderListEntry.dataSource);\n    }\n\n    // Computes the visible tile keys for each supplied data source.\n    private getVisibleTileKeysForDataSources(\n        zoomLevel: number,\n        dataSources: DataSource[],\n        elevationRangeSource: ElevationRangeSource | undefined\n    ): {\n        tileKeys: Array<{ dataSource: DataSource; visibleTileKeys: TileKeyEntry[] }>;\n        allBoundingBoxesFinal: boolean;\n    } {\n        const tileKeys = Array<{\n            dataSource: DataSource;\n            visibleTileKeys: TileKeyEntry[];\n        }>();\n        let allBoundingBoxesFinal: boolean = true;\n\n        if (dataSources.length === 0) {\n            return { tileKeys, allBoundingBoxesFinal };\n        }\n\n        const dataSourceBuckets = new Map<TilingScheme, DataSource[]>();\n        dataSources.forEach(dataSource => {\n            const tilingScheme = dataSource.getTilingScheme();\n            const bucket = dataSourceBuckets.get(tilingScheme);\n            if (bucket === undefined) {\n                dataSourceBuckets.set(tilingScheme, [dataSource]);\n            } else {\n                bucket.push(dataSource);\n            }\n        });\n\n        // If elevation is to be taken into account extend view frustum:\n        // (near ~0, far: maxVisibilityRange) that allows to consider tiles that\n        // are far below ground plane and high enough to intersect the frustum.\n        if (elevationRangeSource !== undefined) {\n            this.m_cameraOverride.copy(this.m_frustumIntersection.camera);\n            this.m_cameraOverride.near = Math.min(\n                this.m_cameraOverride.near,\n                this.m_viewRange.minimum\n            );\n            this.m_cameraOverride.far = Math.max(\n                this.m_cameraOverride.far,\n                this.m_viewRange.maximum\n            );\n            this.m_cameraOverride.updateProjectionMatrix();\n            this.m_frustumIntersection.updateFrustum(this.m_cameraOverride.projectionMatrix);\n        } else {\n            this.m_frustumIntersection.updateFrustum();\n        }\n\n        // For each bucket of data sources with same tiling scheme, calculate frustum intersection\n        // once using the maximum display level.\n        for (const [tilingScheme, bucket] of dataSourceBuckets) {\n            const zoomLevels = bucket.map(dataSource => dataSource.getDataZoomLevel(zoomLevel));\n            const result = this.m_frustumIntersection.compute(\n                tilingScheme,\n                elevationRangeSource,\n                zoomLevels,\n                bucket\n            );\n\n            allBoundingBoxesFinal = allBoundingBoxesFinal && result.calculationFinal;\n\n            for (const dataSource of bucket) {\n                // For each data source check what tiles from the intersection should be rendered\n                // at this zoom level.\n                const visibleTileKeys: TileKeyEntry[] = [];\n                const dataZoomLevel = dataSource.getDataZoomLevel(zoomLevel);\n                for (const tileKeyEntry of result.tileKeyEntries.get(dataZoomLevel)!.values()) {\n                    if (dataSource.canGetTile(dataZoomLevel, tileKeyEntry.tileKey)) {\n                        visibleTileKeys.push(tileKeyEntry);\n                    }\n                }\n                tileKeys.push({ dataSource, visibleTileKeys });\n            }\n        }\n\n        return { tileKeys, allBoundingBoxesFinal };\n    }\n}\n\nfunction viewRangesEqual(a: ViewRanges, b: ViewRanges) {\n    return (\n        a.far === b.far && a.maximum === b.maximum && a.minimum === b.minimum && a.near === b.near\n    );\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    DecodedTile,\n    DecoderOptions,\n    getProjectionName,\n    ITileDecoder,\n    OptionsMap,\n    RequestController,\n    TileInfo,\n    WorkerDecoderProtocol,\n    WorkerServiceProtocol\n} from \"@here/harp-datasource-protocol\";\nimport { Projection, TileKey } from \"@here/harp-geoutils\";\n\nimport { ConcurrentWorkerSet } from \"./ConcurrentWorkerSet\";\n\n/**\n * Identifier of next decoder worker-service. Used to ensure uniqueness of service ids of decoders\n * dedicated to different datasources.\n */\nlet nextUniqueServiceId = 0;\n\n/**\n * Decoder based on [[ConcurrentWorkerSet]].\n *\n * Decodes tiles using workers running in separate contexts (also known as `WebWorkers`):\n * - connection establishment,\n * - sends decode requests,\n * - configuration.\n */\nexport class WorkerBasedDecoder implements ITileDecoder {\n    private readonly serviceId: string;\n    private m_serviceCreated: boolean = false;\n\n    /**\n     * Creates a new `WorkerBasedDecoder`.\n     *\n     * @param workerSet - [[ConcurrentWorkerSet]] this tiler will live in.\n     * @param decoderServiceType - Service type identifier.\n     */\n    constructor(\n        private readonly workerSet: ConcurrentWorkerSet,\n        private readonly decoderServiceType: string\n    ) {\n        this.workerSet.addReference();\n        this.serviceId = `${this.decoderServiceType}-${nextUniqueServiceId++}`;\n    }\n\n    /**\n     * Dispose of dedicated tile decoder services in workers and remove reference to underlying\n     * [[ConcurrentWorkerSet]].\n     */\n    dispose() {\n        if (this.m_serviceCreated) {\n            this.workerSet\n                .broadcastRequest(WorkerServiceProtocol.WORKER_SERVICE_MANAGER_SERVICE_ID, {\n                    type: WorkerServiceProtocol.Requests.DestroyService,\n                    targetServiceId: this.serviceId\n                })\n                .catch(() => {\n                    /* Ignoring these errors as underlying workers possibly do not exist anymore. */\n                });\n        }\n\n        this.workerSet.removeReference();\n    }\n\n    /**\n     * Connects to [[WorkerServiceManager]]s in underlying [[ConcurrentWorkerSet]] and creates\n     * dedicated [[TileDecoderService]]s in all workers to serve decode requests.\n     */\n    async connect(): Promise<void> {\n        await this.workerSet.connect(WorkerServiceProtocol.WORKER_SERVICE_MANAGER_SERVICE_ID);\n        if (!this.m_serviceCreated) {\n            await this.workerSet.broadcastRequest(\n                WorkerServiceProtocol.WORKER_SERVICE_MANAGER_SERVICE_ID,\n                {\n                    type: WorkerServiceProtocol.Requests.CreateService,\n                    targetServiceType: this.decoderServiceType,\n                    targetServiceId: this.serviceId\n                }\n            );\n            this.m_serviceCreated = true;\n        }\n    }\n\n    /**\n     * Get {@link Tile} from tile decoder service in worker.\n     *\n     * @remarks\n     * Invokes {@link @here/harp-datasource-protocol#DecodeTileRequest} on\n     * [[TileDecoderService]] running in worker pool.\n     */\n    decodeTile(\n        data: ArrayBufferLike,\n        tileKey: TileKey,\n        projection: Projection,\n        requestController?: RequestController\n    ): Promise<DecodedTile> {\n        const tileKeyCode = tileKey.mortonCode();\n\n        const message: WorkerDecoderProtocol.DecodeTileRequest = {\n            type: WorkerDecoderProtocol.Requests.DecodeTileRequest,\n            tileKey: tileKeyCode,\n            data,\n            projection: getProjectionName(projection)\n        };\n\n        const transferList = data instanceof ArrayBuffer ? [data] : undefined;\n\n        return this.workerSet.invokeRequest(\n            this.serviceId,\n            message,\n            transferList,\n            requestController\n        );\n    }\n\n    /**\n     * Get {@link @here/harp-datasource-protocol#TileInfo} from tile decoder service in worker.\n     *\n     * @remarks\n     * Invokes {@link @here/harp-datasource-protocol#TileInfoRequest}\n     * on [[TileDecoderService]] running in worker pool.\n     */\n    getTileInfo(\n        data: ArrayBufferLike,\n        tileKey: TileKey,\n        projection: Projection,\n        requestController?: RequestController\n    ): Promise<TileInfo | undefined> {\n        const tileKeyCode = tileKey.mortonCode();\n\n        const message: WorkerDecoderProtocol.TileInfoRequest = {\n            type: WorkerDecoderProtocol.Requests.TileInfoRequest,\n            tileKey: tileKeyCode,\n            data,\n            projection: getProjectionName(projection)\n        };\n\n        const transferList = data instanceof ArrayBuffer ? [data] : undefined;\n        return this.workerSet.invokeRequest(\n            this.serviceId,\n            message,\n            transferList,\n            requestController\n        );\n    }\n\n    /**\n     * Configure tile decoder service in workers.\n     *\n     * @remarks\n     * Broadcasts {@link @here/harp-datasource-protocol#ConfigurationMessage}\n     * to all [[TileDecoderService]]s running in worker pool.\n     *\n     * @param options - Options that will be applied to the styles\n     * @param customOptions -   new options, undefined options are not changed\n     */\n    configure(options?: DecoderOptions, customOptions?: OptionsMap): void {\n        const message: WorkerDecoderProtocol.ConfigurationMessage = {\n            service: this.serviceId,\n            type: WorkerDecoderProtocol.DecoderMessageName.Configuration,\n            ...options,\n            options: customOptions\n        };\n\n        this.workerSet.broadcastMessage(message);\n    }\n\n    /**\n     * The number of workers started for this decoder. The value is `undefined` until the workers\n     * have been created.\n     */\n    get workerCount(): number | undefined {\n        return this.workerSet.workerCount;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    GeoJson,\n    ITiler,\n    WorkerServiceProtocol,\n    WorkerTilerProtocol\n} from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils\";\n\nimport { ConcurrentWorkerSet } from \"./ConcurrentWorkerSet\";\n\n/**\n * Identifier of next tiler worker-service. Used to ensure uniqueness of service ids of tilers\n * dedicated to different datasources.\n */\nlet nextUniqueServiceId = 0;\n\n/**\n * Tiler based on [[ConcurrentWorkerSet]].\n *\n * Tiles payloads using workers running in separate contexts (also known as `WebWorkers`):\n * - connection establishment,\n * - sends tile requests,\n * - configuration.\n */\nexport class WorkerBasedTiler implements ITiler {\n    private readonly serviceId: string;\n    private m_serviceCreated: boolean = false;\n\n    /**\n     * Creates a new `WorkerBasedTiler`.\n     *\n     * @param workerSet - [[ConcurrentWorkerSet]] this tiler will live in.\n     * @param tilerServiceType - Service type identifier.\n     */\n    constructor(\n        private readonly workerSet: ConcurrentWorkerSet,\n        private readonly tilerServiceType: string\n    ) {\n        this.workerSet.addReference();\n        this.serviceId = `${this.tilerServiceType}-${nextUniqueServiceId++}`;\n    }\n\n    /**\n     * Dispose of dedicated tiler services in workers and remove reference to underlying\n     * [[ConcurrentWorkerSet]].\n     */\n    dispose() {\n        if (this.m_serviceCreated) {\n            this.workerSet\n                .broadcastRequest(WorkerServiceProtocol.WORKER_SERVICE_MANAGER_SERVICE_ID, {\n                    type: WorkerServiceProtocol.Requests.DestroyService,\n                    targetServiceId: this.serviceId\n                })\n                .catch(() => {\n                    /* Ignoring these errors as underlying workers possibly do not exist anymore. */\n                });\n        }\n\n        this.workerSet.removeReference();\n    }\n\n    /**\n     * Connects to [[WorkerServiceManager]]s in underlying [[ConcurrentWorkerSet]] and creates\n     * dedicated [[TilerService]]s in all workers to serve tiling requests.\n     */\n    async connect(): Promise<void> {\n        await this.workerSet.connect(WorkerServiceProtocol.WORKER_SERVICE_MANAGER_SERVICE_ID);\n        if (!this.m_serviceCreated) {\n            await this.workerSet.broadcastRequest(\n                WorkerServiceProtocol.WORKER_SERVICE_MANAGER_SERVICE_ID,\n                {\n                    type: WorkerServiceProtocol.Requests.CreateService,\n                    targetServiceType: this.tilerServiceType,\n                    targetServiceId: this.serviceId\n                }\n            );\n\n            this.m_serviceCreated = true;\n        }\n    }\n\n    /**\n     * Register index in the tiler. Indexes registered in the tiler can be later used to retrieved\n     * tiled payloads using `getTile`.\n     *\n     * @param indexId - Index identifier.\n     * @param input - Url to the index payload, or direct GeoJSON.\n     */\n    registerIndex(indexId: string, input: URL | GeoJson): Promise<void> {\n        const message: WorkerTilerProtocol.RegisterIndexRequest = {\n            type: WorkerTilerProtocol.Requests.RegisterIndex,\n            id: indexId,\n            input: input instanceof URL ? input.href : (input as GeoJson)\n        };\n        return this.workerSet.invokeRequest(this.serviceId, message);\n    }\n\n    /**\n     * Update index in the tiler. Indexes registered in the tiler can be later used to retrieved\n     * tiled payloads using `getTile`.\n     *\n     * @param indexId - Index identifier.\n     * @param input - Url to the index payload, or direct GeoJSON.\n     */\n    updateIndex(indexId: string, input: URL | GeoJson): Promise<void> {\n        const message: WorkerTilerProtocol.UpdateIndexRequest = {\n            type: WorkerTilerProtocol.Requests.UpdateIndex,\n            id: indexId,\n            input: input instanceof URL ? input.href : (input as GeoJson)\n        };\n        return this.workerSet.invokeRequest(this.serviceId, message);\n    }\n\n    /**\n     * Retrieves a tile for a previously registered index.\n     *\n     * @param indexId - Index identifier.\n     * @param tileKey - The {@link @here/harp-geoutils#TileKey} that identifies the tile.\n     */\n    getTile(indexId: string, tileKey: TileKey): Promise<{}> {\n        const tileKeyCode = tileKey.mortonCode();\n        const message: WorkerTilerProtocol.TileRequest = {\n            type: WorkerTilerProtocol.Requests.TileRequest,\n            index: indexId,\n            tileKey: tileKeyCode\n        };\n        return this.workerSet.invokeRequest(this.serviceId, message);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { CopyMaterial, CopyShader } from \"@here/harp-materials\";\nimport * as THREE from \"three\";\n\nimport { Pass } from \"./Pass\";\n\n/**\n * The `LowResRenderPass` renders the scene at a lower resolution into an internal\n * `WebGLRenderTarget`, and then copies the result into the frame buffer. The size of the internal\n * buffer is determined by the current frame buffer size multiplied by `pixelRatio`.\n *\n * @note Since no anti-aliasing is applied during dynamic rendering, visual artifacts may be\n * visible.\n */\nexport class LowResRenderPass extends Pass {\n    private m_renderTarget: THREE.WebGLRenderTarget | null = null;\n    private readonly m_localCamera: THREE.OrthographicCamera = new THREE.OrthographicCamera(\n        -1,\n        1,\n        1,\n        -1,\n        0,\n        1\n    );\n\n    private readonly m_quadScene: THREE.Scene = new THREE.Scene();\n    private readonly m_quadUniforms: { [uniformName: string]: THREE.IUniform } =\n        CopyShader.uniforms;\n\n    private readonly m_quadMaterial: THREE.ShaderMaterial = new CopyMaterial(this.m_quadUniforms);\n    private readonly m_quad: THREE.Mesh = new THREE.Mesh(\n        new THREE.PlaneBufferGeometry(2, 2),\n        this.m_quadMaterial\n    );\n\n    private m_pixelRatio: number | undefined;\n    private m_savedWidth = 0;\n    private m_savedHeight = 0;\n\n    /**\n     * The constructor for `LowResRenderPass`. It builds an internal scene with a camera looking at\n     * a quad.\n     *\n     * @param lowResPixelRatio - The `pixelRatio` determines the resolution of the internal\n     *  `WebGLRenderTarget`. Values between 0.5 and `window.devicePixelRatio` can be tried to give\n     * good results. A value of `undefined` disables the low res render pass. The value should not\n     * be larger than`window.devicePixelRatio`.\n     */\n    constructor(public lowResPixelRatio?: number) {\n        super();\n        this.m_quad.frustumCulled = false;\n        this.m_quadScene.add(this.m_quad);\n        this.m_pixelRatio = lowResPixelRatio;\n    }\n\n    /**\n     * Releases all used resources.\n     */\n    dispose() {\n        this.m_quadMaterial.dispose();\n        this.m_quad.geometry.dispose();\n        if (this.m_renderTarget !== null) {\n            this.m_renderTarget.dispose();\n            this.m_renderTarget = null;\n        }\n    }\n\n    /**\n     * If a value is specified, a low resolution render pass is used to render the scene into a\n     * low resolution render target, before it is copied to the screen.\n     *\n     * A value of `undefined` disables the low res render pass. The value should not be larger than\n     * `window.devicePixelRatio`.\n     *\n     * @default `undefined`\n     */\n    set pixelRatio(ratio: number | undefined) {\n        this.m_pixelRatio = ratio;\n        if (this.m_renderTarget && this.pixelRatio !== undefined) {\n            this.m_renderTarget.setSize(\n                Math.floor(this.m_savedWidth * this.pixelRatio),\n                Math.floor(this.m_savedHeight * this.pixelRatio)\n            );\n        }\n    }\n\n    get pixelRatio(): number | undefined {\n        return this.m_pixelRatio;\n    }\n\n    /**\n     * The render function of `LowResRenderPass`. It renders the whole scene into an internal\n     * `WebGLRenderTarget` instance with a lower resolution, using the passed in `WebGLRenderer`.\n     * The low resolution image is then copied to the `writeBuffer`, which is `undefined` in case it\n     * is the screen.\n     *\n     * @param renderer - The ThreeJS WebGLRenderer instance to render the scene with.\n     * @param scene - The ThreeJS Scene instance to render the scene with.\n     * @param camera - The ThreeJS Camera instance to render the scene with.\n     * @param writeBuffer - A ThreeJS WebGLRenderTarget instance to render the scene to.\n     * @param readBuffer - A ThreeJS WebGLRenderTarget instance to render the scene.\n     * @override\n     */\n    render(\n        renderer: THREE.WebGLRenderer,\n        scene: THREE.Scene,\n        camera: THREE.PerspectiveCamera | THREE.OrthographicCamera,\n        writeBuffer: THREE.WebGLRenderTarget | null,\n        readBuffer: THREE.WebGLRenderTarget\n    ) {\n        if (!this.enabled || this.pixelRatio === undefined) {\n            return;\n        }\n\n        // Initiates the local render target with the read buffer's dimensions, if not available.\n        if (this.m_renderTarget === null) {\n            this.m_savedWidth = readBuffer.width;\n            this.m_savedHeight = readBuffer.height;\n            this.m_renderTarget = new THREE.WebGLRenderTarget(\n                Math.floor(this.m_savedWidth * this.pixelRatio),\n                Math.floor(this.m_savedHeight * this.pixelRatio),\n                {\n                    minFilter: THREE.LinearFilter,\n                    magFilter: THREE.LinearFilter,\n                    format: THREE.RGBAFormat,\n                    depthBuffer: true,\n                    stencilBuffer: true\n                }\n            );\n            this.m_renderTarget.texture.name = \"LowResRenderPass.sample\";\n        }\n\n        this.m_quadUniforms.tDiffuse.value = this.m_renderTarget.texture;\n        this.m_quadUniforms.opacity.value = 1.0;\n\n        const oldRenderTarget = renderer.getRenderTarget();\n        renderer.setRenderTarget(this.m_renderTarget);\n        renderer.clear();\n        // Render into the low resolution internal render target.\n        renderer.render(scene, camera);\n\n        // Render the low resolution target into the screen.\n        // NOTE: three.js doesn't like undefined as renderTarget, but works with `null`\n        renderer.setRenderTarget(this.renderToScreen ? null : writeBuffer);\n        renderer.clear();\n        renderer.render(this.m_quadScene, this.m_localCamera);\n        renderer.setRenderTarget(oldRenderTarget);\n    }\n\n    /**\n     * Resize the internal render target to match the new size specified. The size of internal\n     * buffer depends on the `pixelRatio`.\n     *\n     * @param width - New width to apply to the render target.\n     * @param height - New height to apply to the render target.\n     * @override\n     */\n    setSize(width: number, height: number) {\n        this.m_savedWidth = width;\n        this.m_savedHeight = height;\n        if (this.m_renderTarget && this.pixelRatio !== undefined) {\n            this.m_renderTarget.setSize(\n                Math.floor(width * this.pixelRatio),\n                Math.floor(height * this.pixelRatio)\n            );\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { CopyShader, MSAAMaterial } from \"@here/harp-materials\";\nimport * as THREE from \"three\";\n\nimport { Pass } from \"./Pass\";\n\n/**\n * This enum represents the sampling level to apply to\n * a {@link MSAARenderPass} instance. At level 0,\n * only one sample is performed, which is like\n * disabling the MSAA pass.\n */\nexport enum MSAASampling {\n    \"Level_0\",\n    \"Level_1\",\n    \"Level_2\",\n    \"Level_3\",\n    \"Level_4\",\n    \"Level_5\"\n}\n\n/**\n * {@link MapView}'s MSAA implementation.\n *\n * @remarks\n * MSAA stands for Multi Sampling Anti-Aliasing, and its concept\n * is to provide a rendering engine with additional color values for each pixel, so they can include\n * the missing bits between them on a screen. WebGL already comes with a native MSAA implementation\n * with four samples. Because of its native nature, it is more efficient and one may not want to use\n * MapView's MSAA implementation when these four samples are satisfying. However in some situations\n * they are not: on low devices, MSAA can impact the framerate and we may desire to reduce the\n * number of samples at runtime. On the other hand, when the interaction stops, the engine also\n * stops rendering the map, and because a map relies on many line-like patterns, aliasing can then\n * turn very noticeable. In such static renders, the number of samples could be dramatically\n * increased on a last frame to render.\n */\nexport class MSAARenderPass extends Pass {\n    /**\n     * The sampling level determines the number of samples that will be performed per frame.\n     * Renders will happen `2 ^ samplingLevel` time(s). `samplingLevel` stands between `0` and `5`.\n     * Therefore there can be between 1 and 32 samples.\n     *\n     * @default `SamplingLevel.Level_1`\n     */\n    samplingLevel: MSAASampling = MSAASampling.Level_1;\n\n    private m_renderTarget: THREE.WebGLRenderTarget | null = null;\n    private readonly m_localCamera: THREE.OrthographicCamera = new THREE.OrthographicCamera(\n        -1,\n        1,\n        1,\n        -1,\n        0,\n        1\n    );\n\n    private readonly m_quadScene: THREE.Scene = new THREE.Scene();\n    private readonly m_quadUniforms: { [uniformName: string]: THREE.IUniform } =\n        CopyShader.uniforms;\n\n    private readonly m_quadMaterial: THREE.ShaderMaterial = new MSAAMaterial(this.m_quadUniforms);\n    private readonly m_quad: THREE.Mesh = new THREE.Mesh(\n        new THREE.PlaneBufferGeometry(2, 2),\n        this.m_quadMaterial\n    );\n\n    private readonly m_tmpColor = new THREE.Color();\n\n    /**\n     * The constructor for `MSAARenderPass`. It builds an internal scene with a camera looking at a\n     * quad.\n     *\n     * @param m_scene - The scene to render.\n     * @param m_camera - The camera to render the scene through.\n     */\n    constructor() {\n        super();\n        this.m_quad.frustumCulled = false;\n        this.m_quadScene.add(this.m_quad);\n    }\n\n    /**\n     * Releases all used resources.\n     */\n    dispose() {\n        if (this.m_renderTarget !== null) {\n            this.m_renderTarget.dispose();\n            this.m_renderTarget = null;\n        }\n    }\n\n    /**\n     * The render function of `MSAARenderPass`.\n     *\n     * @remarks\n     * At each call of this method, and for each sample the {@link MapView}\n     * camera provided in the `render method is offset within the dimension of a\n     * pixel on screen. It then renders the whole scene with this offset to a local\n     * `WebGLRenderTarget` instance, via a `WebGLRenderer` instance. Finally the local camera\n     * created in the constructor shoots the quad and renders to the write buffer or to the frame\n     * buffer. The quad material's opacity is modified so the renders can accumulate in the\n     * targetted buffer.\n     *\n     * The number of samples can be modified at runtime through the enum [[SamplingLevel]].\n     *\n     * If there is no further pass, the {@link Pass.renderToScreen} flag can be set to `true` to\n     * output directly to the framebuffer.\n     *\n     * @param renderer - The ThreeJS WebGLRenderer instance to render the scene with.\n     * @param scene - The ThreeJS Scene instance to render the scene with.\n     * @param camera - The ThreeJS Camera instance to render the scene with.\n     * @param writeBuffer - A ThreeJS WebGLRenderTarget instance to render the scene to.\n     * @param readBuffer - A ThreeJS WebGLRenderTarget instance to render the scene.\n     * @override\n     */\n    render(\n        renderer: THREE.WebGLRenderer,\n        scene: THREE.Scene,\n        camera: THREE.PerspectiveCamera | THREE.OrthographicCamera,\n        writeBuffer: THREE.WebGLRenderTarget | null,\n        readBuffer: THREE.WebGLRenderTarget\n    ) {\n        if (!this.enabled) {\n            return;\n        }\n\n        // Initiates the local render target with the read buffer's dimensions, if not available.\n        if (this.m_renderTarget === null) {\n            this.m_renderTarget = new THREE.WebGLRenderTarget(readBuffer.width, readBuffer.height, {\n                minFilter: THREE.LinearFilter,\n                magFilter: THREE.LinearFilter,\n                format: THREE.RGBAFormat\n            });\n            this.m_renderTarget.texture.name = \"MSAARenderPass.sample\";\n        }\n        this.m_quadUniforms.tDiffuse.value = this.m_renderTarget.texture;\n\n        const offsets = MSAARenderPass.OffsetVectors[this.samplingLevel];\n\n        const rendererClearColor = renderer.getClearColor(this.m_tmpColor);\n        const oldClearColor = rendererClearColor !== undefined ? rendererClearColor.getHex() : 0;\n\n        // The method `camera.setViewOffset` will be called in the next loop. In order to maintain\n        // its usability externally (like for the triple view in mosaic demo) we must cache the\n        // previous values stored in `camera.view` and re-assign them at the end of the pass.\n\n        // 1. Create a default cache object, with default dimensions the size of our read buffer.\n        const oldView = {\n            enabled: camera.view !== null && camera.view.enabled,\n            fullWidth: readBuffer.width,\n            fullHeight: readBuffer.height,\n            x: 0,\n            y: 0,\n            width: readBuffer.width,\n            height: readBuffer.height\n        };\n\n        // 2. If `camera.view` has been enabled previously, then `setViewOffset` has been called\n        // externally: copy the existing `camera.view` values in the cache. Override the cache\n        // object with the values provided externally.\n        if (oldView.enabled && camera.view !== null) {\n            oldView.fullWidth = camera.view.fullWidth;\n            oldView.fullHeight = camera.view.fullHeight;\n            oldView.x = camera.view.offsetX;\n            oldView.y = camera.view.offsetY;\n            oldView.width = camera.view.width;\n            oldView.height = camera.view.height;\n        }\n\n        const oldRenderTarget = renderer.getRenderTarget();\n        for (let i = 0; i < offsets.length; i++) {\n            // 4. Then for each sample, call `setViewOffset` with our object. This also updates the\n            // `camera.view` object in Three.js.\n            const offset = offsets[i];\n            camera.setViewOffset(\n                oldView.fullWidth,\n                oldView.fullHeight,\n                oldView.x + offset[0] / 16,\n                oldView.y + offset[1] / 16,\n                oldView.width,\n                oldView.height\n            );\n\n            // 5. Divide the opacity of the quad by the number of samples to accumulate on the\n            // target buffer, and reduce the impact of the offset on color to reduce banding. Then\n            // render.\n            const uniformCenteredDistribution = -0.5 + (i + 0.5) / offsets.length;\n            const sampleWeight = 1.0 / offsets.length + uniformCenteredDistribution / 32;\n\n            this.m_quadUniforms.opacity.value = sampleWeight;\n\n            renderer.setRenderTarget(this.m_renderTarget);\n            renderer.clear();\n            renderer.render(scene, camera);\n\n            // 6. Render the quad on top of the previous renders.\n\n            // NOTE: three.js doesn't like undefined as renderTarget, but works with `null`\n            renderer.setRenderTarget(this.renderToScreen ? null : writeBuffer);\n            if (i === 0) {\n                renderer.setClearColor(0x000000);\n                renderer.clear();\n            }\n            renderer.render(this.m_quadScene, this.m_localCamera);\n            if (i === 0 && rendererClearColor !== undefined) {\n                renderer.setClearColor(oldClearColor);\n            }\n        }\n        renderer.setRenderTarget(oldRenderTarget);\n\n        // 7. Restore `camera.view` as set externally (or not).\n        if (camera.view !== null) {\n            camera.view.enabled = oldView.enabled;\n            camera.view.offsetX = oldView.x;\n            camera.view.offsetY = oldView.y;\n        }\n    }\n\n    /**\n     * Resize the internal render target to match the new size specified.\n     *\n     * @param width - New width to apply to the render target.\n     * @param height - New height to apply to the render target.\n     * @override\n     */\n    setSize(width: number, height: number) {\n        if (this.m_renderTarget) {\n            this.m_renderTarget.setSize(width, height);\n        }\n    }\n\n    /**\n     * The list of offsets to apply to the camera, per sampling level, adapted from :\n     *\n     * @see https://msdn.microsoft.com/en-us/library/windows/desktop/ff476218%28v=vs.85%29.aspx?f=255&MSPPError=-2147217396\n     */\n    static readonly OffsetVectors: number[][][] = [\n        [[0, 0]],\n        [\n            [4, 4],\n            [-4, -4]\n        ],\n        [\n            [-2, -6],\n            [6, -2],\n            [-6, 2],\n            [2, 6]\n        ],\n        [\n            [1, -3],\n            [-1, 3],\n            [5, 1],\n            [-3, -5],\n            [-5, 5],\n            [-7, -1],\n            [3, 7],\n            [7, -7]\n        ],\n        [\n            [1, 1],\n            [-1, -3],\n            [-3, 2],\n            [4, -1],\n            [-5, -2],\n            [2, 5],\n            [5, 3],\n            [3, -5],\n            [-2, 6],\n            [0, -7],\n            [-4, -6],\n            [-6, 4],\n            [-8, 0],\n            [7, -4],\n            [6, 7],\n            [-7, -8]\n        ],\n        [\n            [-4, -7],\n            [-7, -5],\n            [-3, -5],\n            [-5, -4],\n            [-1, -4],\n            [-2, -2],\n            [-6, -1],\n            [-4, 0],\n            [-7, 1],\n            [-1, 2],\n            [-6, 3],\n            [-3, 3],\n            [-7, 6],\n            [-3, 6],\n            [-5, 7],\n            [-1, 7],\n            [5, -7],\n            [1, -6],\n            [6, -5],\n            [4, -4],\n            [2, -3],\n            [7, -2],\n            [1, -1],\n            [4, -1],\n            [2, 1],\n            [6, 2],\n            [0, 4],\n            [4, 4],\n            [2, 5],\n            [7, 5],\n            [5, 6],\n            [3, 7]\n        ]\n    ];\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    IBloomEffect,\n    IOutlineEffect,\n    ISepiaEffect,\n    IVignetteEffect\n} from \"@here/harp-datasource-protocol\";\nimport { SepiaShader, VignetteShader } from \"@here/harp-materials\";\nimport * as THREE from \"three\";\n\nimport { IPassManager } from \"./IPassManager\";\nimport { LowResRenderPass } from \"./LowResRenderPass\";\nimport { MSAARenderPass, MSAASampling } from \"./MSAARenderPass\";\nimport { OutlineEffect } from \"./Outline\";\nimport { RenderPass, ShaderPass } from \"./Pass\";\nimport { BloomPass } from \"./UnrealBloomPass\";\n\nconst DEFAULT_DYNAMIC_MSAA_SAMPLING_LEVEL = MSAASampling.Level_1;\nconst DEFAULT_STATIC_MSAA_SAMPLING_LEVEL = MSAASampling.Level_4;\n\n/**\n * Interface for the antialias settings passed when instantiating\n * a {@link MapView}, and transferred to\n * the {@link MapRenderingManager} instance.\n *\n * @remarks\n * These parameters can be changed at runtime as opposed to\n * the native WebGL antialiasing.\n */\nexport interface IMapAntialiasSettings {\n    /**\n     * Whether the MSAA is enabled or not.\n     *\n     * @default `false`\n     */\n    msaaEnabled: boolean;\n\n    /**\n     * The sampling level to use for MSAA during continuous rendering.\n     *\n     * @default `MSAASampling.Level_1`\n     */\n    dynamicMsaaSamplingLevel?: MSAASampling;\n\n    /**\n     * The sampling level to use for MSAA when the rendering stops.\n     *\n     * @default `MSAASampling.Level_4`\n     */\n    staticMsaaSamplingLevel?: MSAASampling;\n}\n\n/**\n * The `MapRenderingManager` class manages the map rendering (as opposed to text) by dispatching the\n * {@link MapRenderingManager.render} call to a set of internal {@link Pass} instances.\n *\n * @remarks It provides an API to modify some of the rendering\n * processes like the antialiasing behaviour at runtime.\n */\nexport interface IMapRenderingManager extends IPassManager {\n    /**\n     * Bloom effect parameters.\n     */\n    bloom: IBloomEffect;\n\n    /**\n     * Outline effect parameters.\n     */\n    outline: IOutlineEffect;\n\n    /**\n     * Vignette effect parameters.\n     */\n    vignette: IVignetteEffect;\n\n    /**\n     * Sepia effect parameters.\n     */\n    sepia: ISepiaEffect;\n\n    /**\n     * Set a `pixelRatio` for dynamic rendering (i.e. during animations). If a value is specified,\n     * the `LowResRenderPass` will be employed to used to render the scene into a lower resolution\n     * render target, which will then be rendered to the screen.\n     */\n    lowResPixelRatio?: number;\n\n    /**\n     * The level of MSAA sampling while the user interacts. It should be a low level so that the\n     * MSAA does not impact the framerate.\n     */\n    dynamicMsaaSamplingLevel: MSAASampling;\n\n    /**\n     * Enable or disable the MSAA. If disabled, `MapRenderingManager` will use the renderer provided\n     * in the {@link MapRenderingManager.render} method to render the scene.\n     */\n    msaaEnabled: boolean;\n\n    /**\n     * The higher level of MSAA sampling for a last frame to render, when the camera is static. It\n     * can be a high level, providing high quality renders requiring few tens of seconds, since no\n     * frame is expected to immediately follow in the requestAnimationFrame. It is still limited by\n     * zooming, since zooming is not requestAnimationFrame-based and can lead to stuttering if the\n     * render time is too long, except on desktop Mac, where mouse interaction already implements\n     * some damping. Higher levels of sampling may lead to noticeable color banding, visible in\n     * areas with a slight color gradient, like large areas or the sky background.\n     */\n    staticMsaaSamplingLevel: MSAASampling;\n\n    /**\n     * The method to call to render the map. This method depends on an `isStaticFrame` boolean that\n     * notifies the pass manager to switch to a higher level render quality for the last frame.\n     *\n     * @param renderer - The ThreeJS WebGLRenderer instance to render the map with.\n     * @param isStaticFrame - Whether the frame to render is static or dynamic. Selects level of\n     * antialiasing.\n     * @param time - Optional time argument provided by the requestAnimationFrame, to pass to\n     * sub-passes.\n     */\n    render(\n        renderer: THREE.WebGLRenderer,\n        scene: THREE.Scene,\n        camera: THREE.PerspectiveCamera | THREE.OrthographicCamera,\n        isStaticFrame: boolean,\n        time?: number\n    ): void;\n\n    /**\n     * Updating the outline rebuilds the outline materials of every outlined mesh.\n     *\n     * @param options - outline options from the {@link @here/harp-datasource-protocol#Theme}.\n     */\n    updateOutline(options: {\n        thickness: number;\n        color: string;\n        ghostExtrudedPolygons: boolean;\n    }): void;\n}\n\n/**\n * The implementation of {@link IMapRenderingManager} to\n * instantiate in {@link MapView} and manage the map\n * rendering.\n */\nexport class MapRenderingManager implements IMapRenderingManager {\n    bloom = {\n        enabled: false,\n        strength: 1.5,\n        radius: 0.4,\n        threshold: 0.85\n    };\n\n    outline = {\n        enabled: false,\n        thickness: 0.005,\n        color: \"#000000\",\n        ghostExtrudedPolygons: false,\n        needsUpdate: false\n    };\n\n    vignette = {\n        enabled: false,\n        offset: 1.0,\n        darkness: 1.0\n    };\n\n    sepia = {\n        enabled: false,\n        amount: 0.5\n    };\n\n    private m_width: number = 1;\n    private m_height: number = 1;\n\n    private m_outlineEffect?: OutlineEffect;\n    private m_msaaPass: MSAARenderPass;\n    private readonly m_renderPass: RenderPass = new RenderPass();\n    private readonly m_target1: THREE.WebGLRenderTarget = new THREE.WebGLRenderTarget(1, 1);\n    private readonly m_target2: THREE.WebGLRenderTarget = new THREE.WebGLRenderTarget(1, 1);\n    private m_bloomPass?: BloomPass;\n    private m_sepiaPass: ShaderPass = new ShaderPass(SepiaShader);\n    private m_vignettePass: ShaderPass = new ShaderPass(VignetteShader);\n    private readonly m_readBuffer: THREE.WebGLRenderTarget;\n    private m_dynamicMsaaSamplingLevel: MSAASampling;\n    private m_staticMsaaSamplingLevel: MSAASampling;\n    private m_lowResPass: LowResRenderPass;\n\n    /**\n     * The constructor of `MapRenderingManager`.\n     *\n     * @param width - Width of the frame buffer.\n     * @param height - Height of the frame buffer.\n     * @param lowResPixelRatio - The `pixelRatio` determines the resolution of the internal\n     *  `WebGLRenderTarget`. Values between 0.5 and `window.devicePixelRatio` can be tried to give\n     * good results. A value of `undefined` disables the low res render pass. The value should not\n     * be larger than`window.devicePixelRatio`.\n     * @param antialiasSetting - The object defining the demeanor of MSAA.\n     */\n    constructor(\n        width: number,\n        height: number,\n        lowResPixelRatio: number | undefined,\n        antialiasSettings: IMapAntialiasSettings | undefined = { msaaEnabled: false }\n    ) {\n        this.m_readBuffer = new THREE.WebGLRenderTarget(width, height);\n        this.m_msaaPass = new MSAARenderPass();\n        this.m_msaaPass.enabled =\n            antialiasSettings !== undefined ? antialiasSettings.msaaEnabled === true : false;\n        this.m_dynamicMsaaSamplingLevel =\n            antialiasSettings.dynamicMsaaSamplingLevel === undefined\n                ? DEFAULT_DYNAMIC_MSAA_SAMPLING_LEVEL\n                : antialiasSettings.dynamicMsaaSamplingLevel;\n        this.m_staticMsaaSamplingLevel =\n            antialiasSettings.staticMsaaSamplingLevel === undefined\n                ? DEFAULT_STATIC_MSAA_SAMPLING_LEVEL\n                : antialiasSettings.staticMsaaSamplingLevel;\n        this.m_lowResPass = new LowResRenderPass(lowResPixelRatio);\n        this.m_lowResPass.enabled = lowResPixelRatio !== undefined;\n    }\n\n    updateOutline(options: { thickness: number; color: string; ghostExtrudedPolygons: boolean }) {\n        this.outline.color = options.color;\n        this.outline.thickness = options.thickness;\n        this.outline.ghostExtrudedPolygons = options.ghostExtrudedPolygons;\n        this.outline.needsUpdate = true;\n    }\n\n    /**\n     * The method to call to render the map with the `MapRenderingManager` instance. It contains the\n     * chain of sub-passes that can transfer the write and read buffers, and other sheer rendering\n     * conditions as disabling AA when a high DPI device is in use.\n     *\n     * @param renderer - The ThreeJS WebGLRenderer instance to render the map with.\n     * @param scene - The ThreeJS Scene instance containing the map objects to render.\n     * @param camera - The ThreeJS Camera instance to render the scene through.\n     * @param isStaticFrame - Whether the frame to render is static or dynamic. Selects level of\n     * antialiasing.\n     */\n    render(\n        renderer: THREE.WebGLRenderer,\n        scene: THREE.Scene,\n        camera: THREE.PerspectiveCamera | THREE.OrthographicCamera,\n        isStaticFrame: boolean\n    ) {\n        const target = null;\n        if (!isStaticFrame && this.m_lowResPass.pixelRatio !== undefined) {\n            // Not designed to be combined with our own MSAA\n            this.m_lowResPass.renderToScreen = true;\n            this.m_lowResPass.render(renderer, scene, camera, target, this.m_readBuffer);\n            return;\n        }\n\n        const usePostEffects =\n            this.bloom.enabled ||\n            this.outline.enabled ||\n            this.vignette.enabled ||\n            this.sepia.enabled;\n\n        let activeTarget: null | THREE.WebGLRenderTarget = null;\n\n        // 1. If the bloom is enabled, clear the depth.\n        if (this.bloom.enabled || this.vignette.enabled || this.sepia.enabled) {\n            renderer.setRenderTarget(this.m_target1);\n            renderer.clearDepth();\n        }\n\n        // 2. Render the map.\n\n        if (this.m_msaaPass.enabled) {\n            // Use a higher MSAA sampling level for static rendering.\n            this.m_msaaPass.samplingLevel = isStaticFrame\n                ? this.m_staticMsaaSamplingLevel\n                : this.m_dynamicMsaaSamplingLevel;\n            // MSAA is the only effect for the moment.\n            this.m_msaaPass.renderToScreen = !usePostEffects;\n            // Render to the specified target with the MSAA pass.\n            this.m_msaaPass.render(renderer, scene, camera, target, this.m_readBuffer);\n        } else {\n            if (this.bloom.enabled || this.vignette.enabled || this.sepia.enabled) {\n                activeTarget = this.m_target1;\n                this.m_renderPass.render(renderer, scene, camera, this.m_target1, null!);\n            } else if (!this.outline.enabled || (this.outline.enabled && !this.bloom.enabled)) {\n                renderer.render(scene, camera);\n            }\n        }\n\n        // 3. Apply effects\n        if (this.outline.enabled) {\n            if (this.m_outlineEffect === undefined) {\n                this.m_outlineEffect = new OutlineEffect(renderer);\n            }\n            if (this.outline.needsUpdate) {\n                this.m_outlineEffect.color = this.outline.color;\n                this.m_outlineEffect.thickness = this.outline.thickness;\n                this.m_outlineEffect.ghostExtrudedPolygons = this.outline.ghostExtrudedPolygons;\n                this.outline.needsUpdate = false;\n            }\n            const nextEffectEnabled =\n                this.bloom.enabled || this.vignette.enabled || this.sepia.enabled;\n            if (nextEffectEnabled) {\n                activeTarget = this.m_target1;\n            }\n            renderer.setRenderTarget(nextEffectEnabled ? activeTarget : null!);\n            this.m_outlineEffect.render(scene, camera);\n        }\n\n        if (this.bloom.enabled) {\n            if (this.m_bloomPass === undefined) {\n                this.m_bloomPass = new BloomPass(\n                    new THREE.Vector2(this.m_width, this.m_height),\n                    this.bloom.strength,\n                    this.bloom.radius,\n                    this.bloom.threshold\n                );\n            }\n            const nextEffectEnabled = this.vignette.enabled || this.sepia.enabled;\n            this.m_bloomPass.renderToScreen = !nextEffectEnabled;\n            this.m_bloomPass.radius = this.bloom.radius;\n            this.m_bloomPass.strength = this.bloom.strength;\n            this.m_bloomPass.threshold = this.bloom.threshold;\n            this.m_bloomPass.render(renderer, scene, camera, null!, activeTarget!);\n        } else if (this.m_bloomPass !== undefined) {\n            this.m_bloomPass.dispose();\n            this.m_bloomPass = undefined;\n        }\n\n        if (this.vignette.enabled) {\n            const oldTarget = activeTarget!;\n            const nextEffectEnabled = this.sepia.enabled;\n            this.m_vignettePass.uniforms.offset.value = this.vignette.offset;\n            this.m_vignettePass.uniforms.darkness.value = this.vignette.darkness;\n            this.m_vignettePass.renderToScreen = !nextEffectEnabled;\n            if (nextEffectEnabled) {\n                activeTarget = activeTarget === this.m_target1 ? this.m_target2 : this.m_target1;\n            }\n            this.m_vignettePass.render(renderer, scene, camera, activeTarget!, oldTarget);\n        }\n\n        if (this.sepia.enabled) {\n            this.m_sepiaPass.renderToScreen = true;\n            this.m_sepiaPass.uniforms.amount.value = this.sepia.amount;\n            this.m_sepiaPass.render(renderer, scene, camera, null!, activeTarget!);\n        }\n    }\n\n    /**\n     * The resize function to call on resize events to resize the render targets. It shall include\n     * the resize methods of all the sub-passes used in `MapRenderingManager`.\n     *\n     * @param width - New width to use.\n     * @param height - New height to use.\n     */\n    setSize(width: number, height: number) {\n        this.m_readBuffer.setSize(width, height);\n        this.m_msaaPass.setSize(width, height);\n        if (this.m_bloomPass !== undefined) {\n            this.m_bloomPass.setSize(width, height);\n        }\n        this.m_lowResPass.setSize(width, height);\n        this.m_target1.setSize(width, height);\n        this.m_target2.setSize(width, height);\n        this.m_width = width;\n        this.m_height = height;\n    }\n\n    /**\n     * The `lowResPixelRatio` determines the resolution of the internal `WebGLRenderTarget`. Values\n     * between 0.5 and `window.devicePixelRatio` can be tried to give  good results. A value of\n     * `undefined` disables the low res render pass. The value should not be larger than\n     * `window.devicePixelRatio`.\n     */\n    get lowResPixelRatio(): number | undefined {\n        return this.m_lowResPass.pixelRatio;\n    }\n\n    set lowResPixelRatio(pixelRatio: number | undefined) {\n        this.m_lowResPass.pixelRatio = pixelRatio;\n        this.m_lowResPass.enabled = pixelRatio !== undefined;\n    }\n\n    /**\n     * Set the level of sampling while the user interacts.\n     *\n     * @param samplingLevel - The sampling level.\n     */\n    set dynamicMsaaSamplingLevel(samplingLevel: MSAASampling) {\n        this.m_dynamicMsaaSamplingLevel = samplingLevel;\n    }\n\n    /**\n     * Return the sampling level defined during continuous rendering.\n     */\n    get dynamicMsaaSamplingLevel(): MSAASampling {\n        return this.m_dynamicMsaaSamplingLevel;\n    }\n\n    /**\n     * Enable or disable the MSAA. If disabled, `MapRenderingManager` will use the renderer provided\n     * in the {@link MapRenderingManager.render} method to render the scene.\n     *\n     * @param value - If `true`, MSAA is enabled, disabled otherwise.\n     */\n    set msaaEnabled(value: boolean) {\n        this.m_msaaPass.enabled = value;\n    }\n\n    /**\n     * Return whether the MSAA is enabled.\n     */\n    get msaaEnabled(): boolean {\n        return this.m_msaaPass.enabled;\n    }\n\n    /**\n     * Set the sampling level for rendering static frames.\n     *\n     * @param samplingLevel - The sampling level.\n     */\n    set staticMsaaSamplingLevel(samplingLevel: MSAASampling) {\n        this.m_staticMsaaSamplingLevel = samplingLevel;\n    }\n\n    /**\n     * Return the sampling level defined for rendering static frames.\n     */\n\n    get staticMsaaSamplingLevel(): MSAASampling {\n        return this.m_staticMsaaSamplingLevel;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    EdgeMaterial,\n    ExtrusionFeatureDefs,\n    FadingFeature,\n    MixinShaderProperties,\n    UniformsType\n} from \"@here/harp-materials\";\nimport { chainCallbacks } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { DepthPrePassProperties } from \"../DepthPrePass\";\n\nconst vertexShaderChunk = `\n#ifdef USE_EXTRUSION\n  #ifndef HAS_EXTRUSION_PARS_VERTEX\n    #include <extrusion_pars_vertex>\n  #endif\n#endif\n\n#ifdef USE_FADING\n  #include <fading_pars_vertex>\n#endif\n\nuniform float outlineThickness;\n\nvec4 calculateOutline( vec4 pos, vec3 objectNormal, vec4 skinned ) {\n    float thickness = outlineThickness;\n    const float ratio = 1.0;\n    vec4 pos2 = projectionMatrix * modelViewMatrix * vec4( skinned.xyz + objectNormal, 1.0 );\n    vec4 norm = normalize( pos - pos2 );\n    return pos + norm * thickness * pos.w * ratio;\n}`;\n\nconst vertexShaderChunk2 = `\n#if ! defined( LAMBERT ) && ! defined( PHONG ) && ! defined( TOON ) && ! defined( STANDARD )\n    #ifndef USE_ENVMAP\n        vec3 objectNormal = normalize( normal );\n    #endif\n#endif\n\n#ifdef FLIP_SIDED\n    objectNormal = -objectNormal;\n#endif\n\n#ifdef DECLARE_TRANSFORMED\n    vec3 transformed = vec3( position );\n#endif\n\n#ifdef USE_EXTRUSION\n #ifndef HAS_EXTRUSION_VERTEX\n  #include <extrusion_vertex>\n #endif\n#endif\n\n#ifdef USE_FADING\n  #include <fading_vertex>\n#endif\n\n#ifdef USE_EXTRUSION\n  gl_Position = calculateOutline( projectionMatrix * modelViewMatrix * vec4( transformed, 1.0 ),\n      objectNormal, vec4( transformed, 1.0 ) );\n#else\n  gl_Position = calculateOutline( gl_Position, objectNormal, vec4( transformed, 1.0 ) );\n#endif\n\n#include <fog_vertex>`;\n\nconst fragmentShader = `\n#include <common>\n#include <fog_pars_fragment>\n\n#ifdef USE_EXTRUSION\n  #include <extrusion_pars_fragment>\n#endif\n\n#ifdef USE_FADING\n  #include <fading_pars_fragment>\n#endif\n\nuniform vec3 outlineColor;\nuniform float outlineAlpha;\n\nvoid main() {\n\n    gl_FragColor = vec4( outlineColor, outlineAlpha );\n\n    #include <fog_fragment>\n\n    #ifdef USE_EXTRUSION\n      #include <extrusion_fragment>\n    #endif\n\n    #ifdef USE_FADING\n      #include <fading_fragment>\n    #endif\n}`;\n\n/**\n * Effect to render bold lines around extruded polygons.\n *\n * Implemented by rendering the mesh geometries with an outline material before rendering them\n * again with their original.\n */\nexport class OutlineEffect {\n    enabled: boolean = true;\n\n    autoClear: boolean;\n    domElement: HTMLCanvasElement;\n    shadowMap: THREE.WebGLShadowMap;\n\n    private m_defaultThickness: number = 0.02;\n    private readonly m_defaultColor: THREE.Color = new THREE.Color(0, 0, 0);\n    private readonly m_defaultAlpha: number = 1;\n    private readonly m_defaultKeepAlive: boolean = false;\n    private m_ghostExtrudedPolygons: boolean = false;\n\n    private m_cache: any = {};\n    private readonly m_removeThresholdCount: number = 60;\n    private m_originalMaterials: any = {};\n    private m_originalOnBeforeRenders: any = {};\n\n    private readonly m_shaderIDs: { [key: string]: string } = {\n        MeshBasicMaterial: \"basic\",\n        MeshLambertMaterial: \"lambert\",\n        MeshPhongMaterial: \"phong\",\n        MeshToonMaterial: \"phong\",\n        MeshStandardMaterial: \"physical\",\n        MeshPhysicalMaterial: \"physical\"\n    };\n\n    private readonly m_uniformsChunk = {\n        outlineThickness: { value: this.m_defaultThickness },\n        outlineColor: { value: this.m_defaultColor },\n        outlineAlpha: { value: this.m_defaultAlpha }\n    };\n\n    constructor(private m_renderer: THREE.WebGLRenderer) {\n        this.autoClear = m_renderer.autoClear;\n        this.domElement = m_renderer.domElement;\n        this.shadowMap = m_renderer.shadowMap;\n    }\n\n    set thickness(thickness: number) {\n        this.m_defaultThickness = thickness;\n        this.m_uniformsChunk.outlineThickness.value = thickness;\n        this.m_cache = {};\n    }\n\n    set color(color: string) {\n        this.m_defaultColor.set(color);\n        this.m_cache = {};\n    }\n\n    set ghostExtrudedPolygons(ghost: boolean) {\n        this.m_ghostExtrudedPolygons = ghost;\n    }\n\n    clear(color: boolean, depth: boolean, stencil: boolean) {\n        this.m_renderer.clear(color, depth, stencil);\n    }\n\n    getPixelRatio() {\n        return this.m_renderer.getPixelRatio();\n    }\n\n    setPixelRatio(value: number) {\n        this.m_renderer.setPixelRatio(value);\n    }\n\n    getSize(target: THREE.Vector2) {\n        return this.m_renderer.getSize(target);\n    }\n\n    setSize(width: number, height: number, updateStyle: boolean) {\n        this.m_renderer.setSize(width, height, updateStyle);\n    }\n\n    setViewport(x: number, y: number, width: number, height: number) {\n        this.m_renderer.setViewport(x, y, width, height);\n    }\n\n    setScissor(x: number, y: number, width: number, height: number) {\n        this.m_renderer.setScissor(x, y, width, height);\n    }\n\n    setScissorTest(boolean: boolean) {\n        this.m_renderer.setScissorTest(boolean);\n    }\n\n    setRenderTarget(renderTarget: THREE.WebGLRenderTarget) {\n        this.m_renderer.setRenderTarget(renderTarget);\n    }\n\n    render(scene: THREE.Scene, camera: THREE.Camera) {\n        // Re-rendering the scene with the outline effect enables to hide the\n        // extruded polygons and show only the outlines (it is a hack and should be\n        // implemented another way!).\n        if (this.m_ghostExtrudedPolygons) {\n            if (!this.enabled) {\n                this.m_renderer.render(scene, camera);\n                return;\n            }\n\n            const currentAutoClear = this.m_renderer.autoClear;\n            this.m_renderer.autoClear = this.autoClear;\n\n            this.m_renderer.render(scene, camera);\n\n            this.m_renderer.autoClear = currentAutoClear;\n        }\n\n        this.renderOutline(scene, camera);\n    }\n\n    renderOutline(scene: THREE.Scene, camera: THREE.Camera) {\n        const currentAutoClear = this.m_renderer.autoClear;\n        const currentSceneAutoUpdate = scene.autoUpdate;\n        const currentSceneBackground = scene.background;\n        const currentShadowMapEnabled = this.m_renderer.shadowMap.enabled;\n\n        scene.autoUpdate = false;\n        scene.background = null;\n        this.m_renderer.autoClear = false;\n        this.m_renderer.shadowMap.enabled = false;\n\n        scene.traverse(this.setOutlineMaterial.bind(this));\n\n        this.m_renderer.render(scene, camera);\n\n        scene.traverse(this.restoreOriginalMaterial.bind(this));\n\n        this.cleanupCache();\n\n        scene.autoUpdate = currentSceneAutoUpdate;\n        scene.background = currentSceneBackground;\n        this.m_renderer.autoClear = currentAutoClear;\n        this.m_renderer.shadowMap.enabled = currentShadowMapEnabled;\n    }\n\n    private createInvisibleMaterial() {\n        return new THREE.ShaderMaterial({ name: \"invisible\", visible: false });\n    }\n\n    private createMaterial(originalMaterial: THREE.Material) {\n        // EdgeMaterial or depth prepass material should not be used for outlines.\n        if (\n            originalMaterial instanceof EdgeMaterial ||\n            (originalMaterial as DepthPrePassProperties).isDepthPrepassMaterial === true\n        ) {\n            return this.createInvisibleMaterial();\n        }\n\n        const shaderID = this.m_shaderIDs[originalMaterial.type];\n        let originalVertexShader;\n\n        let originalUniforms: UniformsType | undefined =\n            (originalMaterial as MixinShaderProperties).shaderUniforms !== undefined\n                ? (originalMaterial as MixinShaderProperties).shaderUniforms\n                : (originalMaterial as THREE.ShaderMaterial).uniforms;\n\n        if (shaderID !== undefined) {\n            const shader = THREE.ShaderLib[shaderID];\n            originalUniforms = shader.uniforms;\n            originalVertexShader = shader.vertexShader;\n        } else if ((originalMaterial as any).isRawShaderMaterial === true) {\n            originalVertexShader = (originalMaterial as any).vertexShader;\n\n            if (\n                !/attribute\\s+vec3\\s+position\\s*;/.test(originalVertexShader) ||\n                !/attribute\\s+vec3\\s+normal\\s*;/.test(originalVertexShader)\n            ) {\n                return this.createInvisibleMaterial();\n            }\n        } else if ((originalMaterial as any).isShaderMaterial === true) {\n            originalVertexShader = (originalMaterial as any).vertexShader;\n        } else {\n            return this.createInvisibleMaterial();\n        }\n\n        const isExtrusionMaterial =\n            (originalMaterial as MixinShaderProperties).shaderUniforms !== undefined &&\n            (originalMaterial as any).shaderUniforms.extrusionRatio !== undefined;\n\n        const isFadingMaterial = FadingFeature.isDefined(originalMaterial as FadingFeature);\n\n        const uniforms: UniformsType = { ...originalUniforms, ...this.m_uniformsChunk };\n\n        const vertexShader = originalVertexShader\n            // put vertexShaderChunk right before \"void main() {...}\"\n            .replace(/void\\s+main\\s*\\(\\s*\\)/, vertexShaderChunk + \"\\nvoid main()\")\n            // put vertexShaderChunk2 the end of \"void main() {...}\"\n            // Note: here assums originalVertexShader ends with \"}\" of \"void main() {...}\"\n            .replace(/\\}\\s*$/, vertexShaderChunk2 + \"\\n}\")\n            // remove any light related lines\n            // Note: here is very sensitive to originalVertexShader\n            // TODO: consider safer way\n            .replace(/#include\\s+<[\\w_]*light[\\w_]*>/g, \"\");\n\n        const defines: any = {};\n\n        if (\n            !/vec3\\s+transformed\\s*=/.test(originalVertexShader) &&\n            !/#include\\s+<begin_vertex>/.test(originalVertexShader)\n        ) {\n            (defines as any).DECLARE_TRANSFORMED = true;\n        }\n\n        if (isExtrusionMaterial) {\n            // If the original material is setup for animated extrusion (like buildings), add the\n            // uniform describing the extrusion to the outline material.\n            uniforms.extrusionRatio = { value: ExtrusionFeatureDefs.DEFAULT_RATIO_MIN };\n            defines.USE_EXTRUSION = 1;\n        }\n\n        if (isFadingMaterial) {\n            uniforms.fadeNear = {\n                value:\n                    originalUniforms!.fadeNear !== undefined\n                        ? originalUniforms!.fadeNear.value\n                        : FadingFeature.DEFAULT_FADE_NEAR\n            };\n            uniforms.fadeFar = {\n                value:\n                    originalUniforms!.fadeFar !== undefined\n                        ? originalUniforms!.fadeFar.value\n                        : FadingFeature.DEFAULT_FADE_FAR\n            };\n            defines.USE_FADING = 1;\n        }\n\n        const outlineMaterial = new THREE.ShaderMaterial({\n            defines,\n            uniforms,\n            vertexShader,\n            fragmentShader,\n            side: THREE.BackSide,\n            morphTargets: false,\n            morphNormals: false,\n            fog: false,\n            blending: THREE.CustomBlending,\n            blendSrc: THREE.SrcAlphaFactor,\n            blendDst: THREE.OneMinusSrcAlphaFactor,\n            blendSrcAlpha: THREE.OneFactor,\n            blendDstAlpha: THREE.OneMinusSrcAlphaFactor,\n            transparent: true,\n            polygonOffset: true,\n            // Extreme values used here to reduce artifacts, especially at tile borders.\n            polygonOffsetFactor: 10.0,\n            polygonOffsetUnits: 30.0\n        });\n\n        return outlineMaterial;\n    }\n\n    private getOutlineMaterialFromCache(originalMaterial: THREE.Material) {\n        let data = this.m_cache[originalMaterial.uuid];\n\n        if (data === undefined) {\n            data = {\n                material: this.createMaterial(originalMaterial),\n                used: true,\n                keepAlive: this.m_defaultKeepAlive,\n                count: 0\n            };\n\n            this.m_cache[originalMaterial.uuid] = data;\n        }\n\n        data.used = true;\n\n        return data.material;\n    }\n\n    private getOutlineMaterial(originalMaterial: THREE.Material) {\n        const outlineMaterial = this.getOutlineMaterialFromCache(originalMaterial);\n\n        this.m_originalMaterials[outlineMaterial.uuid] = originalMaterial;\n\n        this.updateOutlineMaterial(outlineMaterial, originalMaterial);\n\n        return outlineMaterial;\n    }\n\n    private setOutlineMaterial(object: THREE.Object3D) {\n        if ((object as THREE.Mesh).material === undefined) {\n            return;\n        }\n\n        if (Array.isArray((object as THREE.Mesh).material)) {\n            for (\n                let i = 0, il = ((object as THREE.Mesh).material as THREE.Material[]).length;\n                i < il;\n                i++\n            ) {\n                ((object as THREE.Mesh).material as THREE.Material[])[i] = this.getOutlineMaterial(\n                    ((object as THREE.Mesh).material as THREE.Material[])[i]\n                );\n            }\n        } else {\n            (object as THREE.Mesh).material = this.getOutlineMaterial(\n                (object as THREE.Mesh).material as THREE.Material\n            );\n        }\n\n        this.m_originalOnBeforeRenders[object.uuid] = object.onBeforeRender;\n        object.onBeforeRender = chainCallbacks(\n            object.onBeforeRender,\n            this.onBeforeRender.bind(this)\n        );\n    }\n\n    private restoreOriginalMaterial(object: THREE.Object3D) {\n        if ((object as THREE.Mesh).material === undefined) {\n            return;\n        }\n\n        if (Array.isArray((object as THREE.Mesh).material)) {\n            for (\n                let i = 0, il = ((object as THREE.Mesh).material as THREE.Material[]).length;\n                i < il;\n                i++\n            ) {\n                ((object as THREE.Mesh).material as THREE.Material[])[i] = this.m_originalMaterials[\n                    ((object as THREE.Mesh).material as THREE.Material[])[i].uuid\n                ];\n            }\n        } else {\n            (object as THREE.Mesh).material = this.m_originalMaterials[\n                ((object as THREE.Mesh).material as THREE.Material).uuid\n            ];\n        }\n\n        object.onBeforeRender = this.m_originalOnBeforeRenders[object.uuid];\n    }\n\n    private onBeforeRender(\n        renderer: THREE.WebGLRenderer,\n        scene: THREE.Scene,\n        camera: THREE.Camera,\n        geometry: THREE.BufferGeometry,\n        material: THREE.Material,\n        group: THREE.Group\n    ) {\n        const originalMaterial = this.m_originalMaterials[material.uuid];\n\n        // just in case\n        if (originalMaterial === undefined) {\n            return;\n        }\n\n        this.updateUniforms(material, originalMaterial);\n    }\n\n    private updateUniforms(material: THREE.Material, originalMaterial: THREE.Material) {\n        const outlineParameters = originalMaterial.userData.outlineParameters;\n\n        const outlineUniforms = (material as THREE.ShaderMaterial).uniforms;\n        outlineUniforms.outlineAlpha.value = originalMaterial.opacity;\n\n        const originalUniforms =\n            (originalMaterial as any).shaderUniforms !== undefined\n                ? (originalMaterial as any).shaderUniforms\n                : (originalMaterial as any).uniforms;\n\n        if (outlineParameters !== undefined) {\n            if (outlineParameters.thickness !== undefined) {\n                outlineUniforms.outlineThickness.value = outlineParameters.thickness;\n            }\n            if (outlineParameters.color !== undefined) {\n                outlineUniforms.outlineColor.value.fromArray(outlineParameters.color);\n            }\n            if (outlineParameters.alpha !== undefined) {\n                outlineUniforms.outlineAlpha.value = outlineParameters.alpha;\n            }\n        }\n\n        // If the original material is setup for animated extrusion (like buildings), update the\n        // uniforms in the outline material.\n        if (originalUniforms !== undefined && originalUniforms.extrusionRatio !== undefined) {\n            const value = (originalMaterial as any).shaderUniforms.extrusionRatio.value;\n            (material as any).extrusionRatio = value;\n            (material as any).uniforms.extrusionRatio.value =\n                value !== undefined ? value : ExtrusionFeatureDefs.DEFAULT_RATIO_MIN;\n        }\n\n        // Copy available fading params to the outline material.\n        if (\n            material.defines?.USE_FADING !== undefined &&\n            originalUniforms.fadeNear !== undefined &&\n            originalUniforms.fadeFar !== undefined &&\n            originalUniforms.fadeFar.value >= 0.0\n        ) {\n            outlineUniforms.fadeNear.value = originalUniforms.fadeNear.value;\n            outlineUniforms.fadeFar.value = originalUniforms.fadeFar.value;\n        }\n    }\n\n    private updateOutlineMaterial(material: THREE.Material, originalMaterial: THREE.Material) {\n        if (material.name === \"invisible\") {\n            return;\n        }\n\n        const outlineParameters = originalMaterial.userData.outlineParameters;\n\n        (material as any).skinning = (originalMaterial as any).skinning;\n        (material as any).morphTargets = (originalMaterial as any).morphTargets;\n        (material as any).morphNormals = (originalMaterial as any).morphNormals;\n        material.fog = originalMaterial.fog;\n\n        if (outlineParameters !== undefined) {\n            material.visible =\n                originalMaterial.visible === false\n                    ? false\n                    : outlineParameters.visible !== undefined\n                    ? outlineParameters.visible\n                    : true;\n\n            if (outlineParameters.keepAlive !== undefined) {\n                this.m_cache[originalMaterial.uuid].keepAlive = outlineParameters.keepAlive;\n            }\n        } else {\n            material.visible = originalMaterial.visible;\n        }\n\n        if ((originalMaterial as any).wireframe === true || originalMaterial.depthTest === false) {\n            material.visible = false;\n        }\n    }\n\n    private cleanupCache() {\n        let keys;\n\n        // clear originialMaterials\n        keys = Object.keys(this.m_originalMaterials);\n\n        for (let i = 0, il = keys.length; i < il; i++) {\n            this.m_originalMaterials[keys[i]] = undefined;\n        }\n\n        // clear originalOnBeforeRenders\n        keys = Object.keys(this.m_originalOnBeforeRenders);\n\n        for (let i = 0, il = keys.length; i < il; i++) {\n            this.m_originalOnBeforeRenders[keys[i]] = undefined;\n        }\n\n        // remove unused outlineMaterial from cache\n        keys = Object.keys(this.m_cache);\n\n        for (const key of keys) {\n            if (this.m_cache[key].used === false) {\n                this.m_cache[key].count++;\n\n                if (\n                    this.m_cache[key].keepAlive === false &&\n                    this.m_cache[key].count > this.m_removeThresholdCount\n                ) {\n                    delete this.m_cache[key];\n                }\n            } else {\n                this.m_cache[key].used = false;\n                this.m_cache[key].count = 0;\n            }\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\n/**\n * The interface for the {@link Pass} class.\n */\nexport interface IPass {\n    /**\n     * Whether the {@link Pass} instance is active or not.\n     * @default `true`.\n     */\n    enabled: boolean;\n\n    /**\n     * Whether the render method should target a WebGLRenderTarget instance, or the frame buffer.\n     * @default `false`.\n     */\n    renderToScreen: boolean;\n\n    /**\n     * The resize method to extend in {@link Pass} implementations.\n     *\n     * @remarks\n     * It resizes the render targets. Call on resize events.\n     *\n     * @param width - Width to resize to.\n     * @param height - Height to resize to.\n     */\n    setSize(width: number, height: number): void;\n\n    /**\n     * The render method to extend in {@link Pass} implementations.\n     *\n     * @remarks\n     * This is the place where the desired\n     * effects or render operations are executed.\n     *\n     * @param renderer - The WebGLRenderer instance in use.\n     * @param scene - The scene to render.\n     * @param camera - The camera to render the scene through.\n     * @param writeBuffer - The optional WebGLRenderTarget instance to write to.\n     * @param readBuffer - The optional WebGLRenderTarget instance of a previous pass to write onto.\n     * @param delta - The time argument from the requestAnimationFrame.\n     */\n    render(\n        renderer: THREE.WebGLRenderer,\n        scene: THREE.Scene,\n        camera: THREE.Camera,\n        writeBuffer: THREE.WebGLRenderTarget | null,\n        readBuffer: THREE.WebGLRenderTarget | null,\n        delta?: number\n    ): void;\n}\n\n/**\n * The base class to extend for further passes in {@link MapView},\n * like the {@link MSAARenderPass},\n *\n * @remarks\n * `Pass` provides the core logic for both :\n * - render passes (proper scene renders),\n * - and shader passes (quad renders, i.e. effects added on top of the render output as a\n * postprocess).\n *\n * Even some shader passes still actually fall within the render pass category as they need to\n * re-render the scene to then deduce an effect, such as masking, AO, DoF etc. Others just need the\n * previous input image to apply a shader on top of it, as for bloom or NVIDIA's FXAA for example.\n * These only are proper shader passes.\n */\nexport class Pass implements IPass {\n    enabled: boolean = false;\n    renderToScreen: boolean = false;\n    setSize(width: number, height: number) {\n        // Implemented in sub-classes.\n    }\n\n    render(\n        renderer: THREE.WebGLRenderer,\n        scene: THREE.Scene,\n        camera: THREE.Camera,\n        writeBuffer: THREE.WebGLRenderTarget | null,\n        readBuffer: THREE.WebGLRenderTarget | null,\n        delta?: number\n    ) {\n        // Implemented in sub-classes.\n    }\n}\n\n/**\n * The pass that does a default normal scene rendering for further post-effects.\n */\nexport class RenderPass extends Pass {\n    constructor() {\n        super();\n    }\n\n    /** @override */\n    render(\n        renderer: THREE.WebGLRenderer,\n        scene: THREE.Scene,\n        camera: THREE.Camera,\n        writeBuffer: THREE.WebGLRenderTarget | null,\n        readBuffer: THREE.WebGLRenderTarget | null\n    ) {\n        renderer.setRenderTarget(this.renderToScreen ? null : writeBuffer);\n        renderer.render(scene, camera);\n    }\n}\n\n/**\n * The base class to extend for post-effects on the final render (like Vignette, Sepia, color\n * correction...)\n */\nexport class ShaderPass extends Pass {\n    uniforms: { [uniform: string]: THREE.IUniform };\n    material: THREE.Material;\n    fsQuad: FullScreenQuad;\n    constructor(shader: THREE.Shader, private readonly textureID: string = \"tDiffuse\") {\n        super();\n        if (shader instanceof THREE.ShaderMaterial) {\n            this.uniforms = shader.uniforms;\n            this.material = shader;\n        } else {\n            this.uniforms = THREE.UniformsUtils.clone(shader.uniforms);\n            this.material = new THREE.ShaderMaterial({\n                defines: { ...(shader as any).defines },\n                uniforms: this.uniforms,\n                vertexShader: shader.vertexShader,\n                fragmentShader: shader.fragmentShader\n            });\n        }\n        this.fsQuad = new FullScreenQuad(this.material);\n    }\n\n    /** @override */\n    render(\n        renderer: THREE.WebGLRenderer,\n        scene: THREE.Scene,\n        camera: THREE.Camera,\n        writeBuffer: THREE.WebGLRenderTarget,\n        readBuffer: THREE.WebGLRenderTarget,\n        delta?: number\n    ) {\n        if (this.uniforms[this.textureID]) {\n            this.uniforms[this.textureID].value = readBuffer.texture;\n        }\n        this.fsQuad.material = this.material;\n        renderer.setRenderTarget(this.renderToScreen ? null : writeBuffer);\n        this.fsQuad.render(renderer);\n    }\n}\n\nclass FullScreenQuad {\n    private m_mesh: THREE.Mesh;\n    private readonly m_camera: THREE.Camera;\n    constructor(material: THREE.Material) {\n        this.m_camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\n        const geometry = new THREE.PlaneBufferGeometry(2, 2);\n        this.m_mesh = new THREE.Mesh(geometry, material);\n    }\n\n    get material(): THREE.Material {\n        return this.m_mesh.material as THREE.Material;\n    }\n\n    set material(value: THREE.Material) {\n        this.m_mesh.material = value;\n    }\n\n    render(renderer: THREE.WebGLRenderer) {\n        renderer.render((this.m_mesh as any) as THREE.Scene, this.m_camera);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CopyShader, LuminosityHighPassShader } from \"@here/harp-materials\";\nimport * as THREE from \"three\";\n\nimport { Pass } from \"./Pass\";\n\nconst BlurDirectionX = new THREE.Vector2(1.0, 0.0);\nconst BlurDirectionY = new THREE.Vector2(0.0, 1.0);\n\n/**\n * The TS version of ThreeJS's UnrealBloomPass.\n */\nexport class BloomPass extends Pass {\n    strength: number;\n    radius: number;\n    threshold: number;\n    resolution: THREE.Vector2 = new THREE.Vector2(256, 256);\n    private readonly m_renderTargetsHorizontal: THREE.WebGLRenderTarget[] = [];\n    private readonly m_renderTargetsVertical: THREE.WebGLRenderTarget[] = [];\n    private readonly m_nMips: number = 5;\n    private readonly m_highPassUniforms: any;\n    private readonly m_materialHighPassFilter: THREE.ShaderMaterial;\n    private readonly m_separableBlurMaterials: THREE.ShaderMaterial[] = [];\n    private readonly m_materialCopy: THREE.ShaderMaterial;\n    private readonly m_copyUniforms: any;\n    private readonly m_compositeMaterial: THREE.ShaderMaterial;\n\n    private readonly m_camera: THREE.OrthographicCamera = new THREE.OrthographicCamera(\n        -1,\n        1,\n        1,\n        -1,\n        0,\n        1\n    );\n\n    private readonly m_scene: THREE.Scene = new THREE.Scene();\n    private m_basic = new THREE.MeshBasicMaterial();\n    private m_quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2));\n\n    private readonly m_bloomTintColors: THREE.Vector3[] = [\n        new THREE.Vector3(1, 1, 1),\n        new THREE.Vector3(1, 1, 1),\n        new THREE.Vector3(1, 1, 1),\n        new THREE.Vector3(1, 1, 1),\n        new THREE.Vector3(1, 1, 1)\n    ];\n\n    private readonly m_renderTargetBright: THREE.WebGLRenderTarget;\n\n    constructor(resolution: THREE.Vector2, strength: number, radius: number, threshold: number) {\n        super();\n\n        this.strength = strength;\n        this.radius = radius;\n        this.threshold = threshold;\n        this.resolution = resolution;\n\n        this.m_quad.frustumCulled = false;\n        this.m_scene.add(this.m_quad);\n\n        const pars = {\n            minFilter: THREE.LinearFilter,\n            magFilter: THREE.LinearFilter,\n            format: THREE.RGBAFormat\n        };\n\n        let resx = Math.round(this.resolution.x / 2);\n        let resy = Math.round(this.resolution.y / 2);\n\n        this.m_renderTargetBright = new THREE.WebGLRenderTarget(resx, resy, pars);\n        this.m_renderTargetBright.texture.name = \"UnrealBloomPass.bright\";\n        this.m_renderTargetBright.texture.generateMipmaps = false;\n\n        for (let i = 0; i < this.m_nMips; i++) {\n            const renderTargetHorizonal = new THREE.WebGLRenderTarget(resx, resy, pars);\n            renderTargetHorizonal.texture.name = \"UnrealBloomPass.h\" + i;\n            renderTargetHorizonal.texture.generateMipmaps = false;\n            this.m_renderTargetsHorizontal.push(renderTargetHorizonal);\n\n            const renderTargetVertical = new THREE.WebGLRenderTarget(resx, resy, pars);\n            renderTargetVertical.texture.name = \"UnrealBloomPass.v\" + i;\n            renderTargetVertical.texture.generateMipmaps = false;\n            this.m_renderTargetsVertical.push(renderTargetVertical);\n\n            resx = Math.round(resx / 2);\n            resy = Math.round(resy / 2);\n        }\n\n        this.m_highPassUniforms = THREE.UniformsUtils.clone(LuminosityHighPassShader.uniforms);\n\n        this.m_highPassUniforms[\"luminosityThreshold\"].value = threshold;\n        this.m_highPassUniforms[\"smoothWidth\"].value = 0.01;\n\n        this.m_materialHighPassFilter = new THREE.ShaderMaterial({\n            uniforms: this.m_highPassUniforms,\n            vertexShader: LuminosityHighPassShader.vertexShader,\n            fragmentShader: LuminosityHighPassShader.fragmentShader,\n            defines: {}\n        });\n\n        // Gaussian Blur Materials\n        const kernelSizeArray = [3, 5, 7, 9, 11];\n        resx = Math.round(this.resolution.x / 2);\n        resy = Math.round(this.resolution.y / 2);\n        for (let i = 0; i < this.m_nMips; i++) {\n            this.m_separableBlurMaterials.push(this.getSeperableBlurMaterial(kernelSizeArray[i]));\n            this.m_separableBlurMaterials[i].uniforms[\"texSize\"].value = new THREE.Vector2(\n                resx,\n                resy\n            );\n            resx = Math.round(resx / 2);\n            resy = Math.round(resy / 2);\n        }\n\n        // Composite material\n        this.m_compositeMaterial = this.getCompositeMaterial(this.m_nMips);\n        this.m_compositeMaterial.uniforms[\n            \"blurTexture1\"\n        ].value = this.m_renderTargetsVertical[0].texture;\n        this.m_compositeMaterial.uniforms[\n            \"blurTexture2\"\n        ].value = this.m_renderTargetsVertical[1].texture;\n        this.m_compositeMaterial.uniforms[\n            \"blurTexture3\"\n        ].value = this.m_renderTargetsVertical[2].texture;\n        this.m_compositeMaterial.uniforms[\n            \"blurTexture4\"\n        ].value = this.m_renderTargetsVertical[3].texture;\n        this.m_compositeMaterial.uniforms[\n            \"blurTexture5\"\n        ].value = this.m_renderTargetsVertical[4].texture;\n        this.m_compositeMaterial.uniforms[\"bloomStrength\"].value = strength;\n        this.m_compositeMaterial.uniforms[\"bloomRadius\"].value = 0.1;\n        this.m_compositeMaterial.needsUpdate = true;\n\n        const bloomFactors = [1.0, 0.8, 0.6, 0.4, 0.2];\n        this.m_compositeMaterial.uniforms[\"bloomFactors\"].value = bloomFactors;\n        this.m_compositeMaterial.uniforms[\"bloomTintColors\"].value = this.m_bloomTintColors;\n\n        this.m_copyUniforms = THREE.UniformsUtils.clone(CopyShader.uniforms);\n        this.m_copyUniforms[\"opacity\"].value = 1.0;\n\n        this.m_materialCopy = new THREE.ShaderMaterial({\n            uniforms: this.m_copyUniforms,\n            vertexShader: CopyShader.vertexShader,\n            fragmentShader: CopyShader.fragmentShader,\n            blending: THREE.AdditiveBlending,\n            depthTest: false,\n            depthWrite: false,\n            transparent: true\n        });\n    }\n\n    dispose() {\n        for (const rt of this.m_renderTargetsHorizontal) {\n            rt.dispose();\n        }\n        for (const rt of this.m_renderTargetsVertical) {\n            rt.dispose();\n        }\n        this.m_renderTargetBright.dispose();\n    }\n\n    /** @override */\n    setSize(width: number, height: number) {\n        let resx = Math.round(width / 2);\n        let resy = Math.round(height / 2);\n        this.m_renderTargetBright.setSize(resx, resy);\n        for (let i = 0; i < this.m_nMips; i++) {\n            this.m_renderTargetsHorizontal[i].setSize(resx, resy);\n            this.m_renderTargetsVertical[i].setSize(resx, resy);\n            this.m_separableBlurMaterials[i].uniforms[\"texSize\"].value = new THREE.Vector2(\n                resx,\n                resy\n            );\n            resx = Math.round(resx / 2);\n            resy = Math.round(resy / 2);\n        }\n    }\n\n    /** @override */\n    render(\n        renderer: THREE.WebGLRenderer,\n        scene: THREE.Scene,\n        camera: THREE.Camera,\n        writeBuffer: THREE.WebGLRenderTarget | null,\n        readBuffer: THREE.WebGLRenderTarget\n    ) {\n        // Render input to screen\n        if (this.renderToScreen) {\n            this.m_quad.material = this.m_basic;\n            this.m_basic.map = readBuffer.texture;\n            renderer.setRenderTarget(null!);\n            renderer.clear();\n            renderer.render(this.m_scene, this.m_camera);\n        }\n\n        // 1. Extract bright areas\n        this.m_highPassUniforms[\"tDiffuse\"].value = readBuffer.texture;\n        this.m_highPassUniforms[\"luminosityThreshold\"].value = this.threshold;\n        this.m_quad.material = this.m_materialHighPassFilter;\n\n        renderer.setRenderTarget(this.m_renderTargetBright);\n        renderer.clear();\n        renderer.render(this.m_scene, this.m_camera);\n\n        // 2. Blur all the mips progressively\n        let inputRenderTarget = this.m_renderTargetBright;\n\n        for (let i = 0; i < this.m_nMips; i++) {\n            this.m_quad.material = this.m_separableBlurMaterials[i];\n\n            this.m_separableBlurMaterials[i].uniforms[\"colorTexture\"].value =\n                inputRenderTarget.texture;\n            this.m_separableBlurMaterials[i].uniforms[\"direction\"].value = BlurDirectionX;\n            renderer.setRenderTarget(this.m_renderTargetsHorizontal[i]);\n            renderer.clear();\n            renderer.render(this.m_scene, this.m_camera);\n\n            this.m_separableBlurMaterials[i].uniforms[\n                \"colorTexture\"\n            ].value = this.m_renderTargetsHorizontal[i].texture;\n            this.m_separableBlurMaterials[i].uniforms[\"direction\"].value = BlurDirectionY;\n            renderer.setRenderTarget(this.m_renderTargetsVertical[i]);\n            renderer.clear();\n            renderer.render(this.m_scene, this.m_camera);\n\n            inputRenderTarget = this.m_renderTargetsVertical[i];\n        }\n\n        // Composite all the mips\n        this.m_quad.material = this.m_compositeMaterial;\n        this.m_compositeMaterial.uniforms[\"bloomStrength\"].value = this.strength;\n        this.m_compositeMaterial.uniforms[\"bloomRadius\"].value = this.radius;\n        this.m_compositeMaterial.uniforms[\"bloomTintColors\"].value = this.m_bloomTintColors;\n\n        renderer.setRenderTarget(this.m_renderTargetsHorizontal[0]);\n        renderer.clear();\n        renderer.render(this.m_scene, this.m_camera);\n\n        // Blend it additively over the input texture\n        this.m_quad.material = this.m_materialCopy;\n        this.m_copyUniforms[\"tDiffuse\"].value = this.m_renderTargetsHorizontal[0].texture;\n\n        if (this.renderToScreen) {\n            renderer.setRenderTarget(null!);\n            renderer.render(this.m_scene, this.m_camera);\n        } else {\n            renderer.setRenderTarget(readBuffer);\n            renderer.render(this.m_scene, this.m_camera);\n        }\n    }\n\n    getSeperableBlurMaterial(kernelRadius: number): THREE.ShaderMaterial {\n        return new THREE.ShaderMaterial({\n            defines: {\n                KERNEL_RADIUS: kernelRadius,\n                SIGMA: kernelRadius\n            },\n\n            uniforms: {\n                colorTexture: { value: null },\n                texSize: { value: new THREE.Vector2(0.5, 0.5) },\n                direction: { value: new THREE.Vector2(0.5, 0.5) }\n            },\n\n            vertexShader: `varying vec2 vUv;\n            void main() {\n                vUv = uv;\n                gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n            }`,\n\n            fragmentShader: `#include <common>\n            varying vec2 vUv;\n            uniform sampler2D colorTexture;\n            uniform vec2 texSize;\n            uniform vec2 direction;\n\n            float gaussianPdf(in float x, in float sigma) {\n                return 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\n            }\n            void main() {\\n\\\n                vec2 invSize = 1.0 / texSize;\n                float fSigma = float(SIGMA);\n                float weightSum = gaussianPdf(0.0, fSigma);\n                vec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\n                for( int i = 1; i < KERNEL_RADIUS; i ++ ) {\n                    float x = float(i);\n                    float w = gaussianPdf(x, fSigma);\n                    vec2 uvOffset = direction * invSize * x;\n                    vec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\n                    vec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\n                    diffuseSum += (sample1 + sample2) * w;\n                    weightSum += 2.0 * w;\n                }\n                gl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n            }`\n        });\n    }\n\n    getCompositeMaterial(nMips: number): THREE.ShaderMaterial {\n        return new THREE.ShaderMaterial({\n            defines: {\n                NUM_MIPS: nMips\n            },\n\n            uniforms: {\n                blurTexture1: { value: null },\n                blurTexture2: { value: null },\n                blurTexture3: { value: null },\n                blurTexture4: { value: null },\n                blurTexture5: { value: null },\n                dirtTexture: { value: null },\n                bloomStrength: { value: 1.0 },\n                bloomFactors: { value: null },\n                bloomTintColors: { value: null },\n                bloomRadius: { value: 0.0 }\n            },\n\n            vertexShader: `varying vec2 vUv;\n                void main() {\n                    vUv = uv;\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n                }`,\n\n            fragmentShader: `varying vec2 vUv;\n                uniform sampler2D blurTexture1;\n                uniform sampler2D blurTexture2;\n                uniform sampler2D blurTexture3;\n                uniform sampler2D blurTexture4;\n                uniform sampler2D blurTexture5;\n                uniform sampler2D dirtTexture;\n                uniform float bloomStrength;\n                uniform float bloomRadius;\n                uniform float bloomFactors[NUM_MIPS];\n                uniform vec3 bloomTintColors[NUM_MIPS];\n\n                float lerpBloomFactor(const in float factor) {\n                    float mirrorFactor = 1.2 - factor;\n                    return mix(factor, mirrorFactor, bloomRadius);\n                }\n\n                void main() {\n                    gl_FragColor = bloomStrength * (\nlerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +\nlerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +\nlerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +\nlerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +\nlerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\n                }`\n        });\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport { IPassManager } from \"./IPassManager\";\nexport {\n    IMapAntialiasSettings,\n    IMapRenderingManager,\n    MapRenderingManager\n} from \"./MapRenderingManager\";\nexport { IPass, Pass } from \"./Pass\";\nexport { MSAARenderPass, MSAASampling } from \"./MSAARenderPass\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"@here/harp-geoutils\";\nimport { getOptionValue, ILogger, LoggerManager } from \"@here/harp-utils\";\n\nimport { CopyrightInfo } from \"./CopyrightInfo\";\nimport { CopyrightProvider } from \"./CopyrightProvider\";\n\ndeclare const require: any;\n\nconst RBush = require(\"rbush\");\n\n/**\n * Schema of [Map Tile API copyright\n * endpoint](https://developer.here.com/documentation/map-tile/topics/resource-copyright.html) JSON\n * response.\n */\nexport interface AreaCopyrightInfo {\n    /**\n     * Minimum zoom level for the specified copyright label.\n     */\n    minLevel?: number;\n\n    /**\n     * Maximum zoom level for the specified copyright label.\n     */\n    maxLevel?: number;\n\n    /**\n     * Copyright text to display after the copyright symbol on the map.\n     */\n    label: string;\n\n    /**\n     * Verbose copyright text of the label to display by mouse over label or info menu entry.\n     */\n    alt?: string;\n\n    /**\n     * The bounding boxes define areas where specific copyrights are valid. A bounding box is\n     * defined by bottom (latitude), left (longitude) and top (latitude), right (longitude).\n     *\n     * The default copyright has no boxes element and covers all other areas.\n     */\n    boxes?: Array<[number, number, number, number]>;\n}\n\n/**\n * Schema of [Map Tile API copyright\n * endpoint](https://developer.here.com/documentation/map-tile/topics/resource-copyright.html) JSON\n * response.\n */\nexport interface CopyrightCoverageResponse {\n    [scheme: string]: AreaCopyrightInfo[];\n}\n\n/**\n * Base class to provide copyrights based on copyright coverage information, defined by geographical\n * bounding boxes and relevant zoom level ranges.\n */\nexport abstract class CopyrightCoverageProvider implements CopyrightProvider {\n    /** Logger instance. */\n    protected readonly logger: ILogger = LoggerManager.instance.create(\"CopyrightCoverageProvider\");\n\n    private m_cachedTreePromise: Promise<any> | undefined;\n\n    /** Asynchronously retrieves copyright coverage data.\n     * @param abortSignal - Optional AbortSignal to cancel the request.\n     */\n    abstract getCopyrightCoverageData(abortSignal?: AbortSignal): Promise<AreaCopyrightInfo[]>;\n\n    /** @inheritdoc */\n    getTree(): Promise<any> {\n        if (this.m_cachedTreePromise !== undefined) {\n            return this.m_cachedTreePromise;\n        }\n\n        this.m_cachedTreePromise = this.getCopyrightCoverageData()\n            .then(coverageInfo => this.initRBush(coverageInfo))\n            .catch(error => {\n                this.logger.error(error);\n                return new RBush();\n            });\n\n        return this.m_cachedTreePromise;\n    }\n\n    /** @inheritdoc */\n    async getCopyrights(geoBox: GeoBox, level: number): Promise<CopyrightInfo[]> {\n        const tree = await this.getTree();\n\n        const result: CopyrightInfo[] = [];\n\n        const matchingEntries: AreaCopyrightInfo[] = tree.search({\n            minX: geoBox.west,\n            minY: geoBox.south,\n            maxX: geoBox.east,\n            maxY: geoBox.north\n        });\n\n        for (const entry of matchingEntries) {\n            const minLevel = getOptionValue(entry.minLevel, 0);\n            const maxLevel = getOptionValue(entry.maxLevel, Infinity);\n\n            if (level >= minLevel && level <= maxLevel) {\n                if (result.find(item => item.id === entry.label) === undefined) {\n                    result.push({ id: entry.label });\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Initializes RBush.\n     *\n     * @param entries - Entries for tree.\n     * @returns RBush instance.\n     */\n    initRBush(entries: AreaCopyrightInfo[]): any {\n        const tree = new RBush();\n\n        if (!entries) {\n            this.logger.warn(\"No copyright coverage data provided\");\n            return tree;\n        }\n\n        for (const entry of entries) {\n            const { minLevel, maxLevel, label, alt } = entry;\n\n            if (!entry.boxes) {\n                tree.insert({\n                    minX: -180,\n                    minY: -90,\n                    maxX: 180,\n                    maxY: 180,\n                    minLevel,\n                    maxLevel,\n                    label,\n                    alt\n                });\n            } else {\n                for (const box of entry.boxes) {\n                    const [minY, minX, maxY, maxX] = box;\n                    tree.insert({\n                        minX,\n                        minY,\n                        maxX,\n                        maxY,\n                        minLevel,\n                        maxLevel,\n                        label,\n                        alt\n                    });\n                }\n            }\n        }\n\n        return tree;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { getOptionValue } from \"@here/harp-utils\";\n\nimport { MapView, MapViewEventNames } from \"../MapView\";\nimport { CopyrightInfo } from \"./CopyrightInfo\";\n\n/**\n * Helper class that maintains up-to-date {@link MapView} copyright information in DOM element.\n *\n * @example\n *\n *     // HTML snippet\n *     <div id=\"copyrightNotice\" style=\"position:absolute; right:0; bottom:0; z-index:100\"></div>\n *\n *     // JavaScript\n *     const mapView = new MapView({ ... });\n *     CopyrightElementHandler.install(\"copyrightNotice\", mapView);\n */\nexport class CopyrightElementHandler {\n    /**\n     * Install {@link CopyrightElementHandler} on DOM element and - optionally -\n     * attach to a {@link MapView} instance.\n     *\n     * @param element - HTML DOM element or a HTML DOM element id\n     * @param mapView -, optional, [[attach]] to this {@link MapView}\n     */\n    static install(element: string | HTMLElement, mapView?: MapView): CopyrightElementHandler {\n        return new CopyrightElementHandler(element, mapView);\n    }\n\n    /**\n     * Static copyright info.\n     *\n     * Use when {@link MapView}'s {@link DataSource}'s do not provide proper copyright information.\n     */\n    staticInfo: CopyrightInfo[] | undefined;\n\n    private readonly m_defaults: Map<string, CopyrightInfo> = new Map();\n    private m_element: HTMLElement;\n    private m_mapViews: MapView[] = [];\n\n    /**\n     * Creates a new `CopyrightElementHandler` that updates the DOM element with the copyright info\n     * of the given `mapView`.\n     *\n     * Note: Generally, the static [[install]] method can be used to create and attach a new\n     * `CopyrightElementHandler` to a {@link MapView}\n     *\n     * @param element - HTML DOM element or a HTML DOM element id\n     * @param mapView - optional, [[attach]] to this {@link MapView} instance\n     */\n    constructor(element: string | HTMLElement, mapView?: MapView) {\n        if (typeof element === \"string\") {\n            const htmlElement = document.getElementById(element);\n            if (!htmlElement) {\n                throw new Error(`CopyrightElementHandler: unable to find DOM element #${element}`);\n            }\n            this.m_element = htmlElement;\n        } else {\n            this.m_element = element;\n        }\n\n        if (mapView !== undefined) {\n            this.attach(mapView);\n        }\n    }\n\n    /**\n     * Destroys this object by removing all event listeners from the attached {@link MapView}s.\n     */\n    destroy() {\n        for (const mapView of this.m_mapViews) {\n            mapView.removeEventListener(MapViewEventNames.CopyrightChanged, this.update);\n        }\n    }\n\n    /**\n     * Attaches this {@link CopyrightInfo} updates from {@link MapView} instance.\n     */\n    attach(mapView: MapView): this {\n        this.m_mapViews.push(mapView);\n\n        mapView.addEventListener(MapViewEventNames.CopyrightChanged, this.update);\n        this.update();\n\n        return this;\n    }\n\n    /**\n     * Stop following {@link CopyrightInfo} updates from {@link MapView} instance.\n     */\n    detach(mapView: MapView): this {\n        mapView.removeEventListener(MapViewEventNames.CopyrightChanged, this.update);\n\n        this.m_mapViews = this.m_mapViews.filter(item => item !== mapView);\n        this.update();\n\n        return this;\n    }\n\n    /**\n     * Set {@link CopyrightInfo} defaults to be used in case\n     * {@link DataSource} does not provide deatailed\n     * copyright information.\n     *\n     * @remarks\n     * The defaults will applied to all undefined `year`, `label` and `link` values in the copyright\n     * information retrieved from {@link MapView}.\n     */\n    setDefaults(defaults: CopyrightInfo[] | undefined): this {\n        this.m_defaults.clear();\n        if (defaults !== undefined) {\n            for (const item of defaults) {\n                this.m_defaults.set(item.id, item);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Sets the [[staticInfo]] property.\n     *\n     * A `CopyrightElementHandler` always displays a deduplicated sum of static copyright info and\n     * copyright information obtained from attached {@link MapView}s.\n     *\n     * This information is used when {@link DataSource}\n     * instances of given {@link MapView} do not provide\n     * copyright information.\n     */\n    setStaticCopyightInfo(staticInfo: CopyrightInfo[] | undefined): this {\n        this.staticInfo = staticInfo;\n        return this;\n    }\n\n    /**\n     * Update copyright info text in controlled HTML element.\n     */\n    update = () => {\n        const mergedCopyrightInfo = this.m_mapViews\n            .map(mapView => mapView.copyrightInfo)\n            .reduce(CopyrightInfo.mergeArrays, this.staticInfo ?? []);\n\n        // Conditionally hiding of element with copyright information.\n        // If nothing to show we schould to avoid empty white rectangle in right bottom corner.\n        if (mergedCopyrightInfo.length === 0) {\n            this.m_element.style.display = \"none\";\n            return;\n        } else {\n            this.m_element.style.display = \"block\";\n        }\n\n        if (this.m_defaults.size !== 0) {\n            for (const sourceInfo of mergedCopyrightInfo) {\n                const defaults = this.m_defaults.get(sourceInfo.id);\n                if (defaults !== undefined) {\n                    sourceInfo.year = getOptionValue(sourceInfo.year, defaults.year);\n                    sourceInfo.label = getOptionValue(sourceInfo.label, defaults.label);\n                    sourceInfo.link = getOptionValue(sourceInfo.link, defaults.link);\n                }\n            }\n        }\n        const deduped = CopyrightInfo.mergeArrays(mergedCopyrightInfo);\n\n        this.m_element.innerHTML = CopyrightInfo.formatAsHtml(deduped);\n    };\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { getOptionValue, MathUtils } from \"@here/harp-utils\";\n\n/**\n * Copyright info attached to data displayed on map. Provided by {@link DataSource} and attached\n * to {@link Tile}s.\n *\n * In most cases, an application should display this information on {@link MapView} to conform with\n * licencing terms of its map data providers.\n *\n * @see {@link CopyrightElementHandler}\n */\nexport interface CopyrightInfo {\n    /**\n     * Unique id of the copyright holder.\n     *\n     * @remarks\n     * `id`s should be unique. It is recommended to build them from unique identifiers like\n     * registered domain names.\n     *\n     * Examples:\n     *\n     *  * `openstreetmap.org` - for data originating from OpenStreetMap project\n     *  * `naturalearthdata.com` - for data originating from Natural Earth dataset\n     *\n     * Note: {@link DataSource} may return {@link CopyrightInfo}\n     * with only `id`, thus defining only holder\n     * of copyright, however, valid attribution may require proper `label` and `link`.\n     *\n     * Entries with same `id` are deduplicated by {@link CopyrightInfo.mergeArrays}.\n     */\n    id: string;\n\n    /**\n     * Copyright text to display after the copyright symbol on the map.\n     *\n     * If undefined, `id` is used as text label.\n     * Set it to empty string to not render a copyright info.\n     */\n    label?: string;\n\n    /**\n     * Optional URL pointing to further copyright information.\n     */\n    link?: string;\n\n    /**\n     * Optional, copyright notice year.\n     */\n    year?: number;\n}\n\nexport namespace CopyrightInfo {\n    /**\n     * Merge {@link CopyrightInfo} arrays, removing duplicates.\n     *\n     * `id` and `label` are considered keys in deduplication algorithm.\n     *\n     * @param sources - non-duplicate elements from this array are added to `target`\n     * @returns merge of all copyright infos in `sources`\n     */\n    export function mergeArrays(a: CopyrightInfo[], b?: CopyrightInfo[]): CopyrightInfo[] {\n        const result: CopyrightInfo[] = [];\n        for (const source of [a, b]) {\n            if (source === undefined) {\n                continue;\n            }\n\n            for (const sourceInfo of source) {\n                const existingInfo = result.find(\n                    findItem =>\n                        findItem.id === sourceInfo.id ||\n                        (findItem.label !== undefined && findItem.label === sourceInfo.label)\n                );\n\n                if (existingInfo === undefined) {\n                    result.push({ ...sourceInfo });\n                } else {\n                    existingInfo.year = MathUtils.max2(sourceInfo.year, existingInfo.year);\n                    existingInfo.label = getOptionValue(sourceInfo.label, existingInfo.label);\n                    existingInfo.link = getOptionValue(sourceInfo.link, existingInfo.link);\n                }\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Format copyright information to a HTML string that can be displayed in the UI.\n     *\n     * * Empty list returns empty string.\n     * * Entries with empty (but defined) labels are skipped.\n     *\n     * @param copyrightInfo - Array of copyrights to format.\n     */\n    export function formatAsHtml(copyrightInfo: CopyrightInfo[]): string {\n        if (copyrightInfo.length === 0) {\n            return \"\";\n        }\n\n        const filtered = copyrightInfo.filter(entry => entry.label !== \"\");\n        if (filtered.length === 0) {\n            return \"\";\n        }\n\n        return (\n            \"© \" +\n            filtered\n                .map(entry => {\n                    const label = entry.label ?? entry.id;\n                    const text = entry.year !== undefined ? `${entry.year} ${label}` : label;\n                    const link = entry.link;\n                    return link\n                        ? `<a href=\"${link}\" target=\"_blank\" rel=\"noreferrer noopener\">${text}</a>`\n                        : `${text}`;\n                })\n                .join(\", \")\n        );\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"@here/harp-geoutils\";\n\nimport { CopyrightInfo } from \"./CopyrightInfo\";\n\n/**\n * `CopyrightProvider` is an interface to retrieve copyrights information for geographic region\n * specified by bounding box.\n */\nexport interface CopyrightProvider {\n    /**\n     * Retrieves copyrights.\n     *\n     * @param geoBox - Bounding geo box to get copyrights for.\n     * @param level - Zoom level to get copyrights for.\n     * @returns Promise with an array of copyrights for this geo box.\n     */\n    getCopyrights(geoBox: GeoBox, level: number): Promise<CopyrightInfo[]>;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ITransferManager, TransferManager } from \"@here/harp-transfer-manager\";\n\nimport {\n    AreaCopyrightInfo,\n    CopyrightCoverageProvider,\n    CopyrightCoverageResponse\n} from \"./CopyrightCoverageProvider\";\n\ninterface RequestHeaders {\n    [field: string]: string;\n}\n\n/**\n * Copyright provider which retrieves copyright coverage information from provided URL.\n */\nexport class UrlCopyrightProvider extends CopyrightCoverageProvider {\n    private m_cachedCopyrightResponse: Promise<AreaCopyrightInfo[]> | undefined;\n\n    /**\n     * Default constructor.\n     *\n     * @param m_fetchURL - URL to fetch copyrights data from.\n     * @param m_baseScheme - Scheme to get copyrights from.\n     * @param m_requestHeaders - Optional request headers for requests(e.g. Authorization)\n     */\n    constructor(\n        private readonly m_fetchURL: string,\n        private readonly m_baseScheme: string,\n        private m_requestHeaders?: RequestHeaders,\n        private readonly m_transferManager: ITransferManager = TransferManager.instance()\n    ) {\n        super();\n    }\n\n    /**\n     * Sets request headers.\n     * @param headers -\n     */\n    setRequestHeaders(headers: RequestHeaders | undefined) {\n        this.m_requestHeaders = headers;\n    }\n\n    /**\n     * @inheritdoc\n     * @override\n     */\n    getCopyrightCoverageData(abortSignal?: AbortSignal): Promise<AreaCopyrightInfo[]> {\n        if (this.m_cachedCopyrightResponse !== undefined) {\n            return this.m_cachedCopyrightResponse;\n        }\n\n        this.m_cachedCopyrightResponse = this.m_transferManager\n            .downloadJson<CopyrightCoverageResponse>(this.m_fetchURL, {\n                headers: this.m_requestHeaders,\n                signal: abortSignal\n            })\n            .then(json => json[this.m_baseScheme])\n            .catch(error => {\n                this.logger.error(error);\n                return [];\n            });\n\n        return this.m_cachedCopyrightResponse;\n    }\n}\n","/*\n * Copyright (C) 2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeometryKind, Pickability } from \"@here/harp-datasource-protocol\";\nimport {\n    EdgeLengthGeometrySubdivisionModifier,\n    SubdivisionMode\n} from \"@here/harp-geometry/lib/EdgeLengthGeometrySubdivisionModifier\";\nimport { SphericalGeometrySubdivisionModifier } from \"@here/harp-geometry/lib/SphericalGeometrySubdivisionModifier\";\nimport { Projection, ProjectionType } from \"@here/harp-geoutils\";\nimport { MapMeshBasicMaterial, MapMeshStandardMaterial } from \"@here/harp-materials\";\nimport * as THREE from \"three\";\n\nimport { Tile } from \"../Tile\";\nimport { LodMesh } from \"./LodMesh\";\nimport { projectTilePlaneCorners } from \"./ProjectTilePlaneCorners\";\nimport { registerTileObject } from \"./RegisterTileObject\";\n\nconst tmpV = new THREE.Vector3();\n\n/**\n * Creates and adds a background plane mesh for the tile.\n * @param tile - The tile to which the ground plane belongs.\n * @param renderOrder - The plane render order.\n * @param materialOrColor - The plane material or a color for a default material.\n * @param opacity - The plane opacity.\n * @param createTexCoords - Whether to create texture coordinates.\n * @param receiveShadow - Whether the plane should receive shadows.\n * @param createMultiLod - Whether to generate multiple LODs for sphere projection.\n * @internal\n */\nexport function addGroundPlane(\n    tile: Tile,\n    renderOrder: number,\n    materialOrColor: THREE.Material | THREE.Material[] | number = tile.mapView.clearColor,\n    opacity: number = 1,\n    createTexCoords: boolean = false,\n    receiveShadow: boolean = tile.mapView.shadowsEnabled,\n    createMultiLod: boolean = tile.mapView.enableMixedLod !== false\n): THREE.Mesh {\n    const mesh = createGroundPlane(\n        tile,\n        createTexCoords,\n        receiveShadow,\n        materialOrColor,\n        createMultiLod,\n        opacity\n    );\n    mesh.receiveShadow = receiveShadow;\n    mesh.renderOrder = renderOrder;\n    registerTileObject(tile, mesh, GeometryKind.Background, { pickability: Pickability.transient });\n    tile.objects.push(mesh);\n    return mesh;\n}\n\nfunction createGroundPlane(\n    tile: Tile,\n    createTexCoords: boolean,\n    receiveShadow: boolean,\n    materialOrColor: THREE.Material | THREE.Material[] | number,\n    createMultiLod: boolean,\n    opacity: number\n): THREE.Mesh {\n    const { dataSource, projection } = tile;\n    const sourceProjection = dataSource.getTilingScheme().projection;\n    const shouldSubdivide = projection.type === ProjectionType.Spherical;\n    const useLocalTargetCoords = !shouldSubdivide;\n\n    const material =\n        typeof materialOrColor === \"number\"\n            ? createGroundPlaneMaterial(\n                  new THREE.Color(materialOrColor),\n                  receiveShadow,\n                  projection.type === ProjectionType.Spherical,\n                  opacity\n              )\n            : materialOrColor;\n\n    const geometry = createGroundPlaneGeometry(\n        tile,\n        useLocalTargetCoords,\n        createTexCoords,\n        receiveShadow\n    );\n\n    if (!shouldSubdivide) {\n        return new THREE.Mesh(geometry, material);\n    }\n\n    const geometries: THREE.BufferGeometry[] = [];\n    const sphericalModifier = new SphericalGeometrySubdivisionModifier(\n        THREE.MathUtils.degToRad(10),\n        sourceProjection\n    );\n\n    if (!createMultiLod) {\n        sphericalModifier.modify(geometry);\n        toLocalTargetCoords(geometry, sourceProjection, tile);\n\n        return new THREE.Mesh(geometry, material);\n    }\n\n    // Use a [[LodMesh]] to adapt tesselation of tile depending on zoom level\n    for (let zoomLevelOffset = 0; zoomLevelOffset < 4; ++zoomLevelOffset) {\n        const subdivision = Math.pow(2, zoomLevelOffset);\n        const zoomLevelGeometry = geometry.clone();\n        if (subdivision > 1) {\n            const edgeModifier = new EdgeLengthGeometrySubdivisionModifier(\n                subdivision,\n                tile.geoBox,\n                SubdivisionMode.All,\n                sourceProjection\n            );\n            edgeModifier.modify(zoomLevelGeometry);\n        }\n        sphericalModifier.modify(zoomLevelGeometry);\n        toLocalTargetCoords(zoomLevelGeometry, sourceProjection, tile);\n        geometries.push(zoomLevelGeometry);\n    }\n    return new LodMesh(geometries, material);\n}\n\nfunction toLocalTargetCoords(geom: THREE.BufferGeometry, srcProjection: Projection, tile: Tile) {\n    const attr = geom.getAttribute(\"position\") as THREE.BufferAttribute;\n    const oldArray = attr.array as Float64Array;\n    // Convert to single precision before rendering (WebGL does not support double\n    // precision).\n    const newArray = new Float32Array(oldArray.length);\n    for (let i = 0; i < attr.array.length; i += 1) {\n        tmpV.fromBufferAttribute(attr, i);\n        tile.projection.reprojectPoint(srcProjection, tmpV, tmpV).sub(tile.center);\n        tmpV.toArray(newArray, i * 3);\n    }\n    attr.array = newArray;\n    attr.needsUpdate = true;\n}\n\nfunction createGroundPlaneGeometry(\n    tile: Tile,\n    useLocalTargetCoords: boolean,\n    createTexCoords: boolean,\n    receiveShadow: boolean\n): THREE.BufferGeometry {\n    const { dataSource, projection } = tile;\n    const sourceProjection = dataSource.getTilingScheme().projection;\n    const tmpV = new THREE.Vector3();\n\n    const geometry = new THREE.BufferGeometry();\n    const tileCorners = projectTilePlaneCorners(tile, sourceProjection);\n    const cornersArray = [tileCorners.sw, tileCorners.se, tileCorners.nw, tileCorners.ne];\n    if (useLocalTargetCoords) {\n        for (const corner of cornersArray) {\n            projection.reprojectPoint(sourceProjection, corner, corner).sub(tile.center);\n        }\n    }\n    // Use 64bits floats for world coordinates to avoid precision issues on coordinate\n    // tranformations. The array must be converted to single precision before rendering.\n    const bufferArray = useLocalTargetCoords ? new Float32Array(12) : new Float64Array(12);\n    const posAttr = new THREE.BufferAttribute(bufferArray, 3).copyVector3sArray(cornersArray);\n    geometry.setAttribute(\"position\", posAttr);\n\n    if (receiveShadow) {\n        // Webmercator needs to have it negated to work correctly.\n        sourceProjection.surfaceNormal(tileCorners.sw, tmpV).negate();\n        const normAttr = new THREE.BufferAttribute(new Float32Array(12), 3).copyVector3sArray(\n            Array(4).fill(tmpV)\n        );\n        geometry.setAttribute(\"normal\", normAttr);\n    }\n    geometry.setIndex(new THREE.BufferAttribute(new Uint16Array([0, 1, 2, 2, 1, 3]), 1));\n\n    if (createTexCoords) {\n        const uvAttr = new THREE.BufferAttribute(new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]), 2);\n        geometry.setAttribute(\"uv\", uvAttr);\n    }\n\n    return geometry;\n}\n\nfunction createGroundPlaneMaterial(\n    color: THREE.Color,\n    receiveShadow: boolean,\n    depthWrite: boolean,\n    opacity: number\n): THREE.Material {\n    if (receiveShadow) {\n        return new MapMeshStandardMaterial({\n            color,\n            visible: true,\n            depthWrite,\n            removeDiffuseLight: true,\n            opacity\n        });\n    } else {\n        return new MapMeshBasicMaterial({\n            color,\n            visible: true,\n            depthWrite,\n            opacity\n        });\n    }\n}\n","/*\n * Copyright (C) 2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"@here/harp-geoutils\";\nimport { sampleBilinear } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { VertexCache } from \"./VertexCache\";\n\n/**\n * @internal\n * BufferAttribute decorator that displaces on the fly the coordinates in a given attribute using a\n * specified displacement map.\n */\nexport class DisplacedBufferAttribute extends THREE.BufferAttribute {\n    private static readonly MAX_CACHE_SIZE = 6;\n    private m_texture?: Float32Array;\n    private m_textureWidth: number = 0;\n    private m_textureHeight: number = 0;\n    private readonly m_cache = new VertexCache(DisplacedBufferAttribute.MAX_CACHE_SIZE);\n    private m_lastBufferIndex?: number;\n    private readonly m_lastPos = new THREE.Vector3();\n    private readonly m_tmpNormal = new THREE.Vector3();\n\n    /**\n     * Creates an instance of displaced buffer attribute.\n     * @param originalAttribute - The buffer attribute to be displaced\n     *                            (e.g. the position attribute).\n     * @param m_normals - The normals along which the coordinates will be displaced.\n     * @param m_uvs - The uv coordinates to be used to sample the displacement map.\n     * @param displacementMap - A texture with the displacement values in 32bit floats.\n     */\n    constructor(\n        public originalAttribute: THREE.BufferAttribute | THREE.InterleavedBufferAttribute,\n        private m_normals: THREE.BufferAttribute | THREE.InterleavedBufferAttribute,\n        private m_uvs: THREE.BufferAttribute | THREE.InterleavedBufferAttribute,\n        displacementMap: THREE.DataTexture\n    ) {\n        super(originalAttribute.array, originalAttribute.itemSize, originalAttribute.normalized);\n        this.resetTexture(displacementMap);\n    }\n\n    /**\n     * Resets the displaced buffer attribute to use new buffer attributes or displacement map.\n     * @param originalAttribute - The buffer attribute to be displaced\n     *                            (e.g. the position attribute).\n     * @param normals - The normals along which the coordinates will be displaced.\n     * @param uvs -  The uv coordinates to be used to sample the displacement map.\n     * @param displacementMap - A texture with the displacement values in 32bit floats.\n     */\n    reset(\n        originalAttribute: THREE.BufferAttribute | THREE.InterleavedBufferAttribute,\n        normals: THREE.BufferAttribute | THREE.InterleavedBufferAttribute,\n        uvs: THREE.BufferAttribute | THREE.InterleavedBufferAttribute,\n        displacementMap: THREE.DataTexture\n    ) {\n        this.array = originalAttribute.array;\n        this.itemSize = originalAttribute.itemSize;\n        this.count = this.array.length / this.itemSize;\n        this.normalized = originalAttribute.normalized;\n        this.originalAttribute = originalAttribute;\n        this.m_normals = normals;\n        this.m_uvs = uvs;\n        this.m_cache.clear();\n        this.m_lastBufferIndex = undefined;\n        this.resetTexture(displacementMap);\n    }\n\n    // HARP-9585: These getters are overrides of the base class ones, however tslint doesn't\n    // recognize them as such.\n    getX(index: number): number {\n        return this.getDisplacedCoordinate(index).x;\n    }\n\n    getY(index: number): number {\n        return this.getDisplacedCoordinate(index).y;\n    }\n\n    getZ(index: number): number {\n        return this.getDisplacedCoordinate(index).z;\n    }\n\n    private resetTexture(displacementMap: THREE.DataTexture) {\n        this.m_texture = new Float32Array(displacementMap.image.data.buffer);\n        this.m_textureWidth = displacementMap.image.width;\n        this.m_textureHeight = displacementMap.image.height;\n    }\n\n    private getDisplacedCoordinate(bufferIndex: number): Vector3Like {\n        if (bufferIndex === this.m_lastBufferIndex) {\n            return this.m_lastPos;\n        }\n        this.m_lastBufferIndex = bufferIndex;\n        if (this.m_cache.get(bufferIndex, this.m_lastPos)) {\n            return this.m_lastPos;\n        }\n        this.displacePosition(bufferIndex);\n        this.m_cache.set(bufferIndex, this.m_lastPos);\n        return this.m_lastPos;\n    }\n\n    private displacePosition(bufferIndex: number) {\n        this.m_lastPos.fromBufferAttribute(\n            this.originalAttribute as THREE.BufferAttribute,\n            bufferIndex\n        );\n        const normals = this.m_normals as THREE.BufferAttribute;\n        this.m_tmpNormal.fromBufferAttribute(normals, bufferIndex);\n        const uvs = this.m_uvs;\n        const u = THREE.MathUtils.clamp(uvs.getX(bufferIndex), 0, 1);\n        const v = THREE.MathUtils.clamp(uvs.getY(bufferIndex), 0, 1);\n        const displacement = sampleBilinear(\n            this.m_texture!,\n            this.m_textureWidth,\n            this.m_textureHeight,\n            u,\n            v\n        );\n        this.m_lastPos.add(this.m_tmpNormal.multiplyScalar(displacement));\n    }\n}\n","/*\n * Copyright (C) 2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { DisplacedBufferAttribute } from \"./DisplacedBufferAttribute\";\n\nconst tmpV1 = new THREE.Vector3();\nconst tmpV2 = new THREE.Vector3();\nconst tmpBox = new THREE.Box3();\n\n/**\n * @internal\n * Range of displacement values found in a given displacement map.\n */\nexport interface DisplacementRange {\n    min: number;\n    max: number;\n}\n\n/**\n * @internal\n * Displace a box in a given direction by a specified range. The original box min and max vertices\n * are translated as a result by displacementRange.min and displacementRange.max respectively.\n * @param box - The original box to displace.\n * @param displacementRange - The minimum and maximum displacement values.\n * @param displacementDir - Direction in which the displacement will be applied.\n * @return The displaced box.\n */\nexport function displaceBox(\n    box: THREE.Box3,\n    displacementRange: DisplacementRange,\n    displacementDir: THREE.Vector3\n): THREE.Box3 {\n    tmpBox.copy(box);\n    const tmpNormalMin = tmpV1.copy(displacementDir);\n    const tmpNormalMax = tmpV2.copy(tmpNormalMin);\n    box.translate(tmpNormalMin.multiplyScalar(displacementRange.min)).union(\n        tmpBox.translate(tmpNormalMax.multiplyScalar(displacementRange.max))\n    );\n    return box;\n}\n\n/**\n * @internal\n * BufferGeometry decorator that displaces on the fly the position attribute using a specified\n * displacement map.\n */\nexport class DisplacedBufferGeometry extends THREE.BufferGeometry {\n    private readonly m_displacedPositions: DisplacedBufferAttribute;\n    private readonly m_originalBoundingBox = new THREE.Box3();\n\n    /**\n     * Creates an instance of displaced buffer geometry.\n     * @param originalGeometry - The goeometry to be displaced.\n     * @param displacementMap - A texture with the displacement values.\n     * @param displacementRange - The displacement value range found in the displacement map.\n     * @param displacedPositions - Buffer attribute that will be used for displaced positions if\n     * provided, otherwise a new buffer attribute will be created.\n     */\n    constructor(\n        public originalGeometry: THREE.BufferGeometry,\n        displacementMap: THREE.DataTexture,\n        public displacementRange: DisplacementRange,\n        displacedPositions?: DisplacedBufferAttribute\n    ) {\n        super();\n        if (!displacedPositions) {\n            this.m_displacedPositions = new DisplacedBufferAttribute(\n                originalGeometry.attributes.position,\n                originalGeometry.attributes.normal,\n                originalGeometry.attributes.uv,\n                displacementMap\n            );\n        } else {\n            this.m_displacedPositions = displacedPositions;\n        }\n        this.resetAttributes();\n    }\n\n    /**\n     * Resets the displaced buffer geometry to use new geometry or displacement map.\n     * @param geometry - The goeometry to be displaced.\n     * @param displacementMap - A texture with the displacement values.\n     * @param displacementRange - The displacement value range found in the displacement map.\n     */\n    reset(\n        geometry: THREE.BufferGeometry,\n        displacementMap: THREE.DataTexture,\n        displacementRange: DisplacementRange\n    ) {\n        this.originalGeometry = geometry;\n        const positions = geometry.attributes.position;\n        const normals = geometry.attributes.normal;\n        const uvs = geometry.attributes.uv;\n        this.m_displacedPositions.reset(positions, normals, uvs, displacementMap);\n        const displacementRangeChanged =\n            this.displacementRange.min !== displacementRange.min ||\n            this.displacementRange.max !== displacementRange.max;\n        this.displacementRange = displacementRange;\n        this.resetAttributes();\n        this.resetBoundingVolumes(displacementRangeChanged);\n    }\n\n    // HARP-9585: Override of base class method, however tslint doesn't recognize it as such.\n    computeBoundingBox(): void {\n        // Calculate a coarse approximation of the displaced geometry bbox by displacing the\n        // original bbox and enlarging it to cover the whole displacement range.\n        // This approximation is used to avoid having to displace the whole geometry, which will\n        // be done only if the bbox test passes.\n        if (this.originalGeometry.boundingBox === null) {\n            this.originalGeometry.computeBoundingBox();\n        }\n        const origBBox = this.m_originalBoundingBox.copy(this.originalGeometry.boundingBox!);\n        if (this.boundingBox === null) {\n            this.boundingBox = origBBox.clone();\n        } else {\n            this.boundingBox.copy(origBBox);\n        }\n        displaceBox(\n            this.boundingBox,\n            this.displacementRange,\n            tmpV1.fromBufferAttribute(this.attributes.normal as THREE.BufferAttribute, 0)\n        );\n    }\n\n    // HARP-9585: Override of base class method, however tslint doesn't recognize it as such.\n    computeBoundingSphere(): void {\n        // Use as coarse approximation the sphere bounding the bbox.\n        if (this.boundingBox === null) {\n            this.computeBoundingBox();\n        }\n        if (this.boundingSphere === null) {\n            this.boundingSphere = new THREE.Sphere();\n        }\n        this.boundingBox!.getBoundingSphere(this.boundingSphere!);\n    }\n\n    private needsBoundingBoxUpdate(displacementRangeChanged: boolean): boolean {\n        return (\n            displacementRangeChanged ||\n            (this.boundingBox !== null &&\n                (!this.originalGeometry.boundingBox ||\n                    !this.m_originalBoundingBox.equals(this.originalGeometry.boundingBox)))\n        );\n    }\n\n    private resetBoundingVolumes(displacementRangeChanged: boolean) {\n        if (this.needsBoundingBoxUpdate(displacementRangeChanged)) {\n            this.computeBoundingBox();\n            if (this.boundingSphere) {\n                this.computeBoundingSphere();\n            }\n        }\n    }\n\n    private resetAttributes() {\n        this.index = this.originalGeometry.index;\n        this.groups = this.originalGeometry.groups;\n        this.drawRange = this.originalGeometry.drawRange;\n        this.attributes = { ...this.originalGeometry.attributes };\n        this.attributes.position = this.m_displacedPositions;\n    }\n}\n","/*\n * Copyright (C) 2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DisplacementFeature, hasDisplacementFeature } from \"@here/harp-materials\";\nimport { assert } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { DisplacedBufferAttribute } from \"./DisplacedBufferAttribute\";\nimport { DisplacedBufferGeometry, DisplacementRange } from \"./DisplacedBufferGeometry\";\n\nfunction isDisplacementMaterial(material: any): material is DisplacementFeature {\n    const isDisplacementFeature = hasDisplacementFeature(material);\n    assert(isDisplacementFeature, \"Material does not support displacement maps.\");\n    return isDisplacementFeature;\n}\n\nfunction isDataTextureMap(map?: THREE.Texture | null): map is THREE.DataTexture {\n    if (!map) {\n        return false;\n    }\n    const isDataTexture = map instanceof THREE.DataTexture;\n    assert(isDataTexture, \"Material does not support displacement maps.\");\n    return isDataTexture;\n}\n\n/**\n * Mesh with geometry modified by a displacement map. Overrides raycasting behaviour to apply\n * displacement map before intersection test.\n * @internal\n */\nexport class DisplacedMesh extends THREE.Mesh {\n    private static displacedPositions?: DisplacedBufferAttribute;\n\n    private static getDisplacedPositionAttribute(\n        geometry: THREE.BufferGeometry,\n        displacementMap: THREE.DataTexture\n    ): DisplacedBufferAttribute {\n        // Reuse same buffer attribute for all meshes since it's only needed during the\n        // intersection test.\n        if (!DisplacedMesh.displacedPositions) {\n            DisplacedMesh.displacedPositions = new DisplacedBufferAttribute(\n                geometry.attributes.position,\n                geometry.attributes.normal,\n                geometry.attributes.uv,\n                displacementMap\n            );\n        } else {\n            DisplacedMesh.displacedPositions.reset(\n                geometry.attributes.position,\n                geometry.attributes.normal,\n                geometry.attributes.uv,\n                displacementMap\n            );\n        }\n        return DisplacedMesh.displacedPositions;\n    }\n\n    displacedGeometry?: DisplacedBufferGeometry;\n\n    /**\n     * Creates an instance of displaced mesh.\n     * @param geometry - Original geometry to displace.\n     * @param material - Material(s) to be used by the mesh. All must have the same\n     *                   displacement map.\n     * @param m_getDisplacementRange - Displacement values range getter.\n     * @param [m_raycastStrategy] Function that will be used to find ray intersections. If not\n     * provided, THREE.Mesh's raycast will be used.\n     */\n    constructor(\n        geometry: THREE.BufferGeometry,\n        material: THREE.Material | THREE.Material[],\n        private readonly m_getDisplacementRange: () => DisplacementRange,\n        private readonly m_raycastStrategy?: (\n            mesh: THREE.Mesh,\n            raycaster: THREE.Raycaster,\n            intersects: THREE.Intersection[]\n        ) => void\n    ) {\n        super(geometry, material);\n    }\n\n    // HARP-9585: Override of base class method, however tslint doesn't recognize it as such.\n    raycast(raycaster: THREE.Raycaster, intersects: THREE.Intersection[]): void {\n        // All materials in the object are expected to have the same displacement map.\n        const firstMaterial = this.firstMaterial;\n\n        // Use default raycasting implementation if there's no displacement material or if there's\n        // no displacement map or its type is not supported.\n        if (\n            !isDisplacementMaterial(firstMaterial) ||\n            !isDataTextureMap(firstMaterial.displacementMap)\n        ) {\n            super.raycast(raycaster, intersects);\n            return;\n        }\n        const displacementMap = firstMaterial.displacementMap;\n        const displacementRange = { ...this.m_getDisplacementRange() };\n\n        assert(this.geometry instanceof THREE.BufferGeometry, \"Unsupported geometry type.\");\n        const geometry = this.geometry as THREE.BufferGeometry;\n        if (this.displacedGeometry) {\n            this.displacedGeometry.reset(geometry, displacementMap, displacementRange);\n        } else {\n            this.displacedGeometry = new DisplacedBufferGeometry(\n                geometry,\n                displacementMap,\n                displacementRange,\n                DisplacedMesh.getDisplacedPositionAttribute(geometry, displacementMap)\n            );\n        }\n\n        // Replace the original geometry by the displaced one only during the intersection test.\n        this.geometry = this.displacedGeometry;\n        if (this.m_raycastStrategy) {\n            this.m_raycastStrategy(this, raycaster, intersects);\n        } else {\n            super.raycast(raycaster, intersects);\n        }\n        super.geometry = this.displacedGeometry.originalGeometry;\n    }\n\n    private get firstMaterial(): THREE.Material {\n        return Array.isArray(this.material) ? this.material[0] : this.material;\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\n/**\n * A mesh that can store multiple versions of a geometry with differents level of detail.\n * The rendered level of detail can be adapted during runtime.\n * @internal\n * @hidden\n */\nexport class LodMesh extends THREE.Mesh {\n    private m_geometries: THREE.BufferGeometry[] | undefined;\n\n    /**\n     * Creates a [[LodMesh]] with given geometries and materials\n     * @param geometries - A list of geometries with different levels of detail\n     * @param material - Material for the mesh\n     */\n    constructor(\n        geometries?: THREE.BufferGeometry[],\n        material?: THREE.Material | THREE.Material[] | undefined\n    ) {\n        super(undefined, material);\n\n        this.geometries = geometries;\n    }\n\n    /**\n     * Update geometries of mesh\n     */\n    set geometries(geometries: THREE.BufferGeometry[] | undefined) {\n        // dispose previous geometries\n        if (this.m_geometries !== geometries) {\n            this.disposeGeometries();\n        }\n\n        this.m_geometries = geometries;\n        if (this.geometries && this.m_geometries!.length > 0) {\n            this.geometry = this.m_geometries![0];\n        }\n    }\n\n    /**\n     * Get geometries of mesh\n     */\n    get geometries() {\n        return this.m_geometries;\n    }\n\n    /**\n     * Change the rendered level of detail of the mesh\n     * @param level - The level of detail (index of the geometry in the list).\n     */\n    setLevelOfDetail(level: number): void {\n        if (!this.m_geometries || this.m_geometries.length === 0) {\n            return;\n        }\n        level = THREE.MathUtils.clamp(level, 0, this.m_geometries.length - 1);\n\n        this.geometry = this.m_geometries[level];\n    }\n\n    /**\n     * Dispose all geometries of mesh\n     */\n    private disposeGeometries(): void {\n        if (this.m_geometries) {\n            for (const geometry of this.m_geometries!) {\n                geometry.dispose();\n            }\n        }\n        this.geometry.dispose();\n    }\n}\n","/*\n * Copyright (C) 2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { MapMeshBasicMaterial, MapMeshStandardMaterial } from \"@here/harp-materials\";\nimport { LoggerManager } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { getFeatureDataSize, TileFeatureData } from \"../Tile\";\nimport { LodMesh } from \"./LodMesh\";\n\n// Estimation of the size of an Object3D with all the simple properties, like matrices and flags.\n// There may be cases where it is possible to construct Object3Ds with considerable less memory\n// consumption, but this value is used to simplify the estimation.\nconst MINIMUM_OBJECT3D_SIZE_ESTIMATION = 1000;\n\nconst MINIMUM_ATTRIBUTE_SIZE_ESTIMATION = 56;\n\nconst logger = LoggerManager.instance.create(\"Object3DUtils\");\n\n/**\n * @internal\n */\nexport namespace Object3DUtils {\n    /**\n     * Describes estimated usage of memory on heap and GPU.\n     */\n    export interface MemoryUsage {\n        heapSize: number;\n        gpuSize: number;\n    }\n\n    function estimateTextureSize(\n        texture: THREE.Texture | null,\n        objectSize: MemoryUsage,\n        visitedObjects: Map<string, boolean>\n    ): void {\n        if (\n            texture === null ||\n            texture === undefined ||\n            texture.image === undefined ||\n            texture.image === null\n        ) {\n            return;\n        }\n\n        if (texture.uuid !== undefined && visitedObjects.get(texture.uuid) === true) {\n            return;\n        }\n        visitedObjects.set(texture.uuid, true);\n\n        // May be HTMLImage or ImageData\n        const image = texture.image;\n        // Assuming RGBA\n        const imageBytes = 4 * image.width * image.height;\n        objectSize.heapSize += imageBytes;\n        objectSize.gpuSize += imageBytes;\n    }\n\n    function estimateMaterialSize(\n        material: THREE.Material,\n        objectSize: MemoryUsage,\n        visitedObjects: Map<string, boolean>\n    ): void {\n        if (material.uuid !== undefined && visitedObjects.get(material.uuid) === true) {\n            return;\n        }\n        visitedObjects.set(material.uuid, true);\n\n        if (\n            material instanceof THREE.RawShaderMaterial ||\n            material instanceof THREE.ShaderMaterial\n        ) {\n            const rawMaterial = material;\n            for (const name in rawMaterial.uniforms) {\n                if (rawMaterial.uniforms[name] !== undefined) {\n                    const uniform = rawMaterial.uniforms[name];\n                    if (uniform instanceof THREE.Texture) {\n                        estimateTextureSize(uniform, objectSize, visitedObjects);\n                    }\n                }\n            }\n        } else if (\n            material instanceof THREE.MeshBasicMaterial ||\n            material instanceof MapMeshBasicMaterial\n        ) {\n            const meshMaterial = material;\n            estimateTextureSize(meshMaterial.map, objectSize, visitedObjects);\n            estimateTextureSize(meshMaterial.aoMap, objectSize, visitedObjects);\n            estimateTextureSize(meshMaterial.specularMap, objectSize, visitedObjects);\n            estimateTextureSize(meshMaterial.alphaMap, objectSize, visitedObjects);\n            estimateTextureSize(meshMaterial.envMap, objectSize, visitedObjects);\n        } else if (material instanceof MapMeshStandardMaterial) {\n            const standardMaterial = material;\n\n            estimateTextureSize(standardMaterial.map, objectSize, visitedObjects);\n            estimateTextureSize(standardMaterial.lightMap, objectSize, visitedObjects);\n            estimateTextureSize(standardMaterial.aoMap, objectSize, visitedObjects);\n            estimateTextureSize(standardMaterial.emissiveMap, objectSize, visitedObjects);\n            estimateTextureSize(standardMaterial.bumpMap, objectSize, visitedObjects);\n            estimateTextureSize(standardMaterial.normalMap, objectSize, visitedObjects);\n            estimateTextureSize(standardMaterial.displacementMap, objectSize, visitedObjects);\n            estimateTextureSize(standardMaterial.roughnessMap, objectSize, visitedObjects);\n            estimateTextureSize(standardMaterial.metalnessMap, objectSize, visitedObjects);\n            estimateTextureSize(standardMaterial.alphaMap, objectSize, visitedObjects);\n            estimateTextureSize(standardMaterial.envMap, objectSize, visitedObjects);\n        } else if (\n            material instanceof THREE.LineBasicMaterial ||\n            material instanceof THREE.LineDashedMaterial ||\n            material instanceof THREE.PointsMaterial\n        ) {\n            // Nothing to be done here\n        } else {\n            logger.warn(\"estimateMeshSize: unidentified material: \", material);\n        }\n    }\n\n    function estimateAttributeSize(\n        attribute: any,\n        attrName: string,\n        objectSize: MemoryUsage,\n        visitedObjects: Map<string, boolean>\n    ): void {\n        // Attributes (apparently) do not have their uuid set up.\n        if (attribute.uuid === undefined) {\n            attribute.uuid = THREE.MathUtils.generateUUID();\n        }\n\n        if (visitedObjects.get(attribute.uuid) === true) {\n            return;\n        }\n        visitedObjects.set(attribute.uuid, true);\n\n        let attrBytes = 0;\n        let bytesPerElement = 4;\n        if (attribute.array.BYTES_PER_ELEMENT !== undefined) {\n            bytesPerElement = attribute.array.BYTES_PER_ELEMENT;\n        }\n        if (\n            attribute instanceof THREE.InterleavedBufferAttribute ||\n            attribute instanceof THREE.BufferAttribute\n        ) {\n            attrBytes = bytesPerElement * attribute.count * attribute.itemSize;\n        } else {\n            logger.warn(\"estimateMeshSize: unidentified attribute: \", attrName);\n        }\n\n        objectSize.heapSize += attrBytes + MINIMUM_ATTRIBUTE_SIZE_ESTIMATION;\n        objectSize.gpuSize += attrBytes;\n    }\n\n    function estimateGeometrySize(\n        geometry: THREE.BufferGeometry,\n        objectSize: MemoryUsage,\n        visitedObjects: Map<string, boolean>\n    ): void {\n        const isNewObject =\n            geometry.uuid === undefined || visitedObjects.get(geometry.uuid) !== true;\n\n        if (!isNewObject) {\n            return;\n        }\n        visitedObjects.set(geometry.uuid, true);\n\n        if (geometry === undefined) {\n            // Nothing more to calculate.\n            return;\n        }\n\n        const attributes = geometry.attributes;\n        if (attributes === undefined) {\n            logger.warn(\"estimateGeometrySize: unidentified geometry: \", geometry);\n            return;\n        }\n\n        for (const property in attributes) {\n            if (attributes[property] !== undefined) {\n                estimateAttributeSize(attributes[property], property, objectSize, visitedObjects);\n            }\n        }\n        if (geometry.index !== null) {\n            estimateAttributeSize(geometry.index, \"index\", objectSize, visitedObjects);\n        }\n    }\n\n    function estimateMeshSize(\n        object: THREE.Object3D,\n        objectSize: MemoryUsage,\n        visitedObjects: Map<string, boolean>\n    ): void {\n        if (!object.isObject3D || object instanceof THREE.Scene) {\n            return;\n        }\n\n        if (object.uuid !== undefined && visitedObjects.get(object.uuid) === true) {\n            return;\n        }\n        visitedObjects.set(object.uuid, true);\n\n        if ((object as any).isMesh || (object as any).isLine || (object as any).isPoints) {\n            // Estimated minimum impact on heap.\n            let heapSize = MINIMUM_OBJECT3D_SIZE_ESTIMATION;\n            const gpuSize = 0;\n\n            // Cast to LodMesh class which contains the minimal required properties sub-set.\n            const mesh = object as LodMesh;\n\n            // Calculate material(s) impact.\n            if (mesh.material !== undefined) {\n                if (Array.isArray(mesh.material)) {\n                    const materials = mesh.material as THREE.Material[];\n                    for (const material of materials) {\n                        estimateMaterialSize(material, objectSize, visitedObjects);\n                    }\n                } else {\n                    const material = mesh.material as THREE.Material;\n                    estimateMaterialSize(material, objectSize, visitedObjects);\n                }\n            }\n\n            // Calculate cost of geometry.\n            if (mesh.geometries !== undefined) {\n                for (const geometry of mesh.geometries) {\n                    estimateGeometrySize(geometry, objectSize, visitedObjects);\n                }\n            } else if (mesh.geometry !== undefined) {\n                estimateGeometrySize(mesh.geometry, objectSize, visitedObjects);\n            }\n\n            // Add info that is required for picking (parts of) objects and match them to\n            // the featureID in the map data.\n            const featureData: TileFeatureData | undefined =\n                object.userData !== undefined\n                    ? (object.userData.feature as TileFeatureData)\n                    : undefined;\n\n            if (featureData !== undefined) {\n                heapSize += getFeatureDataSize(featureData);\n            }\n\n            objectSize.heapSize += heapSize;\n            objectSize.gpuSize += gpuSize;\n        } else {\n            logger.warn(\"estimateMeshSize: unidentified object\", object);\n        }\n    }\n\n    /**\n     * Computes estimate for size of a THREE.Object3D object and its children. Shared materials\n     * and/or attributes will be counted multiple times.\n     *\n     * @param object - The mesh object to evaluate\n     * @param size - The {@link MemoryUsage} to update.\n     * @param visitedObjects - Optional map to store large objects that could be shared.\n     *\n     * @returns Estimate of object size in bytes for heap and GPU.\n     */\n    export function estimateSize(\n        object: THREE.Object3D,\n        parentSize?: MemoryUsage,\n        visitedObjects?: Map<string, boolean>\n    ): MemoryUsage {\n        const size =\n            parentSize !== undefined\n                ? parentSize\n                : {\n                      heapSize: 0,\n                      gpuSize: 0\n                  };\n\n        if (visitedObjects === undefined) {\n            visitedObjects = new Map();\n        }\n\n        estimateMeshSize(object, size, visitedObjects);\n\n        if (object.children.length > 0) {\n            for (const child of object.children) {\n                estimateSize(child, size, visitedObjects);\n            }\n        }\n        return size;\n    }\n}\n","/*\n * Copyright (C) 2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoCoordinates, Projection } from \"@here/harp-geoutils\";\nimport * as THREE from \"three\";\n\nimport { Tile } from \"../Tile\";\n\n/**\n * Coordinates of a tile's corners.\n * @internal\n * @hidden\n */\nexport interface TileCorners {\n    se: THREE.Vector3;\n    sw: THREE.Vector3;\n    ne: THREE.Vector3;\n    nw: THREE.Vector3;\n}\n\n/**\n * Returns the corners of the tile's geo bounding box projected using a given projection.\n * @param tile - The tile whose corners will be projected.\n * @param projection - The projection to be used.\n * @returns The projected tile corners.\n * @internal\n * @hidden\n */\nexport function projectTilePlaneCorners(tile: Tile, projection: Projection): TileCorners {\n    const { east, west, north, south } = tile.geoBox;\n    const sw = projection.projectPoint(new GeoCoordinates(south, west), new THREE.Vector3());\n    const se = projection.projectPoint(new GeoCoordinates(south, east), new THREE.Vector3());\n    const nw = projection.projectPoint(new GeoCoordinates(north, west), new THREE.Vector3());\n    const ne = projection.projectPoint(new GeoCoordinates(north, east), new THREE.Vector3());\n    return { sw, se, nw, ne };\n}\n","/*\n * Copyright (C) 2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeometryKind, GeometryKindSet } from \"@here/harp-datasource-protocol\";\nimport * as THREE from \"three\";\n\nimport { MapObjectAdapter, MapObjectAdapterParams } from \"../MapObjectAdapter\";\nimport { Tile } from \"../Tile\";\n\n/**\n * Adds a THREE object to the root of the tile and register [[MapObjectAdapter]].\n *\n * Sets the owning tiles datasource.name and the `tileKey` in the `userData` property of the\n * object, such that the tile it belongs to can be identified during picking.\n *\n * @param tile - The {@link Tile} to add the object to.\n * @param object - The object to add to the root of the tile.\n * @param geometryKind - The kind of object. Can be used for filtering.\n * @param mapAdapterParams - additional parameters for [[MapObjectAdapter]]\n */\nexport function registerTileObject(\n    tile: Tile,\n    object: THREE.Object3D,\n    geometryKind: GeometryKind | GeometryKindSet | undefined,\n    mapAdapterParams?: MapObjectAdapterParams\n) {\n    const kind =\n        geometryKind instanceof Set\n            ? Array.from((geometryKind as GeometryKindSet).values())\n            : Array.isArray(geometryKind)\n            ? geometryKind\n            : [geometryKind];\n\n    MapObjectAdapter.create(object, {\n        dataSource: tile.dataSource,\n        kind,\n        level: tile.tileKey.level,\n        ...mapAdapterParams\n    });\n\n    // TODO legacy fields, encoded directly in `userData to be removed\n    if (object.userData === undefined) {\n        object.userData = {};\n    }\n\n    const userData = object.userData;\n    userData.tileKey = tile.tileKey;\n    userData.dataSource = tile.dataSource.name;\n\n    userData.kind = kind;\n\n    // Force a visibility check of all objects.\n    tile.resetVisibilityCounter();\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OrientedBox3 } from \"@here/harp-geoutils\";\nimport { SolidLineMaterial } from \"@here/harp-materials\";\nimport { assert } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { displaceBox, DisplacedBufferGeometry, DisplacementRange } from \"./DisplacedBufferGeometry\";\n\nconst tmpSphere = new THREE.Sphere();\nconst tmpInverseMatrix = new THREE.Matrix4();\nconst tmpRay = new THREE.Ray();\nconst tmpLine1 = new THREE.Line3();\nconst tmpBox = new THREE.Box3();\nconst tmpOBB = new OrientedBox3();\nconst tmpPlane = new THREE.Plane();\nconst tmpV1 = new THREE.Vector3();\nconst tmpV2 = new THREE.Vector3();\nconst tmpV3 = new THREE.Vector3();\nconst tmpV4 = new THREE.Vector3();\n\n// Strides to access the index buffer. See [[createLineGeometry]].\n// Stride between the start vertex indices of consecutive segments, each one made of 2 triangles.\nconst SEGMENT_STRIDE = 6;\n// Stride between the start and end vertex indices of a segment. Vertices are duplicated so that\n// each copy is extruded in opposite directions in the vertex shader.\nconst VERTEX_STRIDE = 2;\n\nfunction isSolidLineMaterial(material: THREE.Material | THREE.Material[]): boolean {\n    return Array.isArray(material)\n        ? material.every(mat => mat instanceof SolidLineMaterial)\n        : material instanceof SolidLineMaterial;\n}\n\n/**\n * Identify the position attribute that has been used to create the bounding volumes.\n * Also store version info to be able to detect changes to the data.\n */\ninterface AttributeInfo {\n    /** Attribute used for bounding volume creation. */\n    data: THREE.BufferAttribute | THREE.InterleavedBuffer;\n\n    /** Version of attribute at time of bounding volume creation. */\n    version: number | undefined;\n}\n\n/**\n * Create an [[AttributeInfo]] for the specified attribute.\n * @param attribute The attribute to retrieve version info from.\n * @returns The [[AttributeInfo]] containing a reference and version of the attribute's data.\n */\nfunction getAttributeInfo(\n    attribute: THREE.BufferAttribute | THREE.InterleavedBufferAttribute\n): AttributeInfo {\n    const isBufferAttribute = (attribute as THREE.BufferAttribute).isBufferAttribute === true;\n\n    const data = isBufferAttribute\n        ? (attribute as THREE.BufferAttribute)\n        : (attribute as THREE.InterleavedBufferAttribute).data;\n\n    return {\n        data,\n        version: data.version\n    };\n}\n\n/**\n * Check if an attribute has changed compared to the version info.\n * @param attribute Attribute to check.\n * @param attrInfo Attribute version info.\n * @returns `true` if the attribute is the same, `false` otherwise.\n */\nfunction attributeChanged(\n    attribute: THREE.BufferAttribute | THREE.InterleavedBufferAttribute,\n    attrInfo: AttributeInfo\n): boolean {\n    const isBufferAttribute = (attribute as THREE.BufferAttribute).isBufferAttribute === true;\n\n    const data = isBufferAttribute\n        ? (attribute as THREE.BufferAttribute)\n        : (attribute as THREE.InterleavedBufferAttribute).data;\n\n    return (\n        attrInfo === undefined ||\n        attrInfo.data !== data ||\n        ((attribute as THREE.BufferAttribute).isBufferAttribute &&\n            attrInfo.version !== data.version)\n    );\n}\n\n/**\n * Computes the bounding sphere of the part of a given geometry corresponding to a feature.\n * @param geometry - The geometry containing the feature.\n * @param featureBeginIndex - The index where the feature starts in the geometry's\n *                            indices attribute.\n * @param featureEndIndex - The index where the feature end in the geometry's indices attribute.\n * @returns The feature bounding sphere.\n */\nfunction computeFeatureBoundingSphere(\n    geometry: THREE.BufferGeometry | DisplacedBufferGeometry,\n    featureBeginIndex: number,\n    featureEndIndex: number\n): THREE.Sphere {\n    let displacementRange: DisplacementRange | undefined;\n\n    if (geometry instanceof DisplacedBufferGeometry) {\n        displacementRange = geometry.displacementRange;\n        geometry = geometry.originalGeometry;\n    }\n\n    const attributes = geometry.attributes;\n    const pos = attributes.position as THREE.BufferAttribute;\n    const indices = geometry.index!.array;\n    const sphere = new THREE.Sphere();\n    const bbox = tmpBox.makeEmpty();\n    const vertex = tmpV1;\n\n    // First compute the bounding box for all line segments.\n    for (let i = featureBeginIndex; i < featureEndIndex; i += SEGMENT_STRIDE) {\n        bbox.expandByPoint(vertex.fromBufferAttribute(pos, indices[i]));\n        bbox.expandByPoint(vertex.fromBufferAttribute(pos, indices[i + VERTEX_STRIDE]));\n    }\n\n    if (displacementRange) {\n        // If geometry is displaced, expand the bounding box to cover the whole displacement range,\n        // and return the sphere bounding the box. This is a coarse estimation, but avoids having\n        // to displace all vertices.\n        // All normals in the geometry are assumed to be the same or close enough so that any of\n        // them can be used as displacement direction. For sphere projection, the surface normals\n        // within a tile are approximately the same from level 4 onwards. Here are some examples of\n        // the minimum dot product between normals in a tile (normals at tile's opposite corners):\n        // TILE: (6,9,4): 0.9806892129880023\n        // TILE: (12,17,5): 0.9946739445457075\n        // TILE: (25,34,6): 0.9986326302953471\n        // TILE: (50,68,7): 0.9996583822992287\n        // TILE: (1620,2199,12): 0.9999996706085572\n        const normal = tmpV2;\n        normal.fromBufferAttribute(geometry.attributes.normal as THREE.BufferAttribute, 0);\n        return displaceBox(bbox, displacementRange, normal).getBoundingSphere(sphere);\n    }\n\n    return bbox.getBoundingSphere(sphere);\n}\n\n/**\n * Finds the intersection of a ray with a extruded line.\n * @param ray - Intersection ray in object's local space.\n * @param line - The centerline.\n * @param vExtrusion - Line extrusion vector.\n * @param normal - Extrusion plane normal.\n * @param hWidth - Extrusion half width.\n * @returns Distance of the extruded line intersection to the ray origin.\n */\nfunction intersectExtrudedLine(\n    ray: THREE.Ray,\n    line: THREE.Line3,\n    vExtrusion: THREE.Vector3,\n    normal: THREE.Vector3,\n    hWidth: number\n): number {\n    const obb = tmpOBB;\n    line.getCenter(obb.position);\n    line.delta(obb.xAxis).normalize();\n    obb.yAxis.copy(vExtrusion);\n    obb.zAxis.copy(normal);\n    obb.extents.set(line.distance() / 2, hWidth, hWidth);\n\n    if (obb.contains(ray.origin)) {\n        return 0;\n    }\n    return obb.intersectsRay(ray) ?? Infinity;\n}\n\n/**\n * Finds the intersection of a ray with the closest end cap of a extruded line.\n * @param ray - Intersection ray in object's local space.\n * @param line - The centerline.\n * @param hWidth - Extrusion half width.\n * @returns Distance of the end cap intersection to the ray origin.\n */\nfunction intersectClosestEndCap(ray: THREE.Ray, line: THREE.Line3, hWidth: number): number {\n    const sphere = new THREE.Sphere(line.start, hWidth);\n    const startCapT = sphere.containsPoint(ray.origin)\n        ? 0\n        : ray.intersectSphere(sphere, tmpV4)\n        ? tmpV4.sub(ray.origin).length()\n        : Infinity;\n    sphere.center.copy(line.end);\n    const endCapT = sphere.containsPoint(ray.origin)\n        ? 0\n        : ray.intersectSphere(sphere, tmpV4)\n        ? tmpV4.sub(ray.origin).length()\n        : Infinity;\n    return Math.min(startCapT, endCapT);\n}\n\n/**\n * Intersects line\n * @param ray - Intersection ray in object's local space.\n * @param line - The line to intersect.\n * @param vExtrusion - Line extrusion vector.\n * @param hWidth - The line's extrusion half width.\n * @param hWidthSq - The line's extrusion half width squared.\n * @param plane - The extrusion plane.\n * @param interPlane - The intersection of the ray with the extrusion plane.\n * @param outInterLine - The ray intersection with the extruded line.\n * @returns true if ray intersects the extruded line, false otherwise.\n */\nfunction intersectLine(\n    ray: THREE.Ray,\n    line: THREE.Line3,\n    vExtrusion: THREE.Vector3,\n    hWidth: number,\n    hWidthSq: number,\n    plane: THREE.Plane,\n    interPlane: THREE.Vector3,\n    outInterLine: THREE.Vector3\n): boolean {\n    if (interPlane.equals(ray.origin) && ray.direction.dot(plane.normal) === 0) {\n        // Corner case: ray is coplanar to extruded line, find distance to extruded line sides\n        // and end caps.\n        const extrLineT = intersectExtrudedLine(ray, line, vExtrusion, plane.normal, hWidth);\n        const endCapT = intersectClosestEndCap(ray, line, hWidth);\n\n        const minT = Math.min(extrLineT, endCapT);\n        if (minT === Infinity) {\n            return false;\n        }\n        ray.at(minT, outInterLine);\n        return true;\n    }\n\n    // The plain intersection is also a line intersection only if it's closer to the line\n    // than the extrusion half width.\n    const distSq = interPlane.distanceToSquared(line.closestPointToPoint(interPlane, true, tmpV4));\n\n    if (distSq > hWidthSq) {\n        return false;\n    }\n    outInterLine.copy(interPlane);\n    return true;\n}\n\n/**\n * Finds the intersections of a ray with a partition of a solid line mesh representing a feature.\n * @param mesh - The mesh whose intersections will be found.\n * @param raycaster - Contains the intersection ray.\n * @param localRay - Same ray as raycaster.ray but in object's local space.\n * @param halfWidth - The line's extrusion half width.\n * @param lHalfWidth - The line's extrusion half width in mesh local space.\n * @param lHalfWidthSq - The line's extrusion half width squared in mesh local space.\n * @param beginIdx - The index where the feature starts in the mesh geometry's indices attribute.\n * @param endIdx - The index where the feature end in the mesh geometry's indices attribute.\n * @param bSphere - The feature bounding sphere.\n * @param intersections - Array where all intersections found between ray and feature will\n *                        be pushed.\n */\nfunction intersectFeature(\n    mesh: THREE.Mesh,\n    raycaster: THREE.Raycaster,\n    localRay: THREE.Ray,\n    halfWidth: number,\n    lHalfWidth: number,\n    lHalfWidthSq: number,\n    beginIdx: number,\n    endIdx: number,\n    bSphere: THREE.Sphere,\n    intersections: THREE.Intersection[]\n): void {\n    const vExt = tmpV1;\n    const plane = tmpPlane;\n    const interPlane = tmpV2;\n    const line = tmpLine1;\n\n    const geometry = mesh.geometry as THREE.BufferGeometry;\n    const attributes = geometry.attributes;\n    const position = attributes.position as THREE.BufferAttribute;\n    const bitangent = attributes.biTangent;\n    const indices = geometry.index!.array;\n\n    tmpSphere.copy(bSphere);\n    tmpSphere.applyMatrix4(mesh.matrixWorld);\n    tmpSphere.radius += halfWidth;\n\n    if (!raycaster.ray.intersectsSphere(tmpSphere)) {\n        return;\n    }\n\n    for (let i = beginIdx; i < endIdx; i += SEGMENT_STRIDE) {\n        const a = indices[i];\n        const b = indices[i + VERTEX_STRIDE];\n\n        // Find the plane containing the line segment, using the segment start, end and extrusion\n        // vector.\n        line.start.fromBufferAttribute(position, a);\n        line.end.fromBufferAttribute(position, b);\n        vExt.set(bitangent.getX(a), bitangent.getY(a), bitangent.getZ(a)).normalize();\n        plane.setFromCoplanarPoints(line.start, tmpV3.copy(line.start).add(vExt), line.end);\n        if (plane.normal.manhattanLength() === 0) {\n            // Invalid plane, coplanar points are actually collinear because:\n            // a) The line segment has length 0.\n            // b) The extrusion vector has length 0.\n            // c) The extrusion and segment directions are the same.\n            // In any case it's a degenerate segment, skip it.\n            continue;\n        }\n\n        // The ray intersection if any, will be on the extrusion plane.\n        if (!localRay.intersectPlane(plane, interPlane)) {\n            continue;\n        }\n\n        const interLine = tmpV3;\n        if (\n            !intersectLine(\n                localRay,\n                line,\n                vExt,\n                lHalfWidth,\n                lHalfWidthSq,\n                plane,\n                interPlane,\n                interLine\n            )\n        ) {\n            continue;\n        }\n\n        // Move back to world space for distance calculation\n        const interLineWorld = interLine.applyMatrix4(mesh.matrixWorld);\n\n        const distance = raycaster.ray.origin.distanceTo(interLineWorld);\n\n        if (distance < raycaster.near || distance > raycaster.far) {\n            continue;\n        }\n\n        intersections.push({\n            distance,\n            point: interLineWorld.clone(),\n            index: i,\n            object: mesh\n        });\n    }\n}\n\nconst singleFeatureStart = [0];\nconst MAX_SCALE_RATIO_DIFF = 1e-2;\n\n/**\n * Finds the intersections of a ray with a group within a solid line mesh.\n * @param mesh - The mesh whose intersections will be found.\n * @param material - The material used by the group inside the mesh.\n * @param raycaster -  Contains the intersection ray.\n * @param localRay - Same ray as raycaster.ray but in object's local space.\n * @param firstFeatureIdx - Index of the first feature in the group.\n * @param groupEndIdx - Index of the last vertex in the group.\n * @param intersections -  Array where all intersections found between ray and group will be pushed.\n * @returns The next feature index after the group.\n */\nfunction intersectGroup(\n    mesh: THREE.Mesh,\n    material: THREE.Material,\n    raycaster: THREE.Raycaster,\n    localRay: THREE.Ray,\n    firstFeatureIdx: number,\n    groupEndIdx: number,\n    intersections: THREE.Intersection[]\n): number {\n    const bVolumes = mesh.userData.feature.boundingVolumes;\n    assert(mesh.geometry instanceof THREE.BufferGeometry, \"Unsupported geometry type.\");\n    const geometry = mesh.geometry as THREE.BufferGeometry;\n    assert(isSolidLineMaterial(material), \"Unsupported material type\");\n    const solidLineMaterial = material as SolidLineMaterial;\n\n    const halfWidth = (solidLineMaterial.lineWidth + solidLineMaterial.outlineWidth) / 2;\n    // Assumption: scaling is uniform or close enough to use a local width independent of direction.\n    assert(Math.abs(1 - mesh.scale.x / mesh.scale.y) < MAX_SCALE_RATIO_DIFF);\n    assert(Math.abs(1 - mesh.scale.x / mesh.scale.z) < MAX_SCALE_RATIO_DIFF);\n    assert(Math.abs(1 - mesh.scale.y / mesh.scale.z) < MAX_SCALE_RATIO_DIFF);\n    const localHalfWidth = halfWidth / ((mesh.scale.x + mesh.scale.y + mesh.scale.z) / 3);\n    const localHalfWidthSq = localHalfWidth * localHalfWidth;\n    const featureStarts = mesh.userData.feature.starts ?? singleFeatureStart;\n\n    let featureIdx = firstFeatureIdx;\n    let beginIdx = featureStarts[featureIdx];\n    const lastFeatureIdx = featureStarts.length - 1;\n\n    while (beginIdx < groupEndIdx) {\n        const bVolumeIdx = featureIdx;\n        const endIdx = featureIdx < lastFeatureIdx ? featureStarts[++featureIdx] : groupEndIdx;\n        if (bVolumeIdx >= bVolumes.length) {\n            // Geometry might be extruded on any direction. To avoid extruding all vertices, the\n            // centerline geometry is used to compute a bounding sphere whose radius is later\n            // expanded by the extrusion half width to ensure it contains the extruded geometry.\n            bVolumes.push(computeFeatureBoundingSphere(geometry, beginIdx, endIdx));\n        }\n        intersectFeature(\n            mesh,\n            raycaster,\n            localRay,\n            halfWidth,\n            localHalfWidth,\n            localHalfWidthSq,\n            beginIdx,\n            endIdx,\n            bVolumes[bVolumeIdx],\n            intersections\n        );\n        beginIdx = endIdx;\n    }\n    return featureIdx;\n}\n\n/**\n * Mesh formed by extruding a polyline in the shaders. Overrides raycasting behaviour to account for\n * extrusion, see [[SolidLineMaterial]].\n * @internal\n */\nexport class SolidLineMesh extends THREE.Mesh {\n    /**\n     * Finds the intersections of a ray with a mesh, assuming the mesh is a polyline extruded in\n     * the shaders (see [[SolidLineMaterial]]).\n     * @param mesh - The mesh whose intersections will be found.\n     * @param raycaster - Contains the intersection ray.\n     * @param intersections - Array where all intersections found between ray and mesh will\n     *                        be pushed.\n     */\n    static raycast(\n        mesh: THREE.Mesh,\n        raycaster: THREE.Raycaster,\n        intersections: THREE.Intersection[]\n    ): void {\n        assert(mesh.geometry instanceof THREE.BufferGeometry, \"Unsupported geometry type\");\n        const geometry = mesh.geometry as THREE.BufferGeometry;\n        assert(geometry.index !== null, \"Geometry does not have indices\");\n        const matrixWorld = mesh.matrixWorld;\n\n        tmpInverseMatrix.copy(matrixWorld).invert();\n        const localRay = tmpRay.copy(raycaster.ray).applyMatrix4(tmpInverseMatrix);\n\n        // Test intersection of ray with each of the features within the mesh.\n        if (mesh.userData.feature === undefined) {\n            mesh.userData.feature = {};\n        }\n\n        const positionAttribute = geometry.attributes[\"position\"];\n        const attributeInfo: AttributeInfo | undefined = mesh.userData.feature\n            .attributeInfo as AttributeInfo;\n\n        // Rebuild bounding volumes if geometry has been modified.\n        if (\n            attributeInfo === undefined ||\n            mesh.userData.feature.boundingVolumes === undefined ||\n            attributeChanged(positionAttribute, attributeInfo)\n        ) {\n            mesh.userData.feature.boundingVolumes = [];\n            mesh.userData.feature.attributeInfo = getAttributeInfo(positionAttribute);\n        }\n\n        const indices = geometry.index!.array;\n\n        if (Array.isArray(mesh.material)) {\n            let nextFeatureIdx = 0;\n            for (const group of geometry.groups) {\n                const material = mesh.material[group.materialIndex!];\n                const groupEndIdx = group.start + group.count;\n                nextFeatureIdx = intersectGroup(\n                    mesh,\n                    material,\n                    raycaster,\n                    localRay,\n                    nextFeatureIdx,\n                    groupEndIdx,\n                    intersections\n                );\n            }\n        } else {\n            intersectGroup(\n                mesh,\n                mesh.material,\n                raycaster,\n                localRay,\n                0,\n                indices.length,\n                intersections\n            );\n        }\n    }\n\n    /**\n     * Creates an instance of SolidLineMesh.\n     * @param geometry - Mesh geometry.\n     * @param material - Material(s) to be used by the mesh. They must be instances of\n     * [[SolidLineMaterial]].\n     */\n    constructor(geometry: THREE.BufferGeometry, material: THREE.Material | THREE.Material[]) {\n        super(geometry, material);\n    }\n\n    // HARP-9585: Override of base class method, however tslint doesn't recognize it as such.\n    raycast(raycaster: THREE.Raycaster, intersects: THREE.Intersection[]): void {\n        SolidLineMesh.raycast(this, raycaster, intersects);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeometryType, getFeatureId } from \"@here/harp-datasource-protocol\";\nimport { assert, LoggerManager } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { Tile, TileFeatureData } from \"../Tile\";\nimport {\n    BufferedGeometryLineAccessor,\n    BufferedGeometryObject3dAccessor,\n    IGeometryAccessor,\n    ILineAccessor,\n    IndexedBufferedGeometryLineAccessor,\n    IObject3dAccessor,\n    isLineAccessor,\n    isObject3dAccessor\n} from \"./TileGeometry\";\n\nconst logger = LoggerManager.instance.create(\"TileDataAccessor\");\n\n/**\n * Interface for a client visitor that is used to visit all `THREE.Object`s in a tile.\n */\nexport interface ITileDataVisitor {\n    tile: Tile;\n\n    /**\n     * Should return `true` if the visitor wants to visit the object with the specified\n     * `featureId`. This function is called before the type of the object is even known.\n     * @remarks Number ids are deprecated in favor of strings.\n     */\n    wantsFeature(featureId: number | string | undefined): boolean;\n\n    /**\n     * Should return `true` if the visitor wants to visit the point with the specified\n     * `featureId`.\n     * @remarks Number ids are deprecated in favor of strings.\n     */\n    wantsPoint(featureId: number | string | undefined): boolean;\n\n    /**\n     * Should return `true` if the visitor wants to visit the line with the specified\n     * `featureId`.\n     * @remarks Number ids are deprecated in favor of strings.\n     */\n    wantsLine(featureId: number | string | undefined): boolean;\n\n    /**\n     * Should return `true` if the visitor wants to visit the area object with the specified\n     * `featureId`.\n     * @remarks Number ids are deprecated in favor of strings.\n     */\n    wantsArea(featureId: number | string | undefined): boolean;\n\n    /**\n     * Should return `true` if the visitor wants to visit the object with the specified\n     * `featureId`.\n     * @remarks Number ids are deprecated in favor of strings.\n     */\n    wantsObject3D(featureId: number | string | undefined): boolean;\n\n    /**\n     * Visits a point object with the specified `featureId`; use `pointAccessor` to get the\n     * object's properties.\n     * @remarks Number ids are deprecated in favor of strings.\n     */\n    visitPoint(featureId: number | string | undefined): void;\n\n    /**\n     * Visits a line object with the specified `featureId`; use `pointAccessor` to get the\n     * object's properties.\n     * @remarks Number ids are deprecated in favor of strings.\n     */\n    visitLine(featureId: number | string | undefined, lineAccessor: ILineAccessor): void;\n\n    /**\n     * Visit an area object with the specified `featureId`; use `pointAccessor` to get the\n     * object's properties.\n     * @remarks Number ids are deprecated in favor of strings.\n     */\n    visitArea(featureId: number | string | undefined): void;\n\n    /**\n     * Visits a 3D object with the specified `featureId`; use `pointAccessor` to get the\n     * object's properties.\n     * @remarks Number ids are deprecated in favor of strings.\n     */\n    visitObject3D(\n        featureId: number | string | undefined,\n        object3dAccessor: IObject3dAccessor\n    ): void;\n}\n\n/**\n * An interface that provides options for {@link TileDataAccessor}.\n */\nexport interface TileDataAccessorOptions {\n    /** Limit to objects that have `featureID`s. */\n    onlyWithFeatureIds?: boolean;\n    /** Sets and overrides `wantPoints`, `wantLines`, `wantAreas`, `wantObject3D`. */\n    wantsAll?: boolean;\n    /** `true` to visit points. */\n    wantsPoints?: boolean;\n    /** `true` to visit lines. */\n    wantsLines?: boolean;\n    /** `true` to visit area objects. */\n    wantsAreas?: boolean;\n    /** `true` to visit general 3D objects. */\n    wantsObject3D?: boolean;\n}\n\n/**\n * An accessor for all geometries in a tile.\n *\n * @remarks\n * This class uses a client-provided {@link ITileDataVisitor}\n * to visit all objects, based on filtering options specified\n * by both, the `TileDataAccessor` and\n * the visitor itself.\n */\nexport class TileDataAccessor {\n    private readonly m_wantsPoints: boolean;\n    private readonly m_wantsLines: boolean;\n    private readonly m_wantsAreas: boolean;\n    private readonly m_wantsObject3D: boolean;\n\n    /**\n     * Constructs a `TileDataAccessor` instance.\n     *\n     * @param tile - The tile to access.\n     * @param visitor - The visitor.\n     * @param options - Options for the tile.\n     */\n    constructor(\n        public tile: Tile,\n        private readonly visitor: ITileDataVisitor,\n        options: TileDataAccessorOptions\n    ) {\n        const wantsAll = options.wantsAll === true;\n        this.m_wantsPoints = wantsAll || !(options.wantsPoints === false);\n        this.m_wantsLines = wantsAll || !(options.wantsLines === false);\n        this.m_wantsAreas = wantsAll || !(options.wantsAreas === false);\n        this.m_wantsObject3D = wantsAll || !(options.wantsObject3D === false);\n    }\n\n    /**\n     * Calls the visitor on all objects in the tile.\n     */\n    visitAll(): void {\n        const objects = this.tile.objects;\n\n        for (const object of objects) {\n            this.visitObject(object);\n        }\n    }\n\n    /**\n     * Visits a single object. This function should normally be called during visiting.\n     *\n     * @param object - The object to visit.\n     */\n    protected visitObject(object: THREE.Object3D): void {\n        const featureData: TileFeatureData | undefined =\n            object.userData !== undefined\n                ? (object.userData.feature as TileFeatureData)\n                : undefined;\n\n        // early opt out if there is no feature data, or if the feature data has only a single id\n        // and the visitor wants to ignore that featureId\n        if (\n            featureData === undefined ||\n            (featureData.objInfos !== undefined &&\n                featureData.objInfos.length === 1 &&\n                !this.visitor.wantsFeature(getFeatureId(featureData.objInfos[0])))\n        ) {\n            return;\n        }\n\n        const geometryType = featureData.geometryType;\n        if (geometryType === undefined) {\n            logger.warn(\"#visitObject: visiting object failed, no geometryType\", object);\n            return;\n        }\n\n        assert(featureData.objInfos !== undefined, \"featureData.ids missing\");\n        assert(featureData.starts !== undefined, \"featureData.starts missing\");\n        assert(Array.isArray(featureData.starts), \"featureData.starts is not an array\");\n        if (featureData.objInfos !== undefined && featureData.starts !== undefined) {\n            assert(\n                featureData.objInfos.length === featureData.starts.length,\n                \"featureData.ids and featureData.starts have unequal length\"\n            );\n        }\n\n        switch (geometryType) {\n            case GeometryType.Point:\n            case GeometryType.Text:\n                if (!this.m_wantsPoints) {\n                    return;\n                }\n                break;\n            case GeometryType.SolidLine:\n            case GeometryType.ExtrudedLine:\n            case GeometryType.TextPath:\n                if (!this.m_wantsLines) {\n                    return;\n                }\n                break;\n            case GeometryType.Polygon:\n            case GeometryType.ExtrudedPolygon:\n                if (!this.m_wantsAreas) {\n                    return;\n                }\n                break;\n            case GeometryType.Object3D:\n                if (!this.m_wantsObject3D) {\n                    return;\n                }\n                break;\n            default:\n                logger.warn(\"#visitObject: invalid geometryType\");\n        }\n\n        if (object.type !== \"Mesh\") {\n            logger.warn(\"#visitObject: visiting object failed, not of type 'Mesh'\", object);\n            return;\n        }\n\n        const mesh = object as THREE.Mesh;\n\n        this.visitMesh(mesh, featureData);\n    }\n\n    /**\n     * Gets the `BufferGeometry` from the specified object. This function requires the\n     * attribute `position` in `BufferGeometry` to be set.\n     *\n     * @param object - The object from which to get the geometry.\n     * @returns the geometry of the object, or `undefined`.\n     */\n    protected getBufferGeometry(object: THREE.Mesh): THREE.BufferGeometry | undefined {\n        const geometry = object.geometry;\n\n        if (geometry.type !== \"BufferGeometry\") {\n            logger.warn(\"#visitObject: object does not have BufferGeometry\");\n            return undefined;\n        }\n\n        const bufferGeometry = geometry as THREE.BufferGeometry;\n\n        // we know its a BufferAttribute because it is a BufferGeometry\n        const position: THREE.BufferAttribute = bufferGeometry.getAttribute(\n            \"position\"\n        ) as THREE.BufferAttribute;\n\n        if (!position) {\n            logger.warn(\"#visitLines: BufferGeometry has no position attribute\");\n            return undefined;\n        }\n\n        return bufferGeometry;\n    }\n\n    /**\n     * Obtains an accessor for the nonindexed geometry. This function may return `undefined`\n     * if the accessor is not implemented.\n     *\n     * @param geometryType - The type of geometry.\n     * @param object - The object for which to access the attributes and geometry.\n     * @param bufferGeometry - The object's `BufferGeometry`.\n     * @returns an accessor for a specified object, if available.\n     */\n    protected getGeometryAccessor(\n        geometryType: GeometryType,\n        object: THREE.Mesh,\n        bufferGeometry: THREE.BufferGeometry\n    ): IGeometryAccessor | undefined {\n        switch (geometryType) {\n            case GeometryType.Point:\n            case GeometryType.Text:\n                // return new RoBufferedGeometryLineAccessor(object, geometryType, bufferGeometry);\n                return undefined;\n            case GeometryType.SolidLine:\n            case GeometryType.ExtrudedLine:\n            case GeometryType.TextPath:\n                return new BufferedGeometryLineAccessor(object, geometryType, bufferGeometry);\n            case GeometryType.Polygon:\n            case GeometryType.ExtrudedPolygon:\n                // return new RoBufferedGeometryLineAccessor(object, geometryType, bufferGeometry);\n                return undefined;\n            case GeometryType.Object3D:\n                return new BufferedGeometryObject3dAccessor(object, geometryType, bufferGeometry);\n            default:\n                logger.warn(\"#getGeometryAccessor: invalid geometryType\");\n        }\n        return undefined;\n    }\n\n    /**\n     * Obtains an accessor for the indexed geometry. This function may return `undefined`\n     * if the accessor is not implemented.\n     *\n     * @param geometryType - The type of geometry.\n     * @param object - The object for which to access the attributes and geometry.\n     * @param bufferGeometry - The object's `BufferGeometry`.\n     * @returns an accessor for a specified object, if available.\n     */\n    protected getIndexedGeometryAccessor(\n        geometryType: GeometryType,\n        object: THREE.Mesh,\n        bufferGeometry: THREE.BufferGeometry\n    ): IGeometryAccessor | undefined {\n        switch (geometryType) {\n            case GeometryType.Point:\n            case GeometryType.Text:\n                // return new RoBufferedGeometryLineAccessor(object, geometryType, bufferGeometry);\n                return undefined;\n            case GeometryType.SolidLine:\n            case GeometryType.ExtrudedLine:\n            case GeometryType.TextPath:\n                return new IndexedBufferedGeometryLineAccessor(\n                    object,\n                    geometryType,\n                    bufferGeometry\n                );\n            case GeometryType.Polygon:\n            case GeometryType.ExtrudedPolygon:\n                // return new RoBufferedGeometryLineAccessor(object, geometryType, bufferGeometry);\n                return undefined;\n            case GeometryType.Object3D:\n                // return new RoBufferedGeometryLineAccessor(object, geometryType, bufferGeometry);\n                return undefined;\n            default:\n                logger.warn(\"#getIndexedGeometryAccessor: invalid geometryType\");\n        }\n        return undefined;\n    }\n\n    /**\n     * Visit the object.\n     *\n     * @param meshObject - Object of type `Mesh`.\n     * @param featureData - Dataset stored along with the object.\n     */\n    protected visitMesh(meshObject: THREE.Mesh, featureData: TileFeatureData): void {\n        const { objInfos, starts } = featureData;\n        const geometryType = featureData.geometryType;\n\n        // make linter happy: we already know that these both are valid\n        if (objInfos === undefined || starts === undefined || geometryType === undefined) {\n            return;\n        }\n\n        let geometryAccessor: IGeometryAccessor | undefined;\n\n        for (let featureIndex = 0; featureIndex < objInfos.length; featureIndex++) {\n            const featureId = getFeatureId(objInfos[featureIndex]);\n\n            if (!this.visitor.wantsFeature(featureId)) {\n                continue;\n            }\n\n            const featureStart = starts[featureIndex];\n            let featureEnd: number = -1;\n\n            // lazy creation of accessor, in case featureId was not wanted...\n            if (geometryAccessor === undefined) {\n                const bufferGeometry = this.getBufferGeometry(meshObject);\n                if (bufferGeometry === undefined) {\n                    continue;\n                }\n\n                if (bufferGeometry.index !== null) {\n                    geometryAccessor = this.getIndexedGeometryAccessor(\n                        geometryType,\n                        meshObject,\n                        bufferGeometry\n                    );\n                } else {\n                    geometryAccessor = this.getGeometryAccessor(\n                        geometryType,\n                        meshObject,\n                        bufferGeometry\n                    );\n                }\n\n                if (geometryAccessor === undefined) {\n                    logger.warn(\"#visitObject: no accessor geometryType\", geometryType);\n                    continue;\n                }\n            }\n\n            featureEnd =\n                featureIndex < starts.length - 1\n                    ? starts[featureIndex + 1]\n                    : geometryAccessor.getCount();\n\n            // setup/update the accessor for the new range of the object\n            geometryAccessor.setRange(featureStart, featureEnd);\n\n            switch (geometryType) {\n                case GeometryType.Point:\n                case GeometryType.Text:\n                    this.visitor.visitPoint(featureId);\n                    break;\n                case GeometryType.SolidLine:\n                case GeometryType.ExtrudedLine:\n                case GeometryType.TextPath:\n                    assert(isLineAccessor(geometryAccessor));\n                    this.visitor.visitLine(featureId, (geometryAccessor as any) as ILineAccessor);\n                    break;\n                case GeometryType.Polygon:\n                case GeometryType.ExtrudedPolygon:\n                    this.visitor.visitArea(featureId);\n                    break;\n                case GeometryType.Object3D:\n                    assert(isObject3dAccessor(geometryAccessor));\n                    this.visitor.visitObject3D(\n                        featureId,\n                        (geometryAccessor as any) as IObject3dAccessor\n                    );\n                    break;\n                default:\n                    logger.warn(\"#visitObject: invalid geometryType\");\n            }\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeometryType } from \"@here/harp-datasource-protocol\";\nimport { reconstructLineWidth } from \"@here/harp-lines\";\nimport { assert, LoggerManager } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nconst logger = LoggerManager.instance.create(\"TileGeometry\");\n\n/**\n * Interface to access lines. Allows read access for some important attributes.\n */\nexport interface ILineAccessor {\n    /**\n     * Hint for the original type of geometry.\n     */\n    geometryType: GeometryType;\n\n    /**\n     * Get the color from materials.\n     */\n    color: THREE.Color | undefined | Array<THREE.Color | undefined>;\n\n    /**\n     * Get the width. May have to be reconstructed from triangulated line mesh.\n     */\n    width: number | undefined;\n\n    /**\n     * Render order.\n     */\n    renderOrder: number;\n\n    /**\n     * Helper for function `isLineAccessor`.\n     *\n     * @returns `true` if it is a line accessor.\n     */\n    isLineAccessor(): boolean;\n\n    /**\n     * Clear the object from the mesh.\n     */\n    clear(): void;\n\n    /**\n     * Get vertices from the object.\n     */\n    getVertices(): Float32Array | undefined;\n}\n\n/**\n * Helper function to check if an accessor is of type `ILineAccessor`.\n *\n * @param arg - `true` if `arg` is `ILineAccessor`.\n * @internal\n */\nexport function isLineAccessor(arg: any): arg is ILineAccessor {\n    /**\n     * Get vertices from the object.\n     *\n     * @param mode - Specifies which part of the vertices should be returned.\n     */\n\n    return typeof arg.isLineAccessor === \"function\" && arg.isLineAccessor() === true;\n}\n\n/**\n * Accessor for unspecified 3D objects, like landmarks.\n */\nexport interface IObject3dAccessor {\n    /**\n     * Hint for the original type of geometry.\n     */\n    geometryType: GeometryType;\n\n    /**\n     * Get the color from materials.\n     */\n    color: THREE.Color | undefined | Array<THREE.Color | undefined>;\n\n    /**\n     * Render order.\n     */\n    renderOrder: number;\n\n    /**\n     * Helper for function `isObject3dAccessor`.\n     *\n     * @returns `true` if it is a line accessor.\n     */\n    isObject3dAccessor(): boolean;\n\n    /**\n     * Clear the object from the mesh.\n     */\n    clear(): void;\n\n    getVertices(): Float32Array | undefined;\n}\n\n/**\n * Helper function to check if an accessor is of type `IObject3dAccessor`.\n *\n * @param arg - `true` if `arg` is `IObject3dAccessor`.\n * @internal\n */\nexport function isObject3dAccessor(arg: any): arg is IObject3dAccessor {\n    return typeof arg.isObject3dAccessor === \"function\" && arg.isObject3dAccessor() === true;\n}\n\n/**\n * Basic interface for geometry accessors.\n */\nexport interface IGeometryAccessor {\n    /**\n     * Get the number of primitives (vertices of triangles).\n     *\n     * @returns Number of primitives.\n     */\n    getCount(): number;\n\n    /**\n     * Set range of primitives in this object related to one or more buffers.\n     *\n     * @param start - Start index in buffers.\n     * @param end - End index in buffers (+1).\n     */\n    setRange(start: number, end: number): void;\n}\n\n/**\n * Geometry accessor for both indexed and nonindexed `BufferedGeometry`.\n */\nexport abstract class BufferedGeometryAccessorBase implements IGeometryAccessor {\n    protected start: number = -1;\n    protected end: number = -1;\n    protected startCapSize: number = 0;\n    protected endCapSize: number = 0;\n    protected position: THREE.BufferAttribute;\n    protected itemSize: number;\n\n    constructor(\n        readonly object: THREE.Mesh,\n        readonly geometryType: GeometryType,\n        protected readonly bufferGeometry: THREE.BufferGeometry\n    ) {\n        assert(!!object);\n\n        if (bufferGeometry.type !== \"BufferGeometry\") {\n            logger.error(\n                \"IndexedBufferedGeometryAccessor#constructor: BufferGeometry has wrong \" + \"type\"\n            );\n        }\n        assert(\n            bufferGeometry.type === \"BufferGeometry\",\n            \"IndexedBufferedGeometryAccessor#constructor: BufferGeometry has wrong type\"\n        );\n\n        // we know its a BufferAttribute because it is a BufferGeometry\n        this.position = this.bufferGeometry.getAttribute(\"position\") as THREE.BufferAttribute;\n        this.itemSize = this.position.itemSize;\n\n        if (!this.position) {\n            logger.warn(\n                \"BufferedGeometryAccessor#constructor: BufferGeometry has no position \" +\n                    \"attribute\"\n            );\n        }\n\n        if (this.position.array.constructor !== Float32Array) {\n            logger.warn(\n                \"BufferedGeometryAccessor#constructor: BufferGeometry.position: \" +\n                    \"unsupported ArrayBuffer\"\n            );\n        }\n    }\n\n    /**\n     * Get the number of accessible geometries in this buffer.\n     *\n     * @returns Number of primitives in this geometry.\n     */\n    getCount(): number {\n        return this.position.count;\n    }\n\n    /**\n     * Get `renderOrder` of object.\n     *\n     * @returns `renderOrder` of the object.\n     */\n    get renderOrder(): number {\n        return this.object.renderOrder;\n    }\n\n    setRange(start: number, end: number, startCapSize: number = 0, endCapSize: number = 0) {\n        assert(start >= 0);\n        assert(end >= 0);\n        assert(start <= end);\n        this.start = start;\n        this.end = end;\n        this.startCapSize = startCapSize;\n        this.endCapSize = endCapSize;\n    }\n\n    /**\n     * Get one or more colors from materials.\n     */\n    get color(): THREE.Color | undefined | Array<THREE.Color | undefined> {\n        /**\n         * TODO: Get color(s) from vertex colors\n         */\n        const getColor = (material: THREE.Material) => {\n            const meshMaterial = material as THREE.MeshBasicMaterial;\n            if (\n                meshMaterial.type === \"MeshBasicMaterial\" ||\n                meshMaterial.type === \"MeshStandardMaterial\"\n            ) {\n                return meshMaterial.color;\n            } else if (meshMaterial.type === \"RawShaderMaterial\") {\n                const rawShaderMaterial = material as THREE.RawShaderMaterial;\n\n                if (rawShaderMaterial.name === \"SolidLineMaterial\") {\n                    return rawShaderMaterial.uniforms.diffuseColor.value as THREE.Color;\n                }\n\n                logger.warn(\n                    \"BufferedGeometryAccessor#color: unknown shader material name\",\n                    rawShaderMaterial.name\n                );\n            } else {\n                logger.warn(\n                    \"BufferedGeometryAccessor#color: unknown material type\",\n                    meshMaterial.type\n                );\n            }\n\n            return undefined;\n        };\n\n        if (Array.isArray(this.object.material)) {\n            const results = new Array<THREE.Color | undefined>();\n            const materials = this.object.material as THREE.Material[];\n\n            for (const material of materials) {\n                results.push(getColor(material));\n            }\n\n            return results;\n        } else {\n            return getColor(this.object.material);\n        }\n    }\n}\n\n/**\n * Abstract base class of an accessor for nonindexed geometry.\n */\nexport abstract class BufferedGeometryAccessor extends BufferedGeometryAccessorBase {\n    /**\n     * Create an object of type `BufferedGeometryAccessor`\n     *\n     * @param object - mesh object\n     * @param geometryType - type of geometry to be used\n     * @param bufferGeometry - which buffer geometry to use\n     * @param stride - geometry stride length\n     */\n    constructor(\n        readonly object: THREE.Mesh,\n        readonly geometryType: GeometryType,\n        protected readonly bufferGeometry: THREE.BufferGeometry,\n        protected stride: number\n    ) {\n        super(object, geometryType, bufferGeometry);\n    }\n\n    clear(): void {\n        assert(this.checkSetUp(), \"BufferedGeometryAccessor not setup\");\n\n        const positionsArray = this.position.array as number[];\n\n        const start = this.start * this.itemSize;\n        const end = this.end * this.itemSize;\n\n        for (let i = start; i < end; i++) {\n            positionsArray[i] = 0;\n        }\n\n        this.position.needsUpdate = true;\n    }\n\n    getVertices(): Float32Array | undefined {\n        assert(this.checkSetUp(), \"BufferedGeometryAccessor not setup\");\n\n        const start = this.start;\n        const end = this.end;\n\n        return (this.position.array as Float32Array).subarray(\n            start * this.itemSize,\n            end * this.itemSize\n        );\n    }\n\n    protected checkSetUp(): boolean {\n        return (\n            this.position !== undefined &&\n            this.start !== undefined &&\n            this.end !== undefined &&\n            this.start >= 0 &&\n            this.end <= this.position.count &&\n            this.start <= this.end\n        );\n    }\n}\n\n/**\n * Accessor for nonindexed line geometry.\n */\nexport class BufferedGeometryLineAccessor\n    extends BufferedGeometryAccessor\n    implements ILineAccessor {\n    constructor(\n        readonly object: THREE.Mesh,\n        readonly geometryType: GeometryType,\n        readonly bufferGeometry: THREE.BufferGeometry\n    ) {\n        super(object, geometryType, bufferGeometry, 3);\n    }\n\n    isLineAccessor(): boolean {\n        return true;\n    }\n\n    get width(): number | undefined {\n        //TODO: There is no implementation of such a line, yet...\n        assert(this.checkSetUp(), \"RoBufferedGeometryLineAccessor not setup\");\n        return undefined;\n    }\n}\n\n/**\n * Accessor for nonindexed unspecified (`Object3D`) geometry.\n */\nexport class BufferedGeometryObject3dAccessor\n    extends BufferedGeometryAccessor\n    implements IObject3dAccessor {\n    constructor(\n        readonly object: THREE.Mesh,\n        readonly geometryType: GeometryType,\n        readonly bufferGeometry: THREE.BufferGeometry\n    ) {\n        super(object, geometryType, bufferGeometry, 1);\n    }\n\n    isObject3dAccessor(): boolean {\n        return true;\n    }\n\n    /** @override */\n    getVertices(): Float32Array | undefined {\n        return super.getVertices();\n    }\n}\n\n/**\n * Abstract base class of indexed geometry.\n */\nexport abstract class IndexedBufferedGeometryAccessor extends BufferedGeometryAccessorBase {\n    indices: number[];\n\n    /**\n     * Creates an abstract class `IndexedBufferedGeometryAccessor`.\n     *\n     * @param object - mesh to be used\n     * @param geometryType - type of geometry\n     * @param bufferGeometry - geometry used\n     * @param start -\n     * @param end -\n     */\n    constructor(\n        readonly object: THREE.Mesh,\n        readonly geometryType: GeometryType,\n        protected readonly bufferGeometry: THREE.BufferGeometry,\n        start?: number,\n        end?: number\n    ) {\n        super(object, geometryType, bufferGeometry);\n\n        this.indices =\n            this.bufferGeometry.index !== null\n                ? (this.bufferGeometry.index.array as number[])\n                : ((undefined as any) as number[]);\n\n        if (!this.indices) {\n            logger.warn(\n                \"IndexedBufferedGeometryAccessor#constructor: BufferGeometry has no \" + \"index\"\n            );\n            assert(!!this.indices);\n        } else {\n            if (!(this.indices instanceof Uint32Array)) {\n                logger.warn(\n                    \"IndexedBufferedGeometryAccessor#constructor: BufferGeometry index \" +\n                        \"has wrong type\"\n                );\n                assert(this.indices instanceof Uint32Array);\n            }\n        }\n    }\n\n    /**\n     * Returns number of primitives, which is not known in this base class, so we return the number\n     * of indices.\n     *\n     * @returns The number of indices in the geometry.\n     * @override\n     */\n    getCount(): number {\n        return this.indices.length;\n    }\n\n    protected checkSetUp(): boolean {\n        return (\n            !!this.indices &&\n            this.start !== undefined &&\n            this.end !== undefined &&\n            this.start >= 0 &&\n            this.end <= this.indices.length &&\n            this.start <= this.end\n        );\n    }\n}\n\n/**\n * Accessor for lines in an indexed geometry.\n */\nexport class IndexedBufferedGeometryLineAccessor\n    extends IndexedBufferedGeometryAccessor\n    implements ILineAccessor {\n    constructor(\n        readonly object: THREE.Mesh,\n        readonly geometryType: GeometryType,\n        readonly bufferGeometry: THREE.BufferGeometry\n    ) {\n        super(object, geometryType, bufferGeometry, 3);\n    }\n\n    isLineAccessor(): boolean {\n        return true;\n    }\n\n    /**\n     * Reconstructs line width from triangulated geometry.\n     *\n     * @returns Line width.\n     */\n    get width(): number | undefined {\n        assert(this.checkSetUp(), \"RoIndexedBufferedGeometryLineAccessor not setup\");\n\n        if (this.geometryType === GeometryType.ExtrudedLine) {\n            const start = this.start + this.startCapSize;\n            const positionArray = this.position.array as Float32Array;\n            return reconstructLineWidth(positionArray, start);\n        }\n\n        return undefined;\n    }\n\n    clear(): void {\n        assert(this.checkSetUp(), \"RoIndexedBufferedGeometryLineAccessor not setup\");\n\n        const start = this.start;\n        const end = this.end;\n\n        for (let i = start; i < end; i++) {\n            this.indices[i] = 0;\n        }\n\n        if (this.bufferGeometry.index !== null) {\n            this.bufferGeometry.index.needsUpdate = true;\n        }\n    }\n\n    getVertices(): Float32Array | undefined {\n        assert(this.checkSetUp(), \"RoIndexedBufferedGeometryLineAccessor not setup\");\n\n        const itemSize = this.itemSize;\n\n        const start = this.start;\n        const end = this.end;\n\n        const result = new Float32Array((end - start) * itemSize);\n        const positionArray = this.position.array;\n\n        if (itemSize === 2) {\n            for (let i = start, j = 0; i < end; i++, j += itemSize) {\n                const index = this.indices[i];\n                result[j + 0] = positionArray[index * itemSize + 0];\n                result[j + 1] = positionArray[index * itemSize + 1];\n            }\n        }\n        if (itemSize === 3) {\n            for (let i = start, j = 0; i < end; i++, j += itemSize) {\n                const index = this.indices[i];\n                result[j + 0] = positionArray[index * itemSize + 0];\n                result[j + 1] = positionArray[index * itemSize + 1];\n                result[j + 2] = positionArray[index * itemSize + 2];\n            }\n        } else {\n            for (let i = start, j = 0; i < end; i++, j++) {\n                const index = this.indices[i];\n                for (let k = 0; k < itemSize; k++) {\n                    result[j * itemSize + k] = positionArray[index * itemSize + k];\n                }\n            }\n        }\n\n        return result;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    Attachment,\n    BaseTechniqueParams,\n    BufferAttribute,\n    CallExpr,\n    DecodedTile,\n    Env,\n    Expr,\n    ExtrudedPolygonTechnique,\n    FillTechnique,\n    Geometry,\n    GeometryKindSet,\n    getArrayConstructor,\n    getPropertyValue,\n    IndexedTechnique,\n    InterleavedBufferAttribute,\n    isCirclesTechnique,\n    isExtrudedLineTechnique,\n    isExtrudedPolygonTechnique,\n    isFillTechnique,\n    isJsonExpr,\n    isLineMarkerTechnique,\n    isLineTechnique,\n    isPoiTechnique,\n    isSegmentsTechnique,\n    isSolidLineTechnique,\n    isSquaresTechnique,\n    isStandardTechnique,\n    isTerrainTechnique,\n    isTextTechnique,\n    MakeTechniqueAttrs,\n    MapEnv,\n    needsVertexNormals,\n    Pickability,\n    SolidLineTechnique,\n    StandardExtrudedLineTechnique,\n    Technique,\n    TerrainTechnique,\n    TextPathGeometry,\n    transientToPickability,\n    Value\n} from \"@here/harp-datasource-protocol\";\nimport {\n    ExprEvaluatorContext,\n    OperatorDescriptor\n} from \"@here/harp-datasource-protocol/lib/ExprEvaluator\";\nimport { EarthConstants, ProjectionType } from \"@here/harp-geoutils\";\nimport {\n    EdgeMaterial,\n    EdgeMaterialParameters,\n    ExtrusionFeature,\n    FadingFeature,\n    hasExtrusionFeature,\n    isHighPrecisionLineMaterial,\n    MapMeshDepthMaterial,\n    MapMeshStandardMaterial,\n    setDisplacementMapToMaterial,\n    setShaderMaterialDefine,\n    SolidLineMaterial\n} from \"@here/harp-materials\";\nimport { assert, LoggerManager } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport {\n    applyBaseColorToMaterial,\n    buildMetricValueEvaluator,\n    buildObject,\n    createMaterial,\n    getBufferAttribute,\n    usesObject3D\n} from \"../DecodedTileHelpers\";\nimport {\n    createDepthPrePassMesh,\n    isRenderDepthPrePassEnabled,\n    setDepthPrePassStencil\n} from \"../DepthPrePass\";\nimport { DisplacementMap, TileDisplacementMap } from \"../DisplacementMap\";\nimport { MapAdapterUpdateEnv, MapMaterialAdapter } from \"../MapMaterialAdapter\";\nimport { MapViewPoints } from \"../MapViewPoints\";\nimport { PathBlockingElement } from \"../PathBlockingElement\";\nimport { TextElementBuilder } from \"../text/TextElementBuilder\";\nimport { Tile, TileFeatureData } from \"../Tile\";\nimport { addGroundPlane } from \"./AddGroundPlane\";\nimport { registerTileObject } from \"./RegisterTileObject\";\n\nconst logger = LoggerManager.instance.create(\"TileGeometryCreator\");\n\nconst tmpVector3 = new THREE.Vector3();\nconst tmpVector2 = new THREE.Vector2();\n\nclass AttachmentCache {\n    readonly bufferAttributes = new Map<BufferAttribute, THREE.BufferAttribute>();\n\n    readonly interleavedAttributes = new Map<\n        InterleavedBufferAttribute,\n        Array<{ name: string; attribute: THREE.InterleavedBufferAttribute }>\n    >();\n}\n\nclass MemoCallExpr extends CallExpr implements OperatorDescriptor {\n    private readonly m_deps: string[];\n    private readonly m_cachedProperties: Array<Value | undefined> = [];\n    private m_cachedValue?: Value;\n\n    constructor(expr: Expr) {\n        super(\"memo\", [expr]);\n        this.m_deps = Array.from(expr.dependencies().properties);\n        this.descriptor = this;\n    }\n\n    call(context: ExprEvaluatorContext): Value {\n        let changed = false;\n\n        this.m_deps.forEach((d, i) => {\n            const newValue = context.env.lookup(d);\n            if (!changed && newValue !== this.m_cachedProperties[i]) {\n                changed = true;\n            }\n            if (changed) {\n                this.m_cachedProperties[i] = newValue;\n            }\n        });\n\n        if (changed || this.m_cachedValue === undefined) {\n            this.m_cachedValue = context.evaluate(this.args[0]);\n        }\n\n        return this.m_cachedValue;\n    }\n}\n\nclass AttachmentInfo {\n    constructor(\n        readonly geometry: Geometry,\n        readonly info: Attachment,\n        readonly cache: AttachmentCache\n    ) {}\n\n    getBufferAttribute(description: BufferAttribute): THREE.BufferAttribute {\n        if (this.cache.bufferAttributes.has(description)) {\n            return this.cache.bufferAttributes.get(description)!;\n        }\n        const attribute = getBufferAttribute(description);\n        this.cache.bufferAttributes.set(description, attribute);\n        return attribute;\n    }\n\n    getInterleavedBufferAttributes(description: InterleavedBufferAttribute) {\n        const interleavedAttributes = this.cache.interleavedAttributes.get(description);\n\n        if (interleavedAttributes) {\n            return interleavedAttributes;\n        }\n\n        const ArrayCtor = getArrayConstructor(description.type);\n        const buffer = new ArrayCtor(description.buffer);\n        const interleavedBuffer = new THREE.InterleavedBuffer(buffer, description.stride);\n\n        const attrs = description.attributes.map(interleavedAttr => {\n            const attribute = new THREE.InterleavedBufferAttribute(\n                interleavedBuffer,\n                interleavedAttr.itemSize,\n                interleavedAttr.offset,\n                false\n            );\n            const name = interleavedAttr.name;\n            return { name, attribute };\n        });\n\n        this.cache.interleavedAttributes.set(description, attrs);\n        return attrs;\n    }\n}\n\nfunction addToExtrudedMaterials(\n    material: THREE.Material | THREE.Material[],\n    extrudedMaterials: ExtrusionFeature[]\n) {\n    if (Array.isArray(material)) {\n        const materials = material as ExtrusionFeature[];\n        extrudedMaterials.push(...materials);\n    } else {\n        extrudedMaterials.push(material as ExtrusionFeature);\n    }\n}\n\n/**\n * Parameters that control fading.\n */\nexport interface FadingParameters {\n    fadeNear?: number;\n    fadeFar?: number;\n}\n\n/**\n * Parameters that control fading for extruded buildings with fading edges.\n */\nexport interface PolygonFadingParameters extends FadingParameters {\n    color?: string | number;\n    colorMix?: number;\n    lineFadeNear?: number;\n    lineFadeFar?: number;\n}\n\n/**\n * Support class to create geometry for a {@link Tile} from a {@link @here/harp-datasource-protocol#DecodedTile}.\n * @internal\n */\nexport class TileGeometryCreator {\n    private static m_instance: TileGeometryCreator;\n\n    /**\n     * The `instance` of the `TileGeometryCreator`.\n     *\n     * @returns TileGeometryCreator\n     */\n    static get instance(): TileGeometryCreator {\n        return this.m_instance || (this.m_instance = new TileGeometryCreator());\n    }\n\n    /**\n     *  Creates an instance of TileGeometryCreator. Access is allowed only through `instance`.\n     */\n    private constructor() {\n        //\n    }\n\n    /**\n     * Apply `enabledKinds` and `disabledKinds` to all techniques in the `decodedTile`. If a\n     * technique is identified as disabled, its property `enabled` is set to `false`.\n     *\n     * @param decodedTile - The decodedTile containing the actual tile map data.\n     * @param enabledKinds - Optional [[GeometryKindSet]] used to specify which object kinds should be\n     *      created.\n     * @param disabledKinds - Optional [[GeometryKindSet]] used to filter objects that should not be\n     *      created.\n     */\n    initDecodedTile(\n        decodedTile: DecodedTile,\n        enabledKinds?: GeometryKindSet | undefined,\n        disabledKinds?: GeometryKindSet | undefined\n    ) {\n        for (const technique of decodedTile.techniques) {\n            const kind = technique.kind;\n\n            // No info about kind, no way to filter it.\n            if (kind === undefined || (kind instanceof Set && kind.size === 0)) {\n                technique._kindState = true;\n                continue;\n            }\n\n            // Technique is enabled only if enabledKinds is defined and technique belongs to that set or\n            // if that's not the case, disabledKinds must be undefined or technique does not belong to it.\n            technique._kindState =\n                !(disabledKinds !== undefined && disabledKinds.hasOrIntersects(kind)) ||\n                (enabledKinds !== undefined && enabledKinds.hasOrIntersects(kind));\n        }\n\n        for (const srcGeometry of decodedTile.geometries) {\n            for (const group of srcGeometry.groups) {\n                group.createdOffsets = [];\n            }\n        }\n    }\n\n    /**\n     * Called after the `Tile` has been decoded. It is required to call `initDecodedTile` before\n     * calling this method.\n     *\n     * @see [[TileGeometryCreator#initDecodedTile]]\n     *\n     * @param tile - The {@link Tile} to process.\n     * @param decodedTile - The decodedTile containing the actual tile map data.\n     * @returns Promise resolved when all textures are ready to render.\n     */\n    createAllGeometries(tile: Tile, decodedTile: DecodedTile): Promise<void> {\n        const filter = (technique: IndexedTechnique): boolean => {\n            return technique._kindState !== false;\n        };\n\n        let texturesReady: Promise<any> = Promise.resolve();\n        const onNewTexture = (texturePromise: Promise<THREE.Texture>) => {\n            texturesReady = Promise.all([\n                texturesReady,\n                texturePromise\n                    .then(texture => {\n                        tile.addOwnedTexture(texture);\n                        if (!texture.image) {\n                            return Promise.resolve();\n                        }\n                        return new Promise<void>(resolve => {\n                            texture.onUpdate = () => {\n                                (texture.onUpdate as any) = null;\n                                resolve();\n                            };\n                            tile.mapView.renderer.initTexture(texture);\n                        });\n                    })\n                    .catch(() => {}) // Keep waiting for the other textures even if one fails.\n            ]);\n        };\n        this.createObjects(tile, decodedTile, onNewTexture, filter);\n\n        this.preparePois(tile, decodedTile);\n\n        // TextElements do not get their geometry created by Tile, but are managed on a\n        // higher level.\n        const textFilter = (technique: IndexedTechnique): boolean => {\n            if (\n                !isPoiTechnique(technique) &&\n                !isLineMarkerTechnique(technique) &&\n                !isTextTechnique(technique)\n            ) {\n                return false;\n            }\n            return filter(technique);\n        };\n        this.createTextElements(tile, decodedTile, textFilter);\n\n        this.createLabelRejectionElements(tile, decodedTile);\n\n        // HARP-7899, disable ground plane for globe\n        if (tile.dataSource.addGroundPlane && tile.projection.type === ProjectionType.Planar) {\n            // The ground plane is required for when we zoom in and we fall back to the parent\n            // (whilst the new tiles are loading), in that case the ground plane ensures that the\n            // parent's geometry doesn't show through.\n            addGroundPlane(tile, -1);\n        }\n        return texturesReady;\n    }\n\n    createLabelRejectionElements(tile: Tile, decodedTile: DecodedTile) {\n        if (decodedTile.pathGeometries === undefined) {\n            return;\n        }\n        for (const path of decodedTile.pathGeometries) {\n            tile.addBlockingElement(new PathBlockingElement(path.path));\n        }\n    }\n\n    /**\n     * Processes the given tile and assign default values for geometry kinds,\n     * render orders and label priorities.\n     *\n     * @param {Tile} tile\n     * @param {(GeometryKindSet | undefined)} enabledKinds\n     * @param {(GeometryKindSet | undefined)} disabledKinds\n     */\n    processTechniques(\n        tile: Tile,\n        enabledKinds: GeometryKindSet | undefined,\n        disabledKinds: GeometryKindSet | undefined\n    ): void {\n        const decodedTile = tile.decodedTile;\n\n        if (decodedTile === undefined) {\n            return;\n        }\n\n        // Speedup and simplify following code: Test all techniques if they intersect with\n        // enabledKinds and disabledKinds, in which case they are flagged. The disabledKinds can be\n        // ignored hereafter.\n        this.initDecodedTile(decodedTile, enabledKinds, disabledKinds);\n\n        // compile the dynamic expressions.\n        const exprPool = tile.dataSource.exprPool;\n        decodedTile.techniques.forEach((technique: any) => {\n            for (const propertyName in technique) {\n                if (!technique.hasOwnProperty(propertyName)) {\n                    continue;\n                }\n                const value = technique[propertyName];\n                if (isJsonExpr(value) && propertyName !== \"kind\") {\n                    // \"kind\" is reserved.\n                    try {\n                        let expr = Expr.fromJSON(value);\n                        if (expr.dependencies().volatile !== true) {\n                            expr = new MemoCallExpr(Expr.fromJSON(value));\n                        }\n                        technique[propertyName] = expr.intern(exprPool);\n                    } catch (error) {\n                        logger.error(\"Failed to compile expression:\", error);\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * Splits the text paths that contain sharp corners.\n     *\n     * @param tile - The {@link Tile} to process paths on.\n     * @param textPathGeometries - The original path geometries that may have defects.\n     * @param textFilter -: Optional filter. Should return true for any text technique that is\n     *      applicable.\n     */\n    prepareTextPaths(\n        textPathGeometries: TextPathGeometry[],\n        decodedTile: DecodedTile,\n        textFilter?: (technique: IndexedTechnique) => boolean\n    ): TextPathGeometry[] {\n        const processedPaths = new Array<TextPathGeometry>();\n        const newPaths = textPathGeometries.slice();\n\n        while (newPaths.length > 0) {\n            const textPath = newPaths.pop();\n\n            if (textPath === undefined) {\n                break;\n            }\n\n            const technique = decodedTile.techniques[textPath.technique];\n            if (\n                !isTextTechnique(technique) ||\n                (textFilter !== undefined && !textFilter(technique))\n            ) {\n                continue;\n            }\n\n            processedPaths.push(textPath);\n        }\n        return processedPaths;\n    }\n\n    /**\n     * Creates {@link TextElement} objects from the decoded tile and list of materials specified. The\n     * priorities of the {@link TextElement}s are updated to simplify label placement.\n     *\n     * @param tile - The {@link Tile} to create the testElements on.\n     * @param decodedTile - The {@link @here/harp-datasource-protocol#DecodedTile}.\n     * @param textFilter -: Optional filter. Should return true for any text technique that is\n     *      applicable.\n     */\n    createTextElements(\n        tile: Tile,\n        decodedTile: DecodedTile,\n        textFilter?: (technique: IndexedTechnique) => boolean\n    ) {\n        const mapView = tile.mapView;\n        const worldOffsetX = tile.computeWorldOffsetX();\n\n        const discreteZoomLevel = Math.floor(mapView.zoomLevel);\n        const discreteZoomEnv = new MapEnv({ $zoom: discreteZoomLevel }, mapView.env);\n\n        const textElementBuilder = new TextElementBuilder(\n            discreteZoomEnv,\n            tile.textStyleCache,\n            tile.dataSource.dataSourceOrder\n        );\n\n        if (decodedTile.textPathGeometries !== undefined) {\n            const textPathGeometries = this.prepareTextPaths(\n                decodedTile.textPathGeometries,\n                decodedTile,\n                textFilter\n            );\n\n            for (const textPath of textPathGeometries) {\n                const technique = decodedTile.techniques[textPath.technique];\n\n                if (\n                    technique._kindState === false ||\n                    !isTextTechnique(technique) ||\n                    (textFilter !== undefined && !textFilter(technique))\n                ) {\n                    continue;\n                }\n\n                const path: THREE.Vector3[] = [];\n                for (let i = 0; i < textPath.path.length; i += 3) {\n                    path.push(\n                        new THREE.Vector3(\n                            textPath.path[i] + worldOffsetX,\n                            textPath.path[i + 1],\n                            textPath.path[i + 2]\n                        )\n                    );\n                }\n\n                const textElement = textElementBuilder\n                    .withTechnique(technique)\n                    .build(\n                        textPath.text,\n                        path,\n                        tile.offset,\n                        tile.dataSource.name,\n                        tile.dataSource.dataSourceOrder,\n                        textPath.objInfos,\n                        textPath.pathLengthSqr\n                    );\n\n                tile.addTextElement(textElement);\n            }\n        }\n\n        if (decodedTile.textGeometries !== undefined) {\n            for (const text of decodedTile.textGeometries) {\n                if (text.technique === undefined || text.stringCatalog === undefined) {\n                    continue;\n                }\n\n                const technique = decodedTile.techniques[text.technique];\n\n                if (\n                    technique._kindState === false ||\n                    !isTextTechnique(technique) ||\n                    (textFilter !== undefined && !textFilter(technique))\n                ) {\n                    continue;\n                }\n\n                const positions = new THREE.BufferAttribute(\n                    new Float64Array(text.positions.buffer),\n                    text.positions.itemCount\n                );\n\n                const numPositions = positions.count;\n                if (numPositions < 1) {\n                    continue;\n                }\n\n                textElementBuilder.withTechnique(technique);\n\n                for (let i = 0; i < numPositions; ++i) {\n                    const x = positions.getX(i) + worldOffsetX;\n                    const y = positions.getY(i);\n                    const z = positions.getZ(i);\n                    const label = text.stringCatalog[text.texts[i]];\n                    if (label === undefined) {\n                        // skip missing labels\n                        continue;\n                    }\n\n                    const attributes = text.objInfos?.[i];\n                    const point = new THREE.Vector3(x, y, z);\n                    const textElement = textElementBuilder.build(\n                        label!,\n                        point,\n                        tile.offset,\n                        tile.dataSource.name,\n                        tile.dataSource.dataSourceOrder,\n                        attributes\n                    );\n                    tile.addTextElement(textElement);\n                }\n            }\n        }\n    }\n\n    /**\n     * Creates `Tile` objects from the decoded tile and list of materials specified.\n     *\n     * @param tile - The {@link Tile} to create the geometry on.\n     * @param decodedTile - The {@link @here/harp-datasource-protocol#DecodedTile}.\n     * @param onTextureCreated - Callback for each texture created, getting a promise that will be\n     * resolved once the texture is loaded. Texture is not uploaded to GPU.\n     * @param techniqueFilter -: Optional filter. Should return true for any technique that is\n     *      applicable.\n     */\n    createObjects(\n        tile: Tile,\n        decodedTile: DecodedTile,\n        onTextureCreated: (texture: Promise<THREE.Texture>) => void,\n        techniqueFilter?: (technique: IndexedTechnique) => boolean\n    ) {\n        const mapView = tile.mapView;\n        const materials: THREE.Material[] = [];\n        const extrudedMaterials: THREE.Material[] = [];\n        const animatedExtrusionHandler = mapView.animatedExtrusionHandler;\n        const discreteZoomLevel = Math.floor(mapView.zoomLevel);\n        const discreteZoomEnv = new MapEnv({ $zoom: discreteZoomLevel }, mapView.env);\n        const objects = tile.objects;\n        const viewRanges = mapView.viewRanges;\n        const elevationEnabled = mapView.elevationProvider !== undefined;\n\n        for (const attachment of this.getAttachments(decodedTile)) {\n            const srcGeometry = attachment.geometry;\n            const groups = attachment.info.groups;\n            const groupCount = groups.length;\n\n            for (let groupIndex = 0; groupIndex < groupCount; ) {\n                const group = groups[groupIndex++];\n                const start = group.start;\n                const techniqueIndex = group.technique;\n                const technique = decodedTile.techniques[techniqueIndex];\n\n                if (group.createdOffsets === undefined) {\n                    group.createdOffsets = [];\n                }\n\n                if (\n                    group.createdOffsets!.includes(tile.offset) ||\n                    technique._kindState === false ||\n                    (techniqueFilter !== undefined && !techniqueFilter(technique))\n                ) {\n                    continue;\n                }\n\n                let count = group.count;\n                group.createdOffsets!.push(tile.offset);\n\n                // compress consecutive groups\n                for (\n                    ;\n                    groupIndex < groupCount && groups[groupIndex].technique === techniqueIndex;\n                    ++groupIndex\n                ) {\n                    if (start + count !== groups[groupIndex].start) {\n                        break;\n                    }\n\n                    count += groups[groupIndex].count;\n\n                    // Mark this group as created, so it does not get processed again.\n                    groups[groupIndex].createdOffsets!.push(tile.offset);\n                }\n\n                if (!usesObject3D(technique)) {\n                    continue;\n                }\n                const extrusionAnimationEnabled: boolean =\n                    animatedExtrusionHandler?.setAnimationProperties(technique, discreteZoomEnv) ??\n                    false;\n\n                let material: THREE.Material | undefined = materials[techniqueIndex];\n\n                if (material === undefined) {\n                    material = createMaterial(\n                        mapView.renderer.capabilities,\n                        {\n                            technique,\n                            env: mapView.env,\n                            fog: mapView.scene.fog !== null,\n                            shadowsEnabled: mapView.shadowsEnabled\n                        },\n                        onTextureCreated\n                    );\n                    if (material === undefined) {\n                        continue;\n                    }\n                    if (extrusionAnimationEnabled && hasExtrusionFeature(material)) {\n                        addToExtrudedMaterials(material, extrudedMaterials);\n                    }\n                    materials[techniqueIndex] = material;\n                }\n\n                const techniqueKind = technique.kind;\n\n                // Modify the standard textured shader to support height-based coloring.\n                if (isTerrainTechnique(technique)) {\n                    this.setupTerrainMaterial(technique, material, tile.mapView.clearColor);\n                }\n\n                const bufferGeometry = new THREE.BufferGeometry();\n\n                srcGeometry.vertexAttributes?.forEach(vertexAttribute => {\n                    const buffer = attachment.getBufferAttribute(vertexAttribute);\n                    bufferGeometry.setAttribute(vertexAttribute.name, buffer);\n                });\n\n                srcGeometry.interleavedVertexAttributes?.forEach(attr => {\n                    attachment\n                        .getInterleavedBufferAttributes(attr)\n                        .forEach(({ name, attribute }) =>\n                            bufferGeometry.setAttribute(name, attribute)\n                        );\n                });\n\n                const index = attachment.info.index ?? srcGeometry.index;\n                if (index) {\n                    bufferGeometry.setIndex(attachment.getBufferAttribute(index));\n                }\n\n                if (!bufferGeometry.getAttribute(\"normal\") && needsVertexNormals(technique)) {\n                    bufferGeometry.computeVertexNormals();\n                }\n\n                bufferGeometry.addGroup(start, count);\n\n                if (isSolidLineTechnique(technique)) {\n                    // TODO: Unify access to shader defines via SolidLineMaterial setters\n                    assert(!isHighPrecisionLineMaterial(material));\n                    const lineMaterial = material as SolidLineMaterial;\n                    if (\n                        technique.clipping === true &&\n                        tile.projection.type === ProjectionType.Planar\n                    ) {\n                        tile.boundingBox.getSize(tmpVector3);\n                        tmpVector2.set(tmpVector3.x, tmpVector3.y);\n                        lineMaterial.clipTileSize = tmpVector2;\n                    }\n\n                    if (bufferGeometry.getAttribute(\"color\")) {\n                        setShaderMaterialDefine(lineMaterial, \"USE_COLOR\", true);\n                    }\n                }\n\n                // Add the solid line outlines as a separate object.\n                const hasSolidLinesOutlines: boolean =\n                    isSolidLineTechnique(technique) && technique.secondaryWidth !== undefined;\n\n                // When the source geometry is split in groups, we\n                // should create objects with an array of materials.\n                const hasFeatureGroups =\n                    Expr.isExpr(technique.enabled) &&\n                    srcGeometry.featureStarts &&\n                    srcGeometry.featureStarts.length > 0;\n\n                const object = buildObject(\n                    technique,\n                    bufferGeometry,\n                    hasFeatureGroups ? [material] : material,\n                    tile,\n                    elevationEnabled\n                );\n\n                object.renderOrder = getPropertyValue(technique.renderOrder, mapView.env);\n\n                if (attachment.info.uuid !== undefined) {\n                    object.uuid = attachment.info.uuid;\n                    object.userData.geometryId = attachment.info.uuid;\n                }\n\n                if (\n                    (isCirclesTechnique(technique) || isSquaresTechnique(technique)) &&\n                    technique.enablePicking !== undefined\n                ) {\n                    (object as MapViewPoints).enableRayTesting = technique.enablePicking!;\n                }\n\n                if (isLineTechnique(technique) || isSegmentsTechnique(technique)) {\n                    const fadingParams = this.getFadingParams(discreteZoomEnv, technique);\n                    FadingFeature.addRenderHelper(\n                        object,\n                        viewRanges,\n                        fadingParams.fadeNear,\n                        fadingParams.fadeFar,\n                        false\n                    );\n                }\n\n                if (isSolidLineTechnique(technique)) {\n                    const fadingParams = this.getFadingParams(discreteZoomEnv, technique);\n\n                    FadingFeature.addRenderHelper(\n                        object,\n                        viewRanges,\n                        fadingParams.fadeNear,\n                        fadingParams.fadeFar,\n                        false\n                    );\n                }\n\n                if (isExtrudedLineTechnique(technique)) {\n                    // extruded lines are normal meshes, and need transparency only when fading or\n                    // dynamic properties is defined.\n                    if (technique.fadeFar !== undefined) {\n                        const fadingParams = this.getFadingParams(\n                            mapView.env,\n                            technique as StandardExtrudedLineTechnique\n                        );\n\n                        FadingFeature.addRenderHelper(\n                            object,\n                            viewRanges,\n                            fadingParams.fadeNear,\n                            fadingParams.fadeFar,\n                            true\n                        );\n                    }\n                }\n\n                this.addUserData(tile, srcGeometry, technique, object);\n\n                if (isExtrudedPolygonTechnique(technique)) {\n                    object.castShadow = mapView.shadowsEnabled;\n                    object.receiveShadow = mapView.shadowsEnabled;\n                } else if (isStandardTechnique(technique) || isFillTechnique(technique)) {\n                    object.receiveShadow = mapView.shadowsEnabled;\n                }\n\n                if (\n                    isExtrudedPolygonTechnique(technique) ||\n                    isStandardTechnique(technique) ||\n                    isFillTechnique(technique)\n                ) {\n                    // filled polygons are normal meshes, and need transparency only when fading or\n                    // dynamic properties is defined.\n\n                    if (technique.fadeFar !== undefined) {\n                        const fadingParams = this.getFadingParams(discreteZoomEnv, technique);\n                        FadingFeature.addRenderHelper(\n                            object,\n                            viewRanges,\n                            fadingParams.fadeNear,\n                            fadingParams.fadeFar,\n                            true\n                        );\n                    }\n                }\n\n                const renderDepthPrePass =\n                    isExtrudedPolygonTechnique(technique) &&\n                    isRenderDepthPrePassEnabled(technique, discreteZoomEnv);\n\n                if (renderDepthPrePass) {\n                    const depthPassMesh = createDepthPrePassMesh(object as THREE.Mesh);\n                    this.addUserData(tile, srcGeometry, technique, depthPassMesh);\n                    // Set geometry kind for depth pass mesh so that it gets the displacement map\n                    // for elevation overlay.\n                    registerTileObject(tile, depthPassMesh, techniqueKind, {\n                        technique,\n                        pickability: Pickability.transient\n                    });\n                    objects.push(depthPassMesh);\n\n                    if (extrusionAnimationEnabled) {\n                        addToExtrudedMaterials(depthPassMesh.material, extrudedMaterials);\n                    }\n\n                    setDepthPrePassStencil(depthPassMesh, object as THREE.Mesh);\n                }\n\n                const techniquePickability = transientToPickability(\n                    getPropertyValue(technique.transient, mapView.env)\n                );\n                // register all objects as pickable except solid lines with outlines, in that case\n                // it's enough to make outlines pickable.\n                registerTileObject(tile, object, techniqueKind, {\n                    technique,\n                    pickability: hasSolidLinesOutlines\n                        ? Pickability.transient\n                        : techniquePickability\n                });\n                objects.push(object);\n\n                // Add the extruded polygon edges as a separate geometry.\n                if (\n                    isExtrudedPolygonTechnique(technique) &&\n                    attachment.info.edgeIndex !== undefined\n                ) {\n                    // When the source geometry is split in groups, we\n                    // should create objects with an array of materials.\n                    const hasEdgeFeatureGroups =\n                        Expr.isExpr(technique.enabled) &&\n                        srcGeometry.edgeFeatureStarts &&\n                        srcGeometry.edgeFeatureStarts.length > 0;\n\n                    const buildingTechnique = technique as ExtrudedPolygonTechnique;\n                    const edgeGeometry = new THREE.BufferGeometry();\n                    edgeGeometry.setAttribute(\"position\", bufferGeometry.getAttribute(\"position\"));\n\n                    const colorAttribute = bufferGeometry.getAttribute(\"color\");\n                    if (colorAttribute !== undefined) {\n                        edgeGeometry.setAttribute(\"color\", colorAttribute);\n                    }\n\n                    const extrusionAttribute = bufferGeometry.getAttribute(\"extrusionAxis\");\n                    if (extrusionAttribute !== undefined) {\n                        edgeGeometry.setAttribute(\"extrusionAxis\", extrusionAttribute);\n                    }\n\n                    const normalAttribute = bufferGeometry.getAttribute(\"normal\");\n                    if (normalAttribute !== undefined) {\n                        edgeGeometry.setAttribute(\"normal\", normalAttribute);\n                    }\n\n                    const uvAttribute = bufferGeometry.getAttribute(\"uv\");\n                    if (uvAttribute !== undefined) {\n                        edgeGeometry.setAttribute(\"uv\", uvAttribute);\n                    }\n\n                    edgeGeometry.setIndex(\n                        attachment.getBufferAttribute(attachment.info.edgeIndex!)\n                    );\n\n                    // Read the uniforms from the technique values (and apply the default values).\n                    const extrudedPolygonTechnique = technique as ExtrudedPolygonTechnique;\n\n                    const fadingParams = this.getPolygonFadingParams(\n                        discreteZoomEnv,\n                        extrudedPolygonTechnique\n                    );\n\n                    // Configure the edge material based on the theme values.\n                    const materialParams: EdgeMaterialParameters = {\n                        color: fadingParams.color,\n                        colorMix: fadingParams.colorMix,\n                        fadeNear: fadingParams.lineFadeNear,\n                        fadeFar: fadingParams.lineFadeFar,\n                        extrusionRatio: extrusionAnimationEnabled ? 0 : undefined,\n                        vertexColors: bufferGeometry.getAttribute(\"color\") ? true : false,\n                        rendererCapabilities: mapView.renderer.capabilities\n                    };\n                    const edgeMaterial = new EdgeMaterial(materialParams);\n                    const edgeObj = new THREE.LineSegments(\n                        edgeGeometry,\n                        hasEdgeFeatureGroups ? [edgeMaterial] : edgeMaterial\n                    );\n\n                    this.addUserData(tile, srcGeometry, technique, edgeObj);\n\n                    // Set the correct render order.\n                    edgeObj.renderOrder = object.renderOrder + 0.1;\n\n                    FadingFeature.addRenderHelper(\n                        edgeObj,\n                        viewRanges,\n                        fadingParams.lineFadeNear,\n                        fadingParams.lineFadeFar,\n                        false\n                    );\n\n                    if (extrusionAnimationEnabled) {\n                        addToExtrudedMaterials(edgeObj.material, extrudedMaterials);\n                    }\n\n                    registerTileObject(tile, edgeObj, techniqueKind, {\n                        technique,\n                        pickability: Pickability.transient\n                    });\n\n                    MapMaterialAdapter.create(edgeMaterial, {\n                        color: buildingTechnique.lineColor,\n                        objectColor: buildingTechnique.color,\n                        opacity: buildingTechnique.opacity,\n                        lineWidth: (frameMapView: MapAdapterUpdateEnv) => {\n                            // lineWidth for ExtrudedPolygonEdges only supports 0 or 1\n                            const value = getPropertyValue(\n                                buildingTechnique.lineWidth,\n                                frameMapView.env\n                            );\n                            if (typeof value === \"number\") {\n                                return THREE.MathUtils.clamp(value, 0, 1);\n                            } else {\n                                return 0;\n                            }\n                        }\n                    });\n                    objects.push(edgeObj);\n                }\n\n                // animate the extrusion of buildings\n                if (isExtrudedPolygonTechnique(technique) && extrusionAnimationEnabled) {\n                    object.customDepthMaterial = new MapMeshDepthMaterial({\n                        depthPacking: THREE.RGBADepthPacking\n                    });\n                    addToExtrudedMaterials(object.customDepthMaterial, extrudedMaterials);\n                }\n\n                // Add the fill area edges as a separate geometry.\n\n                if (isFillTechnique(technique) && attachment.info.edgeIndex) {\n                    const hasEdgeFeatureGroups =\n                        Expr.isExpr(technique.enabled) &&\n                        srcGeometry.edgeFeatureStarts &&\n                        srcGeometry.edgeFeatureStarts.length > 0;\n\n                    const outlineGeometry = new THREE.BufferGeometry();\n                    outlineGeometry.setAttribute(\n                        \"position\",\n                        bufferGeometry.getAttribute(\"position\")\n                    );\n                    outlineGeometry.setIndex(\n                        attachment.getBufferAttribute(attachment.info.edgeIndex!)\n                    );\n\n                    const fillTechnique = technique as FillTechnique;\n\n                    const fadingParams = this.getPolygonFadingParams(mapView.env, fillTechnique);\n\n                    // Configure the edge material based on the theme values.\n                    const materialParams: EdgeMaterialParameters = {\n                        color: fadingParams.color,\n                        colorMix: fadingParams.colorMix,\n                        fadeNear: fadingParams.lineFadeNear,\n                        fadeFar: fadingParams.lineFadeFar,\n                        vertexColors: bufferGeometry.getAttribute(\"color\") ? true : false,\n                        rendererCapabilities: mapView.renderer.capabilities\n                    };\n                    const outlineMaterial = new EdgeMaterial(materialParams);\n                    const outlineObj = new THREE.LineSegments(\n                        outlineGeometry,\n                        hasEdgeFeatureGroups ? [outlineMaterial] : outlineMaterial\n                    );\n                    outlineObj.renderOrder = object.renderOrder + 0.1;\n\n                    FadingFeature.addRenderHelper(\n                        outlineObj,\n                        viewRanges,\n                        fadingParams.lineFadeNear,\n                        fadingParams.lineFadeFar,\n                        false\n                    );\n\n                    this.addUserData(tile, srcGeometry, technique, outlineObj);\n\n                    registerTileObject(tile, outlineObj, techniqueKind, {\n                        technique,\n                        pickability: techniquePickability\n                    });\n                    MapMaterialAdapter.create(outlineMaterial, {\n                        color: fillTechnique.lineColor,\n                        objectColor: fillTechnique.color,\n                        opacity: fillTechnique.opacity\n                    });\n                    objects.push(outlineObj);\n                }\n\n                // Add the fill area edges as a separate geometry.\n                if (hasSolidLinesOutlines) {\n                    const outlineTechnique = technique as SolidLineTechnique;\n                    const outlineMaterial = material.clone() as SolidLineMaterial;\n                    applyBaseColorToMaterial(\n                        outlineMaterial,\n                        outlineMaterial.color,\n                        outlineTechnique,\n                        outlineTechnique.secondaryColor ?? 0x000000,\n                        discreteZoomEnv\n                    );\n\n                    if (outlineTechnique.secondaryCaps !== undefined) {\n                        outlineMaterial.caps = getPropertyValue(\n                            outlineTechnique.secondaryCaps,\n                            mapView.env\n                        );\n                    }\n                    const outlineObj = buildObject(\n                        technique,\n                        bufferGeometry,\n                        outlineMaterial,\n                        tile,\n                        elevationEnabled\n                    );\n\n                    outlineObj.renderOrder =\n                        (getPropertyValue(outlineTechnique.secondaryRenderOrder, mapView.env) ??\n                            0) - 0.0000001;\n\n                    this.addUserData(tile, srcGeometry, technique, outlineObj);\n\n                    const fadingParams = this.getFadingParams(discreteZoomEnv, technique);\n                    FadingFeature.addRenderHelper(\n                        outlineObj,\n                        viewRanges,\n                        fadingParams.fadeNear,\n                        fadingParams.fadeFar,\n                        false\n                    );\n\n                    const secondaryWidth = buildMetricValueEvaluator(\n                        outlineTechnique.secondaryWidth,\n                        outlineTechnique.metricUnit\n                    );\n                    registerTileObject(tile, outlineObj, techniqueKind, { technique });\n                    const mainMaterialAdapter = MapMaterialAdapter.get(material);\n\n                    const outlineMaterialAdapter = MapMaterialAdapter.create(outlineMaterial, {\n                        color: outlineTechnique.secondaryColor,\n                        opacity: outlineTechnique.opacity,\n                        caps: outlineTechnique.secondaryCaps,\n                        // Still handled above\n                        lineWidth: (frameMapView: MapAdapterUpdateEnv) => {\n                            if (!mainMaterialAdapter) {\n                                return;\n                            }\n                            mainMaterialAdapter.ensureUpdated(frameMapView);\n                            const mainLineWidth =\n                                mainMaterialAdapter.currentStyledProperties.lineWidth;\n\n                            const secondaryLineWidth = getPropertyValue(\n                                secondaryWidth,\n                                mapView.env\n                            );\n                            const opacity = outlineMaterialAdapter.currentStyledProperties\n                                .opacity as number | null;\n                            if (\n                                typeof mainLineWidth === \"number\" &&\n                                typeof secondaryLineWidth === \"number\"\n                            ) {\n                                if (\n                                    secondaryLineWidth <= mainLineWidth &&\n                                    (opacity === null || opacity === undefined || opacity === 1)\n                                ) {\n                                    // We could mark object as invisible somehow, not sure how\n                                    // objectAdapter.markInvisible();\n                                    return 0;\n                                } else {\n                                    return secondaryLineWidth;\n                                }\n                            } else {\n                                return 0;\n                            }\n                        }\n                    });\n                    objects.push(outlineObj);\n                }\n            }\n        }\n        if (extrudedMaterials.length > 0) {\n            mapView.animatedExtrusionHandler.add(tile, extrudedMaterials);\n        }\n    }\n\n    /**\n     * Prepare the {@link Tile}s pois. Uses the {@link PoiManager} in {@link MapView}.\n     */\n    preparePois(tile: Tile, decodedTile: DecodedTile) {\n        if (decodedTile.poiGeometries !== undefined) {\n            tile.mapView.poiManager.addPois(tile, decodedTile);\n        }\n    }\n\n    /**\n     * Gets the attachments of the given {@link @here/harp-datasource-protocol#DecodedTile}.\n     *\n     * @param decodedTile - The {@link @here/harp-datasource-protocol#DecodedTile}.\n     */\n    private *getAttachments(decodedTile: DecodedTile): Generator<AttachmentInfo> {\n        const cache = new AttachmentCache();\n\n        for (const geometry of decodedTile.geometries) {\n            // the main attachment\n\n            const mainAttachment: Attachment = {\n                index: geometry.index,\n                edgeIndex: geometry.edgeIndex,\n                uuid: geometry.uuid,\n                groups: geometry.groups\n            };\n\n            yield new AttachmentInfo(geometry, mainAttachment, cache);\n\n            if (geometry.attachments) {\n                // the additional attachments\n                for (const info of geometry.attachments) {\n                    yield new AttachmentInfo(geometry, info, cache);\n                }\n            }\n        }\n    }\n\n    private setupTerrainMaterial(\n        technique: TerrainTechnique,\n        material: THREE.Material,\n        terrainColor: number\n    ) {\n        if (!technique.map || !technique.displacementMap) {\n            // Render terrain using the given color.\n            const stdMaterial = material as MapMeshStandardMaterial;\n            stdMaterial.color.set(terrainColor);\n            // Remove displacement map, otherwise it would elevate terrain geometry and make it\n            // twice as high as it should be.\n            setDisplacementMapToMaterial(null, stdMaterial);\n            return;\n        }\n\n        // Render terrain using height-based colors.\n        (material as any).onBeforeCompile = (shader: THREE.Shader) => {\n            shader.fragmentShader = shader.fragmentShader.replace(\n                \"#include <map_pars_fragment>\",\n                `#include <map_pars_fragment>\n    uniform sampler2D displacementMap;\n    uniform float displacementScale;\n    uniform float displacementBias;`\n            );\n            shader.fragmentShader = shader.fragmentShader.replace(\n                \"#include <map_fragment>\",\n                `#ifdef USE_MAP\n    float minElevation = ${EarthConstants.MIN_ELEVATION.toFixed(1)};\n    float maxElevation = ${EarthConstants.MAX_ELEVATION.toFixed(1)};\n    float elevationRange = maxElevation - minElevation;\n\n    float disp = texture2D( displacementMap, vUv ).x * displacementScale + displacementBias;\n    vec4 texelColor = texture2D( map, vec2((disp - minElevation) / elevationRange, 0.0) );\n    texelColor = mapTexelToLinear( texelColor );\n    diffuseColor *= texelColor;\n#endif`\n            );\n            // We remove the displacement map from manipulating the vertices, it is\n            // however still required for the pixel shader, so it can't be directly\n            // removed.\n            shader.vertexShader = shader.vertexShader.replace(\n                \"#include <displacementmap_vertex>\",\n                \"\"\n            );\n        };\n        (material as MapMeshStandardMaterial).displacementMap!.needsUpdate = true;\n    }\n\n    private addUserData(\n        tile: Tile,\n        srcGeometry: Geometry,\n        technique: Technique,\n        object: THREE.Object3D\n    ) {\n        if (isTerrainTechnique(technique)) {\n            assert(\n                Object.keys(object.userData).length === 0,\n                \"Unexpected user data in terrain object\"\n            );\n\n            assert(\n                typeof srcGeometry.objInfos![0] === \"object\",\n                \"Wrong attribute map type for terrain geometry\"\n            );\n\n            const displacementMap = (srcGeometry.objInfos as DisplacementMap[])[0];\n            const tileDisplacementMap: TileDisplacementMap = {\n                tileKey: tile.tileKey,\n                texture: new THREE.DataTexture(\n                    displacementMap.buffer,\n                    displacementMap.xCountVertices,\n                    displacementMap.yCountVertices,\n                    THREE.LuminanceFormat,\n                    THREE.FloatType\n                ),\n                displacementMap,\n                geoBox: tile.geoBox\n            };\n            object.userData = tileDisplacementMap;\n        } else {\n            // Set the feature data for picking with `MapView.intersectMapObjects()` except for\n            // solid-line which uses tile-based picking.\n            const isOutline =\n                object.type === \"LineSegments\" &&\n                (isExtrudedPolygonTechnique(technique) || isFillTechnique(technique));\n            const featureData: TileFeatureData = {\n                geometryType: srcGeometry.type,\n                starts: isOutline ? srcGeometry.edgeFeatureStarts : srcGeometry.featureStarts,\n                objInfos: srcGeometry.objInfos\n            };\n            object.userData.feature = featureData;\n            object.userData.technique = technique;\n        }\n    }\n\n    /**\n     * Gets the fading parameters for several kinds of objects.\n     */\n    private getFadingParams(\n        env: Env,\n        technique: MakeTechniqueAttrs<BaseTechniqueParams>\n    ): FadingParameters {\n        const fadeNear =\n            technique.fadeNear !== undefined\n                ? getPropertyValue(technique.fadeNear, env)\n                : FadingFeature.DEFAULT_FADE_NEAR;\n        const fadeFar =\n            technique.fadeFar !== undefined\n                ? getPropertyValue(technique.fadeFar, env)\n                : FadingFeature.DEFAULT_FADE_FAR;\n        return {\n            fadeNear,\n            fadeFar\n        };\n    }\n\n    /**\n     * Gets the fading parameters for several kinds of objects.\n     */\n    private getPolygonFadingParams(\n        env: Env,\n        technique: FillTechnique | ExtrudedPolygonTechnique\n    ): PolygonFadingParameters {\n        let color: string | number | undefined;\n        let colorMix = EdgeMaterial.DEFAULT_COLOR_MIX;\n\n        if (technique.lineColor !== undefined) {\n            color = getPropertyValue(technique.lineColor, env);\n            if (isExtrudedPolygonTechnique(technique)) {\n                const extrudedPolygonTechnique = technique as ExtrudedPolygonTechnique;\n                colorMix =\n                    extrudedPolygonTechnique.lineColorMix !== undefined\n                        ? extrudedPolygonTechnique.lineColorMix\n                        : EdgeMaterial.DEFAULT_COLOR_MIX;\n            }\n        }\n\n        const fadeNear =\n            technique.fadeNear !== undefined\n                ? getPropertyValue(technique.fadeNear, env)\n                : FadingFeature.DEFAULT_FADE_NEAR;\n        const fadeFar =\n            technique.fadeFar !== undefined\n                ? getPropertyValue(technique.fadeFar, env)\n                : FadingFeature.DEFAULT_FADE_FAR;\n\n        const lineFadeNear =\n            technique.lineFadeNear !== undefined\n                ? getPropertyValue(technique.lineFadeNear, env)\n                : fadeNear;\n        const lineFadeFar =\n            technique.lineFadeFar !== undefined\n                ? getPropertyValue(technique.lineFadeFar, env)\n                : fadeFar;\n\n        if (color === undefined) {\n            color = EdgeMaterial.DEFAULT_COLOR;\n        }\n\n        return {\n            color,\n            colorMix,\n            fadeNear,\n            fadeFar,\n            lineFadeNear,\n            lineFadeFar\n        };\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    DecodedTile,\n    GeometryKind,\n    GeometryKindSet,\n    isExtrudedLineTechnique,\n    isExtrudedPolygonTechnique,\n    isFillTechnique,\n    isLineMarkerTechnique,\n    isLineTechnique,\n    isPoiTechnique,\n    isSegmentsTechnique,\n    isSolidLineTechnique,\n    isTextTechnique,\n    Technique\n} from \"@here/harp-datasource-protocol\";\nimport { PerformanceTimer, TaskQueue } from \"@here/harp-utils\";\n\nimport { TileTaskGroups } from \"../MapView\";\nimport { PerformanceStatistics } from \"../Statistics\";\nimport { Tile } from \"../Tile\";\nimport { TileGeometryCreator } from \"./TileGeometryCreator\";\n\nfunction addDiscardedTileToStats(tile: Tile) {\n    const stats = PerformanceStatistics.instance;\n    if (stats.enabled) {\n        const name = tile.dataSource.name;\n        const level = tile.tileKey.level;\n        const col = tile.tileKey.column;\n        const row = tile.tileKey.row;\n        const reason = tile.disposed ? `disposed` : `invisible`;\n\n        stats.currentFrame.addMessage(\n            `Decoded tile: ${name} # lvl=${level} col=${col} row=${row} DISCARDED - ${reason}`\n        );\n    }\n}\n\n/**\n * The state the {@link TileGeometryLoader}.\n */\nexport enum TileGeometryLoaderState {\n    Initialized = 0,\n    CreationQueued = 1,\n    CreatingGeometry = 2,\n    Finished = 3,\n    Canceled = 4,\n    Disposed = 5\n}\n\n/**\n * Loads the geometry for its {@link Tile}. Loads all geometry in a single step.\n * @internal\n */\nexport class TileGeometryLoader {\n    /**\n     * Make sure that all technique have their geometryKind set, either from the theme or their\n     * default value.\n     *\n     * Also gather set of the [[GeometryKind]]s found in the techniques and return it.\n     *\n     * @param {DecodedTile} decodedTile\n     * @returns {GeometryKindSet} The set of kinds used in the decodeTile.\n     */\n    static prepareAvailableGeometryKinds(decodedTile: DecodedTile): GeometryKindSet {\n        const foundSet: GeometryKindSet = new GeometryKindSet();\n\n        for (const technique of decodedTile.techniques) {\n            const geometryKind = TileGeometryLoader.compileGeometryKind(technique);\n\n            if (geometryKind instanceof Set) {\n                for (const kind of geometryKind) {\n                    foundSet.add(kind);\n                }\n            } else {\n                foundSet.add(geometryKind);\n            }\n        }\n        return foundSet;\n    }\n\n    /**\n     * Make sure that the technique has its geometryKind set, either from the theme or their default\n     * value.\n     *\n     * @param {Technique} technique\n     */\n    static compileGeometryKind(technique: Technique): GeometryKind | GeometryKindSet {\n        let geometryKind = technique.kind;\n\n        // Set default kind based on technique.\n        if (geometryKind === undefined) {\n            if (isFillTechnique(technique)) {\n                geometryKind = GeometryKind.Area;\n            } else if (\n                isLineTechnique(technique) ||\n                isSolidLineTechnique(technique) ||\n                isSegmentsTechnique(technique) ||\n                isExtrudedLineTechnique(technique)\n            ) {\n                geometryKind = GeometryKind.Line;\n            } else if (isExtrudedPolygonTechnique(technique)) {\n                geometryKind = GeometryKind.Building;\n            } else if (\n                isPoiTechnique(technique) ||\n                isLineMarkerTechnique(technique) ||\n                isTextTechnique(technique)\n            ) {\n                geometryKind = GeometryKind.Label;\n            } else {\n                geometryKind = GeometryKind.All;\n            }\n\n            technique.kind = geometryKind;\n        } else if (Array.isArray(geometryKind)) {\n            geometryKind = technique.kind = new GeometryKindSet(geometryKind);\n        }\n\n        return geometryKind;\n    }\n\n    private m_decodedTile?: DecodedTile;\n    private m_availableGeometryKinds: GeometryKindSet | undefined;\n    private m_enabledKinds: GeometryKindSet | undefined;\n    private m_disabledKinds: GeometryKindSet | undefined;\n    private m_priority: number = 0;\n    private m_state: TileGeometryLoaderState = TileGeometryLoaderState.Initialized;\n    private m_finishedPromise: Promise<void>;\n    private m_resolveFinishedPromise?: () => void;\n    private m_rejectFinishedPromise?: () => void;\n\n    constructor(private readonly m_tile: Tile, private readonly m_taskQueue: TaskQueue) {\n        this.m_finishedPromise = new Promise((resolve, reject) => {\n            this.m_resolveFinishedPromise = resolve;\n            this.m_rejectFinishedPromise = reject;\n        });\n    }\n\n    set priority(value: number) {\n        this.m_priority = value;\n    }\n\n    //This is not a getter as it need to be bound to this for the taskqueue\n    getPriority(): number {\n        return this.m_priority;\n    }\n\n    /**\n     * The {@link Tile} this `TileGeometryLoader` is managing.\n     */\n    get tile(): Tile {\n        return this.m_tile;\n    }\n\n    /**\n     * `True` if a decoded Tile is set\n     */\n    get hasDecodedTile(): boolean {\n        return this.m_decodedTile !== undefined;\n    }\n\n    /**\n     * `True` if all geometry of the `Tile` has been loaded and the loading process is finished.\n     */\n    get isFinished(): boolean {\n        return this.m_state === TileGeometryLoaderState.Finished;\n    }\n\n    /**\n     * `True` if loader is finished, canceled or disposed.\n     */\n    get isSettled(): boolean {\n        return this.isFinished || this.isCanceled || this.isDisposed;\n    }\n\n    /**\n     * Returns a promise resolved when this `TileGeometryLoader` is in\n     * `TileGeometryLoaderState.Finished` state, or rejected when it's in\n     * `TileGeometryLoaderState.Cancelled` or `TileGeometryLoaderState.Disposed` states.\n     */\n    waitFinished(): Promise<void> {\n        return this.m_finishedPromise;\n    }\n\n    /**\n     * Set the {@link @here/harp-datasource-protocol#DecodedTile} of the tile.\n     *\n     * @remarks\n     * Is called after the decoded tile has been loaded, and\n     * prepares its content for later processing in the 'updateXXX' methods.\n     *\n     * @param {DecodedTile} decodedTile The decoded tile with the flat geometry data belonging to\n     *      this tile.\n     * @returns {DecodedTile} The processed decoded tile.\n     */\n    setDecodedTile(decodedTile: DecodedTile): DecodedTile {\n        this.m_decodedTile = decodedTile;\n\n        if (this.hasDecodedTile) {\n            this.m_availableGeometryKinds = TileGeometryLoader.prepareAvailableGeometryKinds(\n                this.m_decodedTile\n            );\n        }\n        return this.m_decodedTile;\n    }\n\n    /**\n     * The kinds of geometry stored in this {@link Tile}.\n     */\n    get availableGeometryKinds(): GeometryKindSet | undefined {\n        return this.m_availableGeometryKinds;\n    }\n\n    /**\n     * Start with or continue with loading geometry. Called repeatedly until `isFinished` is `true`.\n     */\n    update(enabledKinds?: GeometryKindSet, disabledKinds?: GeometryKindSet): void {\n        const tile = this.tile;\n\n        // Geometry kinds have changed but some is already created, so reset\n        if (this.tile.hasGeometry && !this.compareGeometryKinds(enabledKinds, disabledKinds)) {\n            this.reset();\n        }\n\n        // First time this tile is handled, or reset has been requested.\n        if (\n            (this.m_state === TileGeometryLoaderState.Initialized ||\n                this.m_state === TileGeometryLoaderState.Canceled) &&\n            tile.decodedTile !== undefined\n        ) {\n            if (this.m_state === TileGeometryLoaderState.Initialized) {\n                TileGeometryCreator.instance.processTechniques(tile, enabledKinds, disabledKinds);\n                this.setGeometryKinds(enabledKinds, disabledKinds);\n                this.setDecodedTile(tile.decodedTile);\n            }\n            this.queueGeometryCreation(enabledKinds, disabledKinds);\n        }\n    }\n\n    /**\n     * Cancel geometry loading.\n     */\n    cancel() {\n        addDiscardedTileToStats(this.tile);\n        this.m_state = TileGeometryLoaderState.Canceled;\n        this.m_rejectFinishedPromise?.();\n    }\n\n    /**\n     * Dispose of any resources.\n     */\n    dispose(): void {\n        addDiscardedTileToStats(this.tile);\n        this.clear();\n        this.m_state = TileGeometryLoaderState.Disposed;\n        this.m_rejectFinishedPromise?.();\n    }\n\n    /**\n     * Reset the loader to its initial state and cancels any asynchronous work.\n     * @remarks\n     * This method prepares the loader to reload new geometry. Since the loader does not transition\n     * to a final state, the promise returned by {@link TileGeometryLoader.waitFinished} is not\n     * settled.\n     */\n    reset(): void {\n        this.clear();\n\n        if (this.isSettled) {\n            this.m_finishedPromise = new Promise((resolve, reject) => {\n                this.m_resolveFinishedPromise = resolve;\n                this.m_rejectFinishedPromise = reject;\n            });\n        }\n        this.m_state = TileGeometryLoaderState.Initialized;\n    }\n\n    /**\n     * Finish geometry loading.\n     */\n    finish() {\n        this.m_decodedTile = undefined;\n        this.m_state = TileGeometryLoaderState.Finished;\n        this.m_resolveFinishedPromise?.();\n    }\n\n    private clear() {\n        this.m_availableGeometryKinds?.clear();\n        this.m_enabledKinds?.clear();\n        this.m_disabledKinds?.clear();\n        this.m_decodedTile = undefined;\n    }\n\n    private queueGeometryCreation(\n        enabledKinds: GeometryKindSet | undefined,\n        disabledKinds: GeometryKindSet | undefined\n    ) {\n        if (this.m_state === TileGeometryLoaderState.CreationQueued) {\n            return;\n        }\n\n        this.m_taskQueue.add({\n            execute: this.createGeometry.bind(this, enabledKinds, disabledKinds),\n            group: TileTaskGroups.CREATE,\n            getPriority: this.getPriority.bind(this),\n            isExpired: () => {\n                return this.m_state !== TileGeometryLoaderState.CreationQueued;\n            },\n            estimatedProcessTime: () => {\n                //TODO: this seems to be close in many cases, but take some measures to confirm\n                return (this.tile.decodedTile?.decodeTime ?? 30) / 6;\n            }\n        });\n\n        this.m_state = TileGeometryLoaderState.CreationQueued;\n    }\n\n    private async createGeometry(\n        enabledKinds: GeometryKindSet | undefined,\n        disabledKinds: GeometryKindSet | undefined\n    ): Promise<void> {\n        if (this.m_state === TileGeometryLoaderState.CreatingGeometry) {\n            return;\n        }\n        this.m_state = TileGeometryLoaderState.CreatingGeometry;\n\n        const tile = this.tile;\n        const decodedTile = this.m_decodedTile;\n        // Just a sanity check that satisfies compiler check below.\n        if (decodedTile === undefined) {\n            this.finish();\n            return;\n        }\n\n        const stats = PerformanceStatistics.instance;\n        let now = 0;\n        if (stats.enabled) {\n            now = PerformanceTimer.now();\n        }\n\n        const geometryCreator = TileGeometryCreator.instance;\n\n        tile.clear();\n        // Set up techniques which should be processed.\n        geometryCreator.initDecodedTile(decodedTile, enabledKinds, disabledKinds);\n        await geometryCreator.createAllGeometries(tile, decodedTile);\n        if (stats.enabled) {\n            this.addStats(stats, now);\n        }\n        this.finish();\n        tile.dataSource.requestUpdate();\n    }\n\n    private addStats(stats: PerformanceStatistics, now: number) {\n        const tile = this.tile;\n        const decodedTile = this.m_decodedTile;\n        if (decodedTile === undefined) {\n            return;\n        }\n\n        const geometryCreationTime = PerformanceTimer.now() - now;\n        const currentFrame = stats.currentFrame;\n\n        // Account for the geometry creation in the current frame.\n        currentFrame.addValue(\"render.fullFrameTime\", geometryCreationTime);\n        currentFrame.addValue(\"render.geometryCreationTime\", geometryCreationTime);\n\n        currentFrame.addValue(\"geometry.geometryCreationTime\", geometryCreationTime);\n        currentFrame.addValue(\"geometryCount.numGeometries\", decodedTile.geometries.length);\n        currentFrame.addValue(\"geometryCount.numTechniques\", decodedTile.techniques.length);\n        currentFrame.addValue(\n            \"geometryCount.numPoiGeometries\",\n            decodedTile.poiGeometries !== undefined ? decodedTile.poiGeometries.length : 0\n        );\n        currentFrame.addValue(\n            \"geometryCount.numTextGeometries\",\n            decodedTile.textGeometries !== undefined ? decodedTile.textGeometries.length : 0\n        );\n        currentFrame.addValue(\n            \"geometryCount.numTextPathGeometries\",\n            decodedTile.textPathGeometries !== undefined ? decodedTile.textPathGeometries.length : 0\n        );\n        currentFrame.addValue(\n            \"geometryCount.numPathGeometries\",\n            decodedTile.pathGeometries !== undefined ? decodedTile.pathGeometries.length : 0\n        );\n        currentFrame.addMessage(\n            // tslint:disable-next-line: max-line-length\n            `Decoded tile: ${tile.dataSource.name} # lvl=${tile.tileKey.level} col=${tile.tileKey.column} row=${tile.tileKey.row}`\n        );\n    }\n\n    /**\n     * Stores geometry kinds used to load decoded tile geometry.\n     *\n     * This values are stored to detect geometry kind changes during loading.\n     *\n     * @param enabledKinds - Set of geometry kinds to be displayed or undefined.\n     * @param disabledKinds - Set of geometry kinds that won't be rendered.\n     */\n    private setGeometryKinds(\n        enabledKinds: GeometryKindSet | undefined,\n        disabledKinds: GeometryKindSet | undefined\n    ): void {\n        if (enabledKinds !== undefined) {\n            this.m_enabledKinds = Object.assign(\n                this.m_enabledKinds ?? new GeometryKindSet(),\n                enabledKinds\n            );\n        }\n        if (disabledKinds !== undefined) {\n            this.m_disabledKinds = Object.assign(\n                this.m_disabledKinds ?? new GeometryKindSet(),\n                disabledKinds\n            );\n        }\n    }\n\n    /**\n     * Compare enabled and disabled geometry kinds with currently set.\n     *\n     * Method compares input sets with recently used geometry kinds in performance wise\n     * manner, taking special care of undefined and zero size sets.\n     *\n     * @param enabledKinds - Set of geometry kinds to be displayed or undefined.\n     * @param disabledKinds - Set of geometry kinds that won't be rendered.\n     * @return `true` only if sets are logically equal, meaning that undefined and empty sets\n     * may result in same geometry (techniques kind) beeing rendered.\n     */\n    private compareGeometryKinds(\n        enabledKinds: GeometryKindSet | undefined,\n        disabledKinds: GeometryKindSet | undefined\n    ): boolean {\n        const enabledSame = this.m_enabledKinds === enabledKinds;\n        const disabledSame = this.m_disabledKinds === disabledKinds;\n        // Same references, no need to compare.\n        if (enabledSame && disabledSame) {\n            return true;\n        }\n        const enabledEmpty =\n            (this.m_enabledKinds === undefined || this.m_enabledKinds.size === 0) &&\n            (enabledKinds === undefined || enabledKinds.size === 0);\n        const disabledEmpty =\n            (this.m_disabledKinds === undefined || this.m_disabledKinds.size === 0) &&\n            (disabledKinds === undefined || disabledKinds.size === 0);\n\n        // We deal only with empty, the same or undefined sets - fast return, no need to compare.\n        if (\n            (enabledEmpty && disabledEmpty) ||\n            (enabledSame && disabledEmpty) ||\n            (disabledSame && enabledEmpty)\n        ) {\n            return true;\n        }\n        // It is enough that one the the sets are different, try to spot difference otherwise\n        // return true. Compare only non-empty sets.\n        if (!enabledEmpty) {\n            // If one set undefined then other must be non-empty, for sure different.\n            if (enabledKinds === undefined || this.m_enabledKinds === undefined) {\n                return false;\n            }\n            // Both defined and non-empty, compare the sets.\n            else if (!enabledKinds.has(this.m_enabledKinds)) {\n                return false;\n            }\n        }\n        if (!disabledEmpty) {\n            // One set defined and non-empty other undefined, for sure different.\n            if (disabledKinds === undefined || this.m_disabledKinds === undefined) {\n                return false;\n            }\n            // Both defined and non-empty, compare the sets.\n            else if (!disabledKinds.has(this.m_disabledKinds)) {\n                return false;\n            }\n        }\n        // No difference found.\n        return true;\n    }\n\n    /**\n     * `True` if TileGeometryLoader was canceled\n     */\n    private get isCanceled(): boolean {\n        return this.m_state === TileGeometryLoaderState.Canceled;\n    }\n\n    /**\n     * `True` if TileGeometryLoader was disposed\n     */\n    private get isDisposed(): boolean {\n        return this.m_state === TileGeometryLoaderState.Disposed;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeometryKind, GeometryKindSet } from \"@here/harp-datasource-protocol\";\n\nimport { MapObjectAdapter } from \"../MapObjectAdapter\";\nimport { MapView } from \"../MapView\";\nimport { Tile } from \"../Tile\";\n\ntype TileUpdateCallback = (tile: Tile) => void;\n\n/**\n * Manages the content (the geometries) of a tile.\n * @internal\n */\nexport class TileGeometryManager {\n    /**\n     * The set of geometry kinds that is enabled. Their geometry will be created after decoding.\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    get enabledGeometryKinds(): GeometryKindSet {\n        return this.enabledKinds;\n    }\n\n    /**\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    set enabledGeometryKinds(kinds: GeometryKindSet) {\n        this.enabledKinds = kinds;\n    }\n\n    /**\n     * The set of geometry kinds that is disabled. Their geometry will not be created after\n     * decoding.\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    get disabledGeometryKinds(): GeometryKindSet {\n        return this.disabledKinds;\n    }\n\n    /**\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    set disabledGeometryKinds(kinds: GeometryKindSet) {\n        this.disabledKinds = kinds;\n    }\n\n    /**\n     * The set of geometry kinds that is hidden. Their geometry may be created, but it is hidden\n     * until the method `hideKind` with an argument of `addOrRemoveToHiddenSet:false` is called.\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    get hiddenGeometryKinds(): GeometryKindSet {\n        return this.hiddenKinds;\n    }\n\n    /**\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    set hiddenGeometryKinds(kinds: GeometryKindSet) {\n        this.hiddenKinds = kinds;\n        this.incrementVisibilityCounter();\n    }\n\n    /**\n     * If set to `true`, the filters of enabled/disabledGeometryKinds are applied, otherwise they\n     * are ignored.\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    enableFilterByKind: boolean = true;\n\n    protected get visibilityCounter(): number {\n        return this.m_visibilityCounter;\n    }\n\n    protected enabledKinds: GeometryKindSet = new GeometryKindSet();\n    protected disabledKinds: GeometryKindSet = new GeometryKindSet();\n    protected hiddenKinds: GeometryKindSet = new GeometryKindSet();\n\n    protected m_tileUpdateCallback: TileUpdateCallback | undefined;\n\n    /**\n     * Optimization for evaluation in `update()` method. Only if a kind is hidden/unhidden, the\n     * visibility of the kinds is applied to their geometries.\n     */\n    private m_visibilityCounter: number = 1;\n\n    /**\n     * Creates an instance of `TileGeometryManager` with a reference to the {@link MapView}.\n     */\n    constructor(protected mapView: MapView) {}\n\n    /**\n     * Process the {@link Tile}s for rendering. May alter the content of the tile per frame.\n     */\n    updateTiles(tiles: Tile[]): void {\n        let prio = 0;\n        for (const tile of tiles) {\n            //this assumes the tiles are ordered by priority, this is currently done in\n            // the visible tile set with 0 as the highest priority\n            const tilePriority = prio++;\n            const updateDone = tile.updateGeometry(\n                tilePriority,\n                this.enableFilterByKind ? this.enabledGeometryKinds : undefined,\n                this.enableFilterByKind ? this.disabledGeometryKinds : undefined\n            );\n            if (updateDone && this.m_tileUpdateCallback) {\n                this.m_tileUpdateCallback(tile);\n            }\n        }\n\n        // If the visibility status of the kinds changed since the last update, the new visibility\n        // status is applied (again).\n        if (this.updateTileObjectVisibility(tiles)) {\n            this.mapView.update();\n        }\n    }\n\n    /**\n     * Clear the enabled, disabled and hidden sets.\n     */\n    clear(): void {\n        this.enabledKinds.clear();\n        this.disabledKinds.clear();\n        this.hiddenKinds.clear();\n    }\n\n    /**\n     * Enable a [[GeometryKind]] by adding it to the enabled set, or remove it from that set.\n     *\n     * @param {(GeometryKind | GeometryKind[] | GeometryKindSet)} kind The kind to add or remove\n     *      from the enabled set.\n     * @param {boolean} addOrRemoveToEnabledSet Pass in `true` to add the kind to the set, pass in\n     *      `false` to remove from that set.\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    enableKind(\n        kind: GeometryKind | GeometryKind[] | GeometryKindSet,\n        addOrRemoveToEnabledSet: boolean = true\n    ): void {\n        this.enableDisableKinds(this.enabledKinds, kind, addOrRemoveToEnabledSet);\n    }\n\n    /**\n     * Disable a [[GeometryKind]] by adding it to the disabled set, or remove it from that set.\n     *\n     * @param {(GeometryKind | GeometryKind[] | GeometryKindSet)} kind The kind to add or remove\n     *      from the disabled set.\n     * @param {boolean} addOrRemoveToHiddenSet Pass in `true` to add the kind to the set, pass in\n     *      `false` to remove from that set.\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    disableKind(\n        kind: GeometryKind | GeometryKind[] | GeometryKindSet,\n        addOrRemoveToDisabledSet: boolean = true\n    ): void {\n        this.enableDisableKinds(this.disabledKinds, kind, addOrRemoveToDisabledSet);\n    }\n\n    /**\n     * Hide a [[GeometryKind]] by adding it to the hidden set, or remove it from that set.\n     *\n     * @param {(GeometryKind | GeometryKind[] | GeometryKindSet)} kind The kind to add or remove\n     *      from the hidden set.\n     * @param {boolean} addOrRemoveToHiddenSet Pass in `true` to hide the kind(s), `false` to show\n     *      it again.\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    hideKind(\n        kind: GeometryKind | GeometryKind[] | GeometryKindSet,\n        addOrRemoveToHiddenSet: boolean = true\n    ): void {\n        let visibilityHasChanged = false;\n\n        if (Array.isArray(kind) || kind instanceof Set) {\n            for (const oneKind of kind) {\n                const visibilityChange = this.addRemove(\n                    this.hiddenKinds,\n                    oneKind,\n                    addOrRemoveToHiddenSet\n                );\n                visibilityHasChanged = visibilityHasChanged || visibilityChange;\n            }\n        } else {\n            visibilityHasChanged = this.addRemove(this.hiddenKinds, kind, addOrRemoveToHiddenSet);\n        }\n\n        // Will be evaluated in the next update()\n        if (visibilityHasChanged) {\n            this.incrementVisibilityCounter();\n        }\n    }\n\n    /**\n     * Return all [[GeometryKind]]s that are contained in the tiles.\n     *\n     * @param {IterableIterator<Tile>} tiles The\n     * @returns {GeometryKindSet}\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    getAvailableKinds(tiles: IterableIterator<Tile>): GeometryKindSet {\n        const visibleKinds: GeometryKindSet = new GeometryKindSet();\n        for (const tile of tiles) {\n            const tileKinds = tile.loadedGeometryKinds;\n            if (tileKinds !== undefined) {\n                for (const kind of tileKinds) {\n                    visibleKinds.add(kind);\n                }\n            }\n        }\n        return visibleKinds;\n    }\n\n    /**\n     * Apply the visibility status taken from the `hiddenKinds` to all geometries in the specified\n     * tiles.\n     *\n     * @param {Tile[]} tiles List of [[Tiles]] to process the visibility status of.\n     */\n    updateTileObjectVisibility(tiles: Tile[]): boolean {\n        let needUpdate = false;\n\n        for (const tile of tiles) {\n            if (tile.objects.length === 0 || tile.visibilityCounter === this.visibilityCounter) {\n                continue;\n            }\n            tile.visibilityCounter = this.visibilityCounter;\n\n            for (const object of tile.objects) {\n                const objectAdapter = MapObjectAdapter.get(object);\n                const geometryKind = objectAdapter?.kind;\n                if (geometryKind !== undefined) {\n                    const nowVisible = !geometryKind.some(kind => this.hiddenKinds.has(kind));\n                    needUpdate = needUpdate || object.visible !== nowVisible;\n                    object.visible = nowVisible;\n                }\n            }\n        }\n        return needUpdate;\n    }\n\n    /**\n     * Sets a callback that will be called for every updated tile on [[updateTiles]].\n     *\n     * @param {TileUpdateCallback} callback The callback that will be called after a tile has been\n     * updated, passing the updated tile as argument. If `undefined`, a previously set callback will\n     * be cleared.\n     */\n    setTileUpdateCallback(callback?: TileUpdateCallback): void {\n        this.m_tileUpdateCallback = callback;\n    }\n\n    protected incrementVisibilityCounter(): number {\n        return ++this.m_visibilityCounter;\n    }\n\n    /**\n     * Add or remove a kind|array of kinds|set of kinds from the specified kind set.\n     *\n     * @hidden\n     * @param {GeometryKindSet} set\n     * @param {(GeometryKind | GeometryKind[] | GeometryKindSet)} kind\n     * @param {boolean} addToSet\n     */\n    private enableDisableKinds(\n        set: GeometryKindSet,\n        kind: GeometryKind | GeometryKind[] | GeometryKindSet,\n        addToSet: boolean\n    ): void {\n        if (Array.isArray(kind)) {\n            for (const oneKind of kind as GeometryKind[]) {\n                this.addRemove(set, oneKind, addToSet);\n            }\n        } else if (kind instanceof Set) {\n            const kindSet = kind as GeometryKindSet;\n            for (const oneKind of kindSet) {\n                this.addRemove(set, oneKind, addToSet);\n            }\n        } else if (kind !== undefined) {\n            this.addRemove(set, kind, addToSet);\n        }\n    }\n\n    /**\n     * Add or remove a single kind from the specified kind set.\n     *\n     * @hidden\n     * @param {GeometryKindSet} set\n     * @param {(GeometryKind | GeometryKind[] | GeometryKindSet)} kind\n     * @param {boolean} addToSet\n     */\n    private addRemove(kindsSet: GeometryKindSet, kind: GeometryKind, addToSet: boolean): boolean {\n        if (addToSet) {\n            if (!kindsSet.has(kind)) {\n                kindsSet.add(kind);\n                return true;\n            }\n        } else {\n            if (kindsSet.has(kind)) {\n                kindsSet.delete(kind);\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","/*\n * Copyright (C) 2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"@here/harp-geoutils\";\nimport { assert } from \"@here/harp-utils\";\n\n// Offsets for the fields stored in cache for each vertex.\nenum Field {\n    VertexId = 0,\n    OlderIdx, // Index in cache of the immediately older vertex.\n    NewerIdx, // Index in cache of the immediately newer vertex.\n    X,\n    Y,\n    Z,\n    Count\n}\n\nconst Invalid: number = -1;\n\n/**\n * Compact vertex LRU Cache for on the fly temporary mesh transformations.\n * @internal\n */\nexport class VertexCache {\n    private m_cache: number[] = []; // Stores all fields for every cached vertex (see Field).\n    private m_vertexCount: number = 0;\n    private m_oldestIdx: number = 0;\n    private m_newestIdx: number = 0;\n\n    /**\n     * Creates a new cache with the specified maximum size.\n     * @param maxVertexCount - The maximum number of vertices the cache will store.\n     */\n    constructor(readonly maxVertexCount: number) {\n        this.m_cache.length = this.maxVertexCount * Field.Count;\n        this.clear();\n    }\n\n    /**\n     * Clears the vertex cache.\n     */\n    clear() {\n        this.m_cache.fill(Invalid);\n        this.m_vertexCount = 0;\n    }\n\n    /**\n     * Gets a vertex from cache.\n     * @param vertexId - The id of the vertex to get.\n     * @param vertex - The vertex coordinates will be set here if found.\n     * @returns whether the vertex was found on cache.\n     */\n    get(vertexId: number, vertex: Vector3Like): boolean {\n        const vertexIdx = this.find(vertexId);\n        if (vertexIdx === undefined) {\n            return false;\n        }\n        this.promoteEntry(vertexIdx);\n        this.getVertex(vertexIdx, vertex);\n        return true;\n    }\n\n    /**\n     * Sets a vertex in cache. It's assumed there's no vertex with the same id already in cache.\n     * @param vertexId - The vertex id.\n     * @param vertex - The vertex coordinates.\n     */\n    set(vertexId: number, vertex: Vector3Like) {\n        let vertexIdx = Invalid;\n        if (this.m_vertexCount < this.maxVertexCount) {\n            vertexIdx = this.m_vertexCount * Field.Count;\n            this.m_vertexCount++;\n        } else {\n            vertexIdx = this.m_oldestIdx;\n        }\n        if (this.m_vertexCount === 1) {\n            this.m_oldestIdx = this.m_newestIdx = vertexIdx;\n        } else {\n            this.promoteEntry(vertexIdx);\n        }\n        this.setVertex(vertexIdx, vertexId, vertex);\n    }\n\n    private find(vertexId: number): number | undefined {\n        const size = this.m_cache.length;\n        for (let i = 0; i < size; i += Field.Count) {\n            if (this.m_cache[i] === vertexId) {\n                return i;\n            }\n        }\n        return undefined;\n    }\n\n    private promoteEntry(vertexIdx: number): void {\n        if (vertexIdx === this.m_newestIdx) {\n            return;\n        } // already newest, nothing to do\n        // re-link newer and older items\n        const newerIdx = this.getNewerIdx(vertexIdx);\n        const olderIdx = this.getOlderIdx(vertexIdx);\n        if (newerIdx !== Invalid) {\n            assert(this.getOlderIdx(newerIdx) === vertexIdx);\n            this.setOlderIdx(newerIdx, olderIdx);\n        }\n        if (olderIdx !== Invalid) {\n            assert(this.getNewerIdx(olderIdx) === vertexIdx);\n            this.setNewerIdx(olderIdx, newerIdx);\n        }\n        if (vertexIdx === this.m_oldestIdx) {\n            this.m_oldestIdx = newerIdx;\n        }\n        // re-link ourselves\n        this.setNewerIdx(vertexIdx, Invalid);\n        this.setOlderIdx(vertexIdx, this.m_newestIdx);\n        // finally, set ourselves as the newest entry\n        assert(this.m_newestIdx !== Invalid);\n        assert(this.getNewerIdx(this.m_newestIdx) === Invalid);\n        this.setNewerIdx(this.m_newestIdx, vertexIdx);\n        this.m_newestIdx = vertexIdx;\n    }\n\n    private getOlderIdx(vertexIdx: number): number {\n        return this.m_cache[vertexIdx + Field.OlderIdx];\n    }\n\n    private setOlderIdx(vertexIdx: number, olderIdx: number): void {\n        this.m_cache[vertexIdx + Field.OlderIdx] = olderIdx;\n    }\n\n    private getNewerIdx(vertexIdx: number): number {\n        return this.m_cache[vertexIdx + Field.NewerIdx];\n    }\n\n    private setNewerIdx(vertexIdx: number, newerIdx: number): void {\n        this.m_cache[vertexIdx + Field.NewerIdx] = newerIdx;\n    }\n\n    private getVertex(vertexIdx: number, vertex: Vector3Like): void {\n        vertex.x = this.m_cache[vertexIdx + Field.X];\n        vertex.y = this.m_cache[vertexIdx + Field.Y];\n        vertex.z = this.m_cache[vertexIdx + Field.Z];\n    }\n\n    private setVertex(vertexIdx: number, vertexId: number, vertex: Vector3Like): void {\n        this.m_cache[vertexIdx] = vertexId;\n        this.m_cache[vertexIdx + Field.X] = vertex.x;\n        this.m_cache[vertexIdx + Field.Y] = vertex.y;\n        this.m_cache[vertexIdx + Field.Z] = vertex.z;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeometryKind } from \"@here/harp-datasource-protocol\";\nimport { Projection } from \"@here/harp-geoutils\";\nimport { setDisplacementMapToMaterial } from \"@here/harp-materials\";\nimport { assert } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { TileDisplacementMap } from \"../DisplacementMap\";\nimport { ElevationProvider } from \"../ElevationProvider\";\nimport { TextElement } from \"../text/TextElement\";\nimport { Tile, TileObject } from \"../Tile\";\n\n/**\n * Overlays the specified object's geometry on the elevation represented by the given displacement\n * map .\n *\n * @param object - The object to be overlaid.\n * @param displacementMap - Texture representing the elevation data used to overlay the object.\n */\nfunction overlayObject(object: TileObject, displacementMap: THREE.DataTexture): void {\n    if (!(\"material\" in object)) {\n        return;\n    }\n    const setDisplacementMap = setDisplacementMapToMaterial.bind(null, displacementMap);\n    const material = (object as any).material as THREE.Mesh[\"material\"];\n\n    if (Array.isArray(material)) {\n        material.forEach(setDisplacementMap);\n    } else if (material) {\n        setDisplacementMap(material);\n    }\n}\n\n/**\n * Overlays the specified coordinates on top of elevation data if available.\n *\n * @param worldCoords - World coordinates to overlay.\n * @param elevationProvider - Used to sample elevation data.\n * @param displacementMap - Elevation data to be sampled.\n * @param projection - Projection from geo to world space.\n * @returns `true` if the position was successfully overlaid, `false` otherwise (e.g. elevation\n * data not available).\n */\nfunction overlayPosition(\n    worldCoords: THREE.Vector3,\n    elevationProvider: ElevationProvider,\n    displacementMap: TileDisplacementMap,\n    projection: Projection\n): boolean {\n    // TODO: Move calculation of text element geoCoordinates to decoder.\n    const geoCoords = projection.unprojectPoint(worldCoords);\n\n    if (displacementMap.geoBox.contains(geoCoords)) {\n        geoCoords.altitude = elevationProvider.sampleHeight(geoCoords, displacementMap);\n    } else {\n        geoCoords.altitude = elevationProvider.getHeight(geoCoords, displacementMap.tileKey.level);\n        if (geoCoords.altitude === undefined) {\n            return false;\n        }\n    }\n    projection.projectPoint(geoCoords, worldCoords);\n    return true;\n}\n\n/**\n * Overlays the specified coordinates on top of elevation data if available.\n *\n * @param path - World coordinates to overlay.\n * @param elevationProvider - Used to sample elevation data.\n * @param displacementMap - Elevation data to be sampled.\n * @param projection - Projection from geo to world space.\n * @returns `true` if the position was successfully overlaid, `false` otherwise (e.g. elevation\n * data not available).\n */\nfunction overlayPath(\n    path: THREE.Vector3[],\n    elevationProvider: ElevationProvider,\n    displacementMap: TileDisplacementMap,\n    projection: Projection\n): boolean {\n    for (const position of path) {\n        if (!overlayPosition(position, elevationProvider, displacementMap, projection)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Overlays a text element on top of elevation data if available.\n *\n * @param textElement - The text element whose geometry will be overlaid.\n * @param elevationProvider -  Used to sample elevation data.\n * @param displacementMap - Elevation data to be sampled.\n * @param projection - Projection from geo to world space.\n */\nexport function overlayTextElement(\n    textElement: TextElement,\n    elevationProvider: ElevationProvider,\n    displacementMap: TileDisplacementMap,\n    projection: Projection\n) {\n    assert(!textElement.elevated);\n    if (!displacementMap) {\n        return;\n    }\n\n    textElement.elevated = textElement.path\n        ? overlayPath(textElement.path, elevationProvider, displacementMap, projection)\n        : overlayPosition(textElement.position, elevationProvider, displacementMap, projection);\n}\n\n/**\n * Overlays the geometry in the given tile on top of elevation data if available. The tile's\n * elevation may be updated with a more precise range.\n *\n * @param tile - The tile whose geometry will be overlaid.\n */\nexport function overlayOnElevation(tile: Tile): void {\n    const elevationProvider = tile.mapView.elevationProvider;\n\n    if (elevationProvider === undefined || tile.objects.length === 0) {\n        return;\n    }\n    const firstObject = tile.objects[0];\n    if (\n        !firstObject.userData ||\n        !firstObject.userData.kind ||\n        !firstObject.userData.kind.find((kind: GeometryKind) => {\n            return kind !== GeometryKind.All && kind !== GeometryKind.Terrain;\n        })\n    ) {\n        return;\n    }\n\n    const displacementMap = elevationProvider.getDisplacementMap(tile.tileKey);\n    if (displacementMap === undefined) {\n        return;\n    }\n\n    // TODO: HARP-8808 Apply displacement maps once per material.\n    for (const object of tile.objects) {\n        overlayObject(object, displacementMap.texture);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LoggerManager } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { MipMapGenerator } from \"./MipMapGenerator\";\n\n/** Any type supported by WebGLRenderingContext.texImage2D() for texture creation */\nexport type TexturizableImage =\n    | HTMLImageElement\n    | HTMLCanvasElement\n    | HTMLVideoElement\n    | ImageData\n    | ImageBitmap;\n\nconst logger = LoggerManager.instance.create(\"loadImage\");\nconst mipMapGenerator = new MipMapGenerator();\n\n/**\n * `ImageItem` is used to identify an image in the {@link ImageCache}.\n */\nexport class ImageItem {\n    /** Mip maps for image data */\n    mipMaps?: ImageData[];\n    /** Turns to `true` if the loading has been cancelled. */\n    cancelled?: boolean;\n    /** `loadingPromise` is only used during loading/generating the image. */\n    private loadingPromise?: Promise<ImageItem | undefined>;\n\n    /**\n     * Create the `ImageItem`.\n     *\n     * @param url - URL of the image, or unique identifier.\n     * @param image - Optional image if already loaded.\n     */\n    constructor(readonly url: string, public image?: TexturizableImage) {}\n\n    get loaded(): boolean {\n        return this.image !== undefined && this.mipMaps !== undefined;\n    }\n\n    get loading(): boolean {\n        return this.loadingPromise !== undefined;\n    }\n\n    /**\n     * Load an {@link ImageItem}.\n     *\n     * @remarks\n     * If the loading process is already running, it returns the current promise.\n     *\n     * @param imageItem - `ImageItem` containing the URL to load image from.\n     * @returns An {@link ImageItem} if the image has already been loaded, a promise otherwise.\n     */\n    loadImage(): Promise<ImageItem | undefined> {\n        if (this.loaded) {\n            return Promise.resolve(this);\n        }\n\n        if (this.loading) {\n            return this.loadingPromise!;\n        }\n\n        this.loadingPromise = new Promise((resolve, reject) => {\n            if (this.image) {\n                const image = this.image;\n                if (image instanceof HTMLImageElement && !image.complete) {\n                    image.addEventListener(\"load\", this.finalizeImage.bind(this, image, resolve));\n                    image.addEventListener(\"error\", reject);\n                } else {\n                    this.finalizeImage(this.image, resolve);\n                }\n                return;\n            }\n\n            logger.debug(`Loading image: ${this.url}`);\n            if (this.cancelled === true) {\n                logger.debug(`Cancelled loading image: ${this.url}`);\n                resolve(undefined);\n            } else {\n                new THREE.ImageLoader().load(\n                    this.url,\n                    (image: HTMLImageElement) => {\n                        if (this.cancelled === true) {\n                            logger.debug(`Cancelled loading image: ${this.url}`);\n                            resolve(undefined);\n                            return;\n                        }\n\n                        this.finalizeImage(image, resolve);\n                    },\n                    undefined,\n                    errorEvent => {\n                        logger.error(`... loading image failed: ${this.url} : ${errorEvent}`);\n\n                        this.loadingPromise = undefined;\n                        reject(`... loading image failed: ${this.url} : ${errorEvent}`);\n                    }\n                );\n            }\n        });\n\n        return this.loadingPromise;\n    }\n\n    private finalizeImage(image: TexturizableImage, resolve: (item: ImageItem) => void) {\n        this.image = image;\n        this.mipMaps = mipMapGenerator.generateTextureAtlasMipMap(this);\n        this.loadingPromise = undefined;\n        resolve(this);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { ImageItem, TexturizableImage } from \"./Image\";\n\n/**\n * Combines an {@link ImageItem} with a list of owners (which can be any object) that reference it.\n */\nclass ImageCacheItem {\n    /**\n     * The list of owners referencing the {@link ImageItem}.\n     */\n    owners: any[] = [];\n\n    /**\n     * Instantiates `ImageCacheItem`.\n     *\n     * @param imageItem - The {@link ImageItem} referenced by the associated owners.\n     * @param owner - First owner referencing the {@link ImageItem}.\n     */\n    constructor(public imageItem: ImageItem, owner: any) {\n        this.owners.push(owner);\n    }\n}\n\n/**\n * @internal\n *\n * `ImageCache` is a singleton, so it can be used with multiple owners on a single page.\n *\n * @remarks\n * This allows to have an image loaded only once for multiple views.\n * THREE is doing something similar,\n * but does not allow to share images that have been loaded from a canvas (which we may need to do\n * if we use SVG images for textures).\n *\n * One application that makes our own cache necessary is the generation of our own textures from\n * data that is not an URL.\n *\n * The `ImageCache` can be improved by adding statistics for memory footprint as well.\n */\nexport class ImageCache {\n    /**\n     * Returns the singleton `instance` of the `ImageCache`.\n     */\n    static get instance(): ImageCache {\n        if (ImageCache.m_instance === undefined) {\n            ImageCache.m_instance = new ImageCache();\n        }\n        return ImageCache.m_instance;\n    }\n\n    /**\n     * Dispose the singleton object.\n     *\n     * @remarks\n     * Not normally implemented for singletons, but good for debugging.\n     */\n    static dispose(): void {\n        ImageCache.m_instance = undefined;\n    }\n\n    private static m_instance: ImageCache | undefined;\n\n    private readonly m_images: Map<string, ImageCacheItem> = new Map();\n\n    /**\n     * Add an image definition to the global cache. Useful when the image data is already loaded.\n     *\n     * @param owner - Specify which {@link any} requests the image.\n     * @param url - URL of image.\n     * @param image - Optional {@link TexturizableImage}.\n     */\n    registerImage(owner: any, url: string, image?: TexturizableImage): ImageItem {\n        let imageCacheItem = this.findImageCacheItem(url);\n        if (imageCacheItem) {\n            if (owner !== undefined && !imageCacheItem.owners.includes(owner)) {\n                imageCacheItem.owners.push(owner);\n            }\n            return imageCacheItem.imageItem;\n        }\n\n        imageCacheItem = {\n            imageItem: new ImageItem(url, image),\n            owners: [owner]\n        };\n\n        this.m_images.set(url, imageCacheItem);\n\n        return imageCacheItem.imageItem;\n    }\n\n    /**\n     * Remove an image from the cache..\n     *\n     * @param url - URL of the image.\n     * @param owner - Owner removing the image.\n     * @returns `true` if image has been removed.\n     */\n    removeImage(url: string, owner: any): boolean {\n        const cacheItem = this.m_images.get(url);\n        if (cacheItem !== undefined) {\n            this.unlinkCacheItem(cacheItem, owner);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Find {@link ImageItem} for the specified URL.\n     *\n     * @param url - URL of image.\n     * @returns `ImageItem` for the URL if the URL is registered, `undefined` otherwise.\n     */\n    findImage(url: string): ImageItem | undefined {\n        const cacheItem = this.m_images.get(url);\n        if (cacheItem !== undefined) {\n            return cacheItem.imageItem;\n        }\n        return undefined;\n    }\n\n    /**\n     * Clear all {@link ImageItem}s belonging to an owner.\n     *\n     * @remarks\n     * May remove cached items if no owner is registered anymore.\n     *\n     * @param owner - specify to remove all items registered by {@link any}.\n     * @returns Number of images removed.\n     */\n    clear(owner: any) {\n        this.m_images.forEach(cacheItem => {\n            this.unlinkCacheItem(cacheItem, owner);\n        });\n    }\n\n    /**\n     * Returns the number of all cached {@link ImageItem}s.\n     */\n    get size(): number {\n        return this.m_images.size;\n    }\n\n    /**\n     * Find the cached {@link ImageItem} by URL.\n     *\n     * @param url - URL of image.\n     */\n    private findImageCacheItem(url: string): ImageCacheItem | undefined {\n        return this.m_images.get(url);\n    }\n\n    /**\n     * Cancel loading an image.\n     *\n     * @param imageItem - Item to cancel loading.\n     */\n    private cancelLoading(imageItem: ImageItem) {\n        if (imageItem.loading) {\n            // Notify that we are cancelling.\n            imageItem.cancelled = true;\n        }\n    }\n\n    /**\n     * Remove the cacheItem from cache, unless the item is used by another owner, in that case the\n     * link to the owner is removed from the item, just like a reference count.\n     *\n     * @param cacheItem The cache item to be removed.\n     * @param owner - Specify which owner removes the image.\n     * If no owner is specified, the cache item is removed even if it has owners.\n     */\n    private unlinkCacheItem(cacheItem: ImageCacheItem, owner: any) {\n        const ownerIndex = cacheItem.owners.indexOf(owner);\n        if (ownerIndex >= 0) {\n            cacheItem.owners.splice(ownerIndex, 1);\n        }\n        if (cacheItem.owners.length === 0) {\n            this.m_images.delete(cacheItem.imageItem.url);\n            this.cancelLoading(cacheItem.imageItem);\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { assert } from \"@here/harp-utils\";\n\nimport { ImageItem, TexturizableImage } from \"./Image\";\nimport { ImageCache } from \"./ImageCache\";\n\n/**\n * Cache images wrapped into {@link ImageItem}s for a {@link MapView}.\n *\n * @remarks\n * An image may have multiple names in a theme, the `MapViewImageCache` maps different names to the\n * same image URL, and allows to share the image by URL to different MapViews.\n * Within a MapView instance, the (optional) name is unique, so registering multiple images with the\n * same name is invalid.\n *\n * The `MapViewImageCache` uses a global {@link ImageCache} to actually store (and generate) the\n * image data.\n */\nexport class MapViewImageCache {\n    private readonly m_name2Url: Map<string, string> = new Map();\n    private readonly m_urlNameCount: Map<string, number> = new Map();\n\n    /**\n     * Add an image from an URL and optionally start loading it, storing the resulting\n     * {@link TexturizableImage} in a {@link ImageItem}.\n     *\n     * @remarks\n     * Names are unique within a {@link MapView}. URLs are not unique, multiple images with\n     * different names can have the same URL. Still, URLs are are loaded only once.\n     * If an image with the same name is already registered an error is thrown.\n     *\n     * @param name - Image name.\n     * @param url - Image URL.\n     * @param startLoading - Optional. Pass `true` to start loading the image in the background.\n     * @returns The resulting {@link ImageItem} or a promise for it if it starts loading.\n     */\n    addImage(\n        name: string,\n        url: string,\n        startLoading?: boolean\n    ): ImageItem | Promise<ImageItem | undefined>;\n\n    /**\n     * Add an image storing it in a {@link ImageItem}.\n     *\n     * @remarks\n     * Names are unique within a {@link MapView}. If an image with the same name is already\n     * registered an error is thrown.\n     *\n     * @param name - Unique image name.\n     * @param image - The image to add.\n     * @returns The resulting {@link ImageItem}\n     */\n    addImage(name: string, image: TexturizableImage): ImageItem;\n\n    addImage(\n        name: string,\n        urlOrImage: string | TexturizableImage,\n        startLoading = true\n    ): ImageItem | Promise<ImageItem | undefined> {\n        if (typeof urlOrImage === \"string\") {\n            const url = urlOrImage;\n            const imageItem = this.registerImage(name, url);\n\n            return startLoading ? imageItem.loadImage() : imageItem;\n        }\n\n        const image = urlOrImage;\n        return this.registerImage(name, undefined, image);\n    }\n\n    /**\n     * Remove the image with this name from the cache.\n     *\n     * @param name - Name of the image.\n     * @returns `true` if item has been removed.\n     */\n    removeImage(name: string): boolean {\n        const url = this.m_name2Url.get(name);\n        if (url !== undefined) {\n            this.m_name2Url.delete(name);\n\n            let nameCount = 1;\n            if (name !== url) {\n                const result = this.m_urlNameCount.get(url);\n                assert(result !== undefined);\n                nameCount = result!;\n                assert(nameCount > 0);\n            }\n\n            if (nameCount > 1) {\n                // There is another name sharing this URL.\n                this.m_urlNameCount.set(url, nameCount - 1);\n            } else {\n                // URL was used by this image only, remove the image.\n                this.m_urlNameCount.delete(url);\n                ImageCache.instance.removeImage(url, this);\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Find {@link ImageItem} by its name.\n     *\n     * @param name - Name of image.\n     */\n    findImageByName(name: string): ImageItem | undefined {\n        const url = this.m_name2Url.get(name);\n        if (url === undefined) {\n            return undefined;\n        }\n        return ImageCache.instance.findImage(url);\n    }\n\n    /**\n     * Remove all {@link ImageItem}s from the cache.\n     *\n     * @remarks\n     * Also removes all {@link ImageItem}s that belong to this\n     * {@link MapView} from the global {@link ImageCache}.\n     * @returns Number of images removed.\n     */\n    clear() {\n        ImageCache.instance.clear(this);\n        this.m_name2Url.clear();\n        this.m_urlNameCount.clear();\n    }\n\n    /**\n     * Register an existing image by name. If the name already exists and error is thrown.\n     *\n     * @param name - Image name.\n     * @param url - Optional image URL.\n     * @param image - Optional {@link TexturizableImage}.\n     */\n    private registerImage(name: string, url?: string, image?: TexturizableImage): ImageItem {\n        if (this.hasName(name)) {\n            throw new Error(\"duplicate name in cache\");\n        }\n\n        if (url === undefined) {\n            // If no url given, an image must be provided directly. In this case the name is used\n            // as url.\n            assert(image !== undefined);\n            url = name;\n        }\n\n        if (url !== name) {\n            const nameCount = this.m_urlNameCount.get(url) ?? 0;\n            this.m_urlNameCount.set(url, nameCount + 1);\n        }\n\n        this.m_name2Url.set(name, url);\n        return ImageCache.instance.registerImage(this, url, image);\n    }\n\n    private hasName(name: string): boolean {\n        return this.m_name2Url.get(name) !== undefined;\n    }\n}\n","/*\n * Copyright (C) 2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { ImageItem, TexturizableImage } from \"./Image\";\n\nconst isNode = typeof window === \"undefined\";\n\n/**\n * Mip map generator resizes textures to next bigger power-of-two size by adding padding\n * and creates mip map levels.\n * @internal\n */\nexport class MipMapGenerator {\n    /**\n     * Gets size of an image padded to the next bigger power-of-two size\n     * @param width - Width of image\n     * @param height - Height of image\n     */\n    static getPaddedSize(width: number, height: number): { width: number; height: number } {\n        return {\n            width: THREE.MathUtils.ceilPowerOfTwo(width),\n            height: THREE.MathUtils.ceilPowerOfTwo(height)\n        };\n    }\n\n    private readonly m_paddingCanvas?: HTMLCanvasElement;\n    private readonly m_paddingContext?: CanvasRenderingContext2D;\n    private readonly m_resizeCanvas?: HTMLCanvasElement;\n    private readonly m_resizeContext?: CanvasRenderingContext2D;\n\n    constructor() {\n        if (!isNode) {\n            this.m_paddingCanvas = document.createElement(\"canvas\");\n            this.m_paddingContext = this.m_paddingCanvas.getContext(\"2d\")!;\n            this.m_resizeCanvas = document.createElement(\"canvas\");\n            this.m_resizeContext = this.m_resizeCanvas.getContext(\"2d\")!;\n        }\n    }\n\n    /**\n     * Generate downsampled mip map levels from an image.\n     * If the input image is not power-of-two the image is padded to the\n     * next bigger power-of-two size.\n     * @param image - Input image\n     * @returns A list of images with mip maps of the input image\n     */\n    generateTextureAtlasMipMap(image: ImageItem): ImageData[] {\n        if (isNode) {\n            throw new Error(\"MipMapGenerator only works in browser.\");\n        }\n\n        if (image.image === undefined) {\n            throw new Error(\"Can not generate mip maps. Image data not loaded!\");\n        }\n        const imageData = image.image;\n        const mipMaps: ImageData[] = [];\n\n        // Add initial texture with padding as level 0\n        const { width: paddedWidth, height: paddedHeight } = MipMapGenerator.getPaddedSize(\n            imageData.width,\n            imageData.height\n        );\n        this.copyImageWithPadding(imageData, paddedWidth, paddedHeight);\n        mipMaps.push(this.m_paddingContext!.getImageData(0, 0, paddedWidth, paddedHeight));\n\n        let width = paddedWidth * 0.5;\n        let height = paddedHeight * 0.5;\n        // HARP-10765 WebGL complains if we don't generate down to a 1x1 texture (this was the case\n        // previously when height != width), and thus the final texture generated was 2x1 texture\n        // and not 1x1.\n        while (width >= 1 || height >= 1) {\n            const mipMapLevel = mipMaps.length;\n            const previousImage = mipMaps[mipMapLevel - 1];\n            // Resize previous mip map level\n            mipMaps.push(this.resizeImage(previousImage, Math.max(width, 1), Math.max(height, 1)));\n            width *= 0.5;\n            height *= 0.5;\n        }\n\n        return mipMaps;\n    }\n\n    /**\n     * Copy image to a canvas and add padding if necessary.\n     * @param image - Input image.\n     * @param width - Width of output image\n     * @param height - Width of output image\n     * @returns Canvas with image and padding.\n     */\n    private copyImageWithPadding(\n        image: TexturizableImage,\n        width: number,\n        height: number\n    ): HTMLCanvasElement {\n        this.m_paddingCanvas!.width = width;\n        this.m_paddingCanvas!.height = height;\n\n        this.m_paddingContext!.clearRect(0, 0, width, height);\n        if (image instanceof ImageData) {\n            this.m_paddingContext!.putImageData(image, 0, 0);\n        } else {\n            this.m_paddingContext!.drawImage(image, 0, 0);\n        }\n\n        // Add horizontal padding\n        if (image.width !== width) {\n            this.m_paddingContext!.drawImage(\n                this.m_paddingCanvas!,\n                image.width - 1,\n                0,\n                1,\n                image.height,\n                image.width,\n                0,\n                width - image.width,\n                image.height\n            );\n        }\n\n        // Add vertical padding\n        if (image.height !== height) {\n            this.m_paddingContext!.drawImage(\n                this.m_paddingCanvas!,\n                0,\n                image.height - 1,\n                width,\n                1,\n                0,\n                image.height,\n                width,\n                height - image.height\n            );\n        }\n\n        return this.m_paddingCanvas!;\n    }\n\n    /**\n     * Resize an image.\n     *\n     * Quality of resized image is best when\n     * image.width and image.height are even numbers and the image\n     * is resized by factor 0.5 or 2.\n     * @param image - Input image\n     * @param width - Width of output image\n     * @param height - Height of output image\n     * @return Resized image\n     */\n    private resizeImage(image: ImageData, width: number, height: number): ImageData {\n        //  Copy image data to canvas because ImageData can't be resized directly\n        const paddedImage = this.copyImageWithPadding(image, image.width, image.height);\n\n        // Resize image to resize canvas\n        this.m_resizeCanvas!.width = width;\n        this.m_resizeCanvas!.height = height;\n        this.m_resizeContext!.clearRect(0, 0, width, height);\n        this.m_resizeContext!.drawImage(paddedImage, 0, 0, width, height);\n\n        return this.m_resizeContext!.getImageData(0, 0, width, height);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { MemoryUsage } from \"@here/harp-text-canvas\";\nimport { Math2D } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { getPixelFromImage, screenToUvCoordinates } from \"./PixelPicker\";\n\n/**\n * Declares an interface for a `struct` containing a [[BoxBuffer]]'s attribute state information.\n */\nexport interface State {\n    positionAttributeCount: number;\n    colorAttributeCount: number;\n    uvAttributeCount: number;\n    indexAttributeCount: number;\n    pickInfoCount: number;\n}\n\n/**\n * Initial number of boxes in BoxBuffer.\n */\nconst START_BOX_BUFFER_SIZE = 0;\n\n/**\n * Maximum number of boxes in BoxBuffer.\n */\nconst MAX_BOX_BUFFER_SIZE = 32 * 1024;\n\n/**\n * Number of vertices per box/glyph element: 4 corners.\n */\nconst NUM_VERTICES_PER_ELEMENT = 4;\n\n/**\n * Number of indices added per box/glyph: 2 triangles, 6 indices.\n */\nconst NUM_INDICES_PER_ELEMENT = 6;\n\n/**\n * Number of values per position.\n */\nconst NUM_POSITION_VALUES_PER_VERTEX = 3;\n\n/**\n * Number of values per color.\n */\nconst NUM_COLOR_VALUES_PER_VERTEX = 4;\n\n/**\n * Number of values per UV.\n */\nconst NUM_UV_VALUES_PER_VERTEX = 4;\n\n/**\n * Number of values per index.\n */\nconst NUM_INDEX_VALUES_PER_VERTEX = 1;\n\n/**\n * Number of bytes for float in an Float32Array.\n */\nconst NUM_BYTES_PER_FLOAT = 4;\n\n/**\n * Number of bytes for integer number in an UInt32Array.\n */\nconst NUM_BYTES_PER_INT32 = 4;\n\n/**\n * SubClass of [[THREE.Mesh]] to identify meshes that have been created by [[BoxBuffer]] and\n * [[TextBuffer]]. Add the isEmpty flag to quickly test for empty meshes.\n */\nexport class BoxBufferMesh extends THREE.Mesh {\n    constructor(geometry: THREE.BufferGeometry, material: THREE.Material | THREE.Material[]) {\n        super(geometry, material);\n\n        this.type = \"BoxBufferMesh\";\n    }\n\n    /**\n     * A mesh that has no positions and indices set is defined to be empty.\n     *\n     * @returns `True` if no indices have been added to the mesh.\n     */\n    get isEmpty(): boolean {\n        if (this.geometry === undefined) {\n            return true;\n        } else {\n            const bufferGeometry = this.geometry as THREE.BufferGeometry;\n            return bufferGeometry.index === null || bufferGeometry.index.count === 0;\n        }\n    }\n}\n\n/**\n * Buffer for (untransformed) `Box2` objects. Can be used to create a single geometry for screen-\n * aligned boxes, like POIs.\n */\nexport class BoxBuffer {\n    /**\n     * {@link @here/harp-datasource-protocol#BufferAttribute} holding the `BoxBuffer` position data.\n     */\n    private m_positionAttribute?: THREE.BufferAttribute;\n\n    /**\n     * {@link @here/harp-datasource-protocol#BufferAttribute} holding the `BoxBuffer` color data.\n     */\n    private m_colorAttribute?: THREE.BufferAttribute;\n\n    /**\n     * {@link @here/harp-datasource-protocol#BufferAttribute} holding the `BoxBuffer` uv data.\n     */\n    private m_uvAttribute?: THREE.BufferAttribute;\n\n    /**\n     * {@link @here/harp-datasource-protocol#BufferAttribute} holding the `BoxBuffer` index data.\n     */\n    private m_indexAttribute?: THREE.BufferAttribute;\n    private readonly m_pickInfos: Array<any | undefined>;\n\n    /**\n     * [[BufferGeometry]] holding all the different\n     * {@link @here/harp-datasource-protocol#BufferAttribute}s.\n     */\n    private m_geometry: THREE.BufferGeometry | undefined;\n\n    /**\n     * [[Mesh]] used for rendering.\n     */\n    private m_mesh: BoxBufferMesh | undefined;\n\n    private m_size: number = 0;\n\n    /**\n     * Creates a new `BoxBuffer`.\n     *\n     * @param m_material - Material to be used for [[Mesh]] of this `BoxBuffer`.\n     * @param m_renderOrder - Optional renderOrder of this buffer.\n     * @param startElementCount - Initial number of elements this `BoxBuffer` can hold.\n     * @param m_maxElementCount - Maximum number of elements this `BoxBuffer` can hold.\n     */\n    constructor(\n        private readonly m_material: THREE.Material | THREE.Material[],\n        private readonly m_renderOrder: number = 0,\n        startElementCount = START_BOX_BUFFER_SIZE,\n        private readonly m_maxElementCount = MAX_BOX_BUFFER_SIZE\n    ) {\n        this.resizeBuffer(startElementCount);\n        this.m_pickInfos = new Array();\n    }\n\n    /**\n     * Duplicate this `BoxBuffer` with same material and renderOrder.\n     *\n     * @returns A clone of this `BoxBuffer`.\n     */\n    clone(): BoxBuffer {\n        return new BoxBuffer(this.m_material, this.m_renderOrder);\n    }\n\n    /**\n     * Dispose of the geometry.\n     */\n    dispose() {\n        if (this.m_geometry !== undefined) {\n            this.m_geometry.dispose();\n            this.m_geometry = undefined;\n        }\n        this.m_mesh = undefined;\n    }\n\n    /**\n     * Return the current number of elements the buffer can hold.\n     */\n    get size(): number {\n        return this.m_size;\n    }\n\n    /**\n     * Clear's the `BoxBuffer` attribute buffers.\n     */\n    reset() {\n        if (this.m_positionAttribute !== undefined) {\n            this.m_positionAttribute.count = 0;\n            this.m_colorAttribute!.count = 0;\n            this.m_uvAttribute!.count = 0;\n            this.m_indexAttribute!.count = 0;\n            this.m_pickInfos!.length = 0;\n        }\n    }\n\n    /**\n     * Returns `true` if this `BoxBuffer` can hold the specified amount of glyphs. If the buffer\n     * can only add the glyph by increasing the buffer size, the resize() method is called, which\n     * will then create a new geometry for the mesh.\n     *\n     * @param glyphCount - Number of glyphs to be added to the buffer.\n     * @returns `true` if the element (box or glyph) can be added to the buffer, `false` otherwise.\n     */\n    canAddElements(glyphCount = 1): boolean {\n        const indexAttribute = this.m_indexAttribute!;\n        if (\n            indexAttribute.count + glyphCount * NUM_INDICES_PER_ELEMENT >=\n            indexAttribute.array.length\n        ) {\n            // Too many elements for the current buffer, check if we can resize the buffer.\n            if (indexAttribute.array.length >= this.m_maxElementCount * NUM_INDICES_PER_ELEMENT) {\n                return false;\n            }\n\n            const newSize = Math.min(this.m_maxElementCount, this.size === 0 ? 256 : this.size * 2);\n            this.resize(newSize);\n        }\n        return true;\n    }\n\n    /**\n     * Returns this `BoxBuffer`'s attribute [[State]].\n     */\n    saveState(): State {\n        const state: State = {\n            positionAttributeCount: this.m_positionAttribute!.count,\n            colorAttributeCount: this.m_colorAttribute!.count,\n            uvAttributeCount: this.m_uvAttribute!.count,\n            indexAttributeCount: this.m_indexAttribute!.count,\n            pickInfoCount: this.m_pickInfos!.length\n        };\n        return state;\n    }\n\n    /**\n     * Store this `BoxBuffer`'s attribute [[State]] to a previously stored one.\n     *\n     * @param state - [[State]] struct describing a previous attribute state.\n     */\n    restoreState(state: State) {\n        this.m_positionAttribute!.count = state.positionAttributeCount;\n        this.m_colorAttribute!.count = state.colorAttributeCount;\n        this.m_uvAttribute!.count = state.uvAttributeCount;\n        this.m_indexAttribute!.count = state.indexAttributeCount;\n        this.m_pickInfos!.length = state.pickInfoCount;\n    }\n\n    /**\n     * Adds a new box to this `BoxBuffer`.\n     *\n     * @param screenBox - [[Math2D.Box]] holding screen coordinates for this box.\n     * @param uvBox - [[Math2D.UvBox]] holding uv coordinates for this box.\n     * @param color - Box's color.\n     * @param opacity - Box's opacity.\n     * @param distance - Box's distance to camera.\n     * @param pickInfo - Box's picking information.\n     */\n    addBox(\n        screenBox: Math2D.Box,\n        uvBox: Math2D.UvBox,\n        color: THREE.Color,\n        opacity: number,\n        distance: number,\n        pickInfo?: any\n    ): boolean {\n        if (!this.canAddElements()) {\n            return false;\n        }\n\n        const { s0, t0, s1, t1 } = uvBox;\n        const { x, y, w, h } = screenBox;\n\n        // Premultiply alpha into vertex colors\n        const r = Math.round(color.r * opacity * 255);\n        const g = Math.round(color.g * opacity * 255);\n        const b = Math.round(color.b * opacity * 255);\n        const a = Math.round(opacity * 255);\n\n        const positionAttribute = this.m_positionAttribute!;\n        const colorAttribute = this.m_colorAttribute!;\n        const uvAttribute = this.m_uvAttribute!;\n        const indexAttribute = this.m_indexAttribute!;\n\n        const baseVertex = positionAttribute.count;\n        const baseIndex = indexAttribute.count;\n\n        positionAttribute.setXYZ(baseVertex, x, y, distance);\n        positionAttribute.setXYZ(baseVertex + 1, x + w, y, distance);\n        positionAttribute.setXYZ(baseVertex + 2, x, y + h, distance);\n        positionAttribute.setXYZ(baseVertex + 3, x + w, y + h, distance);\n\n        colorAttribute.setXYZW(baseVertex, r, g, b, a);\n        colorAttribute.setXYZW(baseVertex + 1, r, g, b, a);\n        colorAttribute.setXYZW(baseVertex + 2, r, g, b, a);\n        colorAttribute.setXYZW(baseVertex + 3, r, g, b, a);\n\n        uvAttribute.setXY(baseVertex, s0, t0);\n        uvAttribute.setXY(baseVertex + 1, s1, t0);\n        uvAttribute.setXY(baseVertex + 2, s0, t1);\n        uvAttribute.setXY(baseVertex + 3, s1, t1);\n\n        indexAttribute.setX(baseIndex, baseVertex);\n        indexAttribute.setX(baseIndex + 1, baseVertex + 1);\n        indexAttribute.setX(baseIndex + 2, baseVertex + 2);\n        indexAttribute.setX(baseIndex + 3, baseVertex + 2);\n        indexAttribute.setX(baseIndex + 4, baseVertex + 1);\n        indexAttribute.setX(baseIndex + 5, baseVertex + 3);\n\n        positionAttribute.count += NUM_VERTICES_PER_ELEMENT;\n        colorAttribute.count += NUM_VERTICES_PER_ELEMENT;\n        uvAttribute.count += NUM_VERTICES_PER_ELEMENT;\n        indexAttribute.count += NUM_INDICES_PER_ELEMENT;\n\n        this.m_pickInfos.push(pickInfo);\n\n        return true;\n    }\n\n    /**\n     * Updates a [[BufferGeometry]] object to reflect the changes in this `TextBuffer`'s attribute\n     * data.\n     */\n    updateBufferGeometry() {\n        const positionAttribute = this.m_positionAttribute!;\n        const colorAttribute = this.m_colorAttribute!;\n        const uvAttribute = this.m_uvAttribute!;\n        const indexAttribute = this.m_indexAttribute!;\n\n        if (positionAttribute.count > 0) {\n            positionAttribute.needsUpdate = true;\n            positionAttribute.updateRange.offset = 0;\n            positionAttribute.updateRange.count =\n                positionAttribute.count * NUM_VERTICES_PER_ELEMENT;\n        }\n\n        if (colorAttribute.count > 0) {\n            colorAttribute.needsUpdate = true;\n            colorAttribute.updateRange.offset = 0;\n            colorAttribute.updateRange.count = colorAttribute.count * NUM_VERTICES_PER_ELEMENT;\n        }\n\n        if (uvAttribute.count > 0) {\n            uvAttribute.needsUpdate = true;\n            uvAttribute.updateRange.offset = 0;\n            uvAttribute.updateRange.count = uvAttribute.count * NUM_VERTICES_PER_ELEMENT;\n        }\n\n        if (indexAttribute.count > 0) {\n            indexAttribute.needsUpdate = true;\n            indexAttribute.updateRange.offset = 0;\n            indexAttribute.updateRange.count = indexAttribute.count;\n        }\n\n        if (this.m_geometry !== undefined) {\n            this.m_geometry.clearGroups();\n            this.m_geometry.addGroup(0, this.m_indexAttribute!.count);\n        }\n    }\n\n    /**\n     * Check if the buffer is empty. If it is empty, the memory usage is minimized to reduce\n     * footprint.\n     */\n    cleanUp() {\n        // If there is nothing in this buffer, resize it, it may never be used again.\n        if (this.m_indexAttribute!.count === 0 && this.size > START_BOX_BUFFER_SIZE) {\n            this.clearAttributes();\n        }\n    }\n\n    /**\n     * Determine if the mesh is empty.\n     */\n    get isEmpty(): boolean {\n        return this.m_mesh!.isEmpty;\n    }\n\n    /**\n     * Get the [[Mesh]] object. The geometry instance of the mesh may change if the buffers are\n     * resized. The mesh, once created, will not change, so it can always be added to the scene.\n     */\n    get mesh(): BoxBufferMesh {\n        if (this.m_mesh === undefined) {\n            this.resize();\n        }\n        return this.m_mesh!;\n    }\n\n    /**\n     * Fill the picking results for the pixel with the given screen coordinate. If multiple\n     * boxes are found, the order of the results is unspecified.\n     *\n     * @param screenPosition - Screen coordinate of picking position.\n     * @param pickCallback - Callback to be called for every picked element.\n     * @param image - Image to test if the pixel is transparent\n     */\n    pickBoxes(\n        screenPosition: THREE.Vector2,\n        pickCallback: (pickData: any | undefined) => void,\n        image?: CanvasImageSource | ImageData\n    ) {\n        const n = this.m_pickInfos.length;\n        const pickInfos = this.m_pickInfos;\n        const positions = this.m_positionAttribute!;\n        const screenX = screenPosition.x;\n        const screenY = screenPosition.y;\n\n        for (let pickInfoIndex = 0; pickInfoIndex < n; pickInfoIndex++) {\n            const positionIndex = pickInfoIndex * NUM_VERTICES_PER_ELEMENT;\n\n            const minX = positions.getX(positionIndex);\n            if (screenX < minX) {\n                continue;\n            }\n\n            const maxX = positions.getX(positionIndex + 1);\n            if (screenX > maxX) {\n                continue;\n            }\n\n            const minY = positions.getY(positionIndex);\n            if (screenY < minY) {\n                continue;\n            }\n\n            const maxY = positions.getY(positionIndex + 2);\n            if (screenY > maxY) {\n                continue;\n            }\n\n            const box = new Math2D.Box(minX, minY, maxX - minX, maxY - minY);\n            if (\n                image !== undefined &&\n                pickInfos[pickInfoIndex].poiInfo !== undefined &&\n                pickInfos[pickInfoIndex].poiInfo.uvBox !== undefined &&\n                this.isPixelTransparent(\n                    image,\n                    screenX,\n                    screenY,\n                    box,\n                    pickInfos[pickInfoIndex].poiInfo.uvBox,\n                    document.createElement(\"canvas\")\n                )\n            ) {\n                continue;\n            }\n\n            if (pickInfos[pickInfoIndex] !== undefined) {\n                pickCallback(pickInfos[pickInfoIndex]);\n            }\n        }\n    }\n\n    /**\n     * Creates a new {@link @here/harp-datasource-protocol#Geometry} object\n     * from all the attribute data stored in this `BoxBuffer`.\n     *\n     * @remarks\n     * The [[Mesh]] object may be created if it is not initialized already.\n     *\n     * @param newSize - Optional number of elements to resize the buffer to.\n     * @param forceResize - Optional flag to force a resize even if new size is smaller than before.\n     */\n    resize(newSize?: number, forceResize?: boolean): BoxBufferMesh {\n        if (this.m_geometry !== undefined) {\n            this.m_geometry.dispose();\n        }\n\n        this.m_geometry = new THREE.BufferGeometry();\n\n        if (newSize !== undefined && (forceResize === true || newSize > this.size)) {\n            this.resizeBuffer(newSize);\n        }\n\n        this.m_geometry.setAttribute(\"position\", this.m_positionAttribute!);\n        this.m_geometry.setAttribute(\"color\", this.m_colorAttribute!);\n        this.m_geometry.setAttribute(\"uv\", this.m_uvAttribute!);\n        this.m_geometry.setIndex(this.m_indexAttribute!);\n        this.m_geometry.addGroup(0, this.m_indexAttribute!.count);\n\n        if (this.m_mesh === undefined) {\n            this.m_mesh = new BoxBufferMesh(this.m_geometry, this.m_material);\n            this.m_mesh.renderOrder = this.m_renderOrder;\n        } else {\n            this.m_mesh.geometry = this.m_geometry;\n        }\n        return this.m_mesh;\n    }\n\n    /**\n     * Update the info with the memory footprint caused by objects owned by the `BoxBuffer`.\n     *\n     * @param info - The info object to increment with the values from this `BoxBuffer`.\n     */\n    updateMemoryUsage(info: MemoryUsage) {\n        const numBytes =\n            this.m_positionAttribute!.count * NUM_POSITION_VALUES_PER_VERTEX * NUM_BYTES_PER_FLOAT +\n            this.m_colorAttribute!.count * NUM_COLOR_VALUES_PER_VERTEX +\n            this.m_uvAttribute!.count * NUM_UV_VALUES_PER_VERTEX * NUM_BYTES_PER_FLOAT +\n            this.m_indexAttribute!.count * NUM_BYTES_PER_INT32; // May be UInt16, so we overestimate\n\n        info.heapSize += numBytes;\n        info.gpuSize += numBytes;\n    }\n\n    /**\n     * Check if a pixel is transparent or not.\n     *\n     * @param image - Image source.\n     * @param xScreenPos - X position of the pixel.\n     * @param yScreenPos - Y position of the pixel.\n     * @param box - Bounding box of the image in screen coordinates.\n     * @param uvBox - Uv box referred to the given bounding box.\n     * @param canvas - Canvas element to draw the image if it's not a `ImageData` object.\n     */\n    private isPixelTransparent(\n        image: CanvasImageSource | ImageData,\n        xScreenPos: number,\n        yScreenPos: number,\n        box: Math2D.Box,\n        uvBox: Math2D.UvBox,\n        canvas?: HTMLCanvasElement\n    ): boolean {\n        const { u, v } = screenToUvCoordinates(xScreenPos, yScreenPos, box, uvBox);\n        const { width, height } = image instanceof SVGImageElement ? image.getBBox() : image;\n        const x = width * u;\n        const y = height * v;\n\n        const pixel = getPixelFromImage(x, y, image, canvas);\n\n        return pixel !== undefined && pixel[3] === 0;\n    }\n\n    /**\n     * Remove current attributes and arrays. Minimizes memory footprint.\n     */\n    private clearAttributes() {\n        this.m_positionAttribute = undefined;\n        this.m_colorAttribute = undefined;\n        this.m_uvAttribute = undefined;\n        this.m_indexAttribute = undefined;\n        this.resize(START_BOX_BUFFER_SIZE, true);\n    }\n\n    /**\n     * Resize the attribute buffers. New value must be larger than the previous one.\n     *\n     * @param newSize - New number of elements in the buffer. Number has to be larger than the\n     *      previous size.\n     */\n    private resizeBuffer(newSize: number) {\n        const newPositionArray = new Float32Array(\n            newSize * NUM_VERTICES_PER_ELEMENT * NUM_POSITION_VALUES_PER_VERTEX\n        );\n\n        if (this.m_positionAttribute !== undefined && this.m_positionAttribute.array.length > 0) {\n            const positionAttributeCount = this.m_positionAttribute.count;\n            newPositionArray.set(this.m_positionAttribute.array);\n            this.m_positionAttribute.array = newPositionArray;\n            this.m_positionAttribute.count = positionAttributeCount;\n        } else {\n            this.m_positionAttribute = new THREE.BufferAttribute(\n                newPositionArray,\n                NUM_POSITION_VALUES_PER_VERTEX\n            );\n            this.m_positionAttribute.count = 0;\n            this.m_positionAttribute.setUsage(THREE.DynamicDrawUsage);\n        }\n\n        const newColorArray = new Uint8Array(\n            newSize * NUM_VERTICES_PER_ELEMENT * NUM_COLOR_VALUES_PER_VERTEX\n        );\n\n        if (this.m_colorAttribute !== undefined) {\n            const colorAttributeCount = this.m_colorAttribute.count;\n            newColorArray.set(this.m_colorAttribute.array);\n            this.m_colorAttribute.array = newColorArray;\n            this.m_colorAttribute.count = colorAttributeCount;\n        } else {\n            this.m_colorAttribute = new THREE.BufferAttribute(\n                newColorArray,\n                NUM_COLOR_VALUES_PER_VERTEX,\n                true\n            );\n            this.m_colorAttribute.count = 0;\n            this.m_colorAttribute.setUsage(THREE.DynamicDrawUsage);\n        }\n\n        const newUvArray = new Float32Array(\n            newSize * NUM_VERTICES_PER_ELEMENT * NUM_UV_VALUES_PER_VERTEX\n        );\n\n        if (this.m_uvAttribute !== undefined) {\n            const uvAttributeCount = this.m_uvAttribute.count;\n            newUvArray.set(this.m_uvAttribute.array);\n            this.m_uvAttribute.array = newUvArray;\n            this.m_uvAttribute.count = uvAttributeCount;\n        } else {\n            this.m_uvAttribute = new THREE.BufferAttribute(newUvArray, NUM_UV_VALUES_PER_VERTEX);\n            this.m_uvAttribute.count = 0;\n            this.m_uvAttribute.setUsage(THREE.DynamicDrawUsage);\n        }\n\n        const numIndexValues = newSize * NUM_INDICES_PER_ELEMENT * NUM_INDEX_VALUES_PER_VERTEX;\n\n        const newIndexArray =\n            numIndexValues > 65535\n                ? new Uint32Array(numIndexValues)\n                : new Uint16Array(numIndexValues);\n\n        if (this.m_indexAttribute !== undefined) {\n            const indexAttributeCount = this.m_indexAttribute.count;\n            newIndexArray.set(this.m_indexAttribute.array);\n            this.m_indexAttribute.array = newIndexArray;\n            this.m_indexAttribute.count = indexAttributeCount;\n        } else {\n            this.m_indexAttribute = new THREE.BufferAttribute(\n                newIndexArray,\n                NUM_INDEX_VALUES_PER_VERTEX\n            );\n            this.m_indexAttribute.count = 0;\n            this.m_indexAttribute.setUsage(THREE.DynamicDrawUsage);\n        }\n\n        this.m_size = newSize;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Math2D, MathUtils } from \"@here/harp-utils\";\n\n/**\n * It returns an array containing the channel colors for the pixel at the given coordinates.\n *\n * @param xPos - X value of the pixel.\n * @param yPos - Y value of the pixel.\n * @param image - The image source.\n * @param canvas - Canvas element that will be used to draw the image, in case the imageData is an\n * ImageBitmap\n */\nexport function getPixelFromImage(\n    xPos: number,\n    yPos: number,\n    image: CanvasImageSource | ImageData,\n    canvas?: HTMLCanvasElement\n): Uint8ClampedArray | undefined {\n    if (image instanceof ImageData) {\n        const stride = image.data.length / (image.height * image.width);\n        return getPixelFromImageData(image, xPos, yPos, stride);\n    }\n\n    if (!canvas) {\n        canvas = document.createElement(\"canvas\");\n    }\n    return getPixelFromCanvasImageSource(image, xPos, yPos, canvas);\n}\n\n/**\n * Given the x and y position in screen coordinates inside the target box, it map them to the UV\n * coordinates.\n * @param screenX - X value in screen coordinates.\n * @param screenY - Y value in screen coordinates.\n * @param box - Bounding box in screen coordinates.\n * @param uvBox - Uv box referred to the given bounding box.\n */\nexport function screenToUvCoordinates(\n    screenX: number,\n    screenY: number,\n    box: Math2D.Box,\n    uvBox: Math2D.UvBox\n): { u: number; v: number } {\n    const minX = box.x;\n    const maxX = box.x + box.w;\n    const minY = box.y;\n    const maxY = box.y + box.h;\n    const u = MathUtils.map(screenX, minX, maxX, uvBox.s0, uvBox.s1);\n    const v = MathUtils.map(screenY, minY, maxY, uvBox.t0, uvBox.t1);\n\n    return { u, v };\n}\n\n/**\n * It returns an Uint8ClampedArray containing the color channel values for the given pixel\n * coordinates. It returns undefined if the given coordinates are out of range.\n *\n * @param image - Image source.\n * @param xPos - X value of the pixel.\n * @param yPos - Y value of the pixel.\n * @param canvas - HTML Canvas element on which the image is drawn.\n */\nexport function getPixelFromCanvasImageSource(\n    image: CanvasImageSource,\n    xPos: number,\n    yPos: number,\n    canvas: HTMLCanvasElement\n): Uint8ClampedArray | undefined {\n    const { width, height } = image instanceof SVGImageElement ? image.getBBox() : image;\n\n    if (xPos > width || xPos < 0 || yPos > height || yPos < 0) {\n        return undefined;\n    }\n\n    let pixelData;\n\n    canvas.width = width;\n    canvas.height = height;\n\n    const context = canvas.getContext(\"2d\");\n    if (context !== null) {\n        context.drawImage(image, 0, 0);\n        pixelData = context.getImageData(xPos, yPos, 1, 1).data;\n    }\n    return pixelData;\n}\n\n/**\n * It returns an Uint8ClampedArray containing the color channel values for the given pixel\n * coordinates. It returns undefined if the given coordinates are out of range.\n *\n * @param image - Image data in which the pixels are stored.\n * @param xPos - X value of the pixel.\n * @param yPos - Y value of the pixel.\n * @param stride - The stride value of the image data.\n */\nexport function getPixelFromImageData(\n    imgData: ImageData,\n    xPos: number,\n    yPos: number,\n    stride: number\n): Uint8ClampedArray | undefined {\n    const getPixel = (imageData: ImageData, index: number, strd: number) => {\n        const i = index * strd;\n        const d = imageData.data;\n        const pixel = new Uint8ClampedArray(strd);\n        for (let s = 0; s < strd; s++) {\n            pixel[0] = d[i + s];\n        }\n        return pixel;\n    };\n    if (xPos > imgData.width || xPos < 0 || yPos > imgData.height || yPos < 0) {\n        return undefined;\n    }\n    return getPixel(imgData, yPos * imgData.width + xPos, stride);\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    composeTechniqueTextureName,\n    Env,\n    getPropertyValue,\n    IndexedTechniqueParams,\n    LineMarkerTechnique,\n    MapEnv,\n    PoiTechnique\n} from \"@here/harp-datasource-protocol\";\nimport { assert, LoggerManager } from \"@here/harp-utils\";\n\nimport { ColorCache } from \"../ColorCache\";\nimport { PoiInfo, TextElement } from \"../text/TextElement\";\n\nconst logger = LoggerManager.instance.create(\"PoiBuilder\");\n\nfunction getImageTexture(technique: PoiTechnique | LineMarkerTechnique, env: MapEnv | Env) {\n    return technique.imageTexture !== undefined\n        ? composeTechniqueTextureName(getPropertyValue(technique.imageTexture, env), technique)\n        : undefined;\n}\n\n/**\n * Constructs {@link PoiInfo} objects from {@link @here/harp-datasource-protocol/Technique} and\n * an icon.\n */\nexport class PoiBuilder {\n    private m_iconMinZoomLevel?: number;\n    private m_iconMaxZoomLevel?: number;\n    private m_textMinZoomLevel?: number;\n    private m_textMaxZoomLevel?: number;\n    private m_technique?: (PoiTechnique | LineMarkerTechnique) & IndexedTechniqueParams;\n    private m_imageTextureName?: string;\n    private m_shieldGroupIndex?: number;\n\n    /**\n     * Constructor\n     *\n     * @param m_env - The {@link @link @here/harp-datasource-protocol#MapEnv} used to evaluate\n     * technique properties.\n     */\n    constructor(private readonly m_env: MapEnv | Env) {}\n\n    /**\n     * Sets a technique that will be used to create PoiInfos on subsequent calls to\n     * {@link PoiBuilder.build} until the next call to this method.\n     *\n     * @param technique - The {@link @here/harp-datasource-protocol/Technique}.\n     * @return This builder.\n     */\n    withTechnique(technique: (PoiTechnique | LineMarkerTechnique) & IndexedTechniqueParams): this {\n        this.m_imageTextureName = getImageTexture(technique, this.m_env);\n\n        this.m_iconMinZoomLevel =\n            getPropertyValue(technique.iconMinZoomLevel ?? technique.minZoomLevel, this.m_env) ??\n            undefined;\n        this.m_iconMaxZoomLevel =\n            getPropertyValue(technique.iconMaxZoomLevel ?? technique.maxZoomLevel, this.m_env) ??\n            undefined;\n        this.m_textMinZoomLevel =\n            getPropertyValue(technique.textMinZoomLevel ?? technique.minZoomLevel, this.m_env) ??\n            undefined;\n        this.m_textMaxZoomLevel =\n            getPropertyValue(technique.textMaxZoomLevel ?? technique.maxZoomLevel, this.m_env) ??\n            undefined;\n\n        this.m_technique = technique;\n        return this;\n    }\n\n    /**\n     * Sets an icon that will be used to create PoiInfos on subsequent calls to\n     * {@link PoiBuilder.build} until the next call to this method.\n     *\n     * @param imageTextureName - The name of the icon image. If undefined, the image defined by the\n     * technique set on the last call to {@link PoiBuilder.withTechnique} wil be used.\n     * @param shieldGroupIndex - Index to a shield group if the icon belongs to one.\n     * @return This builder.\n     */\n    withIcon(imageTextureName?: string, shieldGroupIndex?: number): this {\n        if (imageTextureName !== undefined) {\n            this.m_imageTextureName = imageTextureName;\n        }\n        this.m_shieldGroupIndex = shieldGroupIndex;\n        return this;\n    }\n\n    /**\n     * Creates a {@link PoiInfo} for the given {@link TextElement}.\n     *\n     * @param textElement - The text element the poi info will be attached to.\n     * @return The created PoiInfo or undefined if no icon image was set for it.\n     */\n    build(textElement: TextElement): PoiInfo | undefined {\n        assert(this.m_technique !== undefined);\n        const technique = this.m_technique!;\n        const env = this.m_env;\n        const imageTextureName = this.m_imageTextureName;\n\n        // The POI name to be used is taken from the data, since it will\n        // specify the name of the texture to use.\n\n        // The POI name in the technique may override the POI name from the\n        // data.\n        const poiName =\n            technique.poiTable !== undefined ? technique.poiName ?? imageTextureName : undefined;\n\n        if (imageTextureName !== undefined && poiName !== undefined) {\n            logger.warn(\n                \"Possible duplicate POI icon definition via imageTextureName and poiTable!\"\n            );\n        }\n\n        if (imageTextureName === undefined && poiName === undefined) {\n            textElement.minZoomLevel = textElement.minZoomLevel ?? this.m_textMinZoomLevel;\n            textElement.maxZoomLevel = textElement.maxZoomLevel ?? this.m_textMaxZoomLevel;\n\n            return undefined;\n        }\n\n        const textIsOptional = technique.textIsOptional === true;\n        const iconIsOptional = technique.iconIsOptional === true;\n        const renderTextDuringMovements = !(technique.renderTextDuringMovements === false);\n        const iconMayOverlap = technique.iconMayOverlap ?? technique.textMayOverlap;\n\n        const iconReserveSpace = technique.iconReserveSpace ?? technique.textReserveSpace;\n        const iconColorRaw = getPropertyValue(technique.iconColor, env);\n        const iconColor =\n            iconColorRaw !== null ? ColorCache.instance.getColor(iconColorRaw) : undefined;\n\n        const poiInfo = {\n            technique,\n            imageTextureName,\n            poiTableName: technique.poiTable,\n            poiName,\n            shieldGroupIndex: this.m_shieldGroupIndex,\n            textElement,\n            textIsOptional,\n            iconIsOptional,\n            renderTextDuringMovements,\n            mayOverlap: iconMayOverlap,\n            reserveSpace: iconReserveSpace,\n            iconBrightness: technique.iconBrightness,\n            iconColor,\n            iconMinZoomLevel: this.m_iconMinZoomLevel,\n            iconMaxZoomLevel: this.m_iconMaxZoomLevel,\n            textMinZoomLevel: this.m_textMinZoomLevel,\n            textMaxZoomLevel: this.m_textMaxZoomLevel\n        };\n\n        return poiInfo;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    AttributeMap,\n    composeTechniqueTextureName,\n    DecodedTile,\n    ImageTexture,\n    IndexedTechnique,\n    isLineMarkerTechnique,\n    isPoiTechnique,\n    MapEnv,\n    PoiGeometry\n} from \"@here/harp-datasource-protocol\";\nimport { assert, assertExists, LoggerManager } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { MapView } from \"../MapView\";\nimport { TextElement } from \"../text/TextElement\";\nimport { TextElementBuilder } from \"../text/TextElementBuilder\";\nimport { Tile } from \"../Tile\";\nimport { PoiTable } from \"./PoiTableManager\";\n\nconst logger = LoggerManager.instance.create(\"PoiManager\");\n\n/**\n * Interface for the {@link @here/harp-datasource-protocol#ImageTexture}s\n * that are defined in the atlas.\n */\ninterface ImageTextureDef {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    pixelRatio?: number;\n}\n\nfunction getImageTexture(poiGeometry: PoiGeometry, index: number = 0): string | undefined {\n    if (poiGeometry.imageTextures) {\n        const textureNameIndex = poiGeometry.imageTextures[index];\n        if (textureNameIndex >= 0) {\n            assert(poiGeometry.imageTextures.length > index);\n            return poiGeometry.stringCatalog[textureNameIndex];\n        }\n    }\n    return undefined;\n}\n\nfunction getAttributes(poiGeometry: PoiGeometry, index: number = 0): AttributeMap | undefined {\n    return poiGeometry.objInfos ? poiGeometry.objInfos[index] : undefined;\n}\n\nfunction getPosition(\n    positionAttribute: THREE.BufferAttribute,\n    worldOffsetX: number,\n    index: number = 0\n): THREE.Vector3 {\n    const position = new THREE.Vector3().fromBufferAttribute(positionAttribute, index);\n    position.x += worldOffsetX;\n    return position;\n}\n\nfunction getText(poiGeometry: PoiGeometry, index: number = 0): string {\n    assert(poiGeometry.texts.length > index);\n    const stringIndex = poiGeometry.texts[index];\n    assert(poiGeometry.stringCatalog.length > stringIndex);\n    return poiGeometry.stringCatalog[stringIndex] ?? \"\";\n}\n\n/**\n * POI manager class, responsible for loading the\n * {@link @here/harp-datasource-protocol#PoiGeometry} objects\n * from the {@link @here/harp-datasource-protocol#DecodedTile},\n * and preparing them for rendering.\n *\n * @remarks\n * Also loads and manages the texture atlases for the icons.\n */\nexport class PoiManager {\n    // Keep track of the missing POI table names, but only warn once.\n    private static readonly m_missingPoiTableName: Map<string, boolean> = new Map();\n    private static readonly m_missingPoiName: Map<string, boolean> = new Map();\n\n    /**\n     * Warn about a missing POI table name, but only once.\n     * @param poiTableName - POI mapping table name.\n     * @param poiTable - POI table instance.\n     */\n    private static notifyMissingPoiTable(\n        poiTableName: string,\n        poiTable: PoiTable | undefined\n    ): void {\n        if (poiTableName === undefined) {\n            poiTableName = \"undefined\";\n        }\n        if (PoiManager.m_missingPoiTableName.get(poiTableName) === undefined) {\n            PoiManager.m_missingPoiTableName.set(poiTableName, true);\n            if (poiTable !== undefined && !poiTable.loadedOk) {\n                logger.error(`updatePoiFromPoiTable: Could not load POI table '${poiTableName}'!`);\n            } else {\n                logger.error(\n                    `updatePoiFromPoiTable: No POI table with name '${poiTableName}' found!`\n                );\n            }\n        }\n    }\n\n    /**\n     * Warn about a missing POI name, but only once.\n     * @param poiName - name of POI.\n     * @param poiTableName - POI mapping table name.\n     */\n    private static notifyMissingPoi(poiName: string, poiTableName: string): void {\n        if (poiName === undefined) {\n            poiName = \"undefined\";\n        }\n        const key: string = `${poiTableName}[${poiName}]`;\n        if (PoiManager.m_missingPoiName.get(key) === undefined) {\n            PoiManager.m_missingPoiName.set(key, true);\n            logger.warn(\n                `updatePoiFromPoiTable: ` +\n                    `Cannot find POI info for '${poiName}' in table '${poiTableName}'.`\n            );\n        }\n    }\n\n    private readonly m_imageTextures: Map<string, ImageTexture> = new Map();\n    private readonly m_poiShieldGroups: Map<string, number> = new Map();\n\n    /**\n     * The constructor of the `PoiManager`.\n     *\n     * @param mapView - The {@link MapView} instance that should display the POIs.\n     */\n    constructor(readonly mapView: MapView) {}\n\n    /**\n     * Add all POIs from a decoded tile and store them as {@link TextElement}s in the {@link Tile}.\n     *\n     * Also handles LineMarkers, which is a recurring marker along a line (road).\n     *\n     * @param tile - Tile to add POIs to.\n     * @param decodedTile - DecodedTile containing the raw\n     *                      {@link @here/harp-datasource-protocol#PoiGeometry}\n     *                      objects describing the POIs.\n     */\n    addPois(tile: Tile, decodedTile: DecodedTile): void {\n        const poiGeometries = assertExists(decodedTile.poiGeometries);\n        const worldOffsetX = tile.computeWorldOffsetX();\n\n        const mapView = tile.mapView;\n        const discreteZoomLevel = Math.floor(mapView.zoomLevel);\n        const intZoomEnv = new MapEnv({ $zoom: discreteZoomLevel }, mapView.env);\n        const poiBuilder = new TextElementBuilder(\n            intZoomEnv,\n            tile.textStyleCache,\n            tile.dataSource.dataSourceOrder\n        );\n\n        for (const poiGeometry of poiGeometries) {\n            assert(poiGeometry.technique !== undefined);\n            const techniqueIndex = assertExists(poiGeometry.technique);\n            const technique = decodedTile.techniques[techniqueIndex] as IndexedTechnique;\n\n            if (\n                technique._kindState === false ||\n                (!isLineMarkerTechnique(technique) && !isPoiTechnique(technique))\n            ) {\n                continue;\n            }\n\n            if (technique.showOnMap === false) {\n                continue;\n            }\n\n            const positions = new THREE.BufferAttribute(\n                new Float64Array(poiGeometry.positions.buffer),\n                poiGeometry.positions.itemCount\n            );\n\n            poiBuilder.withTechnique(technique);\n\n            if (isLineMarkerTechnique(technique) && positions.count > 0) {\n                this.addLineMarker(poiBuilder, tile, poiGeometry, positions, worldOffsetX);\n            } else if (isPoiTechnique(technique)) {\n                this.addPoi(poiBuilder, tile, poiGeometry, positions, worldOffsetX);\n            }\n        }\n    }\n\n    /**\n     * Load the texture atlas that defines the segments of the texture that should be used for\n     * specific icons.\n     *\n     * @remarks\n     * Creates an {@link @here/harp-datasource-protocol#ImageTexture}\n     * for every element in the atlas, such that it can\n     * be addressed in the theme file.\n     *\n     * @param imageName - Name of the image from the theme (NOT the url!).\n     * @param atlas - URL of the JSON file defining the texture atlas.\n     * @param abortSignal - Signal to Abort the loading of the Atlas Image\n     */\n    async addTextureAtlas(imageName: string, atlas: string, abortSignal?: AbortSignal) {\n        const response = await fetch(atlas, { signal: abortSignal });\n        if (!response.ok) {\n            throw new Error(`addTextureAtlas: Cannot load textureAtlas: ${response.statusText}`);\n        }\n        try {\n            const jsonAtlas: any | undefined = await response.json();\n\n            if (jsonAtlas === undefined) {\n                logger.info(`addTextureAtlas: TextureAtlas empty: ${atlas}`);\n                return;\n            }\n\n            logger.debug(\n                `addTextureAtlas: Loading textureAtlas '${atlas}' for image '${imageName}'`\n            );\n            for (const textureName of Object.getOwnPropertyNames(jsonAtlas)) {\n                const imageTextureDef = jsonAtlas[textureName] as ImageTextureDef;\n\n                const imageTexture: ImageTexture = {\n                    name: textureName,\n                    image: imageName,\n                    xOffset: imageTextureDef.x,\n                    yOffset: imageTextureDef.y,\n                    width: imageTextureDef.width,\n                    height: imageTextureDef.height\n                };\n\n                this.addImageTexture(imageTexture);\n            }\n            this.mapView.update();\n        } catch (error) {\n            logger.error(`addTextureAtlas: Failed to load textureAtlas '${atlas}' : ${error}`);\n        }\n    }\n\n    /**\n     * Add an {@link @here/harp-datasource-protocol#ImageTexture} such that it\n     * is available as a named entity for techniques in theme files.\n     *\n     * @param imageTexture - {@link @here/harp-datasource-protocol#ImageTexture}\n     *                       that should be available for POIs.\n     */\n    addImageTexture(imageTexture: ImageTexture) {\n        if (imageTexture.name === undefined) {\n            logger.error(\"addImageTexture: Name required\", imageTexture);\n            return;\n        }\n        if (this.m_imageTextures.get(imageTexture.name) !== undefined) {\n            logger.warn(\n                `addImageTexture: Name already used: ${imageTexture.name}` + ` (overriding it)`\n            );\n        }\n\n        this.m_imageTextures.set(imageTexture.name, imageTexture);\n    }\n\n    /**\n     * Return the {@link @here/harp-datasource-protocol#ImageTexture}\n     * registered under the specified name.\n     *\n     * @param name - Name of the {@link @here/harp-datasource-protocol#ImageTexture}.\n     */\n    getImageTexture(name: string): ImageTexture | undefined {\n        return this.m_imageTextures.get(name);\n    }\n\n    /**\n     * Update the {@link TextElement} with the information taken from the {@link PoiTable} which is\n     * referenced in the {@link PoiInfo} of the pointLabel.\n     *\n     * If the requested {@link PoiTable} is not available yet, the function returns `false`.\n     * If the {@link PoiTable} is not defined, or if the references POI has no entry in\n     * the {@link PoiTable}, no action is taken, and the function returns `false`.\n     *\n     * If the {@link PoiTable} has been processed, it returns `true`, indicating that this function\n     * doesn't have to be called again.\n     *\n     * @param pointLabel - The {@link TextElement} to update.\n     *\n     * @returns `true` if the {@link PoiTable} has been processed, and the\n     *          function does not have to be called again.\n     */\n    updatePoiFromPoiTable(pointLabel: TextElement): boolean {\n        const poiInfo = pointLabel.poiInfo;\n        // PoiTable requires poiName to be defined otherwise mapping via PoiTable is\n        // not possible, such as table key is not defined.\n        if (!poiInfo || poiInfo.poiTableName === undefined || poiInfo.poiName === undefined) {\n            return true;\n        }\n\n        // Try to acquire PoiTable\n        const poiTableName = poiInfo.poiTableName;\n        const poiTable = this.mapView.poiTableManager.getPoiTable(poiTableName);\n\n        // Check if PoiTable is found, but its still loading.\n        if (poiTable && poiTable.isLoading) {\n            // The PoiTable is still loading, we have to try again.\n            return false;\n        }\n\n        // Remove poiTableName to mark this POI as processed.\n        poiInfo.poiTableName = undefined;\n\n        // PoiTable not found or can not be loaded.\n        if (!poiTable || !poiTable.loadedOk) {\n            PoiManager.notifyMissingPoiTable(poiTableName, poiTable);\n            return true;\n        }\n\n        // Try to acquire PoiTableEntry.\n        const poiName = poiInfo.poiName;\n        const poiTableEntry = poiTable.getEntry(poiName);\n        if (!poiTableEntry) {\n            PoiManager.notifyMissingPoi(poiName, poiTableName);\n            return true;\n        }\n\n        if (poiTableEntry.iconName !== undefined && poiTableEntry.iconName.length > 0) {\n            poiInfo.imageTextureName = composeTechniqueTextureName(\n                poiTableEntry.iconName,\n                poiInfo.technique\n            );\n        }\n\n        pointLabel.visible = poiTableEntry.visible ?? pointLabel.visible;\n        pointLabel.priority = poiTableEntry.priority ?? pointLabel.priority;\n        poiInfo.iconMinZoomLevel = poiTableEntry.iconMinLevel ?? poiInfo.iconMinZoomLevel;\n        poiInfo.iconMaxZoomLevel = poiTableEntry.iconMaxLevel ?? poiInfo.iconMaxZoomLevel;\n        poiInfo.textMinZoomLevel = poiTableEntry.textMinLevel ?? poiInfo.textMinZoomLevel;\n        poiInfo.textMaxZoomLevel = poiTableEntry.textMaxLevel ?? poiInfo.textMaxZoomLevel;\n\n        TextElementBuilder.alignZoomLevelRanges(pointLabel);\n\n        return true;\n    }\n\n    /**\n     * Clear internal state. Applicable when switching themes.\n     */\n    clear() {\n        this.m_imageTextures.clear();\n        this.m_poiShieldGroups.clear();\n    }\n\n    /**\n     * Add the LineMarker as a POI with multiple positions sharing the same `shieldGroupIndex`.\n     */\n    private addLineMarker(\n        poiBuilder: TextElementBuilder,\n        tile: Tile,\n        poiGeometry: PoiGeometry,\n        positions: THREE.BufferAttribute,\n        worldOffsetX: number\n    ) {\n        const text = getText(poiGeometry);\n        const imageTextureName = getImageTexture(poiGeometry);\n\n        // let the combined image texture name (name of image in atlas, not the URL) and\n        // text of the shield be the group key, at worst scenario it may be: \"undefined-\"\n        const groupKey = imageTextureName + \"-\" + text;\n        let shieldGroupIndex = this.m_poiShieldGroups.get(groupKey);\n        if (shieldGroupIndex === undefined) {\n            shieldGroupIndex = this.m_poiShieldGroups.size;\n            this.m_poiShieldGroups.set(groupKey, shieldGroupIndex);\n        }\n\n        const positionArray: THREE.Vector3[] = [];\n        for (let i = 0; i < positions.count; i += 3) {\n            positionArray.push(getPosition(positions, worldOffsetX, i));\n        }\n        const textElement = poiBuilder\n            .withIcon(imageTextureName, shieldGroupIndex)\n            .build(\n                text,\n                positionArray,\n                tile.offset,\n                tile.dataSource.name,\n                tile.dataSource.dataSourceOrder,\n                getAttributes(poiGeometry)\n            );\n\n        tile.addTextElement(textElement);\n    }\n\n    /**\n     * Create and add POI {@link TextElement}s to tile with a series of positions.\n     */\n    private addPoi(\n        poiBuilder: TextElementBuilder,\n        tile: Tile,\n        poiGeometry: PoiGeometry,\n        positions: THREE.BufferAttribute,\n        worldOffsetX: number\n    ) {\n        for (let i = 0; i < positions.count; ++i) {\n            const offsetDirection = poiGeometry.offsetDirections?.[i] ?? 0;\n\n            const textElement = poiBuilder\n                .withIcon(getImageTexture(poiGeometry, i))\n                .build(\n                    getText(poiGeometry, i),\n                    getPosition(positions, worldOffsetX, i),\n                    tile.offset,\n                    tile.dataSource.name,\n                    tile.dataSource.dataSourceOrder,\n                    getAttributes(poiGeometry, i),\n                    undefined,\n                    offsetDirection\n                );\n\n            tile.addTextElement(textElement);\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Env, getPropertyValue, ImageTexture } from \"@here/harp-datasource-protocol\";\nimport { IconMaterial } from \"@here/harp-materials\";\nimport { MemoryUsage } from \"@here/harp-text-canvas\";\nimport { assert, LoggerManager, Math2D } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { ImageItem } from \"../image/Image\";\nimport { MapViewImageCache } from \"../image/MapViewImageCache\";\nimport { MipMapGenerator } from \"../image/MipMapGenerator\";\nimport { ScreenCollisions } from \"../ScreenCollisions\";\nimport { PoiInfo, TextElement } from \"../text/TextElement\";\nimport { BoxBuffer } from \"./BoxBuffer\";\nimport { PoiManager } from \"./PoiManager\";\n\nconst logger = LoggerManager.instance.create(\"PoiRenderer\");\n\n/**\n * Neutral color used as `vColor` attribute of [[IconMaterial]] if no `iconColor` color was\n * specified.\n */\nconst neutralColor = new THREE.Color(1, 1, 1);\n\n/**\n * Temporary color instance used by `addPoi` to pass color derived from `iconBrightness` property.\n */\nconst tmpIconColor = new THREE.Color();\n\nexport interface PoiLayer {\n    id: number;\n    scene: THREE.Scene;\n}\n\n/**\n * @internal\n * Buffer for POIs sharing same material and render order, renderable in a single draw call\n * (WebGL limits apply, see {@link BoxBuffer}).\n */\nexport class PoiBuffer {\n    private m_refCount: number = 0;\n\n    /**\n     * Creates a `PoiBuffer`\n     * @param buffer -\n     * @param layer - The {@link TextCanvas} layer used to render the POIs.\n     */\n    constructor(\n        readonly buffer: BoxBuffer,\n        readonly layer: PoiLayer,\n        private readonly m_onDispose: () => void\n    ) {}\n\n    /**\n     * Increases this `PoiBuffer`'s reference count.\n     * @returns this `PoiBuffer`.\n     */\n    increaseRefCount(): PoiBuffer {\n        ++this.m_refCount;\n        return this;\n    }\n\n    /**\n     * Decreases this `PoiBuffer`'s reference count. All resources will be disposed when the\n     * reference count reaches 0.\n     * @returns this `PoiBuffer`.\n     */\n    decreaseRefCount(): PoiBuffer {\n        assert(this.m_refCount > 0);\n\n        if (--this.m_refCount === 0) {\n            this.dispose();\n        }\n        return this;\n    }\n\n    private dispose() {\n        this.layer.scene.remove(this.buffer.mesh);\n        this.buffer.dispose();\n        this.m_onDispose();\n    }\n}\n\n/**\n * @internal\n *\n * The `PoiBatch` contains the geometry and the material for all POIs that share the same icon image\n * ({@link @here/harp-datasource-protocol#ImageTexture}).\n *\n * There is a `PoiBatch` for every icon in a texture atlas, since the size of the icon in the atlas\n * as well as the texture coordinates are specified in the `PoiBatch`.\n */\nclass PoiBatch {\n    // Enable trilinear filtering to reduce flickering due to distance scaling\n    static readonly trilinear: boolean = true;\n\n    // Map of buffers and their corresponding canvas layers, with render order as key.\n    private readonly m_poiBuffers: Map<number, PoiBuffer>;\n\n    private readonly m_material: IconMaterial;\n\n    /**\n     * Create the `PoiBatch`.\n     *\n     * @param m_rendererCapabilities - The {@link THREE.WebGLCapabilities} used for material\n     * creation.\n     * @param imageItem - The icon that will have his material shared.\n     * @param m_onDispose - Callback executed when the `PoiBatch` is disposed.\n     */\n    constructor(\n        private readonly m_rendererCapabilities: THREE.WebGLCapabilities,\n        readonly imageItem: ImageItem,\n        private readonly m_onDispose: () => void\n    ) {\n        // Texture images should be generated with premultiplied alpha\n        const premultipliedAlpha = true;\n\n        const texture = new THREE.Texture(\n            this.imageItem.image as any,\n            THREE.UVMapping,\n            undefined,\n            undefined,\n            PoiBatch.trilinear ? THREE.LinearFilter : THREE.LinearFilter,\n            PoiBatch.trilinear ? THREE.LinearMipMapLinearFilter : THREE.LinearFilter,\n            THREE.RGBAFormat\n        );\n        if (PoiBatch.trilinear && this.imageItem.mipMaps) {\n            // Generate mipmaps for distance scaling of icon\n            texture.mipmaps = this.imageItem.mipMaps;\n            texture.image = texture.mipmaps[0];\n        }\n        texture.flipY = false;\n        texture.premultiplyAlpha = premultipliedAlpha;\n        texture.needsUpdate = true;\n\n        this.m_material = new IconMaterial({\n            rendererCapabilities: this.m_rendererCapabilities,\n            map: texture\n        });\n\n        this.m_poiBuffers = new Map();\n    }\n\n    /**\n     * Gets the {@link PoiBuffer} for a given layer, creating it if necessary.\n     * @param layer - The {@link PoiLayer} to be used.\n     * @returns The {@link PoiBuffer}.\n     */\n    getBuffer(layer: PoiLayer): PoiBuffer {\n        let poiBuffer = this.m_poiBuffers.get(layer.id);\n        if (poiBuffer) {\n            return poiBuffer.increaseRefCount();\n        }\n        const boxBuffer = new BoxBuffer(this.m_material, layer.id);\n        const mesh = boxBuffer.mesh;\n        mesh.frustumCulled = false;\n\n        layer.scene.add(mesh);\n\n        poiBuffer = new PoiBuffer(boxBuffer, layer, () => {\n            this.disposeBuffer(layer.id);\n        });\n        this.m_poiBuffers.set(layer.id, poiBuffer);\n\n        return poiBuffer.increaseRefCount();\n    }\n\n    /**\n     * Clean the `PoiBatch`, remove all icon boxes. Called before starting a new frame.\n     */\n    reset(): void {\n        for (const poiBuffer of this.m_poiBuffers.values()) {\n            poiBuffer.buffer.reset();\n        }\n    }\n\n    /**\n     * Update the geometry with all the added boxes during the frame.\n     */\n    update(): void {\n        for (const poiBuffer of this.m_poiBuffers.values()) {\n            poiBuffer.buffer.updateBufferGeometry();\n        }\n    }\n\n    /**\n     * Fill the picking results for the pixel with the given screen coordinate. If multiple\n     * boxes are found, the order of the results is unspecified.\n     *\n     * @param screenPosition - Screen coordinate of picking position.\n     * @param pickCallback - Callback to be called for every picked element.\n     * @param image - Image to test if the pixel is transparent\n     */\n    pickBoxes(\n        screenPosition: THREE.Vector2,\n        pickCallback: (pickData: any | undefined) => void,\n        image?: CanvasImageSource | ImageData\n    ) {\n        for (const poiBuffer of this.m_poiBuffers.values()) {\n            poiBuffer.buffer.pickBoxes(screenPosition, pickCallback, image);\n        }\n    }\n\n    /**\n     * Update the info with the memory footprint caused by objects owned by the `PoiBatch`.\n     *\n     * @param info - The info object to increment with the values from this `PoiBatch`.\n     */\n    updateMemoryUsage(info: MemoryUsage) {\n        if (this.imageItem.image !== undefined) {\n            const imageBytes = this.imageItem.image.width * this.imageItem.image.height * 4;\n            info.heapSize += imageBytes;\n            info.gpuSize += imageBytes;\n        }\n        for (const poiBuffer of this.m_poiBuffers.values()) {\n            poiBuffer.buffer.updateMemoryUsage(info);\n        }\n    }\n\n    private dispose() {\n        this.m_poiBuffers.clear();\n        this.m_material.map.dispose();\n        this.m_material.dispose();\n        this.m_onDispose();\n    }\n\n    private disposeBuffer(renderOrder: number) {\n        assert(this.m_poiBuffers.size > 0);\n\n        this.m_poiBuffers.delete(renderOrder);\n        if (this.m_poiBuffers.size === 0) {\n            this.dispose();\n        }\n    }\n}\n\n/**\n * @internal\n * Contains all [[PoiBatch]]es. Selects (and initializes) the correct batch for a POI.\n */\nexport class PoiBatchRegistry {\n    private readonly m_batchMap: Map<string, PoiBatch> = new Map();\n\n    /**\n     * Create the `PoiBatchRegistry`.\n     *\n     * @param m_rendererCapabilities - The {@link THREE.WebGLCapabilities} to be used.\n     */\n    constructor(private readonly m_rendererCapabilities: THREE.WebGLCapabilities) {}\n\n    /**\n     * Register the POI and prepare the [[PoiBatch]] for the POI at first usage.\n     *\n     * @param poiInfo - Describes the POI icon.\n     * @param layer - The {@link PoiLayer} to render to.\n     */\n    registerPoi(poiInfo: PoiInfo, layer: PoiLayer): PoiBuffer | undefined {\n        const { imageItem, imageTexture } = poiInfo;\n\n        if (!imageItem) {\n            // No image found, therefore just return undefined. It will probably come in soon?\n            return undefined;\n        }\n\n        // There is a batch for every ImageDefinition, which could be a texture atlas with many\n        // ImageTextures in it. If the imageTexture is not set, imageTextureName has the actual\n        // image name.\n        assert(poiInfo.imageTextureName !== undefined);\n        const batchKey = imageTexture?.image ?? poiInfo.imageTextureName!;\n        let batch = this.m_batchMap.get(batchKey);\n\n        if (batch === undefined) {\n            batch = new PoiBatch(this.m_rendererCapabilities, imageItem, () => {\n                this.deleteBatch(batchKey);\n            });\n            this.m_batchMap.set(batchKey, batch);\n        }\n\n        return batch.getBuffer(layer);\n    }\n\n    /**\n     * Render a POI image at the specified location.\n     *\n     * @param poiInfo - PoiInfo containing information for rendering the POI icon.\n     * @param screenBox - Box to render icon into in 2D coordinates.\n     * @param viewDistance - Box's distance to camera.\n     * @param opacity - Opacity of icon to allow fade in/out.\n     */\n    addPoi(poiInfo: PoiInfo, screenBox: Math2D.Box, viewDistance: number, opacity: number) {\n        if (poiInfo.isValid === false || !poiInfo.buffer) {\n            logger.warn(\n                \"PoiBatchRegistry: trying to add poiInfo without buffer prepared: \",\n                poiInfo.poiName\n            );\n            return;\n        }\n        assert(poiInfo.uvBox !== undefined);\n\n        let color: THREE.Color;\n        if (poiInfo.iconBrightness !== undefined) {\n            color = tmpIconColor.setScalar(poiInfo.iconBrightness);\n            if (poiInfo.iconColor !== undefined) {\n                color = tmpIconColor.multiply(poiInfo.iconColor);\n            }\n        } else if (poiInfo.iconColor !== undefined) {\n            color = poiInfo.iconColor;\n        } else {\n            color = neutralColor;\n        }\n        poiInfo.buffer.buffer.addBox(\n            screenBox,\n            poiInfo.uvBox!,\n            color,\n            opacity,\n            viewDistance,\n            poiInfo.textElement\n        );\n    }\n\n    /**\n     * Reset all batches, removing all content from the [[PoiBatch]]es. Called at the\n     * beginning of a frame before the POIs are placed.\n     */\n    reset(): void {\n        for (const batch of this.m_batchMap.values()) {\n            batch.reset();\n        }\n    }\n\n    /**\n     * Update the geometry of all [[PoiBatch]]es. Called before rendering.\n     */\n    update(): void {\n        for (const batch of this.m_batchMap.values()) {\n            batch.update();\n        }\n    }\n\n    /**\n     * Fill the picking results for the pixel with the given screen coordinate. If multiple\n     * {@link PoiInfo}s are found, the order of the results is unspecified.\n     *\n     * @param screenPosition - Screen coordinate of picking position.\n     * @param pickCallback - Callback to be called for every picked element.\n     */\n    pickTextElements(\n        screenPosition: THREE.Vector2,\n        pickCallback: (pickData: any | undefined) => void\n    ) {\n        for (const batch of this.m_batchMap.values()) {\n            batch.pickBoxes(screenPosition, pickCallback, batch.imageItem.image);\n        }\n    }\n\n    /**\n     * Update the info with the memory footprint caused by objects owned by the `PoiBatchRegistry`.\n     *\n     * @param info - The info object to increment with the values from this `PoiBatchRegistry`.\n     */\n    updateMemoryUsage(info: MemoryUsage) {\n        for (const batch of this.m_batchMap.values()) {\n            batch.updateMemoryUsage(info);\n        }\n    }\n\n    private deleteBatch(batchKey: string) {\n        this.m_batchMap.delete(batchKey);\n    }\n}\n\n// keep track of the missing textures, we throw an error if the number of attempts goes over some\n// threshold.\nconst missingTextureName: Map<string, number> = new Map();\nconst SEARCH_CACHE_ATTEMPTS = 5;\n\nfunction findImageItem(\n    poiInfo: PoiInfo,\n    imageCaches: MapViewImageCache[],\n    imageTexture?: ImageTexture\n): ImageItem | undefined {\n    assert(poiInfo.imageTextureName !== undefined);\n    const imageTextureName = imageTexture ? imageTexture.image : poiInfo.imageTextureName!;\n\n    for (const imageCache of imageCaches) {\n        const imageItem = imageCache.findImageByName(imageTextureName);\n        if (imageItem) {\n            missingTextureName.delete(imageTextureName);\n            return imageItem;\n        }\n    }\n\n    // There is a texture missing in the cache, we attempt again, and then error out.\n    const missingTextureCount = missingTextureName.get(imageTextureName);\n    missingTextureName.set(imageTextureName, missingTextureCount ? missingTextureCount + 1 : 0);\n    if (missingTextureName.get(imageTextureName)! === SEARCH_CACHE_ATTEMPTS) {\n        logger.error(`PoiRenderer::findImageItem: No imageItem found with name:\n            '${imageTexture?.image ?? imageTextureName}'\n            after ${SEARCH_CACHE_ATTEMPTS} attempts.`);\n    }\n    return undefined;\n}\n\n/**\n * @internal\n * Manage POI rendering. Uses a [[PoiBatchRegistry]] to actually create the geometry that is being\n * rendered.\n */\nexport class PoiRenderer {\n    /**\n     * Compute screen box for icon. It is required that `prepareRender` has been successfully called\n     * before `computeScreenBox` may be called.\n     *\n     * @param poiInfo - PoiInfo containing information for rendering the POI icon.\n     * @param screenPosition - Position on screen (2D).\n     * @param scale - Scale to apply to icon.\n     * @param env - Current zoom level.\n     * @param screenBox - Box that will be used to store the result.\n     * @returns The computed screen box for the icon.\n     */\n    static computeIconScreenBox(\n        poiInfo: PoiInfo,\n        screenPosition: THREE.Vector2,\n        scale: number,\n        env: Env,\n        /* out */ screenBox: Math2D.Box = new Math2D.Box()\n    ): Math2D.Box {\n        assert(poiInfo.buffer !== undefined);\n\n        const width = poiInfo.computedWidth! * scale;\n        const height = poiInfo.computedHeight! * scale;\n        const technique = poiInfo.technique;\n        const iconXOffset = getPropertyValue(technique.iconXOffset, env);\n        const iconYOffset = getPropertyValue(technique.iconYOffset, env);\n\n        const centerX =\n            screenPosition.x + (typeof iconXOffset === \"number\" ? iconXOffset : 0) * scale;\n        const centerY =\n            screenPosition.y + (typeof iconYOffset === \"number\" ? iconYOffset : 0) * scale;\n\n        screenBox.x = centerX - width / 2;\n        screenBox.y = centerY - height / 2;\n        screenBox.w = width;\n        screenBox.h = height;\n\n        return screenBox;\n    }\n\n    // the render buffer containing all batches, one batch per texture/material.\n    private readonly m_poiBatchRegistry: PoiBatchRegistry;\n\n    // temporary variable to save allocations\n    private readonly m_tempScreenBox = new Math2D.Box();\n\n    private readonly m_layers: PoiLayer[] = [];\n\n    /**\n     * Create the `PoiRenderer` for the specified {@link MapView}.\n     *\n     * @param m_renderer - The {@link THREE.WebGLRenderer} to be rendered to.\n     * @param m_poiManager - The {@link PoiManager} to be used.\n     * @param m_imageCaches - The {@link ImageCache}s to look for loaded images.\n     */\n    constructor(\n        private readonly m_renderer: THREE.WebGLRenderer,\n        private readonly m_poiManager: PoiManager,\n        private readonly m_imageCaches: MapViewImageCache[]\n    ) {\n        this.m_poiBatchRegistry = new PoiBatchRegistry(this.renderer.capabilities);\n    }\n\n    get renderer(): THREE.WebGLRenderer {\n        return this.m_renderer;\n    }\n\n    /**\n     * Prepare the POI for rendering, and determine which {@link PoiBuffer} should be used. If a\n     * {@link PoiBuffer} is assigned, the POI is ready to be rendered.\n     *\n     * @param pointLabel - TextElement with PoiInfo for rendering the POI icon.\n     * @param env - TODO! The current zoomLevel level of {@link MapView}\n     *\n     * @returns `True` if the space is not already allocated by another object (text label or POI)\n     */\n    prepareRender(pointLabel: TextElement, env: Env): boolean {\n        const poiInfo = pointLabel.poiInfo;\n        if (poiInfo === undefined) {\n            return false;\n        }\n        if (poiInfo.buffer === undefined) {\n            this.preparePoi(pointLabel, env);\n        }\n        return poiInfo.buffer !== undefined;\n    }\n\n    /**\n     * Reset all batches, removing all content from the [[PoiBatchRegistry]]. Called at the\n     * beginning of a frame before the POIs are placed.\n     */\n    reset(): void {\n        this.m_poiBatchRegistry.reset();\n    }\n\n    /**\n     * Add the icon. Icon will only be added if opacity > 0, otherwise only its space will be\n     * allocated.\n     *\n     * @param poiInfo - PoiInfo containing information for rendering the POI icon.\n     * @param screenPosition - Position on screen (2D):\n     * @param screenCollisions - Object handling the collision checks for screen-aligned 2D boxes.\n     * @param viewDistance - Box's distance to camera.\n     * @param scale - Scaling factor to apply to text and icon.\n     * @param allocateScreenSpace - If `true` screen space will be allocated for the icon.\n     * @param opacity - Opacity of icon to allow fade in/out.\n     * @returns - `true` if icon has been actually rendered, `false` otherwise.\n     */\n    addPoi(\n        poiInfo: PoiInfo,\n        screenPosition: THREE.Vector2,\n        screenCollisions: ScreenCollisions,\n        viewDistance: number,\n        scale: number,\n        allocateScreenSpace: boolean,\n        opacity: number,\n        env: Env\n    ): void {\n        assert(poiInfo.buffer !== undefined);\n\n        PoiRenderer.computeIconScreenBox(poiInfo, screenPosition, scale, env, this.m_tempScreenBox);\n\n        if (allocateScreenSpace) {\n            screenCollisions.allocate(this.m_tempScreenBox);\n        }\n\n        if (opacity > 0) {\n            if (!poiInfo.buffer) {\n                this.preparePoi(poiInfo.textElement, env);\n            }\n            this.m_poiBatchRegistry.addPoi(poiInfo, this.m_tempScreenBox, viewDistance, opacity);\n        }\n    }\n\n    /**\n     * Update the geometry of all [[PoiBatch]]es. Called before rendering.\n     */\n    update(): void {\n        this.m_poiBatchRegistry.update();\n    }\n\n    /**\n     * @internal\n     *\n     * Adds a layer to the PoiRenderer\n     * @param layerId\n     */\n    addLayer(layerId: number): PoiLayer {\n        let result = this.getLayer(layerId);\n        if (result === undefined) {\n            result = {\n                id: layerId,\n                scene: new THREE.Scene()\n            };\n\n            this.m_layers.push(result);\n            this.m_layers.sort((a: PoiLayer, b: PoiLayer) => {\n                return a.id - b.id;\n            });\n        }\n        return result;\n    }\n\n    /**\n     * Retrieves a specific `Poi` rendering layer.\n     *\n     * @param layerId - Desired layer identifier.\n     *\n     * @returns Selected {@link PoiLayer}\n     */\n    private getLayer(layerId: number): PoiLayer | undefined {\n        return this.m_layers.find(layer => layer.id === layerId);\n    }\n\n    /**\n     * @internal\n     *\n     * Returns all {@link PoiLayer}s of this {@link PoiRenderer}\n     */\n    get layers(): PoiLayer[] {\n        return this.m_layers;\n    }\n\n    /**\n     * Renders the content of this `PoiRenderer`.\n     *\n     * @param camera - Orthographic camera.\n     * @param layer - The Layer to be rendered.\n     */\n    render(camera: THREE.OrthographicCamera, layer: PoiLayer) {\n        this.m_renderer.render(layer.scene, camera);\n    }\n\n    /**\n     * Fill the picking results for the pixel with the given screen coordinate. If multiple\n     * {@link PoiInfo}s are found, the order of the results is unspecified.\n     *\n     * @param screenPosition - Screen coordinate of picking position.\n     * @param pickCallback - Callback to be called for every picked element.\n     */\n    pickTextElements(\n        screenPosition: THREE.Vector2,\n        pickCallback: (pickData: any | undefined) => void\n    ) {\n        this.m_poiBatchRegistry.pickTextElements(screenPosition, pickCallback);\n    }\n\n    /**\n     * Update the info with the memory footprint caused by objects owned by the `PoiRenderer`.\n     *\n     * @param info - The info object to increment with the values from this `PoiRenderer`.\n     */\n    getMemoryUsage(info: MemoryUsage) {\n        this.m_poiBatchRegistry.updateMemoryUsage(info);\n    }\n\n    /**\n     * Register the POI at the [[PoiBatchRegistry]] which may require some setup, for example\n     * loading of the actual image.\n     */\n    private preparePoi(pointLabel: TextElement, env: Env): void {\n        const poiInfo = pointLabel.poiInfo;\n        if (!poiInfo || !pointLabel.visible) {\n            return;\n        }\n\n        if (poiInfo.buffer !== undefined || poiInfo.isValid === false) {\n            // Already set up, nothing to be done here.\n            return;\n        }\n\n        if (poiInfo.poiTableName !== undefined) {\n            if (this.m_poiManager.updatePoiFromPoiTable(pointLabel)) {\n                if (!pointLabel.visible) {\n                    // PoiTable set this POI to not visible.\n                    return;\n                }\n            } else {\n                // PoiTable has not been loaded, but is required to determine visibility.\n                return;\n            }\n        }\n\n        const imageTextureName = poiInfo.imageTextureName;\n        if (imageTextureName === undefined) {\n            poiInfo.isValid = false;\n            return;\n        }\n\n        const imageTexture = this.m_poiManager.getImageTexture(imageTextureName);\n        const imageItem = findImageItem(poiInfo, this.m_imageCaches, imageTexture);\n        if (!imageItem) {\n            poiInfo.imageItem = null;\n            return;\n        }\n\n        if (imageItem.loaded) {\n            this.setupPoiInfo(poiInfo, imageItem, env, imageTexture);\n            return;\n        }\n\n        if (imageItem.loading) {\n            // already being loaded, will be rendered once available\n            return;\n        }\n\n        imageItem\n            .loadImage()\n            .then(loadedImageItem => {\n                // Skip setup if image was not loaded (cancelled).\n                if (loadedImageItem?.image) {\n                    this.setupPoiInfo(poiInfo, loadedImageItem, env, imageTexture);\n                }\n            })\n            .catch(error => {\n                logger.error(`preparePoi: Failed to load imageItem: '${imageItem.url}`, error);\n                poiInfo.isValid = false;\n            });\n    }\n\n    /**\n     * Setup texture and material for the batch.\n     *\n     * @param poiInfo - {@link PoiInfo} to initialize.\n     * @param imageTexture - Shared {@link @here/harp-datasource-protocol#ImageTexture},\n     *                       defines used area in atlas.\n     * @param imageItem - Shared {@link ImageItem}, contains cached image for texture.\n     * @param env - The current zoom level of {@link MapView}\n     */\n    private setupPoiInfo(\n        poiInfo: PoiInfo,\n        imageItem: ImageItem,\n        env: Env,\n        imageTexture?: ImageTexture\n    ) {\n        assert(poiInfo.uvBox === undefined);\n\n        if (!imageItem.image) {\n            logger.error(\"setupPoiInfo: No imageItem/imageData found\");\n            poiInfo.isValid = false;\n            return;\n        }\n\n        const technique = poiInfo.technique;\n\n        const imageWidth = imageItem.image.width;\n        const imageHeight = imageItem.image.height;\n        const paddedSize = MipMapGenerator.getPaddedSize(imageWidth, imageHeight);\n        const trilinearFiltering = PoiBatch.trilinear && imageItem.mipMaps;\n        const paddedImageWidth = trilinearFiltering ? paddedSize.width : imageWidth;\n        const paddedImageHeight = trilinearFiltering ? paddedSize.height : imageHeight;\n\n        const iconWidth = imageTexture?.width !== undefined ? imageTexture.width : imageWidth;\n        const iconHeight = imageTexture?.height !== undefined ? imageTexture.height : imageHeight;\n\n        const width = imageTexture?.width !== undefined ? imageTexture.width : imageWidth;\n        const height = imageTexture?.height !== undefined ? imageTexture.height : imageHeight;\n        const xOffset = imageTexture?.xOffset !== undefined ? imageTexture.xOffset : 0;\n        const yOffset = imageTexture?.yOffset !== undefined ? imageTexture.yOffset : 0;\n\n        const minS = xOffset / paddedImageWidth;\n        const maxS = (xOffset + width) / paddedImageWidth;\n        const minT = yOffset / paddedImageHeight;\n        const maxT = (yOffset + height) / paddedImageHeight;\n\n        let iconScaleH = technique.iconScale !== undefined ? technique.iconScale : 1;\n        let iconScaleV = technique.iconScale !== undefined ? technique.iconScale : 1;\n\n        // By default, iconScaleV should be equal to iconScaleH, whatever is set in the style.\n        const screenWidth = getPropertyValue(technique.screenWidth, env);\n        if (screenWidth !== undefined && screenWidth !== null) {\n            iconScaleV = iconScaleH = screenWidth / iconWidth;\n        }\n\n        const screenHeight = getPropertyValue(technique.screenHeight, env);\n        if (screenHeight !== undefined && screenHeight !== null) {\n            iconScaleV = screenHeight / iconHeight;\n            if (screenWidth !== undefined) {\n                iconScaleH = iconScaleV;\n            }\n        }\n\n        // compute stored values in imageTexture\n        poiInfo.computedWidth = iconWidth * iconScaleH;\n        poiInfo.computedHeight = iconHeight * iconScaleV;\n        poiInfo.uvBox = {\n            s0: minS,\n            t0: maxT,\n            s1: maxS,\n            t1: minT\n        };\n        poiInfo.imageItem = imageItem;\n        poiInfo.imageTexture = imageTexture;\n        poiInfo.buffer = this.m_poiBatchRegistry.registerPoi(\n            poiInfo,\n            this.addLayer(poiInfo.renderOrder!)\n        );\n        poiInfo.isValid = true;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    PoiStackMode,\n    PoiTableDef,\n    PoiTableEntryDef,\n    PoiTableRef\n} from \"@here/harp-datasource-protocol\";\nimport { LoggerManager } from \"@here/harp-utils\";\n\nimport { MapView } from \"../MapView\";\n\nconst logger = LoggerManager.instance.create(\"PoiTable\");\n\n/**\n * Class to store and maintain individual POI information for the {@link PoiTable}.\n */\nclass PoiTableEntry implements PoiTableEntryDef {\n    /**\n     * Verify that the JSON description of the POI table entry is valid.\n     *\n     * @param jsonEntry - JSON description of the POI table entry.\n     *\n     * @returns `true` if the `jsonEntry` is valid.\n     */\n    static verifyJSON(jsonEntry: PoiTableEntryDef): boolean {\n        let isOK =\n            typeof jsonEntry.name === \"string\" &&\n            jsonEntry.name.length > 0 &&\n            (jsonEntry.altNames === undefined || Array.isArray(jsonEntry.altNames)) &&\n            (jsonEntry.stackMode === undefined ||\n                jsonEntry.stackMode === \"yes\" ||\n                jsonEntry.stackMode === \"no\" ||\n                jsonEntry.stackMode === \"parent\") &&\n            (jsonEntry.visible === undefined || typeof jsonEntry.visible === \"boolean\") &&\n            (jsonEntry.priority === undefined || typeof jsonEntry.priority === \"number\") &&\n            (jsonEntry.iconMinLevel === undefined || typeof jsonEntry.iconMinLevel === \"number\") &&\n            (jsonEntry.iconMaxLevel === undefined || typeof jsonEntry.iconMaxLevel === \"number\") &&\n            (jsonEntry.textMinLevel === undefined || typeof jsonEntry.textMinLevel === \"number\") &&\n            (jsonEntry.textMaxLevel === undefined || typeof jsonEntry.textMaxLevel === \"number\");\n\n        if (isOK && jsonEntry.altNames !== undefined) {\n            const altNames = jsonEntry.altNames as string[];\n            // eslint-disable-next-line @typescript-eslint/no-for-in-array\n            for (const str in altNames) {\n                if (typeof str !== \"string\") {\n                    isOK = false;\n                    break;\n                }\n            }\n        }\n\n        return isOK;\n    }\n\n    /** Default name of the POI as the key for looking it up. */\n    name?: string;\n    /** Alternative names of the POI. */\n    altNames?: string[];\n    /** Visibility of the POI. If `false`, the POI will not be rendered. */\n    visible?: boolean;\n    /** Name of the icon, defined in the the texture atlases. */\n    iconName?: string;\n    /** Stacking mode of the POI. For future use. */\n    stackMode?: PoiStackMode;\n    /**\n     * Priority of the POI to select the visible set in case there are more POIs than can be\n     * handled.\n     */\n    priority?: number;\n    /** Minimum zoom level to render the icon on. */\n    iconMinLevel?: number;\n    /** Maximum zoom level to render the icon on. */\n    iconMaxLevel?: number;\n    /** Minimum zoom level to render the text label on. */\n    textMinLevel?: number;\n    /** Maximum zoom level to render the text label on. */\n    textMaxLevel?: number;\n\n    /**\n     * Setup the [[PoiTableEntry]] from the JSON description. It is assumed that the jsonEntry has\n     * been verified with [[PoiTableEntry#verifyJSON]].\n     *\n     * @param jsonEntry - JSON description of the POI table entry. Expected to have been verified\n     *                    with [[PoiTableEntry#verifyJSON]].\n     */\n    setup(jsonEntry: PoiTableEntryDef) {\n        this.name = jsonEntry.name;\n        this.altNames = jsonEntry.altNames;\n        this.iconName = jsonEntry.iconName;\n        this.visible = jsonEntry.visible;\n        this.priority = jsonEntry.priority;\n        this.iconMinLevel = jsonEntry.iconMinLevel;\n        this.iconMaxLevel = jsonEntry.iconMaxLevel;\n        this.textMinLevel = jsonEntry.textMinLevel;\n        this.textMaxLevel = jsonEntry.textMaxLevel;\n\n        switch (jsonEntry.stackMode) {\n            case \"yes\":\n                this.stackMode = PoiStackMode.Show;\n                break;\n            case \"no\":\n                this.stackMode = PoiStackMode.Hide;\n                break;\n            case \"parent\":\n                this.stackMode = PoiStackMode.ShowParent;\n                break;\n            default:\n        }\n    }\n}\n\n/**\n * The `PoiTable` stores individual information for each POI type.\n *\n * @remarks\n * If a {@link TextElement} has a\n * reference to a PoiTable (if TextElement.poiInfo.poiTableName is set), information for the\n * TextElement and its icon are read from the PoiTable.\n *\n * The key to look up the POI is taken from the data, in case of OSM data with TileZen data, the\n * `poiNameField` is set to `kind`, which makes the content of the field `kind` in the data the key\n * to look up the POIs in the {@link PoiTable}.\n *\n * On the side of the {@link PoiTable}, the key to look up the PoiTableEntry is either the property\n * \"name\" of the [[PoiTableEntry]] (which should be unique), or the alternative list of names\n * `altNames`, where each value should also be unique. If the property `useAltNamesForKey` is set to\n * `true`, the `altNames` will be used.\n */\nexport class PoiTable {\n    /**\n     * Stores the list of [[PoiTableEntry]]s.\n     */\n    private readonly poiList: PoiTableEntry[] = new Array();\n    /**\n     * Dictionary to look up for [[PoiTableEntry]] quickly. The dictionary is either created for\n     * the `name` property of the [[PoiTableEntry]], which will identify POI, or for all of\n     * alternative the names defined in `altNames` of [[PoiTableEntry]] JSON object.\n     * Value assigned to key it is the index to [[poiList]] array which contain actual\n     * [[PoiTabelEntry]] objects.\n     */\n    private readonly poiDict: Map<string, number> = new Map();\n    private m_isLoading = false;\n    private m_loadedOk: boolean | undefined = undefined;\n\n    /**\n     * Creates an instance of PoiTable.\n     *\n     * @param {string} name Name of the `PoiTable`. Must be unique.\n     * @param {boolean} useAltNamesForKey Pass `true` to use the contents of the property `altNames`\n     *          to find a [[PoiTableEntry]] in the table.\n     */\n    constructor(readonly name: string, readonly useAltNamesForKey: boolean) {}\n\n    /**\n     * Returns `true` if the table is currently being loaded, `false` otherwise.\n     *\n     * @readonly\n     */\n    get isLoading(): boolean {\n        return this.m_isLoading;\n    }\n\n    /**\n     * Returns `true` if the table has been loaded correctly, `false` otherwise.\n     *\n     * @readonly\n     */\n    get loadedOk(): boolean {\n        return this.m_loadedOk === true;\n    }\n\n    /**\n     * Gets [[PoiTableEntry]] for poi name specified.\n     *\n     * @param poiName - poi name or one of its alternative names if [[useAltNamesForKey]] is\n     * set to `true`.\n     * @returns [[PoiTableEntry]] object or undefined if name was not found in dictionary.\n     */\n    getEntry(poiName: string): PoiTableEntry | undefined {\n        const entryIdx: number | undefined = this.poiDict.get(poiName);\n        if (entryIdx !== undefined) {\n            if (entryIdx < this.poiList.length) {\n                return this.poiList[entryIdx];\n            } else {\n                throw new Error(\"Poi table entry index out of stored list!\");\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Start to load the PoiTable from the specified URL. Can only be called once per table.\n     *\n     * @param {string} poiTableUrl URL that points to the JSON file.\n     * @param {AbortSignal} abortSignal Signal to abort the loading of the poi table file\n     *\n     * @returns {Promise<boolean>} Promise is being resolved once the JSON file has been fetched and\n     *          the `PoiTable` has been set up.\n     */\n    async load(poiTableUrl: string, abortSignal?: AbortSignal): Promise<boolean> {\n        if (this.m_loadedOk !== undefined) {\n            // Only load once.\n            return true;\n        }\n\n        this.m_loadedOk = false;\n\n        const response = await fetch(poiTableUrl, { signal: abortSignal });\n\n        if (!response.ok) {\n            throw new Error(\n                `load: Cannot load POI table at ${poiTableUrl}:` + ` ${response.statusText}`\n            );\n        }\n\n        const jsonPoiTable = (await response.json()) as PoiTableDef;\n        if (jsonPoiTable === undefined) {\n            logger.info(`load: TextureAtlas empty: ${poiTableUrl}`);\n            return true;\n        }\n\n        this.startLoading();\n\n        try {\n            logger.debug(`load: Loading POI table '${poiTableUrl}' for table '${this.name}'`);\n\n            if (jsonPoiTable.poiList !== undefined && Array.isArray(jsonPoiTable.poiList)) {\n                for (const tableEntry of jsonPoiTable.poiList) {\n                    if (PoiTableEntry.verifyJSON(tableEntry)) {\n                        const newPoiEntry = new PoiTableEntry();\n                        newPoiEntry.setup(tableEntry);\n                        const entryIdx = this.poiList.push(newPoiEntry) - 1;\n\n                        if (!this.useAltNamesForKey) {\n                            // Use actual name of entry as the key\n                            if (newPoiEntry.name === undefined) {\n                                logger.warn(\n                                    `load: Invalid entry in POI table '${poiTableUrl}' : ` +\n                                        `. No name set in entry: ${tableEntry}.`\n                                );\n                            } else {\n                                this.poiDict.set(newPoiEntry.name, entryIdx);\n                            }\n                        } else {\n                            if (\n                                newPoiEntry.altNames !== undefined &&\n                                newPoiEntry.altNames.length > 0\n                            ) {\n                                // Use the list of alternative names as keys.\n                                for (const altName of newPoiEntry.altNames) {\n                                    this.poiDict.set(altName, entryIdx);\n                                }\n                            } else {\n                                logger.debug(\n                                    `load: Invalid entry in POI table '${poiTableUrl}' : ` +\n                                        `No alternative names set in entry: ${JSON.stringify(\n                                            tableEntry\n                                        )}.`\n                                );\n                            }\n                        }\n                    } else {\n                        logger.warn(\n                            `load: Invalid entry in POI table '${poiTableUrl}' : ${JSON.stringify(\n                                tableEntry\n                            )}`\n                        );\n                    }\n                }\n            }\n            this.m_loadedOk = true;\n            this.finishedLoading();\n        } catch (ex) {\n            logger.error(`load: Failed to load POI table ` + `'${poiTableUrl}' : ${ex}`);\n            this.m_loadedOk = false;\n            this.finishedLoading();\n            return false;\n        }\n        return true;\n    }\n\n    private startLoading() {\n        this.m_isLoading = true;\n    }\n\n    private finishedLoading() {\n        this.m_isLoading = false;\n    }\n}\n\n/**\n * The `PoiTableManager` manages the list of [[PoiTables]] that\n * can be defined in the {@link @here/harp-datasource-protocol#Theme} sfile.\n */\nexport class PoiTableManager {\n    private m_isLoading = false;\n    private m_poiTables: Map<string, PoiTable> = new Map();\n    private readonly m_abortControllers: Map<string, AbortController> = new Map();\n\n    /**\n     * Creates an instance of PoiTableManager.\n     * @param {MapView} mapView Owning {@link MapView}.\n     */\n    constructor(readonly mapView: MapView) {}\n\n    /**\n     * Load the {@link PoiTable}s that are stored in the {@link MapView}s\n     * {@link @here/harp-datasource-protocol#Theme}.\n     *\n     * @remarks\n     * Note that duplicate names of {@link PoiTable}s in the\n     * {@link @here/harp-datasource-protocol#Theme} will lead to inaccessible {@link PoiTable}s.\n     *\n     * @param poiTables - {@link @here/harp-datasource-protocol#PoiTableRef[]}\n     *                containing all {@link PoiTable}s to load.\n     *\n     * @returns Resolved once all the {@link PoiTable}s in\n     *          the {@link @here/harp-datasource-protocol#Theme} have been loaded.\n     */\n    async loadPoiTables(poiTables?: PoiTableRef[]): Promise<void> {\n        const finished = new Promise<void>(resolve => {\n            this.clear();\n\n            // Add the POI tables defined in the theme.\n            if (poiTables !== undefined) {\n                this.startLoading();\n\n                // Gather promises to signal the success of having loaded them all\n                const loadPromises: Array<Promise<boolean>> = new Array();\n\n                poiTables.forEach((poiTableRef: PoiTableRef) => {\n                    if (\n                        poiTableRef !== undefined &&\n                        poiTableRef.name !== undefined &&\n                        typeof poiTableRef.name === \"string\"\n                    ) {\n                        const poiTable = new PoiTable(\n                            poiTableRef.name,\n                            poiTableRef.useAltNamesForKey !== false\n                        );\n                        if (poiTableRef.url !== undefined && typeof poiTableRef.url === \"string\") {\n                            this.addTable(poiTable);\n                            this.m_abortControllers.set(poiTableRef.name, new AbortController());\n                            loadPromises.push(\n                                poiTable.load(\n                                    poiTableRef.url,\n                                    this.m_abortControllers.get(poiTableRef.name)?.signal\n                                )\n                            );\n                        } else {\n                            logger.error(`POI table definition has no valid url: ${poiTableRef}`);\n                        }\n                    } else {\n                        logger.error(`POI table definition has no valid name: ${poiTableRef}`);\n                    }\n                });\n\n                if (loadPromises.length > 0) {\n                    Promise.all(loadPromises).finally(() => {\n                        this.finishLoading();\n                        resolve();\n                    });\n                } else {\n                    this.finishLoading();\n                    resolve();\n                }\n            } else {\n                this.finishLoading();\n                resolve();\n            }\n        });\n\n        return finished;\n    }\n\n    /**\n     * Clear the list of {@link PoiTable}s.\n     */\n    clear() {\n        this.m_poiTables = new Map();\n        this.m_abortControllers.forEach((abortController, name) => {\n            abortController.abort();\n            this.m_abortControllers.delete(name);\n        });\n    }\n\n    /**\n     * Return the map of {@link PoiTable}s.\n     */\n    get poiTables(): Map<string, PoiTable> {\n        return this.m_poiTables;\n    }\n\n    /**\n     * Manually add a {@link PoiTable}. Normally, the [[PoiTables]]s\n     * are specified in the {@link @here/harp-datasource-protocol#Theme}.\n     *\n     * @remarks\n     * Ensure that the name is unique.\n     */\n    addTable(poiTable: PoiTable) {\n        this.m_poiTables.set(poiTable.name, poiTable);\n    }\n\n    /**\n     * Retrieve a {@link PoiTable} by name.\n     *\n     * @param {(string | undefined)} poiTableName Name of the {@link PoiTable}.\n     *\n     * @returns {(PoiTable | undefined)} The found [[poiTable]] if it could be found, `undefined`\n     *          otherwise.\n     */\n    getPoiTable(poiTableName: string | undefined): PoiTable | undefined {\n        return poiTableName === undefined ? undefined : this.m_poiTables.get(poiTableName);\n    }\n\n    /**\n     * Return `true` if the {@link PoiTable}s have finished loading.\n     *\n     * @readonly\n     */\n    get finishedLoading(): boolean {\n        return !this.m_isLoading;\n    }\n\n    private startLoading() {\n        this.m_isLoading = true;\n    }\n\n    private finishLoading() {\n        this.m_isLoading = false;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { FontCatalogConfig } from \"@here/harp-datasource-protocol\";\nimport { FontCatalog } from \"@here/harp-text-canvas\";\nimport { LoggerManager } from \"@here/harp-utils\";\n\nconst logger = LoggerManager.instance.create(\"FontCatalogLoader\");\n\ntype FontCatalogCallback = (name: string, catalog: FontCatalog) => void;\n\nexport async function loadFontCatalog(\n    fontCatalogConfig: FontCatalogConfig,\n    onSuccess: FontCatalogCallback,\n    onError?: (error: Error) => void\n): Promise<void> {\n    return await FontCatalog.load(fontCatalogConfig.url, 1024)\n        .then<void>(onSuccess.bind(undefined, fontCatalogConfig.name))\n        .catch((error: Error) => {\n            logger.error(\"Failed to load FontCatalog: \", fontCatalogConfig.name, error);\n            if (onError) {\n                onError(error);\n            }\n        });\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    DefaultTextStyle,\n    hAlignFromPlacement,\n    HorizontalAlignment,\n    hPlacementFromAlignment,\n    TextLayoutStyle,\n    TextPlacement,\n    vAlignFromPlacement,\n    VerticalAlignment,\n    vPlacementFromAlignment\n} from \"@here/harp-text-canvas\";\n\n/**\n * Layout state of the text part of the `TextElement`.\n *\n * Used mainly for multi-anchor placement algorithm.\n * @hidden\n */\nexport class LayoutState {\n    private m_hAlign = DefaultTextStyle.DEFAULT_HORIZONTAL_ALIGNMENT;\n    private m_vAlign = DefaultTextStyle.DEFAULT_VERTICAL_ALIGNMENT;\n\n    constructor(placement: TextPlacement) {\n        this.textPlacement = placement;\n    }\n\n    /**\n     * Set layout based on theme style defined and optional text placement.\n     *\n     * @param placement - The optional new anchor placement.\n     */\n    set textPlacement(placement: TextPlacement) {\n        this.m_hAlign = hAlignFromPlacement(placement.h);\n        this.m_vAlign = vAlignFromPlacement(placement.v);\n    }\n\n    /**\n     * Acquire current placement setup.\n     *\n     * Function returns alternative or base placement depending on layout state.\n     *\n     * @returns The current anchor placement.\n     */\n    get textPlacement(): TextPlacement {\n        return {\n            h: hPlacementFromAlignment(this.m_hAlign),\n            v: vPlacementFromAlignment(this.m_vAlign)\n        };\n    }\n\n    /**\n     * Reset existing `LayoutState` to contain values from style/theme layout.\n     */\n    reset(layoutStyle: TextLayoutStyle) {\n        this.m_hAlign = layoutStyle.horizontalAlignment;\n        this.m_vAlign = layoutStyle.verticalAlignment;\n    }\n\n    get horizontalAlignment(): HorizontalAlignment {\n        return this.m_hAlign;\n    }\n\n    get verticalAlignment(): VerticalAlignment {\n        return this.m_vAlign;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env, GeometryKindSet } from \"@here/harp-datasource-protocol\";\nimport { Projection } from \"@here/harp-geoutils\";\nimport * as THREE from \"three\";\n\nimport { ElevationProvider } from \"../ElevationProvider\";\nimport { MapView } from \"../MapView\";\nimport { ViewState } from \"./ViewState\";\n\n/**\n * View state obtained from a MapView instance.\n */\nexport class MapViewState implements ViewState {\n    private readonly m_lookAtVector = new THREE.Vector3();\n    constructor(\n        private readonly m_mapView: MapView,\n        private readonly m_renderedTilesChangeCheck: () => boolean\n    ) {}\n\n    get worldCenter(): THREE.Vector3 {\n        return this.m_mapView.worldCenter;\n    }\n\n    get cameraIsMoving(): boolean {\n        return this.m_mapView.cameraIsMoving;\n    }\n\n    get maxVisibilityDist(): number {\n        return this.m_mapView.viewRanges.maximum;\n    }\n\n    get zoomLevel(): number {\n        return this.m_mapView.zoomLevel;\n    }\n\n    get env(): Env {\n        return this.m_mapView.env;\n    }\n\n    get frameNumber(): number {\n        return this.m_mapView.frameNumber;\n    }\n\n    get lookAtVector(): THREE.Vector3 {\n        return this.m_mapView.camera.getWorldDirection(this.m_lookAtVector);\n    }\n\n    get lookAtDistance(): number {\n        return this.m_mapView.targetDistance;\n    }\n\n    get isDynamic(): boolean {\n        return this.m_mapView.isDynamicFrame;\n    }\n\n    get hiddenGeometryKinds(): GeometryKindSet | undefined {\n        return this.m_mapView.tileGeometryManager === undefined\n            ? undefined\n            : this.m_mapView.tileGeometryManager.hiddenGeometryKinds;\n    }\n\n    get renderedTilesChanged(): boolean {\n        return this.m_renderedTilesChangeCheck();\n    }\n\n    get projection(): Projection {\n        return this.m_mapView.projection;\n    }\n\n    get elevationProvider(): ElevationProvider | undefined {\n        return this.m_mapView.elevationProvider;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env, getPropertyValue, PoiTechnique } from \"@here/harp-datasource-protocol\";\nimport { OrientedBox3, Projection, ProjectionType } from \"@here/harp-geoutils\";\nimport {\n    hAlignFromPlacement,\n    HorizontalPlacement,\n    hPlacementFromAlignment,\n    MeasurementParameters,\n    TextCanvas,\n    TextPlacement,\n    vAlignFromPlacement,\n    VerticalPlacement,\n    vPlacementFromAlignment\n} from \"@here/harp-text-canvas\";\nimport { assert, Math2D, MathUtils } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { PoiManager } from \"../poi/PoiManager\";\nimport { PoiRenderer } from \"../poi/PoiRenderer\";\nimport { CollisionBox, DetailedCollisionBox, IBox, ScreenCollisions } from \"../ScreenCollisions\";\nimport { ScreenProjector } from \"../ScreenProjector\";\nimport { RenderState } from \"./RenderState\";\nimport { PoiInfo, poiIsRenderable, TextElement } from \"./TextElement\";\nimport { TextElementState } from \"./TextElementState\";\nimport { TextElementType } from \"./TextElementType\";\nimport { ViewState } from \"./ViewState\";\n\n/**\n * Minimum number of pixels per character. Used during estimation if there is enough screen space\n * available to render a text.\n */\nconst MIN_AVERAGE_CHAR_WIDTH = 5;\n\n/**\n * Functions related to text element placement.\n */\n\nconst tmpPosition = new THREE.Vector3(0, 0, 0);\nconst tmpCameraDir = new THREE.Vector3(0, 0, 0);\nconst tmpPointDir = new THREE.Vector3(0, 0, 0);\nconst COS_TEXT_ELEMENT_FALLOFF_ANGLE = 0.5877852522924731; // Math.cos(0.3 * Math.PI)\n\n/**\n * Checks whether the distance of the text element to the camera plane meets threshold criteria.\n *\n * @param textElement - The textElement of which the view distance will be checked, with coordinates\n * in world space.\n * @param poiIndex - If TextElement is a line marker, the index into the line marker positions.\n * @param eyePos - The eye (or camera) position that will be used as reference to calculate\n * the distance.\n * @param eyeLookAt - The eye looking direction - normalized.\n * @param maxViewDistance - The maximum distance value.\n * @returns The text element view distance if it's lower than the maximum value, otherwise\n * `undefined`.\n */\nfunction checkViewDistance(\n    textElement: TextElement,\n    poiIndex: number | undefined,\n    eyePos: THREE.Vector3,\n    eyeLookAt: THREE.Vector3,\n    projectionType: ProjectionType,\n    maxViewDistance: number\n): number | undefined {\n    const textDistance = computeViewDistance(textElement, poiIndex, eyePos, eyeLookAt);\n\n    if (projectionType !== ProjectionType.Spherical) {\n        return textDistance <= maxViewDistance ? textDistance : undefined;\n    }\n\n    // For sphere projection: Filter labels that are close to the horizon\n    tmpPosition.copy(textElement.position).normalize();\n    tmpCameraDir.copy(eyePos).normalize();\n    const cosAlpha = tmpPosition.dot(tmpCameraDir);\n    const viewDistance =\n        cosAlpha > COS_TEXT_ELEMENT_FALLOFF_ANGLE && textDistance <= maxViewDistance\n            ? textDistance\n            : undefined;\n\n    return viewDistance;\n}\n\n/**\n * Computes distance of the specified text element to camera plane given with position and normal.\n *\n * The distance is measured as projection of the vector between `eyePosition` and text\n * onto the `eyeLookAt` vector, so it actually computes the distance to plane that\n * contains `eyePosition` and is described with `eyeLookAt` as normal.\n *\n * @note Used for measuring the distances to camera, results in the metric that describes\n * distance to camera near plane (assuming near = 0). Such metric is better as input for labels\n * scaling or fading factors then simple euclidean distance because it does not fluctuate during\n * simple camera panning.\n *\n * @param textElement - The textElement of which the view distance will be checked. It must have\n *                      coordinates in world space.\n * @param poiIndex - If TextElement is a line marker, the index into the line marker positions.\n * @param eyePosition - The world eye coordinates used a reference position to calculate\n *                      the distance.\n * @param eyeLookAt - The eye looking direction or simply said projection plane normal.\n * @returns The text element view distance.\n */\nexport function computeViewDistance(\n    textElement: TextElement,\n    poiIndex: number | undefined,\n    eyePosition: THREE.Vector3,\n    eyeLookAt: THREE.Vector3\n): number {\n    let viewDistance: number;\n\n    // Compute the distances as the distance along plane normal.\n    const path = textElement.path;\n    if (path && path.length > 1) {\n        if (poiIndex !== undefined && path && path.length > poiIndex) {\n            viewDistance = pointToPlaneDistance(path[poiIndex], eyePosition, eyeLookAt);\n        } else {\n            const viewDistance0 = pointToPlaneDistance(path[0], eyePosition, eyeLookAt);\n            const viewDistance1 = pointToPlaneDistance(\n                path[path.length - 1],\n                eyePosition,\n                eyeLookAt\n            );\n\n            viewDistance = Math.min(viewDistance0, viewDistance1);\n        }\n    } else {\n        viewDistance = pointToPlaneDistance(textElement.position, eyePosition, eyeLookAt);\n    }\n\n    return viewDistance;\n}\n\n/**\n * Computes distance between the given point and a plane.\n *\n * May be used to measure distance of point labels to the camera projection (near) plane.\n *\n * @param pointPos - The position to measure distance to.\n * @param planePos - The position of any point on the plane.\n * @param planeNorm - The plane normal vector (have to be normalized already).\n */\nexport function pointToPlaneDistance(\n    pointPos: THREE.Vector3,\n    planePos: THREE.Vector3,\n    planeNorm: THREE.Vector3\n) {\n    const labelCamVec = tmpPointDir.copy(pointPos).sub(planePos);\n    return labelCamVec.dot(planeNorm);\n}\n\n/**\n * Computes the maximum view distance for text elements as a ratio of the given view's maximum far\n * plane distance.\n * @param viewState - The view for which the maximum view distance will be calculated.\n * @param farDistanceLimitRatio - The ratio to apply to the maximum far plane distance.\n * @returns Maximum view distance.\n */\nexport function getMaxViewDistance(viewState: ViewState, farDistanceLimitRatio: number): number {\n    return viewState.maxVisibilityDist * farDistanceLimitRatio;\n}\n\n/**\n * State of fading.\n */\nexport enum PrePlacementResult {\n    Ok = 0,\n    NotReady,\n    Invisible,\n    TooFar,\n    Duplicate,\n    Count\n}\n\nconst tmpPlacementPosition = new THREE.Vector3();\n\n/**\n * Applies early rejection tests for a given text element meant to avoid trying to place labels\n * that are not visible, not ready, duplicates etc...\n * @param textElement - The Text element to check.\n * @param poiIndex - If TextElement is a line marker, the index into the line marker positions\n * @param viewState - The view for which the text element will be placed.\n * @param m_poiManager - To prepare pois for rendering.\n * @param maxViewDistance - If specified, text elements farther than this max distance will be\n *                          rejected.\n * @returns An object with the result code and the text element view distance\n * ( or `undefined` of the checks failed) as second.\n */\nexport function checkReadyForPlacement(\n    textElement: TextElement,\n    poiIndex: number | undefined,\n    viewState: ViewState,\n    poiManager: PoiManager,\n    maxViewDistance?: number\n): { result: PrePlacementResult; viewDistance: number | undefined } {\n    // eslint-disable-next-line prefer-const\n    let viewDistance: number | undefined;\n\n    if (!textElement.visible) {\n        return { result: PrePlacementResult.Invisible, viewDistance };\n    }\n\n    // If a PoiTable is specified in the technique, the table is required to be\n    // loaded before the POI can be rendered.\n    if (!poiManager.updatePoiFromPoiTable(textElement)) {\n        // PoiTable has not been loaded, but is required to determine\n        // visibility.\n        return { result: PrePlacementResult.NotReady, viewDistance };\n    }\n\n    // Text element visibility and zoom level ranges must be checked after calling\n    // updatePoiFromPoiTable, since that function may change those values.\n    if (\n        !textElement.visible ||\n        viewState.zoomLevel === textElement.maxZoomLevel ||\n        !MathUtils.isClamped(\n            viewState.zoomLevel,\n            textElement.minZoomLevel,\n            textElement.maxZoomLevel\n        )\n    ) {\n        return { result: PrePlacementResult.Invisible, viewDistance };\n    }\n\n    viewDistance =\n        maxViewDistance === undefined\n            ? computeViewDistance(\n                  textElement,\n                  poiIndex,\n                  viewState.worldCenter,\n                  viewState.lookAtVector\n              )\n            : checkViewDistance(\n                  textElement,\n                  poiIndex,\n                  viewState.worldCenter,\n                  viewState.lookAtVector,\n                  viewState.projection.type,\n                  maxViewDistance\n              );\n\n    if (viewDistance === undefined) {\n        return { result: PrePlacementResult.TooFar, viewDistance };\n    }\n\n    return { result: PrePlacementResult.Ok, viewDistance };\n}\n\n/**\n * Computes the offset for a point text accordingly to text alignment (and icon, if any).\n * @param textElement - The text element of which the offset will computed. It must be a point\n * label with [[layoutStyle]] and [[bounds]] already computed.\n * @param textBounds - The text screen bounds.\n * @param placement - The relative anchor placement (may be different then original alignment).\n * @param scale - The scaling factor (due to distance, etc.).\n * @param env - The {@link @here/harp-datasource-protocol#Env} used\n *                  to evaluate technique attributes.\n * @param offset - The offset result.\n */\nfunction computePointTextOffset(\n    textElement: TextElement,\n    textBounds: THREE.Box2,\n    placement: TextPlacement,\n    scale: number,\n    env: Env,\n    offset: THREE.Vector2 = new THREE.Vector2()\n): THREE.Vector2 {\n    assert(\n        textElement.type === TextElementType.PoiLabel ||\n            textElement.type === TextElementType.LineMarker\n    );\n    assert(textElement.layoutStyle !== undefined);\n\n    offset.x = textElement.xOffset;\n    offset.y = textElement.yOffset;\n\n    switch (placement.h) {\n        case HorizontalPlacement.Left:\n            // Already accounts for any margin that is already applied to the text element bounds.\n            offset.x -= textBounds.max.x;\n            break;\n        case HorizontalPlacement.Right:\n            // Account for any margin applied as above.\n            offset.x -= textBounds.min.x;\n            break;\n    }\n    switch (placement.v) {\n        case VerticalPlacement.Top:\n            offset.y -= textBounds.min.y;\n            break;\n        case VerticalPlacement.Center:\n            offset.y -= 0.5 * (textBounds.max.y + textBounds.min.y);\n            break;\n        case VerticalPlacement.Bottom:\n            // Accounts for vertical margin that may be applied to the text bounds.\n            offset.y -= textBounds.max.y;\n            break;\n    }\n\n    if (textElement.poiInfo !== undefined && poiIsRenderable(textElement.poiInfo)) {\n        assert(textElement.poiInfo.computedWidth !== undefined);\n        assert(textElement.poiInfo.computedHeight !== undefined);\n\n        // Apply offset moving text out of the icon\n        offset.x += textElement.poiInfo.computedWidth! * (0.5 + placement.h);\n        offset.y += textElement.poiInfo.computedHeight! * (0.5 + placement.v);\n\n        // Reverse, mirror or project offsets on different axis depending on the placement\n        // required only for alternative placements.\n        const hAlign = hPlacementFromAlignment(textElement.layoutStyle!.horizontalAlignment);\n        const vAlign = vPlacementFromAlignment(textElement.layoutStyle!.verticalAlignment);\n        if (hAlign !== placement.h || vAlign !== placement.v) {\n            // Read icon offset used.\n            const technique = textElement.poiInfo.technique;\n            let iconXOffset = getPropertyValue(technique.iconXOffset, env);\n            let iconYOffset = getPropertyValue(technique.iconYOffset, env);\n            iconXOffset = typeof iconXOffset === \"number\" ? iconXOffset : 0;\n            iconYOffset = typeof iconYOffset === \"number\" ? iconYOffset : 0;\n\n            // Now mirror the text offset relative to icon so manhattan distance is preserved, when\n            // alternative position is taken, this ensures that text-icon relative position is\n            // the same as in base alignment.\n            const hAlignDiff = hAlign - placement.h;\n            const vAlignDiff = vAlign - placement.v;\n            const relOffsetX = iconXOffset - textElement.xOffset;\n            const relOffsetY = iconYOffset - textElement.yOffset;\n            const centerBased =\n                hAlign === HorizontalPlacement.Center || vAlign === VerticalPlacement.Center;\n            if (centerBased) {\n                // Center based alternative placements.\n                offset.x += 2 * Math.abs(hAlignDiff) * relOffsetX;\n                offset.y -= 2 * vAlignDiff * Math.abs(relOffsetX);\n\n                offset.y += 2 * Math.abs(vAlignDiff) * relOffsetY;\n                offset.x -= 2 * hAlignDiff * Math.abs(relOffsetY);\n            } else {\n                // Corner alternative placements\n                offset.x += 2 * Math.min(Math.abs(hAlignDiff), 0.5) * relOffsetX;\n                offset.y -=\n                    2 *\n                    Math.sign(vAlignDiff) *\n                    Math.min(Math.abs(vAlignDiff), 0.5) *\n                    Math.abs(relOffsetX);\n\n                offset.y += 2 * Math.min(Math.abs(vAlignDiff), 0.5) * relOffsetY;\n                offset.x -=\n                    2 *\n                    Math.sign(hAlignDiff) *\n                    Math.min(Math.abs(hAlignDiff), 0.5) *\n                    Math.abs(relOffsetY);\n            }\n        }\n    }\n\n    offset.multiplyScalar(scale);\n    return offset;\n}\n\nconst tmpBox = new THREE.Box2();\nconst tmpBounds = new THREE.Box2();\nconst tmpBoxes: THREE.Box2[] = [];\nconst tmpMeasurementParams: MeasurementParameters = {};\nconst tmpCollisionBoxes: CollisionBox[] = [];\nconst tmpCollisionBox = new CollisionBox();\nconst tmpScreenPosition = new THREE.Vector2();\nconst tmpTextOffset = new THREE.Vector2();\nconst tmp2DBox = new Math2D.Box();\nconst tmpCenter = new THREE.Vector2();\nconst tmpSize = new THREE.Vector2();\n\n/**\n * The margin applied to the text bounds of every point label.\n */\nexport const persistentPointLabelTextMargin = new THREE.Vector2(2, 2);\n/**\n * Additional bounds scaling (described as percentage of full size) applied to the new labels.\n *\n * This additional scaling (margin) allows to account for slight camera position and\n * orientation changes, so new labels are placed only if there is enough space around them.\n * Such margin limits collisions with neighboring labels while doing small camera movements and\n * thus reduces labels flickering.\n */\nexport const newPointLabelTextMarginPercent = 0.1;\n\nexport enum PlacementResult {\n    Ok,\n    Rejected,\n    Invisible\n}\n\n/**\n * Places an icon on screen.\n * @param iconRenderState - The icon state.\n * @param poiInfo - Icon information necessary to compute its dimensions.\n * @param screenPosition - Screen position of the icon.\n * @param scaleFactor - Scaling factor to apply to the icon dimensions.\n * @param screenCollisions - Used to check the icon visibility and collisions.\n * @param env - Current map env.\n * @returns `PlacementResult.Ok` if icon can be placed, `PlacementResult.Rejected` if there's\n * a collision, `PlacementResult.Invisible` if it's not visible.\n */\nexport function placeIcon(\n    iconRenderState: RenderState,\n    poiInfo: PoiInfo,\n    screenPosition: THREE.Vector2,\n    scaleFactor: number,\n    env: Env,\n    screenCollisions: ScreenCollisions\n): PlacementResult {\n    PoiRenderer.computeIconScreenBox(poiInfo, screenPosition, scaleFactor, env, tmp2DBox);\n    if (!screenCollisions.isVisible(tmp2DBox)) {\n        return PlacementResult.Invisible;\n    }\n\n    const iconSpaceAvailable =\n        poiInfo.mayOverlap === true || !screenCollisions.isAllocated(tmp2DBox);\n\n    return !iconSpaceAvailable ? PlacementResult.Rejected : PlacementResult.Ok;\n}\n\n/**\n * Place a point label text using single or multiple alternative placement anchors.\n *\n * @param labelState - State of the point label to place.\n * @param screenPosition - Position of the label in screen coordinates.\n * @param scale - Scale factor to be applied to label dimensions.\n * @param textCanvas - The text canvas where the label will be placed.\n * @param env - The {@link @here/harp-datasource-protocol#Env} used\n *              to evaluate technique attributes.\n * @param screenCollisions - Used to check collisions with other labels.\n * @param outScreenPosition - The final label screen position after applying any offsets.\n * @param multiAnchor - The parameter decides if multi-anchor placement algorithm should be\n * used, be default [[false]] meaning try to place label using current alignment settings only.\n * @returns `PlacementResult.Ok` if point __label can be placed__ at the base or any optional\n * anchor point. `PlacementResult.Rejected` if there's a collision for all placements. Finally\n * `PlacementResult.Invisible` if it's text is not visible at any placement position.\n */\nexport function placePointLabel(\n    labelState: TextElementState,\n    screenPosition: THREE.Vector2,\n    scale: number,\n    textCanvas: TextCanvas,\n    env: Env,\n    screenCollisions: ScreenCollisions,\n    outScreenPosition: THREE.Vector3,\n    multiAnchor: boolean = false\n): PlacementResult {\n    assert(labelState.element.layoutStyle !== undefined);\n\n    const layoutStyle = labelState.element.layoutStyle!;\n\n    // Check if alternative placements have been provided.\n    multiAnchor =\n        multiAnchor && layoutStyle.placements !== undefined && layoutStyle.placements.length > 1;\n    // For single placement labels or labels with icon rejected, do only current anchor testing.\n    if (!multiAnchor) {\n        return placePointLabelAtCurrentAnchor(\n            labelState,\n            screenPosition,\n            scale,\n            textCanvas,\n            env,\n            screenCollisions,\n            outScreenPosition\n        );\n    }\n    // Otherwise test also alternative text placements.\n    else {\n        return placePointLabelChoosingAnchor(\n            labelState,\n            screenPosition,\n            scale,\n            textCanvas,\n            env,\n            screenCollisions,\n            outScreenPosition\n        );\n    }\n}\n\n/**\n * Try to place a point label text using multiple optional placements.\n *\n * @note Function should be called only for labels with icons not rejected and for text alignments\n * different then [[HorizontalAlignment.Center]] and [[VerticalAlignment.Center]].\n *\n * @param labelState - State of the point label to place.\n * @param screenPosition - Position of the label in screen coordinates.\n * @param scale - Scale factor to be applied to label dimensions.\n * @param textCanvas - The text canvas where the label will be placed.\n * @param env - The {@link @here/harp-datasource-protocol#Env}\n *              used to evaluate technique attributes.\n * @param screenCollisions - Used to check collisions with other labels.\n * @param outScreenPosition - The final label screen position after applying any offsets.\n * @returns `PlacementResult.Ok` if label can be placed at the base or optional anchor point,\n * `PlacementResult.Rejected` if there's a collision for all placements, `PlacementResult.Invisible`\n * if it's not visible at any placement position.\n *\n * @internal\n * @hidden\n */\nfunction placePointLabelChoosingAnchor(\n    labelState: TextElementState,\n    screenPosition: THREE.Vector2,\n    scale: number,\n    textCanvas: TextCanvas,\n    env: Env,\n    screenCollisions: ScreenCollisions,\n    outScreenPosition: THREE.Vector3\n): PlacementResult {\n    assert(labelState.element.layoutStyle !== undefined);\n    const label = labelState.element;\n\n    // Store label state - persistent or new label.\n    const persistent = labelState.visible;\n\n    // Start with last alignment settings if layout state was stored or\n    // simply begin from layout defined in theme.\n    const lastPlacement = labelState.textPlacement;\n    const placements = label.layoutStyle!.placements;\n    const placementsNum = placements.length;\n    // Find current anchor placement on the optional placements list.\n    // Index of exact match.\n    const matchIdx = placements.findIndex(p => p.h === lastPlacement.h && p.v === lastPlacement.v);\n    assert(matchIdx >= 0);\n    // Will be true if all text placements are invisible.\n    let allInvisible: boolean = true;\n\n    // Iterate all placements starting from current one.\n    for (let i = matchIdx; i < placementsNum + matchIdx; ++i) {\n        const anchorPlacement = placements[i % placementsNum];\n\n        // Bounds may be already calculated for persistent label, force re-calculation only\n        // for alternative (new) placements.\n        const isLastPlacement = i === matchIdx && persistent;\n        // Compute label bounds, visibility or collision according to new layout settings.\n        const placementResult = placePointLabelAtAnchor(\n            labelState,\n            screenPosition,\n            anchorPlacement,\n            scale,\n            textCanvas,\n            env,\n            screenCollisions,\n            !isLastPlacement,\n            tmpPlacementPosition\n        );\n\n        if (placementResult === PlacementResult.Ok) {\n            outScreenPosition.copy(tmpPlacementPosition);\n            return PlacementResult.Ok;\n        }\n        // Store last successful (previous frame) position even if it's now rejected (to fade out).\n        if (isLastPlacement) {\n            outScreenPosition.copy(tmpPlacementPosition);\n        }\n\n        // Invisible = Persistent label out of screen or the new label that is colliding.\n        allInvisible = allInvisible && placementResult === PlacementResult.Invisible;\n    }\n\n    return allInvisible\n        ? // All text's placements out of the screen.\n          PlacementResult.Invisible\n        : // All placements are either colliding or out of screen .\n          PlacementResult.Rejected;\n}\n\n/**\n * Places a point label on a specified text canvas using the alignment (anchor) currently set.\n *\n * @param labelState - State of the point label to place.\n * @param screenPosition - Position of the label in screen coordinates.\n * @param scale - Scale factor to be applied to label dimensions.\n * @param textCanvas - The text canvas where the label will be placed.\n * @param env - The {@link @here/harp-datasource-protocol#Env}\n *              used to evaluate technique attributes.\n * @param screenCollisions - Used to check collisions with other labels.\n * @param outScreenPosition - The final label screen position after applying any offsets.\n * @returns `PlacementResult.Ok` if point label can be placed, `PlacementResult.Rejected` if there's\n * a collision, `PlacementResult.Invisible` if it's not visible.\n *\n * @internal\n * @hidden\n */\nfunction placePointLabelAtCurrentAnchor(\n    labelState: TextElementState,\n    screenPosition: THREE.Vector2,\n    scale: number,\n    textCanvas: TextCanvas,\n    env: Env,\n    screenCollisions: ScreenCollisions,\n    outScreenPosition: THREE.Vector3\n): PlacementResult {\n    assert(labelState.element.layoutStyle !== undefined);\n\n    // Use recently rendered (state stored) layout if available, otherwise theme based style.\n    const lastPlacement = labelState.textPlacement;\n    const result = placePointLabelAtAnchor(\n        labelState,\n        screenPosition,\n        lastPlacement,\n        scale,\n        textCanvas,\n        env,\n        screenCollisions,\n        !labelState.visible,\n        outScreenPosition\n    );\n\n    return result;\n}\n\n/**\n * Auxiliary function that tries to place a point label on a text canvas using specified alignment.\n *\n * @param labelState - State of the point label to place.\n * @param screenPosition - Position of the label in screen coordinates\n * @param placement - Text placement relative to the label position.\n * @param scale - Scale factor to be applied to label dimensions.\n * @param textCanvas - The text canvas where the label will be placed.\n * @param env - The {@link @here/harp-datasource-protocol#Env}\n *              used to evaluate technique attributes.\n * @param screenCollisions - Used to check collisions with other labels.\n * @param forceInvalidation - Set to true if text layout or other params has changed such as text\n * re-measurement is required and text buffer need to be invalidated.\n * @param outScreenPosition - The final label screen position after applying any offsets.\n * @returns `PlacementResult.Ok` if point label can be placed, `PlacementResult.Rejected` if there's\n * a collision, `PlacementResult.Invisible` if it's not visible.\n *\n * @internal\n * @hidden\n */\nfunction placePointLabelAtAnchor(\n    labelState: TextElementState,\n    screenPosition: THREE.Vector2,\n    placement: TextPlacement,\n    scale: number,\n    textCanvas: TextCanvas,\n    env: Env,\n    screenCollisions: ScreenCollisions,\n    forceInvalidation: boolean,\n    outScreenPosition: THREE.Vector3\n): PlacementResult {\n    const label = labelState.element;\n    assert(label.glyphs !== undefined);\n    assert(label.layoutStyle !== undefined);\n\n    const measureText = !label.bounds || forceInvalidation;\n\n    const labelBounds = measureText ? tmpBounds : label.bounds!;\n    if (measureText) {\n        // Override text canvas layout style for measurement.\n        applyTextPlacement(textCanvas, placement);\n\n        tmpMeasurementParams.outputCharacterBounds = undefined;\n        tmpMeasurementParams.path = undefined;\n        tmpMeasurementParams.pathOverflow = false;\n        tmpMeasurementParams.letterCaseArray = label.glyphCaseArray!;\n        // Compute label bounds according to layout settings.\n        textCanvas.measureText(label.glyphs!, labelBounds, tmpMeasurementParams);\n    }\n\n    // Compute text offset from the anchor point\n    const textOffset = computePointTextOffset(\n        label,\n        labelBounds,\n        placement,\n        scale,\n        env,\n        tmpTextOffset\n    ).add(screenPosition);\n\n    // Update output screen position.\n    outScreenPosition.set(textOffset.x, textOffset.y, labelState.renderDistance);\n\n    // Apply additional persistent margin, keep in mind that text bounds just calculated\n    // are not (0, 0, w, h) based, so their coords usually are also non-zero.\n    // TODO: Make the margin configurable\n    tmpBox.copy(labelBounds).expandByVector(persistentPointLabelTextMargin).translate(textOffset);\n    tmpBox.getCenter(tmpCenter);\n    tmpBox.getSize(tmpSize);\n\n    tmpSize.multiplyScalar(scale);\n    tmp2DBox.set(tmpCenter.x - tmpSize.x / 2, tmpCenter.y - tmpSize.y / 2, tmpSize.x, tmpSize.y);\n\n    // Check the text visibility if invisible finish immediately\n    // regardless of the persistence state - no fading required.\n    if (!screenCollisions.isVisible(tmp2DBox)) {\n        return PlacementResult.Invisible;\n    }\n\n    if (measureText) {\n        // Up-scaled label bounds are used only for new labels and only for collision check, this\n        // is intentional to avoid processing labels out of the screen due to increased bounds,\n        // such labels would be again invisible in the next frame.\n        tmpBox.getSize(tmpSize);\n        tmpSize.multiplyScalar(scale * (1 + newPointLabelTextMarginPercent));\n        tmp2DBox.set(\n            tmpCenter.x - tmpSize.x / 2,\n            tmpCenter.y - tmpSize.y / 2,\n            tmpSize.x,\n            tmpSize.y\n        );\n    }\n\n    // Check label's text collision. Collision is more important than visibility (now), because for\n    // icon/text combinations the icon should be rendered if the text is out of bounds, but it may\n    // _not_ be rendered if the text is colliding with another label.\n    if (!label.textMayOverlap && screenCollisions.isAllocated(tmp2DBox)) {\n        return PlacementResult.Rejected;\n    }\n\n    // Don't allocate space for rejected text. When zooming, this allows placement of a\n    // lower priority text element that was displaced by a higher priority one (not\n    // present in the new zoom level) before an even lower priority one takes the space.\n    // Otherwise the lowest priority text will fade in and back out.\n    // TODO: Add a unit test for this scenario.\n    if (label.textReservesSpace) {\n        screenCollisions.allocate(tmp2DBox);\n    }\n\n    // Glyphs arrangement have been changed remove text buffer object which needs to be\n    // re-created.\n    if (measureText) {\n        label.textBufferObject = undefined;\n        label.bounds = label.bounds ? label.bounds.copy(labelBounds) : labelBounds.clone();\n    } else {\n        // Override text canvas layout style for placement.\n        applyTextPlacement(textCanvas, placement);\n    }\n\n    // Save current placement in label state.\n    // TextElementState creates layout snapshot solely for alternative placements which saves\n    // memory that could be wasted on unnecessary objects construction.\n    labelState.textPlacement = placement;\n\n    return PlacementResult.Ok;\n}\n\n/**\n * Applied modified text layout style to TextCanvas for further use.\n * @param textCanvas - TextCanvas reference.\n * @param placement - The text placement to be used.\n */\nfunction applyTextPlacement(textCanvas: TextCanvas, placement: TextPlacement) {\n    // Setup TextCanvas layout settings of the new placement as it is required for further\n    // TextBufferObject creation and measurements in addText().\n    textCanvas.textLayoutStyle.horizontalAlignment = hAlignFromPlacement(placement.h);\n    textCanvas.textLayoutStyle.verticalAlignment = vAlignFromPlacement(placement.v);\n}\n\n/**\n * Places a path label along a given path on a specified text canvas.\n * @param labelState - The state of the path label to place.\n * @param textPath - The text path along which the label will be placed.\n * @param screenPosition - Position of the label in screen coordinates.\n * @param textCanvas - The text canvas where the label will be placed.\n * @param screenCollisions - Used to check collisions with other labels.\n * @returns `PlacementResult.Ok` if path label can be placed, `PlacementResult.Rejected` if there's\n * a collision or text doesn't fit into path, `PlacementResult.Invisible` if it's not visible.\n */\nexport function placePathLabel(\n    labelState: TextElementState,\n    textPath: THREE.Path,\n    screenPosition: THREE.Vector2,\n    textCanvas: TextCanvas,\n    screenCollisions: ScreenCollisions\n): PlacementResult {\n    // Recalculate the text bounds for this path label. If measurement fails, the whole\n    // label doesn't fit the path and should be discarded.\n    tmpMeasurementParams.path = textPath;\n    tmpMeasurementParams.outputCharacterBounds = tmpBoxes;\n    tmpMeasurementParams.letterCaseArray = labelState.element.glyphCaseArray!;\n\n    // TODO: HARP-7648. TextCanvas.measureText does the placement as in TextCanvas.addText but\n    // without storing the result. If the measurement succeeds, the placement work is done\n    // twice.\n    // This could be done in one step (e.g measureAndAddText). Collision test could be injected\n    // in the middle as a function.\n    if (!textCanvas.measureText(labelState.element.glyphs!, tmpBox, tmpMeasurementParams)) {\n        return PlacementResult.Rejected;\n    }\n\n    // Coarse collision check.\n    tmpCollisionBox.copy(tmpBox.translate(screenPosition));\n    if (!screenCollisions.isVisible(tmpCollisionBox)) {\n        return PlacementResult.Invisible;\n    }\n\n    let checkGlyphCollision = false;\n    let candidateBoxes: IBox[] | undefined;\n    if (!labelState.element.textMayOverlap) {\n        candidateBoxes = screenCollisions.search(tmpCollisionBox);\n        checkGlyphCollision = candidateBoxes.length > 0;\n    }\n\n    // Perform per-character collision checks.\n    tmpCollisionBoxes.length = tmpBoxes.length;\n    for (let i = 0; i < tmpBoxes.length; ++i) {\n        const glyphBox = tmpBoxes[i].translate(screenPosition);\n        let collisionBox = tmpCollisionBoxes[i];\n        if (collisionBox === undefined) {\n            collisionBox = new CollisionBox(glyphBox);\n            tmpCollisionBoxes[i] = collisionBox;\n        } else {\n            collisionBox.copy(glyphBox);\n        }\n\n        if (\n            checkGlyphCollision &&\n            screenCollisions.intersectsDetails(collisionBox, candidateBoxes!)\n        ) {\n            return PlacementResult.Rejected;\n        }\n    }\n    // Allocate collision info if needed.\n    if (labelState.element.textReservesSpace) {\n        const collisionBox = new DetailedCollisionBox(tmpCollisionBox, tmpCollisionBoxes.slice());\n        tmpCollisionBoxes.length = 0;\n        screenCollisions.allocate(collisionBox);\n    }\n    return PlacementResult.Ok;\n}\n\n/**\n * Check if a given path label is too small to be rendered.\n * @param textElement - The text element to check.\n * @param screenProjector - Used to project coordinates from world to screen space.\n * @param outScreenPoints - Label path projected to screen space.\n * @returns `true` if label is too small, `false` otherwise.\n */\nexport function isPathLabelTooSmall(\n    textElement: TextElement,\n    screenProjector: ScreenProjector,\n    outScreenPoints: THREE.Vector2[]\n): boolean {\n    assert(textElement.type === TextElementType.PathLabel);\n\n    // Get the screen points that define the label's segments and create a path with\n    // them.\n    outScreenPoints.length = 0;\n    let anyPointVisible = false;\n\n    for (const pt of textElement.points as THREE.Vector3[]) {\n        // Skip invisible points at the beginning of the path.\n        const screenPoint = anyPointVisible\n            ? screenProjector.project(pt, tmpScreenPosition)\n            : screenProjector.projectToScreen(pt, tmpScreenPosition);\n        if (screenPoint === undefined) {\n            continue;\n        }\n        anyPointVisible = true;\n\n        outScreenPoints.push(tmpScreenPosition.clone());\n    }\n\n    // TODO: (HARP-3515)\n    //      The rendering of a path label that contains just a single point that is not\n    //      visible is impossible, which is problematic with long paths.\n    //      Fix: Skip/clip the invisible points at beginning and end of the path to get\n    //      the visible part of the path.\n\n    // If not a single point is visible, skip the path\n    if (!anyPointVisible) {\n        return true;\n    }\n\n    // Check/guess if the screen box can hold a string of that length. It is important\n    // to guess that value without measuring the font first to save time.\n    const minScreenSpace = textElement.text.length * MIN_AVERAGE_CHAR_WIDTH;\n\n    tmpBox.setFromPoints(outScreenPoints);\n    const boxDiagonalSq = tmpBox.max.sub(tmpBox.min).lengthSq();\n\n    if (boxDiagonalSq < minScreenSpace * minScreenSpace) {\n        textElement.dbgPathTooSmall = true;\n        return true;\n    }\n\n    return false;\n}\n\nconst tmpOrientedBox = new OrientedBox3();\n\n/**\n * Calculates the world position of the supplied label. The label will be shifted if there is a\n * specified offsetDirection and value to shift it in.\n * @param poiLabel - The label to shift\n * @param projection - The projection, required to compute the correct direction offset for\n *                     spherical projections.\n * @param env - The environment to extract the worldOffset needed to shift the icon in world space,\n *              if configured in the style.\n * @param outWorldPosition - Preallocated vector to store the result in\n * @returns the [[outWorldPosition]] vector.\n */\nexport function getWorldPosition(\n    poiLabel: TextElement,\n    projection: Projection,\n    env: Env,\n    outWorldPosition: THREE.Vector3\n): THREE.Vector3 {\n    const worldOffsetShiftValue = getPropertyValue(\n        (poiLabel.poiInfo?.technique as PoiTechnique)?.worldOffset,\n        env\n    );\n    outWorldPosition?.copy(poiLabel.position);\n    if (\n        worldOffsetShiftValue !== null &&\n        worldOffsetShiftValue !== undefined &&\n        poiLabel.offsetDirection !== undefined\n    ) {\n        projection.localTangentSpace(poiLabel.position, tmpOrientedBox);\n        const offsetDirectionVector = tmpOrientedBox.yAxis;\n        const offsetDirectionRad = THREE.MathUtils.degToRad(poiLabel.offsetDirection);\n        // Negate to get the normal, i.e. the vector pointing to the sky.\n        offsetDirectionVector.applyAxisAngle(tmpOrientedBox.zAxis.negate(), offsetDirectionRad);\n\n        outWorldPosition.addScaledVector(tmpOrientedBox.yAxis, worldOffsetShiftValue);\n    }\n    return outWorldPosition;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { IChannel } from \"@here/harp-utils\";\n\nexport class PlacementStats {\n    totalGroups: number = 0;\n    resortedGroups: number = 0;\n    total: number = 0;\n    uninitialized: number = 0;\n    tooFar: number = 0;\n    numNotVisible: number = 0;\n    numPathTooSmall: number = 0;\n    numCannotAdd: number = 0;\n    numRenderedPoiIcons: number = 0;\n    numRenderedPoiTexts: number = 0;\n    numPoiTextsInvisible: number = 0;\n    numRenderedTextElements: number = 0;\n\n    constructor(private readonly m_logger: IChannel) {}\n\n    clear() {\n        this.totalGroups = 0;\n        this.resortedGroups = 0;\n        this.total = 0;\n        this.uninitialized = 0;\n        this.tooFar = 0;\n        this.numNotVisible = 0;\n        this.numPathTooSmall = 0;\n        this.numCannotAdd = 0;\n        this.numRenderedPoiIcons = 0;\n        this.numRenderedPoiTexts = 0;\n        this.numPoiTextsInvisible = 0;\n        this.numRenderedTextElements = 0;\n    }\n\n    log() {\n        const numNotRendered =\n            this.uninitialized +\n            this.numPoiTextsInvisible +\n            this.tooFar +\n            this.numNotVisible +\n            this.numCannotAdd;\n        this.m_logger.debug(\"Total groups\", this.totalGroups);\n        this.m_logger.debug(\"Resorted groups\", this.resortedGroups);\n        this.m_logger.debug(\"Total labels\", this.total);\n        this.m_logger.debug(\"Rendered labels\", this.numRenderedTextElements);\n        this.m_logger.debug(\"Rejected labels\", numNotRendered);\n        this.m_logger.debug(\"Unitialized labels\", this.uninitialized);\n        this.m_logger.debug(\"Rendered poi icons\", this.numRenderedPoiIcons);\n        this.m_logger.debug(\"Rendered poi texts\", this.numRenderedPoiTexts);\n        this.m_logger.debug(\"Poi text invisible\", this.numPoiTextsInvisible);\n        this.m_logger.debug(\"Too far\", this.tooFar);\n        this.m_logger.debug(\"Not visible\", this.numNotVisible);\n        this.m_logger.debug(\"Path too small\", this.numPathTooSmall);\n        this.m_logger.debug(\"Rejected, max glyphs reached\", this.numCannotAdd);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { assert, MathUtils } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\n/**\n * State of fading.\n */\nexport enum FadingState {\n    Undefined = 0,\n    FadingIn = 1,\n    FadedIn = 2,\n    FadingOut = -1,\n    FadedOut = -2\n}\n\n/**\n * Time to fade in/fade out the labels in milliseconds.\n */\nexport const DEFAULT_FADE_TIME = 800;\n\n/**\n * State of rendering of the icon and text part of the `TextElement`. Mainly for fading the elements\n * in and out, to compute the opacity.\n *\n * @hidden\n */\nexport class RenderState {\n    /**\n     * Current fading value [0..1]\n     */\n    value: number = 0.0;\n\n    /**\n     * Timestamp the fading started.\n     */\n    startTime: number = 0;\n\n    /**\n     * Computed opacity depending on value.\n     */\n    opacity: number = 0.0;\n\n    private m_state = FadingState.Undefined;\n\n    /**\n     * Create a `RenderState`.\n     *\n     * @param fadeTime - The duration of the fading in milliseconds.\n     */\n    constructor(public fadeTime = DEFAULT_FADE_TIME) {}\n\n    /**\n     * Reset existing `RenderState` to appear like a fresh state.\n     */\n    reset() {\n        this.m_state = FadingState.Undefined;\n        this.value = 0.0;\n        this.startTime = 0.0;\n        this.opacity = 0.0;\n    }\n\n    /**\n     * @returns `true` if element state is `FadingState.Undefined`.\n     */\n    isUndefined(): boolean {\n        return this.m_state === FadingState.Undefined;\n    }\n\n    /**\n     * @returns `true` if element is either fading in or fading out.\n     */\n    isFading(): boolean {\n        const fading =\n            this.m_state === FadingState.FadingIn || this.m_state === FadingState.FadingOut;\n        return fading;\n    }\n\n    /**\n     * @returns `true` if element is fading in.\n     */\n    isFadingIn(): boolean {\n        const fadingIn = this.m_state === FadingState.FadingIn;\n        return fadingIn;\n    }\n\n    /**\n     * @returns `true` if element is fading out.\n     */\n    isFadingOut(): boolean {\n        const fadingOut = this.m_state === FadingState.FadingOut;\n        return fadingOut;\n    }\n\n    /**\n     * @returns `true` if element is done with fading in.\n     */\n    isFadedIn(): boolean {\n        const fadedIn = this.m_state === FadingState.FadedIn;\n        return fadedIn;\n    }\n\n    /**\n     * @returns `true` if element is done with fading out.\n     */\n    isFadedOut(): boolean {\n        const fadedOut = this.m_state === FadingState.FadedOut;\n        return fadedOut;\n    }\n\n    /**\n     * @returns `true` if state is neither faded out nor undefined and the opacity is larger\n     * than 0.\n     */\n    isVisible(): boolean {\n        return (\n            this.m_state !== FadingState.FadedOut &&\n            this.m_state !== FadingState.Undefined &&\n            this.opacity > 0\n        );\n    }\n\n    /**\n     * Updates the state to [[FadingState.FadingIn]].\n     * If previous state is [[FadingState.FadingIn]] or [[FadingState.FadedIn]] it remains\n     * unchanged.\n     *\n     * @param time - Current time.\n     * @param disableFading - Optional flag to disable fading.\n     */\n    startFadeIn(time: number, disableFading?: boolean) {\n        if (this.m_state === FadingState.FadingIn || this.m_state === FadingState.FadedIn) {\n            return;\n        }\n\n        if (disableFading === true) {\n            this.value = 1;\n            this.opacity = 1;\n            this.m_state = FadingState.FadedIn;\n            this.startTime = time;\n\n            return;\n        }\n\n        if (this.m_state === FadingState.FadingOut) {\n            // The fadeout is not complete: compute the virtual fadingStartTime in the past, to get\n            // a correct end time:\n            this.value = 1.0 - this.value;\n            this.startTime = time - this.value * this.fadeTime;\n        } else {\n            this.startTime = time;\n            this.value = 0.0;\n            this.opacity = 0;\n        }\n\n        this.m_state = FadingState.FadingIn;\n    }\n\n    /**\n     * Updates the state to [[FadingState.FadingOut]].\n     * If previous state is [[FadingState.FadingOut]], [[FadingState.FadedOut]] or\n     * [[FadingState.Undefined]] it remains unchanged.\n     *\n     * @param time - Current time.\n     */\n    startFadeOut(time: number) {\n        if (\n            this.m_state === FadingState.FadingOut ||\n            this.m_state === FadingState.FadedOut ||\n            this.m_state === FadingState.Undefined\n        ) {\n            return;\n        }\n\n        if (this.m_state === FadingState.FadingIn) {\n            // The fade-in is not complete: compute the virtual fadingStartTime in the past, to get\n            // a correct end time:\n            this.startTime = time - this.value * this.fadeTime;\n            this.value = 1.0 - this.value;\n        } else {\n            this.startTime = time;\n            this.value = 0.0;\n            this.opacity = 1;\n        }\n\n        this.m_state = FadingState.FadingOut;\n    }\n\n    /**\n     * Updates opacity to current time, changing the state to [[FadingState.FadedOut]] or\n     * [[FadingState.FadedIn]] when the opacity becomes 0 or 1 respectively.\n     * It does nothing if [[isFading]] !== `true`.\n     *\n     * @param time - Current time.\n     * @param disableFading - `true` if fading is disabled, `false` otherwise.\n     */\n    updateFading(time: number, disableFading: boolean): void {\n        if (this.m_state !== FadingState.FadingIn && this.m_state !== FadingState.FadingOut) {\n            return;\n        }\n\n        if (this.startTime === 0) {\n            this.startTime = time;\n        }\n\n        const fadingTime = time - this.startTime;\n        const startValue = this.m_state === FadingState.FadingIn ? 0 : 1;\n        const endValue = this.m_state === FadingState.FadingIn ? 1 : 0;\n\n        if (disableFading || fadingTime >= this.fadeTime) {\n            this.value = 1.0;\n            this.opacity = endValue;\n            this.m_state =\n                this.m_state === FadingState.FadingIn ? FadingState.FadedIn : FadingState.FadedOut;\n        } else {\n            // TODO: HARP-7648. Do this once for all labels (calculate the last frame value\n            // increment).\n            this.value = fadingTime / this.fadeTime;\n\n            this.opacity = THREE.MathUtils.clamp(\n                MathUtils.smootherStep(startValue, endValue, this.value),\n                0,\n                1\n            );\n            assert(this.isFading());\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\n/**\n * @hidden\n */\nexport class SimpleLineCurve extends THREE.LineCurve {\n    private m_lengths?: number[];\n\n    constructor(v1: THREE.Vector2, v2: THREE.Vector2) {\n        super(v1, v2);\n    }\n\n    getLengths(): number[] {\n        if (this.m_lengths === undefined) {\n            this.m_lengths = [0, this.v2.distanceTo(this.v1)];\n        }\n        return this.m_lengths;\n    }\n}\n\n/**\n * @hidden\n */\nexport class PathParam {\n    private m_point: THREE.Vector2 | undefined;\n\n    constructor(readonly path: THREE.Path, readonly index: number, readonly t: number) {}\n\n    get curve(): THREE.Curve<THREE.Vector2> {\n        return this.path.curves[this.index];\n    }\n\n    get point(): THREE.Vector2 {\n        if (this.m_point === undefined) {\n            this.m_point = this.curve.getPoint(this.t);\n        }\n        return this.m_point;\n    }\n}\n\n/**\n * @hidden\n */\nexport class SimplePath extends THREE.Path {\n    private m_cache?: number[];\n\n    constructor() {\n        super();\n    }\n\n    getLengths(): number[] {\n        if (this.m_cache) {\n            return this.m_cache;\n        }\n        let sum = 0;\n        const lengths = new Array<number>();\n        lengths.push(0);\n\n        this.curves.forEach(curve => {\n            const lineCurve = curve as THREE.LineCurve;\n            sum += lineCurve.v1.distanceTo(lineCurve.v2);\n            lengths.push(sum);\n        });\n        this.m_cache = lengths;\n        return lengths;\n    }\n\n    getParamAt(t: number): PathParam | null {\n        const distance = t * this.getLength();\n        const curveLengths = this.getCurveLengths();\n\n        for (let index = 0; index < curveLengths.length; ++index) {\n            if (curveLengths[index] < distance) {\n                continue;\n            }\n\n            const diff = curveLengths[index] - distance;\n            const curve = this.curves[index] as THREE.LineCurve;\n            const segmentLength = curve.getLength();\n            const u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n            return new PathParam(this, index, u);\n        }\n\n        return null;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { FontCatalog, TextCanvas } from \"@here/harp-text-canvas\";\nimport { assert } from \"@here/harp-utils\";\n\nexport class TextCanvasFactory {\n    private m_minGlyphCount: number = 0; //Min amount of glyphs each [[TextCanvas]] layer can store.\n    private m_maxGlyphCount: number = 0; //Max amount of glyphs each [[TextCanvas]] layer can store.\n\n    /**\n     * Creates an instance of text canvas factory.\n     * @param m_renderer -\n     */\n    constructor(private readonly m_renderer: THREE.WebGLRenderer) {}\n\n    setGlyphCountLimits(min: number, max: number) {\n        this.m_minGlyphCount = min;\n        this.m_maxGlyphCount = max;\n    }\n\n    /**\n     * Creates text canvas\n     * @param fontCatalog - Initial [[FontCatalog]].\n     * @param name - Optional name for the TextCavas\n     */\n    createTextCanvas(fontCatalog: FontCatalog, name?: string): TextCanvas {\n        assert(this.m_maxGlyphCount > 0);\n\n        return new TextCanvas({\n            renderer: this.m_renderer,\n            fontCatalog,\n            minGlyphCount: this.m_minGlyphCount,\n            maxGlyphCount: this.m_maxGlyphCount,\n            name\n        });\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    GeometryKind,\n    GeometryKindSet,\n    ImageTexture,\n    LineMarkerTechnique,\n    PoiStackMode,\n    PoiTechnique\n} from \"@here/harp-datasource-protocol\";\nimport {\n    GlyphData,\n    TextBufferObject,\n    TextLayoutParameters,\n    TextLayoutStyle,\n    TextRenderParameters,\n    TextRenderStyle\n} from \"@here/harp-text-canvas\";\nimport { Math2D } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { ImageItem } from \"../image/Image\";\nimport { PickResult } from \"../PickHandler\";\nimport { PoiBuffer } from \"../poi/PoiRenderer\";\nimport { TextElementType } from \"./TextElementType\";\n\n/**\n * Additional information for an icon that is to be rendered along with a {@link TextElement}.\n * @internal\n */\nexport interface PoiInfo {\n    /**\n     * Technique defining the POI or LineMarker\n     */\n    technique: PoiTechnique | LineMarkerTechnique;\n\n    /**\n     * Name of the {@link @here/harp-datasource-protocol#ImageTexture} or image in\n     * {@link @here/harp-mapview#userImageCache}.\n     */\n    imageTextureName?: string;\n\n    /**\n     * Icon color override\n     *\n     * @see {@link @here/harp-datasource-protocol#MarkerTechniqueParams.iconColor};\n     */\n    iconColor?: THREE.Color;\n\n    /**\n     * Icon brightness.\n     *\n     * @see {@link @here/harp-datasource-protocol#MarkerTechniqueParams.iconBrightness};\n     */\n    iconBrightness?: number;\n\n    /**\n     * Name of the POI table {@link PoiTable}.\n     */\n    poiTableName?: string;\n\n    /**\n     * Name of the POI description in the {@link PoiTable}.\n     */\n    poiName?: string;\n\n    /**\n     * Specify stack mode. Defaults to `ShowInStack`.\n     */\n    stackMode?: PoiStackMode;\n\n    /**\n     * Minimum zoomLevel at which to display the label icon. No default.\n     */\n    iconMinZoomLevel?: number;\n\n    /**\n     * Maximum zoomLevel at which to display the label icon. No default.\n     */\n    iconMaxZoomLevel?: number;\n\n    /**\n     * Minimum zoomLevel at which to display the label text. No default.\n     */\n    textMinZoomLevel?: number;\n\n    /**\n     * Maximum zoomLevel at which to display the label text. No default.\n     */\n    textMaxZoomLevel?: number;\n\n    /**\n     * If true, the text icon will appear even if the text part is blocked by other labels. Defaults\n     * to `false`.\n     */\n    textIsOptional?: boolean;\n\n    /**\n     * If true, the text will appear even if the icon is blocked by other labels or if it cannot be\n     * rendered because of missing icon graphics. Defaults to `false`.\n     */\n    iconIsOptional?: boolean;\n\n    /**\n     * If `true`, icon is allowed to overlap other labels or icons of lower priority.\n     */\n    mayOverlap?: boolean;\n\n    /**\n     * If `true`, icon will reserve screen space, other markers of lower priority will not be\n     * able to overlap.\n     */\n    reserveSpace?: boolean;\n\n    /**\n     * If isValid is `false`, the icon will no longer be placed or rendered. The reason may be a\n     * missing resource. Defaults to `false`.\n     */\n    isValid?: boolean;\n\n    /**\n     * Reference back to owning {@link TextElement}.\n     */\n    textElement: TextElement;\n\n    /**\n     * @hidden\n     * If false, text will not be rendered during camera movements. Defaults to `true`.\n     */\n    renderTextDuringMovements?: boolean;\n\n    /**\n     * @hidden\n     * Direct access to {@link ImageItem} once it is resolved or `null` if not resolvable.\n     */\n    imageItem?: ImageItem | null;\n\n    /**\n     * @hidden\n     * Direct access to {@link @here/harp-datasource-protocol#ImageTexture} once it is resolved.\n     */\n    imageTexture?: ImageTexture;\n\n    /**\n     * @hidden\n     * Layout help: A shield group is for all [[LineMarker]]s that have the same icon and text,\n     * making them the same road shield icon.\n     */\n    shieldGroupIndex?: number;\n\n    /**\n     * @hidden\n     * Internal reference to a render batch, made up of all icons that use the same Material.\n     */\n    buffer?: PoiBuffer;\n\n    /**\n     * @hidden\n     * Should be computed during loading/initializing of `ImageTexture`.\n     */\n    computedWidth?: number;\n\n    /**\n     * @hidden\n     * Should be computed during loading/initializing of `ImageTexture`.\n     */\n    computedHeight?: number;\n\n    /**\n     * @hidden\n     * Should be computed during loading/initializing of `ImageTexture`.\n     */\n    uvBox?: Math2D.UvBox;\n\n    /**\n     * @hidden\n     * Computed from owning {@link TextElement}. Value is set when `PoiInfo` is assigned to\n     * {@link TextElement}.\n     */\n    renderOrder?: number;\n}\n\n/**\n * Return 'true' if the POI has been successfully prepared for rendering.\n *\n * @param poiInfo - PoiInfo containing information for rendering the POI icon.\n * @internal\n */\nexport function poiIsRenderable(poiInfo: PoiInfo): boolean {\n    return poiInfo.buffer !== undefined;\n}\n\nexport interface TextPickResult extends PickResult {\n    /**\n     * Text of the picked {@link TextElement}\n     */\n    text?: string;\n}\n\n/**\n * State of loading.\n */\nexport enum LoadingState {\n    Requested,\n    Loaded,\n    Initialized\n}\n\n/**\n * `TextElement` is used to create 2D text elements (for example, labels).\n * @internal\n */\nexport class TextElement {\n    /**\n     * Text elements with this priority are placed on screen before any others.\n     */\n    static readonly HIGHEST_PRIORITY = Number.MAX_SAFE_INTEGER;\n\n    /**\n     * Determines visibility. If set to `false`, it will not be rendered.\n     */\n    visible: boolean = true;\n\n    /**\n     * Determines minimum zoom level for visibility. Can be used to reduce the number of visible\n     * `TextElement`s based on zoom level.\n     */\n    minZoomLevel?: number;\n    /**\n     * Determines maximum zoom level for visibility. Can be used to reduce the number of visible\n     * `TextElement`s based on zoom level.\n     */\n    maxZoomLevel?: number;\n\n    /**\n     * If `true`, label is allowed to overlap other labels or icons of lower priority.\n     * @default `false`\n     */\n    mayOverlap?: boolean;\n\n    /**\n     * If `true`, label will reserve screen space, other markers of lower priority will not be\n     * able to overlap.\n     * @default `true`\n     */\n    reserveSpace?: boolean;\n\n    /**\n     * If `true`, the label will always be rendered on top. If overlapping with other labels, the\n     * render order is undefined;\n     * @default `false`\n     */\n    alwaysOnTop?: boolean;\n\n    /**\n     * Ignore distance limit. Used for label in labeled-icons.\n     */\n    ignoreDistance?: boolean;\n\n    /**\n     * Scaling factor of text. Defaults to 0.5, reducing the size ot 50% in the distance.\n     */\n    distanceScale: number = 0.5;\n\n    /**\n     * Optional user data. Will be retrieved during picking.\n     */\n    userData?: any;\n\n    /**\n     * If specified, determines the render order between `TextElement`s. The number different\n     * renderOrders should be as small as possible, because every specific `renderOrder` may result\n     * in one or more draw calls.\n     *\n     * TextElements with the same integer `renderOrder` will be rendered in the same batch.\n     *\n     * The `renderOrder` of `TextElement`s are only relative to other `TextElement`s, and not other\n     * map elements.\n     *\n     * A `TextElement` with a higher `renderOrder` will be rendered after a `TextElement` with a\n     * lower `renderOrder`.\n     */\n    renderOrder: number = 0;\n\n    /**\n     * Specified kind of geometry. One kind is set as default in the technique, and can be\n     * overridden in the style.\n     */\n    kind?: GeometryKind | GeometryKindSet;\n\n    /**\n     * @hidden\n     * Used during rendering.\n     */\n    loadingState?: LoadingState;\n\n    /**\n     * If set to `true` the geometry has been already overlaid on elevation.\n     */\n    elevated: boolean = false;\n\n    /**\n     * @hidden\n     * Array storing the style {@link @here/harp-text-canvas#GlyphData} for\n     * this `TextElement` to speed up label placement in\n     * {@link TextElementsRenderer}. Valid after `loadingState` is `Initialized`.\n     */\n    glyphs?: GlyphData[];\n\n    /**\n     * @hidden\n     * Array storing the casing (`true`: uppercase, `false`: lowercase)\n     * for this `TextElement`.\n     * Used by labels in {@link TextElementsRenderer} to support\n     * `SmallCaps`. Valid after `loadingState`\n     * is `Initialized`.\n     */\n    glyphCaseArray?: boolean[];\n\n    /**\n     * Screen space bounds for this `TextElement`.\n     *\n     * @remarks\n     * Used by point labels in {@link TextElementsRenderer}.\n     * Valid after `loadingState` is `Initialized`.\n     */\n    bounds?: THREE.Box2;\n\n    /**\n     * @hidden\n     * Pre-computed text vertex buffer. Used by point labels in {@link TextElementsRenderer}. Valid\n     * after label becomes visible for the first time.\n     */\n    textBufferObject?: TextBufferObject;\n\n    /**\n     * @hidden\n     * If `true`, the estimated bounding box of the path is too small for the label to fit, so it is\n     * being ignored for rendering in the latest frame.\n     */\n    dbgPathTooSmall?: boolean;\n\n    pathLengthSqr?: number;\n\n    /**\n     * Time to fade in text in milliseconds.\n     * @default [[DEFAULT_FADE_TIME]] 800\n     */\n    textFadeTime?: number;\n\n    type: TextElementType;\n\n    private m_poiInfo?: PoiInfo;\n\n    private m_renderStyle?: TextRenderStyle;\n\n    private m_layoutStyle?: TextLayoutStyle;\n\n    /**\n     * Creates a new `TextElement`.\n     *\n     * @param text - The text to display.\n     * @param points - The position or a list of points for a curved text, both in world space.\n     * @param renderParams - `TextElement` text rendering parameters.\n     * @param layoutParams - `TextElement` text layout parameters.\n     * @param priority - The priority of the `TextElement. Elements with the highest priority get\n     *              placed first, elements with priority of `0` are placed last, elements with a\n     *              negative value are always rendered, ignoring priorities and allowing overrides.\n     * @param xOffset - Optional X offset of this `TextElement` in screen coordinates.\n     * @param yOffset - Optional Y offset of this `TextElement` in screen coordinates.\n     * @param featureId - Optional string to identify feature (originated from {@link DataSource}).\n     *                  Number ids are deprecated in favor of strings.\n     * @param fadeNear - Distance to the camera (0.0 = camera position, 1.0 = farPlane) at which the\n     *              label starts fading out (opacity decreases).\n     * @param fadeFar - Distance to the camera (0.0 = camera position, 1.0 = farPlane) at which the\n     *              label becomes transparent. A value of <= 0.0 disables fading.\n     * @param offsetDirection - Direction represented as an angle in degrees clockwise from north to\n     * offset the icon in world space.\n     */\n    constructor(\n        readonly text: string,\n        readonly points: THREE.Vector3[] | THREE.Vector3,\n        readonly renderParams: TextRenderParameters | TextRenderStyle,\n        readonly layoutParams: TextLayoutParameters | TextLayoutStyle,\n        public priority = 0,\n        public xOffset: number = 0,\n        public yOffset: number = 0,\n        public featureId?: string | number,\n        public style?: string,\n        public fadeNear?: number,\n        public fadeFar?: number,\n        readonly tileOffset?: number,\n        readonly offsetDirection?: number,\n        readonly dataSourceName?: string,\n        readonly dataSourceOrder?: number\n    ) {\n        if (renderParams instanceof TextRenderStyle) {\n            this.renderStyle = renderParams;\n        }\n        if (layoutParams instanceof TextLayoutStyle) {\n            this.layoutStyle = layoutParams;\n        }\n\n        this.type =\n            points instanceof THREE.Vector3 ? TextElementType.PoiLabel : TextElementType.PathLabel;\n    }\n\n    /**\n     * The text element position or the first point of the path used to render a curved text, both\n     * in world space.\n     */\n    get position(): THREE.Vector3 {\n        if (this.points instanceof Array) {\n            const p = this.points[0];\n            return p;\n        }\n        return this.points as THREE.Vector3;\n    }\n\n    /**\n     * The list of points in world space used to render the text along a path or `undefined`.\n     */\n    get path(): THREE.Vector3[] | undefined {\n        if (this.points instanceof Array) {\n            return this.points;\n        }\n        return undefined;\n    }\n\n    /**\n     * If `true`, `TextElement` is allowed to overlap other labels or icons of lower priority.\n     *\n     * @default `false`\n     */\n    get textMayOverlap(): boolean {\n        return this.mayOverlap === true;\n    }\n\n    set textMayOverlap(mayOverlap: boolean) {\n        this.mayOverlap = mayOverlap;\n    }\n\n    /**\n     * If `true`, `TextElement` will reserve screen space, other markers of lower priority will not\n     * be able to overlap.\n     *\n     * @default `true`\n     */\n    get textReservesSpace(): boolean {\n        return this.reserveSpace !== false;\n    }\n\n    set textReservesSpace(reserveSpace: boolean) {\n        this.reserveSpace = reserveSpace;\n    }\n\n    /**\n     * Contains additional information about icon to be rendered along with text.\n     */\n    get poiInfo(): PoiInfo | undefined {\n        return this.m_poiInfo;\n    }\n\n    set poiInfo(poiInfo: PoiInfo | undefined) {\n        this.m_poiInfo = poiInfo;\n        if (poiInfo !== undefined) {\n            if (this.path !== undefined) {\n                this.type = TextElementType.LineMarker;\n            }\n            const poiRenderOrder = this.renderOrder !== undefined ? this.renderOrder : 0;\n            poiInfo.renderOrder = poiRenderOrder;\n        }\n    }\n\n    /**\n     * @returns The style used to render this text element, undefined if not set yet.\n     */\n    get renderStyle(): TextRenderStyle | undefined {\n        return this.m_renderStyle;\n    }\n\n    /**\n     * Sets style used for text rendering.\n     * @param style - The style to use.\n     */\n    set renderStyle(style: TextRenderStyle | undefined) {\n        this.m_renderStyle = style;\n    }\n\n    /**\n     * @returns The style used to layout this text element, undefined if not set yet.\n     */\n    get layoutStyle(): TextLayoutStyle | undefined {\n        return this.m_layoutStyle;\n    }\n\n    /**\n     * Sets the style used for text layout.\n     * @param style - The style to use.\n     */\n    set layoutStyle(style: TextLayoutStyle | undefined) {\n        this.m_layoutStyle = style;\n    }\n\n    /**\n     * @returns Whether this text element has a valid feature id.\n     */\n    hasFeatureId(): boolean {\n        if (this.featureId === undefined) {\n            return false;\n        }\n\n        if (typeof this.featureId === \"number\") {\n            return this.featureId !== 0;\n        }\n\n        return this.featureId.length > 0;\n    }\n\n    /**\n     * Disposes of any allocated resources.\n     */\n    dispose() {\n        const poiBuffer = this.poiInfo?.buffer;\n        if (poiBuffer) {\n            poiBuffer.decreaseRefCount();\n        }\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    AttributeMap,\n    Env,\n    getFeatureId,\n    getPropertyValue,\n    IndexedTechniqueParams,\n    isTextTechnique,\n    LineMarkerTechnique,\n    MapEnv,\n    PoiTechnique,\n    TextTechnique\n} from \"@here/harp-datasource-protocol\";\nimport {\n    ContextualArabicConverter,\n    TextLayoutStyle,\n    TextRenderStyle\n} from \"@here/harp-text-canvas\";\nimport { assert, LoggerManager, MathUtils } from \"@here/harp-utils\";\n\nimport { PoiBuilder } from \"../poi/PoiBuilder\";\nimport { TextElement } from \"./TextElement\";\nimport { DEFAULT_TEXT_DISTANCE_SCALE } from \"./TextElementsRenderer\";\nimport { TileTextStyleCache } from \"./TileTextStyleCache\";\n\nconst logger = LoggerManager.instance.create(\"TextElementBuilder\");\n\n/**\n * Constructs {@link TextElement} objects from {@link @here/harp-datasource-protocol/Technique},\n * text, coordinates and optional icon.\n */\nexport class TextElementBuilder {\n    private m_priority?: number;\n    private m_fadeNear?: number;\n    private m_fadeFar?: number;\n    private m_minZoomLevel?: number;\n    private m_maxZoomLevel?: number;\n    private m_distanceScale: number = DEFAULT_TEXT_DISTANCE_SCALE;\n    private m_mayOverlap?: boolean;\n    private m_reserveSpace?: boolean;\n    private m_renderStyle?: TextRenderStyle;\n    private m_layoutStype?: TextLayoutStyle;\n    private m_technique?: (PoiTechnique | LineMarkerTechnique | TextTechnique) &\n        IndexedTechniqueParams;\n\n    private m_renderOrder: number;\n    private m_xOffset?: number;\n    private m_yOffset?: number;\n    private m_poiBuilder?: PoiBuilder;\n    private m_alwaysOnTop?: boolean;\n\n    // Upper bound for render order values coming from a technique. The lowest upper bound\n    // (`renderOrderUpBound`) will be smaller if `baseRenderOrder` is not an integer.\n    static readonly RENDER_ORDER_UP_BOUND = 1e7;\n\n    // Lowest upper bound for render order values, taking into account the `baseRenderOrder` given\n    // at construction.\n    readonly renderOrderUpBound: number;\n\n    /**\n     * Aligns a {@link TextElement}'s minZoomLevel and maxZoomLevel with values set in\n     * {@link PoiInfo}.\n     * @remarks Selects the smaller/larger one of the two min/max values for icon and text, because\n     * the TextElement is a container for both.\n     * @param textElement - The {@link TextElement} whose zoom level ranges will be aligned.\n     */\n    static alignZoomLevelRanges(textElement: TextElement): void {\n        if (!textElement.poiInfo) {\n            return;\n        }\n        const poiInfo = textElement.poiInfo;\n\n        textElement.minZoomLevel =\n            textElement.minZoomLevel ??\n            MathUtils.min2(poiInfo.iconMinZoomLevel, poiInfo.textMinZoomLevel);\n\n        textElement.maxZoomLevel =\n            textElement.maxZoomLevel ??\n            MathUtils.max2(poiInfo.iconMaxZoomLevel, poiInfo.textMaxZoomLevel);\n    }\n\n    /**\n     * Combines two render order numbers into a single one.\n     * @param baseRenderOrder - The most significative part of the render order.\n     * @param offset - The least significative part of the render order. It must be within the\n     * interval (-RENDER_ORDER_UP_BOUND, RENDER_ORDER_UP_BOUND).\n     * @return The combined render order.\n     */\n    static composeRenderOrder(baseRenderOrder: number, offset: number): number {\n        return baseRenderOrder * TextElementBuilder.RENDER_ORDER_UP_BOUND + offset;\n    }\n\n    /**\n     * Constructor\n     *\n     * @param m_env - The {@link @link @here/harp-datasource-protocol#MapEnv} used to evaluate\n     * technique properties.\n     * @param m_styleCache - To cache instances of {@link @here/harp-text-canvas/TextRenderStyle}\n     * and {@link @here/harp-text-canvas/TextLayoutStyle}.\n     */\n    constructor(\n        private readonly m_env: MapEnv | Env,\n        private readonly m_styleCache: TileTextStyleCache,\n        private readonly m_baseRenderOrder: number\n    ) {\n        this.m_renderOrder = m_baseRenderOrder;\n\n        if (Number.isInteger(m_baseRenderOrder)) {\n            this.renderOrderUpBound = TextElementBuilder.RENDER_ORDER_UP_BOUND;\n        } else {\n            // If base render order is not an integer, lower render order upper bound to leave room\n            // for the decimal places.\n            const absBaseRenderOrder = Math.abs(m_baseRenderOrder);\n            this.renderOrderUpBound =\n                (absBaseRenderOrder - Math.floor(absBaseRenderOrder)) *\n                TextElementBuilder.RENDER_ORDER_UP_BOUND;\n        }\n\n        if (!this.isValidRenderOrder(m_baseRenderOrder)) {\n            logger.warn(\n                `Large base render order (${m_baseRenderOrder}) might cause precision issues.`\n            );\n        }\n    }\n\n    /**\n     * Sets a technique that will be used to create text elements on subsequent calls to\n     * {@link TextElementBuilder.build} until the next call to this method.\n     *\n     * @param technique - The {@link @here/harp-datasource-protocol/Technique}.\n     * @return This builder.\n     */\n    withTechnique(\n        technique: (PoiTechnique | LineMarkerTechnique | TextTechnique) & IndexedTechniqueParams\n    ): this {\n        this.m_technique = technique;\n\n        // Make sorting stable.\n        this.m_priority = getPropertyValue(technique.priority, this.m_env) ?? 0;\n\n        this.m_fadeNear = getPropertyValue(technique.fadeNear, this.m_env) ?? undefined;\n        this.m_fadeFar = getPropertyValue(technique.fadeFar, this.m_env) ?? undefined;\n        this.m_minZoomLevel = getPropertyValue(technique.minZoomLevel, this.m_env) ?? undefined;\n        this.m_maxZoomLevel = getPropertyValue(technique.maxZoomLevel, this.m_env) ?? undefined;\n        this.m_distanceScale = technique.distanceScale ?? DEFAULT_TEXT_DISTANCE_SCALE;\n        this.m_renderStyle = this.m_styleCache.getRenderStyle(technique);\n        this.m_layoutStype = this.m_styleCache.getLayoutStyle(technique);\n        this.m_xOffset = getPropertyValue(technique.xOffset, this.m_env);\n        this.m_yOffset = getPropertyValue(technique.yOffset, this.m_env);\n\n        const techniqueRenderOrder = getPropertyValue(technique.renderOrder, this.m_env) ?? 0;\n\n        if (!this.isValidRenderOrder(techniqueRenderOrder)) {\n            const msg = `Unsupported large render order (${techniqueRenderOrder})`;\n            logger.error(msg);\n            assert(false, msg);\n        }\n        this.m_renderOrder = TextElementBuilder.composeRenderOrder(\n            this.m_baseRenderOrder,\n            techniqueRenderOrder\n        );\n\n        if (isTextTechnique(technique)) {\n            this.withTextTechnique(technique);\n        } else {\n            this.withPoiTechnique(technique);\n        }\n\n        return this;\n    }\n\n    /**\n     * Sets an icon that will be used to create text elements on subsequent calls to\n     * {@link TextElementBuilder.build} until the next call to this method.\n     *\n     * @param imageTextureName - The name of the icon image.\n     * @param shieldGroupIndex - Index to the shield group.\n     * @return This builder.\n     */\n    withIcon(imageTextureName?: string, shieldGroupIndex?: number): this {\n        assert(this.m_poiBuilder !== undefined);\n        this.m_poiBuilder!.withIcon(imageTextureName, shieldGroupIndex);\n\n        return this;\n    }\n\n    /**\n     * Creates a {@link TextElement} with the given properties.\n     *\n     * @param text - The text to be displayed.\n     * @param points - The position(s) for the text element.\n     * @param tileOffset - The TextElement's tile offset, see {@link Tile.offset}.\n     * @param dataSourceName - The name of the data source.\n     * @param attributes - TextElement attribute map.\n     * @param pathLengthSqr - Precomputed path length squared for path labels.\n     * @return The created text element.\n     */\n    build(\n        text: string,\n        points: THREE.Vector3 | THREE.Vector3[],\n        tileOffset: number,\n        dataSourceName: string,\n        dataSourceOrder: number,\n        attributes?: AttributeMap,\n        pathLengthSqr?: number,\n        offsetDirection?: number\n    ): TextElement {\n        const featureId = getFeatureId(attributes);\n        assert(this.m_technique !== undefined);\n        assert(this.m_renderStyle !== undefined);\n        assert(this.m_layoutStype !== undefined);\n\n        const technique = this.m_technique!;\n        const renderStyle = this.m_renderStyle!;\n        const layoutStyle = this.m_layoutStype!;\n\n        const textElement = new TextElement(\n            ContextualArabicConverter.instance.convert(text),\n            points,\n            renderStyle,\n            layoutStyle,\n            this.m_priority,\n            this.m_xOffset,\n            this.m_yOffset,\n            featureId,\n            technique.style,\n            this.m_fadeNear,\n            this.m_fadeFar,\n            tileOffset,\n            offsetDirection,\n            dataSourceName,\n            dataSourceOrder\n        );\n        textElement.minZoomLevel = this.m_minZoomLevel;\n        textElement.maxZoomLevel = this.m_maxZoomLevel;\n        textElement.distanceScale = this.m_distanceScale;\n        textElement.mayOverlap = this.m_mayOverlap;\n        textElement.reserveSpace = this.m_reserveSpace;\n        textElement.kind = technique.kind;\n        // Get the userData for text element picking.\n        textElement.userData = attributes;\n        textElement.textFadeTime =\n            technique.textFadeTime !== undefined ? technique.textFadeTime * 1000 : undefined;\n        textElement.pathLengthSqr = pathLengthSqr;\n        textElement.alwaysOnTop = this.m_alwaysOnTop;\n        textElement.renderOrder = this.m_renderOrder;\n\n        textElement.poiInfo = this.m_poiBuilder?.build(textElement);\n        TextElementBuilder.alignZoomLevelRanges(textElement);\n\n        return textElement;\n    }\n\n    private withTextTechnique(technique: TextTechnique & IndexedTechniqueParams) {\n        this.m_mayOverlap = technique.mayOverlap === true;\n        this.m_reserveSpace = technique.reserveSpace !== false;\n        this.m_poiBuilder = undefined;\n    }\n\n    private withPoiTechnique(\n        technique: (PoiTechnique | LineMarkerTechnique) & IndexedTechniqueParams\n    ) {\n        this.m_mayOverlap = technique.textMayOverlap === true;\n        this.m_reserveSpace = technique.textReserveSpace !== false;\n        this.m_alwaysOnTop = technique.alwaysOnTop === true;\n\n        if (!this.m_poiBuilder) {\n            this.m_poiBuilder = new PoiBuilder(this.m_env);\n        }\n        this.m_poiBuilder.withTechnique(technique);\n    }\n\n    private isValidRenderOrder(renderOrder: number) {\n        return Math.abs(renderOrder) < this.renderOrderUpBound;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { PriorityListGroup } from \"@here/harp-utils\";\n\nimport { TextElement } from \"./TextElement\";\n\n/**\n * Group of {@link TextElement} sharing same priority.\n */\nexport class TextElementGroup extends PriorityListGroup<TextElement> {}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GroupedPriorityList } from \"@here/harp-utils\";\n\nimport { TextElement } from \"./TextElement\";\n\n/**\n * List of {@link TextElement} groups sorted by priority.\n */\nexport class TextElementGroupPriorityList extends GroupedPriorityList<TextElement> {}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { assert } from \"@here/harp-utils\";\n\nimport { TextElementGroup } from \"./TextElementGroup\";\nimport { TextElementState } from \"./TextElementState\";\nimport { TextElementType } from \"./TextElementType\";\n\n/**\n * Type of functions used to do early rejection of elements during group state creation or update.\n * @param textElementState - The state of the text element to check.\n * @returns `undefined` if element was rejected, otherwise its current view distance.\n */\nexport type TextElementFilter = (textElementState: TextElementState) => number | undefined;\n\n/**\n * `TextElementGroupState` keeps the state of a text element group and each element in it while\n * they're being rendered.\n */\nexport class TextElementGroupState {\n    private readonly m_textElementStates: TextElementState[];\n    private m_visited: boolean = false;\n\n    /**\n     * Creates the state for specified group.\n     * @param group - The group of which the state will be created.\n     * @param tileKey - The key of the tile to which this group belongs.\n     * @param filter - Function used to do early rejection. @see [[TextElementFilter]].\n     */\n    constructor(\n        readonly group: TextElementGroup,\n        readonly tileKey: TileKey,\n        filter: TextElementFilter\n    ) {\n        assert(group.elements.length > 0);\n        const length = group.elements.length;\n        this.m_textElementStates = [];\n        this.m_visited = true;\n\n        // TODO: HARP-7648. Reduce number of allocations here:\n        // a) Avoid creating the state for labels that don't pass early placement checks and make\n        //    this checks more strict.\n        // b) Break label state objects into a set of arrays held at group level, one for each\n        //    primitive field in the label state.\n        for (let i = 0; i < length; ++i) {\n            const textElement = group.elements[i];\n            if (textElement.type === TextElementType.LineMarker && textElement.path !== undefined) {\n                const numPoints = textElement.path.length;\n                for (let p = 0; p < numPoints; p++) {\n                    const state = new TextElementState(textElement, p);\n                    const textDistance = filter(state);\n                    state.update(textDistance);\n                    this.m_textElementStates.push(state);\n                }\n            } else {\n                const state = new TextElementState(textElement);\n                const textDistance = filter(state);\n                state.update(textDistance);\n                this.m_textElementStates.push(state);\n            }\n        }\n    }\n\n    /**\n     * Indicates whether the group has been submitted to the\n     * {@link TextElementsRenderer} in the current frame.\n     */\n    get visited(): boolean {\n        return this.m_visited;\n    }\n\n    set visited(visited: boolean) {\n        this.m_visited = visited;\n    }\n\n    /**\n     * @returns the priority of the text elements in the group.\n     */\n    get priority() {\n        return this.group.priority;\n    }\n\n    /**\n     * Updates the fading state of all text elements within the group to the specified time.\n     * @param time - The time to which the fading state will be updated.\n     * @param disableFading - `true` if fading is disabled, `false` otherwise.\n     */\n    updateFading(time: number, disableFading: boolean): void {\n        for (const elementState of this.m_textElementStates) {\n            if (elementState !== undefined) {\n                elementState.updateFading(time, disableFading);\n            }\n        }\n    }\n\n    /**\n     * Calls the specified callback for every visible text elements in the group.\n     * @param visibleElementsCallback - Functions that will be called for every visible text element\n     * in the group.\n     */\n    traverseVisibleElements(visibleElementsCallback: (e: TextElementState) => void): void {\n        for (const elementState of this.m_textElementStates) {\n            if (elementState !== undefined && elementState.visible) {\n                visibleElementsCallback(elementState);\n            }\n        }\n    }\n\n    /**\n     * Updates the states of elements within the group.\n     * @param filter - Function used to do early rejection. @see [[TextElementFilter]].\n     */\n    updateElements(filter: TextElementFilter) {\n        for (const elementState of this.m_textElementStates) {\n            const textDistance = filter(elementState);\n            elementState.update(textDistance);\n        }\n    }\n\n    get size(): number {\n        return this.m_textElementStates.length;\n    }\n\n    /**\n     * Returns text element states.\n     * @returns Array of element states.\n     */\n    get textElementStates(): TextElementState[] {\n        return this.m_textElementStates;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    hAlignFromPlacement,\n    hPlacementFromAlignment,\n    TextPlacement,\n    vAlignFromPlacement,\n    vPlacementFromAlignment\n} from \"@here/harp-text-canvas\";\nimport { assert } from \"@here/harp-utils\";\n\nimport { LayoutState } from \"./LayoutState\";\nimport { RenderState } from \"./RenderState\";\nimport { TextElement } from \"./TextElement\";\nimport { TextElementType } from \"./TextElementType\";\n\n/**\n * `TextElementState` keeps the current state of a text element while it's being rendered.\n */\nexport class TextElementState {\n    /**\n     * @hidden\n     * Used during label placement to reserve space from front to back.\n     */\n    private m_viewDistance: number | undefined;\n\n    /**\n     * @hidden\n     * Used during rendering.\n     */\n    private m_iconRenderState?: RenderState;\n\n    /**\n     * @hidden\n     * Used during rendering.\n     */\n    private m_textRenderState?: RenderState;\n    /**\n     * @hidden\n     * Used to store recently used text layout.\n     */\n    private m_textLayoutState?: LayoutState;\n    /**\n     * @hidden\n     * Stores index into path for TextElements that are of type LineMarker.\n     */\n    private readonly m_lineMarkerIndex?: number;\n\n    /**\n     *\n     * @param element - TextElement this state represents\n     * @param positionIndex - Optional index for TextElements of type LineMarker.\n     */\n    constructor(readonly element: TextElement, positionIndex?: number) {\n        this.m_lineMarkerIndex = positionIndex;\n    }\n\n    get initialized(): boolean {\n        return this.m_textRenderState !== undefined || this.m_iconRenderState !== undefined;\n    }\n\n    /**\n     * @returns `true` if any component of the element is visible, `false` otherwise.\n     */\n    get visible(): boolean {\n        if (this.m_textRenderState !== undefined && this.m_textRenderState.isVisible()) {\n            return true;\n        }\n\n        const iconRenderState = this.iconRenderState;\n        if (iconRenderState !== undefined && iconRenderState.isVisible()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Return the last text placement used.\n     *\n     * If the text wasn't yet rendered or have no alternative placements it will fallback to\n     * style/theme based placement.\n     *\n     * @returns [[TextPlacement]] object containing vertical/horizontal align.\n     */\n    get textPlacement(): TextPlacement {\n        const themeLayout = this.element.layoutStyle!;\n        const stateLayout = this.m_textLayoutState;\n        // Would be good to test for persistence when getting state layout, but with this\n        // most of the isolated placement unit tests will fail.\n        const lastPlacement =\n            stateLayout !== undefined\n                ? stateLayout.textPlacement\n                : {\n                      h: hPlacementFromAlignment(themeLayout.horizontalAlignment),\n                      v: vPlacementFromAlignment(themeLayout.verticalAlignment)\n                  };\n        return lastPlacement;\n    }\n\n    /**\n     * Set text placement to be used.\n     *\n     * This may be base text anchor placement as defined by style or alternative placement.\n     *\n     * @param placement - The new [[TextPlacement]] to be used.\n     */\n    set textPlacement(placement: TextPlacement) {\n        if (this.m_textLayoutState === undefined && this.isBaseTextPlacement(placement) === true) {\n            // Do nothing, layout state is not required cause we leave the base placement.\n            return;\n        }\n        if (this.m_textLayoutState === undefined) {\n            // State is not yet defined, but we have placement to store, either alternative or\n            // not yet specified in the context of layoutStyle.\n            this.m_textLayoutState = new LayoutState(placement);\n        } else {\n            this.m_textLayoutState.textPlacement = placement;\n        }\n    }\n\n    /**\n     * Returns information if the text placement provided is the base one defined in style (theme).\n     *\n     * @param placement - The [[TextPlacement]] to check.\n     * @returns [[true]] if the placement provided is exactly the same as in theme base layout,\n     * [[false]] if it differs from the basic layout provided in style or\n     * [[undefined]] if the layout style is not yet defined so it is hard to say.\n     */\n    isBaseTextPlacement(placement: TextPlacement): boolean | undefined {\n        const themeLayout = this.element.layoutStyle;\n        if (themeLayout !== undefined) {\n            return (\n                hAlignFromPlacement(placement.h) === themeLayout.horizontalAlignment &&\n                vAlignFromPlacement(placement.v) === themeLayout.verticalAlignment\n            );\n        }\n        return undefined;\n    }\n\n    /**\n     * Resets the element to an initialized state.\n     */\n    reset() {\n        if (this.m_textRenderState !== undefined) {\n            this.m_textRenderState.reset();\n        }\n        if (this.m_textLayoutState !== undefined) {\n            if (this.element.layoutStyle !== undefined) {\n                this.m_textLayoutState.reset(this.element.layoutStyle);\n            } else {\n                this.m_textLayoutState = undefined;\n            }\n        }\n\n        if (this.iconRenderState) {\n            (this.m_iconRenderState as RenderState).reset();\n        }\n        this.m_viewDistance = undefined;\n        this.element.textBufferObject = undefined;\n        this.element.bounds = undefined;\n    }\n\n    /**\n     * Replaces given text element, inheriting its current state.\n     * The predecessor text element state is erased.\n     * @param predecessor - Text element state to be replaced.\n     */\n    replace(predecessor: TextElementState) {\n        this.m_textRenderState = predecessor.m_textRenderState;\n        this.m_textLayoutState = predecessor.m_textLayoutState;\n        this.m_iconRenderState = predecessor.m_iconRenderState;\n        predecessor.m_textRenderState = undefined;\n        predecessor.m_textLayoutState = undefined;\n        predecessor.m_iconRenderState = undefined;\n\n        if (this.element.glyphs === undefined) {\n            // Use the predecessor glyphs and case array until proper ones are computed.\n            this.element.glyphs = predecessor.element.glyphs;\n            this.element.glyphCaseArray = predecessor.element.glyphCaseArray;\n        }\n        this.element.bounds = undefined;\n        this.element.textBufferObject = undefined;\n    }\n\n    /**\n     * Returns the last computed distance of the text element to the camera.\n     * @returns Distance to camera.\n     */\n    get viewDistance(): number | undefined {\n        return this.m_viewDistance;\n    }\n\n    /**\n     * Updates the text element state.\n     * @param viewDistance - The new view distance to set. If `undefined`, element is considered to\n     * be out of view.\n     */\n    update(viewDistance: number | undefined) {\n        if (!this.initialized && viewDistance !== undefined) {\n            this.initializeRenderStates();\n        }\n\n        this.setViewDistance(viewDistance);\n    }\n\n    /**\n     * Sets the distance of the element to the current view center.\n     * @param viewDistance - The new view distance to set. If `undefined`, element is considered to\n     * be out of view.\n     */\n    setViewDistance(viewDistance: number | undefined) {\n        this.m_viewDistance = viewDistance;\n    }\n\n    /**\n     * Return the last distance that has been computed for sorting during placement. This may not be\n     * the actual distance if the camera is moving, as the distance is computed only during\n     * placement. If the property `alwaysOnTop` is true, the value returned is always `0`.\n     *\n     * @returns 0 or negative distance to camera.\n     */\n    get renderDistance(): number {\n        return this.element.alwaysOnTop === true\n            ? 0\n            : this.m_viewDistance !== undefined\n            ? -this.m_viewDistance\n            : 0;\n    }\n\n    /**\n     * @returns The text render state.\n     */\n    get textRenderState(): RenderState | undefined {\n        return this.m_textRenderState;\n    }\n\n    /**\n     * Returns the icon render state for the case where the text element has only one icon.\n     * @returns The icon render state if the text element has a single icon, otherwise undefined.\n     */\n    get iconRenderState(): RenderState | undefined {\n        return this.m_iconRenderState;\n    }\n\n    /**\n     * Returns the index into the path of the TextElement if the TextElement is of type LineMarker,\n     * `undefined` otherwise.\n     */\n    public get lineMarkerIndex(): number | undefined {\n        return this.m_lineMarkerIndex;\n    }\n\n    /**\n     * Returns the position of the TextElement. If this TextElementState belongs to a TextElement\n     * of type LineMarker, it returns the position of the marker at the references index in the\n     * path of the TextElement.\n     */\n    public get position(): THREE.Vector3 {\n        return this.element.path !== undefined && this.m_lineMarkerIndex !== undefined\n            ? this.element.path[this.m_lineMarkerIndex]\n            : this.element.position;\n    }\n\n    /**\n     * Updates the fading state to the specified time.\n     * @param time - The current time.\n     * @param disableFading - If `True` there will be no fading transitions, i.e., state will go\n     * directly from FadedIn to FadedOut and vice versa.\n     */\n    updateFading(time: number, disableFading: boolean): void {\n        if (this.m_textRenderState !== undefined) {\n            this.m_textRenderState.updateFading(time, disableFading);\n        }\n\n        if (this.iconRenderState !== undefined) {\n            this.iconRenderState.updateFading(time, disableFading);\n        }\n    }\n\n    /**\n     * Initialize text and icon render states\n     */\n    private initializeRenderStates() {\n        assert(this.m_textRenderState === undefined);\n        assert(this.m_textLayoutState === undefined);\n        assert(this.m_iconRenderState === undefined);\n\n        const { textFadeTime } = this.element;\n        this.m_textRenderState = new RenderState(textFadeTime);\n\n        if (\n            this.element.type === TextElementType.PoiLabel ||\n            this.element.type === TextElementType.LineMarker\n        ) {\n            // If there's no fade time for icon, use same as text to keep fading of text and icon\n            // in sync.\n            const techniqueIconFadeTime = this.element.poiInfo?.technique.iconFadeTime;\n            const iconFadeTime =\n                techniqueIconFadeTime !== undefined ? techniqueIconFadeTime * 1000 : textFadeTime;\n            this.m_iconRenderState = new RenderState(iconFadeTime);\n        }\n    }\n}\n\n/**\n * Test if the TextElement this {@link TextElementState} refers to is of type LineMarker.\n * @param state - Text element state to test.\n */\nexport function isLineMarkerElementState(state: TextElementState) {\n    return (state as any).m_lineMarkerIndex !== undefined;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { assert, LoggerManager, LogLevel } from \"@here/harp-utils\";\n\nimport { TextElement } from \"./TextElement\";\nimport { TextElementGroup } from \"./TextElementGroup\";\nimport { TextElementFilter, TextElementGroupState } from \"./TextElementGroupState\";\nimport { isLineMarkerElementState, TextElementState } from \"./TextElementState\";\nimport { TextElementType } from \"./TextElementType\";\n\nconst logger = LoggerManager.instance.create(\"TextElementsStateCache\", { level: LogLevel.Log });\n\n/**\n * Label distance tolerance squared in meters. Point labels with the same name that are closer in\n * world space than this value are treated as the same label. Used to identify duplicate labels in\n * overlapping tiles and label replacements at different storage levels.\n */\nfunction getDedupSqDistTolerance(zoomLevel: number) {\n    // Defining here a minimum tolerance of 10m at zoom level 13 or higher.\n    const minSqTol = 100;\n    const minSqTolLevel = 13;\n    const maxLevelDelta = 4;\n    const levelDelta = Math.min(\n        maxLevelDelta,\n        minSqTolLevel - Math.min(minSqTolLevel, Math.floor(zoomLevel))\n    );\n    // Distance tolerance computed applying a factor over an arbitrary minimum tolerance for a\n    // chosen zoom level. The factor is an exponential function on zoom level delta wrt minimum\n    // tolerance zoom level.\n    // error = sqrt(sqError) = sqrt(minSqError* 2^(4d)) = minError*2^(2d)\n\n    return minSqTol << (levelDelta << 2);\n}\n\nconst tmpCachedDuplicate: { entries: TextElementState[]; index: number } = {\n    entries: [],\n    index: -1\n};\n\nfunction getCacheKey(element: TextElement): string | number {\n    return element.hasFeatureId() ? element.featureId! : element.text;\n}\n\n/**\n * Finds a duplicate for a text element among a list of candidates using their feature ids.\n * @param elementState - The state of the text element for which the duplicate will be found.\n * @param candidates - The list of candidates to check.\n * @returns The index of the candidate chosen as duplicate, or `undefined` if none was found.\n */\nfunction findDuplicateById(\n    elementState: TextElementState,\n    candidates: TextElementState[]\n): number | undefined {\n    // Cached entries with same feature id found, find the entry with the same tile offset.\n    const element = elementState.element;\n    const duplicateIndex = candidates.findIndex(\n        entry => entry.element.tileOffset === element.tileOffset\n    );\n    if (duplicateIndex === -1) {\n        return -1;\n    }\n    const candidateElement = candidates[duplicateIndex];\n    const candidate = candidateElement.element;\n    assert(element.featureId === candidate.featureId);\n\n    if (candidate.text !== element.text) {\n        // Labels with different text shouldn't share the same feature id. This points to\n        // an issue on the map data side. Submit a ticket to the corresponding map backend\n        // issue tracking system if available (e.g. OLPRPS project in JIRA for OMV),\n        // indicating affected labels including tile keys, texts and feature id.\n        logger.debug(\n            `Text feature id ${element.featureId} collision between \"${element.text} and \\\n             ${candidate.text}`\n        );\n        return undefined;\n    }\n\n    return duplicateIndex;\n}\n\ntype DuplicateCmp = (\n    newCandidate: TextElement,\n    newDistance: number,\n    oldCandidate: TextElement,\n    oldDistance: number\n) => boolean;\n\n// Duplicate criteria for path labels. Candidates are better the longer their paths are.\nfunction isBetterPathDuplicate(\n    newCandidate: TextElement,\n    _newDistance: number,\n    oldCandidate: TextElement,\n    _oldDistance: number\n): boolean {\n    if (newCandidate.pathLengthSqr === undefined) {\n        return false;\n    }\n    if (oldCandidate.pathLengthSqr === undefined) {\n        return false;\n    }\n    return newCandidate.pathLengthSqr > oldCandidate.pathLengthSqr;\n}\n\n// Duplicate criteria for point labels. Candidates are better the nearer they are to the label being\n// tested for duplicates.\nfunction isBetterPointDuplicate(\n    _newCandidate: TextElement,\n    newDistance: number,\n    _oldCandidate: TextElement,\n    oldDistance: number\n): boolean {\n    return newDistance < oldDistance;\n}\n\n/**\n * Finds a duplicate for a text element among a list of candidates using their text and distances.\n * @param elementState - The state of the text element for which the duplicate will be found.\n * @param candidates - The list of candidates to check.\n * @param zoomLevel - Current zoom level.\n * @returns The index of the candidate chosen as duplicate, or `undefined` if none was found.\n */\nfunction findDuplicateByText(\n    elementState: TextElementState,\n    candidates: TextElementState[],\n    zoomLevel: number\n): number {\n    const element = elementState.element;\n    const maxSqDistError = getDedupSqDistTolerance(zoomLevel);\n    const entryCount = candidates.length;\n    const elementPosition = elementState.position;\n    const elementVisible = elementState.visible;\n    const isLineMarker = isLineMarkerElementState(elementState);\n    let dupIndex: number = -1;\n    let duplicate: TextElement | undefined;\n    let dupDistSquared: number = Infinity;\n    const isBetterDuplicate: DuplicateCmp =\n        element.type === TextElementType.PathLabel ? isBetterPathDuplicate : isBetterPointDuplicate;\n\n    for (let i = 0; i < entryCount; ++i) {\n        const candidateEntry = candidates[i];\n        const cachedElement = candidateEntry.element;\n        const areDiffType =\n            element.type !== cachedElement.type ||\n            isLineMarker !== isLineMarkerElementState(candidateEntry);\n        const areBothVisible = elementVisible && candidateEntry.visible;\n        if (areDiffType || areBothVisible) {\n            // Two text elements with different type or visible at the same time are always\n            // considered distinct.\n            continue;\n        }\n        const distSquared = elementPosition.distanceToSquared(cachedElement.position);\n        if (distSquared > maxSqDistError) {\n            // Cached text element is too far away to be a duplicate.\n            continue;\n        }\n\n        if (\n            duplicate === undefined ||\n            isBetterDuplicate(cachedElement, distSquared, duplicate, dupDistSquared)\n        ) {\n            dupIndex = i;\n            duplicate = cachedElement;\n            dupDistSquared = distSquared;\n        }\n    }\n\n    return dupIndex;\n}\n\n/**\n * Caches the state of text element groups currently rendered as well as the text element states\n * belonging to them, including their fading state and text deduplication information.\n */\nexport class TextElementStateCache {\n    private readonly m_referenceMap = new Map<TextElementGroup, TextElementGroupState>();\n    private m_sortedGroupStates: TextElementGroupState[] | undefined;\n\n    // Cache for point labels which may have duplicates in same tile or in neighboring tiles.\n    private readonly m_textMap = new Map<string | number, TextElementState[]>();\n\n    /**\n     * Gets the state corresponding to a given text element group or sets a newly created state if\n     * not found. It updates the states of the text elements belonging to the group using the\n     * specified parameters.\n     * @param textElementGroup - The group of which the state will be obtained.\n     * @param tileKey - The key of the tile to which the group belongs.\n     * @param textElementFilter - Filter used to decide if a text element must be initialized,\n     * @see [[TextElementGroupState]] construction.\n     * @returns Tuple with the group state as first element and a boolean indicating whether the\n     * state was found in cache (`true`) or newly created (`false`) as second element.\n     */\n    getOrSet(\n        textElementGroup: TextElementGroup,\n        tileKey: TileKey,\n        textElementFilter: TextElementFilter\n    ): [TextElementGroupState, boolean] {\n        let groupState = this.get(textElementGroup);\n\n        if (groupState !== undefined) {\n            groupState.updateElements(textElementFilter);\n            return [groupState, true];\n        }\n\n        groupState = new TextElementGroupState(textElementGroup, tileKey, textElementFilter);\n        this.set(textElementGroup, groupState);\n\n        return [groupState, false];\n    }\n\n    get size(): number {\n        return this.m_referenceMap.size;\n    }\n\n    /**\n     * @hidden\n     * @returns Size of internal cache for deduplication for debugging purposes.\n     */\n    get cacheSize(): number {\n        return this.m_textMap.size;\n    }\n\n    /**\n     * @returns All text element group states in the cache by group priority.\n     */\n    get sortedGroupStates(): TextElementGroupState[] {\n        if (this.m_sortedGroupStates === undefined) {\n            this.m_sortedGroupStates = Array.from(this.m_referenceMap.values());\n            this.m_sortedGroupStates.sort((a: TextElementGroupState, b: TextElementGroupState) => {\n                return b.group.priority - a.group.priority;\n            });\n        }\n\n        assert(this.m_referenceMap.size === this.m_sortedGroupStates.length);\n        return this.m_sortedGroupStates;\n    }\n\n    /**\n     * Updates state of all cached groups, discarding those that are not needed anymore.\n     * @param time - The current time.\n     * @param disableFading - `True` if fading is currently disabled, `false` otherwise.\n     * @param findReplacements - `True` to replace each visible unvisited text element with a\n     * visited duplicate.\n     * @param zoomLevel - Current zoom level.\n     * @returns `True` if any textElementGroup was evicted from cache, false otherwise.\n     */\n    update(time: number, disableFading: boolean, findReplacements: boolean, zoomLevel: number) {\n        const replaceCallback = findReplacements\n            ? this.replaceElement.bind(this, zoomLevel)\n            : undefined;\n\n        let anyEviction = false;\n        for (const [key, groupState] of this.m_referenceMap.entries()) {\n            if (groupState.visited) {\n                groupState.updateFading(time, disableFading);\n            } else {\n                if (findReplacements) {\n                    groupState.traverseVisibleElements(replaceCallback!);\n                }\n                this.m_referenceMap.delete(key);\n                this.m_sortedGroupStates = undefined;\n                anyEviction = true;\n            }\n        }\n        return anyEviction;\n    }\n\n    /**\n     * Clears visited state for all text element groups in cache.\n     */\n    clearVisited() {\n        for (const groupState of this.m_referenceMap.values()) {\n            groupState.visited = false;\n        }\n    }\n\n    clearTextCache() {\n        this.m_textMap.clear();\n    }\n\n    /**\n     * Clears the whole cache contents.\n     */\n    clear() {\n        this.m_referenceMap.clear();\n        this.m_sortedGroupStates = undefined;\n        this.m_textMap.clear();\n    }\n\n    /**\n     * Removes duplicates for a given text element.\n     *\n     * @param zoomLevel - Current zoom level.\n     * @param elementState - State of the text element to deduplicate.\n     * @returns True if it's the remaining element after deduplication, false if it's been marked\n     * as duplicate.\n     */\n    deduplicateElement(zoomLevel: number, elementState: TextElementState): boolean {\n        const cacheResult = this.findDuplicate(elementState, zoomLevel);\n\n        if (cacheResult === undefined) {\n            // Text not found so far, add this element to cache.\n            this.m_textMap.set(getCacheKey(elementState.element), [elementState]);\n            return true;\n        }\n\n        if (cacheResult.index === -1) {\n            // No duplicate found among elements with same text,add this one to cache.\n            cacheResult.entries.push(elementState);\n            return true;\n        }\n\n        // Duplicate found, check whether there's a label already visible and keep that one.\n        const cachedDuplicate = cacheResult.entries[cacheResult.index];\n\n        if (!cachedDuplicate.visible && elementState.visible) {\n            // New label is visible, substitute the cached label.\n            cacheResult.entries[cacheResult.index] = elementState;\n            cachedDuplicate.reset();\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Replaces a visible unvisited text element with a visited duplicate.\n     * @param zoomLevel - Current zoom level.\n     * @param elementState - State of the text element to deduplicate.\n     * @returns `true` if an item from the cache has been reused and its state has been replaced,\n     * `false` otherwise.\n     */\n    replaceElement(zoomLevel: number, elementState: TextElementState): boolean {\n        assert(elementState.visible);\n        const cacheResult = this.findDuplicate(elementState, zoomLevel);\n\n        if (cacheResult === undefined || cacheResult.index === -1) {\n            // No replacement found;\n            return false;\n        }\n\n        const replacement = cacheResult.entries[cacheResult.index];\n        assert(!replacement.visible);\n\n        replacement.replace(elementState);\n        return true;\n    }\n\n    /**\n     * Gets the state corresponding to a given text element group.\n     * @param textElementGroup - The group of which the state will be obtained.\n     * @returns The group state if cached, otherwise `undefined`.\n     */\n    private get(textElementGroup: TextElementGroup): TextElementGroupState | undefined {\n        const groupState = this.m_referenceMap.get(textElementGroup);\n\n        if (groupState !== undefined) {\n            groupState.visited = true;\n        }\n        return groupState;\n    }\n\n    /**\n     * Sets a specified state for a given text element group.\n     * @param textElementGroup -  The group of which the state will be set.\n     * @param textElementGroupState - The state to set for the group.\n     */\n    private set(textElementGroup: TextElementGroup, textElementGroupState: TextElementGroupState) {\n        assert(textElementGroup.elements.length > 0);\n        this.m_referenceMap.set(textElementGroup, textElementGroupState);\n        this.m_sortedGroupStates = undefined;\n    }\n\n    private findDuplicate(\n        elementState: TextElementState,\n        zoomLevel: number\n    ): { entries: TextElementState[]; index: number } | undefined {\n        // Point labels may have duplicates (as can path labels), Identify them\n        // and keep the one we already display.\n\n        const element = elementState.element;\n        const cachedEntries = this.m_textMap.get(getCacheKey(element));\n\n        if (cachedEntries === undefined) {\n            // No labels found with the same key.\n            return undefined;\n        }\n\n        tmpCachedDuplicate.entries = cachedEntries;\n        const index = element.hasFeatureId()\n            ? findDuplicateById(elementState, cachedEntries)\n            : findDuplicateByText(elementState, cachedEntries, zoomLevel);\n\n        if (index === undefined) {\n            // Feature id collision, try finding duplicates using text as key.\n            element.featureId = undefined;\n            return this.findDuplicate(elementState, zoomLevel);\n        }\n        tmpCachedDuplicate.index = index;\n        return tmpCachedDuplicate;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Types of text elements.\n */\nexport enum TextElementType {\n    PoiLabel,\n    PathLabel,\n    LineMarker\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    FontCatalogConfig,\n    LineMarkerTechnique,\n    TextStyleDefinition\n} from \"@here/harp-datasource-protocol\";\nimport { TileKey, Vector3Like } from \"@here/harp-geoutils\";\nimport {\n    AdditionParameters,\n    DEFAULT_TEXT_CANVAS_LAYER,\n    FontCatalog,\n    TextBufferAdditionParameters,\n    TextBufferCreationParameters,\n    TextCanvas,\n    TextLayoutStyle,\n    TextRenderStyle\n} from \"@here/harp-text-canvas\";\nimport {\n    assert,\n    LoggerManager,\n    LogLevel,\n    Math2D,\n    MathUtils,\n    PerformanceTimer\n} from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { DataSource } from \"../DataSource\";\nimport { debugContext } from \"../DebugContext\";\nimport { overlayTextElement } from \"../geometry/overlayOnElevation\";\nimport { MapViewImageCache } from \"../image/MapViewImageCache\";\nimport { PickObjectType } from \"../PickHandler\";\nimport { PickListener } from \"../PickListener\";\nimport { PoiManager } from \"../poi/PoiManager\";\nimport { PoiLayer, PoiRenderer } from \"../poi/PoiRenderer\";\nimport { IBox, LineWithBound, ScreenCollisions, ScreenCollisionsDebug } from \"../ScreenCollisions\";\nimport { ScreenProjector } from \"../ScreenProjector\";\nimport { Tile } from \"../Tile\";\nimport { MapViewUtils } from \"../Utils\";\nimport { DataSourceTileList } from \"../VisibleTileSet\";\nimport { loadFontCatalog } from \"./FontCatalogLoader\";\nimport {\n    checkReadyForPlacement,\n    computeViewDistance,\n    getMaxViewDistance,\n    getWorldPosition,\n    isPathLabelTooSmall,\n    placeIcon,\n    PlacementResult,\n    placePathLabel,\n    placePointLabel,\n    pointToPlaneDistance,\n    PrePlacementResult\n} from \"./Placement\";\nimport { PlacementStats } from \"./PlacementStats\";\nimport { RenderState } from \"./RenderState\";\nimport { SimpleLineCurve, SimplePath } from \"./SimplePath\";\nimport { TextCanvasFactory } from \"./TextCanvasFactory\";\nimport { LoadingState, TextElement, TextPickResult } from \"./TextElement\";\nimport { TextElementGroup } from \"./TextElementGroup\";\nimport { TextElementFilter, TextElementGroupState } from \"./TextElementGroupState\";\nimport {\n    initializeDefaultOptions,\n    TextElementsRendererOptions\n} from \"./TextElementsRendererOptions\";\nimport { TextElementState } from \"./TextElementState\";\nimport { TextElementStateCache } from \"./TextElementStateCache\";\nimport { TextElementType } from \"./TextElementType\";\nimport { TextElementStyle, TextStyleCache } from \"./TextStyleCache\";\nimport { UpdateStats } from \"./UpdateStats\";\nimport { ViewState } from \"./ViewState\";\n\ninterface RenderParams {\n    numRenderedTextElements: number;\n    // TODO: HARP-7373. Move to update() method at the end of the frame.\n    fadeAnimationRunning: boolean;\n    time: number;\n}\n\nenum Pass {\n    PersistentLabels,\n    NewLabels\n}\n\nexport type TextCanvases = Map<string, TextCanvas | undefined>;\n\nexport const DEFAULT_FONT_CATALOG_NAME = \"default\";\n\n/**\n * Default distance scale. Will be applied if distanceScale is not defined in the technique.\n * Defines the scale that will be applied to labeled icons (icon and text) in the distance.\n * @internal\n */\nexport const DEFAULT_TEXT_DISTANCE_SCALE = 0.5;\n\n/**\n * Maximum number of recommended labels. If more labels are encountered, the \"overloaded\" mode is\n * set, which modifies the behavior of label placement and rendering, trying to keep delivering an\n * interactive performance. The overloaded mode should not be activated if the {@link MapView} is\n * rendering a static image (camera not moving and no animation running).\n */\nconst OVERLOAD_LABEL_LIMIT = 20000;\n\n/**\n * If \"overloaded\" is `true`:\n *\n * Default number of labels/POIs updated in a frame. They are rendered only if they fit. If the\n * camera is not moving, it is ignored. See [[TextElementsRenderer.isUpdatePending]].\n */\nconst OVERLOAD_UPDATED_LABEL_LIMIT = 100;\n\n/**\n * If \"overloaded\" is `true`:\n *\n * Maximum time in milliseconds available for placement. If value is <= 0, or if the camera is not\n * moving, it is ignored. See [[TextElementsRenderer.isUpdatePending]].\n */\nconst OVERLOAD_UPDATE_TIME_LIMIT = 5;\n\n/**\n * If \"overloaded\" is `true`:\n *\n * Maximum time in milliseconds available for rendering. If value is <= 0, or if the camera is not\n * moving, it is ignored. See [[TextElementsRenderer.isUpdatePending]].\n */\nconst OVERLOAD_PLACE_TIME_LIMIT = 10;\n\nconst logger = LoggerManager.instance.create(\"TextElementsRenderer\", { level: LogLevel.Log });\n\n// Development flag: Enable debug print.\nconst PRINT_LABEL_DEBUG_INFO: boolean = false;\nconst updateStats = PRINT_LABEL_DEBUG_INFO ? new UpdateStats(logger) : undefined;\nconst placementStats = PRINT_LABEL_DEBUG_INFO ? new PlacementStats(logger) : undefined;\n\nconst tempPosition = new THREE.Vector3();\nconst tempScreenPosition = new THREE.Vector2();\nconst tempScreenPoints: THREE.Vector2[] = [];\nconst tempPoiScreenPosition = new THREE.Vector2();\nconst tmpTextBufferCreationParams: TextBufferCreationParameters = {};\nconst tmpAdditionParams: AdditionParameters = {};\nconst tmpBufferAdditionParams: TextBufferAdditionParameters = {};\nconst cache = {\n    vector2: [new THREE.Vector2()]\n};\n\nclass TileTextElements {\n    constructor(readonly tile: Tile, readonly group: TextElementGroup) {}\n}\n\nclass TextElementLists {\n    constructor(readonly lists: TileTextElements[]) {}\n\n    get priority() {\n        assert(this.lists.length > 0);\n        // All text element lists here have the same priority.\n        return this.lists[0].group.priority;\n    }\n\n    /**\n     * Sum up the number of elements in all lists.\n     */\n    count(): number {\n        let n = 0;\n        for (const list of this.lists) {\n            n += list.group.elements.length;\n        }\n        return n;\n    }\n}\n\nfunction checkIfTextElementsChanged(dataSourceTileList: DataSourceTileList[]) {\n    let textElementsChanged = false;\n\n    dataSourceTileList.forEach(({ renderedTiles }) => {\n        renderedTiles.forEach(tile => {\n            if (tile.textElementsChanged) {\n                tile.textElementsChanged = false;\n                textElementsChanged = true;\n            }\n        });\n    });\n\n    return textElementsChanged;\n}\n\nfunction hasTextElements(dataSourceTileList: DataSourceTileList[]): boolean {\n    for (let i = 0; i < dataSourceTileList.length; i++) {\n        for (const [_key, value] of dataSourceTileList[i].renderedTiles) {\n            if (value.hasTextElements()) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction addTextToCanvas(\n    textElement: TextElement,\n    canvas: TextCanvas,\n    screenPosition: THREE.Vector3,\n    path?: THREE.Path,\n    pathOverflow?: boolean\n) {\n    tmpAdditionParams.path = path;\n    tmpAdditionParams.pathOverflow = pathOverflow;\n    tmpAdditionParams.layer = textElement.renderOrder;\n    tmpAdditionParams.letterCaseArray = textElement.glyphCaseArray;\n    tmpAdditionParams.pickingData = textElement.userData ? textElement : undefined;\n    canvas.addText(textElement.glyphs!, screenPosition, tmpAdditionParams);\n}\n\nfunction addTextBufferToCanvas(\n    textElementState: TextElementState,\n    canvas: TextCanvas,\n    screenPosition: THREE.Vector3,\n    fadeFactor: number,\n    scaleFactor: number\n): boolean {\n    const textElement = textElementState.element;\n    const textRenderState = textElementState.textRenderState;\n    const opacity = textRenderState!.opacity * fadeFactor * textElement.renderStyle!.opacity;\n\n    if (opacity === 0) {\n        return false;\n    }\n\n    // Compute the TextBufferObject when we know we're gonna render this label.\n    tmpTextBufferCreationParams.letterCaseArray = textElement.glyphCaseArray;\n    if (textElement.textBufferObject === undefined) {\n        textElement.textBufferObject = canvas.createTextBufferObject(\n            textElement.glyphs!,\n            tmpTextBufferCreationParams\n        );\n    }\n    const backgroundIsVisible =\n        textElement.renderStyle!.backgroundOpacity > 0 &&\n        canvas.textRenderStyle.fontSize.backgroundSize > 0;\n\n    tmpBufferAdditionParams.layer = textElement.renderOrder;\n    tmpBufferAdditionParams.position = screenPosition;\n    tmpBufferAdditionParams.scale = scaleFactor;\n    tmpBufferAdditionParams.opacity = opacity;\n    tmpBufferAdditionParams.backgroundOpacity = backgroundIsVisible\n        ? tmpBufferAdditionParams.opacity * textElement.renderStyle!.backgroundOpacity\n        : 0.0;\n    tmpBufferAdditionParams.pickingData = textElement.userData ? textElement : undefined;\n    canvas.addTextBufferObject(textElement.textBufferObject!, tmpBufferAdditionParams);\n    return true;\n}\n\nfunction shouldRenderPointText(\n    labelState: TextElementState,\n    viewState: ViewState,\n    options: TextElementsRendererOptions\n): boolean {\n    const textRenderState: RenderState | undefined = labelState.textRenderState;\n    const label = labelState.element;\n    const poiInfo = label.poiInfo;\n\n    assert(label.type !== TextElementType.PathLabel);\n\n    const hasText = textRenderState !== undefined && label.text !== \"\";\n    if (!hasText) {\n        return false;\n    }\n\n    const visibleInZoomLevel =\n        poiInfo === undefined ||\n        MathUtils.isClamped(\n            viewState.zoomLevel,\n            poiInfo.textMinZoomLevel,\n            poiInfo.textMaxZoomLevel\n        );\n\n    if (!visibleInZoomLevel) {\n        return false;\n    }\n\n    const poiTextMaxDistance = getMaxViewDistance(viewState, options.maxDistanceRatioForPoiLabels!);\n    const visibleAtDistance =\n        label.ignoreDistance === true ||\n        labelState.viewDistance === undefined ||\n        (labelState.viewDistance < poiTextMaxDistance && labelState.viewDistance > 0);\n    if (!visibleAtDistance) {\n        return false;\n    }\n\n    // If there's an icon, render text only if icon is valid or optional.\n    return !poiInfo || poiInfo.isValid === true || poiInfo.iconIsOptional === true;\n}\n\nfunction shouldRenderPoiText(labelState: TextElementState, viewState: ViewState) {\n    // Do not actually render (just allocate space) if camera is moving and\n    // renderTextDuringMovements is not true.\n    const poiInfo = labelState.element.poiInfo;\n\n    return (\n        !viewState.cameraIsMoving ||\n        poiInfo === undefined ||\n        poiInfo.renderTextDuringMovements === true\n    );\n}\n\nfunction isPlacementTimeExceeded(startTime: number | undefined): boolean {\n    // startTime is set in overload mode.\n    if (startTime === undefined || OVERLOAD_PLACE_TIME_LIMIT <= 0) {\n        return false;\n    }\n    const endTime = PerformanceTimer.now();\n    const elapsedTime = endTime - startTime;\n    if (elapsedTime > OVERLOAD_PLACE_TIME_LIMIT) {\n        logger.debug(\"Placement time limit exceeded.\");\n        return true;\n    }\n    return false;\n}\n\nfunction createDefaultFontCatalogConfig(defaultFontCatalogUrl: string): FontCatalogConfig {\n    return {\n        name: DEFAULT_FONT_CATALOG_NAME,\n        url: defaultFontCatalogUrl\n    };\n}\n\n/**\n *\n * Internal class to manage all text rendering.\n */\nexport class TextElementsRenderer {\n    private m_loadPromisesCount: number = 0;\n    private m_loadPromise: Promise<any> | undefined;\n    private readonly m_options: TextElementsRendererOptions;\n\n    private readonly m_textCanvases: TextCanvases = new Map();\n\n    private m_overlayTextElements?: TextElement[];\n\n    // TODO: Replace this for an array of textures when more fonts are in use.\n    private m_debugGlyphTextureCacheMesh?: THREE.Mesh;\n    private m_debugGlyphTextureCacheWireMesh?: THREE.LineSegments;\n\n    private readonly m_tmpVector = new THREE.Vector2();\n    private readonly m_tmpVector3 = new THREE.Vector3();\n    private readonly m_cameraLookAt = new THREE.Vector3();\n    private m_overloaded: boolean = false;\n    private m_cacheInvalidated: boolean = false;\n    private m_addNewLabels: boolean = true;\n    private m_forceNewLabelsPass: boolean = false;\n\n    private readonly m_textElementStateCache: TextElementStateCache = new TextElementStateCache();\n    private readonly m_camera = new THREE.OrthographicCamera(-1, 1, 1, -1);\n    private m_defaultFontCatalogConfig: FontCatalogConfig | undefined;\n    private m_poiRenderer: PoiRenderer;\n    private readonly m_textStyleCache: TextStyleCache = new TextStyleCache();\n    private readonly m_screenCollisions:\n        | ScreenCollisions\n        | ScreenCollisionsDebug = new ScreenCollisions();\n\n    private readonly m_textCanvasFactory: TextCanvasFactory;\n\n    /**\n     * indicates if the TextElementsRenderer is still updating, includes fading, elevations etc\n     */\n    private m_isUpdatePending: boolean = false;\n\n    /**\n     * Create the `TextElementsRenderer` which selects which labels should be placed on screen as\n     * a preprocessing step, which is not done every frame, and also renders the placed\n     * {@link TextElement}s every frame.\n     *\n     * @param m_viewState - State of the view for which this renderer will draw text.\n     * @param m_screenProjector - Projects 3D coordinates into screen space.\n     * @param m_poiManager - To prepare pois for rendering.\n     * @param m_renderer - The renderer to be used.\n     * @param m_imageCaches - The Image Caches to look for Icons.\n     * @param options - Configuration options for the text renderer. See\n     * @param textCanvasFactory - Optional A TextCanvasFactory to override the default.\n     * @param poiRenderer - Optional A PoiRenderer to override the default.\n     * @param screenCollisions - Optional  ScreenCollisions to override the default.\n     * [[TextElementsRendererOptions]].\n     */\n    constructor(\n        private readonly m_viewState: ViewState,\n        private readonly m_screenProjector: ScreenProjector,\n        private readonly m_poiManager: PoiManager,\n        private m_renderer: THREE.WebGLRenderer,\n        private readonly m_imageCaches: MapViewImageCache[],\n        options: TextElementsRendererOptions,\n        textCanvasFactory?: TextCanvasFactory,\n        poiRenderer?: PoiRenderer,\n        screenCollisions?: ScreenCollisions\n    ) {\n        this.m_options = { ...options };\n        initializeDefaultOptions(this.m_options);\n        if (screenCollisions) {\n            this.m_screenCollisions = screenCollisions;\n        } else if (\n            this.m_options.collisionDebugCanvas !== undefined &&\n            this.m_options.collisionDebugCanvas !== null\n        ) {\n            this.m_screenCollisions = new ScreenCollisionsDebug(\n                this.m_options.collisionDebugCanvas\n            );\n        }\n\n        this.m_textCanvasFactory = textCanvasFactory ?? new TextCanvasFactory(this.m_renderer);\n        this.m_textCanvasFactory.setGlyphCountLimits(\n            this.m_options.minNumGlyphs!,\n            this.m_options.maxNumGlyphs!\n        );\n\n        this.m_poiRenderer =\n            poiRenderer ?? new PoiRenderer(this.m_renderer, this.m_poiManager, this.m_imageCaches);\n\n        this.initializeCamera();\n\n        this.initializeDefaultFontCatalog();\n        this.m_textStyleCache.updateTextCanvases(this.m_textCanvases);\n    }\n\n    /**\n     * Disable all fading animations (for debugging and performance measurement). Defaults to\n     * `false`.\n     */\n    set disableFading(disable: boolean) {\n        this.m_options.disableFading = disable;\n    }\n\n    get disableFading(): boolean {\n        return this.m_options.disableFading === true;\n    }\n\n    get styleCache() {\n        return this.m_textStyleCache;\n    }\n\n    get delayLabelsUntilMovementFinished(): boolean {\n        return this.m_options.delayLabelsUntilMovementFinished === true;\n    }\n\n    set delayLabelsUntilMovementFinished(delay: boolean) {\n        this.m_options.delayLabelsUntilMovementFinished = delay;\n    }\n\n    /**\n     * If `true`, a replacement glyph (\"?\") is rendered for every missing glyph.\n     */\n    get showReplacementGlyphs() {\n        return this.m_options.showReplacementGlyphs === true;\n    }\n\n    /**\n     * If `true`, a replacement glyph (\"?\") is rendered for every missing glyph.\n     */\n    set showReplacementGlyphs(value: boolean) {\n        this.m_options.showReplacementGlyphs = value;\n\n        this.m_textCanvases.forEach(textCanvas => {\n            if (textCanvas?.fontCatalog) {\n                textCanvas.fontCatalog.showReplacementGlyphs = value;\n            }\n        });\n    }\n\n    restoreRenderers(renderer: THREE.WebGLRenderer) {\n        this.m_renderer = renderer;\n        this.m_poiRenderer = new PoiRenderer(\n            this.m_renderer,\n            this.m_poiManager,\n            this.m_imageCaches\n        );\n        //TODO: restore TextCanvasRenderers\n    }\n\n    /**\n     * Updates the FontCatalogs used by this {@link TextElementsRenderer}.\n     *\n     * @param fontCatalogs - The new list of {@link FontCatalogConfig}s\n     */\n    async updateFontCatalogs(fontCatalogs?: FontCatalogConfig[]) {\n        if (this.m_defaultFontCatalogConfig) {\n            if (\n                !fontCatalogs ||\n                fontCatalogs.findIndex(config => {\n                    return config.name === DEFAULT_FONT_CATALOG_NAME;\n                }) === -1\n            ) {\n                // not other default catalog available, keep the old one\n                if (!fontCatalogs) {\n                    fontCatalogs = [];\n                }\n                // Never remove the default Canvas if set per configuration\n                fontCatalogs.unshift(this.m_defaultFontCatalogConfig);\n            } else {\n                if (this.m_textCanvases.has(DEFAULT_FONT_CATALOG_NAME)) {\n                    this.m_textCanvases.delete(DEFAULT_FONT_CATALOG_NAME);\n                }\n            }\n        }\n\n        if (fontCatalogs && fontCatalogs.length > 0) {\n            // Remove obsolete ones\n            for (const [name] of this.m_textCanvases) {\n                if (\n                    fontCatalogs.findIndex(catalog => {\n                        return catalog.name === name;\n                    }) < 0\n                ) {\n                    this.m_textCanvases.delete(name);\n                }\n            }\n\n            // Add new catalogs\n            for (const fontCatalog of fontCatalogs) {\n                await this.addTextCanvas(fontCatalog);\n            }\n        } else {\n            this.m_textCanvases.clear();\n        }\n        this.m_textStyleCache.updateTextCanvases(this.m_textCanvases);\n    }\n\n    async updateTextStyles(\n        textStyles?: TextStyleDefinition[],\n        defaultTextStyle?: TextStyleDefinition\n    ) {\n        this.m_textStyleCache.updateTextStyles(textStyles, defaultTextStyle);\n        await this.waitLoaded();\n        this.m_textStyleCache.updateTextCanvases(this.m_textCanvases);\n        this.invalidateCache();\n    }\n\n    /**\n     * Render the text using the specified camera into the current canvas.\n     *\n     * @param camera - Orthographic camera to use.\n     */\n    renderText(farPlane: number) {\n        this.m_camera.far = farPlane;\n        this.updateGlyphDebugMesh();\n\n        let previousLayer: PoiLayer | undefined;\n        this.m_poiRenderer.update();\n        for (const poiLayer of this.m_poiRenderer.layers) {\n            for (const [, textCanvas] of this.m_textCanvases) {\n                textCanvas?.render(this.m_camera, previousLayer?.id, poiLayer.id, undefined, false);\n            }\n            this.m_poiRenderer.render(this.m_camera, poiLayer);\n            previousLayer = poiLayer;\n        }\n        for (const [, textCanvas] of this.m_textCanvases) {\n            textCanvas?.render(this.m_camera, previousLayer?.id, undefined, undefined, false);\n        }\n    }\n\n    /**\n     * Forces update of text elements in the next call to [[placeText]].\n     */\n    invalidateCache() {\n        this.m_cacheInvalidated = true;\n    }\n\n    /**\n     * Notify `TextElementsRenderer` that the camera has started a movement.\n     */\n    movementStarted() {\n        if (this.delayLabelsUntilMovementFinished) {\n            this.m_addNewLabels = false;\n        }\n    }\n\n    /**\n     * Notify `TextElementsRenderer` that the camera has finished its movement.\n     */\n    movementFinished() {\n        this.invalidateCache();\n        if (this.delayLabelsUntilMovementFinished) {\n            this.m_addNewLabels = true;\n        }\n    }\n\n    /**\n     * Is `true` if number of {@link TextElement}s in visible tiles is larger than the recommended\n     * number `OVERLOAD_LABEL_LIMIT`.\n     */\n    get overloaded(): boolean {\n        return this.m_overloaded;\n    }\n\n    /**\n     * Places text elements for the current frame.\n     * @param dataSourceTileList - List of tiles to be rendered for each data source.\n     * @param time - Current frame time.\n     */\n    placeText(dataSourceTileList: DataSourceTileList[], time: number) {\n        const tileTextElementsChanged = checkIfTextElementsChanged(dataSourceTileList);\n\n        const textElementsAvailable =\n            this.hasOverlayText() || tileTextElementsChanged || hasTextElements(dataSourceTileList);\n\n        this.m_isUpdatePending = false;\n\n        if (\n            !textElementsAvailable &&\n            !this.m_cacheInvalidated &&\n            !this.m_viewState.renderedTilesChanged\n        ) {\n            return;\n        }\n\n        const updateTextElements =\n            this.m_cacheInvalidated ||\n            tileTextElementsChanged ||\n            this.m_viewState.renderedTilesChanged;\n\n        const findReplacements = updateTextElements && this.m_addNewLabels;\n        if (findReplacements) {\n            this.m_textElementStateCache.clearVisited();\n            this.updateTextElements(dataSourceTileList);\n        }\n        const anyTextGroupEvicted = this.m_textElementStateCache.update(\n            time,\n            this.m_options.disableFading!,\n            findReplacements,\n            this.m_viewState.zoomLevel\n        );\n\n        // TODO: this seems extremly suboptimal.. review if an update is possible\n        this.reset();\n        if (this.m_addNewLabels) {\n            this.prepopulateScreenWithBlockingElements(dataSourceTileList);\n        }\n\n        // New text elements must be placed either if text elements were updated in this frame\n        // or if any text element group was evicted. The second case happens when the group is not\n        // visited anymore and all it's elements just became invisible, which means there's newly\n        // available screen space where new text elements could be placed. A common scenario where\n        // this happens is zooming in/out: text groups from the old level may still be fading out\n        // after all groups in the new level were updated.\n        const placeNewTextElements =\n            (updateTextElements || anyTextGroupEvicted) && this.m_addNewLabels;\n        this.placeTextElements(time, placeNewTextElements);\n        this.placeOverlayTextElements();\n    }\n\n    /**\n     * Adds new overlay text elements to this `MapView`.\n     *\n     * @param textElements - Array of {@link TextElement} to be added.\n     */\n    addOverlayText(textElements: TextElement[]): void {\n        if (textElements.length === 0) {\n            return;\n        }\n        this.m_overlayTextElements =\n            this.m_overlayTextElements === undefined\n                ? textElements.slice()\n                : this.m_overlayTextElements.concat(textElements);\n    }\n\n    /**\n     * Adds new overlay text elements to this `MapView`.\n     *\n     * @param textElements - Array of {@link TextElement} to be added.\n     */\n    clearOverlayText(): void {\n        this.m_overlayTextElements = [];\n    }\n\n    /**\n     * @returns Whether there's overlay text to be rendered.\n     */\n    hasOverlayText(): boolean {\n        return this.m_overlayTextElements !== undefined && this.m_overlayTextElements.length > 0;\n    }\n\n    get overlayText(): TextElement[] | undefined {\n        return this.m_overlayTextElements;\n    }\n\n    /**\n     * Fill the picking results for the pixel with the given screen coordinate. If multiple\n     * {@link TextElement}s are found, the order of the results is unspecified.\n     *\n     * Note: {@link TextElement}s with identical `featureId` or\n     * identical `userData` will only appear\n     * once in the list `pickResults`.\n     *\n     * @param screenPosition - Screen coordinate of picking position.\n     * @param pickResults - Array filled with pick results.\n     */\n    pickTextElements(screenPosition: THREE.Vector2, pickListener: PickListener) {\n        const pickHandler = (pickData: any | undefined, pickObjectType: PickObjectType) => {\n            if (pickData === undefined) {\n                return;\n            }\n            const textElement = pickData as TextElement;\n            const pickResult: TextPickResult = {\n                type: pickObjectType,\n                point: screenPosition,\n                distance: 0,\n                renderOrder: textElement.renderOrder,\n                featureId: textElement.featureId,\n                userData: textElement.userData,\n                dataSourceName: textElement.dataSourceName,\n                dataSourceOrder: textElement.dataSourceOrder,\n                text: textElement.text\n            };\n\n            pickListener.addResult(pickResult);\n        };\n\n        for (const [, textCanvas] of this.m_textCanvases) {\n            textCanvas?.pickText(screenPosition, (pickData: any | undefined) => {\n                pickHandler(pickData, PickObjectType.Text);\n            });\n        }\n\n        this.m_poiRenderer.pickTextElements(screenPosition, (pickData: any | undefined) => {\n            pickHandler(pickData, PickObjectType.Icon);\n        });\n    }\n\n    /**\n     * `true` if any resource used by any `FontCatalog` is still loading.\n     */\n    get loading(): boolean {\n        return this.m_loadPromisesCount > 0;\n    }\n\n    /**\n     * `true` if TextElements are not placed finally but are still updating, including fading or\n     * waiting for elevation.\n     */\n    get isUpdatePending(): boolean {\n        return this.m_isUpdatePending;\n    }\n\n    /**\n     * Waits till all pending resources from any `FontCatalog` are loaded.\n     */\n    async waitLoaded(): Promise<void> {\n        if (this.m_loadPromise !== undefined) {\n            return await this.m_loadPromise;\n        }\n    }\n\n    /**\n     * Reset the current text render states of all visible tiles.\n     *\n     * @remarks\n     * All {@link TextElement}s will fade in\n     * after that as if they have just been added.\n     */\n    clearRenderStates() {\n        this.m_textElementStateCache.clear();\n    }\n\n    /**\n     * Return memory used by all objects managed by `TextElementsRenderer`.\n     *\n     * @returns `MemoryUsage` Heap and GPU memory used by this `TextElementsRenderer`.\n     */\n    getMemoryUsage(): MapViewUtils.MemoryUsage {\n        const memoryUsage = {\n            heapSize: 0,\n            gpuSize: 0\n        };\n\n        for (const [, textCanvas] of this.m_textCanvases) {\n            textCanvas?.getMemoryUsage(memoryUsage);\n        }\n        this.m_poiRenderer.getMemoryUsage(memoryUsage);\n\n        return memoryUsage;\n    }\n\n    private async addDefaultTextCanvas(): Promise<void> {\n        if (\n            this.m_textCanvases.has(DEFAULT_FONT_CATALOG_NAME) ||\n            !this.m_defaultFontCatalogConfig\n        ) {\n            return;\n        }\n        await this.addTextCanvas(this.m_defaultFontCatalogConfig);\n        this.m_textStyleCache.updateTextCanvases(this.m_textCanvases);\n    }\n\n    /**\n     * Reset internal state at the beginning of a frame.\n     */\n    private reset() {\n        this.m_cameraLookAt.copy(this.m_viewState.lookAtVector);\n        this.m_screenCollisions.reset();\n        for (const [, textCanvas] of this.m_textCanvases) {\n            textCanvas?.clear();\n        }\n        this.m_poiRenderer.reset();\n    }\n\n    /**\n     * Fills the screen with lines projected from world space, see [[Tile.blockingElements]].\n     * @note These boxes have highest priority, so will block all other labels.\n     * @param dataSourceTileList - List of tiles to be rendered for each data source.\n     */\n    private prepopulateScreenWithBlockingElements(dataSourceTileList: DataSourceTileList[]) {\n        const boxes: IBox[] = [];\n        dataSourceTileList.forEach(renderListEntry => {\n            const startLinePointProj = new THREE.Vector3();\n            const endLinePointProj = new THREE.Vector3();\n            for (const tile of renderListEntry.renderedTiles.values()) {\n                for (const pathBlockingElement of tile.blockingElements) {\n                    if (pathBlockingElement.points.length < 2) {\n                        continue;\n                    }\n                    this.m_screenProjector.project3(\n                        pathBlockingElement.points[0],\n                        startLinePointProj\n                    );\n                    for (let i = 1; i < pathBlockingElement.points.length; i++) {\n                        this.m_screenProjector.project3(\n                            pathBlockingElement.points[i],\n                            endLinePointProj\n                        );\n                        const line = pathBlockingElement.screenSpaceLines[i - 1];\n                        line.start.copy(startLinePointProj);\n                        line.end.copy(endLinePointProj);\n                        const lineWithBound: LineWithBound = {\n                            minX: Math.min(startLinePointProj.x, endLinePointProj.x),\n                            maxX: Math.max(startLinePointProj.x, endLinePointProj.x),\n                            minY: Math.min(startLinePointProj.y, endLinePointProj.y),\n                            maxY: Math.max(startLinePointProj.y, endLinePointProj.y),\n                            line\n                        };\n                        boxes.push(lineWithBound);\n                        startLinePointProj.copy(endLinePointProj);\n                    }\n                }\n            }\n        });\n        this.m_screenCollisions.allocateIBoxes(boxes);\n    }\n\n    /**\n     * @returns True if whole group was processed for placement,\n     * false otherwise (e.g. placement limit reached).\n     */\n    private placeTextElementGroup(\n        groupState: TextElementGroupState,\n        renderParams: RenderParams,\n        maxNumPlacedLabels: number | undefined,\n        pass: Pass\n    ): boolean {\n        // Unvisited text elements are never placed.\n        assert(groupState.visited);\n\n        const shieldGroups: number[][] = [];\n        const hiddenKinds = this.m_viewState.hiddenGeometryKinds;\n        const projection = this.m_viewState.projection;\n        const elevationProvider = this.m_viewState.elevationProvider;\n        const elevationMap = elevationProvider?.getDisplacementMap(groupState.tileKey);\n\n        for (const textElementState of groupState.textElementStates) {\n            if (pass === Pass.PersistentLabels) {\n                if (placementStats) {\n                    ++placementStats.total;\n                }\n            }\n            // Limit labels only in new labels pass (Pass.NewLabels).\n            else if (\n                maxNumPlacedLabels !== undefined &&\n                renderParams.numRenderedTextElements >= maxNumPlacedLabels\n            ) {\n                logger.debug(\"Placement label limit exceeded.\");\n                return false;\n            }\n\n            // Skip all labels that are not initialized (didn't pass early placement tests)\n            // or don't belong to this pass.\n            if (!textElementState.initialized) {\n                if (placementStats) {\n                    ++placementStats.uninitialized;\n                }\n                continue;\n            }\n            if (textElementState.viewDistance === undefined || textElementState.viewDistance < 0) {\n                if (placementStats) {\n                    ++placementStats.tooFar;\n                }\n                continue;\n            }\n\n            const elementVisible = textElementState.visible;\n            if (\n                (pass === Pass.PersistentLabels && !elementVisible) ||\n                (pass === Pass.NewLabels && elementVisible)\n            ) {\n                continue;\n            }\n\n            const textElement = textElementState.element;\n\n            // Get the TextElementStyle.\n            const textElementStyle = this.m_textStyleCache.getTextElementStyle(textElement.style);\n            const textCanvas = textElementStyle.textCanvas;\n\n            // TODO: HARP-7648. Discard hidden kinds sooner, before placement.\n            // Check if the label should be hidden.\n            if (\n                hiddenKinds !== undefined &&\n                textElement.kind !== undefined &&\n                hiddenKinds.hasOrIntersects(textElement.kind)\n            ) {\n                continue;\n            }\n\n            if (elevationProvider !== undefined && !textElement.elevated) {\n                if (!elevationMap) {\n                    this.m_isUpdatePending = true;\n                    this.m_forceNewLabelsPass = true;\n                    continue;\n                }\n                overlayTextElement(textElement, elevationProvider, elevationMap, projection);\n            }\n            const elementType = textElement.type;\n            const isPathLabel = elementType === TextElementType.PathLabel;\n\n            // For paths, check if the label may fit.\n            if (isPathLabel) {\n                if (isPathLabelTooSmall(textElement, this.m_screenProjector, tempScreenPoints)) {\n                    if (placementStats) {\n                        placementStats.numNotVisible++;\n                    }\n                    if (textElement.dbgPathTooSmall === true) {\n                        if (placementStats) {\n                            placementStats.numPathTooSmall++;\n                        }\n                    }\n                    textElementState.reset();\n                    continue;\n                }\n            }\n\n            const forceNewPassOnLoaded = true;\n            if (textCanvas) {\n                // This ensures that textElement.renderStyle and textElement.layoutStyle are\n                // already instantiated and initialized with theme style values.\n                if (!this.initializeGlyphs(textElement, textElementStyle, forceNewPassOnLoaded)) {\n                    continue;\n                }\n\n                const layer = textCanvas.getLayer(\n                    textElement.renderOrder ?? DEFAULT_TEXT_CANVAS_LAYER\n                );\n\n                // Move onto the next TextElement if we cannot continue adding glyphs to this layer.\n                if (layer !== undefined) {\n                    if (\n                        layer.storage.drawCount + textElement.glyphs!.length >\n                        layer.storage.capacity\n                    ) {\n                        if (placementStats) {\n                            ++placementStats.numCannotAdd;\n                        }\n                        logger.warn(\"layer glyph storage capacity exceeded.\");\n                        continue;\n                    }\n                }\n\n                // Set the current style for the canvas.\n                // This means text canvas has always references (not a copy) to text element styles.\n                // The only exception is multi-anchor placement where layoutStyle need to be\n                // modified and thus textCanvas will using its own copy of textElement.layoutStyle.\n                // See: placePointLabel()\n                textCanvas.textRenderStyle = textElement.renderStyle!;\n                textCanvas.textLayoutStyle = textElement.layoutStyle!;\n            }\n\n            switch (elementType) {\n                case TextElementType.PoiLabel:\n                    this.addPoiLabel(textElementState, textCanvas, renderParams);\n                    break;\n                case TextElementType.LineMarker:\n                    this.addLineMarkerLabel(\n                        textElementState,\n                        shieldGroups,\n                        textCanvas,\n                        renderParams\n                    );\n                    break;\n                case TextElementType.PathLabel:\n                    if (textCanvas) {\n                        this.addPathLabel(\n                            textElementState,\n                            tempScreenPoints,\n                            textCanvas,\n                            renderParams\n                        );\n                    }\n            }\n        }\n        return true;\n    }\n\n    private initializeGlyphs(\n        textElement: TextElement,\n        textElementStyle: TextElementStyle,\n        forceNewPassOnLoaded: boolean\n    ): boolean {\n        // Trigger the glyph load if needed.\n        if (textElement.loadingState === LoadingState.Initialized) {\n            return textElement.glyphs !== undefined;\n        }\n\n        assert(textElementStyle.textCanvas !== undefined);\n        const textCanvas = textElementStyle.textCanvas!;\n\n        if (textElement.loadingState === undefined) {\n            textElement.loadingState = LoadingState.Requested;\n\n            if (textElement.renderStyle === undefined) {\n                textElement.renderStyle = new TextRenderStyle({\n                    ...textElementStyle.renderParams,\n                    ...textElement.renderParams\n                });\n            }\n            if (textElement.layoutStyle === undefined) {\n                textElement.layoutStyle = new TextLayoutStyle({\n                    ...textElementStyle.layoutParams,\n                    ...textElement.layoutParams\n                });\n            }\n\n            if (textElement.text === \"\") {\n                textElement.loadingState = LoadingState.Loaded;\n            } else {\n                const newLoadPromise = textCanvas.fontCatalog\n                    .loadCharset(textElement.text, textElement.renderStyle)\n                    .then(() => {\n                        --this.m_loadPromisesCount;\n                        textElement.loadingState = LoadingState.Loaded;\n                        this.m_isUpdatePending = true;\n                        this.m_forceNewLabelsPass =\n                            this.m_forceNewLabelsPass || forceNewPassOnLoaded;\n                    });\n                if (this.m_loadPromisesCount === 0) {\n                    this.m_loadPromise = undefined;\n                }\n                ++this.m_loadPromisesCount;\n\n                this.m_loadPromise =\n                    this.m_loadPromise === undefined\n                        ? newLoadPromise\n                        : Promise.all([this.m_loadPromise, newLoadPromise]);\n            }\n        }\n        if (textElement.loadingState === LoadingState.Loaded) {\n            textCanvas.textRenderStyle = textElement.renderStyle!;\n            textCanvas.textLayoutStyle = textElement.layoutStyle!;\n            textElement.glyphCaseArray = [];\n            textElement.bounds = undefined;\n            textElement.glyphs = textCanvas.fontCatalog.getGlyphs(\n                textElement.text,\n                textCanvas.textRenderStyle,\n                textElement.glyphCaseArray\n            );\n            textElement.loadingState = LoadingState.Initialized;\n        }\n        // Return true as soon as a text element has some glyphs assigned so that it's rendered.\n        // The glyphs may be either the final ones or some temporal glyphs inherited from a\n        // predecessor as part of the text element replacement process.\n        // See TextElementState.replace().\n        return textElement.glyphs !== undefined;\n    }\n\n    private initializeCamera() {\n        this.m_camera.position.z = 1;\n        this.m_camera.near = 0;\n    }\n\n    updateCamera() {\n        const { width, height } = this.m_renderer.getSize(cache.vector2[0]);\n        this.m_camera.left = width / -2;\n        this.m_camera.right = width / 2;\n        this.m_camera.bottom = height / -2;\n        this.m_camera.top = height / 2;\n        this.m_camera.updateProjectionMatrix();\n        this.m_camera.updateMatrixWorld(false);\n        this.m_screenCollisions.update(width, height);\n    }\n\n    private initializeDefaultFontCatalog() {\n        if (this.m_options.fontCatalog) {\n            this.m_defaultFontCatalogConfig = createDefaultFontCatalogConfig(\n                this.m_options.fontCatalog\n            );\n            this.addDefaultTextCanvas();\n        }\n    }\n\n    private async addTextCanvas(fontCatalogConfig: FontCatalogConfig): Promise<void> {\n        const catalogCallback = (name: string, catalog: FontCatalog) => {\n            if (this.m_textCanvases.has(name)) {\n                const loadedTextCanvas = this.m_textCanvasFactory.createTextCanvas(catalog, name);\n\n                catalog.showReplacementGlyphs = this.showReplacementGlyphs;\n\n                // Check if the textCanvas has not been removed in the meantime\n                this.m_textCanvases.set(name, loadedTextCanvas);\n            }\n        };\n        const errorCallback = () => {\n            this.m_textCanvases.delete(fontCatalogConfig.name);\n        };\n        if (this.m_textCanvases.has(fontCatalogConfig.name)) {\n            return Promise.resolve();\n        } else {\n            // Reserve map space, until loaded or error\n            this.m_textCanvases.set(fontCatalogConfig.name, undefined);\n            const newLoadPromise = loadFontCatalog(\n                fontCatalogConfig,\n                catalogCallback,\n                errorCallback\n            )\n                .then(() => {\n                    --this.m_loadPromisesCount;\n                })\n                .catch(error => {\n                    logger.info(\"rendering without font catalog, only icons possible\", error);\n                    --this.m_loadPromisesCount;\n                });\n            if (this.m_loadPromisesCount === 0) {\n                this.m_loadPromise = undefined;\n            }\n            ++this.m_loadPromisesCount;\n            this.m_loadPromise =\n                this.m_loadPromise === undefined\n                    ? newLoadPromise\n                    : Promise.all([this.m_loadPromise, newLoadPromise]);\n            return newLoadPromise;\n        }\n    }\n\n    private updateGlyphDebugMesh() {\n        const debugGlyphs = debugContext.getValue(\"DEBUG_GLYPHS\");\n        if (debugGlyphs === undefined) {\n            return;\n        }\n\n        if (debugGlyphs && this.m_debugGlyphTextureCacheMesh === undefined) {\n            this.initializeGlyphDebugMesh();\n        }\n        assert(this.m_debugGlyphTextureCacheMesh !== undefined);\n        assert(this.m_debugGlyphTextureCacheWireMesh !== undefined);\n\n        this.m_debugGlyphTextureCacheMesh!.visible = debugGlyphs;\n        this.m_debugGlyphTextureCacheWireMesh!.visible = debugGlyphs;\n    }\n\n    private initializeGlyphDebugMesh() {\n        if (this.m_textCanvases.size === 0) {\n            return;\n        }\n        const defaultTextCanvas = this.m_textCanvases.values().next().value;\n        const defaultFontCatalog = defaultTextCanvas.fontCatalog;\n\n        // Initialize glyph-debugging mesh.\n        const planeGeometry = new THREE.PlaneGeometry(\n            defaultFontCatalog.textureSize.width / 2.5,\n            defaultFontCatalog.textureSize.height / 2.5,\n            defaultFontCatalog.textureSize.width / defaultFontCatalog.maxWidth,\n            defaultFontCatalog.textureSize.height / defaultFontCatalog.maxHeight\n        );\n        const material = new THREE.MeshBasicMaterial({\n            transparent: true,\n            depthWrite: false,\n            depthTest: false,\n            map: defaultFontCatalog.texture\n        });\n        this.m_debugGlyphTextureCacheMesh = new THREE.Mesh(planeGeometry, material);\n        this.m_debugGlyphTextureCacheMesh.renderOrder = 10000;\n        this.m_debugGlyphTextureCacheMesh.visible = false;\n\n        this.m_debugGlyphTextureCacheMesh.name = \"glyphDebug\";\n\n        const wireframe = new THREE.WireframeGeometry(planeGeometry);\n        const wireframeMaterial = new THREE.LineBasicMaterial({\n            transparent: true,\n            color: 0x999999,\n            depthWrite: false,\n            depthTest: false\n        });\n        this.m_debugGlyphTextureCacheWireMesh = new THREE.LineSegments(\n            wireframe,\n            wireframeMaterial\n        );\n        this.m_debugGlyphTextureCacheWireMesh.renderOrder = 9999;\n        this.m_debugGlyphTextureCacheWireMesh.visible = false;\n\n        this.m_debugGlyphTextureCacheWireMesh.name = \"glyphDebug\";\n\n        defaultTextCanvas\n            .getLayer(DEFAULT_TEXT_CANVAS_LAYER)!\n            .storage.scene.add(\n                this.m_debugGlyphTextureCacheMesh,\n                this.m_debugGlyphTextureCacheWireMesh\n            );\n    }\n\n    /**\n     * Visit all visible tiles and add/ their text elements to cache.\n     *\n     * @remarks\n     * The update of {@link TextElement}s is a time consuming process,\n     * and cannot be done every frame, but should only\n     * be done when the camera moved (a lot) of whenever the set of visible tiles change.\n     *\n     * The actually rendered {@link TextElement}s are stored internally\n     * until the next update is done\n     * to speed up rendering when no camera movement was detected.\n     * @param dataSourceTileList - List of tiles to be rendered for each data source.\n     */\n    private updateTextElements(dataSourceTileList: DataSourceTileList[]) {\n        if (updateStats) {\n            updateStats.clear();\n        }\n\n        this.m_textElementStateCache.clearTextCache();\n        this.m_cacheInvalidated = false;\n\n        this.checkIfOverloaded(dataSourceTileList);\n\n        // Used with tile offset to compute the x coordinate offset for tiles.\n        const updateStartTime =\n            this.overloaded && this.m_viewState.isDynamic ? PerformanceTimer.now() : undefined;\n\n        // TODO: HARP-7648. Skip all data sources that won't contain text.\n        // TODO: HARP-7651. Higher priority labels should be updated before lower priority ones\n        // across all data sources.\n        // TODO: HARP-7373. Use rendered tiles (tiles currently rendered to cover the view,\n        // including fallbacks if necessary) instead of visible tiles (target tiles that might not\n        // be decoded yet).\n        // Otherwise labels persistent when crossing a zoom level boundary will flicker (fade out\n        // and back in) due to the delay in decoding the visible tiles.\n        dataSourceTileList.forEach(tileList => {\n            this.updateTextElementsFromSource(\n                tileList.dataSource,\n                tileList.storageLevel,\n                Array.from(tileList.renderedTiles.values()),\n                updateStartTime\n            );\n        });\n\n        if (updateStats) {\n            updateStats.log();\n        }\n    }\n\n    private updateTextElementsFromSource(\n        tileDataSource: DataSource,\n        storageLevel: number,\n        visibleTiles: Tile[],\n        updateStartTime: number | undefined\n    ) {\n        if (updateStats) {\n            updateStats.tiles += visibleTiles.length;\n        }\n        const sortedTiles = visibleTiles;\n\n        // TODO: HARP-7648. Really needed? Should it be done here or in VisibleTileSet?\n        sortedTiles.sort((a: Tile, b: Tile) => {\n            return a.tileKey.mortonCode() - b.tileKey.mortonCode();\n        });\n\n        const sortedGroups: TextElementLists[] = [];\n        this.createSortedGroupsForSorting(tileDataSource, storageLevel, sortedTiles, sortedGroups);\n\n        let numTextElementsUpdated = 0;\n\n        for (const textElementLists of sortedGroups) {\n            this.selectTextElementsToUpdateByDistance(textElementLists);\n\n            // The value of updateStartTime is set if this.overloaded is true.\n            if (updateStartTime !== undefined) {\n                // If overloaded and all time is used up, exit early.\n                if (OVERLOAD_UPDATE_TIME_LIMIT > 0) {\n                    const endTime = PerformanceTimer.now();\n                    const elapsedTime = endTime - updateStartTime;\n                    if (elapsedTime > OVERLOAD_UPDATE_TIME_LIMIT) {\n                        logger.debug(\"Update time limit exceeded.\");\n                        break;\n                    }\n                }\n\n                // Try not to update too many elements. They will be checked for visibility each\n                // frame.\n                numTextElementsUpdated += textElementLists.count();\n                if (numTextElementsUpdated >= OVERLOAD_UPDATED_LABEL_LIMIT) {\n                    logger.debug(\"Update label limit exceeded.\");\n                    break;\n                }\n            }\n        }\n    }\n\n    private prepareTextElementGroup(\n        textElementGroup: TextElementGroup,\n        tileKey: TileKey,\n        maxViewDistance?: number\n    ) {\n        if (textElementGroup.elements.length === 0) {\n            return;\n        }\n\n        const textElementSelection: TextElementFilter = (\n            textElementState: TextElementState\n        ): number | undefined => {\n            let { result, viewDistance } = checkReadyForPlacement(\n                textElementState.element,\n                textElementState.element.type === TextElementType.LineMarker\n                    ? textElementState.lineMarkerIndex\n                    : undefined,\n                this.m_viewState,\n                this.m_poiManager,\n                maxViewDistance\n            );\n\n            if (\n                result === PrePlacementResult.Ok &&\n                !this.m_textElementStateCache.deduplicateElement(\n                    this.m_viewState.zoomLevel,\n                    textElementState\n                )\n            ) {\n                result = PrePlacementResult.Duplicate;\n                viewDistance = undefined;\n            }\n\n            if (updateStats) {\n                updateStats.totalLabels++;\n                updateStats.results[result]++;\n            }\n            return viewDistance;\n        };\n\n        const [, found] = this.m_textElementStateCache.getOrSet(\n            textElementGroup,\n            tileKey,\n            textElementSelection\n        );\n\n        if (updateStats) {\n            ++updateStats.totalGroups;\n            if (!found) {\n                ++updateStats.newGroups;\n            }\n        }\n    }\n\n    private createSortedGroupsForSorting(\n        tileDataSource: DataSource,\n        storageLevel: number,\n        sortedTiles: Tile[],\n        sortedGroups: TextElementLists[]\n    ) {\n        if (sortedTiles.length === 0) {\n            return;\n        }\n\n        const tilesToRender: Tile[] = [];\n\n        for (const tile of sortedTiles) {\n            if (tileDataSource.shouldRenderText(storageLevel, tile.tileKey)) {\n                tilesToRender.push(tile);\n            }\n        }\n\n        const groupedPriorityLists: Map<number, TextElementLists> = new Map();\n\n        for (const tile of tilesToRender) {\n            for (const group of tile.textElementGroups.groups.values()) {\n                if (group.elements.length === 0) {\n                    continue;\n                }\n\n                const foundGroup = groupedPriorityLists.get(group.priority);\n                if (foundGroup === undefined) {\n                    groupedPriorityLists.set(\n                        group.priority,\n                        new TextElementLists([new TileTextElements(tile, group)])\n                    );\n                } else {\n                    foundGroup.lists.push(new TileTextElements(tile, group));\n                }\n            }\n        }\n\n        if (groupedPriorityLists.size === 0) {\n            return;\n        }\n\n        for (const g of groupedPriorityLists) {\n            const lists = g[1];\n            sortedGroups.push(lists);\n        }\n\n        sortedGroups.sort((a: TextElementLists, b: TextElementLists) => {\n            return b.priority - a.priority;\n        });\n\n        const printTextInfo = false;\n\n        if (PRINT_LABEL_DEBUG_INFO && printTextInfo) {\n            let outString = \"\";\n            for (const textElementLists of sortedGroups) {\n                let size = 0;\n                for (const tileTextElements of textElementLists.lists) {\n                    size += tileTextElements.group.elements.length;\n                }\n                outString += `priority ${textElementLists.priority} size: ${size}\\n`;\n            }\n            logger.log(outString);\n        }\n    }\n\n    private selectTextElementsToUpdateByDistance(textElementLists: TextElementLists) {\n        const farDistanceLimitRatio = Math.max(\n            this.m_options.maxDistanceRatioForTextLabels!,\n            this.m_options.maxDistanceRatioForPoiLabels!\n        );\n        const maxViewDistance = getMaxViewDistance(this.m_viewState, farDistanceLimitRatio);\n\n        for (const tileTextElements of textElementLists.lists) {\n            this.prepareTextElementGroup(\n                tileTextElements.group,\n                tileTextElements.tile.tileKey,\n                maxViewDistance\n            );\n        }\n    }\n\n    private placeTextElements(time: number, placeNewTextElements: boolean) {\n        const renderParams: RenderParams = {\n            numRenderedTextElements: 0,\n            fadeAnimationRunning: false,\n            time\n        };\n\n        const placeStartTime =\n            this.overloaded && this.m_viewState.isDynamic ? PerformanceTimer.now() : undefined;\n\n        if (placementStats) {\n            placementStats.clear();\n        }\n\n        if (this.m_textElementStateCache.size === 0) {\n            logger.debug(\"Text element cache empty.\");\n            return;\n        }\n\n        const placeNew = this.m_forceNewLabelsPass || placeNewTextElements;\n        if (this.m_forceNewLabelsPass) {\n            this.m_forceNewLabelsPass = false;\n        }\n\n        const maxNumPlacedTextElements = this.m_options.maxNumVisibleLabels;\n\n        // TODO: HARP-7648. Potential performance improvement. Place persistent labels + rejected\n        // candidates from previous frame if there's been no placement in this one.\n        const groupStates = this.m_textElementStateCache.sortedGroupStates;\n        let currentPriority: number = groupStates[0].priority;\n        let currentPriorityBegin: number = 0;\n\n        for (let i = 0; i < groupStates.length; ++i) {\n            const textElementGroupState = groupStates[i];\n            if (placementStats) {\n                ++placementStats.totalGroups;\n            }\n\n            const newPriority = textElementGroupState.priority;\n            if (placeNew && currentPriority !== newPriority) {\n                // Place all new labels of the previous priority before placing the persistent\n                // labels of this priority.\n                this.placeNewTextElements(currentPriorityBegin, i, renderParams);\n                if (isPlacementTimeExceeded(placeStartTime)) {\n                    break;\n                }\n                currentPriority = newPriority;\n                currentPriorityBegin = i;\n            }\n            if (\n                !this.placeTextElementGroup(\n                    textElementGroupState,\n                    renderParams,\n                    maxNumPlacedTextElements,\n                    Pass.PersistentLabels\n                )\n            ) {\n                break;\n            }\n\n            if (isPlacementTimeExceeded(placeStartTime)) {\n                break;\n            }\n        }\n\n        if (placeNew) {\n            // Place new text elements of the last priority.\n            this.placeNewTextElements(currentPriorityBegin, groupStates.length, renderParams);\n        }\n\n        if (placementStats) {\n            placementStats.numRenderedTextElements = renderParams.numRenderedTextElements;\n            placementStats.log();\n        }\n\n        if (renderParams.fadeAnimationRunning) {\n            this.m_isUpdatePending = true;\n        }\n    }\n\n    private placeNewTextElements(\n        beginGroupIndex: number,\n        endGroupIndex: number,\n        renderParams: RenderParams\n    ) {\n        const groupStates = this.m_textElementStateCache.sortedGroupStates;\n        for (let i = beginGroupIndex; i < endGroupIndex; ++i) {\n            if (\n                !this.placeTextElementGroup(\n                    groupStates[i],\n                    renderParams,\n                    this.m_options.maxNumVisibleLabels,\n                    Pass.NewLabels\n                )\n            ) {\n                break;\n            }\n        }\n    }\n\n    private placeOverlayTextElements() {\n        if (this.m_overlayTextElements === undefined || this.m_overlayTextElements.length === 0) {\n            return;\n        }\n\n        const screenSize = this.m_tmpVector.set(\n            this.m_screenProjector.width,\n            this.m_screenProjector.height\n        );\n        const screenXOrigin = -screenSize.width / 2.0;\n        const screenYOrigin = screenSize.height / 2.0;\n\n        // Place text elements one by one.\n        for (const textElement of this.m_overlayTextElements!) {\n            // Get the TextElementStyle.\n            const textElementStyle = this.m_textStyleCache.getTextElementStyle(textElement.style);\n            const textCanvas = textElementStyle.textCanvas;\n            if (textCanvas === undefined) {\n                continue;\n            }\n\n            const forceNewPassOnLoaded = false;\n            this.initializeGlyphs(textElement, textElementStyle, forceNewPassOnLoaded);\n\n            if (textElement.loadingState !== LoadingState.Initialized) {\n                continue;\n            }\n\n            const layer = textCanvas.getLayer(textElement.renderOrder ?? DEFAULT_TEXT_CANVAS_LAYER);\n\n            // Move onto the next TextElement if we cannot continue adding glyphs to this layer.\n            if (layer !== undefined) {\n                if (layer.storage.drawCount + textElement.glyphs!.length > layer.storage.capacity) {\n                    continue;\n                }\n            }\n\n            // Set the current style for the canvas.\n            textCanvas.textRenderStyle = textElement.renderStyle!;\n            textCanvas.textLayoutStyle = textElement.layoutStyle!;\n\n            // Place text.\n            let textPath;\n            if (!(textElement.type === TextElementType.PathLabel)) {\n                // Adjust the label positioning.\n                tempScreenPosition.x = screenXOrigin + textElement.position.x * screenSize.width;\n                tempScreenPosition.y = screenYOrigin - textElement.position.y * screenSize.height;\n                if (textElement.xOffset !== undefined) {\n                    tempScreenPosition.x += textElement.xOffset;\n                }\n                if (textElement.yOffset !== undefined) {\n                    tempScreenPosition.y -= textElement.yOffset;\n                }\n\n                tempPosition.x = tempScreenPosition.x;\n                tempPosition.y = tempScreenPosition.y;\n                tempPosition.z = 0.0;\n                addTextToCanvas(textElement, textCanvas, tempPosition);\n            } else {\n                // Adjust the label positioning.\n                tempScreenPosition.x = screenXOrigin;\n                tempScreenPosition.y = screenYOrigin;\n                if (textElement.xOffset !== undefined) {\n                    tempScreenPosition.x += textElement.xOffset;\n                }\n                if (textElement.yOffset !== undefined) {\n                    tempScreenPosition.y -= textElement.yOffset;\n                }\n\n                // Get the screen points that define the label's segments and create a path with\n                // them.\n                // TODO: HARP-7648. Optimize array allocations.\n                const screenPoints: THREE.Vector2[] = [];\n                for (const pt of textElement.path!) {\n                    const pX = tempScreenPosition.x + pt.x * screenSize.width;\n                    const pY = tempScreenPosition.y - pt.y * screenSize.height;\n                    screenPoints.push(new THREE.Vector2(pX, pY));\n                }\n                textPath = new SimplePath();\n                for (let i = 0; i < screenPoints.length - 1; ++i) {\n                    textPath.add(new THREE.LineCurve(screenPoints[i], screenPoints[i + 1]));\n                }\n                addTextToCanvas(textElement, textCanvas, tempPosition, textPath, true);\n            }\n        }\n    }\n\n    private getDistanceScalingFactor(\n        label: TextElement,\n        distance: number,\n        lookAtDistance: number\n    ): number {\n        // Distance scale is based on relation between camera focus point distance and\n        // the actual label distance. For labels close to camera look at point the scale\n        // remains unchanged, the farther is label from that point the smaller size it is\n        // rendered in screen space. This method is unaffected by near and far clipping planes\n        // distances, but may be improved by taking FOV into equation or customizing the\n        // focus point screen position based on horizon, actual ground, tilt ets.\n        let factor = lookAtDistance / distance;\n        // The label.distanceScale property defines the influence ratio at which\n        // distance affects the final scaling of label.\n        factor = 1.0 + (factor - 1.0) * label.distanceScale;\n        // Preserve the constraints\n        factor = Math.max(factor, this.m_options.labelDistanceScaleMin!);\n        factor = Math.min(factor, this.m_options.labelDistanceScaleMax!);\n        return factor;\n    }\n\n    private getDistanceFadingFactor(\n        label: TextElement,\n        state: TextElementState,\n        maxVisibilityDist: number\n    ): number {\n        let distanceFadeValue = 1.0;\n        const textDistance = state.viewDistance;\n\n        if (textDistance !== undefined && label.fadeFar !== undefined && label.fadeFar > 0.0) {\n            const fadeNear = label.fadeNear === undefined ? 0.0 : label.fadeNear;\n            const fadeFar = label.fadeFar;\n            if (fadeFar > fadeNear) {\n                distanceFadeValue =\n                    1.0 -\n                    THREE.MathUtils.clamp(\n                        (textDistance / maxVisibilityDist - fadeNear) / (fadeFar - fadeNear),\n                        0.0,\n                        1.0\n                    );\n            }\n        }\n        return distanceFadeValue;\n    }\n\n    private addPointLabel(\n        labelState: TextElementState,\n        position: THREE.Vector3,\n        screenPosition: THREE.Vector2,\n        textCanvas: TextCanvas | undefined,\n        renderParams: RenderParams\n    ): boolean {\n        const pointLabel: TextElement = labelState.element;\n        const textRenderState: RenderState | undefined = labelState.textRenderState;\n        const isLineMarker = pointLabel.type === TextElementType.LineMarker;\n\n        const iconRenderState = labelState.iconRenderState!;\n        assert(iconRenderState !== undefined);\n\n        // Find the label's original position.\n        tempScreenPosition.x = tempPoiScreenPosition.x = screenPosition.x;\n        tempScreenPosition.y = tempPoiScreenPosition.y = screenPosition.y;\n\n        // Scale the text depending on the label's distance to the camera \"zero\" plane.\n        const textDistance = pointToPlaneDistance(\n            position,\n            this.m_viewState.worldCenter,\n            this.m_cameraLookAt\n        );\n        if (\n            pointLabel.fadeFar !== undefined &&\n            (pointLabel.fadeFar <= 0.0 ||\n                pointLabel.fadeFar * this.m_viewState.maxVisibilityDist < textDistance)\n        ) {\n            // The label is farther away than fadeFar value, which means it is totally\n            // transparent.\n            if (placementStats) {\n                ++placementStats.tooFar;\n            }\n            return false;\n        }\n        labelState.setViewDistance(textDistance);\n\n        // Check if there is need to check for screen space for the label's icon.\n        const poiInfo = pointLabel.poiInfo;\n        let iconRejected = false;\n\n        // Check if icon should be rendered at this zoomLevel\n        const renderIcon =\n            poiInfo !== undefined &&\n            MathUtils.isClamped(\n                this.m_viewState.zoomLevel,\n                poiInfo.iconMinZoomLevel,\n                poiInfo.iconMaxZoomLevel\n            ) &&\n            poiInfo!.isValid !== false;\n\n        const distanceScaleFactor = this.getDistanceScalingFactor(\n            pointLabel,\n            textDistance,\n            this.m_viewState.lookAtDistance\n        );\n        const iconReady =\n            renderIcon && this.m_poiRenderer.prepareRender(pointLabel, this.m_viewState.env);\n        let iconInvisible = false;\n        if (iconReady) {\n            const result = placeIcon(\n                iconRenderState,\n                poiInfo!,\n                tempPoiScreenPosition,\n                distanceScaleFactor,\n                this.m_viewState.env,\n                this.m_screenCollisions\n            );\n            iconInvisible = result === PlacementResult.Invisible;\n            iconRejected = result === PlacementResult.Rejected;\n            if (iconInvisible) {\n                iconRenderState.reset();\n            }\n        } else if (renderIcon && poiInfo?.imageItem !== null) {\n            this.m_forceNewLabelsPass = true;\n            this.m_isUpdatePending = true;\n        }\n\n        const distanceFadeFactor = this.getDistanceFadingFactor(\n            pointLabel,\n            labelState,\n            this.m_viewState.maxVisibilityDist\n        );\n\n        // Render the label's text...\n        // textRenderState is always defined at this point.\n        if (textCanvas && shouldRenderPointText(labelState, this.m_viewState, this.m_options)) {\n            // For the new labels with rejected icons we don't need to go further.\n            const newLabel = !labelState.visible;\n\n            // Multi point (icons) features (line markers) will use single placement anchor, but\n            // single point labels (POIs, etc.) may use multi-placement algorithm.\n            const placeResult =\n                iconRejected && newLabel\n                    ? PlacementResult.Rejected\n                    : placePointLabel(\n                          labelState,\n                          tempScreenPosition,\n                          distanceScaleFactor,\n                          textCanvas,\n                          this.m_viewState.env,\n                          this.m_screenCollisions,\n                          tempPosition,\n                          !isLineMarker\n                      );\n            const textInvisible = placeResult === PlacementResult.Invisible;\n            if (textInvisible) {\n                if (placementStats) {\n                    placementStats.numPoiTextsInvisible++;\n                }\n                if (!renderIcon || iconInvisible) {\n                    labelState.reset();\n                    return false;\n                }\n                textRenderState!.reset();\n            }\n\n            const iconIsOptional = poiInfo?.iconIsOptional === true;\n            // Rejected icons are only considered to hide the text if they are valid, so a missing\n            // icon image will not keep the text from showing up.\n            const requiredIconRejected = iconRejected && iconReady && !iconIsOptional;\n            const textRejected = requiredIconRejected || placeResult === PlacementResult.Rejected;\n            if (!iconRejected && !iconInvisible) {\n                const textIsOptional = pointLabel.poiInfo?.textIsOptional === true;\n                iconRejected = textRejected && !textIsOptional;\n            }\n\n            if (textRejected) {\n                textRenderState!.startFadeOut(renderParams.time);\n            }\n\n            const textNeedsDraw =\n                !textInvisible &&\n                ((!textRejected && shouldRenderPoiText(labelState, this.m_viewState)) ||\n                    textRenderState!.isFading());\n\n            if (textNeedsDraw) {\n                if (!textRejected) {\n                    textRenderState!.startFadeIn(renderParams.time, this.m_options.disableFading);\n                }\n                renderParams.fadeAnimationRunning =\n                    renderParams.fadeAnimationRunning || textRenderState!.isFading();\n                if (\n                    addTextBufferToCanvas(\n                        labelState,\n                        textCanvas,\n                        tempPosition,\n                        distanceFadeFactor,\n                        distanceScaleFactor\n                    ) &&\n                    placementStats\n                ) {\n                    placementStats.numRenderedPoiTexts++;\n                }\n            }\n        }\n        // ... and render the icon (if any).\n        if (iconReady && !iconInvisible) {\n            if (iconRejected) {\n                iconRenderState.startFadeOut(renderParams.time);\n            } else {\n                iconRenderState!.startFadeIn(renderParams.time, this.m_options.disableFading);\n            }\n\n            renderParams.fadeAnimationRunning =\n                renderParams.fadeAnimationRunning || iconRenderState!.isFading();\n\n            const opacity = iconRenderState.opacity * distanceFadeFactor;\n            if (opacity > 0) {\n                // Same as for text, don't allocate screen space for an icon that's fading out so\n                // that any label blocked by it gets a chance to be placed as soon as any other\n                // surrounding new labels.\n                const allocateSpace = poiInfo!.reserveSpace !== false && !iconRejected;\n                this.m_poiRenderer.addPoi(\n                    poiInfo!,\n                    tempPoiScreenPosition,\n                    this.m_screenCollisions,\n                    labelState.renderDistance,\n                    distanceScaleFactor,\n                    allocateSpace,\n                    opacity,\n                    this.m_viewState.env\n                );\n\n                if (placementStats) {\n                    placementStats.numRenderedPoiIcons++;\n                }\n            }\n        }\n        renderParams.numRenderedTextElements++;\n        return true;\n    }\n\n    private addPoiLabel(\n        labelState: TextElementState,\n        textCanvas: TextCanvas | undefined,\n        renderParams: RenderParams\n    ): boolean {\n        const worldPosition = getWorldPosition(\n            labelState.element,\n            this.m_viewState.projection,\n            this.m_viewState.env,\n            this.m_tmpVector3\n        );\n\n        // Only process labels that are potentially within the frustum.\n        if (!this.labelPotentiallyVisible(worldPosition, tempScreenPosition)) {\n            return false;\n        }\n\n        // Add this POI as a point label.\n        return this.addPointLabel(\n            labelState,\n            worldPosition,\n            tempScreenPosition,\n            textCanvas,\n            renderParams\n        );\n    }\n\n    private addLineMarkerLabel(\n        labelState: TextElementState,\n        shieldGroups: number[][],\n        textCanvas: TextCanvas | undefined,\n        renderParams: RenderParams\n    ): void {\n        const lineMarkerLabel = labelState.element;\n\n        // Early exit if the line marker doesn't have the necessary data.\n        const poiInfo = lineMarkerLabel.poiInfo!;\n        if (!this.m_poiRenderer?.prepareRender(lineMarkerLabel, this.m_viewState.env)) {\n            return;\n        }\n\n        // Initialize the shield group for this lineMarker.\n        let shieldGroup: number[] | undefined;\n        if (poiInfo.shieldGroupIndex !== undefined) {\n            shieldGroup = shieldGroups[poiInfo.shieldGroupIndex];\n            if (shieldGroup === undefined) {\n                shieldGroup = [];\n                shieldGroups[poiInfo.shieldGroupIndex] = shieldGroup;\n            }\n        }\n\n        const lineTechnique = poiInfo.technique as LineMarkerTechnique;\n        const minDistanceSqr =\n            lineTechnique.minDistance !== undefined\n                ? lineTechnique.minDistance * lineTechnique.minDistance\n                : 0;\n\n        // Process markers (with shield groups).\n        if (minDistanceSqr > 0 && shieldGroup !== undefined) {\n            let numShieldsVisible = 0;\n            const point = labelState.position!;\n\n            // Only process potentially visible labels\n            if (this.labelPotentiallyVisible(point, tempScreenPosition)) {\n                // Find a suitable location for the lineMarker to be placed at.\n                let tooClose = false;\n                for (let j = 0; j < shieldGroup.length; j += 2) {\n                    const distanceSqr = Math2D.distSquared(\n                        shieldGroup[j],\n                        shieldGroup[j + 1],\n                        tempScreenPosition.x,\n                        tempScreenPosition.y\n                    );\n                    tooClose = distanceSqr < minDistanceSqr;\n                    if (tooClose) {\n                        break;\n                    }\n                }\n\n                // Place it as a point label if it's not to close to another marker in the\n                // same shield group.\n                if (!tooClose) {\n                    if (\n                        this.addPointLabel(\n                            labelState,\n                            point,\n                            tempScreenPosition,\n                            textCanvas,\n                            renderParams\n                        )\n                    ) {\n                        shieldGroup.push(tempScreenPosition.x, tempScreenPosition.y);\n                        numShieldsVisible++;\n                    }\n                }\n            }\n            if (numShieldsVisible === 0) {\n                // For road shields the shared textRenderState may only be reset if none of the\n                // icons can be rendered.\n                labelState.reset();\n            }\n        }\n        // Process markers (without shield groups).\n        else {\n            const point = labelState.position!;\n\n            // Only process potentially visible labels\n            if (this.labelPotentiallyVisible(point, tempScreenPosition)) {\n                this.addPointLabel(labelState, point, tempScreenPosition, textCanvas, renderParams);\n            }\n        }\n    }\n\n    private addPathLabel(\n        labelState: TextElementState,\n        screenPoints: THREE.Vector2[],\n        textCanvas: TextCanvas,\n        renderParams: RenderParams\n    ): boolean {\n        // TODO: HARP-7649. Add fade out transitions for path labels.\n        const textMaxDistance = getMaxViewDistance(\n            this.m_viewState,\n            this.m_options.maxDistanceRatioForTextLabels!\n        );\n        const pathLabel = labelState.element;\n\n        // Limit the text rendering of path labels in the far distance.\n        if (\n            !(\n                pathLabel.ignoreDistance === true ||\n                labelState.viewDistance === undefined ||\n                labelState.viewDistance < textMaxDistance\n            )\n        ) {\n            if (placementStats) {\n                ++placementStats.tooFar;\n            }\n            labelState.textRenderState!.reset();\n            return false;\n        }\n\n        if (\n            pathLabel.fadeFar !== undefined &&\n            (pathLabel.fadeFar <= 0.0 ||\n                pathLabel.fadeFar * this.m_viewState.maxVisibilityDist < labelState.renderDistance)\n        ) {\n            // The label is farther away than fadeFar value, which means it is totally\n            // transparent\n            if (placementStats) {\n                ++placementStats.tooFar;\n            }\n            labelState.textRenderState!.reset();\n            return false;\n        }\n\n        // Get the screen points that define the label's segments and create a path with\n        // them.\n        let textPath = new THREE.Path();\n        tempScreenPosition.copy(screenPoints[0]);\n        for (let i = 0; i < screenPoints.length - 1; ++i) {\n            textPath.add(new SimpleLineCurve(screenPoints[i], screenPoints[i + 1]));\n        }\n        // Flip the path if the label is gonna be rendered downwards.\n        if (textPath.getPoint(0.5).x - textPath.getPoint(0.51).x > 0) {\n            tempScreenPosition.copy(screenPoints[screenPoints.length - 1]);\n            textPath = new THREE.Path();\n            for (let i = screenPoints.length - 1; i > 0; --i) {\n                textPath.add(new SimpleLineCurve(screenPoints[i], screenPoints[i - 1]));\n            }\n        }\n\n        // Update the real rendering distance to have smooth fading and scaling\n        labelState.setViewDistance(\n            computeViewDistance(\n                pathLabel,\n                undefined,\n                this.m_viewState.worldCenter,\n                this.m_cameraLookAt\n            )\n        );\n        const textRenderDistance = -labelState.renderDistance;\n\n        // Scale the text depending on the label's distance to the camera.\n        const distanceScaleFactor = this.getDistanceScalingFactor(\n            pathLabel,\n            textRenderDistance,\n            this.m_viewState.lookAtDistance\n        );\n        const prevSize = textCanvas.textRenderStyle.fontSize.size;\n        textCanvas.textRenderStyle.fontSize.size *= distanceScaleFactor;\n\n        if (\n            placePathLabel(\n                labelState,\n                textPath,\n                tempScreenPosition,\n                textCanvas,\n                this.m_screenCollisions\n            ) !== PlacementResult.Ok\n        ) {\n            textCanvas.textRenderStyle.fontSize.size = prevSize;\n            if (placementStats) {\n                ++placementStats.numNotVisible;\n            }\n            labelState.textRenderState!.reset();\n            return false;\n        }\n\n        labelState.textRenderState!.startFadeIn(renderParams.time, this.m_options.disableFading);\n\n        let opacity = pathLabel.renderStyle!.opacity;\n\n        if (labelState.textRenderState!.isFading()) {\n            opacity *= labelState.textRenderState!.opacity;\n            renderParams.fadeAnimationRunning = true;\n        }\n\n        if (labelState.textRenderState!.opacity === 0) {\n            textCanvas.textRenderStyle.fontSize.size = prevSize;\n            return false;\n        }\n\n        const prevOpacity = textCanvas.textRenderStyle.opacity;\n        const prevBgOpacity = textCanvas.textRenderStyle.backgroundOpacity;\n        const distanceFadeFactor = this.getDistanceFadingFactor(\n            pathLabel,\n            labelState,\n            this.m_viewState.maxVisibilityDist\n        );\n        textCanvas.textRenderStyle.opacity = opacity * distanceFadeFactor;\n        textCanvas.textRenderStyle.backgroundOpacity =\n            textCanvas.textRenderStyle.opacity * pathLabel.renderStyle!.backgroundOpacity;\n\n        tempPosition.z = labelState.renderDistance;\n\n        addTextToCanvas(pathLabel, textCanvas, tempPosition, textPath);\n        renderParams.numRenderedTextElements++;\n\n        // Restore previous style values for text elements using the same style.\n        textCanvas.textRenderStyle.fontSize.size = prevSize;\n        textCanvas.textRenderStyle.opacity = prevOpacity;\n        textCanvas.textRenderStyle.backgroundOpacity = prevBgOpacity;\n        return true;\n    }\n\n    private checkIfOverloaded(dataSourceTileList: DataSourceTileList[]): boolean {\n        // Count the number of TextElements in the scene to see if we have to switch to\n        // \"overloadMode\".\n        let numTextElementsInScene = 0;\n\n        dataSourceTileList.forEach(renderListEntry => {\n            for (const tile of renderListEntry.renderedTiles.values()) {\n                numTextElementsInScene += tile.textElementGroups.count();\n            }\n        });\n        const newOverloaded = numTextElementsInScene > OVERLOAD_LABEL_LIMIT;\n\n        if (newOverloaded && !this.m_overloaded) {\n            logger.debug(\"Overloaded Mode enabled.\");\n        }\n        this.m_overloaded = newOverloaded;\n        return this.m_overloaded;\n    }\n\n    /**\n     * Project point to screen and check if it is on screen or within a fixed distance to the\n     * border.\n     *\n     * @param point center point of label.\n     * @param outPoint projected screen point of label.\n     */\n    private labelPotentiallyVisible(point: Vector3Like, outPoint: THREE.Vector2): boolean {\n        const maxDistance = THREE.MathUtils.clamp(this.m_options.maxPoiDistanceToBorder ?? 0, 0, 1);\n        const projectionResult = this.m_screenProjector.projectAreaToScreen(\n            point,\n            maxDistance,\n            maxDistance,\n            outPoint\n        );\n        return projectionResult !== undefined;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Maximum distance for text labels expressed as a ratio of distance to from the camera (0) to the\n * far plane (1.0). May be synchronized with fog value ?\n */\nconst DEFAULT_MAX_DISTANCE_RATIO_FOR_LABELS = 0.99;\n\n/**\n * Minimum scaling factor that may be applied to labels when their are distant from focus point.\n */\nconst DEFAULT_LABEL_DISTANCE_SCALE_MIN = 0.7;\n\n/**\n * Maximum scaling factor that may be applied to labels due to their distance from focus point.\n */\nconst DEFAULT_LABEL_DISTANCE_SCALE_MAX = 1.5;\n\n// Allowed distance to screen border for early rejection of POIs during placement. Its range is\n// [0..1] of screen size.\n// A value of 0 will lead to POI labels popping in at the border of the screen. A large value will\n// lead to many labels being placed outside the screen, with all the required actions for measuring\n// and loading glyphs impacting performance.\nconst DEFAULT_MAX_DISTANCE_TO_BORDER = 0.2;\n\nconst MIN_GLYPH_COUNT = 1024;\n\nconst MAX_GLYPH_COUNT = 32768;\n\nexport interface TextElementsRendererOptions {\n    /**\n     * The path to the font catalog file.\n     */\n    fontCatalog?: string;\n    /**\n     * Optional initial number of glyphs (characters) for labels. In situations with limited,\n     * available memory, decreasing this number may be beneficial.\n     *\n     * @default [[MIN_GLYPH_COUNT]]\n     */\n    minNumGlyphs?: number;\n    /**\n     * Optional limit of number of glyphs (characters) for labels. In situations with limited,\n     * available memory, decreasing this number may be beneficial.\n     *\n     * @default [[MAX_GLYPH_COUNT]]\n     */\n    maxNumGlyphs?: number;\n    /**\n     * Limits the number of {@link DataSource} labels visible, such as road names and POIs.\n     * On small devices, you can reduce this number to to increase performance.\n     * @default `undefined` (no limit).\n     */\n    maxNumVisibleLabels?: number;\n    /**\n     * The maximum distance for {@link TextElement} to be rendered, expressed as a fraction of\n     * the distance between the near and far plane [0, 1.0].\n     * @default [[DEFAULT_MAX_DISTANCE_RATIO_FOR_LABELS]].\n     */\n    maxDistanceRatioForTextLabels?: number;\n    /**\n     * The maximum distance for {@link TextElement} with icons to be rendered,\n     * expressed as a fraction of the distance\n     * between the near and far plane [0, 1.0].\n     * @default [[DEFAULT_MAX_DISTANCE_RATIO_FOR_LABELS]].\n     */\n    maxDistanceRatioForPoiLabels?: number;\n    /**\n     * The minimum scaling factor that may be applied to {@link TextElement}s due to their distance.\n     * If not defined the default value specified in {@link TextElementsRenderer} will be used.\n     * @default [[DEFAULT_LABEL_DISTANCE_SCALE_MIN]].\n     */\n    labelDistanceScaleMin?: number;\n    /**\n     * The maximum scaling factor that may be applied to {@link TextElement}s due to their distance.\n     * If not defined the default value specified in {@link TextElementsRenderer} will be used.\n     * @default [[DEFAULT_LABEL_DISTANCE_SCALE_MAX]].\n     */\n    labelDistanceScaleMax?: number;\n\n    /**\n     * Disable all fading animations for debugging and performance measurement.\n     * @default `false`\n     */\n    disableFading?: boolean;\n\n    /**\n     * Enable that new labels are delayed until movement is finished\n     * @default `true`\n     */\n    delayLabelsUntilMovementFinished?: boolean;\n\n    /**\n     * If `true`, a replacement glyph (\"?\") is rendered for every missing glyph.\n     * @default `false`\n     */\n    showReplacementGlyphs?: boolean;\n\n    /**\n     * The maximum distance to the screen border as a fraction of screen size [0..1].\n     * @default [[DEFAULT_MAX_DISTANCE_TO_BORDER]].\n     */\n    maxPoiDistanceToBorder?: number;\n\n    /**\n     * An optional canvas element that renders 2D collision debug information.\n     */\n    collisionDebugCanvas?: HTMLCanvasElement;\n}\n\n/**\n * Initializes undefined text renderer options to default values.\n * @param options - The options to be initialized.\n */\nexport function initializeDefaultOptions(options: TextElementsRendererOptions) {\n    if (options.minNumGlyphs === undefined) {\n        options.minNumGlyphs = MIN_GLYPH_COUNT;\n    }\n    if (options.maxNumGlyphs === undefined) {\n        options.maxNumGlyphs = MAX_GLYPH_COUNT;\n    }\n    if (options.labelDistanceScaleMin === undefined) {\n        options.labelDistanceScaleMin = DEFAULT_LABEL_DISTANCE_SCALE_MIN;\n    }\n    if (options.labelDistanceScaleMax === undefined) {\n        options.labelDistanceScaleMax = DEFAULT_LABEL_DISTANCE_SCALE_MAX;\n    }\n    if (options.maxDistanceRatioForTextLabels === undefined) {\n        options.maxDistanceRatioForTextLabels = DEFAULT_MAX_DISTANCE_RATIO_FOR_LABELS;\n    }\n    if (options.maxDistanceRatioForPoiLabels === undefined) {\n        options.maxDistanceRatioForPoiLabels = DEFAULT_MAX_DISTANCE_RATIO_FOR_LABELS;\n    }\n\n    if (options.disableFading === undefined) {\n        options.disableFading = false;\n    }\n\n    if (options.delayLabelsUntilMovementFinished === undefined) {\n        options.delayLabelsUntilMovementFinished = true;\n    }\n\n    if (options.showReplacementGlyphs === undefined) {\n        options.showReplacementGlyphs = false;\n    }\n\n    if (options.maxPoiDistanceToBorder === undefined) {\n        options.maxPoiDistanceToBorder = DEFAULT_MAX_DISTANCE_TO_BORDER;\n    }\n}\n","/*\n * Copyright (C) 2018-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    ColorUtils,\n    getPropertyValue,\n    isPoiTechnique,\n    LineMarkerTechnique,\n    MapEnv,\n    PlacementToken,\n    PoiTechnique,\n    TextStyleDefinition,\n    TextTechnique\n} from \"@here/harp-datasource-protocol\";\nimport {\n    DefaultTextStyle,\n    FontStyle,\n    FontUnit,\n    FontVariant,\n    HorizontalAlignment,\n    HorizontalPlacement,\n    resolvePlacementAndAlignment,\n    TextCanvas,\n    TextLayoutParameters,\n    TextLayoutStyle,\n    TextPlacement,\n    TextPlacements,\n    TextRenderParameters,\n    TextRenderStyle,\n    VerticalAlignment,\n    VerticalPlacement,\n    WrappingMode\n} from \"@here/harp-text-canvas\";\nimport { getOptionValue, LoggerManager } from \"@here/harp-utils\";\n\nimport { ColorCache } from \"../ColorCache\";\nimport { evaluateColorProperty } from \"../DecodedTileHelpers\";\nimport { Tile } from \"../Tile\";\nimport { DEFAULT_FONT_CATALOG_NAME, TextCanvases } from \"./TextElementsRenderer\";\n\nconst logger = LoggerManager.instance.create(\"TextStyleCache\");\n\nconst defaultTextRenderStyle = new TextRenderStyle({\n    fontSize: {\n        unit: FontUnit.Pixel,\n        size: 32,\n        backgroundSize: 8\n    },\n    color: ColorCache.instance.getColor(\"#6d7477\"),\n    opacity: 1.0,\n    backgroundColor: ColorCache.instance.getColor(\"#f7fbfd\"),\n    backgroundOpacity: 0.5\n});\n\n// By default text layout provides no options for placement, but single alignment.\nconst defaultTextLayoutStyle = new TextLayoutStyle({\n    verticalAlignment: VerticalAlignment.Center,\n    horizontalAlignment: HorizontalAlignment.Center,\n    placements: []\n});\n\nconst DEFAULT_STYLE_NAME = \"default\";\n\n/**\n * {@link TextElementsRenderer} representation of a\n * {@link @here/harp-datasource-protocol#Theme}'s TextStyle.\n */\nexport interface TextElementStyle {\n    name: string;\n    fontCatalog?: string;\n    renderParams: TextRenderParameters;\n    layoutParams: TextLayoutParameters;\n    textCanvas?: TextCanvas;\n}\n\nexport class TextStyleCache {\n    private readonly m_textStyles: Map<string, TextElementStyle> = new Map();\n    private m_defaultStyle: TextElementStyle = {\n        name: DEFAULT_STYLE_NAME,\n        fontCatalog: undefined,\n        renderParams: defaultTextRenderStyle.params,\n        layoutParams: defaultTextLayoutStyle.params\n    };\n\n    constructor() {\n        this.updateDefaultTextStyle();\n    }\n\n    updateTextStyles(\n        textStyleDefinitions?: TextStyleDefinition[],\n        defaultTextStyleDefinition?: TextStyleDefinition\n    ) {\n        this.m_textStyles.clear();\n        textStyleDefinitions?.forEach(element => {\n            this.m_textStyles.set(\n                element.name!,\n                this.createTextElementStyle(element, element.name!)\n            );\n        });\n        this.updateDefaultTextStyle(defaultTextStyleDefinition, textStyleDefinitions);\n    }\n\n    updateTextCanvases(textCanvases: TextCanvases) {\n        // Initialize default text style.\n        this.initializeTextCanvas(this.m_defaultStyle, textCanvases);\n\n        for (const [, style] of this.m_textStyles) {\n            this.initializeTextCanvas(style, textCanvases);\n        }\n    }\n\n    /**\n     * Retrieves a {@link TextElementStyle} for {@link @here/harp-datasource-protocol#Theme}'s\n     * [[TextStyle]] id.\n     */\n    getTextElementStyle(styleId?: string): TextElementStyle {\n        let result;\n        if (styleId === undefined) {\n            result = this.m_defaultStyle;\n        } else {\n            result = this.m_textStyles.get(styleId);\n            if (result === undefined) {\n                result = this.m_defaultStyle;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Gets the appropriate {@link @here/harp-text-canvas#TextRenderStyle}\n     * to use for a label. Depends heavily on the label's\n     * [[Technique]] and the current zoomLevel.\n     */\n    createRenderStyle(\n        tile: Tile,\n        technique: TextTechnique | PoiTechnique | LineMarkerTechnique\n    ): TextRenderStyle {\n        const mapView = tile.mapView;\n        const zoomLevel = mapView.zoomLevel;\n        const discreteZoomLevel = Math.floor(zoomLevel);\n\n        // Environment with $zoom forced to integer to achieve stable interpolated values.\n        const discreteZoomEnv = new MapEnv({ $zoom: discreteZoomLevel }, mapView.env);\n\n        const defaultRenderParams = this.m_defaultStyle.renderParams;\n\n        // Sets opacity to 1.0 if default and technique attribute are undefined.\n        const defaultOpacity = getOptionValue(defaultRenderParams.opacity, 1.0);\n        // Interpolate opacity but only on discreet zoom levels (step interpolation).\n        let opacity = getPropertyValue(\n            getOptionValue(technique.opacity, defaultOpacity),\n            discreteZoomEnv\n        );\n\n        let color: THREE.Color | undefined;\n        // Store color (RGB) in cache and multiply opacity value with the color alpha channel.\n        if (technique.color !== undefined) {\n            let hexColor = evaluateColorProperty(technique.color, discreteZoomEnv);\n            if (hexColor !== undefined) {\n                if (ColorUtils.hasAlphaInHex(hexColor)) {\n                    const alpha = ColorUtils.getAlphaFromHex(hexColor);\n                    opacity = opacity * alpha;\n                    hexColor = ColorUtils.removeAlphaFromHex(hexColor);\n                }\n                color = ColorCache.instance.getColor(hexColor);\n            }\n        }\n\n        // Sets background size to 0.0 if default and technique attribute is undefined.\n        const defaultBackgroundSize = getOptionValue(\n            defaultRenderParams.fontSize!.backgroundSize,\n            0\n        );\n        const backgroundSize = getPropertyValue(\n            getOptionValue(technique.backgroundSize, defaultBackgroundSize),\n            discreteZoomEnv\n        );\n\n        const hasBackgroundDefined =\n            technique.backgroundColor !== undefined &&\n            technique.backgroundSize !== undefined &&\n            backgroundSize > 0;\n\n        // Sets background opacity to 1.0 if default and technique value is undefined while\n        // background size and color is specified, otherwise set value in default render\n        // params or 0.0 if neither set. Makes label opaque when backgroundColor and\n        // backgroundSize are set.\n        const defaultBackgroundOpacity = getOptionValue(defaultRenderParams.backgroundOpacity, 0.0);\n        let backgroundOpacity = getPropertyValue(\n            getOptionValue(\n                technique.backgroundOpacity,\n                hasBackgroundDefined ? 1.0 : defaultBackgroundOpacity\n            ),\n            discreteZoomEnv\n        );\n\n        let backgroundColor: THREE.Color | undefined;\n        // Store background color (RGB) in cache and multiply backgroundOpacity by its alpha.\n        if (technique.backgroundColor !== undefined) {\n            let hexBgColor = evaluateColorProperty(technique.backgroundColor, discreteZoomEnv);\n            if (hexBgColor !== undefined) {\n                if (ColorUtils.hasAlphaInHex(hexBgColor)) {\n                    const alpha = ColorUtils.getAlphaFromHex(hexBgColor);\n                    backgroundOpacity = backgroundOpacity * alpha;\n                    hexBgColor = ColorUtils.removeAlphaFromHex(hexBgColor);\n                }\n                backgroundColor = ColorCache.instance.getColor(hexBgColor);\n            }\n        }\n\n        const renderParams = {\n            fontName: getOptionValue(technique.fontName, defaultRenderParams.fontName),\n            fontSize: {\n                unit: FontUnit.Pixel,\n                size: getPropertyValue(\n                    getOptionValue(technique.size, defaultRenderParams.fontSize!.size),\n                    discreteZoomEnv\n                ),\n                backgroundSize\n            },\n            fontStyle:\n                technique.fontStyle === \"Regular\" ||\n                technique.fontStyle === \"Bold\" ||\n                technique.fontStyle === \"Italic\" ||\n                technique.fontStyle === \"BoldItalic\"\n                    ? FontStyle[technique.fontStyle]\n                    : defaultRenderParams.fontStyle,\n            fontVariant:\n                technique.fontVariant === \"Regular\" ||\n                technique.fontVariant === \"AllCaps\" ||\n                technique.fontVariant === \"SmallCaps\"\n                    ? FontVariant[technique.fontVariant]\n                    : defaultRenderParams.fontVariant,\n            rotation: getOptionValue(technique.rotation, defaultRenderParams.rotation),\n            color: getOptionValue(\n                color,\n                getOptionValue(defaultRenderParams.color, DefaultTextStyle.DEFAULT_COLOR)\n            ),\n            backgroundColor: getOptionValue(\n                backgroundColor,\n                getOptionValue(\n                    defaultRenderParams.backgroundColor,\n                    DefaultTextStyle.DEFAULT_BACKGROUND_COLOR\n                )\n            ),\n            opacity,\n            backgroundOpacity\n        };\n\n        const themeRenderParams = this.getTextElementStyle(technique.style).renderParams;\n        const renderStyle = new TextRenderStyle({\n            ...themeRenderParams,\n            ...renderParams\n        });\n\n        return renderStyle;\n    }\n\n    /**\n     * Create the appropriate {@link @here/harp-text-canvas#TextLayoutStyle}\n     * to use for a label. Depends heavily on the label's\n     * [[Technique]] and the current zoomLevel.\n     *\n     * @param tile - The {@link Tile} to process.\n     * @param technique - Label's technique.\n     */\n    createLayoutStyle(\n        tile: Tile,\n        technique: TextTechnique | PoiTechnique | LineMarkerTechnique\n    ): TextLayoutStyle {\n        const mapView = tile.mapView;\n        const floorZoomLevel = Math.floor(tile.mapView.zoomLevel);\n\n        const discreteZoomEnv = new MapEnv({ $zoom: floorZoomLevel }, mapView.env);\n\n        const defaultLayoutParams = this.m_defaultStyle.layoutParams;\n\n        const hAlignment = getPropertyValue(technique.hAlignment, discreteZoomEnv) as string | null;\n        const vAlignment = getPropertyValue(technique.vAlignment, discreteZoomEnv) as string | null;\n\n        // Text alternative placements are currently supported only for PoiTechnique.\n        const textPlacements = isPoiTechnique(technique)\n            ? (getPropertyValue((technique as PoiTechnique).placements, discreteZoomEnv) as\n                  | string\n                  | null)\n            : null;\n\n        const { horizontalAlignment, verticalAlignment, placements } = parseAlignmentAndPlacements(\n            hAlignment,\n            vAlignment,\n            textPlacements\n        );\n\n        const wrapping = getPropertyValue(technique.wrappingMode, discreteZoomEnv) as string | null;\n\n        const wrappingMode =\n            wrapping === \"None\" || wrapping === \"Character\" || wrapping === \"Word\"\n                ? WrappingMode[wrapping]\n                : defaultLayoutParams.wrappingMode;\n\n        const layoutParams = {\n            tracking:\n                getPropertyValue(technique.tracking, discreteZoomEnv) ??\n                defaultLayoutParams.tracking,\n            leading:\n                getPropertyValue(technique.leading, discreteZoomEnv) ?? defaultLayoutParams.leading,\n            maxLines:\n                getPropertyValue(technique.maxLines, discreteZoomEnv) ??\n                defaultLayoutParams.maxLines,\n            lineWidth:\n                getPropertyValue(technique.lineWidth, discreteZoomEnv) ??\n                defaultLayoutParams.lineWidth,\n            canvasRotation:\n                getPropertyValue(technique.canvasRotation, discreteZoomEnv) ??\n                defaultLayoutParams.canvasRotation,\n            lineRotation:\n                getPropertyValue(technique.lineRotation, discreteZoomEnv) ??\n                defaultLayoutParams.lineRotation,\n            wrappingMode,\n            horizontalAlignment,\n            verticalAlignment,\n            placements\n        };\n\n        const themeLayoutParams = this.getTextElementStyle(technique.style);\n        const layoutStyle = new TextLayoutStyle({\n            ...themeLayoutParams,\n            ...layoutParams\n        });\n\n        return layoutStyle;\n    }\n\n    private updateDefaultTextStyle(\n        defaultTextStyleDefinition?: TextStyleDefinition,\n        textStyleDefinitions?: TextStyleDefinition[]\n    ) {\n        this.m_defaultStyle.fontCatalog = undefined;\n\n        const style =\n            textStyleDefinitions?.find(definition => {\n                return definition.name === DEFAULT_STYLE_NAME;\n            }) ??\n            defaultTextStyleDefinition ??\n            textStyleDefinitions?.[0];\n        if (style) {\n            this.m_defaultStyle = this.createTextElementStyle(style, DEFAULT_STYLE_NAME);\n        }\n        this.m_defaultStyle.textCanvas = undefined;\n    }\n\n    private initializeTextCanvas(style: TextElementStyle, textCanvases: TextCanvases): void {\n        if (style.textCanvas) {\n            return;\n        }\n        if (style.fontCatalog !== undefined) {\n            const styledTextCanvas = textCanvases.get(style.fontCatalog);\n            style.textCanvas = styledTextCanvas;\n            if (textCanvases.has(style.fontCatalog) && !styledTextCanvas) {\n                logger.info(`fontCatalog(${style.fontCatalog}), not yet loaded`);\n                return;\n            }\n        }\n        // specified canvas not found\n        if (style.textCanvas === undefined) {\n            if (\n                style.fontCatalog !== undefined &&\n                style.fontCatalog !== DEFAULT_FONT_CATALOG_NAME\n            ) {\n                logger.warn(\n                    `FontCatalog '${style.fontCatalog}' set in TextStyle\n                     '${style.name}' not found`\n                );\n            }\n\n            // find another canvas to use then\n            let alternativeTextCanvas = textCanvases.get(DEFAULT_FONT_CATALOG_NAME);\n            if (!alternativeTextCanvas && textCanvases.size > 0) {\n                for (const [, canvas] of textCanvases) {\n                    if (canvas) {\n                        alternativeTextCanvas = canvas;\n                        break;\n                    }\n                }\n            }\n\n            // if an alternative canvas is found, use it\n            if (alternativeTextCanvas) {\n                style.textCanvas = alternativeTextCanvas;\n                if (style.fontCatalog !== undefined) {\n                    logger.info(\n                        `fontCatalog: '${style.fontCatalog}' not found,\n                      using default fontCatalog(${style.textCanvas?.name}).`\n                    );\n                }\n            }\n        }\n    }\n\n    private createTextElementStyle(\n        style: TextStyleDefinition,\n        styleName: string\n    ): TextElementStyle {\n        const { horizontalAlignment, verticalAlignment, placements } = parseAlignmentAndPlacements(\n            style.hAlignment,\n            style.vAlignment,\n            style.placements\n        );\n        return {\n            name: styleName,\n            fontCatalog: getOptionValue(style.fontCatalogName, this.m_defaultStyle.fontCatalog),\n            renderParams: {\n                fontName: style.fontName,\n                fontSize: {\n                    unit: FontUnit.Pixel,\n                    size: 32,\n                    backgroundSize: style.backgroundSize ?? 8\n                },\n                fontStyle:\n                    style.fontStyle === \"Regular\" ||\n                    style.fontStyle === \"Bold\" ||\n                    style.fontStyle === \"Italic\" ||\n                    style.fontStyle === \"BoldItalic\"\n                        ? FontStyle[style.fontStyle]\n                        : undefined,\n                fontVariant:\n                    style.fontVariant === \"Regular\" ||\n                    style.fontVariant === \"AllCaps\" ||\n                    style.fontVariant === \"SmallCaps\"\n                        ? FontVariant[style.fontVariant]\n                        : undefined,\n                rotation: style.rotation,\n                color:\n                    style.color !== undefined\n                        ? ColorCache.instance.getColor(style.color)\n                        : undefined,\n                backgroundColor:\n                    style.backgroundColor !== undefined\n                        ? ColorCache.instance.getColor(style.backgroundColor)\n                        : undefined,\n                opacity: style.opacity,\n                backgroundOpacity: style.backgroundOpacity\n            },\n            layoutParams: {\n                tracking: style.tracking,\n                leading: style.leading,\n                maxLines: style.maxLines,\n                lineWidth: style.lineWidth,\n                canvasRotation: style.canvasRotation,\n                lineRotation: style.lineRotation,\n                wrappingMode:\n                    style.wrappingMode === \"None\" ||\n                    style.wrappingMode === \"Character\" ||\n                    style.wrappingMode === \"Word\"\n                        ? WrappingMode[style.wrappingMode]\n                        : WrappingMode.Word,\n                verticalAlignment,\n                horizontalAlignment,\n                placements\n            }\n        };\n    }\n}\n\nfunction parseAlignmentAndPlacements(\n    hAlignment: string | null | undefined,\n    vAlignment: string | null | undefined,\n    placementsTokens: string | null | undefined\n): {\n    horizontalAlignment: HorizontalAlignment;\n    verticalAlignment: VerticalAlignment;\n    placements: TextPlacements;\n} {\n    // Currently supported only for PoiTechnique.\n    const placements: TextPlacements | undefined = placementsTokens\n        ? parseTechniquePlacements(placementsTokens)\n        : undefined;\n\n    return resolvePlacementAndAlignment(\n        parseTechniqueHAlignValue(hAlignment),\n        parseTechniqueVAlignValue(vAlignment),\n        placements\n    );\n}\n\nfunction parseTechniqueHAlignValue(hAlignment: string | undefined | null): HorizontalAlignment {\n    return hAlignment === \"Left\" || hAlignment === \"Center\" || hAlignment === \"Right\"\n        ? HorizontalAlignment[hAlignment]\n        : defaultTextLayoutStyle.horizontalAlignment;\n}\n\nfunction parseTechniqueVAlignValue(vAlignment: string | undefined | null): VerticalAlignment {\n    return vAlignment === \"Above\" || vAlignment === \"Center\" || vAlignment === \"Below\"\n        ? VerticalAlignment[vAlignment]\n        : defaultTextLayoutStyle.verticalAlignment;\n}\n\nfunction parseTechniquePlacements(placementsString: string | undefined | null): TextPlacements {\n    // Parse placement properties if available.\n    const placements: TextPlacements = [];\n    const placementsTokens = placementsString\n        ? placementsString!.toUpperCase().replace(\" \", \"\").split(\",\")\n        : [];\n    placementsTokens.forEach(p => {\n        const val = parseTechniquePlacementValue(p);\n        if (val !== undefined) {\n            placements.push(val);\n        }\n    });\n    return placements;\n}\n\nfunction parseTechniquePlacementValue(p: string): TextPlacement | undefined {\n    // May be only literal of single or two characters.\n    if (p.length < 1 || p.length > 2) {\n        return undefined;\n    }\n    // If no value is specified for vertical/horizontal placement it is by default center.\n    const textPlacement: TextPlacement = {\n        h: HorizontalPlacement.Center,\n        v: VerticalPlacement.Center\n    };\n    // Firstly try to find vertical placement.\n    let modifier = p.charAt(0);\n    let found: boolean = true;\n    switch (modifier) {\n        // Top / north\n        case PlacementToken.Top:\n        case PlacementToken.North:\n            textPlacement.v = VerticalPlacement.Top;\n            break;\n        // Bottom / south\n        case PlacementToken.Bottom:\n        case PlacementToken.South:\n            textPlacement.v = VerticalPlacement.Bottom;\n            break;\n        default:\n            found = false;\n            if (p.length === 2) {\n                // For 2 characters tag both vertical/horizontal should be defined.\n                return undefined;\n            }\n    }\n    if (found && p.length === 1) {\n        return textPlacement;\n    }\n    modifier = p.length === 1 ? p.charAt(0) : p.charAt(1);\n    switch (modifier) {\n        // Right / east\n        case PlacementToken.Right:\n        case PlacementToken.East:\n            textPlacement.h = HorizontalPlacement.Right;\n            break;\n        // Left / west\n        case PlacementToken.Left:\n        case PlacementToken.West:\n            textPlacement.h = HorizontalPlacement.Left;\n            break;\n        default:\n            // Either for single character or multi-char tag, we must surrender.\n            return undefined;\n    }\n    return textPlacement;\n}\n","/*\n * Copyright (C) 2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    IndexedTechniqueParams,\n    LineMarkerTechnique,\n    PoiTechnique,\n    TextTechnique\n} from \"@here/harp-datasource-protocol\";\nimport { TextLayoutStyle, TextRenderStyle } from \"@here/harp-text-canvas\";\n\nimport { Tile } from \"../Tile\";\n\nexport class TileTextStyleCache {\n    private textRenderStyles: TextRenderStyle[] = [];\n    private textLayoutStyles: TextLayoutStyle[] = [];\n    private readonly tile: Tile;\n\n    constructor(tile: Tile) {\n        this.tile = tile;\n    }\n\n    clear() {\n        this.textRenderStyles.length = 0;\n        this.textLayoutStyles.length = 0;\n    }\n\n    getRenderStyle(\n        technique: (TextTechnique | PoiTechnique | LineMarkerTechnique) & IndexedTechniqueParams\n    ): TextRenderStyle {\n        let style = this.textRenderStyles[technique._index];\n        if (style === undefined) {\n            style = this.textRenderStyles[\n                technique._index\n            ] = this.tile.mapView.textElementsRenderer.styleCache.createRenderStyle(\n                this.tile,\n                technique\n            );\n        }\n        return style;\n    }\n\n    getLayoutStyle(\n        technique: (TextTechnique | PoiTechnique | LineMarkerTechnique) & IndexedTechniqueParams\n    ): TextLayoutStyle {\n        let style = this.textLayoutStyles[technique._index];\n        if (style === undefined) {\n            style = this.textLayoutStyles[\n                technique._index\n            ] = this.tile.mapView.textElementsRenderer.styleCache.createLayoutStyle(\n                this.tile,\n                technique\n            );\n        }\n        return style;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"@here/harp-utils\";\n\nimport { PrePlacementResult } from \"./Placement\";\n\nexport class UpdateStats {\n    tiles: number = 0;\n    totalGroups: number = 0;\n    newGroups: number = 0;\n    totalLabels: number = 0;\n    results = new Array<number>(PrePlacementResult.Count);\n\n    constructor(private readonly m_logger: IChannel) {\n        this.results.fill(0);\n    }\n\n    clear() {\n        this.tiles = 0;\n        this.totalGroups = 0;\n        this.newGroups = 0;\n        this.totalLabels = 0;\n        this.results.fill(0);\n    }\n\n    log() {\n        this.m_logger.debug(\"Tiles\", this.tiles);\n        this.m_logger.debug(\"Total groups\", this.totalGroups);\n        this.m_logger.debug(\"New groups\", this.newGroups);\n        this.m_logger.debug(\"Total labels\", this.totalLabels);\n        this.m_logger.debug(\"Placed labels\", this.results[PrePlacementResult.Ok]);\n        this.m_logger.debug(\"Invisible\", this.results[PrePlacementResult.Invisible]);\n        this.m_logger.debug(\"Poi not ready\", this.results[PrePlacementResult.NotReady]);\n        this.m_logger.debug(\"Too far\", this.results[PrePlacementResult.TooFar]);\n        this.m_logger.debug(\"Duplicate\", this.results[PrePlacementResult.Duplicate]);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Message sent by web worker that requests to resolve actual\n * URLs of it's dependencies.\n *\n * Main thread is expected.\n */\nexport interface WorkerBootstrapRequest {\n    type: \"worker-bootstrap-request\";\n\n    /// Names of dependencies, usually NPM package names.\n    dependencies: string[];\n}\n\nexport interface WorkerBootstrapResponse {\n    type: \"worker-bootstrap-response\";\n\n    /// Actual URL scripts requested in [[WorkerBootstrapRequest]].\n    resolvedDependencies: string[];\n}\n\nexport function isWorkerBootstrapRequest(message: any): message is WorkerBootstrapRequest {\n    return (\n        message &&\n        message.type === \"worker-bootstrap-request\" &&\n        Array.isArray(message.dependencies)\n    );\n}\n\nexport function isWorkerBootstrapResponse(message: any): message is WorkerBootstrapResponse {\n    return (\n        message &&\n        message.type === \"worker-bootstrap-response\" &&\n        Array.isArray(message.resolvedDependencies)\n    );\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport \"@here/harp-fetch\";\n\nimport { getUrlOrigin, LoggerManager } from \"@here/harp-utils\";\n\nimport { isWorkerBootstrapRequest, WorkerBootstrapResponse } from \"./WorkerBootstrapDefs\";\n\nconst logger = LoggerManager.instance.create(\"WorkerLoader\");\n\n/**\n * Set of `Worker` loading and initialization helpers:\n *  - starting Worker from URL with fallback to XHR+blob {@link WorkerLoader.startWorker}\n *  - waiting for proper worker initialization, see {@link WorkerLoader.waitWorkerInitialized}\n */\nexport class WorkerLoader {\n    static directlyFallbackToBlobBasedLoading: boolean = false;\n    static sourceLoaderCache = new Map<string, Promise<string>>();\n    static dependencyUrlMapping: { [name: string]: string } = {};\n\n    /**\n     * Starts worker by first attempting load from `scriptUrl` using native `Worker` constructor.\n     * Then waits (using [[waitWorkerInitialized]]) for first message that indicates successful\n     * initialization.\n     * If `scriptUrl`'s origin is different than `baseUrl`, then in case of error falls back to\n     * [[startWorkerBlob]].\n     *\n     * We must resolve/reject promise at some time, so it is expected that any sane application will\n     * be able to load worker code in some amount of time.\n     * By default, this method timeouts after 10 seconds (configurable using `timeout` argument).\n     *\n     * This method is needed as browsers in general forbid to load worker if it's not on 'same\n     * origin' regardless of Content-Security-Policy.\n     *\n     * For blob-based fallback work, one need to ensure that Content Security Policy (CSP) allows\n     * loading web worker code from `Blob`s. By default browsers, allow 'blob:' for workers, but\n     * this may change.\n     *\n     * Following snippet setups CSP, so workers can be started from blob urls:\n     *\n     *     <head>\n     *         <meta http-equiv=\"Content-Security-Policy\" content=\"child-src blob:\">\n     *     </head>\n     *\n     * Tested on:\n     *   * Chrome 67 / Linux, Window, OSX, Android\n     *   * Firefox 60 / Linux, Windows, OSX\n     *   * Edge 41 / Windows\n     *   * Safari 11 / OSX\n     *   * Samsung Internet 7.2\n     *\n     * See\n     *  * https://benohead.com/cross-domain-cross-browser-web-workers/\n     *  * MapBox\n     *    * https://stackoverflow.com/questions/21913673/execute-web-worker-from-different-origin\n     *    * https://github.com/mapbox/mapbox-gl-js/issues/2658\n     *    * https://github.com/mapbox/mapbox-gl-js/issues/559\n     *    * https://github.com/mapbox/mapbox-gl-js/issues/6058\n     *\n     * Findings:\n     *\n     * * Chrome reports CSP by exception when constructing [[Worker]] instance.\n     * * Firefox reports CSP errors when loading in first event:\n     *   https://bugzilla.mozilla.org/show_bug.cgi?id=1241888\n     * * Firefox 62, Chrome 67 obeys `<meta http-equiv=\"Content-Security-Policy\">` with\n     *   `worker-src blob:` but doesn't obey `worker-src URL` when used\n     * * Chrome 67 doesn't obey CSP `worker-src URL` despite it's documented as supported\n     *   (https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Security-Policy/worker-src)\n     *\n     * @param scriptUrl - web worker script URL\n     * @param timeout - timeout in milliseconds, in which worker should set initial message\n     *    (default 10 seconds)\n     */\n    static startWorker(scriptUrl: string, timeout: number = 10000): Promise<Worker> {\n        if (scriptUrl.startsWith(\"blob:\")) {\n            return this.startWorkerImmediately(scriptUrl, timeout);\n        }\n\n        if (this.directlyFallbackToBlobBasedLoading) {\n            return this.startWorkerBlob(scriptUrl, timeout);\n        }\n        return this.startWorkerImmediately(scriptUrl, timeout).catch(error => {\n            if (typeof window !== \"undefined\") {\n                const pageUrl = window.location.href;\n                const fullScriptUrl = new URL(scriptUrl, pageUrl).href;\n                if (getUrlOrigin(fullScriptUrl) === getUrlOrigin(pageUrl)) {\n                    throw error;\n                }\n                logger.log(\n                    \"#startWorker: cross-origin worker construction failed, trying load with blob\"\n                );\n                this.directlyFallbackToBlobBasedLoading = true;\n                return WorkerLoader.startWorkerBlob(scriptUrl, timeout);\n            } else {\n                throw error;\n            }\n        });\n    }\n\n    /**\n     * Start worker, loading it immediately from `scriptUrl`. Waits (using\n     * [[waitWorkerInitialized]]) for successful worker start.\n     *\n     * @param scriptUrl - web worker script URL\n     */\n    static startWorkerImmediately(scriptUrl: string, timeout: number): Promise<Worker> {\n        try {\n            const worker = new Worker(scriptUrl);\n            return this.waitWorkerInitialized(worker, timeout);\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    }\n\n    /**\n     * Start worker \"via blob\" by first loading worker script code with [[fetch]], creating `Blob`\n     * and attempting to start worker from blob url. Waits (using [[waitWorkerInitialized]]) for\n     * successful worker start.\n     *\n     * @param scriptUrl - web worker script URL\n     */\n    static startWorkerBlob(scriptUrl: string, timeout: number): Promise<Worker> {\n        return this.fetchScriptSourceToBlobUrl(scriptUrl).then(blobUrl => {\n            return this.startWorkerImmediately(blobUrl, timeout);\n        });\n    }\n\n    /**\n     * Fetch script source as `Blob` url.\n     *\n     * Reuses results, if there are many simultaneous requests.\n     *\n     * @param scriptUrl - web worker script URL\n     * @return promise that resolves to url of a `Blob` with script source code\n     */\n    static fetchScriptSourceToBlobUrl(scriptUrl: string): Promise<string> {\n        let loadingPromise = this.sourceLoaderCache.get(scriptUrl);\n        if (loadingPromise !== undefined) {\n            return loadingPromise;\n        }\n        loadingPromise = fetch(scriptUrl)\n            .then(response => response.text())\n            .catch(error => {\n                throw new Error(\n                    `WorkerLoader#fetchScriptSourceToBlob: failed to load worker script: ${error}`\n                );\n            })\n            .then(scriptSource => {\n                this.sourceLoaderCache.delete(scriptUrl);\n                const blob = new Blob([scriptSource], { type: \"application/javascript\" });\n                return URL.createObjectURL(blob);\n            });\n        this.sourceLoaderCache.set(scriptUrl, loadingPromise);\n        return loadingPromise;\n    }\n\n    /**\n     * Waits for successful Web Worker start.\n     *\n     * Expects that worker script sends initial message.\n     *\n     * If first event is `message` then assumes that worker has been loaded sussesfully and promise\n     * resolves to `worker` object passed as argument.\n     *\n     * If first event is 'error', then it is assumed that worker failed to load and promise is\n     * rejected.\n     *\n     * (NOTE: The initial 'message' - if received - is immediately replayed using worker's\n     * `dispatchEvent`, so application code can also consume it as confirmation of successful\n     * worker initialization.\n     *\n     * We must resolve/reject promise at some time, so it is expected that any sane application will\n     * be able to load worker code in some amount of time.\n     *\n     * @param worker - [[Worker]] instance to be checked\n     * @param timeout - timeout in milliseconds, in which worker should set initial message\n     * @returns `Promise` that resolves to `worker` on success\n     */\n    static waitWorkerInitialized(worker: Worker, timeout: number): Promise<Worker> {\n        return new Promise<Worker>((resolve, reject) => {\n            const firstMessageCallback = (event: MessageEvent) => {\n                const message = event.data;\n                if (isWorkerBootstrapRequest(message)) {\n                    const dependencies = message.dependencies;\n                    const resolvedDependencies: string[] = [];\n                    for (const dependency of dependencies) {\n                        const resolved = this.dependencyUrlMapping[dependency];\n                        if (!resolved) {\n                            cleanup();\n                            reject(\n                                new Error(\n                                    `#waitWorkerInitialized: Unable to resolve '${dependency}'` +\n                                        ` as needed by worker script.`\n                                )\n                            );\n                            return;\n                        }\n                        resolvedDependencies.push(resolved);\n                    }\n                    const response: WorkerBootstrapResponse = {\n                        type: \"worker-bootstrap-response\",\n                        resolvedDependencies\n                    };\n                    worker.postMessage(response);\n                    return;\n                }\n\n                cleanup();\n                resolve(worker);\n\n                // We've just consumed first message from worker before client has any chance to\n                // even call `addEventListener` on it, so here after resolve, we wait next tick and\n                // replay message so user has chance to intercept it in its own handler.\n                setTimeout(() => {\n                    worker.dispatchEvent(event);\n                }, 0);\n            };\n            const errorCallback = (error: ErrorEvent) => {\n                cleanup();\n                // Error events do not carry any useful information on tested browsers, so we assume\n                // that any error before 'firstMessageCallback' as failed Worker initialization.\n                let message = \"Error during worker initialization\";\n                if (error.message) {\n                    message = message + `: ${error.message}`;\n                }\n                if (typeof error.filename === \"string\" && typeof error.lineno === \"number\") {\n                    message = message + ` in ${error.filename}:${error.lineno}`;\n                }\n                reject(new Error(message));\n            };\n            const cleanup = () => {\n                clearTimeout(timerId);\n                worker.removeEventListener(\"message\", firstMessageCallback);\n                worker.removeEventListener(\"error\", errorCallback);\n            };\n\n            worker.addEventListener(\"error\", errorCallback);\n            worker.addEventListener(\"message\", firstMessageCallback);\n            const timerId = setTimeout(() => {\n                cleanup();\n                reject(new Error(\"Timeout exceeded when waiting for first message from worker.\"));\n            }, timeout);\n        });\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Materials defining the appearance of map objects.\n *\n * @remarks\n *\n * @packageDocumentation\n */\n\nexport * from \"./lib/CirclePointsMaterial\";\nexport * from \"./lib/CopyMaterial\";\nexport * from \"./lib/DisplacementFeature\";\nexport * from \"./lib/EdgeMaterial\";\nexport * from \"./lib/GroundAtmosphereMaterial\";\nexport * from \"./lib/HighPrecisionLineMaterial\";\nexport * from \"./lib/HighPrecisionPointMaterial\";\nexport * from \"./lib/IconMaterial\";\nexport * from \"./lib/LuminosityHighPassShader\";\nexport * from \"./lib/MapMeshMaterialsDefs\";\nexport * from \"./lib/MapMeshMaterials\";\nexport * from \"./lib/MSAAMaterial\";\nexport * from \"./lib/RawShaderMaterial\";\nexport * from \"./lib/SepiaShader\";\nexport * from \"./lib/SkyAtmosphereMaterial\";\nexport * from \"./lib/SolidLineMaterial\";\nexport * from \"./lib/Utils\";\nexport * from \"./lib/VignetteShader\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport {\n    RawShaderMaterial,\n    RawShaderMaterialParameters,\n    RendererMaterialParameters\n} from \"./RawShaderMaterial\";\nimport { enforceBlending } from \"./Utils\";\n\nconst vertexShader: string = `\nuniform float size;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\n\nattribute vec3 position;\n\nvoid main() {\n    vec3 transformed = vec3(position);\n    vec4 mvPosition = modelViewMatrix * vec4(transformed, 1.0);\n\n    gl_Position = projectionMatrix * mvPosition;\n    gl_PointSize = size;\n}\n`;\n\nconst fragmentShader: string = `\nprecision highp float;\nprecision highp int;\n\nuniform vec3 diffuseColor;\nuniform float opacity;\n\nvoid main() {\n    float alpha = opacity;\n\n    float radius = 0.5;\n    vec2 coords = gl_PointCoord.xy - vec2(0.5);\n    float len = length(coords);\n    float falloff = fwidth(len);\n    float threshold = 1.0 - smoothstep(radius - falloff, radius, len);\n    alpha *= threshold;\n\n    gl_FragColor = vec4(diffuseColor, alpha);\n}`;\n\n/**\n * Parameters used when constructing a new {@link HighPrecisionPointMaterial}.\n */\nexport interface CirclePointsMaterialParameters\n    extends THREE.ShaderMaterialParameters,\n        RendererMaterialParameters {\n    /**\n     * Point size.\n     */\n    size?: number;\n\n    /**\n     * Point color.\n     */\n    color?: THREE.Color;\n}\n\n/**\n * Material designed to render circle points. Note that it is always transparent since the circle\n * shape is created with an alpha channel to benefit an antialising that a mere `discard` could\n * not bring.\n */\nexport class CirclePointsMaterial extends RawShaderMaterial {\n    static readonly DEFAULT_CIRCLE_SIZE = 1;\n\n    /**\n     * Constructs a new `CirclePointsMaterial`.\n     *\n     * @param parameters - The constructor's parameters. Always required except when cloning another\n     */\n    constructor(parameters?: CirclePointsMaterialParameters) {\n        const defaultColor = new THREE.Color();\n        const defaultOpacity = 1.0;\n        let sizeValue, colorValue, opacityValue;\n        let shaderParameters: RawShaderMaterialParameters | undefined;\n        if (parameters) {\n            const { size, color, opacity, ...shaderParams } = parameters;\n            sizeValue = size;\n            colorValue = color;\n            opacityValue = opacity;\n\n            shaderParams.name = \"CirclePointsMaterial\";\n            shaderParams.vertexShader = vertexShader;\n            shaderParams.fragmentShader = fragmentShader;\n            shaderParams.uniforms = THREE.UniformsUtils.merge([\n                {\n                    size: new THREE.Uniform(CirclePointsMaterial.DEFAULT_CIRCLE_SIZE),\n                    // HARP-17373: Original uniform name 'diffuse' due to shader compilation\n                    // errors with Metal in Safari 15 on MacOS Monterrey and iPadOS 15.\n                    diffuseColor: new THREE.Uniform(defaultColor),\n                    opacity: new THREE.Uniform(defaultOpacity)\n                },\n                THREE.UniformsLib.fog\n            ]);\n            shaderParams.depthTest = false;\n            shaderParams.extensions = {\n                ...shaderParams.extensions,\n                derivatives: true\n            };\n            shaderParameters = shaderParams;\n        }\n        super(shaderParameters);\n\n        // Blending needs to always be enabled to support smooth edges\n        enforceBlending(this);\n\n        this.type = \"CirclePointsMaterial\";\n        this.setOpacity(defaultOpacity);\n\n        if (sizeValue !== undefined) {\n            this.size = sizeValue;\n        }\n        if (colorValue !== undefined) {\n            this.color = colorValue;\n        }\n        if (opacityValue !== undefined) {\n            this.setOpacity(opacityValue);\n        }\n    }\n\n    /**\n     * Gets the circle screen size.\n     */\n    get size(): number {\n        return this.uniforms.size.value;\n    }\n\n    /**\n     * Sets the circle screen size.\n     */\n    set size(size: number) {\n        this.uniforms.size.value = size;\n    }\n\n    get color(): THREE.Color {\n        return this.uniforms.diffuseColor.value as THREE.Color;\n    }\n\n    set color(value: THREE.Color) {\n        this.uniforms.diffuseColor.value.copy(value);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport * as THREE from \"three\";\n\n/**\n * The base shader to use for {@link @here/harp-mapview#MapView}'s\n * composing passes, like {@link MSAAMaterial}.\n */\nexport const CopyShader: THREE.Shader = {\n    uniforms: {\n        tDiffuse: { value: null },\n        opacity: { value: 1.0 }\n    },\n    vertexShader: `\n    varying vec2 vUv;\n    void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }`,\n    fragmentShader: `\n    uniform float opacity;\n    uniform sampler2D tDiffuse;\n    varying vec2 vUv;\n    void main() {\n        vec4 texel = texture2D( tDiffuse, vUv );\n        gl_FragColor = opacity * texel;\n    }`\n};\n\n/**\n * The material is used for composing.\n */\nexport class CopyMaterial extends THREE.ShaderMaterial {\n    /**\n     * The constructor of `CopyMaterial`.\n     *\n     * @param uniforms - The [[CopyShader]]'s uniforms.\n     */\n    constructor(uniforms: { [uniformName: string]: THREE.IUniform }) {\n        super({\n            name: \"CopyMaterial\",\n            uniforms,\n            vertexShader: CopyShader.vertexShader,\n            fragmentShader: CopyShader.fragmentShader,\n            premultipliedAlpha: true,\n            transparent: false,\n            blending: THREE.NoBlending,\n            depthTest: false,\n            depthWrite: false\n        });\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HiddenThreeJSMaterialProperties } from \"./MapMeshMaterials\";\n\n/**\n * Parameters used when constructing a new implementor of {@link DisplacementFeature}.\n */\nexport interface DisplacementFeatureParameters {\n    /**\n     * Texture used for vertex displacement along their normals.\n     */\n    displacementMap?: THREE.Texture;\n}\n\n/**\n * Interface to be implemented by materials that use displacement maps to overlay geometry\n * on elevation data.\n */\nexport interface DisplacementFeature extends HiddenThreeJSMaterialProperties {\n    displacementMap: THREE.Texture | null;\n}\n\n/**\n * Determines whether a given material supports displacement maps for elevation overlay.\n * @param material - The material to check.\n * @returns Whether the given material supports displacement maps for elevation overlay.\n */\nexport function hasDisplacementFeature(material: any): material is DisplacementFeature {\n    return \"displacementMap\" in material;\n}\n\n/**\n * Sets the displacement map to the given material.\n * @param displacementMap - Texture representing the elevation data used to overlay the object.\n * @param material - The Material to be updated.\n */\nexport function setDisplacementMapToMaterial(\n    displacementMap: THREE.DataTexture | null,\n    material: THREE.Mesh[\"material\"]\n) {\n    if (hasDisplacementFeature(material) && material.displacementMap !== displacementMap) {\n        material.displacementMap = displacementMap;\n        material.needsUpdate = true;\n        if (material.displacementMap !== null) {\n            material.displacementMap.needsUpdate = true;\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { DisplacementFeature, DisplacementFeatureParameters } from \"./DisplacementFeature\";\nimport {\n    ExtrusionFeature,\n    ExtrusionFeatureParameters,\n    FadingFeature,\n    FadingFeatureParameters\n} from \"./MapMeshMaterials\";\nimport { ExtrusionFeatureDefs } from \"./MapMeshMaterialsDefs\";\nimport {\n    RawShaderMaterial,\n    RawShaderMaterialParameters,\n    RendererMaterialParameters\n} from \"./RawShaderMaterial\";\nimport { enforceBlending, setShaderDefine, setShaderMaterialDefine } from \"./Utils\";\n\nconst vertexSource: string = `\n#define EDGE_DEPTH_OFFSET 0.0001\n\n#ifdef USE_COLOR\nattribute vec4 color;\n#else\nuniform vec3 color;\n#endif\n\n// SHADER_NAME may be defined by THREE.JS own shaders in which case these attributes & uniforms are\n// already defined\n#ifndef SHADER_NAME\nattribute vec3 position;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat3 normalMatrix;\n#endif\n\nuniform vec3 edgeColor;\nuniform float edgeColorMix;\n\n#ifdef USE_DISPLACEMENTMAP\nattribute vec3 normal;\nattribute vec2 uv;\nuniform sampler2D displacementMap;\n#endif\n\nvarying vec3 vColor;\n\n#ifdef USE_EXTRUSION\n#include <extrusion_pars_vertex>\n#endif\n\n#ifdef USE_FADING\n#include <fading_pars_vertex>\n#endif\n\nvoid main() {\n\n    vColor = mix(edgeColor.rgb, color.rgb, edgeColorMix);\n\n    vec3 transformed = vec3( position );\n\n    #ifdef USE_EXTRUSION\n    #include <extrusion_vertex>\n    #endif\n\n    #ifdef USE_DISPLACEMENTMAP\n    transformed += normalize( normal ) * texture2D( displacementMap, uv ).x;\n    #endif\n\n    vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n\n    gl_Position = projectionMatrix * mvPosition;\n    // After projection gl_Position contains clip space coordinates of each vertex\n    // before perspective division (1 / w), thus only vertexes with -w < z < w should\n    // be displayed and offset. We offset only those edges which z coordinate in NDC\n    // space is between: -inf < z < 1\n    float depthOffset = step(-1.0, -gl_Position.z / gl_Position.w) * EDGE_DEPTH_OFFSET;\n    gl_Position.z -= depthOffset;\n\n    #ifdef USE_FADING\n    #include <fading_vertex>\n    #endif\n}`;\n\nconst fragmentSource: string = `\nprecision highp float;\nprecision highp int;\n\nvarying vec3 vColor;\n\n#ifdef USE_EXTRUSION\n#include <extrusion_pars_fragment>\n#endif\n\n#ifdef USE_FADING\n#include <fading_pars_fragment>\n#endif\n\nvoid main() {\n    float alphaValue = 1.0;\n    gl_FragColor = vec4(vColor, alphaValue);\n\n    #ifdef USE_EXTRUSION\n    #include <extrusion_fragment>\n    #endif\n\n    #ifdef USE_FADING\n    #include <fading_fragment>\n    #endif\n}`;\n\n/**\n * Parameters used when constructing a new {@link EdgeMaterial}.\n */\nexport interface EdgeMaterialParameters\n    extends FadingFeatureParameters,\n        DisplacementFeatureParameters,\n        ExtrusionFeatureParameters,\n        RendererMaterialParameters {\n    /**\n     * Edge color.\n     */\n    color?: number | string;\n    /**\n     * Color mix value. Mixes between vertexColors and edgeColor.\n     */\n    colorMix?: number;\n\n    /**\n     * Defines whether vertex coloring is used.\n     * @defaultValue false\n     */\n    vertexColors?: boolean;\n}\n\n/**\n * Material designed to render the edges of extruded buildings using GL_LINES. It supports solid\n * colors, vertex colors, color mixing and distance fading.\n */\nexport class EdgeMaterial\n    extends RawShaderMaterial\n    implements FadingFeature, ExtrusionFeature, DisplacementFeature {\n    static DEFAULT_COLOR: number = 0x000000;\n    static DEFAULT_COLOR_MIX: number = 0.0;\n\n    /**\n     * Constructs a new `EdgeMaterial`.\n     *\n     * @param params - `EdgeMaterial` parameters. Always required except when cloning another\n     * material.\n     */\n    constructor(params?: EdgeMaterialParameters) {\n        let shaderParams: RawShaderMaterialParameters | undefined;\n        if (params) {\n            const defines: { [key: string]: any } = {};\n            const hasExtrusion =\n                params.extrusionRatio !== undefined &&\n                params.extrusionRatio >= ExtrusionFeatureDefs.DEFAULT_RATIO_MIN &&\n                params.extrusionRatio < ExtrusionFeatureDefs.DEFAULT_RATIO_MAX;\n            if (params.displacementMap) {\n                setShaderDefine(defines, \"USE_DISPLACEMENTMAP\", true);\n            }\n            if (hasExtrusion) {\n                setShaderDefine(defines, \"USE_EXTRUSION\", true);\n            }\n            if (params.vertexColors === true) {\n                setShaderDefine(defines, \"USE_COLOR\", true);\n            }\n            shaderParams = {\n                name: \"EdgeMaterial\",\n                vertexShader: vertexSource,\n                fragmentShader: fragmentSource,\n                uniforms: {\n                    color: new THREE.Uniform(new THREE.Color(EdgeMaterial.DEFAULT_COLOR)),\n                    edgeColor: new THREE.Uniform(new THREE.Color(EdgeMaterial.DEFAULT_COLOR)),\n                    edgeColorMix: new THREE.Uniform(EdgeMaterial.DEFAULT_COLOR_MIX),\n                    fadeNear: new THREE.Uniform(FadingFeature.DEFAULT_FADE_NEAR),\n                    fadeFar: new THREE.Uniform(FadingFeature.DEFAULT_FADE_FAR),\n                    extrusionRatio: new THREE.Uniform(ExtrusionFeatureDefs.DEFAULT_RATIO_MAX),\n                    displacementMap: new THREE.Uniform(\n                        params.displacementMap ?? new THREE.Texture()\n                    )\n                },\n                depthWrite: false,\n                defines,\n                rendererCapabilities: params.rendererCapabilities\n            };\n        }\n        super(shaderParams);\n        enforceBlending(this);\n\n        FadingFeature.patchGlobalShaderChunks();\n        ExtrusionFeature.patchGlobalShaderChunks();\n\n        // Apply initial parameter values.\n        if (params !== undefined) {\n            if (params.color !== undefined) {\n                // Color may be set directly on object (omitting class setter), because we already\n                // know that is does no require any special handling nor material update\n                // (see: set color()).\n                this.color.set(params.color as any);\n            }\n            if (params.colorMix !== undefined) {\n                this.colorMix = params.colorMix;\n            }\n            if (params.fadeNear !== undefined) {\n                this.fadeNear = params.fadeNear;\n            }\n            if (params.fadeFar !== undefined) {\n                this.fadeFar = params.fadeFar;\n            }\n            if (params.displacementMap !== undefined) {\n                this.displacementMap = params.displacementMap;\n            }\n            if (params.extrusionRatio !== undefined) {\n                this.extrusionRatio = params.extrusionRatio;\n            }\n        }\n    }\n\n    /**\n     * The color of the object that is rendered\n     * together with this edge.\n     *\n     * @remarks\n     * The final color of the edge is computed by\n     * interpolating the {@link edgeColor} with this color\n     * using the {@link colorMix} factor.\n     *\n     * Note that {@link objectColor} is used only\n     * when the geometry associated with this material\n     * does not have a vertex color buffer.\n     *\n     */\n    get objectColor(): THREE.Color {\n        return this.uniforms.color.value as THREE.Color;\n    }\n\n    set objectColor(value: THREE.Color) {\n        this.uniforms.color.value.copy(value);\n    }\n\n    /**\n     * Edge color.\n     */\n    get color(): THREE.Color {\n        return this.uniforms.edgeColor.value as THREE.Color;\n    }\n\n    set color(value: THREE.Color) {\n        this.uniforms.edgeColor.value.copy(value);\n    }\n\n    get lineWidth(): number {\n        return this.linewidth;\n    }\n\n    /**\n     * Only lineWidth of 0 and 1 is supported.\n     * lineWidth <= 0 will result in not visible lines, everything else into lines\n     * visible with lineWidth 1\n     */\n    set lineWidth(value: number) {\n        this.linewidth = value;\n        if (this.linewidth <= 0) {\n            this.visible = false;\n        } else {\n            this.visible = true;\n        }\n    }\n\n    /**\n     * Color mix value. Mixes between vertexColors and edgeColor.\n     */\n    get colorMix(): number {\n        return this.uniforms.edgeColorMix.value as number;\n    }\n\n    set colorMix(value: number) {\n        if (this.uniforms.edgeColorMix.value === value) {\n            return;\n        }\n        this.uniforms.edgeColorMix.value = value;\n    }\n\n    get fadeNear(): number {\n        return this.uniforms.fadeNear.value as number;\n    }\n\n    set fadeNear(value: number) {\n        this.uniforms.fadeNear.value = value;\n    }\n\n    get fadeFar(): number {\n        return this.uniforms.fadeFar.value as number;\n    }\n\n    set fadeFar(value: number) {\n        if (this.uniforms.fadeFar.value === value) {\n            return;\n        }\n        this.uniforms.fadeFar.value = value;\n        setShaderMaterialDefine(this, \"USE_FADING\", value > 0.0);\n    }\n\n    get extrusionRatio(): number {\n        return this.uniforms.extrusionRatio.value as number;\n    }\n\n    set extrusionRatio(value: number) {\n        if (this.uniforms.extrusionRatio.value === value) {\n            return;\n        }\n        this.uniforms.extrusionRatio.value = value;\n        // NOTE: We could also disable shader extrusion chunks when it hits\n        // ExtrusionFeatureDefs.DEFAULT_RATIO_MAX value, but this would cause shader re-compile.\n        const useExtrusion = value >= ExtrusionFeatureDefs.DEFAULT_RATIO_MIN;\n        setShaderMaterialDefine(this, \"USE_EXTRUSION\", useExtrusion);\n    }\n\n    get displacementMap(): THREE.Texture | null {\n        return this.uniforms.displacementMap.value;\n    }\n\n    set displacementMap(map: THREE.Texture | null) {\n        if (this.uniforms.displacementMap.value === map) {\n            return;\n        }\n        this.uniforms.displacementMap.value = map;\n        const useDisplacementMap = map !== null;\n        if (useDisplacementMap) {\n            this.uniforms.displacementMap.value.needsUpdate = true;\n        }\n        setShaderMaterialDefine(this, \"USE_DISPLACEMENTMAP\", useDisplacementMap);\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport * as THREE from \"three\";\n\nimport {\n    RawShaderMaterial,\n    RawShaderMaterialParameters,\n    RendererMaterialParameters\n} from \"./RawShaderMaterial\";\nimport AtmosphereShaderChunks from \"./ShaderChunks/AtmosphereChunks\";\nimport { setShaderDefine, setShaderMaterialDefine } from \"./Utils\";\n\nconst EQUATORIAL_RADIUS: number = 6378137.0;\n\n/**\n * `GroundAtmosphereShader`.\n *\n * Describes shading of atmosphere as seen from outer space.\n */\nexport const GroundAtmosphereShader: THREE.Shader = {\n    uniforms: {\n        u_eyePositionWorld: new THREE.Uniform(new THREE.Vector3()),\n        u_lightDirectionWorld: new THREE.Uniform(new THREE.Vector3(0, 1, 0)),\n        u_modelViewProjection: new THREE.Uniform(new THREE.Matrix4()),\n        // Environment settings:\n        // atmosphere inner and outer radius, camera height\n        u_atmosphereEnv: new THREE.Uniform(\n            new THREE.Vector3(\n                // Maximum inner radius\n                EQUATORIAL_RADIUS * 1.001,\n                // Maximum outer radius\n                EQUATORIAL_RADIUS * 1.025,\n                // Camera height\n                0\n            )\n        ),\n        u_hsvCorrection: new THREE.Uniform(new THREE.Vector3(0, 0, 0)),\n\n        topColor: new THREE.Uniform(new THREE.Color(0x0077ff)),\n        bottomColor: new THREE.Uniform(new THREE.Color(0xffffff)),\n        offset: new THREE.Uniform(33.0),\n        exponent: new THREE.Uniform(0.6),\n        fogColor: new THREE.Uniform(new THREE.Color(0x0077ff)), // scene.fog.color\n        fogNear: new THREE.Uniform(new THREE.Color(0x0077ff)), // scene.fog.near\n        fogFar: new THREE.Uniform(new THREE.Color(0xffffff)) // scene.fog.far\n    },\n\n    vertexShader: `\n\n    #define IMPROVE_INTERSECT_PRECISION 1\n    #define IMPROVE_DOT_PRECISION 1\n\n    precision highp float;\n    precision highp int;\n\n    attribute vec4 position;\n\n    // Base mandatory uniforms\n    uniform mat4 u_modelViewProjection;\n    uniform vec3 u_eyePositionWorld;\n    uniform vec3 u_lightDirectionWorld;\n\n    uniform vec3 u_atmosphereEnv; // Atmosphere inner and outer radius, camera height\n    uniform vec3 u_hsvCorrection;\n\n    const float Pi = 3.141592653589793;\n    const float Kr = 0.0025;\n    const float Km = 0.0015;\n    const float Kr4PI = Kr * 4.0 * Pi;\n    const float Km4PI = Km * 4.0 * Pi;\n    const float ESun = 25.0; // should be 15.0\n    const float KmESun = Km * ESun;\n    const float KrESun = Kr * ESun;\n    const vec3 InvWavelength = vec3(\n        1.0 / pow(0.650, 4.0), // Red\n        1.0 / pow(0.570, 4.0), // Green\n        1.0 / pow(0.475, 4.0)); // Blue\n\n    const int nSamples = 2;\n    const float fSamples = 2.0;\n\n    varying vec3 v_rayleighColor;\n    varying vec3 v_mieColor;\n    varying vec3 v_vertToCamera;\n    varying vec3 v_vertToOrigin;\n\n    ${AtmosphereShaderChunks.atmosphere_vertex_utils}\n\n    //\n    // Computes rayleight and mia atmosphere factors for ground.\n    //\n    // Code based on GPU Gems article.\n    //\n    // Author: Sean O'Neil\n    //\n    // Copyright (c) 2004 Sean O'Neil\n    //\n    // https://developer.nvidia.com/gpugems/gpugems2/part-ii-shading-lighting-and-shadows/chapter-16-accurate-atmospheric-scattering\n    //\n    // Further modifications by HERE.\n    //\n    AtmosphereColor computeGroundAtmosphere(vec3 v3Pos, vec3 vLightDir)\n    {\n        // Retrieve environment variables\n        float fInnerRadius = u_atmosphereEnv.x;\n        float fOuterRadius = u_atmosphereEnv.y;\n        float fCameraHeight = u_atmosphereEnv.z;\n\n        // All that may be moved to const or define(s) at further optimizations:\n        float fScale = 1.0 / (fOuterRadius - fInnerRadius);\n        float fScaleOverScaleDepth = fScale / RayleighScaleDepth;\n        float fCameraHeight2 = fCameraHeight * fCameraHeight;\n        float fOuterRadius2 = fOuterRadius * fOuterRadius;\n\n        // Get the ray from the camera to the vertex and its length (which is the far point of the ray passing through the atmosphere)\n        vec3 v3Ray = v3Pos - u_eyePositionWorld;\n        float fFar = length(v3Ray);\n        v3Ray /= fFar;\n\n#if !defined(IMPROVE_DOT_PRECISION)\n        vec3 v3Dir = normalize(v3Pos);\n#endif\n\n#ifdef CAMERA_IN_SPACE\n\n        // Calculate first point of camera ray and sphere intersection.\n        float fNear = getNearSphereIntersect(u_eyePositionWorld, v3Ray, fCameraHeight2, fOuterRadius2);\n        // Make far relative to first atmosphere intersection, setting it to\n        // the length of ray passed through atmosphere\n        fFar -= fNear;\n\n        // Compute the ray's starting position within the atmosphere, then\n        // calculate its scattering offset\n        vec3 v3Start = u_eyePositionWorld + v3Ray * fNear;\n        float fDepth = exp((fInnerRadius - fOuterRadius) / RayleighScaleDepth);\n\n#else // CAMERA_IN_ATMOSPHERE\n\n        // The ray starts already in atmosphere\n        vec3 v3Start = u_eyePositionWorld;\n        // Virtually fNear is just at eye position, so ray passing through atmosphere does not shorten\n        // fFar -= 0.0;\n        float fDepth = exp((fInnerRadius - fCameraHeight) / RayleighScaleDepth);\n#endif\n\n#if defined(IMPROVE_DOT_PRECISION)\n        float fCameraAngle = dot(-v3Ray, v3Pos) / length(v3Pos);\n#else\n        float fCameraAngle = dot(-v3Ray, v3Dir);\n#endif\n        float fCameraScale = scale(fCameraAngle);\n\n#ifdef DYNAMIC_LIGHT\n        // When we want the atmosphere to be uniform over the globe so it is set to 1.0.\n        #if defined(IMPROVE_DOT_PRECISION)\n            // The light angle for given light source may be calculated as:\n            // angle = dot(vLightDir, v3Dir) / length(v3Dir);\n            // where v3Dir holds normalized vertex position, but for precision issues we v3Pos (un-normalized)\n            float fLightAngle = dot(vLightDir, v3Pos) / length(v3Pos);\n        #else\n            float fLightAngle = dot(vLightDir, v3Dir);\n        #endif\n#else\n        float fLightAngle = 1.0;\n#endif\n        float fLightScale = scale(fLightAngle);\n\n        float fCameraOffset = fDepth * fCameraScale;\n        float fTemp = (fLightScale + fCameraScale);\n\n        // Initialize the scattering loop variables\n        float fSampleLength = fFar / fSamples;\n        float fScaledLength = fSampleLength * fScale;\n        vec3 v3SampleRay = v3Ray * fSampleLength;\n        vec3 v3SamplePoint = v3Start + v3SampleRay * 0.5;\n\n        // Now loop through the sample rays\n        vec3 v3BaseColor = vec3(0.0);\n        vec3 v3Attenuate = vec3(0.0);\n        for(int i = 0; i < nSamples; i++)\n        {\n            float fHeight = length(v3SamplePoint);\n            float fDepth = exp(fScaleOverScaleDepth * (fInnerRadius - fHeight));\n            float fScatter = fDepth * fTemp - fCameraOffset;\n            // Compute color factors\n            v3Attenuate = exp(-fScatter * (InvWavelength * Kr4PI + Km4PI));\n            v3BaseColor += v3Attenuate * (fDepth * fScaledLength);\n            // Move to the next point\n            v3SamplePoint += v3SampleRay;\n        }\n\n        AtmosphereColor color;\n        color.mie = v3BaseColor * (InvWavelength * KrESun + KmESun);\n        // Calculate the attenuation factor for the ground\n        color.rayleigh = v3Attenuate;\n\n        return color;\n    }\n\n    void main(void)\n    {\n        #ifdef DYNAMIC_LIGHT\n            vec3 vLightDir = u_lightDirectionWorld;\n        #else\n            vec3 vLightDir = u_eyePositionWorld;\n        #endif\n        vLightDir = normalize(vLightDir);\n\n        AtmosphereColor atmColor = computeGroundAtmosphere(position.xyz, vLightDir);\n        v_mieColor = atmColor.mie;\n        v_rayleighColor = atmColor.rayleigh;\n        v_vertToCamera = u_eyePositionWorld - position.xyz;\n        v_vertToOrigin = normalize(position.xyz);\n\n        gl_Position = u_modelViewProjection * position;\n    }\n    `,\n\n    fragmentShader: `\n\n    // Exposure correction gives more subtle gradients on the ground.\n    #define CORRECT_EXPOSURE 1\n    #define FADE_DEPTH 1\n    #define NIGHT_LOCAL 1\n\n    precision highp float;\n    precision highp int;\n\n    #ifdef CORRECT_COLOR\n    uniform vec3 u_hsvCorrection; // Hue, saturation, brightness\n    #endif\n\n    uniform vec3 u_atmosphereEnv; // Atmosphere inner and outer radius, camera height\n    uniform vec3 u_eyePositionWorld;\n    uniform vec3 u_lightDirectionWorld;\n\n    const float g = -0.95;\n    const float g2 = g * g;\n\n    varying vec3 v_rayleighColor;\n    varying vec3 v_mieColor;\n    varying vec3 v_vertToCamera;\n    varying vec3 v_vertToOrigin;\n\n    ${AtmosphereShaderChunks.atmosphere_fragment_utils}\n\n    void main(void)\n    {\n        float fInnerRadius = u_atmosphereEnv.x;\n        float fOuterRadius = u_atmosphereEnv.y;\n        float fCameraHeight = u_atmosphereEnv.z;\n\n        #ifdef DYNAMIC_LIGHT\n            vec3 vLightDir = u_lightDirectionWorld;\n        #else\n            vec3 vLightDir = u_eyePositionWorld;\n        #endif\n        vLightDir = normalize(vLightDir);\n\n        // GPU gems mix of ground solution, with custom alpha settings\n        vec3 cRgb = v_mieColor + 0.25 * v_rayleighColor;\n\n        // Not needed for HDR frame buffer\n    #if !defined(HDR_FRAME_BUFFER) && defined(CORRECT_EXPOSURE)\n        // Interesting results with exposure factor: 2.0, 3.5, 4.0\n        cRgb = correctExposure(cRgb, 3.0);\n    #endif\n\n    #ifdef CORRECT_COLOR\n        cRgb = correctColor(cRgb, u_hsvCorrection);\n    #endif\n\n        // Base atmosphere opacity\n        float fAtmosphereAlpha = 1.0;\n\n        // Factor based on the distance of camera atmosphere and ground, results are:\n        // 0.0 = camera on the ground surface,\n        // 1.0 = at the outer edge of the atmosphere.\n        float fDepthFactor = clamp((fCameraHeight - fInnerRadius) /\n            (fOuterRadius - fInnerRadius), 0.0, 1.0);\n    #ifdef FADE_DEPTH\n        // Fade alpha based on the distance of camera between atmosphere layers\n        #ifdef FADE_DEPTH_LINEAR\n            fAtmosphereAlpha *= fDepthFactor;\n        #else\n            fAtmosphereAlpha *= pow(fDepthFactor, 1.5);\n        #endif\n    #endif\n\n#if defined(FADE_NIGHT) || defined(DARKEN_NIGHT)\n    #ifdef DYNAMIC_LIGHT\n        // Adjust factor based on time of day, results are:\n        // 0.0 = night,\n        // 1.0 = day.\n        #ifdef NIGHT_GLOBAL\n            // Global night fade based on camera and light orientation\n            float fNightFactor = clamp(dot(normalize(u_eyePositionWorld), vLightDir), 0.0, 1.0);\n            fNightFactor = pow(fNightFactor, 0.5);\n        #else // NIGHT_LOCAL\n            float fNightFactor =\n                clamp(dot(v_vertToOrigin, vLightDir) / length(v_vertToOrigin), 0.0, 1.0);\n            fNightFactor = pow(fNightFactor, 0.8);\n        #endif\n    #else\n        float fNightFactor = 1.0;\n    #endif\n#endif\n\n    #ifdef FADE_NIGHT\n        // Adjust alpha for night side of the globe\n        fAtmosphereAlpha *= fNightFactor;\n    #endif\n\n    #ifdef DARKEN_NIGHT\n        // Change the brightness depending on night / day side.\n        // NOTE: Darkening should be rather applied in HSV space, without loss on saturation,\n        // but it is much more GPU consuming.\n        const float minBrightness = 0.5;\n        float fDarkenFactor = clamp(fNightFactor, minBrightness, 1.0);\n        cRgb *= fDarkenFactor;\n    #endif\n\n    #ifdef EXPOSURE_DEPTH\n        // Control exposure depending from ground distance\n        float exposureBoost = 3.0 - fDepthFactor;\n        cRgb = correctExposure(cRgb, exposureBoost);\n    #endif\n\n        // Experimental fading out of focus point - similar to fresnel effect in top view.\n        // This fade is handy to better expose cartographic/map features in screen center.\n        float fFocusFactor = 1.0 - clamp(dot(normalize(v_vertToCamera), v_vertToOrigin), 0.0, 1.0) + 0.1;\n        fFocusFactor = pow(fFocusFactor, 2.5);\n        fAtmosphereAlpha *= fFocusFactor;\n\n        // Integrate all features\n        gl_FragColor = vec4(cRgb, fAtmosphereAlpha);\n    }\n    `\n};\n\nexport interface GroundAtmosphereMaterialParameters extends RendererMaterialParameters {}\n\nexport class GroundAtmosphereMaterial extends RawShaderMaterial {\n    /**\n     * Constructs a new `GroundAtmosphereMaterial`.\n     *\n     * @param params - `GroundAtmosphereMaterial` parameters. Always required except when cloning\n     * another material.\n     */\n    constructor(params?: GroundAtmosphereMaterialParameters) {\n        let shaderParams: RawShaderMaterialParameters | undefined;\n        if (params) {\n            const defines: { [key: string]: any } = {};\n            defines.CAMERA_IN_SPACE = \"\";\n\n            shaderParams = {\n                name: \"GroundAtmosphereMaterial\",\n                vertexShader: GroundAtmosphereShader.vertexShader,\n                fragmentShader: GroundAtmosphereShader.fragmentShader,\n                uniforms: GroundAtmosphereShader.uniforms,\n                transparent: true,\n                depthTest: false,\n                depthWrite: false,\n                side: THREE.FrontSide,\n                blending: THREE.NormalBlending,\n                fog: false,\n                rendererCapabilities: params.rendererCapabilities\n            };\n        }\n        super(shaderParams);\n    }\n\n    setDynamicLighting(enableLighting: boolean) {\n        setShaderMaterialDefine(this, \"DYNAMIC_LIGHT\", enableLighting);\n    }\n\n    /**\n     * Set maximum outer radius of atmosphere.\n     *\n     * @default [[EarthConstants.EQUATORIAL_RADIUS]] * 1.025\n     */\n    set outerRadius(radius: number) {\n        this.uniforms.u_atmosphereEnv.value.y = radius;\n    }\n\n    get outerRadius(): number {\n        return this.uniforms.u_atmosphereEnv.value.y;\n    }\n\n    /**\n     * Set maximum inner radius of atmosphere.\n     *\n     * @default [[EarthConstants.EQUATORIAL_RADIUS]] * 1.001.\n     */\n    set innerRadius(radius: number) {\n        this.uniforms.u_atmosphereEnv.value.x = radius;\n    }\n\n    get innerRadius(): number {\n        return this.uniforms.u_atmosphereEnv.value.x;\n    }\n\n    /**\n     * Updates the uniform data of a material used to render an atmosphere.\n     *\n     * This includes only uniforms that may change frame by frame, other uniforms are\n     * accessed with convenient material setters and getters.\n     *\n     * @param shaderMaterial - Material which uniforms will be updated.\n     * @param matrixWorldInverse - Inverse of world matrix used to position the atmosphere dome.\n     * @param lightDirection - The light directional vector in world space.\n     * @param camera - Camera used in rendering.\n     */\n    updateUniforms(\n        shaderMaterial: THREE.ShaderMaterial,\n        object: THREE.Object3D,\n        camera: THREE.Camera,\n        lightDirection: THREE.Vector3\n    ): void {\n        const cameraInfo = this.getCameraInfo(object, camera);\n\n        if (shaderMaterial !== undefined && shaderMaterial.isMaterial) {\n            if (\n                shaderMaterial.uniforms &&\n                shaderMaterial.uniforms.u_atmosphereEnv &&\n                shaderMaterial.uniforms.u_hsvCorrection &&\n                shaderMaterial.uniforms.u_eyePositionWorld &&\n                shaderMaterial.uniforms.u_modelViewProjection &&\n                shaderMaterial.uniforms.u_lightDirectionWorld\n            ) {\n                const eyePos = cameraInfo.eyePos;\n                const mvp = cameraInfo.modelViewProjection;\n                const cameraHeight = cameraInfo.eyeHeight;\n\n                shaderMaterial.uniforms.u_eyePositionWorld.value.copy(eyePos);\n                shaderMaterial.uniforms.u_modelViewProjection.value.copy(mvp);\n\n                shaderMaterial.uniforms.u_atmosphereEnv.value.z = cameraHeight;\n                shaderMaterial.uniforms.u_lightDirectionWorld.value = lightDirection.clone();\n\n                const cameraInSpace = cameraHeight > this.outerRadius;\n                const needsUpdate0 = setShaderDefine(\n                    shaderMaterial.defines,\n                    \"CAMERA_IN_SPACE\",\n                    cameraInSpace\n                );\n                const needsUpdate1 = setShaderDefine(\n                    shaderMaterial.defines,\n                    \"CAMERA_IN_ATMOSPHERE\",\n                    !cameraInSpace\n                );\n                shaderMaterial.needsUpdate =\n                    shaderMaterial.needsUpdate || needsUpdate0 || needsUpdate1;\n            } else {\n                throw Error(\"Atmosphere material has missing uniforms\");\n            }\n        } else {\n            throw Error(\"Wrong object used, only Material objects are supported\");\n        }\n    }\n\n    /*\n     * Calculate camera position used in vertex shader of atmosphere materials.\n     *\n     * @param object -\n     * @param camera - Camera used to get the eye position.\n     */\n    private getCameraInfo(\n        object: THREE.Object3D,\n        camera: THREE.Camera,\n        reverse: boolean = false\n    ): { modelViewProjection: THREE.Matrix4; eyePos: THREE.Vector3; eyeHeight: number } {\n        if (reverse) {\n            const modelMatrix = new THREE.Matrix4().identity();\n            const viewMatrix = new THREE.Matrix4().copy(object.matrixWorld).invert().transpose();\n            const projectionMatrix = camera.projectionMatrix;\n\n            const mvpMatrix = new THREE.Matrix4();\n            // MVP = Projection * View * Model\n            mvpMatrix.multiplyMatrices(viewMatrix, modelMatrix);\n            mvpMatrix.multiplyMatrices(projectionMatrix, mvpMatrix);\n\n            const eyePos = new THREE.Vector3();\n            object.getWorldPosition(eyePos);\n            const objectPos = new THREE.Vector3();\n            camera.getWorldPosition(objectPos);\n            const eyeHeight = objectPos.distanceTo(eyePos);\n\n            return {\n                modelViewProjection: mvpMatrix,\n                eyePos,\n                eyeHeight\n            };\n        } else {\n            const modelMatrix = object.matrixWorld;\n            const viewMatrix = camera.matrixWorldInverse;\n            const projectionMatrix = camera.projectionMatrix;\n\n            const mvpMatrix = new THREE.Matrix4();\n            // MVP = Projection * View * Model\n            mvpMatrix.multiplyMatrices(viewMatrix, modelMatrix);\n            mvpMatrix.multiplyMatrices(projectionMatrix, mvpMatrix);\n\n            const eyePos = new THREE.Vector3();\n            camera.getWorldPosition(eyePos);\n            const objectPos = new THREE.Vector3();\n            object.getWorldPosition(objectPos);\n            const eyeHeight = objectPos.distanceTo(eyePos);\n            // Normally we would return simply camera position, but since camera is not moving in\n            // the globe view only the world, we need to calculate eye relative to object position.\n            eyePos.sub(objectPos);\n            return {\n                modelViewProjection: mvpMatrix,\n                eyePos,\n                eyeHeight\n            };\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { RawShaderMaterial, RawShaderMaterialParameters } from \"./RawShaderMaterial\";\nimport linesShaderChunk from \"./ShaderChunks/LinesChunks\";\n\nconst vertexSource: string = `\n#ifdef USE_COLOR\nattribute vec4 color;\nvarying vec3 vColor;\n#endif\n\n// uniforms to implement double-precision\nuniform mat4 u_mvp;             // combined modelView and projection matrix\nuniform vec3 u_eyepos;          // eye position major\nuniform vec3 u_eyepos_lowpart;  // eye position minor ((double) eyepos - (float) eyepos)\n\n// vertex attributes\nattribute vec3 position;        // high part\nattribute vec3 positionLow;     // low part\n\n#include <high_precision_vert_func>\n\nvoid main() {\n    #ifdef USE_COLOR\n    vColor = color.rgb;\n    #endif\n\n    vec3 pos = subtractDblEyePos(position);\n    gl_Position = u_mvp * vec4(pos, 1.0);\n}`;\n\nconst fragmentSource: string = `\nprecision highp float;\nprecision highp int;\n\nuniform vec3 diffuseColor;\nuniform float opacity;\n\n#ifdef USE_COLOR\nvarying vec3 color;\n#endif\n\nvoid main() {\n    #ifdef USE_COLOR\n    gl_FragColor = vec4( diffuseColor * vColor, opacity );\n    #else\n    gl_FragColor = vec4( diffuseColor, opacity );\n    #endif\n}`;\n\n/**\n * Parameters used when constructing a new {@link HighPrecisionLineMaterial}.\n */\nexport interface HighPrecisionLineMaterialParameters extends RawShaderMaterialParameters {\n    /**\n     * Line color.\n     */\n    color?: number | string | THREE.Color;\n    /**\n     * Line opacity.\n     */\n    opacity?: number;\n}\n\n/**\n * Material designed to render high precision lines (ideal for position-sensible data).\n */\nexport class HighPrecisionLineMaterial extends RawShaderMaterial {\n    static DEFAULT_COLOR: number = 0x000050;\n    static DEFAULT_OPACITY: number = 1.0;\n\n    isHighPrecisionLineMaterial: boolean;\n\n    /**\n     * Constructs a new `HighPrecisionLineMaterial`.\n     *\n     * @param params - `HighPrecisionLineMaterial` parameters.  Always required except when cloning\n     * another material.\n     */\n    constructor(params?: HighPrecisionLineMaterialParameters) {\n        Object.assign(THREE.ShaderChunk, linesShaderChunk);\n\n        const shaderParams: RawShaderMaterialParameters | undefined = params\n            ? {\n                  name: \"HighPrecisionLineMaterial\",\n                  vertexShader: vertexSource,\n                  fragmentShader: fragmentSource,\n                  uniforms: {\n                      // HARP-17373: Original uniform name 'diffuse' due to shader compilation\n                      // errors with Metal in Safari 15 on MacOS Monterrey and iPadOS 15.\n                      diffuseColor: new THREE.Uniform(\n                          new THREE.Color(HighPrecisionLineMaterial.DEFAULT_COLOR)\n                      ),\n                      opacity: new THREE.Uniform(HighPrecisionLineMaterial.DEFAULT_OPACITY),\n                      u_mvp: new THREE.Uniform(new THREE.Matrix4()),\n                      u_eyepos: new THREE.Uniform(new THREE.Vector3()),\n                      u_eyepos_lowpart: new THREE.Uniform(new THREE.Vector3())\n                  },\n                  rendererCapabilities: params.rendererCapabilities\n              }\n            : undefined;\n        Object.assign(shaderParams, params);\n        super(shaderParams);\n\n        this.type = \"HighPrecisionLineMaterial\";\n        this.isHighPrecisionLineMaterial = true;\n\n        // Apply initial parameter values.\n        if (params) {\n            if (params.color !== undefined) {\n                this.color.set(params.color as any);\n            }\n            if (params.opacity !== undefined) {\n                this.opacity = params.opacity;\n            }\n        }\n\n        this.updateTransparencyFeature();\n    }\n\n    /**\n     * Line color.\n     */\n    get color(): THREE.Color {\n        return this.uniforms.diffuseColor.value as THREE.Color;\n    }\n\n    set color(value: THREE.Color) {\n        this.uniforms.diffuseColor.value.copy(value);\n    }\n\n    private updateTransparencyFeature() {\n        this.transparent = this.opacity < 1.0 ? true : false;\n    }\n}\n\nexport function isHighPrecisionLineMaterial(\n    material: object | undefined\n): material is HighPrecisionLineMaterial {\n    return (\n        material !== undefined &&\n        (material as HighPrecisionLineMaterial).isHighPrecisionLineMaterial === true\n    );\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport linesShaderChunk from \"./ShaderChunks/LinesChunks\";\n\nconst vertexSource: string = `\n#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif\n\nuniform float size;\n\n// uniforms to implement double-precision\nuniform mat4 u_mvp;             // combined modelView and projection matrix\nuniform vec3 u_eyepos;          // eye position major\nuniform vec3 u_eyepos_lowpart;  // eye position minor ((double) eyepos - (float) eyepos)\n\n// vertex attributes\nattribute vec3 positionLow;     // low part\n\n#include <high_precision_vert_func>\n\nvoid main() {\n    #ifdef USE_COLOR\n    vColor = color.rgb;\n    #endif\n\n    vec3 pos = subtractDblEyePos(position);\n    gl_Position = u_mvp * vec4(pos, 1.0);\n\n    // ignore sizeAttenuation for now!\n    gl_PointSize = size;\n}`;\n\n/**\n * Parameters used when constructing a new {@link HighPrecisionPointMaterial}.\n */\nexport interface HighPrecisionPointMaterialParameters extends THREE.PointsMaterialParameters {\n    /**\n     * Point color.\n     */\n    color?: number | string | THREE.Color;\n    /**\n     * Point opacity.\n     */\n    opacity?: number;\n    /**\n     * Point scale.\n     */\n    scale?: number;\n    /**\n     * UV transformation matrix.\n     */\n    uvTransform?: THREE.Matrix3;\n}\n\n/**\n * Material designed to render high precision points (ideal for position-sensible data).\n */\nexport class HighPrecisionPointMaterial extends THREE.PointsMaterial {\n    static DEFAULT_COLOR: number = 0x000050;\n    static DEFAULT_OPACITY: number = 1.0;\n    static DEFAULT_SIZE: number = 1.0;\n    static DEFAULT_SCALE: number = 1.0;\n\n    isHighPrecisionPointMaterial: boolean;\n    uniforms: { [uniform: string]: THREE.IUniform };\n    vertexShader?: string;\n    fragmentShader?: string;\n\n    /**\n     * Constructs a new `HighPrecisionPointMaterial`.\n     *\n     * @param params - `HighPrecisionPointMaterial` parameters.\n     */\n    constructor(params?: HighPrecisionPointMaterialParameters) {\n        Object.assign(THREE.ShaderChunk, linesShaderChunk);\n\n        const shaderParams = params;\n        super(shaderParams);\n\n        this.type = \"HighPrecisionPointMaterial\";\n        this.vertexShader = vertexSource;\n        this.fragmentShader = THREE.ShaderChunk.points_frag;\n        this.fog = false;\n\n        this.uniforms = {\n            // HARP-17373: Original uniform name 'diffuse' due to shader compilation\n            // errors with Metal in Safari 15 on MacOS Monterrey and iPadOS 15.\n            diffuseColor: new THREE.Uniform(\n                new THREE.Color(HighPrecisionPointMaterial.DEFAULT_COLOR)\n            ),\n            opacity: new THREE.Uniform(HighPrecisionPointMaterial.DEFAULT_OPACITY),\n            size: new THREE.Uniform(HighPrecisionPointMaterial.DEFAULT_SIZE),\n            scale: new THREE.Uniform(HighPrecisionPointMaterial.DEFAULT_SCALE),\n            map: new THREE.Uniform(new THREE.Texture()),\n            uvTransform: new THREE.Uniform(new THREE.Matrix3()),\n            u_mvp: new THREE.Uniform(new THREE.Matrix4()),\n            u_eyepos: new THREE.Uniform(new THREE.Vector3()),\n            u_eyepos_lowpart: new THREE.Uniform(new THREE.Vector3())\n        };\n\n        this.isHighPrecisionPointMaterial = true;\n\n        // Apply initial parameter values.\n        if (params !== undefined) {\n            if (params.color !== undefined) {\n                this.color.set(params.color as any);\n            }\n            if (params.opacity !== undefined) {\n                this.opacity = params.opacity;\n            }\n            if (params.size !== undefined) {\n                this.size = params.size;\n            }\n            if (params.scale !== undefined) {\n                this.scale = params.scale;\n            }\n            if (params.uvTransform !== undefined) {\n                this.uvTransform = params.uvTransform;\n            }\n            if (params.map !== undefined) {\n                this.map = params.map;\n            }\n        }\n    }\n\n    /**\n     *  Point scale.\n     */\n    get scale(): number {\n        return this.uniforms.scale.value;\n    }\n\n    set scale(value: number) {\n        this.uniforms.scale.value = value;\n    }\n\n    /**\n     * UV transformation matrix.\n     */\n    get uvTransform(): THREE.Matrix3 {\n        return this.uniforms.uvTransform.value;\n    }\n\n    set uvTransform(value: THREE.Matrix3) {\n        this.uniforms.uvTransform.value = value;\n    }\n}\n\nexport function isHighPrecisionPointMaterial(\n    material: object | undefined\n): material is HighPrecisionPointMaterial {\n    return (\n        material !== undefined &&\n        (material as HighPrecisionPointMaterial).isHighPrecisionPointMaterial === true\n    );\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport {\n    RawShaderMaterial,\n    RawShaderMaterialParameters,\n    RendererMaterialParameters\n} from \"./RawShaderMaterial\";\n\nconst vertexSource: string = `\nattribute vec4 position;\nattribute vec4 color;\nattribute vec2 uv;\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\n\nvarying vec4 vColor;\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n    vColor = color;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position.xyz, 1.0);\n}`;\n\nconst fragmentSource: string = `\nprecision highp float;\nprecision highp int;\n\nuniform sampler2D map;\n\nvarying vec4 vColor;\nvarying vec2 vUv;\n\nvoid main() {\n\n    vec4 color = texture2D(map, vUv.xy);\n    color *= vColor;\n    if (color.a < 0.05) {\n        discard;\n    }\n    gl_FragColor = color;\n}`;\n\n/**\n * Parameters used when constructing a new {@link IconMaterial}.\n */\nexport interface IconMaterialParameters extends RendererMaterialParameters {\n    /**\n     * Texture map.\n     */\n    map: THREE.Texture;\n}\n\n/**\n * 2D material for icons, similar to [[TextMaterial]]. Uses component in texture coordinates to\n * apply opacity.\n */\nexport class IconMaterial extends RawShaderMaterial {\n    /**\n     * Constructs a new `IconMaterial`.\n     *\n     * @param params - `IconMaterial` parameters. Always required except when cloning another\n     * material.\n     */\n    constructor(params?: IconMaterialParameters) {\n        const shaderParams: RawShaderMaterialParameters | undefined = params\n            ? {\n                  name: \"IconMaterial\",\n                  vertexShader: vertexSource,\n                  fragmentShader: fragmentSource,\n                  uniforms: {\n                      map: new THREE.Uniform(params.map)\n                  },\n                  depthTest: false,\n                  depthWrite: false,\n                  transparent: true,\n\n                  vertexColors: true,\n                  premultipliedAlpha: true,\n                  rendererCapabilities: params.rendererCapabilities\n              }\n            : undefined;\n        super(shaderParams);\n    }\n\n    /**\n     * Icon texture map/atlas.\n     */\n    get map(): THREE.Texture {\n        return this.uniforms.map.value;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\n/**\n * The shader used in the [[UnrealBloomPass]] for the bloom/glow effect.\n */\nexport const LuminosityHighPassShader: THREE.Shader = {\n    uniforms: {\n        tDiffuse: { value: null },\n        luminosityThreshold: { value: 1.0 },\n        smoothWidth: { value: 1.0 },\n        defaultColor: { value: new THREE.Color(0x000000) },\n        defaultOpacity: { value: 0.0 }\n    },\n    vertexShader: `\n    varying vec2 vUv;\n    void main() {\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }`,\n    fragmentShader: `\n    uniform sampler2D tDiffuse;\n    uniform vec3 defaultColor;\n    uniform float defaultOpacity;\n    uniform float luminosityThreshold;\n    uniform float smoothWidth;\n    varying vec2 vUv;\n    void main() {\n        vec4 texel = texture2D( tDiffuse, vUv );\n        vec3 luma = vec3( 0.299, 0.587, 0.114 );\n        float v = dot( texel.xyz, luma );\n        vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\n        float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\n        gl_FragColor = mix( outputColor, texel, alpha );\n    }`\n};\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport * as THREE from \"three\";\n\nimport { CopyShader } from \"./CopyMaterial\";\n\n/**\n * The material to use for the quad of the {@link @here/harp-mapview#MSAARenderPass}\n * in the composing.\n */\nexport class MSAAMaterial extends THREE.ShaderMaterial {\n    /**\n     * The constructor of `MSAAMaterial`.\n     *\n     * @param uniforms - The [[CopyShader]]'s uniforms.\n     */\n    constructor(uniforms: { [uniformName: string]: THREE.IUniform }) {\n        super({\n            uniforms,\n            vertexShader: CopyShader.vertexShader,\n            fragmentShader: CopyShader.fragmentShader,\n            premultipliedAlpha: true,\n            transparent: true,\n            blending: THREE.AdditiveBlending,\n            depthTest: false,\n            depthWrite: false\n        });\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ViewRanges } from \"@here/harp-datasource-protocol/lib/ViewRanges\";\nimport { applyMixinsWithoutProperties, assert, chainCallbacks } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { DisplacementFeature, DisplacementFeatureParameters } from \"./DisplacementFeature\";\nimport { ExtrusionFeatureDefs } from \"./MapMeshMaterialsDefs\";\nimport extrusionShaderChunk from \"./ShaderChunks/ExtrusionChunks\";\nimport fadingShaderChunk from \"./ShaderChunks/FadingChunks\";\nimport { simpleLightingShadowChunk } from \"./ShaderChunks/ShadowChunks\";\nimport { disableBlending, enableBlending, insertShaderInclude, setShaderDefine } from \"./Utils\";\n\nconst emptyTexture = new THREE.Texture();\n\n/**\n * The MapMeshMaterials [[MapMeshBasicMaterial]] and [[MapMeshStandardMaterial]] are the standard\n * [[THREE.MeshBasicMaterial]] and [[THREE.MeshStandardMaterial]], with the addition functionality\n * of fading out the geometry between a fadeNear and fadeFar value.\n *\n * The implementation is designed around a mixin class {@link FadingFeatureMixin}, which requires\n * a bit of care when adding the FadingFeature to the existing mesh classes, but it is safe to use\n * and also reduces code duplication.\n */\n\n/**\n * Parameters used when constructing a new implementor of {@link FadingFeature}.\n */\nexport interface FadingFeatureParameters {\n    /**\n     * Distance to the camera (range: `[0.0, 1.0]`) from which the objects start fading out.\n     */\n    fadeNear?: number;\n\n    /**\n     * Distance to the camera (range: `[0.0, 1.0]`) from which the objects are transparent.\n     */\n    fadeFar?: number;\n}\n\n/**\n * Parameter used to control patching the standard material shader to ensure that the materials\n * color isn't affected by the light direction, only valid for techniques that are \"fill\"\n */\nexport interface ShadowFeatureParameters {\n    /**\n     * Whether the diffuse light component is removed (i.e. the materials color is therefore just\n     * the ambient + shadow).\n     */\n    removeDiffuseLight?: boolean;\n}\n\n/**\n * Parameters used when constructing a new implementor of {@link ExtrusionFeature}.\n */\nexport interface ExtrusionFeatureParameters {\n    /**\n     * Ratio of the extruded objects, where `1.0` is the default value\n     */\n    extrusionRatio?: number;\n\n    /**\n     * Enable z-fighting workaround that doesn't animate buildings with `height <\n     * [[ExtrusionFeatureDefs.MIN_BUILDING_HEIGHT]]`.\n     *\n     * Should be applied to `polygon` materials using this feature.\n     */\n    zFightingWorkaround?: boolean;\n}\n\n/**\n * Used internally.\n *\n * @hidden\n */\nexport interface UniformsType {\n    [index: string]: THREE.IUniform;\n}\n\n/**\n * Type of callback used internally by THREE.js for shader creation.\n *\n * @hidden\n */\ntype CompileCallback = (shader: THREE.Shader, renderer: any) => void;\n\n/**\n * Material properties used from THREE, which may not be defined in the type.\n */\nexport interface HiddenThreeJSMaterialProperties {\n    /**\n     * Informs THREE.js to re-compile material shader (due to change in code or defines).\n     */\n    needsUpdate?: boolean;\n\n    /**\n     * Hidden ThreeJS value that is made public here. Required to add new uniforms to subclasses of\n     * [[THREE.MeshBasicMaterial]]/[[THREE.MeshStandardMaterial]], basically all materials that are\n     * not THREE.ShaderMaterial.\n     * @deprecated Changes to this property are ignored.\n     */\n    uniformsNeedUpdate?: boolean;\n\n    /**\n     * Available in all materials in ThreeJS.\n     */\n    transparent?: boolean;\n\n    /**\n     * Used internally for material shader defines.\n     */\n    defines?: any;\n\n    /**\n     * Defines callback available in THREE.js materials.\n     *\n     * Called before shader program compilation to generate vertex & fragment shader output code.\n     */\n    onBeforeCompile?: CompileCallback;\n}\n\n/**\n * Used internally.\n *\n * @hidden\n */\nexport interface MixinShaderProperties {\n    /**\n     * Used internally for material shader defines.\n     */\n    shaderDefines?: any;\n\n    /**\n     * Used internally for shader uniforms, holds references to material internal shader.uniforms.\n     *\n     * Holds a reference to material's internal shader uniforms map. New custom feature based\n     * uniforms are injected using this reference, but also internal THREE.js shader uniforms\n     * will be available via this map after [[Material#onBeforeCompile]] callback is run with\n     * feature enabled.\n     * @see needsUpdate\n     */\n    shaderUniforms?: UniformsType;\n}\n\n/**\n * Translates a linear distance value [0..1], where 1 is the distance to the far plane, into\n * [0..maxVisibilityRange].\n *\n * Copy from MapViewUtils, since it cannot be accessed here because of circular dependencies.\n *\n * @param distance - Distance from the camera (range: [0, 1]).\n * @param visibilityRange - object describing maximum and minimum visibility range - distances\n * from camera at which objects won't be rendered anymore.\n */\nfunction cameraToWorldDistance(distance: number, visibilityRange: ViewRanges): number {\n    return distance * visibilityRange.maximum;\n}\n\n/**\n * Provides common interface from mixin to internal material defines and shader uniforms.\n *\n * Call this function just after [THREE.Material] is constructed, so in derived classes after\n * super c-tor call.\n * @param mixin - The mixin that will add features to [[THREE.Material]].\n * @param material - The material that mixin feature is being applied.\n */\nfunction linkMixinWithMaterial(\n    mixin: MixinShaderProperties,\n    material: HiddenThreeJSMaterialProperties\n) {\n    // Some materials (MeshBasicMaterial) have no defines property created in c-tor.\n    // In such case create it manually, such defines will be also injected to the shader\n    // via generic THREE.js code - see THREE/WebGLProgram.js.\n    if (material.defines === undefined) {\n        material.defines = {};\n    }\n    // Link internal THREE.js material defines with mixin reference.\n    // Those defines are usually created in Material c-tor, if not we have fallback above.\n    mixin.shaderDefines = material.defines;\n\n    // Prepare map for holding uniforms references from the actual shader, but check if\n    // it was not already created with other mixin feature.\n    if (mixin.shaderUniforms === undefined) {\n        mixin.shaderUniforms = {};\n    }\n    // Shader uniforms may not be linked at this stage, they are injected available via Shader\n    // object in onBeforeCompile callback, see: linkMixinWithShader().\n}\n\n/**\n * Links mixin [[MixinShaderProperties.shaderUniforms]] with actual material shader uniforms.\n *\n * Function injects features (mixin) specific shader uniforms to material's shader, it also\n * updates uniforms references so [[MixinShaderProperties.shaderUniforms]] will contain full\n * uniforms map (both feature specific and internal ones).\n * This function should be called before material's shader is pre-compiled, so the new uniforms\n * from the mixin feature are known to shader processor. The best place to use is\n * [[Material.onBeforeCompile]].\n * @param mixin - The mixin feature being applied to the material.\n * @param shader - The actual shader linked to the [[THREE.Material]].\n */\nfunction linkMixinWithShader(mixin: MixinShaderProperties, shader: THREE.Shader) {\n    Object.assign(shader.uniforms, mixin.shaderUniforms);\n    mixin.shaderUniforms = shader.uniforms;\n}\n\n/**\n * Base interface for all objects that should fade in the distance. The implementation of the actual\n * FadingFeature is done with the help of the mixin class {@link FadingFeatureMixin} and a set of\n * supporting functions in the namespace of the same name.\n */\nexport interface FadingFeature extends HiddenThreeJSMaterialProperties, MixinShaderProperties {\n    /**\n     * Distance to the camera (range: `[0.0, 1.0]`) from which the objects start fading out.\n     */\n    fadeNear?: number;\n\n    /**\n     * Distance to the camera (range: `[0.0, 1.0]`) from which the objects are transparent. A value\n     * of <= 0.0 disables fading.\n     */\n    fadeFar?: number;\n}\n\n/**\n * Base interface for all objects that should have animated extrusion effect.\n *\n * @remarks\n * The implementation of the actual ExtrusionFeature is done with\n * the help of the mixin class {@link ExtrusionFeatureMixin}\n * and a set of supporting functions in the namespace of the same name.\n */\nexport interface ExtrusionFeature extends HiddenThreeJSMaterialProperties, MixinShaderProperties {\n    /**\n     * Ratio of the extruded objects, where `1.0` is the default value. Minimum suggested value\n     * is `0.01`\n     */\n    extrusionRatio?: number;\n}\n\n/**\n * Determines whether a given material supports extrusion.\n * @param material The material to check.\n * @returns Whether the given material supports extrusion.\n */\nexport function hasExtrusionFeature(material: any): material is ExtrusionFeature {\n    return \"extrusionRatio\" in material;\n}\n\n// See https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-redeclare.md#ignoredeclarationmerge\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nnamespace DisplacementFeature {\n    /**\n     * Checks if feature is enabled (displacement map defined).\n     *\n     * @param displacementMaterial -\n     */\n    export function isEnabled(displacementMaterial: DisplacementFeature) {\n        return displacementMaterial.displacementMap !== null;\n    }\n\n    /**\n     * Update the internals of the `DisplacementFeature` depending on the value of\n     * [[displacementMap]].\n     *\n     * @param displacementMaterial - DisplacementFeature\n     */\n    export function updateDisplacementFeature(\n        displacementMaterial: DisplacementFeature & MixinShaderProperties\n    ): void {\n        assert(displacementMaterial.shaderDefines !== undefined);\n        assert(displacementMaterial.shaderUniforms !== undefined);\n\n        const useDisplacementMap = isEnabled(displacementMaterial);\n        // Whenever displacement feature state changes (between enabled/disabled) material will be\n        // re-compiled, forcing new shader chunks to be added (or removed).\n        const needsUpdate = setShaderDefine(\n            displacementMaterial.shaderDefines,\n            \"USE_DISPLACEMENTMAP\",\n            useDisplacementMap\n        );\n        displacementMaterial.needsUpdate = needsUpdate;\n\n        // Update texture after change.\n        if (useDisplacementMap) {\n            const texture = displacementMaterial.displacementMap!;\n            texture.needsUpdate = true;\n            displacementMaterial.shaderUniforms!.displacementMap.value = texture;\n        } else if (needsUpdate) {\n            displacementMaterial.shaderUniforms!.displacementMap.value = emptyTexture;\n        }\n    }\n\n    /**\n     * This function should be called on implementors of DisplacementFeature in the\n     * `onBeforeCompile` callback of that material. It adds the required code to the shaders to\n     * apply displacement maps.\n     *\n     * @param displacementMaterial - Material to add uniforms to.\n     * @param shader - [[THREE.WebGLShader]] containing the vertex and fragment shaders to add the\n     *                  special includes to.\n     */\n    export function onBeforeCompile(\n        displacementMaterial: DisplacementFeature & MixinShaderProperties,\n        shader: THREE.Shader\n    ) {\n        if (!isEnabled(displacementMaterial)) {\n            return;\n        }\n        assert(displacementMaterial.shaderUniforms !== undefined);\n\n        // The vertex and fragment shaders have been constructed dynamically. The uniforms and\n        // the shader includes are now appended to them.\n        //\n        // The object \"defines\" are required for this material, we use one define working as a flag,\n        // which enables/disables some chunks of shader code.\n        linkMixinWithShader(displacementMaterial, shader);\n\n        // Append the displacement map chunk to the vertex shader.\n        shader.vertexShader = shader.vertexShader.replace(\n            \"#include <skinbase_vertex>\",\n            `#include <skinbase_vertex>\n#ifndef USE_ENVMAP\n    vec3 objectNormal = vec3( normal );\n#endif`\n        );\n        shader.vertexShader = insertShaderInclude(\n            shader.vertexShader,\n            \"uv2_pars_vertex\",\n            \"displacementmap_pars_vertex\"\n        );\n\n        shader.vertexShader = insertShaderInclude(\n            shader.vertexShader,\n            \"skinning_vertex\",\n            \"displacementmap_vertex\",\n            true\n        );\n    }\n}\n\nexport class DisplacementFeatureMixin implements DisplacementFeature, MixinShaderProperties {\n    needsUpdate?: boolean;\n    uniformsNeedUpdate?: boolean;\n    defines?: any;\n    shaderDefines?: any;\n    shaderUniforms?: UniformsType;\n    onBeforeCompile?: CompileCallback;\n    private m_displacementMap: THREE.Texture | null = null;\n\n    // This is here to keep tslint from reporting a missing property, the getter that's actually\n    // used by materials is added in [[addDisplacementProperties]].\n    get displacementMap(): THREE.Texture | null {\n        return this.m_displacementMap;\n    }\n\n    // This is here to keep tslint from reporting a missing property, the setter that's actually\n    // used by materials is added in [[addDisplacementProperties]].\n    set displacementMap(map: THREE.Texture | null) {\n        this.setDisplacementMap(map);\n    }\n\n    protected getDisplacementMap(): THREE.Texture | null {\n        return this.m_displacementMap;\n    }\n\n    protected setDisplacementMap(map: THREE.Texture | null): void {\n        if (map !== this.m_displacementMap) {\n            this.m_displacementMap = map;\n            DisplacementFeature.updateDisplacementFeature(this);\n        }\n    }\n\n    /**\n     * The mixin class should call this method to register the property [[displacementMap]]\n     */\n    protected addDisplacementProperties(): void {\n        Object.defineProperty(this, \"displacementMap\", {\n            get: () => {\n                return this.getDisplacementMap();\n            },\n            set: val => {\n                this.setDisplacementMap(val);\n            }\n        });\n    }\n\n    /**\n     * Apply the displacementMap value from the parameters to the respective properties.\n     */\n    protected applyDisplacementParameters(params?: DisplacementFeatureParameters) {\n        linkMixinWithMaterial(this, this);\n\n        assert(this.shaderDefines !== undefined);\n        assert(this.shaderUniforms !== undefined);\n\n        // Create uniforms with default values, this ensures they are always set created,\n        // so no need for checks in setters.\n        const uniforms = this.shaderUniforms!;\n        uniforms.displacementMap = new THREE.Uniform(emptyTexture);\n        uniforms.displacementScale = new THREE.Uniform(1);\n        uniforms.displacementBias = new THREE.Uniform(0);\n\n        // Apply initial parameter values.\n        if (params !== undefined) {\n            if (params.displacementMap !== undefined) {\n                this.setDisplacementMap(params.displacementMap);\n            }\n        }\n\n        this.onBeforeCompile = chainCallbacks(this.onBeforeCompile, (shader: THREE.Shader) => {\n            DisplacementFeature.onBeforeCompile(this, shader);\n        });\n\n        // Require material update at least once, because of new shader chunks added.\n        this.needsUpdate = DisplacementFeature.isEnabled(this);\n    }\n\n    /**\n     * Copy displacementMap from other DisplacementFeature.\n     *\n     * @param source - The material to copy property values from.\n     */\n    protected copyDisplacementParameters(source: DisplacementFeature) {\n        this.setDisplacementMap(source.displacementMap);\n        return this;\n    }\n}\n\n/**\n * Namespace with support functions for implementors of `FadingFeature`.\n */\nexport namespace FadingFeature {\n    export const DEFAULT_FADE_NEAR: number = -1.0;\n    export const DEFAULT_FADE_FAR: number = -1.0;\n\n    /**\n     * Checks if feature is enabled based on feature params.\n     *\n     * Fading feature will be disabled if fadeFar is undefined or fadeFar <= 0.0.\n     * This function is crucial for shader switching (chunks injection), whenever feature state\n     * changes between enabled/disabled. Current approach is to keep feature on (once enabled)\n     * whenever fading params are reasonable, even if it causes full fade in, no transparency.\n     *\n     * @param fadingMaterial - FadingFeature.\n     */\n    export function isEnabled(fadingMaterial: FadingFeature) {\n        // NOTE: We could also check if full fade is not achieved, then feature could be\n        // disabled, but causing material re-compile.\n        return (\n            fadingMaterial.fadeNear !== undefined &&\n            fadingMaterial.fadeFar !== undefined &&\n            fadingMaterial.fadeFar > 0\n        );\n    }\n\n    /**\n     * Checks if feature is defined based on feature params.\n     *\n     * Fading feature will be defined if fadeNear and fadeFar are defined, their values\n     * are not checked for reasonable values.\n     *\n     * @param fadingMaterial FadingFeature.\n     */\n    export function isDefined(fadingMaterial: FadingFeature) {\n        return fadingMaterial.fadeNear !== undefined && fadingMaterial.fadeFar !== undefined;\n    }\n\n    /**\n     * Patch the THREE.ShaderChunk on first call with some extra shader chunks.\n     */\n    export function patchGlobalShaderChunks() {\n        if (THREE.ShaderChunk.fading_pars_vertex === undefined) {\n            Object.assign(THREE.ShaderChunk, fadingShaderChunk);\n        }\n    }\n\n    /**\n     * Update the internals of the `FadingFeature` depending on the value of [[fadeNear]]. The\n     * fading feature will be disabled if fadeFar <= 0.0.\n     *\n     * @param fadingMaterial - FadingFeature\n     */\n    export function updateFadingFeature(fadingMaterial: FadingFeature): void {\n        assert(fadingMaterial.shaderDefines !== undefined);\n        assert(fadingMaterial.shaderUniforms !== undefined);\n\n        // Update entire material to add/remove shader fading chunks, this happens when we\n        // enable/disable fading after material creation. Feature is marked via dummy define, which\n        // informs about fading feature state, even if such define is not required to control\n        // feature state, it makes it easy to check for shader changes.\n        const useFading = isEnabled(fadingMaterial);\n        const needsUpdate = setShaderDefine(\n            fadingMaterial.shaderDefines,\n            \"FADING_MATERIAL\",\n            useFading\n        );\n        // Enable/disable entire feature with material re-compile, this will also cause\n        // new uniforms injection.\n        fadingMaterial.needsUpdate = needsUpdate;\n\n        // Check if shader uniforms references are already set in onBeforeCompile callback.\n        assert(\n            fadingMaterial.shaderUniforms!.fadeNear !== undefined &&\n                fadingMaterial.shaderUniforms!.fadeFar !== undefined\n        );\n\n        // Update shader internal uniforms only if fading is enabled.\n        if (useFading) {\n            fadingMaterial.shaderUniforms!.fadeNear.value = fadingMaterial.fadeNear;\n            fadingMaterial.shaderUniforms!.fadeFar.value = fadingMaterial.fadeFar;\n            if (needsUpdate) {\n                enableBlending(fadingMaterial as THREE.Material);\n            }\n        }\n        // Perform one time update of uniforms to defaults when feature disabled (for clarity).\n        else if (needsUpdate) {\n            fadingMaterial.shaderUniforms!.fadeNear.value = FadingFeature.DEFAULT_FADE_NEAR;\n            fadingMaterial.shaderUniforms!.fadeFar.value = FadingFeature.DEFAULT_FADE_FAR;\n            disableBlending(fadingMaterial as THREE.Material);\n        }\n    }\n\n    /**\n     * This function should be called on implementors of FadingFeature in the `onBeforeCompile`\n     * callback of that material. It adds the required code to the shaders and declares the new\n     * uniforms that control fading based on view distance.\n     *\n     * @param fadingMaterial - Material to add uniforms to.\n     * @param shader - [[THREE.WebGLShader]] containing the vertex and fragment shaders to add the\n     *                  special includes to.\n     */\n    export function onBeforeCompile(fadingMaterial: FadingFeature, shader: THREE.Shader) {\n        if (!isEnabled(fadingMaterial)) {\n            return;\n        }\n        assert(fadingMaterial.shaderUniforms !== undefined);\n\n        // The vertex and fragment shaders have been constructed dynamically. The uniforms and\n        // the shader includes are now appended to them.\n        //\n        // The object \"defines\" are not required for this material, so the fading shader chunks\n        // have no #ifdef preprocessed chunks. Feature utilized one define just to denote feature\n        // attached and easy control its state, but this define may be stripped out if needed.\n        linkMixinWithShader(fadingMaterial, shader);\n\n        // Append the new fading shader cod directly after the fog code. This is done by adding an\n        // include directive for the fading code.\n        shader.vertexShader = insertShaderInclude(\n            shader.vertexShader,\n            \"fog_pars_vertex\",\n            \"fading_pars_vertex\"\n        );\n\n        shader.vertexShader = insertShaderInclude(\n            shader.vertexShader,\n            \"fog_vertex\",\n            \"fading_vertex\",\n            true\n        );\n\n        shader.fragmentShader = insertShaderInclude(\n            shader.fragmentShader,\n            \"fog_pars_fragment\",\n            \"fading_pars_fragment\"\n        );\n\n        shader.fragmentShader = insertShaderInclude(\n            shader.fragmentShader,\n            \"fog_fragment\",\n            \"fading_fragment\",\n            true\n        );\n    }\n\n    /**\n     * As three.js is rendering the transparent objects last (internally), regardless of their\n     * renderOrder value, we set the transparent value to false in the [[onAfterRenderCall]]. In\n     * [[onBeforeRender]], the function [[calculateDepthFromCameraDistance]] sets it to true if the\n     * fade distance value is less than 1.\n     *\n     * @param object - [[THREE.Object3D]] to prepare for rendering.\n     * @param viewRanges - The visibility ranges (clip planes and maximum visible distance) for\n     * actual camera setup.\n     * @param fadeNear - The fadeNear value to set in the material.\n     * @param fadeFar - The fadeFar value to set in the material.\n     * @param updateUniforms - If `true`, the fading uniforms are set. Not required if material is\n     *          handling the uniforms already, like in a [[THREE.ShaderMaterial]].\n     * @param additionalCallback - If defined, this function will be called before the function will\n     *          return.\n     */\n    export function addRenderHelper(\n        object: THREE.Object3D,\n        viewRanges: ViewRanges,\n        fadeNear: number | undefined,\n        fadeFar: number | undefined,\n        updateUniforms: boolean,\n        additionalCallback?: (\n            renderer: THREE.WebGLRenderer,\n            material: THREE.Material & FadingFeature\n        ) => void\n    ) {\n        object.onBeforeRender = chainCallbacks(\n            object.onBeforeRender,\n            (\n                renderer: THREE.WebGLRenderer,\n                scene: THREE.Scene,\n                camera: THREE.Camera,\n                geometry: THREE.BufferGeometry,\n                material: THREE.Material & FadingFeature,\n                group: THREE.Group\n            ) => {\n                const fadingMaterial = material as FadingFeature;\n\n                fadingMaterial.fadeNear =\n                    fadeNear === undefined || fadeNear === FadingFeature.DEFAULT_FADE_NEAR\n                        ? FadingFeature.DEFAULT_FADE_NEAR\n                        : cameraToWorldDistance(fadeNear, viewRanges);\n\n                fadingMaterial.fadeFar =\n                    fadeFar === undefined || fadeFar === FadingFeature.DEFAULT_FADE_FAR\n                        ? FadingFeature.DEFAULT_FADE_FAR\n                        : cameraToWorldDistance(fadeFar, viewRanges);\n\n                if (additionalCallback !== undefined) {\n                    additionalCallback(renderer, material);\n                }\n            }\n        );\n    }\n}\n\n/**\n * Mixin class for extended THREE materials. Adds new properties required for `fadeNear` and\n * `fadeFar`. There is some special handling for the fadeNear/fadeFar properties, which get some\n * setters and getters in a way that works well with the mixin.\n *\n * @see [[Tile#addRenderHelper]]\n */\nexport class FadingFeatureMixin implements FadingFeature {\n    needsUpdate?: boolean;\n    uniformsNeedUpdate?: boolean;\n    defines?: any;\n    shaderDefines?: any;\n    shaderUniforms?: UniformsType;\n    onBeforeCompile?: CompileCallback;\n    private m_fadeNear: number = FadingFeature.DEFAULT_FADE_NEAR;\n    private m_fadeFar: number = FadingFeature.DEFAULT_FADE_FAR;\n\n    /**\n     * @see [[FadingFeature#fadeNear]]\n     */\n    protected getFadeNear(): number {\n        return this.m_fadeNear;\n    }\n\n    /**\n     * @see [[FadingFeature#fadeNear]]\n     */\n    protected setFadeNear(value: number) {\n        const needsUpdate = value !== this.m_fadeNear;\n        if (needsUpdate) {\n            this.m_fadeNear = value;\n            FadingFeature.updateFadingFeature(this);\n        }\n    }\n\n    /**\n     * @see [[FadingFeature#fadeFar]]\n     */\n    protected getFadeFar(): number {\n        return this.m_fadeFar;\n    }\n\n    /**\n     * @see [[FadingFeature#fadeFar]]\n     */\n    protected setFadeFar(value: number) {\n        const needsUpdate = value !== this.m_fadeFar;\n        if (needsUpdate) {\n            this.m_fadeFar = value;\n            FadingFeature.updateFadingFeature(this);\n        }\n    }\n\n    /**\n     * The mixin classes should call this method to register the properties [[fadeNear]] and\n     * [[fadeFar]].\n     */\n    protected addFadingProperties(): void {\n        Object.defineProperty(this, \"fadeNear\", {\n            get: () => {\n                return this.getFadeNear();\n            },\n            set: val => {\n                this.setFadeNear(val);\n            }\n        });\n        Object.defineProperty(this, \"fadeFar\", {\n            get: () => {\n                return this.getFadeFar();\n            },\n            set: val => {\n                this.setFadeFar(val);\n            }\n        });\n    }\n\n    /**\n     * Apply the fadeNear/fadeFar values from the parameters to the respective properties.\n     *\n     * @param params - `FadingMeshBasicMaterial` parameters.\n     */\n    protected applyFadingParameters(params?: FadingFeatureParameters) {\n        // Prepare maps for holding uniforms and defines references from the actual material.\n        linkMixinWithMaterial(this, this);\n\n        assert(this.shaderDefines !== undefined);\n        assert(this.shaderUniforms !== undefined);\n\n        // Create uniforms with default values, this ensures they are always set created,\n        // so no need for checks in setters.\n        this.shaderUniforms!.fadeNear = new THREE.Uniform(FadingFeature.DEFAULT_FADE_NEAR);\n        this.shaderUniforms!.fadeFar = new THREE.Uniform(FadingFeature.DEFAULT_FADE_FAR);\n\n        // Apply initial parameter values.\n        if (params !== undefined) {\n            if (params.fadeNear !== undefined) {\n                this.setFadeNear(params.fadeNear);\n            }\n            if (params.fadeFar !== undefined) {\n                this.setFadeFar(params.fadeFar);\n            }\n        }\n\n        this.onBeforeCompile = chainCallbacks(this.onBeforeCompile, (shader: THREE.Shader) => {\n            FadingFeature.onBeforeCompile(this, shader);\n        });\n        // Update (re-compile) shader code to include new shader chunks only if feature is enabled.\n        this.needsUpdate = FadingFeature.isEnabled(this);\n    }\n\n    /**\n     * Copy fadeNear/fadeFar values from other FadingFeature.\n     *\n     * @param source - The material to copy property values from.\n     */\n    protected copyFadingParameters(source: FadingFeature) {\n        this.setFadeNear(\n            source.fadeNear === undefined ? FadingFeature.DEFAULT_FADE_NEAR : source.fadeNear\n        );\n        this.setFadeFar(\n            source.fadeFar === undefined ? FadingFeature.DEFAULT_FADE_FAR : source.fadeFar\n        );\n        return this;\n    }\n}\n\nexport namespace ExtrusionFeature {\n    /**\n     * Checks if feature is enabled based on {@link ExtrusionFeature} properties.\n     *\n     * @param extrusionMaterial -\n     */\n    export function isEnabled(extrusionMaterial: ExtrusionFeature) {\n        return (\n            extrusionMaterial.extrusionRatio !== undefined &&\n            extrusionMaterial.extrusionRatio >= ExtrusionFeatureDefs.DEFAULT_RATIO_MIN\n        );\n    }\n\n    /**\n     * Patch the THREE.ShaderChunk on first call with some extra shader chunks.\n     */\n    export function patchGlobalShaderChunks() {\n        if (THREE.ShaderChunk.extrusion_pars_vertex === undefined) {\n            Object.assign(THREE.ShaderChunk, extrusionShaderChunk);\n        }\n    }\n\n    /**\n     * Update the internals of the `ExtrusionFeature` depending on the value of [[extrusionRatio]].\n     *\n     * @param ExtrusionMaterial - ExtrusionFeature\n     */\n    export function updateExtrusionFeature(extrusionMaterial: ExtrusionFeature): void {\n        assert(extrusionMaterial.shaderDefines !== undefined);\n        assert(extrusionMaterial.shaderUniforms !== undefined);\n\n        // Setup shader define that when changed will force material re-compile.\n        const useExtrusion = isEnabled(extrusionMaterial);\n        // Use shader define as marker if feature is enabled/disabled, this is not necessary\n        // required, but material requires update (re-compile) anyway to add/remove shader chunks.\n        const needsUpdate = setShaderDefine(\n            extrusionMaterial.shaderDefines,\n            \"EXTRUSION_MATERIAL\",\n            useExtrusion\n        );\n        // Enable/disable entire feature with material re-compile.\n        extrusionMaterial.needsUpdate = needsUpdate;\n\n        // Update uniform with new value\n        if (useExtrusion) {\n            extrusionMaterial.shaderUniforms!.extrusionRatio.value =\n                extrusionMaterial.extrusionRatio;\n        }\n        // Reset uniform to default, one time only, when feature is disabled (just for clarity).\n        else if (needsUpdate) {\n            extrusionMaterial.shaderUniforms!.extrusionRatio.value =\n                ExtrusionFeatureDefs.DEFAULT_RATIO_MAX;\n        }\n    }\n\n    /**\n     * This function should be called on implementors of ExtrusionFeature in the `onBeforeCompile`\n     * callback of that material. It adds the required code to the shaders and declares the new\n     * uniforms that control extrusion.\n     *\n     * @param extrusionMaterial - Material to add uniforms to.\n     * @param shader - [[THREE.WebGLShader]] containing the vertex and fragment shaders to add the\n     *                  special includes to.\n     */\n    export function onBeforeCompile(extrusionMaterial: ExtrusionFeature, shader: THREE.Shader) {\n        if (!isEnabled(extrusionMaterial)) {\n            return;\n        }\n        assert(extrusionMaterial.shaderUniforms !== undefined);\n\n        // The vertex and fragment shaders have been constructed dynamically. The uniforms and\n        // the shader includes are now appended to them. No defines are required to preprocess\n        // shader chunks, but we utilize one just to note the feature is enabled/disabled\n        // (easier debugging), this define may be easily stripped out or replaced with simple\n        // boolean flag.\n        linkMixinWithShader(extrusionMaterial, shader);\n\n        shader.vertexShader = insertShaderInclude(\n            shader.vertexShader,\n            \"common\",\n            \"extrusion_pars_vertex\"\n        );\n\n        shader.vertexShader = insertShaderInclude(\n            shader.vertexShader,\n            \"begin_vertex\",\n            \"extrusion_vertex\",\n            true\n        );\n\n        shader.fragmentShader = insertShaderInclude(\n            shader.fragmentShader,\n            \"fog_pars_fragment\",\n            \"extrusion_pars_fragment\"\n        );\n\n        shader.fragmentShader = shader.fragmentShader.replace(\n            \"#include <normal_fragment_begin>\",\n            \"#include <extrusion_normal_fragment_begin>\"\n        );\n\n        shader.fragmentShader = insertShaderInclude(\n            shader.fragmentShader,\n            \"fog_fragment\",\n            \"extrusion_fragment\",\n            true\n        );\n    }\n}\n\n/**\n * Mixin class for extended THREE materials. Adds new properties required for `extrusionRatio`.\n *\n * @remarks\n * There is some special handling for the extrusionRatio property, which is animated via\n * {@link @here/harp-mapview#AnimatedExtrusionHandler} that is\n * using [[extrusionRatio]] setter and getter to update\n * extrusion in a way that works well with the mixin and EdgeMaterial.\n */\nexport class ExtrusionFeatureMixin implements ExtrusionFeature {\n    needsUpdate?: boolean;\n    uniformsNeedUpdate?: boolean;\n    defines?: any;\n    shaderDefines?: any;\n    shaderUniforms?: UniformsType;\n    onBeforeCompile?: CompileCallback;\n    private m_extrusion: number = ExtrusionFeatureDefs.DEFAULT_RATIO_MAX;\n\n    /**\n     * @see [[ExtrusionFeature#extrusion]]\n     */\n    protected getExtrusionRatio(): number {\n        return this.m_extrusion;\n    }\n\n    /**\n     * @see [[ExtrusionFeature#extrusion]]\n     */\n    protected setExtrusionRatio(value: number) {\n        const needsUpdate = value !== this.m_extrusion;\n        if (needsUpdate) {\n            this.m_extrusion = value;\n            ExtrusionFeature.updateExtrusionFeature(this);\n        }\n    }\n\n    /**\n     * The mixin class should call this method to register the property [[extrusionRatio]]\n     */\n    protected addExtrusionProperties(): void {\n        Object.defineProperty(this, \"extrusionRatio\", {\n            get: () => {\n                return this.getExtrusionRatio();\n            },\n            set: val => {\n                this.setExtrusionRatio(val);\n            }\n        });\n    }\n\n    /**\n     * Apply the extrusionRatio value from the parameters to the respective properties.\n     */\n    protected applyExtrusionParameters(params?: ExtrusionFeatureParameters) {\n        // Prepare maps for holding uniforms and defines references from the actual material.\n        linkMixinWithMaterial(this, this);\n\n        assert(this.shaderDefines !== undefined);\n        assert(this.shaderUniforms !== undefined);\n\n        if (params && params.zFightingWorkaround === true) {\n            this.shaderDefines.ZFIGHTING_WORKAROUND = \"\";\n        }\n\n        // Create uniform with default value, this ensures that it is always created,\n        // so no need for checks in setters.\n        this.shaderUniforms!.extrusionRatio = new THREE.Uniform(\n            ExtrusionFeatureDefs.DEFAULT_RATIO_MAX\n        );\n\n        // Apply initial parameter values.\n        if (params !== undefined) {\n            if (params.extrusionRatio !== undefined) {\n                this.setExtrusionRatio(params.extrusionRatio);\n            }\n        }\n\n        this.onBeforeCompile = chainCallbacks(this.onBeforeCompile, (shader: THREE.Shader) => {\n            ExtrusionFeature.onBeforeCompile(this, shader);\n        });\n\n        this.needsUpdate = ExtrusionFeature.isEnabled(this);\n    }\n\n    /**\n     * Copy extrusionRatio values from other ExtrusionFeature.\n     *\n     * @param source - The material to copy property values from.\n     */\n    protected copyExtrusionParameters(source: ExtrusionFeature) {\n        if (source.extrusionRatio !== undefined) {\n            this.setExtrusionRatio(source.extrusionRatio);\n        }\n        return this;\n    }\n}\n\n/**\n * Subclass of [[THREE.MeshBasicMaterial]]. Adds new properties required for [[fadeNear]] and\n * [[fadeFar]]. In addition to the new properties (which update their respective uniforms), it is\n * also required to update the material in their objects [[onBeforeRender]] and [[OnAfterRender]]\n * calls, where their flag [[transparent]] is set and the internal fadeNear/fadeFar values are\n * updated to world space distances.\n *\n * @see [[Tile#addRenderHelper]]\n */\nexport class MapMeshBasicMaterial\n    extends THREE.MeshBasicMaterial\n    implements FadingFeature, ExtrusionFeature, DisplacementFeature {\n    /**\n     * Constructs a new `FadingMeshBasicMaterial`.\n     *\n     * @param params - `FadingMeshBasicMaterial` parameters.\n     */\n    constructor(\n        params?: THREE.MeshBasicMaterialParameters &\n            FadingFeatureParameters &\n            ExtrusionFeatureParameters &\n            DisplacementFeatureParameters\n    ) {\n        super(params);\n\n        FadingFeature.patchGlobalShaderChunks();\n\n        this.addFadingProperties();\n        this.applyFadingParameters(params);\n\n        ExtrusionFeature.patchGlobalShaderChunks();\n\n        this.addExtrusionProperties();\n        this.applyExtrusionParameters({ ...params, zFightingWorkaround: true });\n\n        this.addDisplacementProperties();\n        this.applyDisplacementParameters(params);\n    }\n\n    // overrides with THREE.js base classes are not recognized by tslint.\n    clone(): this {\n        return new MapMeshBasicMaterial().copy(this);\n    }\n\n    // overrides with THREE.js base classes are not recognized by tslint.\n    copy(source: this): any {\n        super.copy(source);\n        this.copyFadingParameters(source);\n        this.copyExtrusionParameters(source);\n        this.copyDisplacementParameters(source);\n        return this;\n    }\n\n    // Only here to make the compiler happy, these methods will be overriden: The actual\n    // implementations are those in FadingFeatureMixin and ExtrusionFeatureMixin, see below:\n    //\n    // applyMixinsWithoutProperties(FadingMeshBasicMaterial, [FadingFeatureMixin]);\n    // applyMixinsWithoutProperties(ExtrudionMeshBasicMaterial, [ExtrusionFeatureMixin]);\n    //\n    // Mixin declarations start ---------------------------------------------------------\n\n    get fadeNear(): number {\n        return FadingFeature.DEFAULT_FADE_NEAR;\n    }\n\n    set fadeNear(value: number) {\n        // to be overridden\n    }\n\n    get fadeFar(): number {\n        return FadingFeature.DEFAULT_FADE_FAR;\n    }\n\n    set fadeFar(value: number) {\n        // to be overridden\n    }\n\n    get extrusionRatio(): number {\n        return ExtrusionFeatureDefs.DEFAULT_RATIO_MAX;\n    }\n\n    set extrusionRatio(value: number) {\n        // to be overridden\n    }\n\n    get displacementMap(): THREE.Texture | null {\n        return null;\n    }\n\n    set displacementMap(value: THREE.Texture | null) {\n        // to be overridden\n    }\n\n    setDisplacementMap(value: THREE.Texture | null) {\n        // to be overridden\n    }\n\n    protected addFadingProperties(): void {\n        // to be overridden\n    }\n\n    protected applyFadingParameters(params?: FadingFeatureParameters) {\n        // to be overridden\n    }\n\n    protected copyFadingParameters(source: FadingFeature) {\n        // to be overridden\n    }\n\n    protected addExtrusionProperties(): void {\n        // to be overridden\n    }\n\n    protected applyExtrusionParameters(params?: ExtrusionFeatureParameters) {\n        // to be overridden\n    }\n\n    protected copyExtrusionParameters(source: FadingFeature) {\n        // to be overridden\n    }\n\n    protected addDisplacementProperties(): void {\n        // to be overridden\n    }\n\n    protected applyDisplacementParameters(params?: DisplacementFeatureParameters) {\n        // to be overridden\n    }\n\n    protected copyDisplacementParameters(source: DisplacementFeature) {\n        // to be overridden\n    }\n    // Mixin declarations end -----------------------------------------------------------\n}\n\nexport class MapMeshDepthMaterial extends THREE.MeshDepthMaterial implements ExtrusionFeature {\n    constructor(params?: THREE.MeshDepthMaterialParameters & ExtrusionFeatureParameters) {\n        super(params);\n\n        ExtrusionFeature.patchGlobalShaderChunks();\n\n        this.addExtrusionProperties();\n\n        // We need to set these to false, because otherwise three.js complains that there are\n        // outputs of the vertex shader not used in the pixel shader, the properties in question\n        // are `vExtrusionRatio` and `vExtrusionAxis`.\n        this.applyExtrusionParameters({ ...params, zFightingWorkaround: false });\n    }\n\n    // Only here to make the compiler happy, these methods will be overriden: The actual\n    // implementations are those in{@link ExtrusionFeatureMixin}, see below:\n    //\n    // applyMixinsWithoutProperties(...);\n    //\n\n    // Mixin declarations start ---------------------------------------------------------\n    get extrusionRatio(): number {\n        return ExtrusionFeatureDefs.DEFAULT_RATIO_MAX;\n    }\n\n    set extrusionRatio(value: number) {\n        // to be overridden\n    }\n\n    protected addExtrusionProperties(): void {\n        // to be overridden\n    }\n\n    protected applyExtrusionParameters(params?: ExtrusionFeatureParameters) {\n        // to be overridden\n    }\n\n    protected copyExtrusionParameters(source: FadingFeature) {\n        // to be overridden\n    }\n    // Mixin declarations end -----------------------------------------------------------\n}\n\n/**\n * Subclass of THREE.MeshStandardMaterial. Adds new properties required for `fadeNear` and\n * `fadeFar`. In addition to the new properties (which fill respective uniforms), it is also\n * required to update the material in their objects `onBeforeRender` and `OnAfterRender` calls,\n * where their flag `transparent` is set and the internal fadeNear/fadeFar values are updated to\n * world space distances.\n *\n * @see [[Tile#addRenderHelper]]\n */\nexport class MapMeshStandardMaterial\n    extends THREE.MeshStandardMaterial\n    implements FadingFeature, ExtrusionFeature, DisplacementFeature {\n    uniformsNeedUpdate?: boolean;\n\n    /**\n     * Constructs a new `FadingMeshStandardMaterial`.\n     *\n     * @param params - `FadingMeshStandardMaterial` parameters.\n     */\n    constructor(\n        params?: THREE.MeshStandardMaterialParameters &\n            FadingFeatureParameters &\n            ExtrusionFeatureParameters &\n            ShadowFeatureParameters\n    ) {\n        super(params);\n\n        FadingFeature.patchGlobalShaderChunks();\n\n        this.addFadingProperties();\n        this.applyFadingParameters(params);\n\n        ExtrusionFeature.patchGlobalShaderChunks();\n\n        this.addExtrusionProperties();\n        this.applyExtrusionParameters({ ...params, zFightingWorkaround: true });\n\n        if (params?.removeDiffuseLight === true) {\n            this.onBeforeCompile = chainCallbacks(this.onBeforeCompile, shaderParameters => {\n                const shader = shaderParameters as THREE.Shader;\n                shader.fragmentShader = THREE.ShaderChunk.meshphysical_frag.replace(\n                    \"#include <lights_physical_pars_fragment>\",\n                    simpleLightingShadowChunk\n                );\n            });\n        }\n    }\n\n    // overrides with THREE.js base classes are not recognized by tslint.\n    clone(): this {\n        return new MapMeshStandardMaterial().copy(this);\n    }\n\n    // overrides with THREE.js base classes are not recognized by tslint.\n    copy(source: this): any {\n        super.copy(source);\n        this.copyFadingParameters(source);\n        this.copyExtrusionParameters(source);\n        return this;\n    }\n\n    // Only here to make the compiler happy, these methods will be overriden: The actual\n    // implementations are those in FadingFeatureMixin and ExtrusionFeatureMixin, see below:\n    //\n    // applyMixinsWithoutProperties(FadingMeshBasicMaterial, [FadingFeatureMixin]);\n    // applyMixinsWithoutProperties(ExtrudionMeshBasicMaterial, [ExtrusionFeatureMixin]);\n    //\n    // Mixin declarations start ---------------------------------------------------------\n\n    get fadeNear(): number {\n        return FadingFeature.DEFAULT_FADE_NEAR;\n    }\n\n    set fadeNear(value: number) {\n        // to be overridden\n    }\n\n    get fadeFar(): number {\n        return FadingFeature.DEFAULT_FADE_FAR;\n    }\n\n    set fadeFar(value: number) {\n        // to be overridden\n    }\n\n    get extrusionRatio(): number {\n        return ExtrusionFeatureDefs.DEFAULT_RATIO_MAX;\n    }\n\n    set extrusionRatio(value: number) {\n        // to be overridden\n    }\n\n    /**\n     * This is needed to simplify the lighting calculation, currently there is no support for\n     * switching this at runtime. It is required here to be a property because the parameters\n     * are applied to this material, and if this isn't here, three.js will complain that the\n     * property is missing.\n     * @internal\n     */\n    get removeDiffuseLight(): boolean {\n        return false;\n    }\n\n    /** @internal */\n    set removeDiffuseLight(val: boolean) {\n        // Stays empty.\n    }\n\n    protected addFadingProperties(): void {\n        // to be overridden\n    }\n\n    protected applyFadingParameters(params?: FadingFeatureParameters) {\n        // to be overridden\n    }\n\n    protected copyFadingParameters(source: FadingFeature) {\n        // to be overridden\n    }\n\n    protected addExtrusionProperties(): void {\n        // to be overridden\n    }\n\n    protected applyExtrusionParameters(params?: ExtrusionFeatureParameters) {\n        // to be overridden\n    }\n\n    protected copyExtrusionParameters(source: FadingFeature) {\n        // to be overridden\n    }\n    // Mixin declarations end -----------------------------------------------------------\n}\n\n/**\n * Finish the classes MapMeshBasicMaterial and MapMeshStandardMaterial by assigning them the actual\n * implementations of the mixed in functions.\n */\napplyMixinsWithoutProperties(MapMeshBasicMaterial, [FadingFeatureMixin]);\napplyMixinsWithoutProperties(MapMeshStandardMaterial, [FadingFeatureMixin]);\napplyMixinsWithoutProperties(MapMeshBasicMaterial, [ExtrusionFeatureMixin]);\napplyMixinsWithoutProperties(MapMeshStandardMaterial, [ExtrusionFeatureMixin]);\napplyMixinsWithoutProperties(MapMeshDepthMaterial, [ExtrusionFeatureMixin]);\napplyMixinsWithoutProperties(MapMeshBasicMaterial, [DisplacementFeatureMixin]);\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace ExtrusionFeatureDefs {\n    /**\n     * Minimum ratio value for extrusion effect\n     */\n    export const DEFAULT_RATIO_MIN: number = 0.0;\n    /**\n     * Maximum ratio value for extrusion effect\n     */\n    export const DEFAULT_RATIO_MAX: number = 1;\n\n    /**\n     * Buildings height used whenever no height-data is present or height is very small.\n     *\n     * Used to avoid z-fighting between ground plane and building.\n     */\n    export const MIN_BUILDING_HEIGHT = 0.1;\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { convertFragmentShaderToWebGL2, convertVertexShaderToWebGL2 } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { getShaderMaterialDefine, setShaderMaterialDefine } from \"./Utils\";\n\n/**\n * [[RawShaderMaterial]] parameters.\n */\nexport interface RendererMaterialParameters {\n    rendererCapabilities: THREE.WebGLCapabilities;\n}\n\nexport interface RawShaderMaterialParameters\n    extends RendererMaterialParameters,\n        THREE.ShaderMaterialParameters {}\n\n/**\n * Base class for all raw shader materials. Ensures WebGL2 compatibility for WebGL1 shaders.\n */\nexport class RawShaderMaterial extends THREE.RawShaderMaterial {\n    /**\n     * The constructor of `RawShaderMaterial`.\n     *\n     * @param params - `RawShaderMaterial` parameters.  Always required except when cloning\n     * another material.\n     */\n    constructor(params?: RawShaderMaterialParameters) {\n        const isWebGL2 = params?.rendererCapabilities.isWebGL2 === true;\n\n        const shaderParams: THREE.ShaderMaterialParameters | undefined = params\n            ? {\n                  ...params,\n                  glslVersion: isWebGL2 ? THREE.GLSL3 : THREE.GLSL1,\n                  vertexShader:\n                      isWebGL2 && params.vertexShader\n                          ? convertVertexShaderToWebGL2(params.vertexShader)\n                          : params.vertexShader,\n                  fragmentShader:\n                      isWebGL2 && params.fragmentShader\n                          ? convertFragmentShaderToWebGL2(params.fragmentShader)\n                          : params.fragmentShader\n              }\n            : undefined;\n        // Remove properties that are not in THREE.ShaderMaterialParameters, otherwise THREE.js\n        // will log warnings.\n        if (shaderParams) {\n            delete (shaderParams as any).rendererCapabilities;\n        }\n        super(shaderParams);\n        this.invalidateFog();\n        this.setOpacity(shaderParams?.opacity);\n    }\n\n    invalidateFog() {\n        if (this.defines !== undefined && this.fog !== getShaderMaterialDefine(this, \"USE_FOG\")) {\n            setShaderMaterialDefine(this, \"USE_FOG\", this.fog);\n        }\n    }\n\n    /**\n     * To set the material's opacity property value and also update the opacity value of the uniforms if needed.\n     * @param opacity If undefined, the value is not set\n     */\n    setOpacity(opacity?: number) {\n        if (opacity !== undefined) {\n            // The base constructor may set the opacity property before,\n            // therefore we don't check unequality of the current and new opacity value:\n            this.opacity = opacity;\n            if (this.uniforms?.opacity) {\n                this.uniforms.opacity.value = opacity;\n            }\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport * as THREE from \"three\";\n\n/**\n * `SepiaShader`.\n */\nexport const SepiaShader: THREE.Shader = {\n    uniforms: {\n        tDiffuse: { value: null },\n        amount: { value: 1.0 }\n    },\n    vertexShader: `\n        varying vec2 vUv;\n        void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }`,\n    fragmentShader: `\n        uniform float amount;\n        uniform sampler2D tDiffuse;\n        varying vec2 vUv;\n        void main() {\n            vec4 color = texture2D( tDiffuse, vUv );\n            vec3 c = color.rgb;\n            color.r = dot( c, vec3( 1.0 - 0.607 * amount, 0.769 * amount, 0.189 * amount ) );\n            color.g = dot( c, vec3( 0.349 * amount, 1.0 - 0.314 * amount, 0.168 * amount ) );\n            color.b = dot( c, vec3( 0.272 * amount, 0.534 * amount, 1.0 - 0.869 * amount ) );\n            gl_FragColor = vec4( min( vec3( 1.0 ), color.rgb ), color.a );\n        }`\n};\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport default {\n    atmosphere_vertex_utils: `\n\n    const float RayleighScaleDepth = 0.25;\n\n    struct AtmosphereColor\n    {\n        vec3 mie;\n        vec3 rayleigh;\n    };\n\n    float scale(float cosAngle)\n    {\n        float x = 1.0 - cosAngle;\n        return RayleighScaleDepth  * exp(-0.00287 + x*(0.459 + x*(3.83 + x*(-6.80 + x*5.25))));\n    }\n\n    float getNearSphereIntersect(vec3 v3Pos, vec3 v3Ray, float fCameraHeight2, float fOuterRadius2) {\n        // Solve simple square equation for the x0 (first point of intersection).\n#if defined(IMPROVE_INTERSECT_PRECISION)\n        // To improve precision instead of simple projection: b = 2.0 * dot(vPos, v3Ray),\n        // we change the equation that gives better results especially around the poles.\n        float fB = 2.0 * length(v3Pos) * dot(normalize(v3Pos), v3Ray);\n#else\n        float fB = 2.0 * dot(v3Pos, v3Ray);\n#endif\n        float fC = fCameraHeight2 - fOuterRadius2;\n        // det = b^2 - 4*a*c, where a = 1\n        float fDet = max(0.0, fB * fB - 4.0 * fC);\n        // Intersection points distances are defined as follows:\n        // x0 = (-b - sqrt(det)) / 2*a ^ x1 = (-b + sqrt(det)) / 2*a\n        // we search for x0:\n        return 0.5 * (-fB - sqrt(fDet));\n    }\n\n    float getFarSphereIntersect(vec3 v3Pos, vec3 v3Ray, float fCameraHeight2, float fOuterRadius2) {\n        // Solve simple square equation for the x1 (second point of intersection).\n#if defined(IMPROVE_INTERSECT_PRECISION)\n        float fB = 2.0 * length(v3Pos) * dot(normalize(v3Pos), v3Ray);\n#else\n        float fB = 2.0 * dot(v3Pos, v3Ray);\n#endif\n        float fC = fCameraHeight2 - fOuterRadius2;\n        // det = b^2 - 4*a*c, where a = 1\n        float fDet = max(0.0, fB * fB - 4.0 * fC);\n        // Compute second intersection distance:\n        // x1 = (-b + sqrt(det)) / 2*a\n        return 0.5 * (-fB + sqrt(fDet));\n    }\n    `,\n    atmosphere_fragment_utils: `\n\n    // Branch free RGB to HSV conversion.\n    // Based on article:\n    // http://lolengine.net/blog/2013/01/13/fast-rgb-to-hsv\n    // and optimized OpenGL SL algorithm\n    // http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-glsl\n    vec3 rgb2Hsv(vec3 c)\n    {\n        const vec4 RGB_HSV_CONV = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n        // Ternary operator may be used explicitly if compiler can use fast conditional move.\n        // vec4 p = c.g < c.b ? vec4(c.bg, RGB_HSV_CONV.wz) : vec4(c.gb, RGB_HSV_CONV.xy);\n        vec4 p = mix(vec4(c.bg, RGB_HSV_CONV.wz), vec4(c.gb, RGB_HSV_CONV.xy), step(c.b, c.g));\n        // vec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\n        vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n        float d = q.x - min(q.w, q.y);\n        float e = 1.0e-10;\n        return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n    }\n\n    // Branch free HSV to RGB conversion\n    vec3 hsv2Rgb(vec3 c)\n    {\n        const vec4 HSV_RGB_CONV = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n        vec3 p = abs(fract(c.xxx + HSV_RGB_CONV.xyz) * 6.0 - HSV_RGB_CONV.www);\n        return c.z * mix(HSV_RGB_CONV.xxx, clamp(p - HSV_RGB_CONV.xxx, 0.0, 1.0), c.y);\n    }\n\n    vec3 correctExposure(vec3 rgb, float exposure)\n    {\n        const vec3 fullColor = vec3(1.0);\n        return fullColor - exp(-exposure * rgb);\n    }\n\n    vec3 correctColor(vec3 rgb, vec3 hsvShift)\n    {\n        const float e = 0.0000001;\n        // Convert rgb color to hsv\n        vec3 hsv = rgb2Hsv(rgb);\n        // Shift hue value with angle wrapping\n        hsv.x = mod(hsv.x + hsvShift.x, 1.0);\n        // Shift and clamp saturation\n        hsv.y = clamp(hsv.y + hsvShift.y, 0.0, 1.0);\n        // Change value if it is significant (greater then epsilon)\n        hsv.z = hsv.z > e ? clamp(hsv.z + hsvShift.z, 0.0, 1.0) : 0.0;\n        // Convert shifted hsv back to rgb\n        return hsv2Rgb(hsv);\n    }\n    `\n};\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ExtrusionFeatureDefs } from \"../MapMeshMaterialsDefs\";\n\nconst MIN_BUILDING_HEIGHT_SQUARED =\n    ExtrusionFeatureDefs.MIN_BUILDING_HEIGHT * ExtrusionFeatureDefs.MIN_BUILDING_HEIGHT;\n\nexport default {\n    extrusion_pars_vertex: `\n// Add define so we can check for it in the outline effect (see Outline.ts).\n#define HAS_EXTRUSION_PARS_VERTEX\n// Extrusion axis (xyz: vector, w: factor).\nattribute vec4 extrusionAxis;\nuniform float extrusionRatio;\n#ifdef FLAT_SHADED\nvarying vec4 vExtrusionAxis;\n#endif\n#ifdef ZFIGHTING_WORKAROUND\nvarying float vExtrusionRatio;\n#endif\n`,\n    extrusion_vertex: `\n#define HAS_EXTRUSION_VERTEX\n#ifdef ZFIGHTING_WORKAROUND\n// Cancel extrusionRatio (meaning, force to 1) if extrusionAxisLen < MIN_BUILDING_HEIGHT.\nconst float MIN_BUILDING_HEIGHT_SQUARED = ${MIN_BUILDING_HEIGHT_SQUARED};\nfloat extrusionAxisLenSquared = dot(extrusionAxis.xyz, extrusionAxis.xyz);\nvExtrusionRatio = (extrusionAxisLenSquared < MIN_BUILDING_HEIGHT_SQUARED) ? 1.0 : extrusionRatio;\n#else\nfloat vExtrusionRatio = extrusionRatio;\n#endif\ntransformed = transformed + extrusionAxis.xyz * (vExtrusionRatio - 1.0);\n#ifdef FLAT_SHADED\nvExtrusionAxis = vec4(normalMatrix * extrusionAxis.xyz, extrusionAxis.w);\n#endif\n`,\n    // Modified version of THREE <normal_fragment_begin> shader chunk which, for flat shaded\n    // geometries, computes the normal either with the extrusion axis or fragment derivatives based\n    // on the extrusion factor (1.0 = ceiling, 0.0 = footprint).\n    extrusion_normal_fragment_begin: `\n#ifdef FLAT_SHADED\n    // Flattened this divergent path to prevent undefined behaviour in the following derivatives\n    // functions. For more info:\n    // http://www.aclockworkberry.com/shader-derivative-functions/#Derivatives_and_branches\n\n    // Workaround for Adreno/Nexus5 not able able to do dFdx( vViewPosition ) ...\n    vec3 fdx = vec3(dFdx(vViewPosition.x), dFdx(vViewPosition.y), dFdx(vViewPosition.z));\n    vec3 fdy = vec3(dFdy(vViewPosition.x), dFdy(vViewPosition.y), dFdy(vViewPosition.z));\n    vec3 normal = cross( fdx, fdy );\n    if (vExtrusionAxis.w > 0.999999) {\n        normal = vExtrusionAxis.xyz;\n    }\n    normal = normalize(normal);\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * (float(gl_FrontFacing) * 2.0 - 1.0);\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * (float(gl_FrontFacing) * 2.0 - 1.0);\n\t\t\tbitangent = bitangent * (float(gl_FrontFacing) * 2.0 - 1.0);\n\t\t#endif\n\t#endif\n#endif\n// non perturbed normal for clearcoat among others\nvec3 geometryNormal = normal;\n`,\n    extrusion_pars_fragment: `\n#ifdef ZFIGHTING_WORKAROUND\nvarying float vExtrusionRatio;\n#else\nuniform float extrusionRatio;\n#endif\nvarying vec4 vExtrusionAxis;\n`,\n    extrusion_fragment: `\n#ifndef ZFIGHTING_WORKAROUND\nfloat vExtrusionRatio = extrusionRatio;\n#endif\ngl_FragColor.a *= smoothstep( 0.0, 0.25, vExtrusionRatio );\n`\n};\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * The shader chunks have their lines \"#ifdef USE_FADING\" commented out, because currently the\n * mesh materials use individually created shader strings based on the materials settings.\n * @see [[FadingMeshBasicMaterial]]\n **/\n\nexport default {\n    fading_pars_vertex: `\nvarying float fadingDepth;\n`,\n\n    fading_vertex: `\nfadingDepth = -mvPosition.z;\n`,\n\n    fading_pars_fragment: `\nvarying float fadingDepth;\nuniform float fadeNear;\nuniform float fadeFar;\n`,\n\n    fading_fragment: `\n\n// lerp with \"hard\" edges\n//float fadingFactor = 1.0 - clamp((fadingDepth - fadeNear) / (fadeFar - fadeNear), 0.0, 1.0);\n\n// smooth transitions\nfloat fadingFactor = smoothstep( fadeNear, fadeFar, fadingDepth );\n\ngl_FragColor.a *= 1.0 - fadingFactor;\n\n// debugging color:\n// gl_FragColor = vec4(1., fadingFactor, fadingFactor, 1.0);\n`\n};\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Lists supported line caps types/modes.\n */\nexport enum LineCapsModes {\n    CAPS_NONE = 0,\n    CAPS_SQUARE,\n    CAPS_ROUND,\n    CAPS_TRIANGLE_IN,\n    CAPS_TRIANGLE_OUT\n}\n\nexport default {\n    extrude_line_vert_func: `\nvec3 extrudeLine(\n        in vec3 vertexPosition,\n        in float linePosition,\n        in float extrusionWidth,\n        in vec4 bitangent,\n        in vec3 tangent,\n        in float tanHalfAngle,\n        inout vec2 uv\n    ) {\n    vec3 result = vertexPosition;\n    // Retrieve the angle between this segment and the previous one (stored in the bitangent w\n    // component).\n    float angle = bitangent.w;\n    // Extrude according to the angle between segments to properly render narrow joints...\n    if (angle != 0.0) {\n        result += uv.y * extrusionWidth * bitangent.xyz / cos(angle / 2.0);\n        uv.x = linePosition + uv.x * extrusionWidth * uv.y * tanHalfAngle;\n    }\n    // ... or extrude in a simple manner for segments that keep the same direction.\n    else {\n        result += uv.y * extrusionWidth * bitangent.xyz + uv.x * extrusionWidth * tangent;\n        uv.x = linePosition + uv.x * extrusionWidth;\n    }\n    uv.y *= extrusionWidth;\n    return result;\n}\n`,\n    round_edges_and_add_caps: `\n#define CAPS_NONE ${LineCapsModes.CAPS_NONE}\n#define CAPS_SQUARE ${LineCapsModes.CAPS_SQUARE}\n#define CAPS_ROUND ${LineCapsModes.CAPS_ROUND}\n#define CAPS_TRIANGLE_IN ${LineCapsModes.CAPS_TRIANGLE_IN}\n#define CAPS_TRIANGLE_OUT ${LineCapsModes.CAPS_TRIANGLE_OUT}\n\nfloat roundEdgesAndAddCaps(in vec4 coords, in vec3 range) {\n    // Compute the line's width to length ratio.\n    float widthRatio = range.y / range.x;\n\n    // Compute the inner segment distance (same for all cap mode).\n    float dist = abs(coords.y);\n    float segmentBeginMask = clamp(ceil(coords.z - coords.x), 0.0, 1.0);\n    float segmentEndMask = clamp(ceil(coords.x - coords.w), 0.0, 1.0);\n    dist = max(dist, segmentBeginMask * length(vec2((coords.x - coords.z) / widthRatio, coords.y)));\n    dist = max(dist, segmentEndMask * length(vec2((coords.x - coords.w) / widthRatio, coords.y)));\n\n    #if CAPS_MODE != CAPS_ROUND\n    // Compute the caps mask.\n    float capRangeMask = clamp(1.0 - ceil(range.z - drawRange.y), 0.0, 1.0);\n    float beginCapMask = clamp(ceil(drawRange.x - coords.x), 0.0, 1.0);\n    float endCapMask = clamp(ceil(coords.x - drawRange.y), 0.0, 1.0);\n    float capMask = capRangeMask * max(beginCapMask, endCapMask);\n\n    // Compute the outer segment distance (specific for each cap mode).\n    float capDist = max(coords.x - drawRange.y, drawRange.x - coords.x) / widthRatio;\n    #if CAPS_MODE == CAPS_NONE\n    dist = mix(dist, max(abs(coords.y), (capDist + 0.1) / 0.1), capMask);\n    #elif CAPS_MODE == CAPS_SQUARE\n    dist = mix(dist, max(abs(coords.y), capDist), capMask);\n    #elif CAPS_MODE == CAPS_TRIANGLE_OUT\n    dist = mix(dist, abs(coords.y) + capDist, capMask);\n    #elif CAPS_MODE == CAPS_TRIANGLE_IN\n    dist = mix(dist, max(abs(coords.y), (capDist - abs(coords.y)) + capDist), capMask);\n    #endif\n    #endif // CAPS_MODE != CAPS_ROUND\n\n    return dist;\n}\n`,\n    tile_clip_func: `\nvoid tileClip(vec2 tilePos, vec2 tileSize) {\n    if (tileSize.x > 0.0 && (tilePos.x < -tileSize.x / 2.0 || tilePos.x > tileSize.x / 2.0))\n        discard;\n    if (tileSize.y > 0.0 && (tilePos.y < -tileSize.y / 2.0 || tilePos.y > tileSize.y / 2.0))\n        discard;\n}\n`,\n    high_precision_vert_func: `\nvec3 subtractDblEyePos( const in vec3 pos ) {\n    vec3 t1 = positionLow - u_eyepos_lowpart;\n    vec3 e = t1 - positionLow;\n    vec3 t2 = ((-u_eyepos_lowpart - e) + (positionLow - (t1 - e))) + pos - u_eyepos;\n    vec3 high_delta = t1 + t2;\n    vec3 low_delta = t2 - (high_delta - t1);\n    return (high_delta + low_delta);\n}\n`\n};\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * This shader chunk replaces the default lighting in the standard material, the problem with this\n * is that the final pixel color is the addition of the material color and the light, this means\n * that the final map's rendered color is vastly different from that configured by the designers.\n * This chunk removes the extra highlight by providing just two colors, the material color when not\n * in shadow and a reduced color value when in shadow (currently 50% of the material's color).\n */\nexport const simpleLightingShadowChunk = `\n    struct PhysicalMaterial {\n        vec3\tdiffuseColor;\n        float\tspecularRoughness;\n        vec3\tspecularColor;\n    };\n\n    #define DEFAULT_SPECULAR_COEFFICIENT 0.04\n\n    void RE_Direct_Physical( const in IncidentLight directLight,\n        const in GeometricContext geometry,\n        const in PhysicalMaterial material,\n        inout ReflectedLight reflectedLight ) {\n        // directLight.color is the light color * shadow, internally three.js uses a step function, so\n        // this value is either the light color or black. in order to lighten up the shadows, we\n        // take add 50% of the color to grey (to give us either pure white or grey) and multiply this to\n        // the material's diffuse color.\n        #if defined(USE_SHADOWMAP)\n            reflectedLight.directDiffuse = (0.5 * directLight.color +\n                vec3(0.5,0.5,0.5)) * material.diffuseColor;\n        #else\n            reflectedLight.directDiffuse = material.diffuseColor;\n        #endif\n    }\n\n    void RE_IndirectDiffuse_Physical( const in vec3 irradiance,\n        const in GeometricContext geometry,\n        const in PhysicalMaterial material,\n        inout ReflectedLight reflectedLight ) {\n            // Disable influence of indirect light (it is handled in the RE_Direct_Physical function)\n    }\n\n    void RE_IndirectSpecular_Physical( const in vec3 radiance,\n        const in vec3 irradiance,\n        const in vec3 clearcoatRadiance,\n        const in GeometricContext geometry,\n        const in PhysicalMaterial material,\n        inout ReflectedLight reflectedLight) {\n            // Disable specular reflection of light.\n    }\n\n    #define RE_Direct               RE_Direct_Physical\n    #define RE_IndirectDiffuse      RE_IndirectDiffuse_Physical\n    #define RE_IndirectSpecular     RE_IndirectSpecular_Physical\n`;\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport * as THREE from \"three\";\n\nimport {\n    RawShaderMaterial,\n    RawShaderMaterialParameters,\n    RendererMaterialParameters\n} from \"./RawShaderMaterial\";\nimport AtmosphereShaderChunks from \"./ShaderChunks/AtmosphereChunks\";\nimport { setShaderDefine, setShaderMaterialDefine } from \"./Utils\";\n\nconst EQUATORIAL_RADIUS: number = 6378137.0;\n\n/**\n * `SkyAtmosphereShader`.\n *\n * Describes shading of atmosphere as seen from outer space.\n */\nexport const SkyAtmosphereShader: THREE.Shader = {\n    uniforms: {\n        u_eyePositionWorld: new THREE.Uniform(new THREE.Vector3()),\n        u_lightDirectionWorld: new THREE.Uniform(new THREE.Vector3(0, 1, 0)),\n        u_modelViewProjection: new THREE.Uniform(new THREE.Matrix4()),\n        // Environment settings:\n        // atmosphere inner and outer radius, camera height\n        u_atmosphereEnv: new THREE.Uniform(\n            new THREE.Vector3(\n                // Maximum inner radius\n                EQUATORIAL_RADIUS,\n                // Maximum outer radius\n                EQUATORIAL_RADIUS * 1.025,\n                // Camera height\n                0.0\n            )\n        ),\n        u_hsvCorrection: new THREE.Uniform(new THREE.Vector3(0, 0, 0)),\n\n        topColor: new THREE.Uniform(new THREE.Color(0x0077ff)),\n        bottomColor: new THREE.Uniform(new THREE.Color(0xffffff)),\n        offset: new THREE.Uniform(33.0),\n        exponent: new THREE.Uniform(0.6),\n        fogColor: new THREE.Uniform(new THREE.Color(0x0077ff)), // scene.fog.color\n        fogNear: new THREE.Uniform(new THREE.Color(0x0077ff)), // scene.fog.near\n        fogFar: new THREE.Uniform(new THREE.Color(0xffffff)) // scene.fog.far\n    },\n\n    vertexShader: `\n    precision highp float;\n    precision highp int;\n\n    attribute vec4 position;\n\n    uniform mat4 u_modelViewProjection;\n    uniform vec3 u_eyePositionWorld;\n    uniform vec3 u_lightDirectionWorld;\n\n    uniform vec3 u_atmosphereEnv; // Atmosphere inner and outer radius, camera height\n    uniform vec3 u_hsvCorrection;\n\n    const float Pi = 3.141592653589793;\n    const float Kr = 0.0025;\n    const float Kr4PI = Kr * 4.0 * Pi;\n    const float Km = 0.0015;\n    const float Km4PI = Km * 4.0 * Pi;\n    const float ESun = 15.0; // should be 15.0\n    const float KmESun = Km * ESun;\n    const float KrESun = Kr * ESun;\n    const vec3 InvWavelength = vec3(\n        5.60204474633241,  // Red = 1.0 / Math.pow(0.650, 4.0)\n        9.473284437923038, // Green = 1.0 / Math.pow(0.570, 4.0)\n        19.643802610477206); // Blue = 1.0 / Math.pow(0.475, 4.0)\n\n    const int nSamples = 2;\n    const float fSamples = 2.0;\n\n    varying vec3 v_rayleighColor;\n    varying vec3 v_mieColor;\n    varying vec3 v_vertToCamera;\n\n    ${AtmosphereShaderChunks.atmosphere_vertex_utils}\n\n    //\n    // Computes rayleight and mia atmosphere factors for sky.\n    //\n    // Code based on GPU Gems article.\n    //\n    // Author: Sean O'Neil\n    //\n    // Copyright (c) 2004 Sean O'Neil\n    //\n    // https://developer.nvidia.com/gpugems/gpugems2/part-ii-shading-lighting-and-shadows/chapter-16-accurate-atmospheric-scattering\n    //\n    // Further modifications by HERE\n    //\n    AtmosphereColor computeSkyAtmosphere(vec3 v3Pos, vec3 vLightDir)\n    {\n        // Unpack attributes\n        float fInnerRadius = u_atmosphereEnv.x;\n        float fOuterRadius = u_atmosphereEnv.y;\n        float fCameraHeight = u_atmosphereEnv.z;\n\n        // All that may be const or define(s) at further optimization:\n        float fScale = 1.0 / (fOuterRadius - fInnerRadius);\n        float fScaleOverScaleDepth = (fScale / RayleighScaleDepth);\n        float fCameraHeight2 = fCameraHeight * fCameraHeight;\n        float fOuterRadius2 = fOuterRadius * fOuterRadius;\n\n        // Get the ray from the camera to the vertex and its length (which is the far point of the ray passing through the atmosphere)\n        vec3 v3Ray = v3Pos - u_eyePositionWorld;\n        float fFar = length(v3Ray);\n        v3Ray /= fFar;\n\n    #ifdef CAMERA_IN_SPACE\n\n        // Calculate the closest intersection of the ray with the outer\n        // atmosphere, this is the first point of the ray passing through the atmosphere dome.\n        float fNear = getNearSphereIntersect(u_eyePositionWorld, v3Ray, fCameraHeight2, fOuterRadius2);\n        // Make far relative to first atmosphere intersection\n        fFar -= fNear;\n\n        // Compute the ray's starting position within the atmosphere, then\n        // calculate its scattering offset\n        vec3 v3Start = u_eyePositionWorld + v3Ray * fNear;\n\n        float fStartAngle = dot(v3Ray, v3Start) / fOuterRadius;\n        float fStartDepth = exp(-1.0 / RayleighScaleDepth );\n        float fStartOffset = fStartDepth * scale(fStartAngle);\n\n    #else // CAMERA_IN_ATMOSPHERE\n\n        // The ray starts already in atmosphere\n        vec3 v3Start = u_eyePositionWorld;\n        float height = length(v3Start);\n        float depth = exp(fScaleOverScaleDepth * (fInnerRadius - fCameraHeight));\n        float fStartAngle = dot(v3Ray, v3Start) / height;\n        float fStartOffset = depth * scale(fStartAngle);\n\n    #endif\n\n        // Initialize the scattering loop variables\n        float fSampleLength = fFar / fSamples;\n        float fScaledLength = fSampleLength * fScale;\n        vec3 v3SampleRay = v3Ray * fSampleLength;\n        vec3 v3SamplePoint = v3Start + v3SampleRay * 0.5;\n\n        // Now loop through the sample rays\n        vec3 v3BaseColor = vec3(0.0);\n        vec3 v3Attenuate = vec3(0.0);\n        for(int i=0; i < nSamples; i++)\n        {\n            float height = length(v3SamplePoint);\n            float depth = exp(fScaleOverScaleDepth * (fInnerRadius - height));\n            float fLightAngle = dot(vLightDir, v3SamplePoint) / height;\n            float fCameraAngle = dot(v3Ray, v3SamplePoint) / height;\n            float fScatter = (fStartOffset + depth * (scale(fLightAngle) - scale(fCameraAngle)));\n            v3Attenuate = exp(-fScatter * (InvWavelength * Kr4PI + Km4PI));\n            v3BaseColor += v3Attenuate * (depth * fScaledLength);\n            v3SamplePoint += v3SampleRay;\n        }\n\n        // Scale the Mie and Rayleigh colors and set up output of the function\n        AtmosphereColor color;\n        color.mie = v3BaseColor * KmESun;\n        color.rayleigh = v3BaseColor * (InvWavelength * KrESun);\n        return color;\n    }\n\n    void main(void)\n    {\n        #ifdef DYNAMIC_LIGHT\n            vec3 vLightDir = u_lightDirectionWorld;\n        #else\n            vec3 vLightDir = u_eyePositionWorld;\n        #endif\n        vLightDir = normalize(vLightDir);\n\n        AtmosphereColor atmColor = computeSkyAtmosphere(position.xyz, vLightDir);\n        v_mieColor = atmColor.mie;\n        v_rayleighColor = atmColor.rayleigh;\n        v_vertToCamera = u_eyePositionWorld - position.xyz;\n\n        gl_Position = u_modelViewProjection * position;\n    }\n    `,\n\n    fragmentShader: `\n    // Because of harsh light distribution the exposure correction is always enabled for the sky.\n    #define CORRECT_EXPOSURE 1\n\n    precision highp float;\n    precision highp int;\n\n    #ifdef CORRECT_COLOR\n    uniform vec3 u_hsvCorrection; // Hue, saturation, brightness\n    #endif\n\n    uniform vec3 u_atmosphereEnv; // Atmosphere inner and outer radius, camera height\n    uniform vec3 u_eyePositionWorld;\n    uniform vec3 u_lightDirectionWorld;\n\n    const float g = -0.95;\n    const float g2 = g * g;\n\n    varying vec3 v_rayleighColor;\n    varying vec3 v_mieColor;\n    varying vec3 v_vertToCamera;\n\n    ${AtmosphereShaderChunks.atmosphere_fragment_utils}\n\n    void main(void)\n    {\n        float fInnerRadius = u_atmosphereEnv.x;\n        float fOuterRadius = u_atmosphereEnv.y;\n        float fCameraHeight = u_atmosphereEnv.z;\n\n        #ifdef DYNAMIC_LIGHT\n            vec3 vLightDir = u_lightDirectionWorld;\n            // Alter alpha based on time of day (0.0 = night , 1.0 = day)\n            float fNightAlpha = clamp(dot(normalize(u_eyePositionWorld), vLightDir), 0.0, 1.0);\n        #else\n            vec3 vLightDir = u_eyePositionWorld;\n            float fNightAlpha = 1.0;\n        #endif\n        vLightDir = normalize(vLightDir);\n\n        // NOTE:\n        // For better precision normalization may be added on fragment (for mobile devices)\n        // while in vertex shader may be left un-normalized\n        // dot(vLightDir, normalize(v_vertToCamera)) / length(v_vertToCamera);\n        float fCosAngle = dot(vLightDir, v_vertToCamera) / length(v_vertToCamera);\n        float fRayleighPhase = 0.75 * (1.0 + fCosAngle * fCosAngle);\n        float fMiePhase = 1.5 * ((1.0 - g2) / (2.0 + g2)) * (1.0 + fCosAngle * fCosAngle) / pow(1.0 + g2 - 2.0 * g * fCosAngle, 1.5);\n\n        vec3 cRgb = fRayleighPhase * v_rayleighColor + fMiePhase * v_mieColor;\n\n        // Sky produces very harsh lighting effect so exposure correction is always enabled.\n    #if !defined(HDR_FRAME_BUFFER) && defined(CORRECT_EXPOSURE)\n        // Exposure factor may be exposed to uniform variable.\n        cRgb = correctExposure(cRgb, 2.0);\n    #endif\n\n    #ifdef CORRECT_COLOR\n        cRgb = correctColor(cRgb, u_hsvCorrection);\n    #endif\n\n        // Alter alpha based on how close the viewer is to the ground (1.0 = on ground, 0.0 = at edge of atmosphere)\n        float fAtmosphereAlpha = clamp((fOuterRadius - fCameraHeight) /\n            (fOuterRadius - fInnerRadius), 0.0, 1.0);\n        fAtmosphereAlpha *= pow(fNightAlpha, 0.5);\n\n        gl_FragColor = vec4(cRgb, mix(cRgb.b, 1.0, fAtmosphereAlpha));\n    }\n    `\n};\n\nexport interface SkyAtmosphereMaterialParameters extends RendererMaterialParameters {}\n\nexport class SkyAtmosphereMaterial extends RawShaderMaterial {\n    /**\n     * Constructs a new `SkyAtmosphereMaterial`.\n     *\n     * @param params - `SkyAtmosphereMaterial` parameters. Always required except when cloning\n     * another material.\n     */\n    constructor(params?: SkyAtmosphereMaterialParameters) {\n        let shaderParams: RawShaderMaterialParameters | undefined;\n\n        if (params) {\n            // Import shader chunks\n            const defines: { [key: string]: any } = {};\n            defines.CAMERA_IN_SPACE = \"\";\n\n            shaderParams = {\n                name: \"SkyAtmosphereMaterial\",\n                vertexShader: SkyAtmosphereShader.vertexShader,\n                fragmentShader: SkyAtmosphereShader.fragmentShader,\n                uniforms: SkyAtmosphereShader.uniforms,\n                transparent: true,\n                depthTest: true,\n                depthWrite: false,\n                side: THREE.BackSide,\n                blending: THREE.NormalBlending,\n                fog: false,\n                rendererCapabilities: params.rendererCapabilities\n            };\n        }\n        super(shaderParams);\n    }\n\n    setDynamicLighting(enableLighting: boolean) {\n        setShaderMaterialDefine(this, \"DYNAMIC_LIGHT\", enableLighting);\n    }\n\n    /**\n     * Set maximum outer radius of atmosphere.\n     *\n     * @default [[EarthConstants.EQUATORIAL_RADIUS]] * 1.025\n     */\n    set outerRadius(radius: number) {\n        this.uniforms.u_atmosphereEnv.value.y = radius;\n    }\n\n    get outerRadius(): number {\n        return this.uniforms.u_atmosphereEnv.value.y;\n    }\n\n    /**\n     * Set maximum inner radius of atmosphere.\n     *\n     * @default [[EarthConstants.EQUATORIAL_RADIUS]].\n     */\n    set innerRadius(radius: number) {\n        this.uniforms.u_atmosphereEnv.value.x = radius;\n    }\n\n    get innerRadius(): number {\n        return this.uniforms.u_atmosphereEnv.value.x;\n    }\n\n    /**\n     * Updates the uniform data of a material used to render an atmosphere.\n     *\n     * This includes only uniforms that may change frame by frame, other uniforms are\n     * accessed with convenient material setters and getters.\n     *\n     * @param shaderMaterial - Material which uniforms will be updated.\n     * @param matrixWorldInverse - Inverse of world matrix used to position the atmosphere dome.\n     * @param lightDirection - The light directional vector in world space.\n     * @param camera - Camera used in rendering.\n     */\n    updateUniforms(\n        shaderMaterial: THREE.ShaderMaterial,\n        object: THREE.Object3D,\n        camera: THREE.Camera,\n        lightDirection: THREE.Vector3\n    ): void {\n        const cameraInfo = this.getCameraInfo(object, camera);\n\n        if (shaderMaterial !== undefined && shaderMaterial.isMaterial) {\n            if (\n                shaderMaterial.uniforms &&\n                shaderMaterial.uniforms.u_atmosphereEnv &&\n                shaderMaterial.uniforms.u_hsvCorrection &&\n                shaderMaterial.uniforms.u_eyePositionWorld &&\n                shaderMaterial.uniforms.u_modelViewProjection &&\n                shaderMaterial.uniforms.u_lightDirectionWorld\n            ) {\n                const eyePos = cameraInfo.eyePos;\n                const mvp = cameraInfo.modelViewProjection;\n                const cameraHeight = cameraInfo.eyeHeight;\n\n                shaderMaterial.uniforms.u_eyePositionWorld.value.copy(eyePos);\n                shaderMaterial.uniforms.u_modelViewProjection.value.copy(mvp);\n\n                shaderMaterial.uniforms.u_atmosphereEnv.value.z = cameraHeight;\n                shaderMaterial.uniforms.u_lightDirectionWorld.value = lightDirection.clone();\n\n                const cameraInSpace = cameraHeight > this.outerRadius;\n                const needsUpdate0 = setShaderDefine(\n                    shaderMaterial.defines,\n                    \"CAMERA_IN_SPACE\",\n                    cameraInSpace\n                );\n                const needsUpdate1 = setShaderDefine(\n                    shaderMaterial.defines,\n                    \"CAMERA_IN_ATMOSPHERE\",\n                    !cameraInSpace\n                );\n                shaderMaterial.needsUpdate =\n                    shaderMaterial.needsUpdate || needsUpdate0 || needsUpdate1;\n            } else {\n                throw Error(\"Atmosphere material has missing uniforms\");\n            }\n        } else {\n            throw Error(\"Wrong object used, only Material objects are supported\");\n        }\n    }\n\n    /*\n     * Calculate camera position used in vertex shader of atmosphere materials.\n     *\n     * @param object -\n     * @param camera - Camera used to get the eye position.\n     */\n    private getCameraInfo(\n        object: THREE.Object3D,\n        camera: THREE.Camera,\n        reverse: boolean = false\n    ): { modelViewProjection: THREE.Matrix4; eyePos: THREE.Vector3; eyeHeight: number } {\n        if (reverse) {\n            const modelMatrix = new THREE.Matrix4().identity();\n            const viewMatrix = new THREE.Matrix4().copy(object.matrixWorld).invert().transpose();\n            const projectionMatrix = camera.projectionMatrix;\n\n            const mvpMatrix = new THREE.Matrix4();\n            // MVP = Projection * View * Model\n            mvpMatrix.multiplyMatrices(viewMatrix, modelMatrix);\n            mvpMatrix.multiplyMatrices(projectionMatrix, mvpMatrix);\n\n            const eyePos = new THREE.Vector3();\n            object.getWorldPosition(eyePos);\n            const objectPos = new THREE.Vector3();\n            camera.getWorldPosition(objectPos);\n            const eyeHeight = objectPos.distanceTo(eyePos);\n            return {\n                modelViewProjection: mvpMatrix,\n                eyePos,\n                eyeHeight\n            };\n        } else {\n            const modelMatrix = object.matrixWorld;\n            const viewMatrix = camera.matrixWorldInverse;\n            const projectionMatrix = camera.projectionMatrix;\n\n            const mvpMatrix = new THREE.Matrix4();\n            // MVP = Projection * View * Model\n            mvpMatrix.multiplyMatrices(viewMatrix, modelMatrix);\n            mvpMatrix.multiplyMatrices(projectionMatrix, mvpMatrix);\n\n            const eyePos = new THREE.Vector3();\n            camera.getWorldPosition(eyePos);\n            const objectPos = new THREE.Vector3();\n            object.getWorldPosition(objectPos);\n            const eyeHeight = objectPos.distanceTo(eyePos);\n            // Normally we would return simply camera position, but since camera is not moving in\n            // the globe view only the world, we need to calculate eye relative to object position.\n            eyePos.sub(objectPos);\n            return {\n                modelViewProjection: mvpMatrix,\n                eyePos,\n                eyeHeight\n            };\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LineCaps, LineDashes } from \"@here/harp-datasource-protocol\";\nimport * as THREE from \"three\";\n\nimport { DisplacementFeature, DisplacementFeatureParameters } from \"./DisplacementFeature\";\nimport { FadingFeature, FadingFeatureParameters } from \"./MapMeshMaterials\";\nimport {\n    RawShaderMaterial,\n    RawShaderMaterialParameters,\n    RendererMaterialParameters\n} from \"./RawShaderMaterial\";\nimport linesShaderChunk, { LineCapsModes } from \"./ShaderChunks/LinesChunks\";\nimport {\n    enforceBlending,\n    getShaderMaterialDefine,\n    setShaderDefine,\n    setShaderMaterialDefine\n} from \"./Utils\";\n\nconst LineCapsDefinesMapping: { [key in LineCaps]: number } = {\n    None: LineCapsModes.CAPS_NONE,\n    Square: LineCapsModes.CAPS_SQUARE,\n    Round: LineCapsModes.CAPS_ROUND,\n    TriangleIn: LineCapsModes.CAPS_TRIANGLE_IN,\n    TriangleOut: LineCapsModes.CAPS_TRIANGLE_OUT\n};\n\nconst DefinesLineCapsMapping: { [key: number]: LineCaps } = Object.keys(\n    LineCapsDefinesMapping\n).reduce((r, lineCapsName) => {\n    const defineKey = lineCapsName as keyof typeof LineCapsDefinesMapping;\n    const defineValue: number = LineCapsDefinesMapping[defineKey];\n    r[defineValue] = defineKey;\n    return r;\n}, ({} as any) as { [key: number]: LineCaps });\n\nexport enum LineDashesModes {\n    DASHES_SQUARE = 0,\n    DASHES_ROUND,\n    DASHES_DIAMOND\n}\n\nconst LineDashesDefinesMapping: { [key in LineDashes]: number } = {\n    Square: LineDashesModes.DASHES_SQUARE,\n    Round: LineDashesModes.DASHES_ROUND,\n    Diamond: LineDashesModes.DASHES_DIAMOND\n};\n\nconst DefinesLineDashesMapping: { [key: number]: LineDashes } = Object.keys(\n    LineDashesDefinesMapping\n).reduce((r, lineDashesName) => {\n    const defineKey = lineDashesName as keyof typeof LineDashesDefinesMapping;\n    const defineValue: number = LineDashesDefinesMapping[defineKey];\n    r[defineValue] = defineKey;\n    return r;\n}, ({} as any) as { [key: number]: LineDashes });\n\n/**\n * The vLength contains the actual line length, it's needed for the creation of line caps by\n * detecting line ends. `vLength == vExtrusionCoord.x + lineWidth * 2`\n */\n/**\n * The vExtrusionStrength relies on the edges of the lines. Represents how far the current point was\n * extruded on the edges because of the current angle. Needed for preventing line caps artifacts on\n * sharp line edges. For example, on sharp edges, some vertices can be extruded much further than\n * the full line length.\n */\n\nconst tmpColor = new THREE.Color();\nconst vertexSource: string = `\n#define SEGMENT_OFFSET 0.1\n\nattribute vec3 extrusionCoord;\nattribute vec3 position;\nattribute vec4 biTangent;\nattribute vec3 tangent;\nattribute vec2 uv;\nattribute vec3 normal;\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float extrusionWidth;\nuniform float outlineWidth;\nuniform float offset;\nuniform vec2 drawRange;\n\n#ifdef USE_DISPLACEMENTMAP\nuniform sampler2D displacementMap;\n#endif\n\n#ifdef USE_TILE_CLIP\nvarying vec3 vPosition;\n#endif\nvarying vec3 vRange;\nvarying vec4 vCoords;\n#ifdef USE_COLOR\nattribute vec3 color;\nvarying vec3 vColor;\n#endif\n\n#ifdef USE_FADING\n#include <fading_pars_vertex>\n#endif\n\n#include <fog_pars_vertex>\n\n#include <extrude_line_vert_func>\n\nvoid main() {\n    // Calculate the segment.\n    vec2 segment = abs(extrusionCoord.xy) - SEGMENT_OFFSET;\n    float segmentPos = sign(extrusionCoord.x) / 2.0 + 0.5;\n\n    // Calculate the vertex position inside the line (segment) and extrusion direction and factor.\n    float linePos = mix(segment.x, segment.y, segmentPos);\n    vec2 extrusionDir = sign(extrusionCoord.xy);\n    // Precompute to avoid computing multiple times\n    float tanHalfAngle = tan(biTangent.w / 2.0);\n    float extrusionFactor = extrusionDir.y * tanHalfAngle;\n\n    // Calculate the extruded vertex position (and scale the extrusion direction).\n    vec3 pos = extrudeLine(\n        position, linePos, extrusionWidth + outlineWidth, biTangent, tangent, tanHalfAngle,\n        extrusionDir);\n\n    // Store the normalized extrusion coordinates in vCoords (with their ranges in vRange).\n    vRange = vec3(extrusionCoord.z, extrusionWidth, extrusionFactor);\n    vCoords = vec4(extrusionDir / vRange.xy, segment / vRange.x);\n\n    // Adjust the segment to fit the drawRange.\n    float capDist = (extrusionWidth + outlineWidth) / extrusionCoord.z;\n    if ((vCoords.w + capDist) < drawRange.x || (vCoords.z - capDist) > drawRange.y) {\n        vCoords.zw += 1.0;\n    }\n    if (vCoords.z < drawRange.x) {\n        vCoords.zw += vec2(drawRange.x - vCoords.z, 0.0);\n    }\n    if (vCoords.w > drawRange.y) {\n        vCoords.zw -= vec2(0.0, vCoords.w - drawRange.y);\n    }\n\n    // Transform position.\n    #ifdef USE_DISPLACEMENTMAP\n    pos += normalize( normal ) * texture2D( displacementMap, uv ).x;\n    #endif\n\n    // Shift the line based on the offset, where the bitangent is the cross product of the average\n    // of the two direction vectors (the previous and next segment directions) and the normal of\n    // the line (facing into the sky). The w component is the angle between the two segments.\n    // Note, we need to take the angle into consideration, so we use trigonometry to calculate how\n    // much we need to extend the offset. Note, orthough this looks complicated we are doing this\n    // in the vertex shader, so it should not cause a performance issue.\n    pos += biTangent.xyz * offset * sqrt(1.0 + pow(abs(tanHalfAngle), 2.0));\n\n    vec4 mvPosition = modelViewMatrix * vec4(pos, 1.0);\n    gl_Position = projectionMatrix * mvPosition;\n\n    // Pass extruded position to fragment shader.\n    #ifdef USE_TILE_CLIP\n    vPosition = pos;\n    #endif\n\n    #ifdef USE_COLOR\n    // Pass vertex color to fragment shader.\n    vColor = color;\n    #endif\n\n    #ifdef USE_FADING\n    #include <fading_vertex>\n    #endif\n\n    #include <fog_vertex>\n}`;\n\nconst fragmentSource: string = `\nprecision highp float;\nprecision highp int;\n\nuniform vec3 diffuseColor;\nuniform vec3 outlineColor;\nuniform float opacity;\nuniform float extrusionWidth;\nuniform float outlineWidth;\nuniform vec2 tileSize;\nuniform vec2 drawRange;\n\n#ifdef USE_DASHED_LINE\nuniform float dashSize;\nuniform float gapSize;\nuniform vec3 dashColor;\n\n#define DASHES_SQUARE ${LineDashesModes.DASHES_SQUARE}\n#define DASHES_ROUND ${LineDashesModes.DASHES_ROUND}\n#define DASHES_DIAMOND ${LineDashesModes.DASHES_DIAMOND}\n#endif\n\n#ifdef USE_TILE_CLIP\nvarying vec3 vPosition;\n#endif\n\nvarying vec3 vRange;\nvarying vec4 vCoords;\n#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif\n\n#include <round_edges_and_add_caps>\n#include <tile_clip_func>\n\n#ifdef USE_FADING\n#include <fading_pars_fragment>\n#endif\n\n#include <fog_pars_fragment>\n\nvoid main() {\n    float alpha = opacity;\n    vec3 outputDiffuse = diffuseColor;\n\n    #ifdef USE_TILE_CLIP\n    tileClip(vPosition.xy, tileSize);\n    #endif\n\n    // Calculate distance to center (0.0: lineCenter, 1.0: lineEdge).\n    float distToCenter = roundEdgesAndAddCaps(vCoords, vRange);\n    // Calculate distance to edge (-1.0: lineCenter, 0.0: lineEdge).\n    float distToEdge = distToCenter - (extrusionWidth + outlineWidth) / extrusionWidth;\n\n    // Decrease the line opacity by the distToEdge, making the transition steeper when the slope\n    // of distToChange increases (i.e. the line is further away).\n    float width = fwidth(distToEdge);\n\n    float s = opacity < 0.98\n        ? clamp((distToEdge + width) / (2.0 * width), 0.0, 1.0) // prefer a boxstep\n        : smoothstep(-width, width, distToEdge);\n\n    if (opacity < 0.98 && 1.0 - s < opacity) {\n        // drop the fragment when the line is using opacity.\n        discard;\n    }\n\n    alpha *= 1.0 - s;\n\n    #ifdef USE_DASHED_LINE\n    // Compute the distance to the dash origin (0.0: dashOrigin, 1.0: dashEnd, (d+g)/d: gapEnd).\n    float d = dashSize / vRange.x;\n    float g = gapSize / vRange.x;\n    float distToDashOrigin = mod(vCoords.x, d + g) / d;\n\n    // Compute distance to dash edge (0.5: dashCenter, 0.0: dashEdge) and compute the\n    // dashBlendFactor similarly on how we did it for the line opacity.\n    float distToDashEdge = 0.5 - distance(distToDashOrigin, (d + g) / d * 0.5);\n    #if DASHES_MODE == DASHES_ROUND\n    distToDashEdge = 0.5 - distance(vec2(distToCenter * 0.5, distToDashEdge), vec2(0.0, 0.5));\n    #elif DASHES_MODE == DASHES_DIAMOND\n    distToDashEdge -= distToCenter * 0.5;\n    #endif\n    float dashWidth = fwidth(distToDashEdge);\n    float dashBlendFactor = 1.0 - smoothstep(-dashWidth, dashWidth, distToDashEdge);\n\n    #ifdef USE_DASH_COLOR\n    outputDiffuse = mix(diffuseColor, dashColor, dashBlendFactor);\n    #endif\n    #endif\n\n    #ifdef USE_OUTLINE\n    // Calculate distance to outline (0.0: lineEdge, outlineWidth/lineWidth: outlineEdge) and\n    // compute the outlineBlendFactor (used to mix line and outline colors).\n    float distToOutline = distToCenter - 1.0;\n    float outlineWidth = fwidth(distToOutline);\n    float outlineBlendFactor = smoothstep(-outlineWidth, outlineWidth, distToOutline);\n\n    // Mix the colors using the different computed factors.\n    #if defined(USE_DASHED_LINE) && !defined(USE_DASH_COLOR)\n    float colorBlendFactor = smoothstep(-1.0, 1.0, dashBlendFactor - outlineBlendFactor);\n    outputDiffuse = mix(\n      mix(\n        mix(outlineColor, diffuseColor, colorBlendFactor),\n        outputDiffuse,\n        dashBlendFactor\n      ),\n      outlineColor,\n      outlineBlendFactor\n    );\n    #else\n    outputDiffuse = mix(outputDiffuse, outlineColor, outlineBlendFactor);\n    #endif\n    #endif\n\n    #if defined(USE_DASHED_LINE) && !defined(USE_DASH_COLOR)\n    // Multiply the alpha by the dashBlendFactor.\n    #if defined(USE_OUTLINE)\n    alpha *= clamp(dashBlendFactor + outlineBlendFactor, 0.0, 1.0);\n    #else\n    alpha *= 1.0 - dashBlendFactor;\n    #endif\n    #endif\n\n    #ifdef USE_COLOR\n    gl_FragColor = vec4( outputDiffuse * vColor, alpha );\n    #else\n    gl_FragColor = vec4( outputDiffuse, alpha );\n    #endif\n\n    #include <fog_fragment>\n\n    #ifdef USE_FADING\n    #include <fading_fragment>\n    #endif\n\n\n}`;\n\n/**\n * Parameters used when constructing a new {@link SolidLineMaterial}.\n */\nexport interface SolidLineMaterialParameters\n    extends FadingFeatureParameters,\n        DisplacementFeatureParameters,\n        RendererMaterialParameters {\n    /**\n     * Line color.\n     */\n    color?: number | string;\n\n    /**\n     * Line outline color.\n     */\n    outlineColor?: number | string;\n\n    /**\n     * Enables/Disable depth test.\n     */\n    depthTest?: boolean;\n\n    /**\n     * Enables/Disable depth write.\n     */\n    depthWrite?: boolean;\n\n    /**\n     * `SolidLineMaterial` extends the ThreeJS `RawShaderMaterial` that does not update fog at\n     * runtime, so instead of recompiling everything we pass it in the constructor.\n     */\n    fog?: boolean;\n\n    /**\n     * Line width.\n     */\n    lineWidth?: number;\n\n    /**\n     * Outline width.\n     */\n    outlineWidth?: number;\n\n    /**\n     * Line opacity.\n     */\n    opacity?: number;\n\n    /**\n     * Describes line caps type (`\"None\"`, `\"Round\"`, `\"Square\"`, `\"TriangleOut\"`, `\"TriangleIn\"`).\n     * Default is `\"Round\"`.\n     */\n    caps?: LineCaps;\n\n    /**\n     * Describes the starting drawing position for the line (in the range [0...1]).\n     * Default is `0.0`.\n     */\n    drawRangeStart?: number;\n\n    /**\n     * Describes the ending drawing position for the line (in the range [0...1]).\n     * Default is `1.0`.\n     */\n    drawRangeEnd?: number;\n\n    /**\n     * Describes line dash type (`\"Round\"`, `\"Square\"`, `\"Diamond\"`).\n     * Default is `\"Square\"`.\n     */\n    dashes?: LineDashes;\n\n    /**\n     * Line dashes color.\n     */\n    dashColor?: number | string;\n\n    /**\n     * Size of the dashed segments.\n     */\n    dashSize?: number;\n\n    /**\n     * Size of the gaps between dashed segments.\n     */\n    gapSize?: number;\n\n    /**\n     * How much to offset in world units.\n     */\n    offset?: number;\n}\n\n/**\n * Material designed to render solid variable-width lines.\n */\nexport class SolidLineMaterial\n    extends RawShaderMaterial\n    implements DisplacementFeature, FadingFeature {\n    static DEFAULT_COLOR: number = 0xff0000;\n    static DEFAULT_WIDTH: number = 1.0;\n    static DEFAULT_OUTLINE_WIDTH: number = 0.0;\n    static DEFAULT_OPACITY: number = 1.0;\n    static DEFAULT_DRAW_RANGE_START: number = 0.0;\n    static DEFAULT_DRAW_RANGE_END: number = 1.0;\n    static DEFAULT_DASH_SIZE: number = 1.0;\n    static DEFAULT_GAP_SIZE: number = 1.0;\n    static DEFAULT_OFFSET: number = 0.0;\n\n    /**\n     * Constructs a new `SolidLineMaterial`.\n     *\n     * @param params - `SolidLineMaterial` parameters. Always required except when cloning another\n     * material.\n     */\n    constructor(params?: SolidLineMaterialParameters) {\n        Object.assign(THREE.ShaderChunk, linesShaderChunk);\n\n        FadingFeature.patchGlobalShaderChunks();\n\n        // Setup default defines.\n        const defines: { [key: string]: any } = {\n            CAPS_MODE: LineCapsModes.CAPS_ROUND,\n            DASHES_MODE: LineDashesModes.DASHES_SQUARE\n        };\n\n        // Prepare defines based on params passed in, before super class c-tor, this ensures\n        // proper set for shader compilation, without need to re-compile.\n        let fogParam = true;\n        let opacityParam = 1.0;\n        let displacementMap;\n\n        let shaderParams: RawShaderMaterialParameters | undefined;\n        if (params) {\n            fogParam = params.fog === true;\n            if (fogParam) {\n                setShaderDefine(defines, \"USE_FOG\", true);\n            }\n            opacityParam = params.opacity !== undefined ? params.opacity : opacityParam;\n            displacementMap = params.displacementMap;\n            if (displacementMap !== undefined) {\n                setShaderDefine(defines, \"USE_DISPLACEMENTMAP\", true);\n            }\n            const hasOutline = params.outlineWidth !== undefined && params.outlineWidth > 0;\n            if (hasOutline) {\n                setShaderDefine(defines, \"USE_OUTLINE\", true);\n            }\n            shaderParams = {\n                name: \"SolidLineMaterial\",\n                vertexShader: vertexSource,\n                fragmentShader: fragmentSource,\n                uniforms: THREE.UniformsUtils.merge([\n                    {\n                        // HARP-17373: Original uniform name 'diffuse' due to shader compilation\n                        // errors with Metal in Safari 15 on MacOS Monterrey and iPadOS 15.\n                        diffuseColor: new THREE.Uniform(\n                            new THREE.Color(SolidLineMaterial.DEFAULT_COLOR)\n                        ),\n                        dashColor: new THREE.Uniform(\n                            new THREE.Color(SolidLineMaterial.DEFAULT_COLOR)\n                        ),\n                        outlineColor: new THREE.Uniform(\n                            new THREE.Color(SolidLineMaterial.DEFAULT_COLOR)\n                        ),\n                        extrusionWidth: new THREE.Uniform(SolidLineMaterial.DEFAULT_WIDTH),\n                        outlineWidth: new THREE.Uniform(SolidLineMaterial.DEFAULT_OUTLINE_WIDTH),\n                        offset: new THREE.Uniform(SolidLineMaterial.DEFAULT_OFFSET),\n                        opacity: new THREE.Uniform(SolidLineMaterial.DEFAULT_OPACITY),\n                        tileSize: new THREE.Uniform(new THREE.Vector2()),\n                        fadeNear: new THREE.Uniform(FadingFeature.DEFAULT_FADE_NEAR),\n                        fadeFar: new THREE.Uniform(FadingFeature.DEFAULT_FADE_FAR),\n                        displacementMap: new THREE.Uniform(\n                            displacementMap !== undefined ? displacementMap : new THREE.Texture()\n                        ),\n                        drawRange: new THREE.Uniform(\n                            new THREE.Vector2(\n                                SolidLineMaterial.DEFAULT_DRAW_RANGE_START,\n                                SolidLineMaterial.DEFAULT_DRAW_RANGE_END\n                            )\n                        ),\n                        dashSize: new THREE.Uniform(SolidLineMaterial.DEFAULT_DASH_SIZE),\n                        gapSize: new THREE.Uniform(SolidLineMaterial.DEFAULT_GAP_SIZE)\n                    },\n                    // We need the fog uniforms available when we use `fog` setter as the internal\n                    // recompilation cannot add or remove uniforms.\n                    THREE.UniformsLib.fog\n                ]),\n                defines,\n                // No need to pass overridden `fog` and `opacity` params they will be set\n                // after super c-tor call.\n                fog: fogParam,\n                opacity: opacityParam,\n                rendererCapabilities: params.rendererCapabilities\n            };\n        }\n\n        super(shaderParams);\n\n        // Required to satisfy compiler error if fields has no initializer or are not definitely\n        // assigned in the constructor, this also mimics ShaderMaterial set of defaults\n        // for overridden props.\n        this.fog = fogParam;\n        this.setOpacity(opacityParam);\n\n        // initialize the stencil pass\n        this.stencilFunc = THREE.NotEqualStencilFunc;\n        this.stencilZPass = THREE.ReplaceStencilOp;\n        this.stencilRef = 1;\n        this.stencilWrite = false;\n\n        enforceBlending(this);\n        this.extensions.derivatives = true;\n\n        // Apply initial parameter values.\n        if (params) {\n            if (params.color !== undefined) {\n                tmpColor.set(params.color as any);\n                this.color = tmpColor;\n            }\n            if (params.outlineColor !== undefined) {\n                tmpColor.set(params.outlineColor as any);\n                this.outlineColor = tmpColor;\n            }\n            if (params.lineWidth !== undefined) {\n                this.lineWidth = params.lineWidth;\n            }\n            if (params.outlineWidth !== undefined) {\n                this.outlineWidth = params.outlineWidth;\n            }\n            if (params.opacity !== undefined) {\n                this.setOpacity(params.opacity);\n            }\n            if (params.depthTest !== undefined) {\n                this.depthTest = params.depthTest;\n            }\n            if (params.depthWrite !== undefined) {\n                this.depthWrite = params.depthWrite;\n            }\n            if (params.fadeNear !== undefined) {\n                this.fadeNear = params.fadeNear;\n            }\n            if (params.fadeFar !== undefined) {\n                this.fadeFar = params.fadeFar;\n            }\n            if (params.displacementMap !== undefined) {\n                this.displacementMap = params.displacementMap;\n            }\n            if (params.caps !== undefined) {\n                this.caps = params.caps;\n            }\n            if (params.drawRangeStart !== undefined) {\n                this.drawRangeStart = params.drawRangeStart;\n            }\n            if (params.drawRangeEnd !== undefined) {\n                this.drawRangeEnd = params.drawRangeEnd;\n            }\n            if (params.dashes !== undefined) {\n                this.dashes = params.dashes;\n            }\n            if (params.dashColor !== undefined) {\n                tmpColor.set(params.dashColor as any);\n                this.dashColor = tmpColor;\n            }\n            if (params.dashSize !== undefined) {\n                this.dashSize = params.dashSize;\n            }\n            if (params.gapSize !== undefined) {\n                this.gapSize = params.gapSize;\n            }\n            if (params.fog !== undefined) {\n                this.fog = params.fog;\n                this.invalidateFog();\n            }\n            this.offset = params.offset ?? 0;\n        }\n    }\n\n    /**\n     * Sets the offset used to shift the line in world space perpendicular to the direction.\n     */\n    set offset(offset: number) {\n        this.uniforms.offset.value = offset;\n    }\n\n    /**\n     * @return The offset to shift the line in world space perpendicular to the direction.\n     */\n    get offset(): number {\n        return this.uniforms.offset.value as number;\n    }\n\n    /**\n     * The method to call to recompile a material to enable/disable outline effect\n     *\n     * @param enable - Whether we want to use outline.\n     */\n    set outline(enable: boolean) {\n        setShaderMaterialDefine(this, \"USE_OUTLINE\", enable);\n    }\n\n    /**\n     * Checks if outline is enabled.\n     */\n    get outline(): boolean {\n        return getShaderMaterialDefine(this, \"USE_OUTLINE\") === true;\n    }\n\n    /** @override */\n    setOpacity(opacity: number) {\n        super.setOpacity(opacity);\n        if (opacity !== undefined) {\n            this.stencilWrite = opacity < 0.98;\n        }\n    }\n\n    /**\n     * Line color.\n     */\n    get color(): THREE.Color {\n        return this.uniforms.diffuseColor.value as THREE.Color;\n    }\n\n    set color(value: THREE.Color) {\n        this.uniforms.diffuseColor.value.copy(value);\n    }\n\n    /**\n     * Outline color.\n     *\n     * @note The width of outline ([[outlineWidth]]) need to be also set to enable outlining.\n     */\n    get outlineColor(): THREE.Color {\n        return this.uniforms.outlineColor.value as THREE.Color;\n    }\n\n    set outlineColor(value: THREE.Color) {\n        this.uniforms.outlineColor.value.copy(value);\n    }\n\n    /**\n     * Dash color.\n     *\n     * @note The property [[gapSize]] need to be set to enable dashed line.\n     */\n    get dashColor(): THREE.Color {\n        return this.uniforms.dashColor.value as THREE.Color;\n    }\n\n    set dashColor(value: THREE.Color) {\n        this.uniforms.dashColor.value.copy(value);\n        setShaderMaterialDefine(this, \"USE_DASH_COLOR\", true);\n    }\n\n    /**\n     * Line width.\n     */\n    get lineWidth(): number {\n        return (this.uniforms.extrusionWidth.value as number) * 2;\n    }\n\n    set lineWidth(value: number) {\n        this.uniforms.extrusionWidth.value = value / 2;\n    }\n\n    /**\n     * Outline width.\n     */\n    get outlineWidth(): number {\n        return this.uniforms.outlineWidth.value as number;\n    }\n\n    set outlineWidth(value: number) {\n        this.uniforms.outlineWidth.value = value;\n        this.outline = value > 0.0;\n    }\n\n    /**\n     * Size of the dashed segments.\n     *\n     * @note Ths [[gapSize]] need to be also set to enable dashed line.\n     * @see gapSize.\n     */\n    get dashSize(): number {\n        return this.uniforms.dashSize.value as number;\n    }\n\n    set dashSize(value: number) {\n        this.uniforms.dashSize.value = value;\n    }\n\n    /**\n     * Size of the gaps between dashed segments.\n     *\n     * @note You may also need to set [[dashSize]].\n     * @see dashSize.\n     */\n    get gapSize(): number {\n        return this.uniforms.gapSize.value as number;\n    }\n\n    set gapSize(value: number) {\n        this.uniforms.gapSize.value = value;\n        setShaderMaterialDefine(this, \"USE_DASHED_LINE\", value > 0.0);\n\n        if (this.uniforms?.gapSize?.value === 0) {\n            this.stencilWrite = this.opacity < 0.98;\n        }\n    }\n\n    /**\n     * Caps mode.\n     */\n    get caps(): LineCaps {\n        let result: LineCaps = \"Round\";\n        const capsMode = getShaderMaterialDefine(this, \"CAPS_MODE\");\n        // Sanity check if material define is numerical and has direct mapping to LineCaps type.\n        if (typeof capsMode === \"number\" && DefinesLineCapsMapping.hasOwnProperty(capsMode)) {\n            result = DefinesLineCapsMapping[capsMode];\n        }\n        return result;\n    }\n\n    set caps(value: LineCaps) {\n        // Line caps mode may be set directly from theme, thus we need to check value\n        // for correctness and provide string to define mapping in fragment shader.\n        if (LineCapsDefinesMapping.hasOwnProperty(value)) {\n            setShaderMaterialDefine(this, \"CAPS_MODE\", LineCapsDefinesMapping[value]);\n        }\n    }\n\n    /**\n     * Dashes mode.\n     */\n    get dashes(): LineDashes {\n        let result: LineDashes = \"Square\";\n        const dashesMode = getShaderMaterialDefine(this, \"DASHES_MODE\");\n        // Sanity check if material define is numerical and has direct mapping to LineDashes type.\n        if (typeof dashesMode === \"number\" && DefinesLineDashesMapping.hasOwnProperty(dashesMode)) {\n            result = DefinesLineDashesMapping[dashesMode];\n        }\n        return result;\n    }\n\n    set dashes(value: LineDashes) {\n        // Line dashes mode may be set directly from theme, thus we need to check value\n        // for correctness and provide string to define mapping in fragment shader.\n        if (LineDashesDefinesMapping.hasOwnProperty(value)) {\n            setShaderMaterialDefine(this, \"DASHES_MODE\", LineDashesDefinesMapping[value]);\n        }\n    }\n\n    get fadeNear(): number {\n        return this.uniforms.fadeNear.value as number;\n    }\n\n    set fadeNear(value: number) {\n        this.uniforms.fadeNear.value = value;\n    }\n\n    get fadeFar(): number {\n        return this.uniforms.fadeFar.value as number;\n    }\n\n    set fadeFar(value: number) {\n        this.uniforms.fadeFar.value = value;\n        setShaderMaterialDefine(this, \"USE_FADING\", value > 0.0);\n    }\n\n    get displacementMap(): THREE.Texture | null {\n        return this.uniforms.displacementMap.value;\n    }\n\n    set displacementMap(map: THREE.Texture | null) {\n        if (this.uniforms.displacementMap.value === map) {\n            return;\n        }\n        this.uniforms.displacementMap.value = map;\n        const useDisplacementMap = map !== null;\n        if (useDisplacementMap) {\n            this.uniforms.displacementMap.value.needsUpdate = true;\n        }\n        setShaderMaterialDefine(this, \"USE_DISPLACEMENTMAP\", useDisplacementMap);\n    }\n\n    get drawRangeStart(): number {\n        return this.uniforms.drawRange.value.x as number;\n    }\n\n    set drawRangeStart(value: number) {\n        this.uniforms.drawRange.value.x = value;\n    }\n\n    get drawRangeEnd(): number {\n        return this.uniforms.drawRange.value.y as number;\n    }\n\n    set drawRangeEnd(value: number) {\n        this.uniforms.drawRange.value.y = value;\n    }\n\n    set clipTileSize(tileSize: THREE.Vector2) {\n        this.uniforms.tileSize.value.copy(tileSize);\n        const useTileClip = tileSize.x > 0 && tileSize.y > 0;\n        setShaderMaterialDefine(this, \"USE_TILE_CLIP\", useTileClip);\n    }\n\n    get clipTileSize(): THREE.Vector2 {\n        return this.uniforms.tileSize.value as THREE.Vector2;\n    }\n\n    copy(other: SolidLineMaterial): this {\n        super.copy(other);\n        this.invalidateFog();\n        this.setOpacity(other.opacity);\n        return this;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { assert } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\n/**\n * Values for boolean shader defines\n */\nexport const DEFINE_BOOL_TRUE = \"\";\nexport const DEFINE_BOOL_FALSE = undefined;\n\n/**\n * Insert shader includes after another shader include.\n *\n * @param shaderContent - Original string.\n * @param shaderName - String to append to.\n * @param insertedShaderName - String to append after string `shaderA`.\n * @param addTab - If `true`, a tab character will be inserted before `shaderB`.\n */\nexport function insertShaderInclude(\n    shaderContent: string,\n    shaderName: string,\n    insertedShaderName: string,\n    addTab?: boolean\n): string {\n    const tabChar = addTab === true ? \"\\t\" : \"\";\n\n    const result = shaderContent.replace(\n        `#include <${shaderName}>`,\n        `#include <${shaderName}>\n${tabChar}#include <${insertedShaderName}>`\n    );\n    return result;\n}\n\nexport interface ForcedBlending {\n    /**\n     * This material has `blending` always enabled regardless of `opacity` setting.s\n     */\n    forcedBlending?: true;\n}\n\n/**\n * THREE.js is enabling blending only when transparent is `true` or when a blend mode\n * different than `NormalBlending` is set.\n * Since we don't want to set transparent to true and mess up the render order we set\n * `CustomBlending` with the same parameters as the `NormalBlending`.\n\n * @param material - `Material` that should use blending\n * @note This function should not be used in frame update after material has been passed to WebGL.\n * In such cases use [[enableBlending]] instead.\n */\nexport function enforceBlending(\n    material: (THREE.Material | THREE.ShaderMaterialParameters) & ForcedBlending\n) {\n    if (material.transparent) {\n        // Nothing to do\n        return;\n    }\n\n    enableBlending(material);\n    material.forcedBlending = true;\n}\n\n/**\n * Enable alpha blending using THREE.CustomBlending setup.\n *\n * Function enables blending using one of predefined modes, for both color and alpha components:\n * - Src: [[THREE.SrcAlphaFactor]], Dst: [[THREE.OneMinusSrcAlphaFactor]]\n * - Src: [[THREE.OneFactor]], Dst: [[THREE.OneMinusSrcAlphaFactor]]\n * The second blending equation is used when [[THREE.Material.premultipliedAlpha]] is enabled\n * for this material.\n * @note Blending mode change does not require material update.\n * @see THREE.Material.needsUpdate.\n * @param material - The material or material parameters to modify.\n */\nexport function enableBlending(\n    material: (THREE.Material | THREE.ShaderMaterialParameters) & ForcedBlending\n) {\n    if (material.transparent === true || material.forcedBlending === true) {\n        // Nothing to do\n        return;\n    }\n\n    material.blending = THREE.CustomBlending;\n    if (material.premultipliedAlpha === true) {\n        material.blendSrc = THREE.OneFactor;\n        material.blendDst = THREE.OneMinusSrcAlphaFactor;\n        material.blendSrcAlpha = THREE.OneFactor;\n        material.blendDstAlpha = THREE.OneMinusSrcAlphaFactor;\n    } else {\n        material.blendSrc = THREE.SrcAlphaFactor;\n        material.blendDst = THREE.OneMinusSrcAlphaFactor;\n        material.blendSrcAlpha = THREE.OneFactor;\n        material.blendDstAlpha = THREE.OneMinusSrcAlphaFactor;\n    }\n}\n\n/**\n * Disable alpha blending using THREE.CustomBlending mode, switches to [[THREE.NormalBlending]].\n *\n * @note Blending mode change does not require material update.\n * @see THREE.Material.needsUpdate.\n * @see enableBlending.\n * @param material - The material or material parameters to modify.\n */\nexport function disableBlending(\n    material: (THREE.Material | THREE.ShaderMaterialParameters) & ForcedBlending\n) {\n    if (material.transparent === true || material.forcedBlending === true) {\n        // Nothing to do\n        return;\n    }\n\n    material.blending = THREE.NormalBlending;\n}\n\n/**\n * Setup material shader _define_ using two allowable semantics.\n *\n * Function accepts two types of values for shader preprocessor _define_:\n * - [[boolean]], simple [[true]] or [[false]] which causes _define_ to be set with empty string,\n * such defines may be handled in the shader using __#ifdef__ semantics:\n * ```\n * #ifdef SOME_DEFINE && !defined(OTHER_DEFINE)\n * // do something\n * #endif\n * ```\n *\n * - [[number]] which sets _define_ to explicit value. You may use it to enable/disable some\n * code or even set compile time constants affecting shaders math:\n * ```\n * #if SOME_DEFINE_SWITCH && OTHER_DEFINE_SWITCH == 0\n * gl_FragColor = vec4(1, 1, 1, DEFINE_ALPHA)\n * #endif\n * ```\n * @note Setting _define_ with `false` value is not the same as setting is with number value of `0`.\n *\n * @param material - The [[THREE.ShaderMaterial]] which shader _define_ will be set.\n * @param key - Name of shader _define_ as used in shader, i.e. `USE_FOG`, `COLOR_ALPHA`, etc.\n * @param value - The value to be set as number or boolean specifying if preprocessor define\n * should be defined or not.\n * @returns [[true]] if material has been forced to update (re-compile) due to define changes,\n * return [[false]] whenever define has not been changed.\n */\nexport function setShaderMaterialDefine(\n    material: THREE.ShaderMaterial,\n    key: string,\n    value: boolean | number\n): boolean {\n    assert(\n        material.defines !== undefined,\n        \"Do not use this function in ShaderMaterial derived c-tor.\"\n    );\n    const semanticValue = getShaderMaterialDefine(material, key);\n    const needsUpdate = value !== semanticValue;\n    // Nothing to change - early exit\n    if (!needsUpdate) {\n        return false;\n    }\n    setShaderDefine(material.defines, key, value);\n    material.needsUpdate = needsUpdate;\n    return true;\n}\n\n/**\n * Acquire value of [[THREE.ShaderMaterial]] GPU shader preprocessor define.\n *\n * The semantic used in entire engine assumes that preprocessor defines may have only binary\n * (defined / not defined) or numerical values, this ensures consistency in the shaders and\n * materials code.\n * @note If _define_ with [[key]] is _undefined_ function returns [[false]], if defined but\n * not numerical value it returns [[true]], otherwise returns number.\n * @see setShaderMaterialDefine.\n *\n * @param material - The material which shader defines are accessed.\n * @param key - The _define_ name (identifier).\n * @param fallbackValue - The value returned when material `defines` are not initialized yet,\n * specified by default as [[false]], provide your own default if you expect numeric value.\n */\nexport function getShaderMaterialDefine(\n    material: THREE.ShaderMaterial,\n    key: string,\n    fallbackValue: boolean | number = false\n): boolean | number {\n    if (material.defines === undefined) {\n        return fallbackValue;\n    }\n    return getShaderDefine(material.defines, key);\n}\n\n/**\n * Sets new value of 'define' regardless of current value set.\n *\n * Update `defines` map with new key and value, if key is already occupied it overrides its value.\n * Helper function that may be used to setup [[THREE.ShaderMaterialParameters]] before\n * material is create (i.e. in c-tor).\n *\n * @param defines - Shader `defines` stored in key-value map.\n * @param key - The key used to identify _define_.\n * @param value - The value to be stored.\n * @returns [[true]] if define has actually changed, false is stayed the same.\n * @see setShaderMaterialDefine.\n */\nexport function setShaderDefine(\n    defines: { [key: string]: any },\n    key: string,\n    value: boolean | number\n): boolean {\n    let updated = false;\n    if (typeof value === \"number\") {\n        updated = defines[key] !== value;\n        defines[key] = value;\n    } else if (value === true) {\n        updated = defines[key] !== DEFINE_BOOL_TRUE;\n        defines[key] = DEFINE_BOOL_TRUE;\n    } else if (value === false && defines[key] !== undefined) {\n        // Sets to DEFINE_BOOL_FALSE === undefined\n        delete defines[key];\n        updated = true;\n    }\n    return updated;\n}\n\n/**\n * Acquire shader 'define' value from `defines` map.\n *\n * If there is no value under [[key]] specified, function returns false, otherwise result is\n * true or numeric value if there is a number stored.\n * @param defines - The `defines` map.\n * @param key - The identifier of the _define_.\n */\nexport function getShaderDefine(defines: { [key: string]: any }, key: string): boolean | number {\n    const currentValue = defines[key];\n    const semanticValue =\n        currentValue === DEFINE_BOOL_FALSE\n            ? false\n            : currentValue === DEFINE_BOOL_TRUE\n            ? true\n            : currentValue;\n    return semanticValue;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport * as THREE from \"three\";\n\n/**\n * `VignetteShader`.\n */\nexport const VignetteShader: THREE.Shader = {\n    uniforms: {\n        tDiffuse: { value: null },\n        offset: { value: 1.0 },\n        darkness: { value: 1.0 }\n    },\n    vertexShader: `\n        varying vec2 vUv;\n        void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }`,\n    fragmentShader: `\n        uniform float offset;\n        uniform float darkness;\n        uniform sampler2D tDiffuse;\n        varying vec2 vUv;\n        void main() {\n            vec4 texel = texture2D( tDiffuse, vUv );\n            vec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );\n            gl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );\n        }`\n};\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { VectorTileDataSourceParameters } from \"@here/harp-vectortile-datasource\";\n\nexport {\n    APIFormat,\n    AuthenticationMethod,\n    GeoJsonDataProvider\n} from \"@here/harp-vectortile-datasource\";\n\n/**\n * HERE OMV Data source.\n *\n * @remarks\n *\n * @packageDocumentation\n */\n\n/**\n * @deprecated Use {@link @here/harp-vectortile-datasource#VectorTileDataSourceParameters}\n *             instad.\n */\nexport type OmvDataSourceParameters = VectorTileDataSourceParameters;\n\nexport * from \"./lib/OmvDataSource\";\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { VectorTileDataSource } from \"@here/harp-vectortile-datasource\";\n\n/**\n * `OmvDataSource` is used for the visualization of vector tiles\n * provided in the OMV format.\n *\n * @example\n * ```typescript\n *    const dataSource = new OmvDataSource({\n *        baseUrl: \"https://vector.hereapi.com/v2/vectortiles/base/mc\",\n *        authenticationCode: apikey\n *    });\n *    mapView.addDataSource(dataSource);\n *   ```\n */\nexport class OmvDataSource extends VectorTileDataSource {}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * SDF based text rendering for TypeScript.\n *\n * @remarks\n *\n * @packageDocumentation\n */\n\nexport * from \"./lib/rendering/FontCatalog\";\nexport * from \"./lib/rendering/GlyphData\";\nexport * from \"./lib/rendering/TextStyle\";\nexport * from \"./lib/rendering/TextBufferObject\";\nexport * from \"./lib/TextCanvas\";\n\nexport * from \"./lib/utils/ContextualArabicConverter\";\nexport * from \"./lib/utils/MaterialUtils\";\nexport * from \"./lib/utils/TypesettingUtils\";\nexport * from \"./lib/utils/UnicodeUtils\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport * as THREE from \"three\";\n\nimport { FontCatalog } from \"./rendering/FontCatalog\";\nimport { GlyphData } from \"./rendering/GlyphData\";\nimport { TextBufferObject } from \"./rendering/TextBufferObject\";\nimport { QUAD_VERTEX_MEMORY_FOOTPRINT, TextGeometry } from \"./rendering/TextGeometry\";\nimport { SdfTextMaterial } from \"./rendering/TextMaterials\";\nimport { FontVariant, TextLayoutStyle, TextRenderStyle } from \"./rendering/TextStyle\";\nimport { LineTypesetter } from \"./typesetting/LineTypesetter\";\nimport { PathTypesetter, PathTypesettingParameters } from \"./typesetting/PathTypesetter\";\nimport { TypesettingParameters } from \"./typesetting/Typesetter\";\nimport { createSdfTextMaterial } from \"./utils/MaterialUtils\";\n\nconst tempTextPosition = new THREE.Vector3();\nconst tempTextBounds = {\n    array: [new THREE.Box2()],\n    offset: 0\n};\nlet tempVertexBuffer = new Float32Array();\n\ninterface TextPlacementParameters {\n    input: string | GlyphData[];\n    layer: TextCanvasLayer;\n    textPath?: THREE.Path | THREE.CurvePath<THREE.Vector2>;\n    textPathOverflow?: boolean;\n    bounds?: THREE.Box2;\n    individualBounds?: THREE.Box2[];\n    computeTextBuffer?: boolean;\n    letterCaseArray?: boolean[];\n}\n\n/**\n * Optional parameters passed on [[TextCanvas]].`measureText` function call.\n */\nexport interface MeasurementParameters {\n    /**\n     * Path where text should be placed on. Overrides the original position parameter.\n     */\n    path?: THREE.Path | THREE.CurvePath<THREE.Vector2>;\n\n    /**\n     * If `true`, text on a path will be placed even when its size its bigger than the path's size.\n     */\n    pathOverflow?: boolean;\n\n    /**\n     * Output per-character bounds.\n     */\n    outputCharacterBounds?: THREE.Box2[];\n\n    /**\n     * Array containing info on whether the glyphs are upper or lower case. Needed to support\n     * `SmallCaps`.\n     */\n    letterCaseArray?: boolean[];\n}\n\n/**\n * Optional parameters passed on [[TextCanvas]].`addText` function call.\n */\nexport interface AdditionParameters {\n    /**\n     * Path where text should be placed on. Overrides the original position parameter.\n     */\n    path?: THREE.Path | THREE.CurvePath<THREE.Vector2>;\n\n    /**\n     * If `true`, text on a path will be placed even when its size its bigger than the path's size.\n     */\n    pathOverflow?: boolean;\n\n    /**\n     * Layer where text will be added.\n     */\n    layer?: number;\n\n    /**\n     * If `true`, the input position parameter will be updated to contain the position of the last\n     * glyph added.\n     */\n    updatePosition?: boolean;\n\n    /**\n     * Object containing additional data intended to be retrieved during picking.\n     */\n    pickingData?: any;\n\n    /**\n     * Array containing info on whether the glyphs are upper or lower case. Needed to support\n     * `SmallCaps`.\n     */\n    letterCaseArray?: boolean[];\n}\n\n/**\n * Optional parameters passed on [[TextCanvas]].`createTextBufferObject` function call.\n */\nexport interface TextBufferCreationParameters {\n    /**\n     * Path where text should be placed on. Overrides the original position parameter.\n     */\n    path?: THREE.Path | THREE.CurvePath<THREE.Vector2>;\n\n    /**\n     * If `true`, text on a path will be placed even when its size its bigger than the path's size.\n     */\n    pathOverflow?: boolean;\n\n    /**\n     * Output text bounding-box.\n     */\n    outputBounds?: boolean;\n\n    /**\n     * Output per-character bounds.\n     */\n    outputCharacterBounds?: boolean;\n\n    /**\n     * Array containing info on whether the glyphs are upper or lower case. Needed to support\n     * `SmallCaps`.\n     */\n    letterCaseArray?: boolean[];\n\n    /**\n     * If `true`, both the [[TextRenderStyle]] and [[TextLayoutStyle]] used to generate the\n     * [[TextBufferObject]] will be stored in it.\n     */\n    storeStyles?: boolean;\n}\n\n/**\n * Optional parameters passed on [[TextCanvas]].`addTextBufferObject` function call.\n */\nexport interface TextBufferAdditionParameters {\n    layer?: number;\n    position?: THREE.Vector3;\n    scale?: number;\n    rotation?: number;\n    color?: THREE.Color;\n    opacity?: number;\n    backgroundColor?: THREE.Color;\n    backgroundOpacity?: number;\n    pickingData?: any;\n}\n\n/**\n * Default's [[TextCanvas]] layer identifier.\n */\nexport const DEFAULT_TEXT_CANVAS_LAYER = 0;\n\n/**\n * [[TextCanvas]] rendering layer.\n */\nexport interface TextCanvasLayer {\n    id: number;\n    storage: TextGeometry;\n}\n\n/**\n * [[TextCanvas]] construction parameters.\n */\nexport interface TextCanvasParameters {\n    /**\n     * WebGLRenderer internally used by this `TextCanvas`.\n     */\n    renderer: THREE.WebGLRenderer;\n\n    /**\n     * Initial [[FontCatalog]].\n     */\n    fontCatalog: FontCatalog;\n\n    /**\n     * Minimum amount of glyphs each [[TextCanvas]] layer can store.\n     */\n    minGlyphCount: number;\n\n    /**\n     * Maximum amount of glyphs each [[TextCanvas]] layer can store.\n     */\n    maxGlyphCount: number;\n\n    /**\n     * Material used to render text.\n     */\n    material?: THREE.Material;\n\n    /**\n     * Material used to render text background.\n     */\n    backgroundMaterial?: THREE.Material;\n\n    /**\n     * Optional Canvas Name\n     */\n    name?: string;\n}\n\n/**\n * Describes estimated usage of memory on heap and GPU.\n */\nexport interface MemoryUsage {\n    heapSize: number;\n    gpuSize: number;\n}\n\n/**\n * three.js text rendering engine which can manage and render high-quality, transformable, stylable\n * and properly layout SDF and MSDF text.\n */\nexport class TextCanvas {\n    private static readonly defaultTextRenderStyle: TextRenderStyle = new TextRenderStyle();\n    private static readonly defaultTextLayoutStyle: TextLayoutStyle = new TextLayoutStyle();\n    /**\n     * Minimum amount of glyphs each [[TextCanvas]] layer can store.\n     */\n    readonly minGlyphCount: number;\n\n    /**\n     * Maximum amount of glyphs each [[TextCanvas]] layer can store.\n     */\n    readonly maxGlyphCount: number;\n\n    readonly name?: string;\n\n    private readonly m_renderer: THREE.WebGLRenderer;\n    private m_fontCatalog: FontCatalog;\n\n    private readonly m_currentTextRenderStyle: TextRenderStyle;\n    private readonly m_currentTextLayoutStyle: TextLayoutStyle;\n\n    private m_material: SdfTextMaterial | THREE.Material;\n    private m_bgMaterial: SdfTextMaterial | THREE.Material;\n    private m_ownsMaterial: boolean;\n    private m_ownsBgMaterial: boolean;\n\n    private readonly m_defaultLayer: TextCanvasLayer;\n    private readonly m_layers: TextCanvasLayer[];\n\n    private readonly m_lineTypesetter: LineTypesetter;\n    private readonly m_pathTypesetter: PathTypesetter;\n\n    /**\n     * Constructs a new `TextCanvas`.\n     *\n     * @param params - `TextCanvas` construction parameters.\n     *\n     * @returns New `TextCanvas`.\n     */\n    constructor(params: TextCanvasParameters) {\n        this.m_renderer = params.renderer;\n        this.m_fontCatalog = params.fontCatalog;\n        this.minGlyphCount = params.minGlyphCount;\n        this.maxGlyphCount = params.maxGlyphCount;\n        this.name = params.name;\n\n        if (params.material === undefined) {\n            this.m_ownsMaterial = true;\n            this.m_material = createSdfTextMaterial({\n                fontCatalog: params.fontCatalog,\n                rendererCapabilities: this.m_renderer.capabilities\n            });\n        } else {\n            this.m_ownsMaterial = false;\n            this.m_material = params.material;\n        }\n        if (params.backgroundMaterial === undefined) {\n            this.m_ownsBgMaterial = true;\n            this.m_bgMaterial = createSdfTextMaterial({\n                fontCatalog: params.fontCatalog,\n                isBackground: true,\n                rendererCapabilities: this.m_renderer.capabilities\n            });\n        } else {\n            this.m_ownsBgMaterial = false;\n            this.m_bgMaterial = params.backgroundMaterial;\n        }\n\n        this.m_defaultLayer = {\n            id: DEFAULT_TEXT_CANVAS_LAYER,\n            storage: new TextGeometry(\n                new THREE.Scene(),\n                this.m_material,\n                this.m_bgMaterial,\n                this.minGlyphCount,\n                this.maxGlyphCount\n            )\n        };\n        this.m_layers = [this.m_defaultLayer];\n\n        this.m_currentTextRenderStyle = new TextRenderStyle().copy(\n            TextCanvas.defaultTextRenderStyle\n        );\n        this.m_currentTextLayoutStyle = new TextLayoutStyle().copy(\n            TextCanvas.defaultTextLayoutStyle\n        );\n\n        this.m_lineTypesetter = new LineTypesetter();\n        this.m_pathTypesetter = new PathTypesetter();\n    }\n\n    /**\n     * Currently active [[FontCatalog]].\n     */\n    get fontCatalog(): FontCatalog {\n        return this.m_fontCatalog;\n    }\n\n    set fontCatalog(value: FontCatalog) {\n        this.m_fontCatalog = value;\n\n        const material = this.m_material as THREE.RawShaderMaterial;\n        material.uniforms.sdfTexture.value = this.m_fontCatalog.texture;\n        material.uniforms.sdfParams.value = new THREE.Vector4(\n            this.m_fontCatalog.textureSize.x,\n            this.m_fontCatalog.textureSize.y,\n            this.m_fontCatalog.size,\n            this.m_fontCatalog.distanceRange\n        );\n        material.defines.MSDF = this.m_fontCatalog.type === \"msdf\" ? 1.0 : 0.0;\n\n        const bgMaterial = this.m_bgMaterial as THREE.RawShaderMaterial;\n        bgMaterial.uniforms.sdfTexture.value = this.m_fontCatalog.texture;\n        bgMaterial.uniforms.sdfParams.value = new THREE.Vector4(\n            this.m_fontCatalog.textureSize.x,\n            this.m_fontCatalog.textureSize.y,\n            this.m_fontCatalog.size,\n            this.m_fontCatalog.distanceRange\n        );\n        bgMaterial.defines.MSDF = this.m_fontCatalog.type === \"msdf\" ? 1.0 : 0.0;\n    }\n\n    /**\n     * Currently active text rendering material.\n     */\n    get material(): THREE.Material {\n        return this.m_material;\n    }\n\n    set material(value: THREE.Material) {\n        if (this.m_ownsMaterial) {\n            this.m_material.dispose();\n            this.m_ownsMaterial = false;\n        }\n\n        this.m_material = value;\n        for (const layer of this.m_layers) {\n            layer.storage.mesh.material = this.m_material;\n        }\n    }\n\n    /**\n     * Currently active text background rendering material.\n     */\n    get backgroundMaterial(): THREE.Material {\n        return this.m_bgMaterial;\n    }\n\n    set backgroundMaterial(value: THREE.Material) {\n        if (this.m_ownsBgMaterial) {\n            this.m_bgMaterial.dispose();\n            this.m_ownsBgMaterial = false;\n        }\n\n        this.m_bgMaterial = value;\n        for (const layer of this.m_layers) {\n            layer.storage.backgroundMesh.material = this.m_bgMaterial;\n        }\n    }\n\n    /**\n     * Currently active text rendering style.\n     */\n    get textRenderStyle(): TextRenderStyle {\n        return this.m_currentTextRenderStyle;\n    }\n\n    set textRenderStyle(style: TextRenderStyle) {\n        this.m_currentTextRenderStyle.copy(style);\n    }\n\n    /**\n     * Currently active text layout style.\n     */\n    get textLayoutStyle(): TextLayoutStyle {\n        return this.m_currentTextLayoutStyle;\n    }\n\n    set textLayoutStyle(style: TextLayoutStyle) {\n        this.m_currentTextLayoutStyle.copy(style);\n    }\n\n    /**\n     * Clears all the placed glyphs in this `TextCanvas` (as well as resetting the current style).\n     */\n    clear() {\n        for (const layer of this.m_layers) {\n            layer.storage.clear();\n        }\n        this.m_currentTextRenderStyle.copy(TextCanvas.defaultTextRenderStyle);\n        this.m_currentTextLayoutStyle.copy(TextCanvas.defaultTextLayoutStyle);\n    }\n\n    /**\n     * Renders the content of this `TextCanvas`.\n     *\n     * @param camera - Orthographic camera.\n     * @param lowerLayerId - Optional Id the first layer to be rendered has to be equal or above\n     * @param higherLayerId - Optional Id the last layer to be rendered has to be below\n     * @param target - Optional render target.\n     * @param clear - Optional render target clear operation.\n     */\n    render(\n        camera: THREE.OrthographicCamera,\n        lowerLayerId?: number,\n        higherLayerId?: number,\n        target?: THREE.WebGLRenderTarget,\n        clear?: boolean\n    ) {\n        this.m_fontCatalog.update(this.m_renderer);\n        let oldTarget: THREE.RenderTarget | null = null;\n        if (target !== undefined) {\n            oldTarget = this.m_renderer.getRenderTarget();\n            this.m_renderer.setRenderTarget(target);\n        }\n        if (clear === true) {\n            this.m_renderer.clear(true);\n        }\n        for (let i = 0; i < this.m_layers.length; i++) {\n            const layer = this.m_layers[i];\n            if (layer.id >= (lowerLayerId ?? 0)) {\n                if (higherLayerId === undefined || layer.id < higherLayerId) {\n                    layer.storage.update();\n                    this.m_renderer.render(layer.storage.scene, camera);\n                } else {\n                    break;\n                }\n            }\n        }\n        if (target !== undefined) {\n            this.m_renderer.setRenderTarget(oldTarget);\n        }\n    }\n\n    /**\n     * Creates a new `TextCanvas` rendering layer and returns. If there was already a layer for the\n     * input `layerId`, it just returns this one instead.\n     *\n     * @param layerId - Desired layer identifier.\n     *\n     * @returns Created [[TextCanvasLayer]].\n     */\n    addLayer(layerId: number): TextCanvasLayer {\n        let result = this.getLayer(layerId);\n        if (result === undefined) {\n            result = {\n                id: layerId,\n                storage: new TextGeometry(\n                    new THREE.Scene(),\n                    this.m_material,\n                    this.m_bgMaterial,\n                    this.minGlyphCount,\n                    this.maxGlyphCount\n                )\n            };\n\n            this.m_layers.push(result);\n            this.m_layers.sort((a: TextCanvasLayer, b: TextCanvasLayer) => {\n                return a.id - b.id;\n            });\n        }\n        return result;\n    }\n\n    /**\n     * Retrieves a specific `TextCanvas` rendering layer.\n     *\n     * @param layerId - Desired layer identifier.\n     *\n     * @returns Selected [[TextCanvasLayer]].\n     */\n    getLayer(layerId: number): TextCanvasLayer | undefined {\n        return this.m_layers.find(layer => layer.id === layerId);\n    }\n\n    /**\n     * Retrieves all `TextCanvas` rendering layers.\n     *\n     * @returns Array of [[TextCanvasLayer]]s.\n     */\n    getAllLayers(): TextCanvasLayer[] {\n        return this.m_layers;\n    }\n\n    /**\n     * Returns the computed bounding box for the input text. The current [[TextRenderStyle]] and\n     * [[TextLayoutStyle]] will influence the results of this function.\n     *\n     * @param text - Input text. Provide an array of [[GlyphData]] for better performance.\n     * @param outputBounds - Output text bounding box.\n     * @param params - Optional measurement parameters.\n     *\n     * @returns Result of the measurement. If `false`, some error occurred during execution and the\n     * input text couldn't be properly measured.\n     */\n    measureText(\n        text: string | GlyphData[],\n        outputBounds: THREE.Box2,\n        params?: MeasurementParameters\n    ): boolean {\n        tempTextPosition.set(0, 0, 0);\n\n        let path;\n        let pathOverflow;\n        let upperCaseArray;\n        let outputCharacterBounds;\n        if (params !== undefined) {\n            path = params.path;\n            pathOverflow = params.pathOverflow;\n            outputCharacterBounds = params.outputCharacterBounds;\n            if (params.path !== undefined) {\n                const pathOrigin = params.path.getPoint(0);\n                if (pathOrigin === null) {\n                    return false;\n                }\n                tempTextPosition.set(pathOrigin.x, pathOrigin.y, 0.0);\n            }\n            if (params.letterCaseArray) {\n                upperCaseArray = params.letterCaseArray;\n            }\n        }\n\n        return this.placeText({\n            input: text,\n            layer: this.m_defaultLayer,\n            textPath: path,\n            textPathOverflow: pathOverflow,\n            bounds: outputBounds,\n            individualBounds: outputCharacterBounds,\n            letterCaseArray: upperCaseArray\n        });\n    }\n\n    /**\n     * Adds the input text to this `TextCanvas` in the specified screen position. The current\n     * [[TextRenderStyle]] and [[TextLayoutStyle]] will influence the results of this function.\n     *\n     * @param text - Input text. Provide an array of [[GlyphData]] for better performance.\n     * @param position - Screen position.\n     * @param params - Optional addition parameters.\n     *\n     * @returns Result of the addition. If `false`, some error occurred during execution and the\n     * input text couldn't be properly added.\n     */\n    addText(\n        text: string | GlyphData[],\n        position: THREE.Vector3,\n        params?: AdditionParameters\n    ): boolean {\n        tempTextPosition.copy(position);\n\n        let path;\n        let pathOverflow;\n        let upperCaseArray;\n        let targetLayer = this.m_defaultLayer;\n        if (params !== undefined) {\n            path = params.path;\n            pathOverflow = params.pathOverflow;\n            if (params.layer !== undefined) {\n                let tempLayer = this.getLayer(params.layer);\n                if (tempLayer === undefined) {\n                    tempLayer = this.addLayer(params.layer);\n                }\n                targetLayer = tempLayer;\n            }\n            if (params.path !== undefined) {\n                tempTextPosition.set(0, 0, tempTextPosition.z);\n            }\n            if (params.letterCaseArray) {\n                upperCaseArray = params.letterCaseArray;\n            }\n        }\n        const prevDrawCount = targetLayer.storage.drawCount;\n\n        const result = this.placeText({\n            input: text,\n            textPath: path,\n            textPathOverflow: pathOverflow,\n            layer: targetLayer,\n            letterCaseArray: upperCaseArray\n        });\n        if (result && params !== undefined) {\n            if (params.updatePosition === true) {\n                position.copy(tempTextPosition);\n            }\n            if (params.pickingData !== undefined) {\n                targetLayer.storage.addPickingData(\n                    prevDrawCount,\n                    targetLayer.storage.drawCount,\n                    params.pickingData\n                );\n            }\n        } else if (!result) {\n            (targetLayer.storage as any).m_drawCount = prevDrawCount;\n        }\n        return result;\n    }\n\n    /**\n     * Creates a new [[TextBufferObject]]. The computed text vertex buffer is equivalent to the\n     * result of performing the `addText` function for the input text in the screen origin.\n     *\n     * @param text - Input text. Provide an array of [[GlyphData]] for better performance.\n     * @param params - Optional creation parameters.\n     *\n     * @returns New [[TextBufferObject]] (or `undefined` if requested text glyphs couldn't be\n     * retrieved from the current [[FontCatalog]]).\n     */\n    createTextBufferObject(\n        text: string | GlyphData[],\n        params?: TextBufferCreationParameters\n    ): TextBufferObject | undefined {\n        tempTextPosition.set(0, 0, 0);\n\n        let glyphArray;\n        let upperCaseArray: boolean[] | undefined;\n        const smallCapsEnabled =\n            this.m_currentTextRenderStyle.fontVariant === FontVariant.SmallCaps;\n        if (typeof text !== \"string\") {\n            glyphArray = text;\n            if (params !== undefined && params.letterCaseArray) {\n                upperCaseArray = params.letterCaseArray;\n            }\n        } else {\n            upperCaseArray = [];\n            glyphArray = this.m_fontCatalog.getGlyphs(\n                text,\n                this.m_currentTextRenderStyle,\n                smallCapsEnabled ? upperCaseArray : undefined\n            );\n            if (glyphArray === undefined) {\n                return undefined;\n            }\n        }\n\n        let path;\n        let pathOverflow;\n        let textBounds;\n        let characterBounds;\n        let renderStyle;\n        let layoutStyle;\n        if (params !== undefined) {\n            path = params.path;\n            pathOverflow = params.pathOverflow;\n            if (params.outputBounds === true) {\n                textBounds = new THREE.Box2();\n            }\n            if (params.outputCharacterBounds === true) {\n                characterBounds = [];\n            }\n            if (params.storeStyles === true) {\n                renderStyle = this.m_currentTextRenderStyle.clone();\n                layoutStyle = this.m_currentTextLayoutStyle.clone();\n            }\n        }\n\n        this.placeText({\n            input: text,\n            layer: this.m_defaultLayer,\n            computeTextBuffer: true,\n            textPath: path,\n            textPathOverflow: pathOverflow,\n            bounds: textBounds,\n            individualBounds: characterBounds,\n            letterCaseArray: upperCaseArray\n        });\n\n        return new TextBufferObject(\n            glyphArray,\n            new Float32Array(tempVertexBuffer),\n            textBounds,\n            characterBounds,\n            renderStyle,\n            layoutStyle\n        );\n    }\n\n    /**\n     * Adds a previously created [[TextBufferObject]] to the `TextCanvas`. Additional parameters can\n     * be provided to override the attributes stored in the buffer.\n     *\n     * @param textBufferObject - [[TextBufferObject]] to add.\n     * @param params - Optional addition parameters.\n     *\n     * @returns Result of the addition. If `false`, some error occurred during execution and the\n     * input text couldn't be properly added.\n     */\n    addTextBufferObject(\n        textBufferObject: TextBufferObject,\n        params?: TextBufferAdditionParameters\n    ): boolean {\n        let targetLayer = this.m_defaultLayer;\n        let position;\n        let scale;\n        let rotation;\n        let color;\n        let opacity;\n        let bgColor;\n        let bgOpacity;\n\n        if (params !== undefined) {\n            if (params.layer !== undefined) {\n                let tempLayer = this.getLayer(params.layer);\n                if (tempLayer === undefined) {\n                    tempLayer = this.addLayer(params.layer);\n                }\n                targetLayer = tempLayer;\n            }\n            position = params.position?.clone();\n            scale = params.scale;\n            rotation = params.rotation;\n            color = params.color;\n            opacity = params.opacity;\n            bgColor = params.backgroundColor;\n            bgOpacity = params.backgroundOpacity;\n        }\n        const prevDrawCount = targetLayer.storage.drawCount;\n\n        const result = targetLayer.storage.addTextBufferObject(\n            textBufferObject,\n            position,\n            scale,\n            rotation,\n            color,\n            opacity,\n            bgColor,\n            bgOpacity\n        );\n        if (result && params !== undefined) {\n            if (params.pickingData !== undefined) {\n                targetLayer.storage.addPickingData(\n                    prevDrawCount,\n                    targetLayer.storage.drawCount,\n                    params.pickingData\n                );\n            }\n        } else if (!result) {\n            (targetLayer.storage as any).m_drawCount = prevDrawCount;\n        }\n        return result;\n    }\n\n    /**\n     * Executes the `pickCallback` for all previously stored picking data for text covering the\n     * specified screen position.\n     *\n     * @param screenPosition - Screen coordinate of picking position.\n     * @param pickCallback - Callback to be called for every picked element.\n     */\n    pickText(position: THREE.Vector2, callback: (pickData: any | undefined) => void): void {\n        for (const layer of this.m_layers) {\n            layer.storage.pick(position, callback);\n        }\n    }\n\n    /**\n     * Update the info with the memory footprint caused by objects owned by the `TextCanvas`.\n     *\n     * @param info - The info object to increment with the values from this `TextCanvas`.\n     */\n    getMemoryUsage(info: MemoryUsage) {\n        this.m_fontCatalog.updateMemoryUsage(info);\n\n        for (const layer of this.m_layers) {\n            layer.storage.updateMemoryUsage(info);\n        }\n    }\n\n    // Places all glyphs for input text. Depending on parameters, it can store the resulting glyphs\n    // in the current [[TextGeometry]] (or into a separate buffer) or compute the bounding box for\n    // the input (as a whole or on a per-character basis).\n    private placeText(params: TextPlacementParameters): boolean {\n        if (params.input.length === 0 || this.m_currentTextLayoutStyle.maxLines! === 0) {\n            if (params.bounds !== undefined) {\n                params.bounds.min.set(0, 0);\n                params.bounds.max.set(0, 0);\n            }\n            if (params.individualBounds !== undefined) {\n                params.individualBounds.length = 0;\n            }\n            return true;\n        }\n\n        let glyphArray;\n        let smallCapsTransformations: boolean[] | undefined;\n        const smallCapsEnabled =\n            this.m_currentTextRenderStyle.fontVariant === FontVariant.SmallCaps;\n        if (typeof params.input !== \"string\") {\n            glyphArray = params.input;\n            if (params.letterCaseArray) {\n                smallCapsTransformations = params.letterCaseArray;\n            }\n        } else {\n            smallCapsTransformations = [];\n            glyphArray = this.m_fontCatalog.getGlyphs(\n                params.input,\n                this.m_currentTextRenderStyle,\n                smallCapsEnabled ? smallCapsTransformations : undefined\n            );\n            if (glyphArray === undefined) {\n                return false;\n            }\n        }\n\n        let glyphBounds;\n        if (params.individualBounds !== undefined) {\n            tempTextBounds.array = params.individualBounds;\n            tempTextBounds.offset = 0;\n            glyphBounds = tempTextBounds;\n        }\n        if (params.bounds !== undefined) {\n            params.bounds.min.set(Infinity, Infinity);\n            params.bounds.max.set(-Infinity, -Infinity);\n        }\n        if (params.computeTextBuffer === true) {\n            tempVertexBuffer = new Float32Array(glyphArray.length * QUAD_VERTEX_MEMORY_FOOTPRINT);\n        }\n\n        const isPath = params.textPath !== undefined;\n        const typesettingParams: TypesettingParameters | PathTypesettingParameters = {\n            glyphs: glyphArray,\n            fontCatalog: this.m_fontCatalog,\n            textRenderStyle: this.m_currentTextRenderStyle,\n            textLayoutStyle: this.m_currentTextLayoutStyle,\n            position: tempTextPosition,\n            geometry: params.layer.storage,\n            smallCapsArray: smallCapsEnabled ? smallCapsTransformations : undefined,\n            globalBounds: params.bounds,\n            individualBounds: glyphBounds,\n            vertexBuffer: params.computeTextBuffer === true ? tempVertexBuffer : undefined\n        };\n\n        let result = true;\n        if (isPath) {\n            Object.assign(typesettingParams as PathTypesettingParameters, {\n                path: params.textPath,\n                pathOverflow: params.textPathOverflow === true\n            });\n            result = this.m_pathTypesetter.arrangeGlyphs(\n                typesettingParams as PathTypesettingParameters\n            );\n        } else {\n            result = this.m_lineTypesetter.arrangeGlyphs(typesettingParams);\n        }\n        if (glyphBounds !== undefined) {\n            glyphBounds.array.length = glyphBounds.offset;\n        }\n\n        return result;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport * as THREE from \"three\";\n\nimport { MemoryUsage } from \"../TextCanvas\";\nimport { UnicodeUtils } from \"../utils/UnicodeUtils\";\nimport { GlyphData } from \"./GlyphData\";\nimport { GlyphTextureCache } from \"./GlyphTextureCache\";\nimport { FontStyle, FontVariant, TextRenderStyle } from \"./TextStyle\";\n\nconst ASSETS_PATH = \"_Assets/\";\nconst BOLD_ASSETS_PATH = \"_BoldAssets/\";\nconst ITALIC_ASSETS_PATH = \"_ItalicAssets/\";\nconst BOLD_ITALIC_ASSETS_PATH = \"_BoldItalicAssets/\";\nconst REPLACEMENT_PATH = \"_Assets/Extra/\";\n\ninterface SrcGlyphData {\n    id: number;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    xoffset: number;\n    yoffset: number;\n    xadvance: number;\n    page: number;\n    chnl: number;\n}\n\n/**\n * Metrics defining the placement and rendering of all glyphs in a given [[Font]].\n */\nexport interface FontMetrics {\n    size: number;\n    distanceRange: number;\n    base: number;\n    lineHeight: number;\n    lineGap: number;\n    capHeight: number;\n    xHeight: number;\n}\n\n/**\n * Description of all assets, charset and metrics that define a font inside a [[FontCatalog]].\n */\nexport interface Font {\n    name: string;\n    metrics: FontMetrics;\n    charset: string;\n    bold?: string;\n    italic?: string;\n    boldItalic?: string;\n}\n\n/**\n * Description of a continuous range of Unicode code points (as well as information on which fonts\n * supports it).\n */\nexport interface UnicodeBlock {\n    name: string;\n    min: number;\n    max: number;\n    fonts: string[];\n}\n\n/**\n * Collection of font assets used to render glyphs when using a [[TextCanvas]].\n *\n * @summary A `FontCatalog` works as a stack of SDF bitmap fonts (using the BMFont format) designed\n * to cover the widest Unicode code point range possible. In order to manage all these assets\n * elegantly, the assets inside the `FontCatalog` are stored on a per-Unicode-Block basis, and\n * assets for a block are only loaded once a glyph belonging to that block is requested.\n *\n * Bitmap information coming from all different fonts is then stored in a unified WebGL GPU Texture\n * resource, which can be sampled to render all currently loaded glyphs.\n *\n */\nexport class FontCatalog {\n    /**\n     * Loads a `FontCatalog`.\n     *\n     * @param url - Asset url.\n     * @param maxCodePointCount - Maximum number of unique code points bitmaps this `FontCatalog`'s\n     * internal texture can store simultaneously.\n     *\n     * @returns `FontCatalog` Promise.\n     */\n    static async load(path: string, maxCodePointCount: number): Promise<FontCatalog> {\n        const url = new URL(path, window.location.href);\n        const fontCatalog = await FontCatalog.loadJSON(url.href);\n\n        const replacementDirUrl = new URL(`${fontCatalog.name}${REPLACEMENT_PATH}`, url);\n        const replacementJson = await FontCatalog.loadJSON(\n            replacementDirUrl.href + \"Specials.json\"\n        );\n        const replacementTexture = await FontCatalog.loadTexture(\n            replacementDirUrl.href + \"Specials.png\"\n        );\n        replacementTexture.wrapS = THREE.ClampToEdgeWrapping;\n        replacementTexture.wrapT = THREE.ClampToEdgeWrapping;\n        replacementTexture.minFilter = THREE.NearestFilter;\n        replacementTexture.needsUpdate = true;\n\n        const replacementFont = fontCatalog.fonts.find((font: Font) => font.name === \"Extra\");\n        const replacementGlyph = new GlyphData(\n            65533,\n            \"Specials\",\n            replacementJson.chars[0].width,\n            replacementJson.chars[0].height,\n            replacementJson.chars[0].xadvance,\n            replacementJson.chars[0].xoffset,\n            replacementJson.chars[0].yoffset,\n            0.0,\n            0.0,\n            1.0,\n            1.0,\n            replacementTexture,\n            replacementFont!,\n            true\n        );\n\n        const fontCatalogInfo = new FontCatalog(\n            url.href.substr(0, url.href.lastIndexOf(\"/\")),\n            fontCatalog.name,\n            fontCatalog.type,\n            fontCatalog.size,\n            fontCatalog.maxWidth,\n            fontCatalog.maxHeight,\n            fontCatalog.distanceRange,\n            fontCatalog.fonts,\n            fontCatalog.supportedBlocks,\n            maxCodePointCount,\n            replacementGlyph\n        );\n        return fontCatalogInfo;\n    }\n\n    static async loadTexture(url: string): Promise<THREE.Texture> {\n        return await new Promise(resolve => {\n            new THREE.TextureLoader().load(url, resolve);\n        });\n    }\n\n    static async loadJSON(url: string): Promise<any> {\n        const response = await fetch(url);\n        if (!response.ok) {\n            throw new Error(`${url} Status Text:  ${response.statusText}`);\n        }\n        const rawJSON = await response.text();\n        return JSON.parse(rawJSON);\n    }\n\n    private readonly m_glyphTextureCache: GlyphTextureCache;\n\n    private readonly m_loadingJson: Map<string, Promise<any>>;\n    private readonly m_loadingPages: Map<string, Promise<THREE.Texture>>;\n    private readonly m_loadingGlyphs: Map<string, Promise<GlyphData>>;\n    private readonly m_loadedJson: Map<string, any>;\n    private readonly m_loadedPages: Map<string, THREE.Texture>;\n    private readonly m_loadedGlyphs: Map<string, Map<number, GlyphData>>;\n\n    /** If `true`, a replacement glyph is returned for every missing glyph. */\n    public showReplacementGlyphs = false;\n\n    /**\n     * @hidden\n     * Creates a new FontCatalog.\n     *\n     * @param url - FontCatalog's URL.\n     * @param name - FontCatalog's name.\n     * @param type - FontCatalog's type (sdf or msdf).\n     * @param size - FontCatalog's glyph size (pixels).\n     * @param maxWidth - FontCatalog's maximum glyph width (pixels).\n     * @param maxHeight - FontCatalog's maximum glyph height (pixels).\n     * @param distanceRange - Distance range used to generate the SDF bitmaps.\n     * @param fonts - Array of supported fonts.\n     * @param unicodeBlocks - Array of supported Unicode blocks.\n     * @param maxCodePointCount - Maximum number of unique code points bitmaps this `FontCatalog`'s\n     * internal texture can store simultaneously.\n     * @param m_replacementGlyph - [[GlyphData]] to be used whenever a Unicode code point is not\n     * supported by this `FontCatalog`.\n     *\n     * @returns New FontCatalog.\n     */\n    private constructor(\n        readonly url: string,\n        readonly name: string,\n        readonly type: string,\n        readonly size: number,\n        readonly maxWidth: number,\n        readonly maxHeight: number,\n        readonly distanceRange: number,\n        readonly fonts: Font[],\n        readonly unicodeBlocks: UnicodeBlock[],\n        readonly maxCodePointCount: number,\n        private readonly m_replacementGlyph: GlyphData\n    ) {\n        this.m_glyphTextureCache = new GlyphTextureCache(\n            maxCodePointCount,\n            this.maxWidth + 1,\n            this.maxHeight + 1\n        );\n\n        this.m_loadingJson = new Map<string, Promise<any>>();\n        this.m_loadingPages = new Map<string, Promise<THREE.Texture>>();\n        this.m_loadingGlyphs = new Map<string, Promise<GlyphData>>();\n        this.m_loadedJson = new Map<string, any>();\n        this.m_loadedPages = new Map<string, THREE.Texture>();\n        this.m_loadedGlyphs = new Map<string, Map<number, GlyphData>>();\n    }\n\n    /**\n     * Release all allocated resources.\n     */\n    dispose() {\n        this.fonts.length = 0;\n        this.unicodeBlocks.length = 0;\n        this.m_glyphTextureCache.dispose();\n        this.m_loadingJson.clear();\n        this.m_loadingPages.clear();\n        this.m_loadingGlyphs.clear();\n        this.m_loadedJson.clear();\n        this.m_loadedPages.clear();\n        this.m_loadedGlyphs.clear();\n    }\n\n    /**\n     * Removes all loaded (and loading) assets.\n     */\n    clear() {\n        this.m_glyphTextureCache.clear();\n        this.m_loadingJson.clear();\n        this.m_loadingPages.clear();\n        this.m_loadingGlyphs.clear();\n        this.m_loadedJson.clear();\n        this.m_loadedPages.clear();\n        this.m_loadedGlyphs.clear();\n    }\n\n    /**\n     * Updates the internal WebGLRenderTarget.\n     * The update will copy the newly introduced glyphs since the previous update.\n     *\n     * @param renderer - WebGLRenderer.\n     */\n    update(renderer: THREE.WebGLRenderer): void {\n        this.m_glyphTextureCache.update(renderer);\n    }\n\n    /**\n     * Internal WebGL Texture.\n     */\n    get texture(): THREE.Texture {\n        return this.m_glyphTextureCache.texture;\n    }\n\n    /**\n     * Internal WebGL Texture size.\n     */\n    get textureSize(): THREE.Vector2 {\n        return this.m_glyphTextureCache.textureSize;\n    }\n\n    /**\n     * Current internal loading state.\n     */\n    get isLoading(): boolean {\n        return (\n            this.m_loadingJson.size > 0 ||\n            this.m_loadingPages.size > 0 ||\n            this.m_loadingGlyphs.size > 0\n        );\n    }\n\n    /**\n     * Loads the description file for a specific [[UnicodeBlock]]. This speeds up consequent calls\n     * to `FontCatalog`.loadCharset() that require glyphs from this block to be loaded.\n     *\n     * @param block - Requested [[UnicodeBlock]].\n     * @param font - [[Font]] to retrieve this Unicode block from.\n     * @param fontStyle - [[FontStyle]] assets to load.\n     * @param loadPages - If `true`, all pages in this Unicode block will also be loaded.\n     *\n     * @returns Loaded Unicode Block json.\n     */\n    async loadBlock(\n        block: UnicodeBlock,\n        font: Font,\n        fontStyle: FontStyle,\n        loadPages?: boolean\n    ): Promise<any> {\n        const assetsPath = this.getAssetsPath(fontStyle, font);\n        const jsonPath = `${assetsPath}/${block.name.replace(/ /g, \"_\")}.json`;\n        let json = this.m_loadedJson.get(jsonPath);\n        if (json === undefined) {\n            let jsonPromise = this.m_loadingJson.get(jsonPath);\n            if (jsonPromise === undefined) {\n                try {\n                    jsonPromise = FontCatalog.loadJSON(jsonPath);\n                    this.m_loadingJson.set(jsonPath, jsonPromise);\n                    json = await jsonPromise;\n                    this.m_loadingJson.delete(jsonPath);\n                    this.m_loadedJson.set(jsonPath, json);\n                } catch (e) {\n                    // eslint-disable-next-line no-console\n                    console.error(e);\n                    this.m_loadingJson.delete(jsonPath);\n                }\n            } else {\n                json = await jsonPromise;\n            }\n        }\n\n        const pagePromises: Array<Promise<THREE.Texture>> = [];\n        if (loadPages === true) {\n            for (const page of json.pages) {\n                pagePromises.push(this.loadPage(`${assetsPath}/${page}`));\n            }\n        }\n        await Promise.all(pagePromises);\n\n        return json;\n    }\n\n    /**\n     * Releases the description file for a specific [[UnicodeBlock]] (and all downloaded pages).\n     * Safe to call when no assets for this block have been loaded.\n     *\n     * @param block - Requested [[UnicodeBlock]].\n     * @param font - [[Font]] to remove this Unicode block from.\n     * @param fontStyle - [[FontStyle]] assets to remove.\n     */\n    removeBlock(block: UnicodeBlock, font: Font, fontStyle: FontStyle): void {\n        const assetsPath = this.getAssetsPath(fontStyle, font);\n        const jsonPath = `${assetsPath}/${block.name.replace(/ /g, \"_\")}.json`;\n        const json = this.m_loadedJson.get(jsonPath);\n        if (json !== undefined) {\n            for (const page of json.pages) {\n                const pagePath = `${assetsPath}/${page}`;\n                this.m_loadingPages.delete(pagePath);\n                this.m_loadedPages.delete(pagePath);\n            }\n            this.m_loadingJson.delete(jsonPath);\n            this.m_loadedJson.delete(jsonPath);\n        }\n    }\n\n    /**\n     * Loads all the required glyphs needed to render the input text. Character repetition will not\n     * be considered, and only styled assets (with applied font selection, style and variants) will\n     * be loaded.\n     *\n     * @param input - Input text.\n     * @param style - Specific [[TextRenderStyle]] for which glyphs will be loaded.\n     *\n     * @returns Promise containing an array of all loaded [[GlyphData]] for the input text.\n     */\n    async loadCharset(input: string, style: TextRenderStyle): Promise<GlyphData[]> {\n        const fontName = style.fontName;\n        const fontStyle = style.fontStyle;\n        const shouldTransform =\n            style.fontVariant === FontVariant.AllCaps ||\n            style.fontVariant === FontVariant.SmallCaps;\n\n        const charset = (shouldTransform ? input.toUpperCase() : input).replace(\n            /[\\s\\S](?=([\\s\\S]+))/g,\n            (c, s) => {\n                return s.indexOf(c) + 1 ? \"\" : c;\n            }\n        );\n        const glyphPromises: Array<Promise<GlyphData>> = [];\n        for (const char of charset) {\n            const codePoint = char.codePointAt(0)!;\n            const font = this.getFont(codePoint, fontName);\n            const fontHash = `${font.name}_${fontStyle}`;\n            const glyphHash = `${fontHash}_${codePoint}`;\n\n            let fontGlyphMap = this.m_loadedGlyphs.get(fontHash);\n            if (fontGlyphMap === undefined) {\n                fontGlyphMap = new Map();\n                this.m_loadedGlyphs.set(fontHash, fontGlyphMap);\n            }\n\n            const glyph = fontGlyphMap.get(codePoint);\n            if (glyph === undefined) {\n                let glyphPromise = this.m_loadingGlyphs.get(glyphHash);\n                if (glyphPromise === undefined) {\n                    if (!font.charset.includes(String.fromCodePoint(codePoint))) {\n                        const replacementGlyph = this.createReplacementGlyph(codePoint, char, font);\n                        fontGlyphMap!.set(codePoint, replacementGlyph);\n                        this.m_glyphTextureCache.add(glyphHash, replacementGlyph);\n                        continue;\n                    }\n\n                    let charUnicodeBlock: UnicodeBlock | undefined;\n                    for (const block of this.unicodeBlocks) {\n                        if (codePoint >= block.min && codePoint <= block.max) {\n                            charUnicodeBlock = block;\n                            break;\n                        }\n                    }\n\n                    glyphPromise = this.loadAssets(codePoint, fontStyle, charUnicodeBlock!, font);\n                    this.m_loadingGlyphs.set(glyphHash, glyphPromise);\n                    glyphPromise.then((loadedGlyph: GlyphData) => {\n                        this.m_loadingGlyphs.delete(glyphHash);\n                        fontGlyphMap!.set(codePoint, loadedGlyph);\n                        this.m_glyphTextureCache.add(glyphHash, loadedGlyph);\n                    });\n                }\n                glyphPromises.push(glyphPromise);\n            } else if (!this.m_glyphTextureCache.has(glyphHash)) {\n                glyphPromises.push(Promise.resolve(glyph));\n                this.m_glyphTextureCache.add(glyphHash, glyph);\n            }\n        }\n\n        return Promise.all(glyphPromises);\n    }\n\n    /**\n     * Retrieves the loaded [[GlyphData]] for a specific character.\n     * Returns `undefined` if the assets for this glyph haven't been loaded yet.\n     *\n     * @param codePoint - Character's Unicode code point.\n     * @param font - [[Font]] to get this glyph from.\n     * @param fontStyle - Specific [[FontStyle]] to get glyphs for.\n     *\n     * @returns [[GlyphData]] for this code point.\n     */\n    getGlyph(codePoint: number, font: Font, fontStyle: FontStyle): GlyphData | undefined {\n        const fontGlyphMap = this.m_loadedGlyphs.get(`${font.name}_${fontStyle}`);\n        if (fontGlyphMap === undefined) {\n            return undefined;\n        }\n        return fontGlyphMap.get(codePoint);\n    }\n\n    /**\n     * Retrieves the loaded [[GlyphData]] for the specified text.\n     * Returns `undefined` if the assets for these glyphs haven't been loaded yet.\n     *\n     * @param input - Input text.\n     * @param style - Specific [[TextRenderStyle]] to get glyphs for.\n     * @param letterCaseArray - Array containing the original letter case for the requested glyphs.\n     *\n     * @returns Array containing [[GlyphData]] for each character of the input text.\n     */\n    getGlyphs(\n        input: string,\n        style: TextRenderStyle,\n        letterCaseArray?: boolean[]\n    ): GlyphData[] | undefined {\n        const result = [];\n        const fontName = style.fontName;\n        const fontStyle = style.fontStyle;\n        const fontVariant = style.fontVariant;\n        const shouldTransform =\n            fontVariant === FontVariant.AllCaps || fontVariant === FontVariant.SmallCaps;\n        for (const character of input) {\n            const transformedCharacter = shouldTransform ? character.toUpperCase() : character;\n            for (const char of transformedCharacter) {\n                const codePoint = char.codePointAt(0)!;\n                const font = this.getFont(codePoint, fontName);\n                const glyphData = this.getGlyph(codePoint, font, fontStyle);\n                if (\n                    glyphData !== undefined &&\n                    (!glyphData.isReplacement || this.showReplacementGlyphs)\n                ) {\n                    result.push(glyphData);\n                    if (letterCaseArray !== undefined) {\n                        letterCaseArray.push(char !== character);\n                    }\n                } else {\n                    return undefined;\n                }\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Gets the best matched font for a specific character.\n     *\n     * @param codePoint - Character's Unicode code point.\n     * @param fontName - Font name suggestion.\n     *\n     * @returns Best matched font.\n     */\n    getFont(codePoint: number, fontName?: string): Font {\n        let selectedFontName: string = this.fonts[0].name;\n        for (const block of this.unicodeBlocks) {\n            if (codePoint >= block.min && codePoint <= block.max) {\n                selectedFontName =\n                    fontName !== undefined &&\n                    block.fonts.find(element => {\n                        return element === fontName;\n                    }) !== undefined\n                        ? fontName\n                        : block.fonts[0];\n                break;\n            }\n        }\n\n        return this.fonts.find(element => {\n            return element.name === selectedFontName;\n        })!;\n    }\n\n    /**\n     * Update the info with the memory footprint caused by objects owned by the `FontCatalog`.\n     *\n     * @param info - The info object to increment with the values from this `FontCatalog`.\n     */\n    updateMemoryUsage(info: MemoryUsage) {\n        let numBytes = 0;\n\n        for (const block of this.unicodeBlocks) {\n            numBytes += (block.max - block.min) * 2;\n        }\n\n        // Always stored in RGBA internally.\n        let textureBytes =\n            this.m_glyphTextureCache.textureSize.x * this.m_glyphTextureCache.textureSize.y * 4;\n\n        for (const page in this.m_loadedPages.entries) {\n            if (this.m_loadedPages.get(page) !== undefined) {\n                const loadedPage = this.m_loadedPages.get(page);\n                if (loadedPage !== undefined) {\n                    textureBytes += loadedPage.image.width * loadedPage.image.height * 4;\n                }\n            }\n        }\n\n        info.heapSize += numBytes + textureBytes;\n        info.gpuSize += textureBytes;\n    }\n\n    private createReplacementGlyph(codePoint: number, char: string, font: Font): GlyphData {\n        const replacementGlyph = this.m_replacementGlyph.clone();\n        (replacementGlyph as any).codePoint = codePoint;\n        (replacementGlyph as any).character = char;\n        (replacementGlyph as any).font = font;\n        // Glyphs for ASCII control characters and such are not really replacement glyphs.\n        (replacementGlyph as any).isReplacement = UnicodeUtils.isPrintable(codePoint);\n        return replacementGlyph;\n    }\n\n    private async loadAssets(\n        codePoint: number,\n        fontStyle: FontStyle,\n        block: UnicodeBlock,\n        font: Font\n    ): Promise<GlyphData> {\n        const json = await this.loadBlock(block, font, fontStyle);\n        if (json === undefined) {\n            return this.m_replacementGlyph;\n        }\n\n        const sourceGlyphData = (json.chars as SrcGlyphData[]).find(char => char.id === codePoint);\n        const assetsPath = this.getAssetsPath(fontStyle, font);\n        const texturePath = `${assetsPath}/${json.pages[sourceGlyphData!.page]}`;\n        const texture = await this.loadPage(texturePath);\n\n        const glyphData = new GlyphData(\n            sourceGlyphData!.id,\n            block.name,\n            sourceGlyphData!.width,\n            sourceGlyphData!.height,\n            sourceGlyphData!.xadvance,\n            sourceGlyphData!.xoffset,\n            sourceGlyphData!.yoffset,\n            sourceGlyphData!.x / texture!.image.width,\n            1.0 - (sourceGlyphData!.y + sourceGlyphData!.height) / texture!.image.height,\n            (sourceGlyphData!.x + sourceGlyphData!.width) / texture!.image.width,\n            1.0 - sourceGlyphData!.y / texture!.image.height,\n            texture!,\n            font\n        );\n\n        return glyphData;\n    }\n\n    private async loadPage(pagePath: string): Promise<THREE.Texture> {\n        let page = this.m_loadedPages.get(pagePath);\n        if (page === undefined) {\n            let pagePromise = this.m_loadingPages.get(pagePath);\n            if (pagePromise === undefined) {\n                pagePromise = FontCatalog.loadTexture(pagePath);\n                this.m_loadingPages.set(pagePath, pagePromise);\n                page = await pagePromise;\n                page.wrapS = THREE.ClampToEdgeWrapping;\n                page.wrapT = THREE.ClampToEdgeWrapping;\n                page.minFilter = THREE.NearestFilter;\n                page.needsUpdate = true;\n                if (this.m_loadingPages.delete(pagePath)) {\n                    this.m_loadedPages.set(pagePath, page);\n                }\n                this.m_loadingPages.delete(pagePath);\n            } else {\n                page = await pagePromise;\n            }\n        }\n        return page;\n    }\n\n    private getAssetsPath(fontStyle: FontStyle, font: Font) {\n        let fontStylePath = ASSETS_PATH;\n        switch (fontStyle) {\n            case FontStyle.Bold:\n                if (font.bold !== undefined) {\n                    fontStylePath = BOLD_ASSETS_PATH;\n                }\n                break;\n            case FontStyle.Italic:\n                if (font.italic !== undefined) {\n                    fontStylePath = ITALIC_ASSETS_PATH;\n                }\n                break;\n            case FontStyle.BoldItalic:\n                if (font.boldItalic !== undefined) {\n                    fontStylePath = BOLD_ITALIC_ASSETS_PATH;\n                } else if (font.italic !== undefined) {\n                    fontStylePath = ITALIC_ASSETS_PATH;\n                } else if (font.bold !== undefined) {\n                    fontStylePath = BOLD_ASSETS_PATH;\n                }\n                break;\n        }\n        return `${this.url}/${this.name}${fontStylePath}${font.name!}`;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { UnicodeUtils } from \"../utils/UnicodeUtils\";\nimport { Font } from \"./FontCatalog\";\n\n/**\n * Structure containing all the required information necessary to render a BMFont glyph using\n * [[TextCanvas]].\n */\nexport class GlyphData {\n    /**\n     * Unicode character represented by this glyph.\n     */\n    readonly character: string;\n\n    /**\n     * Glyph' direction.\n     */\n    readonly direction: UnicodeUtils.Direction;\n\n    /**\n     * Array containing the positions for all corners of this glyph.\n     */\n    positions: THREE.Vector3[] = [];\n\n    /**\n     * Array containing the source texture coordinates for all corners of this glyph.\n     * Used to sample the original texture atlas pages.\n     */\n    sourceTextureCoordinates: THREE.Vector2[] = [];\n\n    /**\n     * Array containing the dynamic texture coordinates for all corners of this glyph.\n     * Used to sample the dynamic texture atlas page.\n     */\n    dynamicTextureCoordinates: THREE.Vector2[] = [];\n\n    /**\n     * Source texture atlas' page copy index.\n     */\n    copyIndex: number = 0;\n\n    /**\n     * Flag indicating if glyph can be currently rendered.\n     */\n    isInCache: boolean = false;\n\n    /**\n     * Creates a new `GlyphData` object.\n     *\n     * @param codePoint - Unicode code point.\n     * @param block - Unicode block.\n     * @param width - Glyph' width.\n     * @param height - Glyph' height.\n     * @param advanceX - Amount of pixel to move after placing this glyph.\n     * @param offsetX - Horizontal offset from the glyph' origin.\n     * @param offsetY - Vertical offset from the glyph' origin.\n     * @param u0 - Glyph' left texture coordinate.\n     * @param v0 - Glyph' bottom texture coordinate.\n     * @param u1 - Glyph' right texture coordinate.\n     * @param v1 - Glyph' top texture coordinate.\n     * @param texture - Glyph' source texture atlas page.\n     * @param font - Glyph' font.\n     * @param isReplacement - `true` if glyph is a replacement for a missing glyph.\n     *\n     * @returns New `GlyphData`.\n     */\n    constructor(\n        readonly codePoint: number,\n        readonly block: string,\n        readonly width: number,\n        readonly height: number,\n        readonly advanceX: number,\n        readonly offsetX: number,\n        readonly offsetY: number,\n        u0: number,\n        v0: number,\n        u1: number,\n        v1: number,\n        readonly texture: THREE.Texture,\n        readonly font: Font,\n        readonly isReplacement: boolean = false\n    ) {\n        this.character = String.fromCodePoint(codePoint);\n        this.direction = UnicodeUtils.getDirection(codePoint, block);\n\n        const left = this.offsetX;\n        const right = left + this.width;\n        const top = font.metrics.lineHeight - this.offsetY;\n        const bottom = top - this.height;\n\n        this.positions.push(\n            new THREE.Vector3(left, bottom, 1.0),\n            new THREE.Vector3(right, bottom, 1.0),\n            new THREE.Vector3(left, top, 1.0),\n            new THREE.Vector3(right, top, 1.0)\n        );\n\n        this.sourceTextureCoordinates.push(\n            new THREE.Vector2(u0, v0),\n            new THREE.Vector2(u1, v0),\n            new THREE.Vector2(u0, v1),\n            new THREE.Vector2(u1, v1)\n        );\n\n        this.dynamicTextureCoordinates.push(\n            new THREE.Vector2(0.0, 0.0),\n            new THREE.Vector2(1.0, 0.0),\n            new THREE.Vector2(0.0, 1.0),\n            new THREE.Vector2(1.0, 1.0)\n        );\n    }\n\n    /**\n     * Clone this `GlyphData`.\n     *\n     * @returns Cloned `GlyphData`.\n     */\n    clone(): GlyphData {\n        return new GlyphData(\n            this.codePoint,\n            this.block,\n            this.width,\n            this.height,\n            this.advanceX,\n            this.offsetX,\n            this.offsetY,\n            this.sourceTextureCoordinates[0].x,\n            this.sourceTextureCoordinates[0].y,\n            this.sourceTextureCoordinates[3].x,\n            this.sourceTextureCoordinates[3].y,\n            this.texture,\n            this.font,\n            this.isReplacement\n        );\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LRUCache } from \"@here/harp-lrucache\";\nimport * as THREE from \"three\";\n\nimport { Font, FontMetrics } from \"./FontCatalog\";\nimport { GlyphData } from \"./GlyphData\";\nimport { GlyphClearMaterial, GlyphCopyMaterial } from \"./TextMaterials\";\n\n/**\n * Maximum number of texture atlas pages we can copy from in a single go. This amount is determined\n * by the maximum number of texture units available on a pixel shader for all devices:\n * https://webglstats.com/webgl/parameter/MAX_TEXTURE_IMAGE_UNITS\n */\nconst MAX_NUM_COPY_PAGES = 8;\n\n/**\n * Maximum texture size supported. This amount is determined by the maximum texture size supported\n * for all devices:\n * https://webglstats.com/webgl/parameter/MAX_TEXTURE_SIZE\n */\nconst MAX_TEXTURE_SIZE = 4096;\n\n/**\n * @hidden\n * Information stored for every entry in a [[GlyphTextureCache]].\n */\nexport interface GlyphCacheEntry {\n    glyphData: GlyphData;\n    location: THREE.Vector2;\n}\n\n/**\n * @hidden\n * Unified glyph SDF bitmap storage for all fonts in a [[FontCatalog]].\n * Implemented as an abstraction layer on top of an LRUCache and WebGLRenderTarget.\n */\nexport class GlyphTextureCache {\n    private readonly m_cacheWidth: number;\n    private readonly m_cacheHeight: number;\n    private readonly m_textureSize: THREE.Vector2;\n    private readonly m_entryCache: LRUCache<string, GlyphCacheEntry>;\n\n    private readonly m_scene: THREE.Scene;\n    private readonly m_camera: THREE.OrthographicCamera;\n    private readonly m_rt: THREE.WebGLRenderTarget;\n\n    private readonly m_copyTextureSet: Set<THREE.Texture>;\n    private readonly m_copyTransform: THREE.Matrix3;\n    private readonly m_copyPositions: THREE.Vector2[];\n    private m_copyMaterial?: GlyphCopyMaterial;\n    private m_copyVertexBuffer: THREE.InterleavedBuffer;\n    private readonly m_copyPositionAttribute: THREE.InterleavedBufferAttribute;\n    private readonly m_copyUVAttribute: THREE.InterleavedBufferAttribute;\n    private readonly m_copyGeometry: THREE.BufferGeometry;\n    private m_copyMesh: THREE.Mesh;\n    private m_copyGeometryDrawCount: number;\n\n    private m_clearMaterial?: GlyphClearMaterial;\n    private m_clearPositionAttribute: THREE.BufferAttribute;\n    private readonly m_clearGeometry: THREE.BufferGeometry;\n    private m_clearMesh: THREE.Mesh;\n    private m_clearGeometryDrawCount: number;\n\n    /**\n     * Creates a `GlyphTextureCache` object.\n     *\n     * @param capacity - Cache's maximum glyph capacity.\n     * @param entryWidth - Maximum entry width.\n     * @param entryHeight - Maximum entry height.\n     *\n     * @returns New `GlyphTextureCache`.\n     */\n    constructor(\n        readonly capacity: number,\n        readonly entryWidth: number,\n        readonly entryHeight: number\n    ) {\n        const nRows = Math.floor(Math.sqrt(capacity));\n        this.m_cacheHeight = nRows * nRows < capacity ? nRows + 1 : nRows;\n        this.m_cacheWidth = nRows * this.m_cacheHeight < capacity ? nRows + 1 : nRows;\n\n        this.m_textureSize = new THREE.Vector2(\n            this.m_cacheWidth * entryWidth,\n            this.m_cacheHeight * entryHeight\n        );\n        if (this.m_textureSize.y > MAX_TEXTURE_SIZE || this.m_textureSize.x > MAX_TEXTURE_SIZE) {\n            // eslint-disable-next-line no-console\n            console.warn(\n                \"GlyphTextureCache texture size (\" +\n                    this.m_textureSize.x +\n                    \", \" +\n                    this.m_textureSize.y +\n                    \") exceeds WebGL's widely supported MAX_TEXTURE_SIZE (\" +\n                    MAX_TEXTURE_SIZE +\n                    \").\\n\" +\n                    \"This could result in rendering errors on some devices.\\n\" +\n                    \"Please consider reducing its capacity or input assets size.\"\n            );\n        }\n\n        this.m_entryCache = new LRUCache<string, GlyphCacheEntry>(capacity);\n        this.initCacheEntries();\n\n        this.m_scene = new THREE.Scene();\n        this.m_camera = new THREE.OrthographicCamera(\n            0,\n            this.m_textureSize.x,\n            this.m_textureSize.y,\n            0\n        );\n        this.m_camera.position.z = 1;\n        this.m_camera.updateMatrixWorld(false);\n        this.m_rt = new THREE.WebGLRenderTarget(this.m_textureSize.x, this.m_textureSize.y, {\n            wrapS: THREE.ClampToEdgeWrapping,\n            wrapT: THREE.ClampToEdgeWrapping,\n            depthBuffer: false,\n            stencilBuffer: false\n        });\n\n        this.m_copyTextureSet = new Set<THREE.Texture>();\n        this.m_copyTransform = new THREE.Matrix3();\n        this.m_copyPositions = [];\n        this.m_copyPositions.push(\n            new THREE.Vector2(),\n            new THREE.Vector2(),\n            new THREE.Vector2(),\n            new THREE.Vector2()\n        );\n\n        this.m_copyVertexBuffer = new THREE.InterleavedBuffer(new Float32Array(capacity * 20), 5);\n        this.m_copyVertexBuffer.setUsage(THREE.DynamicDrawUsage);\n\n        this.m_copyPositionAttribute = new THREE.InterleavedBufferAttribute(\n            this.m_copyVertexBuffer,\n            3,\n            0\n        );\n        this.m_copyUVAttribute = new THREE.InterleavedBufferAttribute(\n            this.m_copyVertexBuffer,\n            2,\n            3\n        );\n        this.m_copyGeometry = new THREE.BufferGeometry();\n        this.m_copyGeometry.setAttribute(\"position\", this.m_copyPositionAttribute);\n        this.m_copyGeometry.setAttribute(\"uv\", this.m_copyUVAttribute);\n\n        const copyIndexBuffer = new THREE.BufferAttribute(new Uint32Array(capacity * 6), 1);\n        copyIndexBuffer.setUsage(THREE.DynamicDrawUsage);\n        this.m_copyGeometry.setIndex(copyIndexBuffer);\n        this.m_copyMesh = new THREE.Mesh(this.m_copyGeometry);\n        this.m_copyMesh.frustumCulled = false;\n        this.m_copyGeometryDrawCount = 0;\n\n        this.m_clearPositionAttribute = new THREE.BufferAttribute(\n            new Float32Array(capacity * 8),\n            2\n        );\n        this.m_clearPositionAttribute.setUsage(THREE.DynamicDrawUsage);\n        this.m_clearGeometry = new THREE.BufferGeometry();\n        this.m_clearGeometry.setAttribute(\"position\", this.m_clearPositionAttribute);\n        const clearIndexBuffer = new THREE.BufferAttribute(new Uint32Array(capacity * 6), 1);\n        clearIndexBuffer.setUsage(THREE.DynamicDrawUsage);\n\n        this.m_clearGeometry.setIndex(clearIndexBuffer);\n        this.m_clearMesh = new THREE.Mesh(this.m_clearGeometry);\n        this.m_clearMesh.frustumCulled = false;\n        this.m_clearGeometryDrawCount = 0;\n\n        this.m_scene.add(this.m_clearMesh, this.m_copyMesh);\n    }\n\n    /**\n     * Release all allocated resources.\n     */\n    dispose(): void {\n        this.m_entryCache.clear();\n        this.m_scene.remove(this.m_clearMesh, this.m_copyMesh);\n        this.m_rt.dispose();\n        this.m_clearMaterial?.dispose();\n        this.m_copyMaterial?.dispose();\n        this.m_copyTextureSet.clear();\n        this.m_clearGeometry.dispose();\n        this.m_copyGeometry.dispose();\n    }\n\n    /**\n     * Internal WebGL Texture.\n     */\n    get texture(): THREE.Texture {\n        return this.m_rt.texture;\n    }\n\n    /**\n     * Internal WebGL Texture size.\n     */\n    get textureSize(): THREE.Vector2 {\n        return this.m_textureSize;\n    }\n\n    /**\n     * Add a new entry to the GlyphTextureCache. If the limit of entries is hit, the least requested\n     * entry will be replaced.\n     *\n     * @param hash - Entry's hash.\n     * @param glyph - Entry's glyph data.\n     */\n    add(hash: string, glyph: GlyphData): void {\n        const entry = this.m_entryCache.get(hash);\n        if (entry !== undefined) {\n            return;\n        }\n\n        const oldestEntry = this.m_entryCache.oldest;\n        if (oldestEntry === null) {\n            throw new Error(\"GlyphTextureCache is uninitialized!\");\n        }\n        this.clearCacheEntry(oldestEntry.value);\n        this.copyGlyphToCache(hash, glyph, oldestEntry.value.location);\n    }\n\n    /**\n     * Checks if an entry is in the cache.\n     *\n     * @param hash - Entry's hash.\n     *\n     * @returns Test result.\n     */\n    has(hash: string): boolean {\n        return this.m_entryCache.has(hash);\n    }\n\n    /**\n     * Retrieves an entry from the cache.\n     *\n     * @param hash - Entry's hash.\n     *\n     * @returns Retrieval result.\n     */\n    get(hash: string): GlyphCacheEntry | undefined {\n        return this.m_entryCache.get(hash);\n    }\n\n    /**\n     * Clears the internal LRUCache.\n     */\n    clear(): void {\n        this.m_copyGeometryDrawCount = 0;\n        this.m_clearGeometryDrawCount = 0;\n        this.m_entryCache.clear();\n        this.m_copyTextureSet.clear();\n        this.initCacheEntries();\n    }\n\n    /**\n     * Updates the internal WebGLRenderTarget.\n     * The update will copy the newly introduced glyphs since the previous update.\n     *\n     * @param renderer - WebGLRenderer.\n     */\n    update(renderer: THREE.WebGLRenderer): void {\n        let oldRenderTarget: THREE.RenderTarget | null = null;\n\n        const willClearGeometry = this.m_clearGeometryDrawCount > 0;\n        const willCopyGeometry = this.m_copyGeometryDrawCount > 0;\n\n        if (willClearGeometry || willCopyGeometry) {\n            oldRenderTarget = renderer.getRenderTarget();\n            renderer.setRenderTarget(this.m_rt);\n        }\n\n        if (willClearGeometry) {\n            if (!this.m_clearMaterial) {\n                this.m_clearMaterial = new GlyphClearMaterial({\n                    rendererCapabilities: renderer.capabilities\n                });\n                this.m_clearMesh.material = this.m_clearMaterial;\n            }\n\n            if (this.m_clearGeometry.index === null) {\n                throw new Error(\"GlyphTextureCache clear geometry index is uninitialized!\");\n            }\n            this.m_clearPositionAttribute.needsUpdate = true;\n            this.m_clearPositionAttribute.updateRange.offset = 0;\n            this.m_clearPositionAttribute.updateRange.count = this.m_clearGeometryDrawCount * 8;\n            this.m_clearGeometry.index.needsUpdate = true;\n            this.m_clearGeometry.index.updateRange.offset = 0;\n            this.m_clearGeometry.index.updateRange.count = this.m_clearGeometryDrawCount * 6;\n            this.m_clearGeometry.setDrawRange(0, this.m_clearGeometryDrawCount * 6);\n\n            this.m_clearMesh.visible = true;\n            this.m_copyMesh.visible = false;\n\n            renderer.render(this.m_scene, this.m_camera);\n            this.m_clearGeometryDrawCount = 0;\n            this.m_clearMesh.visible = false;\n        }\n\n        if (willCopyGeometry) {\n            if (!this.m_copyMaterial) {\n                this.m_copyMaterial = new GlyphCopyMaterial({\n                    rendererCapabilities: renderer.capabilities\n                });\n                this.m_copyMesh.material = this.m_copyMaterial;\n            }\n\n            if (this.m_copyGeometry.index === null) {\n                throw new Error(\"GlyphTextureCache copy geometry index is uninitialized!\");\n            }\n            this.m_copyVertexBuffer.needsUpdate = true;\n            this.m_copyVertexBuffer.updateRange.offset = 0;\n            this.m_copyVertexBuffer.updateRange.count = this.m_copyGeometryDrawCount * 20;\n            this.m_copyGeometry.index.needsUpdate = true;\n            this.m_copyGeometry.index.updateRange.offset = 0;\n            this.m_copyGeometry.index.updateRange.count = this.m_copyGeometryDrawCount * 6;\n            this.m_copyGeometry.setDrawRange(0, this.m_copyGeometryDrawCount * 6);\n\n            this.m_copyMesh.visible = true;\n            const srcPages = Array.from(this.m_copyTextureSet);\n            const nCopies = Math.ceil(this.m_copyTextureSet.size / MAX_NUM_COPY_PAGES);\n            for (let copyIndex = 0; copyIndex < nCopies; copyIndex++) {\n                const pageOffset = copyIndex * MAX_NUM_COPY_PAGES;\n                this.m_copyMaterial.uniforms.pageOffset.value = pageOffset;\n                for (let i = 0; i < MAX_NUM_COPY_PAGES; i++) {\n                    const pageIndex = pageOffset + i;\n                    if (pageIndex < this.m_copyTextureSet.size) {\n                        this.m_copyMaterial.uniforms[\"page\" + i].value = srcPages[pageIndex];\n                    }\n                }\n\n                renderer.render(this.m_scene, this.m_camera);\n            }\n            this.m_copyTextureSet.clear();\n            this.m_copyGeometryDrawCount = 0;\n        }\n        if (willClearGeometry || willCopyGeometry) {\n            renderer.setRenderTarget(oldRenderTarget);\n        }\n    }\n\n    private initCacheEntries() {\n        const dummyMetrics: FontMetrics = {\n            size: 0,\n            distanceRange: 0,\n            base: 0,\n            lineHeight: 0,\n            lineGap: 0,\n            capHeight: 0,\n            xHeight: 0\n        };\n        const dummyFont: Font = {\n            name: \"\",\n            metrics: dummyMetrics,\n            charset: \"\"\n        };\n\n        const dummyGlyphData = new GlyphData(\n            0,\n            \"\",\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            0,\n            THREE.Texture.DEFAULT_IMAGE,\n            dummyFont\n        );\n\n        for (let i = 0; i < this.m_cacheHeight; i++) {\n            for (let j = 0; j < this.m_cacheWidth; j++) {\n                const dummyEntry: GlyphCacheEntry = {\n                    glyphData: dummyGlyphData,\n                    location: new THREE.Vector2(j, i)\n                };\n                this.m_entryCache.set(`Dummy_${i * this.m_cacheHeight + j}`, dummyEntry);\n            }\n        }\n    }\n\n    private copyGlyphToCache(hash: string, glyph: GlyphData, cacheLocation: THREE.Vector2) {\n        this.m_copyTextureSet.add(glyph.texture);\n        let copyTextureIndex = 0;\n        for (const value of this.m_copyTextureSet.values()) {\n            if (value === glyph.texture) {\n                break;\n            }\n            copyTextureIndex++;\n        }\n        glyph.copyIndex = copyTextureIndex;\n\n        this.m_copyTransform.set(\n            1.0,\n            0.0,\n            cacheLocation.x * this.entryWidth - glyph.offsetX,\n            0.0,\n            1.0,\n            cacheLocation.y * this.entryHeight - glyph.positions[0].y,\n            0.0,\n            0.0,\n            0.0\n        );\n        for (let i = 0; i < 4; ++i) {\n            this.m_copyPositions[i].set(glyph.positions[i].x, glyph.positions[i].y);\n            this.m_copyPositions[i].applyMatrix3(this.m_copyTransform);\n        }\n\n        if (this.m_copyGeometryDrawCount >= this.capacity) {\n            return;\n        }\n        const baseVertex = this.m_copyGeometryDrawCount * 4;\n        const baseIndex = this.m_copyGeometryDrawCount * 6;\n\n        for (let i = 0; i < 4; ++i) {\n            this.m_copyPositionAttribute.setXYZ(\n                baseVertex + i,\n                this.m_copyPositions[i].x,\n                this.m_copyPositions[i].y,\n                glyph.copyIndex\n            );\n            this.m_copyUVAttribute.setXY(\n                baseVertex + i,\n                glyph.sourceTextureCoordinates[i].x,\n                glyph.sourceTextureCoordinates[i].y\n            );\n        }\n\n        if (this.m_copyGeometry.index === null) {\n            throw new Error(\"GlyphTextureCache copy geometry index is uninitialized!\");\n        }\n        this.m_copyGeometry.index.setX(baseIndex, baseVertex);\n        this.m_copyGeometry.index.setX(baseIndex + 1, baseVertex + 1);\n        this.m_copyGeometry.index.setX(baseIndex + 2, baseVertex + 2);\n        this.m_copyGeometry.index.setX(baseIndex + 3, baseVertex + 2);\n        this.m_copyGeometry.index.setX(baseIndex + 4, baseVertex + 1);\n        this.m_copyGeometry.index.setX(baseIndex + 5, baseVertex + 3);\n\n        ++this.m_copyGeometryDrawCount;\n\n        const u0 = this.m_copyPositions[0].x / this.m_textureSize.x;\n        const v0 = this.m_copyPositions[0].y / this.m_textureSize.y;\n        const u1 = this.m_copyPositions[3].x / this.m_textureSize.x;\n        const v1 = this.m_copyPositions[3].y / this.m_textureSize.y;\n        glyph.dynamicTextureCoordinates[0].set(u0, v0);\n        glyph.dynamicTextureCoordinates[1].set(u1, v0);\n        glyph.dynamicTextureCoordinates[2].set(u0, v1);\n        glyph.dynamicTextureCoordinates[3].set(u1, v1);\n\n        glyph.isInCache = true;\n        this.m_entryCache.set(hash, {\n            glyphData: glyph,\n            location: cacheLocation\n        });\n    }\n\n    private clearCacheEntry(entry: GlyphCacheEntry) {\n        entry.glyphData.isInCache = false;\n        this.m_copyPositions[0].set(\n            entry.location.x * this.entryWidth,\n            entry.location.y * this.entryHeight\n        );\n        this.m_copyPositions[1].set(\n            (entry.location.x + 1) * this.entryWidth,\n            entry.location.y * this.entryHeight\n        );\n        this.m_copyPositions[2].set(\n            entry.location.x * this.entryWidth,\n            (entry.location.y + 1) * this.entryHeight\n        );\n        this.m_copyPositions[3].set(\n            (entry.location.x + 1) * this.entryWidth,\n            (entry.location.y + 1) * this.entryHeight\n        );\n\n        if (this.m_clearGeometryDrawCount >= this.capacity) {\n            return;\n        }\n        const baseVertex = this.m_clearGeometryDrawCount * 4;\n        const baseIndex = this.m_clearGeometryDrawCount * 6;\n\n        for (let i = 0; i < 4; ++i) {\n            this.m_clearPositionAttribute.setXY(\n                baseVertex + i,\n                this.m_copyPositions[i].x,\n                this.m_copyPositions[i].y\n            );\n        }\n\n        if (this.m_clearGeometry.index === null) {\n            throw new Error(\"GlyphTextureCache clear geometry index is uninitialized!\");\n        }\n        this.m_clearGeometry.index.setX(baseIndex, baseVertex);\n        this.m_clearGeometry.index.setX(baseIndex + 1, baseVertex + 1);\n        this.m_clearGeometry.index.setX(baseIndex + 2, baseVertex + 2);\n        this.m_clearGeometry.index.setX(baseIndex + 3, baseVertex + 2);\n        this.m_clearGeometry.index.setX(baseIndex + 4, baseVertex + 1);\n        this.m_clearGeometry.index.setX(baseIndex + 5, baseVertex + 3);\n\n        ++this.m_clearGeometryDrawCount;\n    }\n}\n","/*\n * Copyright (C) 2018-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { GlyphData } from \"./GlyphData\";\nimport { TextLayoutStyle, TextRenderStyle } from \"./TextStyle\";\n\n/**\n * Object containing vertex buffer data generated by [[TextCanvas]].\n */\nexport class TextBufferObject {\n    /**\n     * Constructs a new `TextBufferObject`.\n     *\n     * @param glyphs - Input glyphs.\n     * @param buffer - Buffer containing the data generated by [[TextCanvas]].\n     * @param bounds - Optional text bounds.\n     * @param characterBounds - Optional character bounds.\n     * @param textRenderStyle - [[TextRenderStyle]] applied by [[TextCanvas]].\n     * @param textLayoutStyle - [[TextLayoutStyle]] applied by [[TextCanvas]].\n     *\n     * @returns New `TextBufferObject`.\n     */\n    constructor(\n        readonly glyphs: GlyphData[],\n        readonly buffer: Float32Array,\n        readonly bounds?: THREE.Box2,\n        readonly characterBounds?: THREE.Box2[],\n        readonly textRenderStyle?: TextRenderStyle,\n        readonly textLayoutStyle?: TextLayoutStyle\n    ) {}\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport * as THREE from \"three\";\n\nimport { MemoryUsage } from \"../TextCanvas\";\nimport { GlyphData } from \"./GlyphData\";\nimport { TextBufferObject } from \"./TextBufferObject\";\nimport { TextRenderStyle } from \"./TextStyle\";\n\nexport const MAX_CAPACITY = 65536;\nexport const VERTEX_BUFFER_STRIDE = 16;\nexport const INDEX_BUFFER_STRIDE = 1;\nexport const VERTICES_PER_QUAD = 4;\nexport const INDICES_PER_QUAD = 6;\nexport const QUAD_VERTEX_MEMORY_FOOTPRINT = VERTICES_PER_QUAD * VERTEX_BUFFER_STRIDE;\nexport const QUAD_INDEX_MEMORY_FOOTPRINT = INDICES_PER_QUAD * INDEX_BUFFER_STRIDE;\n\n/**\n * Number of bytes for float in an Float32Array.\n */\nconst NUM_BYTES_PER_FLOAT = 4;\n\n/**\n * Number of bytes for integer number in an UInt32Array.\n */\nconst NUM_BYTES_PER_INT32 = 4;\n\n/**\n * Interface containing user-supplied picking data, as well as the [[TextGeometry]] range it's\n * assigned to.\n */\ninterface PickingData {\n    start: number;\n    end: number;\n    data: any;\n}\n\n/**\n * Procedural geometry that holds vertex attribute data for all glyphs in a [[TextCanvas]].\n */\nexport class TextGeometry {\n    /**\n     * Count of currently drawn glyphs.\n     */\n    get drawCount(): number {\n        return this.m_drawCount;\n    }\n\n    /**\n     * Mesh used to render foreground glyphs.\n     */\n    get mesh(): THREE.Mesh {\n        return this.m_mesh;\n    }\n\n    /**\n     * Mesh used to render background glyphs.\n     */\n    get backgroundMesh(): THREE.Mesh {\n        return this.m_bgMesh;\n    }\n\n    /**\n     * Maximum glyph capacity.\n     */\n    readonly capacity: number;\n\n    private m_currentCapacity: number;\n    private m_drawCount: number;\n    private m_updateOffset: number;\n\n    private m_vertexBuffer: THREE.InterleavedBuffer;\n    private m_positionAttribute: THREE.InterleavedBufferAttribute;\n    private m_uvAttribute: THREE.InterleavedBufferAttribute;\n    private m_colorAttribute: THREE.InterleavedBufferAttribute;\n    private m_bgColorAttribute: THREE.InterleavedBufferAttribute;\n    private m_indexBuffer: THREE.BufferAttribute;\n\n    private m_geometry: THREE.BufferGeometry;\n    private m_mesh: THREE.Mesh;\n    private m_bgMesh: THREE.Mesh;\n\n    private m_pickingDataArray: PickingData[] = [];\n\n    /**\n     * Creates a new `TextGeometry`.\n     *\n     * @param material - Material used to render foreground glyphs.\n     * @param backgroundMaterial - Material used to render background glyphs.\n     * @param initialSize - Initial amount of glyphs that can be stored.\n     * @param capacity - Maximum glyph capacity.\n     *\n     * @returns New `TextGeometry`.\n     */\n    constructor(\n        readonly scene: THREE.Scene,\n        material: THREE.Material,\n        backgroundMaterial: THREE.Material,\n        initialSize: number,\n        capacity: number\n    ) {\n        this.capacity = Math.min(capacity, MAX_CAPACITY);\n        this.m_currentCapacity = Math.min(initialSize, capacity);\n        this.m_drawCount = 0;\n        this.m_updateOffset = 0;\n\n        this.m_vertexBuffer = new THREE.InterleavedBuffer(\n            new Float32Array(this.m_currentCapacity * QUAD_VERTEX_MEMORY_FOOTPRINT),\n            VERTEX_BUFFER_STRIDE\n        );\n        this.m_vertexBuffer.setUsage(THREE.DynamicDrawUsage);\n        this.m_positionAttribute = new THREE.InterleavedBufferAttribute(this.m_vertexBuffer, 4, 0);\n        this.m_uvAttribute = new THREE.InterleavedBufferAttribute(this.m_vertexBuffer, 4, 4);\n        this.m_colorAttribute = new THREE.InterleavedBufferAttribute(this.m_vertexBuffer, 4, 8);\n        this.m_bgColorAttribute = new THREE.InterleavedBufferAttribute(this.m_vertexBuffer, 4, 12);\n\n        this.m_indexBuffer = new THREE.BufferAttribute(\n            new Uint32Array(this.m_currentCapacity * QUAD_INDEX_MEMORY_FOOTPRINT),\n            INDEX_BUFFER_STRIDE\n        );\n        this.m_indexBuffer.setUsage(THREE.DynamicDrawUsage);\n\n        this.m_geometry = new THREE.BufferGeometry();\n        this.m_geometry.setAttribute(\"position\", this.m_positionAttribute);\n        this.m_geometry.setAttribute(\"uv\", this.m_uvAttribute);\n        this.m_geometry.setAttribute(\"color\", this.m_colorAttribute);\n        this.m_geometry.setAttribute(\"bgColor\", this.m_bgColorAttribute);\n        this.m_geometry.setIndex(this.m_indexBuffer);\n\n        this.m_mesh = new THREE.Mesh(this.m_geometry, material);\n        this.m_bgMesh = new THREE.Mesh(this.m_geometry, backgroundMaterial);\n        this.m_mesh.renderOrder = Number.MAX_SAFE_INTEGER;\n        this.m_bgMesh.renderOrder = Number.MAX_SAFE_INTEGER - 1;\n        this.m_mesh.frustumCulled = false;\n        this.m_bgMesh.frustumCulled = false;\n        this.scene.add(this.m_bgMesh, this.m_mesh);\n    }\n\n    /**\n     * Release all allocated resources.\n     */\n    dispose() {\n        this.scene.remove(this.m_bgMesh, this.m_mesh);\n        this.m_geometry.dispose();\n    }\n\n    /**\n     * Clear the geometry.\n     */\n    clear() {\n        this.m_drawCount = 0;\n        this.m_updateOffset = 0;\n        this.m_pickingDataArray.length = 0;\n    }\n\n    /**\n     * Update the GPU resources to reflect the latest additions to the geometry.\n     */\n    update() {\n        if (this.drawCount > this.m_updateOffset) {\n            this.m_vertexBuffer.needsUpdate = true;\n            this.m_vertexBuffer.updateRange.offset =\n                this.m_updateOffset * QUAD_VERTEX_MEMORY_FOOTPRINT;\n            this.m_vertexBuffer.updateRange.count =\n                (this.m_drawCount - this.m_updateOffset) * QUAD_VERTEX_MEMORY_FOOTPRINT;\n            this.m_indexBuffer.needsUpdate = true;\n            this.m_indexBuffer.updateRange.offset =\n                this.m_updateOffset * QUAD_INDEX_MEMORY_FOOTPRINT;\n            this.m_indexBuffer.updateRange.count =\n                (this.m_drawCount - this.m_updateOffset) * QUAD_INDEX_MEMORY_FOOTPRINT;\n        }\n        this.m_updateOffset = this.m_drawCount;\n        this.m_geometry.setDrawRange(0, this.m_drawCount * INDICES_PER_QUAD);\n    }\n\n    /**\n     * Add a new glyph to the `TextGeometry`.\n     *\n     * @param glyphData - [[GlyphData]] holding the glyph description.\n     * @param corners - Transformed glyph corners.\n     * @param weight - Foreground glyph sampling weight.\n     * @param bgWeight - Foreground glyph sampling weight.\n     * @param mirrored - If `true`, UVs will be horizontally mirrored (needed for RTL punctuation).\n     * @param style - Currently set [[TextRenderStyle]].\n     *\n     * @returns Result of the addition.\n     */\n    add(\n        glyphData: GlyphData,\n        corners: THREE.Vector3[],\n        weight: number,\n        bgWeight: number,\n        mirrored: boolean,\n        style: TextRenderStyle\n    ): boolean {\n        if (this.m_drawCount >= this.capacity) {\n            return false;\n        } else if (this.m_drawCount >= this.m_currentCapacity) {\n            const newSize = Math.min(this.m_currentCapacity * 2, this.capacity);\n            this.resizeBuffers(newSize);\n        }\n\n        const baseVertex = this.m_drawCount * VERTICES_PER_QUAD;\n        const baseIndex = this.m_drawCount * INDICES_PER_QUAD;\n\n        for (let i = 0; i < VERTICES_PER_QUAD; ++i) {\n            this.m_positionAttribute.setXYZW(\n                baseVertex + i,\n                corners[i].x,\n                corners[i].y,\n                corners[i].z,\n                (mirrored ? -1.0 : 1.0) * style.rotation\n            );\n            const mirroredUVIdx = mirrored ? ((i + 1) % 2) + Math.floor(i / 2) * 2 : i;\n            this.m_uvAttribute.setXYZW(\n                baseVertex + i,\n                glyphData.dynamicTextureCoordinates[mirroredUVIdx].x,\n                glyphData.dynamicTextureCoordinates[mirroredUVIdx].y,\n                weight,\n                bgWeight\n            );\n            this.m_colorAttribute.setXYZW(\n                baseVertex + i,\n                style.color.r,\n                style.color.g,\n                style.color.b,\n                style.opacity\n            );\n            this.m_bgColorAttribute.setXYZW(\n                baseVertex + i,\n                style.backgroundColor.r,\n                style.backgroundColor.g,\n                style.backgroundColor.b,\n                style.backgroundOpacity\n            );\n        }\n\n        this.m_indexBuffer.setX(baseIndex, baseVertex);\n        this.m_indexBuffer.setX(baseIndex + 1, baseVertex + 1);\n        this.m_indexBuffer.setX(baseIndex + 2, baseVertex + 2);\n        this.m_indexBuffer.setX(baseIndex + 3, baseVertex + 2);\n        this.m_indexBuffer.setX(baseIndex + 4, baseVertex + 1);\n        this.m_indexBuffer.setX(baseIndex + 5, baseVertex + 3);\n\n        ++this.m_drawCount;\n        return true;\n    }\n\n    /**\n     * Add a new glyph to a text buffer.\n     *\n     * @param buffer - Target buffer where glyph attributes will be stored.\n     * @param offset - Offset of the target buffer.\n     * @param glyphData - [[GlyphData]] holding the glyph description.\n     * @param corners - Transformed glyph corners.\n     * @param weight - Foreground glyph sampling weight.\n     * @param bgWeight - Foreground glyph sampling weight.\n     * @param mirrored - If `true`, UVs will be mirrored (needed for RTL punctuation).\n     * @param style - Currently set [[TextRenderStyle]].\n     */\n    addToBuffer(\n        buffer: Float32Array,\n        offset: number,\n        glyphData: GlyphData,\n        corners: THREE.Vector3[],\n        weight: number,\n        bgWeight: number,\n        mirrored: boolean,\n        style: TextRenderStyle\n    ): void {\n        for (let i = 0; i < VERTICES_PER_QUAD; ++i) {\n            const vertexOffset = offset + VERTEX_BUFFER_STRIDE * i;\n            buffer[vertexOffset] = corners[i].x;\n            buffer[vertexOffset + 1] = corners[i].y;\n            buffer[vertexOffset + 2] = corners[i].z;\n            buffer[vertexOffset + 3] = (mirrored ? -1.0 : 1.0) * style.rotation;\n\n            const mirroredUVIdx = mirrored ? ((i + 1) % 2) + Math.floor(i / 2) * 2 : i;\n            buffer[vertexOffset + 4] = glyphData.dynamicTextureCoordinates[mirroredUVIdx].x;\n            buffer[vertexOffset + 5] = glyphData.dynamicTextureCoordinates[mirroredUVIdx].y;\n            buffer[vertexOffset + 6] = weight;\n            buffer[vertexOffset + 7] = bgWeight;\n\n            buffer[vertexOffset + 8] = style.color.r;\n            buffer[vertexOffset + 9] = style.color.g;\n            buffer[vertexOffset + 10] = style.color.b;\n            buffer[vertexOffset + 11] = style.opacity;\n\n            buffer[vertexOffset + 12] = style.backgroundColor.r;\n            buffer[vertexOffset + 13] = style.backgroundColor.g;\n            buffer[vertexOffset + 14] = style.backgroundColor.b;\n            buffer[vertexOffset + 15] = style.backgroundOpacity;\n        }\n    }\n\n    /**\n     * Add a previously computed [[TextBufferObject]] to the `TextGeometry`. Extra parameters can\n     * be passed to override the passed attribute data.\n     *\n     * @param textBufferObject - [[TextBufferObject]] containing computed glyphs.\n     * @param position - Override position value.\n     * @param scale - Override scale value.\n     * @param rotation - Override rotation value.\n     * @param color - Override color value.\n     * @param opacity - Override opacity value.\n     * @param bgColor - Override background color value.\n     * @param bgOpacity - Override background opacity value.\n     *\n     * @returns Result of the addition.\n     */\n    addTextBufferObject(\n        textBufferObject: TextBufferObject,\n        position?: THREE.Vector3,\n        scale?: number,\n        rotation?: number,\n        color?: THREE.Color,\n        opacity?: number,\n        bgColor?: THREE.Color,\n        bgOpacity?: number\n    ): boolean {\n        if (this.m_drawCount + textBufferObject.glyphs.length >= this.capacity) {\n            return false;\n        } else if (this.m_drawCount + textBufferObject.glyphs.length >= this.m_currentCapacity) {\n            const newSize = Math.min(this.m_currentCapacity * 2, this.capacity);\n            this.resizeBuffers(newSize);\n        }\n\n        const s = scale ?? 1.0;\n        const r = rotation ?? 0.0;\n        const cosR = Math.cos(r);\n        const sinR = Math.sin(r);\n        const offsetX = position !== undefined ? position.x : 0.0;\n        const offsetY = position !== undefined ? position.y : 0.0;\n        // Ignore z for rendering\n        const offsetZ = 0.0;\n\n        const buffer = textBufferObject.buffer;\n\n        const rot = buffer[3];\n        const rotSign = rot < 0 ? -1.0 : 1.0;\n\n        const red = color !== undefined ? color.r : buffer[8];\n        const green = color !== undefined ? color.g : buffer[9];\n        const blue = color !== undefined ? color.b : buffer[10];\n        const alpha = opacity !== undefined ? opacity : buffer[11];\n        const bgRed = bgColor !== undefined ? bgColor.r : buffer[12];\n        const bgGreen = bgColor !== undefined ? bgColor.g : buffer[13];\n        const bgBlue = bgColor !== undefined ? bgColor.b : buffer[14];\n        const bgAlpha = bgOpacity !== undefined ? bgOpacity : buffer[15];\n\n        const targetOffset = this.m_drawCount * VERTICES_PER_QUAD;\n        for (let i = 0; i < textBufferObject.glyphs.length; ++i) {\n            const srcOffset = i * QUAD_VERTEX_MEMORY_FOOTPRINT;\n\n            const glyph = textBufferObject.glyphs[i];\n            if (!glyph.isInCache) {\n                return false;\n            }\n\n            const mirrored = buffer[srcOffset + 4] > buffer[srcOffset + VERTEX_BUFFER_STRIDE + 4];\n            const w = buffer[srcOffset + 6];\n            const bw = buffer[srcOffset + 7];\n\n            for (let j = 0; j < VERTICES_PER_QUAD; ++j) {\n                const x = buffer[srcOffset + j * VERTEX_BUFFER_STRIDE];\n                const y = buffer[srcOffset + j * VERTEX_BUFFER_STRIDE + 1];\n                this.m_positionAttribute.setXYZW(\n                    targetOffset + i * VERTICES_PER_QUAD + j,\n                    x * s * cosR + y * s * -sinR + offsetX,\n                    x * s * sinR + y * s * cosR + offsetY,\n                    buffer[srcOffset + j * VERTEX_BUFFER_STRIDE + 2] + offsetZ,\n                    buffer[srcOffset + j * VERTEX_BUFFER_STRIDE + 3] + rotSign * r\n                );\n                const mirroredUVIdx = mirrored ? ((j + 1) % 2) + Math.floor(j / 2) * 2 : j;\n                this.m_uvAttribute.setXYZW(\n                    targetOffset + i * VERTICES_PER_QUAD + j,\n                    glyph.dynamicTextureCoordinates[mirroredUVIdx].x,\n                    glyph.dynamicTextureCoordinates[mirroredUVIdx].y,\n                    w,\n                    (bw - w) / s + w\n                );\n                this.m_colorAttribute.setXYZW(\n                    targetOffset + i * VERTICES_PER_QUAD + j,\n                    red,\n                    green,\n                    blue,\n                    alpha\n                );\n                this.m_bgColorAttribute.setXYZW(\n                    targetOffset + i * VERTICES_PER_QUAD + j,\n                    bgRed,\n                    bgGreen,\n                    bgBlue,\n                    bgAlpha\n                );\n            }\n\n            this.m_indexBuffer.setX(\n                (this.m_drawCount + i) * INDICES_PER_QUAD,\n                (this.m_drawCount + i) * VERTICES_PER_QUAD\n            );\n            this.m_indexBuffer.setX(\n                (this.m_drawCount + i) * INDICES_PER_QUAD + 1,\n                (this.m_drawCount + i) * VERTICES_PER_QUAD + 1\n            );\n            this.m_indexBuffer.setX(\n                (this.m_drawCount + i) * INDICES_PER_QUAD + 2,\n                (this.m_drawCount + i) * VERTICES_PER_QUAD + 2\n            );\n            this.m_indexBuffer.setX(\n                (this.m_drawCount + i) * INDICES_PER_QUAD + 3,\n                (this.m_drawCount + i) * VERTICES_PER_QUAD + 2\n            );\n            this.m_indexBuffer.setX(\n                (this.m_drawCount + i) * INDICES_PER_QUAD + 4,\n                (this.m_drawCount + i) * VERTICES_PER_QUAD + 1\n            );\n            this.m_indexBuffer.setX(\n                (this.m_drawCount + i) * INDICES_PER_QUAD + 5,\n                (this.m_drawCount + i) * VERTICES_PER_QUAD + 3\n            );\n        }\n\n        this.m_drawCount += textBufferObject.glyphs.length;\n        return true;\n    }\n\n    /**\n     * Adds picking data for glyphs from the specified start until the last glyph added.\n     *\n     * @param startIdx - First glyph index that this picking data is associated to.\n     * @param endIdx - Last glyph index that this picking data is associated to.\n     * @param pickingData - Picking data to be added.\n     */\n    addPickingData(startIdx: number, endIdx: number, pickingData: any): boolean {\n        if (this.m_pickingDataArray.length >= this.m_currentCapacity) {\n            return false;\n        }\n\n        this.m_pickingDataArray.push({\n            start: Math.min(startIdx, this.capacity),\n            end: Math.min(endIdx, this.capacity),\n            data: pickingData\n        });\n\n        return true;\n    }\n\n    /**\n     * Fill the picking results for the pixel with the given screen coordinate. If multiple glyphs\n     * are found, the order of the results is unspecified.\n     *\n     * @param screenPosition - Screen coordinate of picking position.\n     * @param pickCallback - Callback to be called for every picked element.\n     */\n    pick(screenPosition: THREE.Vector2, pickCallback: (pickData: any | undefined) => void) {\n        for (const pickingData of this.m_pickingDataArray) {\n            if (pickingData === undefined) {\n                return;\n            }\n\n            for (let i = pickingData.start; i < pickingData.end; ++i) {\n                const positionIndex = i * VERTICES_PER_QUAD;\n\n                const minX = Math.min(\n                    this.m_positionAttribute.getX(positionIndex + 2),\n                    this.m_positionAttribute.getX(positionIndex + 1)\n                );\n                if (screenPosition.x < minX) {\n                    continue;\n                }\n\n                const maxX = Math.max(\n                    this.m_positionAttribute.getX(positionIndex + 2),\n                    this.m_positionAttribute.getX(positionIndex + 1)\n                );\n                if (screenPosition.x > maxX) {\n                    continue;\n                }\n\n                const minY = Math.min(\n                    this.m_positionAttribute.getY(positionIndex + 2),\n                    this.m_positionAttribute.getY(positionIndex + 1)\n                );\n                if (screenPosition.y < minY) {\n                    continue;\n                }\n\n                const maxY = Math.max(\n                    this.m_positionAttribute.getY(positionIndex + 2),\n                    this.m_positionAttribute.getY(positionIndex + 1)\n                );\n                if (screenPosition.y > maxY) {\n                    continue;\n                }\n\n                pickCallback(pickingData.data);\n                break;\n            }\n        }\n    }\n\n    /**\n     * Update the info with the memory footprint caused by objects owned by the `TextGeometry`.\n     *\n     * @param info - The info object to increment with the values from this `TextGeometry`.\n     */\n    updateMemoryUsage(info: MemoryUsage) {\n        const numBytes =\n            this.m_vertexBuffer.count * NUM_BYTES_PER_FLOAT +\n            this.m_indexBuffer.count * NUM_BYTES_PER_INT32;\n        info.heapSize += numBytes;\n        info.gpuSize += numBytes;\n    }\n\n    private resizeBuffers(size: number) {\n        this.m_currentCapacity = size;\n\n        const newVertexBuffer = new Float32Array(size * QUAD_VERTEX_MEMORY_FOOTPRINT);\n        newVertexBuffer.set(this.m_vertexBuffer.array);\n        this.m_vertexBuffer = new THREE.InterleavedBuffer(newVertexBuffer, VERTEX_BUFFER_STRIDE);\n        this.m_vertexBuffer.setUsage(THREE.DynamicDrawUsage);\n        this.m_positionAttribute = new THREE.InterleavedBufferAttribute(this.m_vertexBuffer, 4, 0);\n        this.m_uvAttribute = new THREE.InterleavedBufferAttribute(this.m_vertexBuffer, 4, 4);\n        this.m_colorAttribute = new THREE.InterleavedBufferAttribute(this.m_vertexBuffer, 4, 8);\n        this.m_bgColorAttribute = new THREE.InterleavedBufferAttribute(this.m_vertexBuffer, 4, 12);\n\n        const newIndexBuffer = new Uint32Array(size * QUAD_INDEX_MEMORY_FOOTPRINT);\n        newIndexBuffer.set(this.m_indexBuffer.array);\n        this.m_indexBuffer = new THREE.BufferAttribute(newIndexBuffer, INDEX_BUFFER_STRIDE);\n        this.m_indexBuffer.setUsage(THREE.DynamicDrawUsage);\n\n        this.m_geometry.dispose();\n        this.m_geometry = new THREE.BufferGeometry();\n        this.m_geometry.setAttribute(\"position\", this.m_positionAttribute);\n        this.m_geometry.setAttribute(\"uv\", this.m_uvAttribute);\n        this.m_geometry.setAttribute(\"color\", this.m_colorAttribute);\n        this.m_geometry.setAttribute(\"bgColor\", this.m_bgColorAttribute);\n        this.m_geometry.setIndex(this.m_indexBuffer);\n\n        this.m_pickingDataArray.length = this.m_currentCapacity;\n\n        this.scene.remove(this.m_bgMesh, this.m_mesh);\n        this.m_mesh = new THREE.Mesh(this.m_geometry, this.m_mesh.material);\n        this.m_bgMesh = new THREE.Mesh(this.m_geometry, this.m_bgMesh.material);\n        this.m_mesh.renderOrder = Number.MAX_SAFE_INTEGER;\n        this.m_bgMesh.renderOrder = Number.MAX_SAFE_INTEGER - 1;\n        this.m_mesh.frustumCulled = false;\n        this.m_bgMesh.frustumCulled = false;\n        this.scene.add(this.m_bgMesh, this.m_mesh);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { convertFragmentShaderToWebGL2, convertVertexShaderToWebGL2 } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nconst SdfShaderChunks = {\n    sdf_attributes: `\n        attribute vec4 position;\n        attribute vec4 uv;\n        attribute vec4 color;\n        attribute vec4 bgColor;\n        `,\n    sdf_varying: `\n        varying vec4 vColor;\n        varying float vWeight;\n        varying vec2 vUv;\n        varying float vRotation;\n        `,\n    sdf_varying_computation: `\n        #if BG_TEXT\n        vColor = bgColor;\n        vWeight = uv.w;\n        #else\n        vColor = color;\n        vWeight = uv.z;\n        #endif\n        vUv = vec2(uv.xy);\n        vRotation = position.w;\n        `,\n    sdf_frag_uniforms: `\n        uniform sampler2D sdfTexture;\n        uniform vec4 sdfParams;\n        `,\n    sdf_sampling_functions: `\n        float median(float r, float g, float b) {\n            return max(min(r, g), min(max(r, g), b));\n        }\n\n        float getDistance(vec2 uvOffset) {\n            vec3 texSample = texture2D(sdfTexture, vUv.xy + uvOffset).rgb;\n            #if MSDF\n            return median(texSample.r, texSample.g, texSample.b);\n            #else\n            return texSample.r;\n            #endif\n        }\n\n        float getOpacity(vec2 uvOffset, float weight) {\n            vec2 uv = vUv + uvOffset;\n            vec2 rotatedUVs = abs(vec2(\n                cos(vRotation) * uv.x - sin(vRotation) * uv.y,\n                sin(vRotation) * uv.x + cos(vRotation) * uv.y));\n\n            float dx = dFdx(rotatedUVs.x) * sdfParams.x;\n            float dy = dFdy(rotatedUVs.y) * sdfParams.y;\n            float toPixels = sdfParams.w * inversesqrt( dx * dx + dy * dy );\n\n            float dist = getDistance(uvOffset) + min(weight, 0.5 - 1.0 / sdfParams.w) - 0.5;\n            return clamp(dist * toPixels + 0.5, 0.0, 1.0);\n        }\n        `\n};\nObject.assign(THREE.ShaderChunk, SdfShaderChunks);\n\nconst clearVertexSource: string = `\n    attribute vec2 position;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    void main() {\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position.xy, 0.0, 1.0);\n    }`;\n\nconst clearFragmentSource: string = `\n    precision highp float;\n    precision highp int;\n\n    void main() {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    }`;\n\nconst copyVertexSource: string = `\n    attribute vec3 position;\n    attribute vec2 uv;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    varying vec3 vUv;\n\n    void main() {\n        vUv = vec3(uv.xy, position.z);\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position.xy, 0.0, 1.0);\n    }`;\n\nconst copyFragmentSource: string = `\n    precision highp float;\n    precision highp int;\n\n    uniform float pageOffset;\n    uniform sampler2D page0;\n    uniform sampler2D page1;\n    uniform sampler2D page2;\n    uniform sampler2D page3;\n    uniform sampler2D page4;\n    uniform sampler2D page5;\n    uniform sampler2D page6;\n    uniform sampler2D page7;\n\n    varying vec3 vUv;\n\n    void main() {\n        vec4 texSample = vec4(0.0);\n        if (vUv.z < pageOffset || vUv.z > (pageOffset + 7.0)) discard;\n        else if (vUv.z < pageOffset + 1.0) texSample = texture2D(page0, vUv.xy);\n        else if (vUv.z < pageOffset + 2.0) texSample = texture2D(page1, vUv.xy);\n        else if (vUv.z < pageOffset + 3.0) texSample = texture2D(page2, vUv.xy);\n        else if (vUv.z < pageOffset + 4.0) texSample = texture2D(page3, vUv.xy);\n        else if (vUv.z < pageOffset + 5.0) texSample = texture2D(page4, vUv.xy);\n        else if (vUv.z < pageOffset + 6.0) texSample = texture2D(page5, vUv.xy);\n        else if (vUv.z < pageOffset + 7.0) texSample = texture2D(page6, vUv.xy);\n        else texSample = texture2D(page7, vUv.xy);\n\n        gl_FragColor = texSample;\n    }`;\n\nconst sdfTextVertexSource: string = `\n    #include <sdf_attributes>\n    #include <sdf_varying>\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    void main() {\n        #include <sdf_varying_computation>\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position.xyz, 1.0);\n    }`;\n\nconst sdfTextFragmentSource: string = `\n    precision highp float;\n    precision highp int;\n\n    #include <sdf_varying>\n    #include <sdf_frag_uniforms>\n    #include <sdf_sampling_functions>\n\n    void main() {\n        vec4 color = vColor;\n        color.a *= getOpacity(vec2(0.0), vWeight);\n        if (color.a < 0.05) {\n            discard;\n        }\n        gl_FragColor = color;\n    }`;\n\ninterface RendererMaterialParameters {\n    rendererCapabilities: THREE.WebGLCapabilities;\n}\n\ninterface RawShaderMaterialParameters extends THREE.ShaderMaterialParameters {\n    rendererCapabilities: THREE.WebGLCapabilities;\n}\n\nclass RawShaderMaterial extends THREE.RawShaderMaterial {\n    /**\n     * The constructor of `RawShaderMaterial`.\n     *\n     * @param params - `RawShaderMaterial` parameters.  Always required except when cloning\n     * another material.\n     */\n    constructor(params?: RawShaderMaterialParameters) {\n        const isWebGL2 = params?.rendererCapabilities.isWebGL2 === true;\n\n        const shaderParams: THREE.ShaderMaterialParameters | undefined = params\n            ? {\n                  ...params,\n                  glslVersion: isWebGL2 ? THREE.GLSL3 : THREE.GLSL1,\n                  vertexShader:\n                      isWebGL2 && params.vertexShader\n                          ? convertVertexShaderToWebGL2(params.vertexShader)\n                          : params.vertexShader,\n                  fragmentShader:\n                      isWebGL2 && params.fragmentShader\n                          ? convertFragmentShaderToWebGL2(params.fragmentShader)\n                          : params.fragmentShader\n              }\n            : undefined;\n        // Remove properties that are not in THREE.ShaderMaterialParameters, otherwise THREE.js\n        // will log warnings.\n        if (shaderParams) {\n            delete (shaderParams as any).rendererCapabilities;\n        }\n        super(shaderParams);\n    }\n}\n\n/**\n * @hidden\n * Material used for clearing glyphs from a [[GlyphTextureCache]].\n */\nexport class GlyphClearMaterial extends RawShaderMaterial {\n    /**\n     * Creates a new `GlyphClearMaterial`.\n     * @param params - Material parameters. Always required except when cloning another\n     * material.\n     * @returns New `GlyphClearMaterial`.\n     */\n    constructor(params?: RendererMaterialParameters) {\n        const shaderParams: RawShaderMaterialParameters | undefined = params\n            ? {\n                  name: \"GlyphClearMaterial\",\n                  vertexShader: clearVertexSource,\n                  fragmentShader: clearFragmentSource,\n                  uniforms: {},\n                  depthTest: false,\n                  depthWrite: false,\n                  rendererCapabilities: params.rendererCapabilities\n              }\n            : undefined;\n        super(shaderParams);\n    }\n}\n\n/**\n * @hidden\n * Material used for copying glyphs into a [[GlyphTextureCache]].\n */\nexport class GlyphCopyMaterial extends RawShaderMaterial {\n    /**\n     * Creates a new `GlyphCopyMaterial`.\n     * @param params - Material parameters. Always required except when cloning another\n     * material.\n     * @returns New `GlyphCopyMaterial`.\n     */\n    constructor(params?: RawShaderMaterialParameters) {\n        const shaderParams: RawShaderMaterialParameters | undefined = params\n            ? {\n                  name: \"GlyphCopyMaterial\",\n                  vertexShader: copyVertexSource,\n                  fragmentShader: copyFragmentSource,\n                  uniforms: {\n                      pageOffset: new THREE.Uniform(0.0),\n                      page0: new THREE.Uniform(THREE.Texture.DEFAULT_IMAGE),\n                      page1: new THREE.Uniform(THREE.Texture.DEFAULT_IMAGE),\n                      page2: new THREE.Uniform(THREE.Texture.DEFAULT_IMAGE),\n                      page3: new THREE.Uniform(THREE.Texture.DEFAULT_IMAGE),\n                      page4: new THREE.Uniform(THREE.Texture.DEFAULT_IMAGE),\n                      page5: new THREE.Uniform(THREE.Texture.DEFAULT_IMAGE),\n                      page6: new THREE.Uniform(THREE.Texture.DEFAULT_IMAGE),\n                      page7: new THREE.Uniform(THREE.Texture.DEFAULT_IMAGE)\n                  },\n                  depthTest: false,\n                  depthWrite: false,\n                  rendererCapabilities: params.rendererCapabilities\n              }\n            : undefined;\n        super(shaderParams);\n    }\n}\n\n/**\n * @hidden\n * Material parameters passed on [[SdfTextMaterial]] creation.\n */\nexport interface SdfTextMaterialParameters extends RendererMaterialParameters {\n    texture: THREE.Texture;\n    textureSize: THREE.Vector2;\n    size: number;\n    distanceRange: number;\n    isMsdf: boolean;\n    isBackground: boolean;\n    vertexSource?: string;\n    fragmentSource?: string;\n}\n\n/**\n * Material designed to render transformable, high quality SDF text.\n */\nexport class SdfTextMaterial extends RawShaderMaterial {\n    /**\n     * Creates a new `SdfTextMaterial`.\n     *\n     * @param params - Material parameters. Always required except when cloning another\n     * material.\n     * @returns New `SdfTextMaterial`.\n     */\n    constructor(params?: SdfTextMaterialParameters) {\n        const shaderParams: RawShaderMaterialParameters | undefined = params\n            ? {\n                  name: \"SdfTextMaterial\",\n                  vertexShader:\n                      params.vertexSource !== undefined ? params.vertexSource : sdfTextVertexSource,\n                  fragmentShader:\n                      params.fragmentSource !== undefined\n                          ? params.fragmentSource\n                          : sdfTextFragmentSource,\n                  uniforms: {\n                      sdfTexture: new THREE.Uniform(params.texture),\n                      sdfParams: new THREE.Uniform(\n                          new THREE.Vector4(\n                              params.textureSize.x,\n                              params.textureSize.y,\n                              params.size,\n                              params.distanceRange\n                          )\n                      )\n                  },\n                  defines: {\n                      MSDF: params.isMsdf ? 1.0 : 0.0,\n                      BG_TEXT: params.isBackground ? 1.0 : 0.0\n                  },\n                  depthTest: true,\n                  depthWrite: false,\n                  side: THREE.DoubleSide,\n                  transparent: true,\n                  rendererCapabilities: params.rendererCapabilities\n              }\n            : undefined;\n        super(shaderParams);\n        this.extensions.derivatives = true;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\n/**\n * Unit of measurement used to specify a font's size.\n */\nexport enum FontUnit {\n    Em,\n    Pixel,\n    Point,\n    Percent\n}\n\n/**\n * Pair of unit and size specifying a font's size.\n */\nexport interface FontSize {\n    unit: FontUnit;\n    size: number;\n    backgroundSize: number;\n}\n\n/**\n * Style to be used when rendering glyphs.\n */\nexport enum FontStyle {\n    Regular,\n    Bold,\n    Italic,\n    BoldItalic\n}\n\n/**\n * Variant to be used when rendering.\n */\nexport enum FontVariant {\n    Regular,\n    AllCaps,\n    SmallCaps\n}\n\n/**\n * Vertical alignment to be used when placing text.\n */\nexport enum VerticalAlignment {\n    Above = 0.0,\n    Center = -0.5,\n    Below = -1.0\n}\n\n/**\n * Horizontal alignment to be used when placing text.\n */\nexport enum HorizontalAlignment {\n    Left = 0.0,\n    Center = -0.5,\n    Right = -1.0\n}\n\n/**\n * Vertical position of text area relative to the placement context (point, line).\n */\nexport enum VerticalPlacement {\n    Top = 0.0,\n    Center = -0.5,\n    Bottom = -1.0\n}\n\n/**\n * Horizontal position of text element relative to the placement context (point, line).\n *\n * @note [[HorizontalPlacement]] value is exactly opposite to [[HorizontalAlignment]] value,\n * cause when you place text on the right side of point (or icon) it will be left-aligned.\n */\nexport enum HorizontalPlacement {\n    Left = -1.0,\n    Center = -0.5,\n    Right = 0.0\n}\n\nexport interface TextPlacement {\n    v: VerticalPlacement;\n    h: HorizontalPlacement;\n}\n\nexport type TextPlacements = TextPlacement[];\n\n/**\n * Text wrapping rule used when `lineWidth` is reached.\n */\nexport enum WrappingMode {\n    None,\n    Character,\n    Word\n}\n\n/**\n * @hidden\n * @internal\n * Utility function that gets deduced [[HorizontalAlignment]] from [[HorizontalPlacement]].\n * Horizontal alignments are exactly opposite to the placements.\n */\nexport function hAlignFromPlacement(hP: HorizontalPlacement): HorizontalAlignment {\n    return (hP as unknown) as HorizontalAlignment;\n}\n\n/**\n * @hidden\n * @internal\n * Utility function that gets deduced [[VerticalAlignment]] from [[VerticalPlacement]].\n */\nexport function vAlignFromPlacement(vP: VerticalPlacement): VerticalAlignment {\n    return (vP as unknown) as VerticalAlignment;\n}\n\n/**\n * @hidden\n * @internal\n * Utility function that gets deduced [[HorizontalPlacement]] from [[HorizontalAlignment]].\n * Horizontal placements are exactly opposite to the alignment values.\n */\nexport function hPlacementFromAlignment(hA: HorizontalAlignment): HorizontalPlacement {\n    return (hA as unknown) as HorizontalPlacement;\n}\n\n/**\n * @hidden\n * @internal\n * Utility function that gets deduced [[VerticalPlacement]] from [[VerticalAlignment]].\n */\nexport function vPlacementFromAlignment(vA: VerticalAlignment): VerticalPlacement {\n    return (vA as unknown) as VerticalPlacement;\n}\n\n/**\n * Namespace containing default values for all members of [[TextRenderParameters]] and\n * [[TextLayoutParameters]].\n */\nexport namespace DefaultTextStyle {\n    export const DEFAULT_FONT_NAME: string = \"\";\n    export const DEFAULT_FONT_SIZE: FontSize = {\n        unit: Object.freeze(FontUnit.Pixel),\n        size: Object.freeze(16.0),\n        backgroundSize: Object.freeze(0.0)\n    };\n    export const DEFAULT_FONT_STYLE: FontStyle = FontStyle.Regular;\n    export const DEFAULT_FONT_VARIANT: FontVariant = FontVariant.Regular;\n    export const DEFAULT_ROTATION: number = 0.0;\n    export const DEFAULT_COLOR: THREE.Color = new THREE.Color(0x000000);\n    export const DEFAULT_OPACITY: number = 1.0;\n    export const DEFAULT_BACKGROUND_COLOR: THREE.Color = new THREE.Color(0x000000);\n    export const DEFAULT_BACKGROUND_OPACITY: number = 0.0;\n\n    export const DEFAULT_TRACKING: number = 0.0;\n    export const DEFAULT_LEADING: number = 0.0;\n    export const DEFAULT_MAX_LINES: number = Infinity;\n    export const DEFAULT_LINE_WIDTH: number = Infinity;\n    export const DEFAULT_CANVAS_ROTATION: number = 0.0;\n    export const DEFAULT_LINE_ROTATION: number = 0.0;\n    export const DEFAULT_WRAPPING_MODE: WrappingMode = WrappingMode.Word;\n    export const DEFAULT_VERTICAL_ALIGNMENT: VerticalAlignment = VerticalAlignment.Above;\n    export const DEFAULT_HORIZONTAL_ALIGNMENT: HorizontalAlignment = HorizontalAlignment.Left;\n    export const DEFAULT_PLACEMENTS: TextPlacement[] = [];\n}\n\n/**\n * [[TextCanvas]] text rendering parameters.\n */\nexport interface TextRenderParameters {\n    fontName?: string;\n    fontSize?: FontSize;\n    fontStyle?: FontStyle;\n    fontVariant?: FontVariant;\n    rotation?: number;\n    color?: THREE.Color;\n    backgroundColor?: THREE.Color;\n    opacity?: number;\n    backgroundOpacity?: number;\n}\n\n/**\n * [[TextCanvas]] text rendering style.\n */\nexport class TextRenderStyle {\n    private m_params: TextRenderParameters;\n\n    /**\n     * Creates a new `TextRenderStyle`.\n     *\n     * @param params - Input [[TextRenderParameters]].\n     *\n     * @returns New `TextRenderStyle`.\n     */\n    constructor(params: TextRenderParameters = {}) {\n        this.m_params = {\n            fontName:\n                params.fontName !== undefined\n                    ? params.fontName\n                    : DefaultTextStyle.DEFAULT_FONT_NAME,\n            fontSize:\n                params.fontSize !== undefined\n                    ? { ...params.fontSize }\n                    : {\n                          unit: DefaultTextStyle.DEFAULT_FONT_SIZE.unit,\n                          size: DefaultTextStyle.DEFAULT_FONT_SIZE.size,\n                          backgroundSize: DefaultTextStyle.DEFAULT_FONT_SIZE.backgroundSize\n                      },\n            fontStyle:\n                params.fontStyle !== undefined\n                    ? params.fontStyle\n                    : DefaultTextStyle.DEFAULT_FONT_STYLE,\n            fontVariant:\n                params.fontVariant !== undefined\n                    ? params.fontVariant\n                    : DefaultTextStyle.DEFAULT_FONT_VARIANT,\n            rotation:\n                params.rotation !== undefined ? params.rotation : DefaultTextStyle.DEFAULT_ROTATION,\n            color:\n                params.color !== undefined\n                    ? params.color.clone()\n                    : DefaultTextStyle.DEFAULT_COLOR.clone(),\n            opacity:\n                params.opacity !== undefined ? params.opacity : DefaultTextStyle.DEFAULT_OPACITY,\n            backgroundColor:\n                params.backgroundColor !== undefined\n                    ? params.backgroundColor.clone()\n                    : DefaultTextStyle.DEFAULT_BACKGROUND_COLOR.clone(),\n            backgroundOpacity:\n                params.backgroundOpacity !== undefined\n                    ? params.backgroundOpacity\n                    : DefaultTextStyle.DEFAULT_BACKGROUND_OPACITY\n        };\n    }\n\n    /**\n     * Current [[TextRenderParameters]] for this style.\n     */\n    get params(): TextRenderParameters {\n        return this.m_params;\n    }\n\n    set params(value: TextRenderParameters) {\n        this.m_params = { ...this.m_params, ...value };\n    }\n\n    /**\n     * Name of the preferred [[Font]] to be used when rendering.\n     */\n    get fontName(): string {\n        return this.m_params.fontName!;\n    }\n\n    set fontName(value: string) {\n        this.m_params.fontName = value;\n    }\n\n    /**\n     * Collection of unit and sizes to apply for the currently active [[Font]].\n     */\n    get fontSize(): FontSize {\n        return this.m_params.fontSize!;\n    }\n\n    set fontSize(value: FontSize) {\n        this.m_params.fontSize = { ...value };\n    }\n\n    /**\n     * Glyph style to apply for the currently active [[Font]].\n     */\n    get fontStyle(): FontStyle {\n        return this.m_params.fontStyle!;\n    }\n\n    set fontStyle(value: FontStyle) {\n        this.m_params.fontStyle = value;\n    }\n\n    /**\n     * Glyph variant to apply for the currently active [[Font]].\n     */\n    get fontVariant(): FontVariant {\n        return this.m_params.fontVariant!;\n    }\n\n    set fontVariant(value: FontVariant) {\n        this.m_params.fontVariant = value;\n    }\n\n    /**\n     * Glyph local rotation (radians).\n     */\n    get rotation(): number {\n        return this.m_params.rotation!;\n    }\n\n    set rotation(value: number) {\n        this.m_params.rotation = value;\n    }\n\n    /**\n     * Glyph color.\n     */\n    get color(): THREE.Color {\n        return this.m_params.color!;\n    }\n\n    set color(value: THREE.Color) {\n        this.m_params.color!.copy(value);\n    }\n\n    /**\n     * Glyph background color.\n     */\n    get backgroundColor(): THREE.Color {\n        return this.m_params.backgroundColor!;\n    }\n\n    set backgroundColor(value: THREE.Color) {\n        this.m_params.backgroundColor!.copy(value);\n    }\n\n    /**\n     * Glyph opacity.\n     */\n    get opacity(): number {\n        return this.m_params.opacity!;\n    }\n\n    set opacity(value: number) {\n        this.m_params.opacity = value;\n    }\n\n    /**\n     * Glyph background opacity.\n     */\n    get backgroundOpacity(): number {\n        return this.m_params.backgroundOpacity!;\n    }\n\n    set backgroundOpacity(value: number) {\n        this.m_params.backgroundOpacity = value;\n    }\n\n    /**\n     * Clone this [[TextRenderStyle]].\n     *\n     * @param params - Input [[TextRenderParameters]].\n     *\n     * @returns Cloned [[TextRenderStyle]].\n     */\n    clone(params: TextRenderParameters = {}): TextRenderStyle {\n        return new TextRenderStyle({ ...this.m_params, ...params });\n    }\n\n    /**\n     * Copy other [[TextRenderStyle]] properties into this object instance.\n     *\n     * @param source - The source object to be copied.\n     *\n     * @returns reference to `this` object.\n     */\n    copy(source: TextRenderStyle): TextRenderStyle {\n        // Given that all source and this params are always defined:\n        this.m_params.fontName = source.fontName;\n        this.m_params.fontSize = { ...source.fontSize };\n        this.m_params.fontStyle = source.fontStyle;\n        this.m_params.fontVariant = source.fontVariant;\n        this.m_params.rotation = source.rotation;\n        this.m_params.color!.copy(source.color);\n        this.m_params.backgroundColor!.copy(source.backgroundColor);\n        this.m_params.opacity = source.opacity;\n        this.m_params.backgroundOpacity = source.backgroundOpacity;\n        return this;\n    }\n}\n\n/**\n * [[TextCanvas]] text layout parameters.\n */\nexport interface TextLayoutParameters {\n    tracking?: number;\n    leading?: number;\n    maxLines?: number;\n    lineWidth?: number;\n    canvasRotation?: number;\n    lineRotation?: number;\n    wrappingMode?: WrappingMode;\n    verticalAlignment?: VerticalAlignment;\n    horizontalAlignment?: HorizontalAlignment;\n    placements?: TextPlacements;\n}\n\n/**\n * [[TextCanvas]] text rendering style.\n */\nexport class TextLayoutStyle {\n    private m_params: TextLayoutParameters;\n\n    /**\n     * Creates a new `TextLayoutStyle`.\n     *\n     * @param params - Input [[TextLayoutParameters]].\n     *\n     * @returns New `TextLayoutStyle`.\n     */\n    constructor(params: TextLayoutParameters = {}) {\n        // Solve alignment and placement dependencies and fallbacks.\n        const { horizontalAlignment, verticalAlignment, placements } = resolvePlacementAndAlignment(\n            params.horizontalAlignment,\n            params.verticalAlignment,\n            params.placements\n        );\n        this.m_params = {\n            tracking:\n                params.tracking !== undefined ? params.tracking : DefaultTextStyle.DEFAULT_TRACKING,\n            leading:\n                params.leading !== undefined ? params.leading : DefaultTextStyle.DEFAULT_LEADING,\n            maxLines:\n                params.maxLines !== undefined\n                    ? params.maxLines\n                    : DefaultTextStyle.DEFAULT_MAX_LINES,\n            lineWidth:\n                params.lineWidth !== undefined\n                    ? params.lineWidth\n                    : DefaultTextStyle.DEFAULT_LINE_WIDTH,\n            canvasRotation:\n                params.canvasRotation !== undefined\n                    ? params.canvasRotation\n                    : DefaultTextStyle.DEFAULT_CANVAS_ROTATION,\n            lineRotation:\n                params.lineRotation !== undefined\n                    ? params.lineRotation\n                    : DefaultTextStyle.DEFAULT_LINE_ROTATION,\n            wrappingMode:\n                params.wrappingMode !== undefined\n                    ? params.wrappingMode\n                    : DefaultTextStyle.DEFAULT_WRAPPING_MODE,\n            verticalAlignment,\n            horizontalAlignment,\n            placements\n        };\n    }\n\n    /**\n     * Current [[TextLayoutParameters]] for this style.\n     */\n    get params(): TextLayoutParameters {\n        return this.m_params;\n    }\n\n    set params(value: TextLayoutParameters) {\n        this.m_params = { ...this.m_params, ...value };\n    }\n\n    /**\n     * Inter-glyph spacing (pixels). Scaled by [[FontSize]].\n     */\n    get tracking(): number {\n        return this.m_params.tracking!;\n    }\n\n    set tracking(value: number) {\n        this.m_params.tracking = value;\n    }\n\n    /**\n     * Inter-line spacing (pixels). Scaled by [[FontSize]].\n     */\n    get leading(): number {\n        return this.m_params.leading!;\n    }\n\n    set leading(value: number) {\n        this.m_params.leading = value;\n    }\n\n    /**\n     * Maximum number of lines to be considered when using [[TextCanvas]].\n     */\n    get maxLines(): number {\n        return this.m_params.maxLines!;\n    }\n\n    set maxLines(value: number) {\n        this.m_params.maxLines = value;\n    }\n\n    /**\n     * Maximum line width (pixels).\n     */\n    get lineWidth(): number {\n        return this.m_params.lineWidth!;\n    }\n\n    set lineWidth(value: number) {\n        this.m_params.lineWidth = value;\n    }\n\n    /**\n     * [[TextCanvas]] rotation (radians).\n     */\n    get canvasRotation(): number {\n        return this.m_params.canvasRotation!;\n    }\n\n    set canvasRotation(value: number) {\n        this.m_params.canvasRotation = value;\n    }\n\n    /**\n     * Line typesetting rotation (radians).\n     */\n    get lineRotation(): number {\n        return this.m_params.lineRotation!;\n    }\n\n    set lineRotation(value: number) {\n        this.m_params.lineRotation = value;\n    }\n\n    /**\n     * Wrapping (line-breaking) mode.\n     */\n    get wrappingMode(): WrappingMode {\n        return this.m_params.wrappingMode!;\n    }\n\n    set wrappingMode(value: WrappingMode) {\n        this.m_params.wrappingMode = value;\n    }\n\n    /**\n     * Text position regarding the baseline.\n     */\n    get verticalAlignment(): VerticalAlignment {\n        return this.m_params.verticalAlignment!;\n    }\n\n    set verticalAlignment(value: VerticalAlignment) {\n        this.m_params.verticalAlignment = value;\n    }\n\n    /**\n     * Text position inside a line.\n     */\n    get horizontalAlignment(): HorizontalAlignment {\n        return this.m_params.horizontalAlignment!;\n    }\n\n    set horizontalAlignment(value: HorizontalAlignment) {\n        this.m_params.horizontalAlignment = value;\n    }\n\n    /**\n     * Text placement options relative to label anchor (origin).\n     *\n     * @note [[TextPlacement]]s options may override alignment settings.\n     */\n    get placements(): TextPlacements {\n        return this.m_params.placements!;\n    }\n\n    set placements(value: TextPlacements) {\n        const { horizontalAlignment, verticalAlignment, placements } = resolvePlacementAndAlignment(\n            this.horizontalAlignment,\n            this.verticalAlignment,\n            value\n        );\n        this.m_params.horizontalAlignment = horizontalAlignment;\n        this.m_params.verticalAlignment = verticalAlignment;\n        this.m_params.placements = placements;\n    }\n\n    /**\n     * Clone this [[TextLayoutStyle]].\n     *\n     * @param params - Input [[TextLayoutParameters]].\n     *\n     * @returns Cloned [[TextLayoutStyle]].\n     */\n    clone(params: TextLayoutParameters = {}): TextLayoutStyle {\n        return new TextLayoutStyle({ ...this.m_params, ...params });\n    }\n\n    /**\n     * Copy other [[TextLayoutStyle]] properties into this object instance.\n     *\n     * @param other - The object to be copied.\n     *\n     * @returns reference to `this` object.\n     */\n    copy(other: TextLayoutStyle): TextLayoutStyle {\n        this.params = { ...other.params };\n        return this;\n    }\n}\n\n/**\n * Deduce alignment and placement attributes depending on the availability.\n *\n * If placement is defined it may override alignment settings, if no attributes are\n * provided they may be retrieved from defaults.\n *\n * @param hAlignment - The optional horizontal alignment.\n * @param vAlignment - The vertical alignment - optional.\n * @param placementsOpt - Possible text placements - optional.\n * @internal\n */\nexport function resolvePlacementAndAlignment(\n    hAlignment?: HorizontalAlignment,\n    vAlignment?: VerticalAlignment,\n    placementsOpt?: TextPlacements\n): {\n    horizontalAlignment: HorizontalAlignment;\n    verticalAlignment: VerticalAlignment;\n    placements: TextPlacements;\n} {\n    // Make a deep copy or create new array from defaults.\n    const placements: TextPlacements =\n        placementsOpt?.map(v => ({ ...v })) ??\n        DefaultTextStyle.DEFAULT_PLACEMENTS.map(v => ({ ...v }));\n    // Ignore alignment attributes when placements attributes are defined or provide default\n    // values if none of them are provided.\n    // NOTE: Alignment override may be removed if we decide to support both attributes.\n    const horizontalAlignment =\n        placements.length > 0\n            ? hAlignFromPlacement(placements[0].h)\n            : hAlignment ?? DefaultTextStyle.DEFAULT_HORIZONTAL_ALIGNMENT;\n\n    const verticalAlignment =\n        placements.length > 0\n            ? vAlignFromPlacement(placements[0].v)\n            : vAlignment ?? DefaultTextStyle.DEFAULT_VERTICAL_ALIGNMENT;\n\n    return { horizontalAlignment, verticalAlignment, placements };\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { QUAD_VERTEX_MEMORY_FOOTPRINT } from \"../rendering/TextGeometry\";\nimport { FontStyle, FontVariant, WrappingMode } from \"../rendering/TextStyle\";\nimport { TypesettingUtils } from \"../utils/TypesettingUtils\";\nimport { UnicodeUtils } from \"../utils/UnicodeUtils\";\nimport { Typesetter, TypesettingParameters } from \"./Typesetter\";\n\n/**\n * [[Typesetter]] implementation that handles multi-line complex layout text.\n */\nexport class LineTypesetter implements Typesetter {\n    private readonly m_tempTransform: THREE.Matrix3;\n    private readonly m_tempCorners: THREE.Vector3[];\n    private m_tempLineDirection: UnicodeUtils.Direction;\n    private m_tempRunDirection: UnicodeUtils.Direction;\n    private m_tempPixelSize: number;\n    private m_tempPixelBgSize: number;\n    private m_tempScale: number;\n    private m_tempSmallCaps: boolean;\n\n    private m_currentParams?: TypesettingParameters;\n\n    /**\n     * Creates a `LineTypesetter` object.\n     *\n     * @returns New `LineTypesetter`.\n     */\n    constructor() {\n        this.m_tempTransform = new THREE.Matrix3();\n        this.m_tempCorners = [\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            new THREE.Vector3()\n        ];\n        this.m_tempLineDirection = UnicodeUtils.Direction.LTR;\n        this.m_tempRunDirection = UnicodeUtils.Direction.LTR;\n        this.m_tempPixelSize = 1.0;\n        this.m_tempPixelBgSize = 1.0;\n        this.m_tempScale = 1.0;\n        this.m_tempSmallCaps = false;\n    }\n\n    /**\n     * Arranges the specified glyphs using this `LineTypesetter`. Text will be placed into multiple\n     * bidirectional lines, that will be generated taking into account [[textLayoutStyle]] features,\n     * such as:\n     * - Maximum line width.\n     * - Word and character wrapping.\n     * - Maximum number of lines.\n     * - Vertical and horizontal alignment.\n     * - Leading (spacing between lines).\n     *\n     * @param params - Typesetting parameters.\n     *\n     * @returns If `false`, some error occurred during execution and the output should be dismissed.\n     */\n    arrangeGlyphs(params: TypesettingParameters): boolean {\n        // Initializes common typesetting parameters (used across all functions in this class).\n        this.m_currentParams = params;\n        this.m_tempLineDirection = TypesettingUtils.getDirection(this.m_currentParams.glyphs, 0);\n        this.m_tempRunDirection = this.m_tempLineDirection;\n        this.m_tempPixelSize = TypesettingUtils.getPixelSize(\n            this.m_currentParams.textRenderStyle.fontSize.size,\n            this.m_currentParams.textRenderStyle.fontSize.unit,\n            this.m_currentParams.fontCatalog.size\n        );\n        this.m_tempScale = this.m_tempPixelSize / this.m_currentParams.fontCatalog.size;\n        this.m_tempPixelBgSize = Math.min(\n            TypesettingUtils.getPixelSize(\n                this.m_currentParams.textRenderStyle.fontSize.backgroundSize,\n                this.m_currentParams.textRenderStyle.fontSize.unit,\n                this.m_currentParams.fontCatalog.size\n            ),\n            this.m_currentParams!.fontCatalog.distanceRange * this.m_tempScale\n        );\n        this.m_tempSmallCaps = this.m_currentParams!.smallCapsArray !== undefined;\n\n        this.m_currentParams.position.y +=\n            this.m_currentParams.textLayoutStyle.verticalAlignment *\n            this.m_currentParams.glyphs[0].font.metrics.capHeight *\n            this.m_tempScale;\n\n        const isOnlyMeasured =\n            this.m_currentParams.globalBounds !== undefined &&\n            this.m_currentParams.vertexBuffer === undefined;\n\n        // Compute line origin and height.\n        const origin = this.m_currentParams.position.x;\n        const lineHeight =\n            this.m_currentParams.glyphs[0].font.metrics.lineHeight +\n            this.m_currentParams.textLayoutStyle.leading;\n\n        // Initialize line-breaking and wrapping variables.\n        let lineStartIdx = 0;\n        let glyphWrapIdx = 0;\n        let wordWrapIdx = 0;\n        let lineStartX = 0;\n        let lineCurrX = 0;\n        let glyphWrapX = 0;\n        let wordWrapX = 0;\n\n        let lineCount = 0;\n        let isBidirectionalLine = false;\n        for (let i = 0; i < this.m_currentParams.glyphs.length; ++i) {\n            if (lineCount > this.m_currentParams.textLayoutStyle.maxLines - 1) {\n                break;\n            }\n            const glyphData = this.m_currentParams.glyphs[i];\n            if (!glyphData.isInCache && !isOnlyMeasured) {\n                return false;\n            }\n\n            const isNewLine = UnicodeUtils.isNewLine(glyphData.codePoint);\n            const isWhiteSpace = UnicodeUtils.isWhiteSpace(glyphData.codePoint);\n\n            // Check if this line should be treated as bidirectional.\n            if (!isBidirectionalLine && glyphData.direction === -this.m_tempLineDirection) {\n                isBidirectionalLine = true;\n            }\n            // Advance the line's current X offset (only for printable characters).\n            if (UnicodeUtils.isPrintable(glyphData.codePoint)) {\n                lineCurrX +=\n                    (glyphData.advanceX + this.m_currentParams.textLayoutStyle.tracking) *\n                    this.m_tempScale *\n                    (this.m_tempSmallCaps\n                        ? TypesettingUtils.getSmallCapsScale(\n                              this.m_currentParams.glyphs,\n                              this.m_currentParams.smallCapsArray!,\n                              i,\n                              this.m_currentParams.textRenderStyle.fontVariant\n                          )\n                        : 1.0);\n            }\n            // If this is the first character in a line, update the line's X offset values (needed\n            // to properly center and wrap).\n            if (i === lineStartIdx) {\n                lineStartX = lineCurrX;\n                glyphWrapX = lineCurrX;\n                wordWrapX = lineCurrX;\n            }\n\n            // Check if should break the current line.\n            if (\n                isNewLine ||\n                (this.m_currentParams.textLayoutStyle.wrappingMode === WrappingMode.Character &&\n                    lineCurrX > this.m_currentParams.textLayoutStyle.lineWidth) ||\n                (this.m_currentParams.textLayoutStyle.wrappingMode === WrappingMode.Word &&\n                    lineCurrX > this.m_currentParams.textLayoutStyle.lineWidth &&\n                    wordWrapX !== lineStartX)\n            ) {\n                // Perform wrapping.\n                if (this.m_currentParams.textLayoutStyle.wrappingMode !== WrappingMode.None) {\n                    let wrapPointIdx = glyphWrapIdx;\n                    let wrapPointX = glyphWrapX;\n                    // Only wrap words when more than a single word fits into the current line.\n                    if (\n                        this.m_currentParams.textLayoutStyle.wrappingMode === WrappingMode.Word &&\n                        wordWrapX !== lineStartX\n                    ) {\n                        wrapPointIdx = wordWrapIdx;\n                        wrapPointX = wordWrapX;\n                    }\n\n                    lineCurrX = wrapPointX;\n                    i = Math.min(\n                        isNewLine ? (lineStartIdx === i ? wrapPointIdx : i) : wrapPointIdx,\n                        this.m_currentParams.glyphs.length - 1\n                    );\n                }\n\n                // Calculate the correct starting position for the line base on alignment, and place\n                // all glyphs in it.\n                const lineAlignment =\n                    this.m_tempLineDirection === UnicodeUtils.Direction.RTL && isBidirectionalLine\n                        ? 1.0 + this.m_currentParams.textLayoutStyle.horizontalAlignment\n                        : this.m_currentParams.textLayoutStyle.horizontalAlignment;\n                this.m_currentParams.position.x =\n                    this.m_currentParams.position.x + lineCurrX * lineAlignment;\n                if (\n                    !this.placeLine(lineStartIdx, i, this.m_tempLineDirection, isBidirectionalLine)\n                ) {\n                    return false;\n                }\n\n                // Update the line position.\n                this.m_currentParams.position.y -= lineHeight * this.m_tempScale;\n                this.m_currentParams.position.x = origin;\n\n                // Find the beginning of a new line (removing trailing white spaces).\n                while (\n                    i !== lineStartIdx &&\n                    i + 1 < this.m_currentParams.glyphs.length &&\n                    UnicodeUtils.isWhiteSpace(this.m_currentParams.glyphs[i + 1].codePoint)\n                ) {\n                    ++i;\n                }\n                lineStartIdx = i + 1;\n                if (lineStartIdx === this.m_currentParams.glyphs.length) {\n                    break;\n                }\n\n                // Only reset the line's direction when a new line character is found (to keep\n                // correct bidirectional behaviour when a bidirectional run is placed between\n                // multiple lines).\n                if (isNewLine) {\n                    this.m_tempLineDirection = TypesettingUtils.getDirection(\n                        this.m_currentParams.glyphs,\n                        lineStartIdx\n                    );\n                    this.m_tempRunDirection = this.m_tempLineDirection;\n                }\n\n                // Reset the line placement parameters.\n                lineStartX = 0;\n                lineCurrX = 0;\n                glyphWrapIdx = lineStartIdx;\n                glyphWrapX = 0;\n                wordWrapIdx = lineStartIdx;\n                wordWrapX = 0;\n                isBidirectionalLine = false;\n                lineCount++;\n            }\n            // If not, should if we should record any new wrapping points.\n            else if (\n                this.m_currentParams.textLayoutStyle.wrappingMode !== WrappingMode.None &&\n                !isWhiteSpace\n            ) {\n                // Update the per-glyph wrapping point.\n                glyphWrapIdx = i;\n                glyphWrapX = lineCurrX;\n\n                // Update the word wrapping point (only if mode is correctly set and we are\n                // currently placed at the end of a word).\n                if (\n                    this.m_currentParams.textLayoutStyle.wrappingMode === WrappingMode.Word &&\n                    i + 1 < this.m_currentParams.glyphs.length &&\n                    (UnicodeUtils.isWhiteSpace(this.m_currentParams.glyphs[i + 1].codePoint) ||\n                        UnicodeUtils.isNewLine(this.m_currentParams.glyphs[i + 1].codePoint))\n                ) {\n                    wordWrapIdx = i;\n                    wordWrapX = lineCurrX;\n                }\n            }\n        }\n\n        // If we still haven't placed all characters, place a final line.\n        if (\n            lineCount <= this.m_currentParams.textLayoutStyle.maxLines - 1 &&\n            lineStartIdx <= this.m_currentParams.glyphs.length - 1\n        ) {\n            const offset =\n                this.m_tempLineDirection === UnicodeUtils.Direction.RTL && isBidirectionalLine\n                    ? 1.0 + this.m_currentParams.textLayoutStyle.horizontalAlignment\n                    : this.m_currentParams.textLayoutStyle.horizontalAlignment;\n            this.m_currentParams.position.setX(\n                this.m_currentParams.position.x + lineCurrX * offset\n            );\n            if (\n                !this.placeLine(\n                    lineStartIdx,\n                    this.m_currentParams.glyphs.length - 1,\n                    this.m_tempLineDirection,\n                    isBidirectionalLine\n                )\n            ) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    // Place characters alongside a line. Text direction is taken into account, and text is broken\n    // into directional runs.\n    private placeLine(\n        startIdx: number,\n        endIdx: number,\n        direction: UnicodeUtils.Direction,\n        isBidirectional: boolean\n    ): boolean {\n        // If the line is not bidirectional, place it as a single directional run.\n        if (!isBidirectional) {\n            return this.placeRun(startIdx, endIdx, direction);\n        }\n\n        // Gather common typesetting parameters.\n        const glyphDataArray = this.m_currentParams!.glyphs;\n        const smallCapsArray = this.m_currentParams!.smallCapsArray;\n        const textRenderStyle = this.m_currentParams!.textRenderStyle;\n        const textLayoutStyle = this.m_currentParams!.textLayoutStyle;\n        const position = this.m_currentParams!.position;\n\n        // Initialize line placement parameters.\n        const isRTL = direction === UnicodeUtils.Direction.RTL;\n        const origin = position.x;\n        let offset = 0;\n        let runStart = startIdx;\n\n        for (let i = startIdx; i <= endIdx; ++i) {\n            const glyphData = glyphDataArray[i];\n\n            // If the current glyph changes the line direction, place the current run.\n            if (glyphData.direction === -this.m_tempRunDirection) {\n                if (isRTL) {\n                    position.x = origin + offset;\n                }\n                if (!this.placeRun(runStart, i - 1, this.m_tempRunDirection)) {\n                    return false;\n                }\n                if (!isRTL) {\n                    position.x = origin + offset;\n                }\n\n                runStart = i;\n                this.m_tempRunDirection *= -1.0;\n            }\n            // If the current glyph has neutral direction (i.e. white space) and we're in the middle\n            // of a run with direction opposite to the line's main direction, check for the closest\n            // strong direction in the run.\n            else if (\n                glyphData.direction === UnicodeUtils.Direction.Neutral &&\n                this.m_tempRunDirection === -direction\n            ) {\n                let neutralIdx = i;\n                while (\n                    neutralIdx + 1 < glyphDataArray.length &&\n                    Math.abs(glyphDataArray[neutralIdx].direction) !== 1\n                ) {\n                    ++neutralIdx;\n                }\n\n                // If the closest strong direction in the run is not the current run's direction,\n                // place the current run.\n                if (glyphDataArray[neutralIdx].direction !== this.m_tempRunDirection) {\n                    if (isRTL) {\n                        position.x = origin + offset;\n                    }\n                    if (!this.placeRun(runStart, i - 1, this.m_tempRunDirection)) {\n                        return false;\n                    }\n                    if (!isRTL) {\n                        position.x = origin + offset;\n                    }\n\n                    runStart = i;\n                    this.m_tempRunDirection *= -1.0;\n                }\n            }\n\n            // Advance the offset position in the line.\n            offset +=\n                (glyphData.advanceX + textLayoutStyle.tracking) *\n                this.m_tempScale *\n                (this.m_tempSmallCaps\n                    ? TypesettingUtils.getSmallCapsScale(\n                          glyphDataArray,\n                          smallCapsArray!,\n                          i,\n                          textRenderStyle.fontVariant\n                      )\n                    : 1.0) *\n                direction;\n        }\n\n        // If we still haven't placed all characters in the line, place a final run.\n        if (runStart <= endIdx) {\n            if (isRTL) {\n                position.x = origin + offset;\n            }\n            if (!this.placeRun(runStart, endIdx, this.m_tempRunDirection)) {\n                return false;\n            }\n            if (!isRTL) {\n                position.x = origin + offset;\n            }\n        }\n\n        return true;\n    }\n\n    // Place a directional run of index inside a line.\n    private placeRun(startIdx: number, endIdx: number, direction: UnicodeUtils.Direction): boolean {\n        // Gather common typesetting parameters.\n        const glyphDataArray = this.m_currentParams!.glyphs;\n        const smallCapsArray = this.m_currentParams!.smallCapsArray;\n        const fontCatalog = this.m_currentParams!.fontCatalog;\n        const textRenderStyle = this.m_currentParams!.textRenderStyle;\n        const textLayoutStyle = this.m_currentParams!.textLayoutStyle;\n        const position = this.m_currentParams!.position;\n        const geometry = this.m_currentParams!.geometry;\n        const globalBounds = this.m_currentParams!.globalBounds;\n        const individualBounds = this.m_currentParams!.individualBounds;\n        const vertexBuffer = this.m_currentParams!.vertexBuffer;\n\n        // Move through the glyph array following the run's direction (as the order of the glyphs in\n        // memory might not match the order on glyphs on scree).\n        const start = direction === UnicodeUtils.Direction.LTR ? startIdx : endIdx;\n        const end = direction === UnicodeUtils.Direction.LTR ? endIdx : startIdx;\n        for (\n            let i = start;\n            direction === UnicodeUtils.Direction.RTL ? i >= end : i <= end;\n            i += direction\n        ) {\n            // Only process printable characters.\n            const glyphData = glyphDataArray[i];\n            if (!UnicodeUtils.isPrintable(glyphData.codePoint)) {\n                continue;\n            }\n\n            // When placing a RTL run, we need to check for weak runs (numerical runs of characters\n            // that don't change the overall run direction, but should always be displayed as LTR\n            // text).\n            if (\n                startIdx !== endIdx &&\n                i !== 0 &&\n                direction === UnicodeUtils.Direction.RTL &&\n                glyphData.direction === UnicodeUtils.Direction.Weak\n            ) {\n                let weakRunStart = i;\n                let weakGlyph = glyphDataArray[weakRunStart - 1];\n                while (\n                    weakRunStart !== startIdx &&\n                    (weakGlyph.direction === UnicodeUtils.Direction.Weak ||\n                        (weakGlyph.direction === UnicodeUtils.Direction.Neutral &&\n                            !UnicodeUtils.isWhiteSpace(weakGlyph.codePoint)))\n                ) {\n                    --weakRunStart;\n                    weakGlyph = glyphDataArray[weakRunStart - 1];\n                }\n\n                this.placeRun(Math.max(weakRunStart, startIdx), i, UnicodeUtils.Direction.LTR);\n\n                i = weakRunStart;\n                continue;\n            }\n\n            // Compute various rendering parameters for this glyph.\n            const glyphFont = glyphData.font;\n            const glyphFontMetrics = glyphFont.metrics;\n            const fontStyle = textRenderStyle.fontStyle;\n\n            const isBoldEmulated =\n                (fontStyle === FontStyle.Bold && glyphFont.bold === undefined) ||\n                (fontStyle === FontStyle.BoldItalic &&\n                    glyphFont.bold === undefined &&\n                    glyphFont.boldItalic === undefined);\n            const isItalicEmulated =\n                (fontStyle === FontStyle.Italic && glyphFont.italic === undefined) ||\n                (fontStyle === FontStyle.BoldItalic &&\n                    glyphFont.italic === undefined &&\n                    glyphFont.boldItalic === undefined);\n\n            const isSmallCaps = this.m_tempSmallCaps\n                ? smallCapsArray![i] && textRenderStyle.fontVariant === FontVariant.SmallCaps\n                : false;\n            const smallCapsScale = isSmallCaps\n                ? glyphFontMetrics.xHeight / glyphFontMetrics.capHeight\n                : 1.0;\n            const glyphScale = this.m_tempScale * smallCapsScale;\n\n            const emulationWeight =\n                ((isBoldEmulated ? 0.02 : 0.0) + (isSmallCaps ? 0.01 : 0.0)) *\n                (fontCatalog.size / fontCatalog.distanceRange);\n            const bgWeight =\n                (0.5 * this.m_tempPixelBgSize!) /\n                (fontCatalog.distanceRange * Math.max(glyphScale, 1.0));\n            const isMirrored =\n                UnicodeUtils.isRtlMirrored(glyphData.codePoint) &&\n                direction === UnicodeUtils.Direction.RTL;\n            const verticalOffset =\n                glyphFontMetrics.lineHeight -\n                glyphFontMetrics.base -\n                glyphFontMetrics.distanceRange * 0.5;\n\n            // Compute the glyphs transformation matrix and apply to all corners of a glyph.\n            TypesettingUtils.computeGlyphTransform(\n                this.m_tempTransform,\n                position,\n                glyphScale,\n                textLayoutStyle.canvasRotation,\n                textRenderStyle.rotation\n            );\n            for (let j = 0; j < 4; ++j) {\n                const glyphVertexPosition = glyphData.positions[j];\n                const horizontalOffset =\n                    isItalicEmulated && j > 1\n                        ? TypesettingUtils.OBLIQUE_OFFSET * glyphFontMetrics.size\n                        : 0.0;\n                this.m_tempCorners[j].set(\n                    glyphVertexPosition.x + horizontalOffset,\n                    glyphVertexPosition.y - verticalOffset,\n                    glyphVertexPosition.z\n                );\n                this.m_tempCorners[j].applyMatrix3(this.m_tempTransform);\n            }\n\n            // Depending on the typesetting options, add the computed glyph to the TextGeometry or\n            // update the text bounds.\n            if (globalBounds === undefined && vertexBuffer === undefined) {\n                if (\n                    !geometry.add(\n                        glyphData,\n                        this.m_tempCorners,\n                        emulationWeight,\n                        emulationWeight + bgWeight,\n                        isMirrored,\n                        textRenderStyle\n                    )\n                ) {\n                    return false;\n                }\n            } else {\n                if (globalBounds !== undefined) {\n                    TypesettingUtils.updateBounds(\n                        this.m_tempCorners,\n                        globalBounds,\n                        individualBounds\n                    );\n                }\n                if (vertexBuffer !== undefined) {\n                    geometry.addToBuffer(\n                        vertexBuffer,\n                        i * QUAD_VERTEX_MEMORY_FOOTPRINT,\n                        glyphData,\n                        this.m_tempCorners,\n                        emulationWeight,\n                        emulationWeight + bgWeight,\n                        isMirrored,\n                        textRenderStyle\n                    );\n                }\n            }\n\n            // Advance the current position and proceed to next glyph in the run.\n            position.set(\n                position.x +\n                    (glyphData.advanceX + textLayoutStyle.tracking) *\n                        glyphScale *\n                        Math.cos(textLayoutStyle.lineRotation),\n                position.y +\n                    (glyphData.advanceX + textLayoutStyle.tracking) *\n                        glyphScale *\n                        Math.sin(textLayoutStyle.lineRotation),\n                position.z\n            );\n        }\n\n        return true;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { QUAD_VERTEX_MEMORY_FOOTPRINT } from \"../rendering/TextGeometry\";\nimport { FontStyle, FontVariant } from \"../rendering/TextStyle\";\nimport { TypesettingUtils } from \"../utils/TypesettingUtils\";\nimport { UnicodeUtils } from \"../utils/UnicodeUtils\";\nimport { Typesetter, TypesettingParameters } from \"./Typesetter\";\n\n/**\n * @hidden\n * Parameters passed when placing glyphs using [[PathTypesetter]]'s `arrangeGlyphs` function.\n */\nexport interface PathTypesettingParameters extends TypesettingParameters {\n    /**\n     * Path to be followed when arranging glyphs.\n     */\n    path: THREE.Path | THREE.CurvePath<THREE.Vector2>;\n\n    /**\n     * If `true`, text on a path will be placed even when its size its bigger than the path's size.\n     */\n    pathOverflow: boolean;\n}\n\n/**\n * [[Typesetter]] implementation that arranges glyphs alongside a specified path.\n */\nexport class PathTypesetter implements Typesetter {\n    private readonly m_tempTransform: THREE.Matrix3;\n    private readonly m_tempCorners: THREE.Vector3[];\n    private m_tempLineDirection: UnicodeUtils.Direction;\n    private m_tempRunDirection: UnicodeUtils.Direction;\n    private m_tempPixelSize: number;\n    private m_tempPixelBgSize: number;\n    private m_tempScale: number;\n    private m_tempSmallCaps: boolean;\n\n    private readonly m_tempPathPosition: THREE.Vector3;\n    private m_tempPathLength: number;\n    private m_tempPathOffset: number;\n\n    private m_currentParams?: PathTypesettingParameters;\n\n    /**\n     * Creates a `PathTypesetter` object.\n     *\n     * @returns New `PathTypesetter`.\n     */\n    constructor() {\n        this.m_tempTransform = new THREE.Matrix3();\n        this.m_tempCorners = [\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            new THREE.Vector3()\n        ];\n        this.m_tempLineDirection = UnicodeUtils.Direction.LTR;\n        this.m_tempRunDirection = UnicodeUtils.Direction.LTR;\n        this.m_tempPixelSize = 1.0;\n        this.m_tempPixelBgSize = 1.0;\n        this.m_tempScale = 1.0;\n        this.m_tempSmallCaps = false;\n\n        this.m_tempPathPosition = new THREE.Vector3();\n        this.m_tempPathLength = 0.0;\n        this.m_tempPathOffset = 0.0;\n    }\n\n    /**\n     * Arranges the specified glyphs using this `PathTypesetter`. Text will be placed into a single\n     * bidirectional line that follows the specified path. Characters will be orientated and placed\n     * alongside this path following [[TextLayout]]'s [[VerticalAlignment]] and\n     * [[HorizontalAlignment]].\n     *\n     * @param params - Typesetting parameters.\n     *\n     * @returns If `false`, some error occurred during execution and the output should be dismissed.\n     */\n    arrangeGlyphs(params: PathTypesettingParameters): boolean {\n        // Initializes common typesetting parameters (used across all functions in this class).\n        this.m_currentParams = params;\n        this.m_tempLineDirection = TypesettingUtils.getDirection(this.m_currentParams.glyphs, 0);\n        this.m_tempRunDirection = this.m_tempLineDirection;\n        this.m_tempPixelSize = TypesettingUtils.getPixelSize(\n            this.m_currentParams.textRenderStyle.fontSize.size,\n            this.m_currentParams.textRenderStyle.fontSize.unit,\n            this.m_currentParams.fontCatalog.size\n        );\n        this.m_tempScale = this.m_tempPixelSize / this.m_currentParams.fontCatalog.size;\n        this.m_tempPixelBgSize = Math.min(\n            TypesettingUtils.getPixelSize(\n                this.m_currentParams.textRenderStyle.fontSize.backgroundSize,\n                this.m_currentParams.textRenderStyle.fontSize.unit,\n                this.m_currentParams.fontCatalog.size\n            ),\n            this.m_currentParams!.fontCatalog.distanceRange * this.m_tempScale\n        );\n        this.m_tempSmallCaps = this.m_currentParams!.smallCapsArray !== undefined;\n\n        this.m_tempPathLength = this.m_currentParams.path.getLength();\n        this.m_tempPathOffset = 0.0;\n\n        const isOnlyMeasured =\n            this.m_currentParams.globalBounds !== undefined &&\n            this.m_currentParams.vertexBuffer === undefined;\n\n        // To be able to properly set the horizontal alignment on a path, we need to first retrieve\n        // how much of the path the input text covers, so we can calculate the correct initial\n        // offset.\n        let isBidirectional = false;\n        let pathWidth = 0.0;\n        for (let i = 0; i < this.m_currentParams.glyphs.length; ++i) {\n            const glyphData = this.m_currentParams.glyphs[i];\n            if (!glyphData.isInCache && !isOnlyMeasured) {\n                return false;\n            }\n\n            if (!UnicodeUtils.isPrintable(glyphData.codePoint)) {\n                continue;\n            }\n            if (!isBidirectional && glyphData.direction === -this.m_tempLineDirection) {\n                isBidirectional = true;\n            }\n\n            pathWidth +=\n                (glyphData.advanceX + this.m_currentParams.textLayoutStyle.tracking) *\n                this.m_tempScale *\n                (this.m_tempSmallCaps\n                    ? TypesettingUtils.getSmallCapsScale(\n                          this.m_currentParams.glyphs,\n                          this.m_currentParams.smallCapsArray!,\n                          i,\n                          this.m_currentParams.textRenderStyle.fontVariant\n                      )\n                    : 1.0);\n        }\n        this.m_tempPathOffset = Math.min(\n            Math.max(\n                -this.m_currentParams.textLayoutStyle.horizontalAlignment +\n                    (this.m_currentParams.textLayoutStyle.horizontalAlignment * pathWidth) /\n                        this.m_tempPathLength,\n                0\n            ),\n            1\n        );\n\n        // Place the input text as a single path line.\n        return this.placeLine(this.m_tempLineDirection, isBidirectional);\n    }\n\n    // Place characters alongside a path line. Text direction is taken into account, and text is\n    // broken into directional runs.\n    private placeLine(direction: UnicodeUtils.Direction, isBidirectional: boolean): boolean {\n        // If the line is not bidirectional, place it as a single directional run.\n        if (!isBidirectional) {\n            return this.placeRun(0, this.m_currentParams!.glyphs.length - 1, direction);\n        }\n\n        // Gather common typesetting parameters.\n        const glyphDataArray = this.m_currentParams!.glyphs;\n\n        // Initialize line placement parameters.\n        let runStart = 0;\n        for (let i = runStart; i < glyphDataArray.length; ++i) {\n            const glyphData = glyphDataArray[i];\n\n            // If the current glyph changes the line direction, place the current run.\n            if (glyphData.direction === -this.m_tempRunDirection) {\n                if (!this.placeRun(runStart, i - 1, this.m_tempRunDirection)) {\n                    return false;\n                }\n\n                runStart = i;\n                this.m_tempRunDirection *= -1.0;\n            }\n            // If the current glyph has neutral direction (i.e. white space) and we're in the middle\n            // of a run with direction opposite to the line's main direction, check for the closest\n            // strong direction in the run.\n            else if (\n                glyphData.direction === UnicodeUtils.Direction.Neutral &&\n                this.m_tempRunDirection === -direction\n            ) {\n                let neutralIdx = i;\n                while (\n                    neutralIdx + 1 < glyphDataArray.length &&\n                    Math.abs(glyphDataArray[neutralIdx].direction) !== 1\n                ) {\n                    ++neutralIdx;\n                }\n\n                // If the closest strong direction in the run is not the current run's direction,\n                // place the current run.\n                if (glyphDataArray[neutralIdx].direction !== this.m_tempRunDirection) {\n                    if (!this.placeRun(runStart, i - 1, this.m_tempRunDirection)) {\n                        return false;\n                    }\n\n                    runStart = i;\n                    this.m_tempRunDirection *= -1.0;\n                }\n            }\n        }\n\n        // If we still haven't placed all characters in the line, place a final run.\n        if (runStart < glyphDataArray.length) {\n            if (!this.placeRun(runStart, glyphDataArray.length - 1, this.m_tempRunDirection)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    // Place a directional run of index inside a path line.\n    private placeRun(startIdx: number, endIdx: number, direction: UnicodeUtils.Direction): boolean {\n        // Gather common typesetting parameters.\n        const glyphDataArray = this.m_currentParams!.glyphs;\n        const smallCapsArray = this.m_currentParams!.smallCapsArray;\n        const fontCatalog = this.m_currentParams!.fontCatalog;\n        const textRenderStyle = this.m_currentParams!.textRenderStyle;\n        const textLayoutStyle = this.m_currentParams!.textLayoutStyle;\n        const position = this.m_currentParams!.position;\n        const geometry = this.m_currentParams!.geometry;\n        const globalBounds = this.m_currentParams!.globalBounds;\n        const individualBounds = this.m_currentParams!.individualBounds;\n        const vertexBuffer = this.m_currentParams!.vertexBuffer;\n        const path = this.m_currentParams!.path;\n\n        const defaultGlyphRotation = textRenderStyle.rotation;\n        const normalDisplacement =\n            textLayoutStyle.verticalAlignment *\n            glyphDataArray[0].font.metrics.capHeight *\n            this.m_tempScale;\n\n        // Move through the glyph array following the run's direction (as the order of the glyphs in\n        // memory might not match the order on glyphs on scree).\n        const start = direction === UnicodeUtils.Direction.LTR ? startIdx : endIdx;\n        const end = direction === UnicodeUtils.Direction.LTR ? endIdx : startIdx;\n        for (\n            let i = start;\n            direction === UnicodeUtils.Direction.RTL ? i >= end : i <= end;\n            i += direction\n        ) {\n            // Only process printable characters.\n            const glyphData = glyphDataArray[i];\n            if (!UnicodeUtils.isPrintable(glyphData.codePoint)) {\n                continue;\n            }\n\n            // When placing a RTL run, we need to check for weak runs (numerical runs of characters\n            // that don't change the overall run direction, but should always be displayed as LTR\n            // text).\n            if (\n                startIdx !== endIdx &&\n                i !== 0 &&\n                direction === UnicodeUtils.Direction.RTL &&\n                glyphData.direction === UnicodeUtils.Direction.Weak\n            ) {\n                let weakRunStart = i;\n                let weakGlyph = glyphDataArray[weakRunStart - 1];\n                while (\n                    weakRunStart !== startIdx &&\n                    (weakGlyph.direction === UnicodeUtils.Direction.Weak ||\n                        (weakGlyph.direction === UnicodeUtils.Direction.Neutral &&\n                            !UnicodeUtils.isWhiteSpace(weakGlyph.codePoint)))\n                ) {\n                    --weakRunStart;\n                    weakGlyph = glyphDataArray[weakRunStart - 1];\n                }\n\n                this.placeRun(Math.max(weakRunStart, startIdx), i, UnicodeUtils.Direction.LTR);\n\n                i = weakRunStart;\n                continue;\n            }\n\n            // Compute various rendering parameters for this glyph.\n            const glyphFont = glyphData.font;\n            const glyphFontMetrics = glyphFont.metrics;\n            const fontStyle = textRenderStyle.fontStyle;\n\n            const isBoldEmulated =\n                (fontStyle === FontStyle.Bold && glyphFont.bold === undefined) ||\n                (fontStyle === FontStyle.BoldItalic &&\n                    glyphFont.bold === undefined &&\n                    glyphFont.boldItalic === undefined);\n            const isItalicEmulated =\n                (fontStyle === FontStyle.Italic && glyphFont.italic === undefined) ||\n                (fontStyle === FontStyle.BoldItalic &&\n                    glyphFont.italic === undefined &&\n                    glyphFont.boldItalic === undefined);\n\n            const isSmallCaps = this.m_tempSmallCaps\n                ? smallCapsArray![i] && textRenderStyle.fontVariant === FontVariant.SmallCaps\n                : false;\n            const smallCapsScale = isSmallCaps\n                ? glyphFontMetrics.xHeight / glyphFontMetrics.capHeight\n                : 1.0;\n            const glyphScale = this.m_tempScale * smallCapsScale;\n\n            const emulationWeight =\n                ((isBoldEmulated ? 0.02 : 0.0) + (isSmallCaps ? 0.01 : 0.0)) *\n                (fontCatalog.size / fontCatalog.distanceRange);\n            const bgWeight =\n                (0.5 * this.m_tempPixelBgSize!) /\n                (fontCatalog.distanceRange * Math.max(glyphScale, 1.0));\n            const isMirrored =\n                UnicodeUtils.isRtlMirrored(glyphData.codePoint) &&\n                direction === UnicodeUtils.Direction.RTL;\n\n            const verticalOffset =\n                glyphFontMetrics.lineHeight -\n                glyphFontMetrics.base -\n                glyphFontMetrics.distanceRange * 0.5;\n\n            // Update the current interpolated path position and angle.\n            const textPoint = path.getPoint(this.m_tempPathOffset);\n            if (textPoint === null) {\n                return this.m_currentParams!.pathOverflow;\n            }\n            const tangent = path.getTangent(this.m_tempPathOffset);\n            const normal = new THREE.Vector2(-tangent.y, tangent.x).multiplyScalar(\n                normalDisplacement\n            );\n            const angle = Math.atan2(tangent.y, tangent.x);\n            this.m_tempPathPosition.set(normal.x + textPoint.x, normal.y + textPoint.y, position.z);\n            textRenderStyle.rotation = defaultGlyphRotation + angle;\n\n            // Compute the glyphs transformation matrix and apply to all corners of a glyph.\n            TypesettingUtils.computeGlyphTransform(\n                this.m_tempTransform,\n                this.m_tempPathPosition,\n                glyphScale,\n                0.0,\n                textRenderStyle.rotation\n            );\n            for (let j = 0; j < 4; ++j) {\n                const glyphVertexPosition = glyphData.positions[j];\n                const horizontalOffset =\n                    isItalicEmulated && j > 1\n                        ? TypesettingUtils.OBLIQUE_OFFSET * glyphFontMetrics.size\n                        : 0.0;\n                this.m_tempCorners[j].set(\n                    glyphVertexPosition.x + horizontalOffset,\n                    glyphVertexPosition.y - verticalOffset,\n                    glyphVertexPosition.z\n                );\n                this.m_tempCorners[j].applyMatrix3(this.m_tempTransform);\n\n                this.m_tempCorners[j].x -= position.x;\n                this.m_tempCorners[j].y -= position.y;\n            }\n\n            // Depending on the typesetting options, add the computed glyph to the TextGeometry or\n            // update the text bounds.\n            if (globalBounds === undefined && vertexBuffer === undefined) {\n                if (\n                    !geometry.add(\n                        glyphData,\n                        this.m_tempCorners,\n                        emulationWeight,\n                        emulationWeight + bgWeight,\n                        isMirrored,\n                        textRenderStyle\n                    )\n                ) {\n                    return false;\n                }\n            } else {\n                if (globalBounds !== undefined) {\n                    TypesettingUtils.updateBounds(\n                        this.m_tempCorners,\n                        globalBounds,\n                        individualBounds\n                    );\n                }\n                if (vertexBuffer !== undefined) {\n                    geometry.addToBuffer(\n                        vertexBuffer,\n                        i * QUAD_VERTEX_MEMORY_FOOTPRINT,\n                        glyphData,\n                        this.m_tempCorners,\n                        emulationWeight,\n                        emulationWeight + bgWeight,\n                        isMirrored,\n                        textRenderStyle\n                    );\n                }\n            }\n\n            // Restore the original glyph rotation.\n            textRenderStyle.rotation = defaultGlyphRotation;\n\n            // Advance the current position and proceed to next glyph in the run.\n            this.m_tempPathOffset +=\n                ((glyphData.advanceX + textLayoutStyle.tracking) * glyphScale) /\n                this.m_tempPathLength;\n        }\n\n        return true;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nenum ContextualForm {\n    Initial,\n    Medial,\n    Final\n}\n\nenum CombinedForm {\n    Isolated,\n    Connected\n}\n\n/**\n * Converter between arabic isolated forms (in Unicode Block 'Arabic') and their contextual forms\n * (in Unicode Block 'Arabic Presentation Forms-B').\n */\nexport class ContextualArabicConverter {\n    private static m_instance: ContextualArabicConverter;\n    static get instance(): ContextualArabicConverter {\n        if (this.m_instance === undefined) {\n            this.m_instance = new ContextualArabicConverter();\n        }\n        return this.m_instance;\n    }\n\n    private readonly m_singleCharactersMap: Map<\n        number,\n        ReadonlyArray<number | undefined>\n    > = new Map();\n\n    private readonly m_combinedCharactersMap: Map<\n        number,\n        Map<number, ReadonlyArray<number | undefined>>\n    > = new Map();\n\n    private readonly m_neutralCharacters: number[];\n\n    private constructor() {\n        // Single characters.\n        this.m_singleCharactersMap.set(0x0621, [undefined, undefined, undefined]); // HAMZA\n        this.m_singleCharactersMap.set(0x0622, [undefined, undefined, 0xfe82]); // ALEF_MADDA\n        this.m_singleCharactersMap.set(0x0623, [undefined, undefined, 0xfe84]); // ALEF_HAMZA_ABOVE\n        this.m_singleCharactersMap.set(0x0624, [undefined, undefined, 0xfe86]); // WAW_HAMZA\n        this.m_singleCharactersMap.set(0x0625, [undefined, undefined, 0xfe88]); // ALEF_HAMZA_BELOW\n        this.m_singleCharactersMap.set(0x0626, [0xfe8b, 0xfe8c, 0xfe8a]); // YEH_HAMZA\n        this.m_singleCharactersMap.set(0x0627, [undefined, undefined, 0xfe8e]); // ALEF\n        this.m_singleCharactersMap.set(0x0628, [0xfe91, 0xfe92, 0xfe90]); // BEH\n        this.m_singleCharactersMap.set(0x0629, [undefined, undefined, 0xfe94]); // TEH_MARBUTA\n        this.m_singleCharactersMap.set(0x062a, [0xfe97, 0xfe98, 0xfe96]); // TEH\n        this.m_singleCharactersMap.set(0x062b, [0xfe9b, 0xfe9c, 0xfe9a]); // THEH\n        this.m_singleCharactersMap.set(0x062c, [0xfe9f, 0xfea0, 0xfe9e]); // JEEM\n        this.m_singleCharactersMap.set(0x062d, [0xfea3, 0xfea4, 0xfea2]); // HAH\n        this.m_singleCharactersMap.set(0x062e, [0xfea7, 0xfea8, 0xfea6]); // KHAH\n        this.m_singleCharactersMap.set(0x062f, [undefined, undefined, 0xfeaa]); // DAL\n        this.m_singleCharactersMap.set(0x0630, [undefined, undefined, 0xfeac]); // THAL\n        this.m_singleCharactersMap.set(0x0631, [undefined, undefined, 0xfeae]); // REH\n        this.m_singleCharactersMap.set(0x0632, [undefined, undefined, 0xfeb0]); // ZAIN\n        this.m_singleCharactersMap.set(0x0633, [0xfeb3, 0xfeb4, 0xfeb2]); // SEEN\n        this.m_singleCharactersMap.set(0x0634, [0xfeb7, 0xfeb8, 0xfeb6]); // SHEEN\n        this.m_singleCharactersMap.set(0x0635, [0xfebb, 0xfebc, 0xfeba]); // SAD\n        this.m_singleCharactersMap.set(0x0636, [0xfebf, 0xfec0, 0xfebe]); // DAD\n        this.m_singleCharactersMap.set(0x0637, [0xfec3, 0xfec4, 0xfec2]); // TAH\n        this.m_singleCharactersMap.set(0x0638, [0xfec7, 0xfec8, 0xfec6]); // ZAH\n        this.m_singleCharactersMap.set(0x0639, [0xfecb, 0xfecc, 0xfeca]); // AIN\n        this.m_singleCharactersMap.set(0x063a, [0xfecf, 0xfed0, 0xfece]); // GHAIN\n        this.m_singleCharactersMap.set(0x0640, [0x0640, 0x0640, 0x0640]); // TATWEEL\n        this.m_singleCharactersMap.set(0x0641, [0xfed3, 0xfed4, 0xfed2]); // FEH\n        this.m_singleCharactersMap.set(0x0642, [0xfed7, 0xfed8, 0xfed6]); // QAF\n        this.m_singleCharactersMap.set(0x0643, [0xfedb, 0xfedc, 0xfeda]); // KAF\n        this.m_singleCharactersMap.set(0x0644, [0xfedf, 0xfee0, 0xfede]); // LAM\n        this.m_singleCharactersMap.set(0x0645, [0xfee3, 0xfee4, 0xfee2]); // MEEM\n        this.m_singleCharactersMap.set(0x0646, [0xfee7, 0xfee8, 0xfee6]); // NOON\n        this.m_singleCharactersMap.set(0x0647, [0xfeeb, 0xfeec, 0xfeea]); // HEH\n        this.m_singleCharactersMap.set(0x0648, [undefined, undefined, 0xfeee]); // WAW\n        this.m_singleCharactersMap.set(0x0649, [undefined, undefined, 0xfef0]); // ALEF_MAKSURA\n        this.m_singleCharactersMap.set(0x064a, [0xfef3, 0xfef4, 0xfef2]); // YEH\n        this.m_singleCharactersMap.set(0x067e, [0xfb58, 0xfb59, 0xfb57]); // PEH\n        this.m_singleCharactersMap.set(0x06cc, [0xfbfe, 0xfbff, 0xfbfd]); // Farsi Yeh\n        this.m_singleCharactersMap.set(0x0686, [0xfb7c, 0xfb7d, 0xfb7b]); // Tcheh\n        this.m_singleCharactersMap.set(0x06a9, [0xfb90, 0xfb91, 0xfb8f]); // Keheh\n        this.m_singleCharactersMap.set(0x06af, [0xfb94, 0xfb95, 0xfb93]); // Gaf\n        this.m_singleCharactersMap.set(0x0698, [undefined, undefined, 0xfb8b]); // Jeh\n\n        // Combined characters.\n        this.m_combinedCharactersMap.set(0x0644, new Map());\n        // LAM_ALEF_MADDA\n        this.m_combinedCharactersMap.get(0x0644)!.set(0x0622, [0xfef5, 0xfef6]);\n        // LAM_ALEF_HAMZA_ABOVE\n        this.m_combinedCharactersMap.get(0x0644)!.set(0x0623, [0xfef7, 0xfef8]);\n        // LAM_ALEF_HAMZA_BELOW\n        this.m_combinedCharactersMap.get(0x0644)!.set(0x0625, [0xfef9, 0xfefa]);\n        // LAM_ALEF\n        this.m_combinedCharactersMap.get(0x0644)!.set(0x0627, [0xfefb, 0xfefc]);\n\n        // Neutral characters.\n        this.m_neutralCharacters = [\n            0x0610, // ARABIC SIGN SALLALLAHOU ALAYHE WASSALLAM\n            0x0612, // ARABIC SIGN ALAYHE ASSALLAM\n            0x0613, // ARABIC SIGN RADI ALLAHOU ANHU\n            0x0614, // ARABIC SIGN TAKHALLUS\n            0x0615, // ARABIC SMALL HIGH TAH\n            0x064b, // ARABIC FATHATAN\n            0x064c, // ARABIC DAMMATAN\n            0x064d, // ARABIC KASRATAN\n            0x064e, // ARABIC FATHA\n            0x064f, // ARABIC DAMMA\n            0x0650, // ARABIC KASRA\n            0x0651, // ARABIC SHADDA\n            0x0652, // ARABIC SUKUN\n            0x0653, // ARABIC MADDAH ABOVE\n            0x0654, // ARABIC HAMZA ABOVE\n            0x0655, // ARABIC HAMZA BELOW\n            0x0656, // ARABIC SUBSCRIPT ALEF\n            0x0657, // ARABIC INVERTED DAMMA\n            0x0658, // ARABIC MARK NOON GHUNNA\n            0x0670, // ARABIC LETTER SUPERSCRIPT ALEF\n            0x06d6, // ARABIC SMALL HIGH LIGATURE SAD WITH LAM WITH ALEF MAKSURA\n            0x06d7, // ARABIC SMALL HIGH LIGATURE QAF WITH LAM WITH ALEF MAKSURA\n            0x06d8, // ARABIC SMALL HIGH MEEM INITIAL FORM\n            0x06d9, // ARABIC SMALL HIGH LAM ALEF\n            0x06da, // ARABIC SMALL HIGH JEEM\n            0x06db, // ARABIC SMALL HIGH THREE DOTS\n            0x06dc, // ARABIC SMALL HIGH SEEN\n            0x06df, // ARABIC SMALL HIGH ROUNDED ZERO\n            0x06e0, // ARABIC SMALL HIGH UPRIGHT RECTANGULAR ZERO\n            0x06e1, // ARABIC SMALL HIGH DOTLESS HEAD OF KHAH\n            0x06e2, // ARABIC SMALL HIGH MEEM ISOLATED FORM\n            0x06e3, // ARABIC SMALL LOW SEEN\n            0x06e4, // ARABIC SMALL HIGH MADDA\n            0x06e7, // ARABIC SMALL HIGH YEH\n            0x06e8, // ARABIC SMALL HIGH NOON\n            0x06ea, // ARABIC EMPTY CENTRE LOW STOP\n            0x06eb, // ARABIC EMPTY CENTRE HIGH STOP\n            0x06ec, // ARABIC ROUNDED HIGH STOP WITH FILLED CENTRE\n            0x06ed // ARABIC SMALL LOW MEEM\n        ];\n    }\n\n    /**\n     * Converts isolated arabic characters into their contextual form.\n     *\n     * @param input - String with isolated arabic characters.\n     */\n    convert(input: string): string {\n        let output = \"\";\n        for (let i = 0; i < input.length; ++i) {\n            const currentCodePoint = input.charCodeAt(i);\n\n            // Only process arabic characters in the map.\n            if (this.isArabicCharacter(currentCodePoint)) {\n                // Find the first previous non-neutral character.\n                let prevIndex = i - 1;\n                for (; prevIndex >= 0; --prevIndex) {\n                    if (!this.isNeutral(input.charCodeAt(prevIndex))) {\n                        break;\n                    }\n                }\n\n                // Check if the previous character has ligatures with following characters.\n                let prevCodePoint = prevIndex >= 0 ? input.charCodeAt(prevIndex) : undefined;\n                if (prevCodePoint !== undefined) {\n                    const prevMap = this.getCharacterMap(prevCodePoint);\n                    if (\n                        prevMap === undefined ||\n                        (prevMap[ContextualForm.Initial] === undefined &&\n                            prevMap[ContextualForm.Medial] === undefined)\n                    ) {\n                        prevCodePoint = undefined;\n                    }\n                }\n\n                // Find the first next non-neutral character.\n                let nextIndex = i + 1;\n                for (; nextIndex < input.length; ++nextIndex) {\n                    if (!this.isNeutral(input.charCodeAt(nextIndex))) {\n                        break;\n                    }\n                }\n\n                // Check if the next character has ligatures with previous characters.\n                let nextCodePoint =\n                    nextIndex < input.length ? input.charCodeAt(nextIndex) : undefined;\n                if (nextCodePoint !== undefined) {\n                    const nextMap = this.getCharacterMap(nextCodePoint);\n                    if (\n                        nextMap === undefined ||\n                        (nextMap[ContextualForm.Medial] === undefined &&\n                            nextMap[ContextualForm.Final] === undefined)\n                    ) {\n                        nextCodePoint = undefined;\n                    }\n                }\n\n                // Check for Lam Alef combinated forms.\n                if (\n                    currentCodePoint === 0x0644 &&\n                    nextCodePoint !== undefined &&\n                    (nextCodePoint === 0x0622 ||\n                        nextCodePoint === 0x0623 ||\n                        nextCodePoint === 0x0625 ||\n                        nextCodePoint === 0x0627)\n                ) {\n                    const combinedMap = this.getCombinedCharacterMap(\n                        currentCodePoint,\n                        nextCodePoint\n                    )!;\n                    if (prevCodePoint !== undefined) {\n                        output += String.fromCharCode(combinedMap[CombinedForm.Connected]!);\n                    } else {\n                        output += String.fromCharCode(combinedMap[CombinedForm.Isolated]!);\n                    }\n\n                    // Skip the next character and continue.\n                    ++i;\n                    continue;\n                }\n\n                // Check for single character contextual forms.\n                const map = this.getCharacterMap(currentCodePoint)!;\n                // Intermediate.\n                if (\n                    prevCodePoint !== undefined &&\n                    nextCodePoint !== undefined &&\n                    map[ContextualForm.Medial] !== undefined\n                ) {\n                    output += String.fromCharCode(map[ContextualForm.Medial]!);\n                }\n                // Final.\n                else if (prevCodePoint !== undefined && map[ContextualForm.Final] !== undefined) {\n                    output += String.fromCharCode(map[ContextualForm.Final]!);\n                }\n                // Initial.\n                else if (nextCodePoint !== undefined && map[ContextualForm.Initial] !== undefined) {\n                    output += String.fromCharCode(map[ContextualForm.Initial]!);\n                }\n                // Isolated.\n                else {\n                    output += String.fromCharCode(currentCodePoint);\n                }\n            } else {\n                output += String.fromCharCode(currentCodePoint);\n            }\n        }\n\n        return output;\n    }\n\n    private isArabicCharacter(codePoint: number): boolean {\n        return this.m_singleCharactersMap.has(codePoint);\n    }\n\n    private getCharacterMap(codePoint: number): ReadonlyArray<number | undefined> | undefined {\n        return this.m_singleCharactersMap.get(codePoint);\n    }\n\n    private getCombinedCharacterMap(\n        codePoint: number,\n        nextCodePoint: number\n    ): ReadonlyArray<number | undefined> | undefined {\n        const map = this.m_combinedCharactersMap.get(codePoint);\n        if (map !== undefined) {\n            return map.get(nextCodePoint);\n        }\n        return undefined;\n    }\n\n    private isNeutral(codePoint: number): boolean {\n        for (const character of this.m_neutralCharacters) {\n            if (character === codePoint) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { FontCatalog } from \"../rendering/FontCatalog\";\nimport { SdfTextMaterial } from \"../rendering/TextMaterials\";\n\n/**\n * Material parameters passed on [[SdfTextMaterial]] creation when using the `\n * `createSdfTextMaterial` helper function.\n */\nexport interface SdfTextMaterialParameters {\n    fontCatalog: FontCatalog;\n    rendererCapabilities: THREE.WebGLCapabilities;\n    isBackground?: boolean;\n    vertexSource?: string;\n    fragmentSource?: string;\n}\n\n/**\n * Helper function designed to create [[SdfTextMaterials]] that can be rendered using\n * [[TextCanvas]].\n *\n * @param params - Material parameters.\n *\n * @returns New `SdfTextMaterial`.\n */\nexport function createSdfTextMaterial(params: SdfTextMaterialParameters): SdfTextMaterial {\n    return new SdfTextMaterial({\n        texture: params.fontCatalog.texture,\n        textureSize: params.fontCatalog.textureSize,\n        size: params.fontCatalog.size,\n        distanceRange: params.fontCatalog.distanceRange,\n        isMsdf: params.fontCatalog.type === \"msdf\",\n        isBackground: params.isBackground === true,\n        vertexSource: params.vertexSource,\n        fragmentSource: params.fragmentSource,\n        rendererCapabilities: params.rendererCapabilities\n    });\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { GlyphData } from \"../rendering/GlyphData\";\nimport { FontUnit, FontVariant } from \"../rendering/TextStyle\";\nimport { UnicodeUtils } from \"../utils/UnicodeUtils\";\n\n/**\n * Collection of different constants and utility functions used by [[Typesetter]]s.\n */\nexport namespace TypesettingUtils {\n    /**\n     * Ratio between EMs and Pixels.\n     */\n    export const EM_TO_PX = 16.0;\n\n    /**\n     * Ratio between Points and Pixels.\n     */\n    export const PT_TO_PX = 1.25;\n\n    /**\n     * Angle used when emulating italic fonts (oblique).\n     */\n    export const OBLIQUE_ANGLE = 0.174533;\n\n    /**\n     * Horizontal offset used when emulating italic fonts (oblique).\n     */\n    export const OBLIQUE_OFFSET = Math.tan(OBLIQUE_ANGLE);\n\n    /**\n     * Convert between any size specified in any [[FontUnit]] to pixels.\n     *\n     * @param size - Font size (specified in `unit`).\n     * @param unit - Size unit.\n     * @param originalSize - Original size (pixels)\n     *\n     * @returns Pixel size.\n     */\n    export function getPixelSize(size: number, unit: FontUnit, originalSize: number) {\n        let result = size;\n        switch (unit) {\n            case FontUnit.Em:\n                result *= EM_TO_PX;\n                break;\n            case FontUnit.Point:\n                result *= PT_TO_PX;\n                break;\n            case FontUnit.Percent:\n                result *= (1.0 / 100) * originalSize;\n                break;\n        }\n        return result;\n    }\n\n    /**\n     * Gets the scale applied to a certain character when using the [[FontVariant]].`SmallCaps`.\n     *\n     * @param glyphs - Array containing [[TransformedGlyphData]].\n     * @param index - Index to `glyphDataArray`.\n     * @param fontVariant - Currently active [[FontVariant]].\n     *\n     * @returns Glyph `SmallCaps` scale.\n     */\n    export function getSmallCapsScale(\n        glyphs: GlyphData[],\n        smallCapsTransformations: boolean[],\n        index: number,\n        fontVariant: FontVariant\n    ): number {\n        const isSmallCaps =\n            smallCapsTransformations[index] && fontVariant === FontVariant.SmallCaps;\n        return isSmallCaps\n            ? glyphs[index].font.metrics.xHeight / glyphs[index].font.metrics.capHeight\n            : 1.0;\n    }\n\n    /**\n     * Returns the first strong direction (LTR or RTL) found for a given array of [[GlyphData]].\n     *\n     * @param glyphs - Array containing [[GlyphData]].\n     * @param offset - `glyphDataArray` offset.\n     *\n     * @returns Strong direction.\n     */\n    export function getDirection(glyphs: GlyphData[], offset: number): UnicodeUtils.Direction {\n        let result = UnicodeUtils.Direction.LTR;\n        let index = offset;\n        while (\n            glyphs[index].direction !== UnicodeUtils.Direction.LTR &&\n            glyphs[index].direction !== UnicodeUtils.Direction.RTL &&\n            index < glyphs.length - 1\n        ) {\n            ++index;\n        }\n\n        if (Math.abs(glyphs[index].direction) === 1.0) {\n            result = glyphs[index].direction;\n        }\n        return result;\n    }\n\n    /**\n     * Computes the transformation matrix for a glyph.\n     *\n     * @param transform - Matrix used to store the results.\n     * @param position - Glyph' position.\n     * @param scale - Glyph' scale.\n     * @param rotation - [[TextCanvas]] rotation.\n     * @param localRotation - Glyph' local rotation.\n     */\n    export function computeGlyphTransform(\n        transform: THREE.Matrix3,\n        position: THREE.Vector3,\n        scale: number,\n        rotation: number,\n        localRotation: number\n    ): void {\n        const cosAngle = Math.cos(rotation);\n        const sinAngle = Math.sin(rotation);\n        const localCosAngle = Math.cos(localRotation);\n        const localSinAngle = Math.sin(localRotation);\n        transform.set(\n            scale * localCosAngle,\n            scale * -localSinAngle,\n            cosAngle * position.x - sinAngle * position.y,\n            scale * localSinAngle,\n            scale * localCosAngle,\n            sinAngle * position.x + cosAngle * position.y,\n            0,\n            0,\n            1.0\n        );\n    }\n\n    /**\n     * Updates the supplied bounds with the computed screen-space corners for a given glyph.\n     *\n     * @param corners - Glyph' corners.\n     * @param globalBounds - Global text bounds.\n     * @param individualBounds - Individual per-character bounds.\n     */\n    export function updateBounds(\n        corners: THREE.Vector3[],\n        globalBounds: THREE.Box2,\n        individualBounds?: { array: THREE.Box2[]; offset: number }\n    ): void {\n        const minX = Math.min(corners[0].x, corners[1].x, corners[2].x, corners[3].x);\n        const maxX = Math.max(corners[0].x, corners[1].x, corners[2].x, corners[3].x);\n        const minY = Math.min(corners[0].y, corners[1].y, corners[2].y, corners[3].y);\n        const maxY = Math.max(corners[0].y, corners[1].y, corners[2].y, corners[3].y);\n\n        if (individualBounds !== undefined) {\n            if (individualBounds.array[individualBounds.offset] !== undefined) {\n                individualBounds.array[individualBounds.offset].min.set(minX, minY);\n                individualBounds.array[individualBounds.offset].max.set(maxX, maxY);\n            } else {\n                individualBounds.array.push(\n                    new THREE.Box2(new THREE.Vector2(minX, minY), new THREE.Vector2(maxX, maxY))\n                );\n            }\n            ++individualBounds.offset;\n        }\n\n        globalBounds.min.set(\n            Math.min(globalBounds.min.x, minX),\n            Math.min(globalBounds.min.y, minY)\n        );\n        globalBounds.max.set(\n            Math.max(globalBounds.max.x, maxX),\n            Math.max(globalBounds.max.y, maxY)\n        );\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Namespace containing useful information when dealing with Unicode's code points.\n */\nexport namespace UnicodeUtils {\n    /**\n     * Range of Unicode code points considered as white space.\n     * https://en.wikipedia.org/wiki/Whitespace_character\n     */\n    export const whiteSpaceRanges = [\n        [0x0009, 0x0009],\n        [0x0020, 0x0020],\n        [0x1680, 0x1680],\n        [0x2000, 0x2006],\n        [0x2008, 0x200a],\n        [0x205f, 0x3000],\n        [0x180e, 0x180e],\n        [0x200b, 0x200d]\n    ];\n\n    /**\n     * Checks if a character should be considered as a white space.\n     *\n     * @param codePoint - Character's Unicode code point.\n     *\n     * @returns Result of the test.\n     */\n    export function isWhiteSpace(codePoint: number) {\n        for (const range of whiteSpaceRanges) {\n            if (codePoint >= range[0] && codePoint <= range[1]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Range of Unicode code points considered as `NewLine`.\n     * https://en.wikipedia.org/wiki/Newline#Unicode\n     */\n    export const newLineRanges = [\n        [0x000a, 0x000d],\n        [0x0085, 0x0085],\n        [0x2028, 0x2029]\n    ];\n\n    /**\n     * Checks if a character should be considered as a new line.\n     *\n     * @param codePoint - Character's Unicode code point.\n     *\n     * @returns Result of the test.\n     */\n    export function isNewLine(codePoint: number) {\n        for (const range of newLineRanges) {\n            if (codePoint >= range[0] && codePoint <= range[1]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Range of Unicode code points considered as non-printable.\n     * https://en.wikipedia.org/wiki/Unicode_control_characters\n     */\n    export const nonPrintableRanges = [\n        [0x0000, 0x001f],\n        [0x007f, 0x009f]\n    ];\n\n    /**\n     * Checks if a character's can be printed (rendered).\n     *\n     * @param codePoint - Character's Unicode code point.\n     *\n     * @returns Result of the test.\n     */\n    export function isPrintable(codePoint: number) {\n        for (const range of nonPrintableRanges) {\n            if (codePoint >= range[0] && codePoint <= range[1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Unicode code point direction.\n     */\n    export enum Direction {\n        Neutral = 0.0,\n        Weak = 0.5,\n        LTR = 1.0,\n        RTL = -1.0\n    }\n\n    // TODO: Review/Remove/Add any additional needed blocks (HARP-3330).\n    /**\n     * Unicode Blocks which have inherent RTL direction.\n     * These blocks correspond to the scripts described here:\n     * https://en.wikipedia.org/wiki/Right-to-left#List_of_RTL_scripts\n     */\n    export const rtlBlocks: string[] = [\n        \"Hebrew\",\n        \"Alphabetic Presentation Forms\",\n        \"Arabic\",\n        \"Arabic Supplement\",\n        \"Arabic Extended-A\",\n        \"Arabic Presentation Forms-A\",\n        \"Arabic Presentation Forms-B\",\n        \"Arabic Mathematical Alphabetic Symbols\",\n        \"Indic Siyaq Numbers\",\n        \"Rumi Numeral Symbols\",\n        \"Syriac\",\n        \"Syriac Supplement\",\n        \"Samaritan\",\n        \"Mandaic\",\n        \"Thaana\",\n        \"Mende Kikakui\",\n        \"NKo\",\n        \"Adlam\",\n        \"Hanifi Rohingya\"\n    ];\n\n    /**\n     * ASCII punctuation is considered to have neutral direction:\n     * https://en.wikipedia.org/wiki/Basic_Latin_(Unicode_block)#Table_of_characters\n     */\n    export const neutralBidirectionalRanges = [\n        [0x0020, 0x002f],\n        [0x003a, 0x0040],\n        [0x005b, 0x0060],\n        [0x007b, 0x007e]\n    ];\n\n    /**\n     * Latin and arabic numerals are considered to have weak directionality:\n     * https://en.wikipedia.org/wiki/Basic_Latin_(Unicode_block)#Table_of_characters\n     * https://en.wikipedia.org/wiki/Arabic_(Unicode_block)#Block\n     */\n    export const weakBidirectionalRanges = [\n        [0x0030, 0x0039],\n        [0x0660, 0x0669],\n        [0x06f0, 0x06f9]\n    ];\n\n    /**\n     * Returns the Unicode's character direction.\n     *\n     * @param codePoint - Character's Unicode code point.\n     * @param block - Character's Unicode block.\n     *\n     * @returns Character's direction.\n     */\n    export function getDirection(codePoint: number, block: string): Direction {\n        // Test for neutral and weak code points first (they're inside LTR/RTL ranges).\n        for (const weakRange of weakBidirectionalRanges) {\n            if (codePoint >= weakRange[0] && codePoint <= weakRange[1]) {\n                return Direction.Weak;\n            }\n        }\n        for (const neutralRange of neutralBidirectionalRanges) {\n            if (codePoint >= neutralRange[0] && codePoint <= neutralRange[1]) {\n                return Direction.Neutral;\n            }\n        }\n\n        // Check for RTL/LTR.\n        const rtl = rtlBlocks.find(element => {\n            return element === block;\n        });\n        if (rtl !== undefined) {\n            return Direction.RTL;\n        } else {\n            return Direction.LTR;\n        }\n    }\n\n    /**\n     * Some punctuation characters (like: (, ), <, >, [,], {, }) need to be mirrored when rendering\n     * a RTL string to preserve their intrinsic meaning.\n     * https://en.wikipedia.org/wiki/Basic_Latin_(Unicode_block)#Table_of_characters\n     */\n    export const rtlMirroredCodePoints = [\n        0x0028,\n        0x0029,\n        0x003c,\n        0x003e,\n        0x005b,\n        0x005d,\n        0x007b,\n        0x007d\n    ];\n\n    /**\n     * Checks if a character should be mirrored on an RTL run.\n     *\n     * @param codePoint - Character's Unicode code point.\n     *\n     * @returns Result of the test.\n     */\n    export function isRtlMirrored(codePoint: number): boolean {\n        return (\n            rtlMirroredCodePoints.find(element => {\n                return element === codePoint;\n            }) !== undefined\n        );\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Provides a manager that orchestrates downloading URLs, particularly static map resources.\n *\n * @remarks\n *\n * @packageDocumentation\n */\n\nexport * from \"./src/TransferManager\";\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n *\n * DeferredPromise takes an executor function for executing it later, when [[exec]] is called.\n * This class allows wrapping other promises or long running functions for later execution.\n * @internal\n * @hidden\n */\nexport class DeferredPromise<T> {\n    /**\n     * Internal promise to store the result of the deferred executor function.\n     */\n    readonly promise: Promise<T>;\n    private resolveFunc?: (result: T) => void;\n    private rejectFunc?: (reason?: any) => void;\n\n    /**\n     * Constructs a new [[DeferredPromise]]\n     * @param executor - Async function that should be executed at a later point in time.\n     */\n    constructor(private readonly executor: () => Promise<T>) {\n        this.promise = new Promise<T>((resolve, reject) => {\n            this.resolveFunc = resolve;\n            this.rejectFunc = reject;\n        });\n    }\n\n    /**\n     * When `exec` is called the deferred executor function is executed.\n     */\n    exec() {\n        this.executor()\n            .then(result => this.resolveFunc!(result))\n            .catch(error => this.rejectFunc!(error));\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/** @module\n *\n * This module provides classes to ease downloading URLs. In particular, following redirects,\n * retrying on HTTP errors, and limiting the number of parallel concurrent downloads.\n */\n\nimport \"@here/harp-fetch\";\n\nimport { DeferredPromise } from \"./DeferredPromise\";\n\n/**\n * Abstract interface for a transfer manager.\n *\n * Provides functionality for downloading JSON or ArrayBuffers.\n * Implementations typically implement retry on server congestion,\n * limit the maximum amount of parallel downloads or merge duplicate\n * downloads.\n */\nexport interface ITransferManager {\n    /**\n     * Downloads a JSON object.\n     * @param url - The URL to download\n     * @param init - Optional extra parameters for the download.\n     */\n    downloadJson<T>(url: RequestInfo, init?: RequestInit): Promise<T>;\n\n    /**\n     * Downloads a binary object.\n     * @param url - The URL to download\n     * @param init - Optional extra parameters for the download\n     */\n    downloadArrayBuffer(url: RequestInfo, init?: RequestInit): Promise<ArrayBuffer>;\n\n    /**\n     * Downloads a URL and returns the response.\n     * @param url - The URL to download.\n     * @param init - Optional extra parameters for the download.\n     */\n    download(url: RequestInfo, init?: RequestInit): Promise<Response>;\n}\n\n/**\n * `TransferManager` for downloading URLs.\n *\n * Features:\n *\n * * Merges JSON downloads, for example, the same URL if requested as JSON will only be downloaded\n *   once.\n * * Limits the amount of parallel downloads, useful when requesting a large amount of URLs that\n *   would otherwise stall the browser.\n * * Retries the downloads with an increasing timeout on HTTP 503 replies.\n *\n * The static method [[instance]] can be used to get a default constructed instance.\n */\nexport class TransferManager implements ITransferManager {\n    /**\n     * The timeout in milliseconds to wait between retries. This timeout is multiplied with the\n     * number of retries. First retry waits for 0 ms, second retry for 500 ms, third for 1000 ms and\n     * so on.\n     */\n    static readonly retryTimeout = 500;\n    /**\n     * The amount of maximum parallel downloads to allow.\n     */\n    static readonly maxParallelDownloads = 16;\n    /**\n     * Returns a default instance of [[TransferManager]].\n     */\n    static instance(): TransferManager {\n        return TransferManager.defaultInstance;\n    }\n\n    private static readonly defaultInstance = new TransferManager();\n    private static async fetchRepeatedly(\n        fetchFunction: typeof fetch,\n        retryCount: number,\n        maxRetries: number,\n        url: RequestInfo,\n        init?: RequestInit\n    ): Promise<Response> {\n        try {\n            if (retryCount < maxRetries) {\n                const response = await fetchFunction(url, init);\n                // Return response when successful or empty\n                if (response.status === 200 || response.status === 204) {\n                    return response;\n                } else if (response.status >= 400 && response.status < 500) {\n                    // Prevent further retries in case of a client error code\n                    retryCount = maxRetries;\n                    const responseText = await response.text();\n                    throw new Error(responseText);\n                }\n            } else {\n                throw new Error(\"Max number of retries reached\");\n            }\n        } catch (err) {\n            if (\n                err.hasOwnProperty(\"isCancelled\") ||\n                err.name === \"AbortError\" ||\n                retryCount >= maxRetries\n            ) {\n                throw err;\n            }\n        }\n        return await TransferManager.waitFor(TransferManager.retryTimeout * retryCount).then(() =>\n            TransferManager.fetchRepeatedly(fetchFunction, retryCount + 1, maxRetries, url, init)\n        );\n    }\n\n    private static waitFor(milliseconds: number): Promise<void> {\n        return new Promise<void>(resolve => setTimeout(resolve, milliseconds));\n    }\n\n    private activeDownloadCount = 0;\n    private readonly downloadQueue = new Array<DeferredPromise<Response>>();\n    private readonly activeDownloads = new Map<RequestInfo, Promise<any>>();\n    /**\n     * Constructs a new [[TransferManager]].\n     *\n     * @param fetchFunction - The default fetch function to use.\n     * @param maxRetries - The maximum amount to try to re-fetch a resource.\n     */\n    constructor(readonly fetchFunction = fetch, readonly maxRetries: number = 5) {}\n    /**\n     * Downloads a JSON object. Merges downloads of string URLs if requested multiple times.\n     *\n     * Note: This method merges multiple downloads of the same string URL to\n     * only one request. The init parameter is ignored if the download is merged.\n     * Call [[download]] instead to download the resource without merging.\n     *\n     * @param url - The URL or RequestInfo to download\n     * @param init - Optional extra parameters for the download.\n     */\n    downloadJson<T>(url: RequestInfo, init?: RequestInit): Promise<T> {\n        return this.downloadAs<T>(response => response.json(), url, init);\n    }\n\n    /**\n     * Downloads a binary object. Merges downloads of string URLS if requested multiple times.\n     *\n     * Note: This method merges multiple downloads of the same string URL to\n     * only one request. The init parameter is ignored if the download is merged.\n     * Call [[download]] instead to download the resource without merging.\n     *\n     * @param url - The URL or RequestInfo to download\n     * @param init - Optional extra parameters for the download\n     */\n    downloadArrayBuffer(url: RequestInfo, init?: RequestInit): Promise<ArrayBuffer> {\n        return this.download(url, init).then(response => response.arrayBuffer());\n    }\n\n    /**\n     * Downloads a URL and returns the response.\n     *\n     * Does not merge multiple requests to the same URL.\n     *\n     * @param url - The URL or RequestInfo to download.\n     * @param init - Optional extra parameters for the download.\n     */\n    download(url: RequestInfo, init?: RequestInit): Promise<Response> {\n        if (this.activeDownloadCount >= TransferManager.maxParallelDownloads) {\n            const deferred = new DeferredPromise<Response>(() => this.doDownload(url, init));\n            this.downloadQueue.push(deferred);\n            return deferred.promise;\n        }\n        return this.doDownload(url, init);\n    }\n\n    private async doDownload(url: RequestInfo, init?: RequestInit): Promise<Response> {\n        try {\n            ++this.activeDownloadCount;\n            const response = await TransferManager.fetchRepeatedly(\n                this.fetchFunction,\n                0,\n                this.maxRetries,\n                url,\n                init\n            );\n\n            this.onDownloadDone();\n            return response;\n        } catch (error) {\n            this.onDownloadDone();\n            throw error;\n        }\n    }\n\n    private onDownloadDone() {\n        --this.activeDownloadCount;\n        this.execDeferredDownload();\n    }\n\n    private execDeferredDownload() {\n        const future = this.downloadQueue.pop();\n        if (future === undefined) {\n            return;\n        }\n        future.exec();\n    }\n\n    private downloadAs<T>(\n        converter: (response: Response) => Promise<T>,\n        url: RequestInfo,\n        init?: RequestInit\n    ): Promise<T> {\n        const cacheKey = url;\n        const pendingFetch = this.activeDownloads.get(cacheKey);\n        if (pendingFetch !== undefined) {\n            return Promise.resolve(pendingFetch);\n        }\n        const newFetch = this.download(url, init)\n            .then(response => {\n                this.activeDownloads.delete(cacheKey);\n                if (response.ok) {\n                    return converter(response);\n                }\n                throw new Error(JSON.stringify(response));\n            })\n            .catch(err => {\n                this.activeDownloads.delete(cacheKey);\n                throw err;\n            });\n        this.activeDownloads.set(cacheKey, newFetch);\n        return newFetch;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/DOMUtils\";\nexport * from \"./lib/GroupedPriorityList\";\nexport * from \"./lib/Logger\";\nexport * from \"./lib/Math2D\";\nexport * from \"./lib/MathUtils\";\nexport * from \"./lib/Mixins\";\nexport * from \"./lib/assert\";\nexport * from \"./lib/CachedResource\";\nexport * from \"./lib/ContextLogger\";\nexport * from \"./lib/PerformanceTimer\";\nexport * from \"./lib/ObjectUtils\";\nexport * from \"./lib/OptionsUtils\";\nexport * from \"./lib/TaskQueue\";\nexport * from \"./lib/UriResolver\";\nexport * from \"./lib/UrlUtils\";\nexport * from \"./lib/Functions\";\nexport * from \"./lib/SampleBilinear\";\nexport * from \"./lib/AuthenticationUtils\";\nexport * from \"./lib/GlslUtils\";\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Authentification token/code provider.\n */\nexport type AuthenticationProvider = () => Promise<string>;\n\n/**\n * Options for authentication with [[apikey]].\n */\nexport interface ApiKeyAuthentication {\n    /**\n     * The `apikey` for the access of the Web Tile Data.\n     * @note Will not be used if [[authenticationCode]] is defined as well.\n     */\n    apikey: string;\n}\n\n/**\n * Options for authentication with [[appId]] and [[appCode]].\n */\nexport interface AppIdAuthentication {\n    /**\n     * The `appId` for the access of the Web Tile Data.\n     * @note Will not be used if [[apiKey]] or [[authenticationCode]] is defined as well.\n     */\n    appId: string;\n\n    /**\n     * The `appCode` for the access of the Web Tile Data.\n     * @note Will not be used if [[apiKey]] or [[authenticationCode]] is defined as well.\n     */\n    appCode: string;\n}\n\n/**\n * Options for authentication with [[authenticationCode]].\n */\nexport interface TokenAuthentication {\n    /**\n     * Authentication code used for the different APIs.\n     *\n     * When [[AuthenticationProvider]] is is used as value, the provider is called before each\n     * to get currently valid authentication code/token.\n     */\n    authenticationCode: string | AuthenticationProvider;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport interface CachedResource {\n    memoryUsage: number;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Refinement of `console` interface only for important information i.e `info`, `warn` and `errors`.\n */\nexport interface ISimpleChannel {\n    info(message?: any, ...optionalParams: any[]): void;\n    warn(message?: any, ...optionalParams: any[]): void;\n    error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Extension of {@link ISimpleChannel} to support contextual logging by adding stack of prefixes.\n */\nexport interface IContextLogger extends ISimpleChannel {\n    /**\n     * Push \"attribute-like\" context.\n     */\n    pushAttr(name: string): void;\n\n    /**\n     * Push \"index-like\" context.\n     *\n     * Following log messages will be prefixed with `[index]`.\n     */\n    pushIndex(index: string | number): void;\n\n    /**\n     * Remove current context from top of stack.\n     */\n    pop(): void;\n}\n\n/**\n * Context-aware logger that decorates log message with stack-based prefix, emits `headerMessage`\n * before first actual log message.\n */\nexport class ContextLogger implements IContextLogger {\n    private readonly context: string[] = [];\n    private m_headerLogged = false;\n\n    /**\n     * Construct a context-aware logger that logs to `m_logger`.\n     */\n    constructor(readonly m_logger: ISimpleChannel, readonly headerMessage: string) {}\n\n    /**\n     * Push \"attribute-like\" context.\n     *\n     * Following log messages will be prefixed with `name` or `.name` depending on current context.\n     */\n    pushAttr(name: string) {\n        this.context.push(`${this.context.length > 0 ? \".\" : \"\"}${name}`);\n    }\n\n    /**\n     * Push \"index-like\" context.\n     *\n     * Following log messages will be prefixed with `[index]`.\n     */\n    pushIndex(index: string | number) {\n        this.context.push(`[${index}]`);\n    }\n\n    pop() {\n        this.context.pop();\n    }\n\n    // They, are public member functions it's just tslint who doesn't understand this.\n\n    warn = this.createLogMethod(\"warn\");\n    info = this.createLogMethod(\"info\");\n    error = this.createLogMethod(\"error\");\n\n    private createLogMethod(severity: \"warn\" | \"info\" | \"error\") {\n        return (message: string, ...rest: any[]) => {\n            if (!this.m_headerLogged) {\n                this.m_logger.info(this.headerMessage);\n                this.m_headerLogged = true;\n            }\n            this.m_logger[severity](`${this.context.join(\"\")}: ${message}`, ...rest);\n        };\n    }\n}\n","/*\n * Copyright (C) 2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace DOMUtils {\n    /**\n     * Gets language list used by the browser\n     *\n     * @returns Array of iso language codes\n     */\n    export function getBrowserLanguages(): string[] | undefined {\n        if (navigator.languages !== undefined && navigator.languages.length > 0) {\n            const languageList = [];\n            for (const lang of navigator.languages) {\n                languageList.push(getIsoLanguageCode(lang));\n            }\n            return languageList;\n        }\n        if (navigator.language !== undefined) {\n            return [getIsoLanguageCode(navigator.language)];\n        }\n        return undefined;\n    }\n\n    /**\n     * Gets ISO-639-1 language code from browser's code (ex. en for en-US)\n     */\n    function getIsoLanguageCode(language: string) {\n        return language.substring(0, 2);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Chains two functions for further assigning as one wrapped callback function\n */\nexport function chainCallbacks<T extends (this: unknown, ...args: any[]) => any>(\n    f1: T | null | undefined,\n    f2: T\n): T {\n    return function (this: any, ...args: any[]): ReturnType<T> {\n        if (f1) {\n            f1.apply(this, args);\n        }\n        return f2.apply(this, args);\n    } as T;\n}\n","/*\n * Copyright (C) 2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Converts webgl1-compatible vertex shader glsl code to webgl2.\n *\n * @param vertexShader - String containing the vertex shader glsl code.\n * @returns the converted glsl code.\n */\nexport function convertVertexShaderToWebGL2(vertexShader: string): string {\n    return (\n        [\"#define attribute in\", \"#define varying out\", \"#define texture2D texture\"].join(\"\\n\") +\n        \"\\n\" +\n        vertexShader\n    );\n}\n\n/**\n * Converts webgl1-compatible fragment shader glsl code to webgl2.\n *\n * @param fragmentShader - String containing the fragment shader glsl code.\n * @returns the converted glsl code.\n */\nexport function convertFragmentShaderToWebGL2(fragmentShader: string): string {\n    return (\n        [\n            \"#define varying in\",\n            \"out highp vec4 pc_fragColor;\",\n            \"#define gl_FragColor pc_fragColor\",\n            \"#define gl_FragDepthEXT gl_FragDepth\",\n            \"#define texture2D texture\",\n            \"#define textureCube texture\",\n            \"#define texture2DProj textureProj\",\n            \"#define texture2DLodEXT textureLod\",\n            \"#define texture2DProjLodEXT textureProjLod\",\n            \"#define textureCubeLodEXT textureLod\",\n            \"#define texture2DGradEXT textureGrad\",\n            \"#define texture2DProjGradEXT textureProjGrad\",\n            \"#define textureCubeGradEXT textureGrad\"\n        ].join(\"\\n\") +\n        \"\\n\" +\n        fragmentShader\n    );\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * A `PriorityListElement` has a priority to assist in sorting. The idea is that the items in a\n * grouped priority list will not modify their priority during processing to such an amount, that\n * they will change into another group. Smaller lists are smaller to sort, and in case of resource\n * limitation (maximum number of rendered objects reached), not all items have to be sorted at all.\n */\nexport interface PriorityListElement {\n    /**\n     * The integer value of this priority is used to group objects of \"same\" priority.\n     */\n    priority: number;\n}\n\n/**\n * The `PriorityListGroup` contains a list of {@link PriorityListElement}s that all have the same\n * (integer) priority.\n */\nexport class PriorityListGroup<T extends PriorityListElement> {\n    constructor(readonly priority: number, public elements: T[] = new Array()) {}\n\n    /**\n     * Create and return a deep copy of the `PriorityListGroup<T>`.\n     *\n     * @returns A clone of the `PriorityListGroup<T>`.\n     */\n    clone(): PriorityListGroup<T> {\n        return new PriorityListGroup<T>(this.priority, this.elements.slice());\n    }\n\n    /**\n     * Removes an element from the group.\n     * @param element - The element to remove.\n     * @returns true if the element was removed, false if it was not found in the group.\n     */\n    remove(element: T): boolean {\n        const foundIndex = this.elements.indexOf(element);\n        if (foundIndex === -1) {\n            return false;\n        }\n        this.elements.splice(foundIndex, 1);\n        return true;\n    }\n}\n\n/**\n * The `PriorityListGroupMap` is a map to map the (integer) priority to a {@link PriorityListGroup}.\n */\nexport type PriorityListGroupMap<T extends PriorityListElement> = Map<number, PriorityListGroup<T>>;\n\n/**\n * The `GroupedPriorityList` contains a [[PriorityListGroupMap]] to manage a larger number of items\n * in priority groups.\n */\nexport class GroupedPriorityList<T extends PriorityListElement> {\n    readonly groups: PriorityListGroupMap<T> = new Map();\n    /**\n     * Add an element to the `GroupedPriorityList`. Selects group based on the elements priority.\n     *\n     * @param element - Element to be added.\n     */\n    add(element: T): void {\n        this.getGroup(element.priority).elements.push(element);\n    }\n\n    /**\n     * Remove an element from the `GroupedPriorityList`.\n     *\n     * Note: It is required that the priority is the same as it was when the element has been added.\n     * Otherwise, the removal will fail.\n     *\n     * @param element - Element to be removed.\n     * @returns `True` if the element was removed, `false` otherwise.\n     */\n    remove(element: T): boolean {\n        const group = this.findGroup(element.priority);\n        if (group !== undefined && group.remove(element)) {\n            if (group.elements.length === 0) {\n                this.groups.delete(group.priority);\n            }\n\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Remove all internal {@link PriorityListGroup}s.\n     */\n    clear(): void {\n        this.groups.clear();\n    }\n\n    /**\n     * Merge another {@link GroupedPriorityList} into this one.\n     *\n     * @param other - Other group to merge.\n     */\n    merge(other: GroupedPriorityList<T>): GroupedPriorityList<T> {\n        for (const otherGroup of other.groups) {\n            const group = this.findGroup(otherGroup[1].priority);\n            if (group === undefined) {\n                this.groups.set(Math.floor(otherGroup[1].priority), otherGroup[1].clone());\n                continue;\n            }\n            group.elements = group.elements.concat(otherGroup[1].elements);\n        }\n        return this;\n    }\n\n    clone(): GroupedPriorityList<T> {\n        const clone = new GroupedPriorityList<T>();\n        for (const [priority, group] of this.groups) {\n            clone.groups.set(priority, group.clone());\n        }\n        return clone;\n    }\n\n    /**\n     * Apply function to all elements in this `GroupedPriorityList`.\n     *\n     * @param {(element: T) => void} fun Function to apply.\n     */\n    forEach(fun: (element: T) => void): void {\n        for (const group of this.groups) {\n            group[1].elements.forEach(fun);\n        }\n    }\n\n    /**\n     * Count the number of elements in this `GroupedPriorityList`.\n     */\n    count(): number {\n        let n = 0;\n        for (const group of this.groups) {\n            n += group[1].elements.length;\n        }\n        return n;\n    }\n\n    /**\n     * Get group of elements that have the same (integer) priority.\n     *\n     * @param priority - The priority to retrieve all elements from.\n     */\n    private findGroup(priority: number): PriorityListGroup<T> | undefined {\n        const normalizedPriority = Math.floor(priority);\n        const group = this.groups.get(normalizedPriority);\n        return group;\n    }\n\n    /**\n     * Get group of elements that have the same (integer) priority.\n     *\n     * @param priority - The priority to retrieve all elements from.\n     */\n    private getGroup(priority: number): PriorityListGroup<T> {\n        let group = this.findGroup(priority);\n\n        if (group === undefined) {\n            const normalizedPriority = Math.floor(priority);\n            group = new PriorityListGroup<T>(normalizedPriority);\n            this.groups.set(group.priority, group);\n        }\n\n        return group;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/* eslint-disable no-console */\n\nimport { IChannel } from \"./IChannel\";\n\n/**\n * Class for the default console channel.\n */\n\nexport class ConsoleChannel implements IChannel {\n    error(message?: any, ...optionalParams: any[]) {\n        console.error(message, ...optionalParams);\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        console.debug(message, ...optionalParams);\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        console.info(message, ...optionalParams);\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        console.log(message, ...optionalParams);\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        console.trace(message, ...optionalParams);\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        console.warn(message, ...optionalParams);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Interface for the Channel classes.\n */\nexport interface IChannel {\n    trace(message?: any, ...optionalParams: any[]): void;\n    debug(message?: any, ...optionalParams: any[]): void;\n    log(message?: any, ...optionalParams: any[]): void;\n    info(message?: any, ...optionalParams: any[]): void;\n    warn(message?: any, ...optionalParams: any[]): void;\n    error(message?: any, ...optionalParams: any[]): void;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\n\n/**\n * Enum log levels\n */\nexport enum LogLevel {\n    Trace,\n    Debug,\n    Log,\n    Info,\n    Warn,\n    Error,\n    None\n}\n\n/**\n * Logger options to configure logger\n */\nexport class LoggerOptions {\n    enabled?: boolean;\n    level?: LogLevel;\n}\n\n/**\n * Public interface for Logger class.\n */\nexport interface ILogger extends IChannel {\n    readonly name: string;\n\n    enabled: boolean;\n\n    level: LogLevel;\n\n    /**\n     * Update logger options\n     *\n     * @param  {LoggerOptions} options Set logger options and configure internal logger.\n     */\n    update(options: LoggerOptions): void;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\nimport { ILogger, LoggerOptions, LogLevel } from \"./ILogger\";\n\n/**\n * Logger class.\n */\nexport class Logger implements ILogger {\n    enabled: boolean = true;\n    level: LogLevel = LogLevel.Trace;\n\n    constructor(\n        readonly name: string,\n        private readonly m_channel: IChannel,\n        options?: LoggerOptions\n    ) {\n        if (options !== undefined) {\n            this.update(options);\n        }\n    }\n\n    error(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Error) {\n            this.m_channel.error(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Debug) {\n            this.m_channel.debug(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Info) {\n            this.m_channel.info(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Log) {\n            this.m_channel.log(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Trace) {\n            this.m_channel.trace(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Warn) {\n            this.m_channel.warn(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    update(options: LoggerOptions) {\n        this.enabled = options.enabled === undefined ? this.enabled : options.enabled;\n        this.level = options.level === undefined ? this.level : options.level;\n    }\n\n    private get prefix(): string {\n        return this.name + \":\";\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ILoggerManager } from \"./ILoggerManager\";\nimport { LoggerManagerImpl } from \"./LoggerManagerImpl\";\n\n/**\n * The LoggerManager class implements a singleton object that handles logging.\n *\n * Example:\n *\n * ```typescript\n *\n * const logger = LoggerManager.instance.create(\"MyFontLoaderClass\");\n * if (missingFonts.length > 0) {\n *     logger.error(\"These fonts can not be loaded: \", missingFonts);\n * } else {\n *     logger.log(\"All fonts have been loaded.\");\n * }\n * ```\n */\nexport class LoggerManager {\n    private static m_instance: ILoggerManager;\n\n    static get instance(): ILoggerManager {\n        return this.m_instance || (this.m_instance = new LoggerManagerImpl());\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ConsoleChannel } from \"./ConsoleChannel\";\nimport { IChannel } from \"./IChannel\";\nimport { ILogger, LoggerOptions, LogLevel } from \"./ILogger\";\nimport { ILoggerManager } from \"./ILoggerManager\";\nimport { Logger } from \"./Logger\";\nimport { WorkerChannel } from \"./WorkerChannel\";\n\n/**\n * LoggerManagerImpl is the class for the singleton instance of the logger manager.\n * It handles channels and loggers.\n */\n\nexport class LoggerManagerImpl implements ILoggerManager {\n    channel: IChannel;\n    private readonly m_loggers: ILogger[] = [];\n    private m_levelSetForAll?: LogLevel;\n\n    constructor() {\n        this.channel =\n            typeof self === \"undefined\" || typeof self.document !== \"undefined\"\n                ? new ConsoleChannel()\n                : new WorkerChannel();\n    }\n\n    getLoggerNames(): string[] {\n        return this.m_loggers.map(logger => logger.name);\n    }\n\n    getLogger(name: string): ILogger | undefined {\n        return this.m_loggers.find(logger => logger.name === name);\n    }\n\n    create(loggerName: string, options: LoggerOptions = {}): ILogger {\n        if (\n            this.m_levelSetForAll !== undefined &&\n            (options.level === undefined || options.level < this.m_levelSetForAll)\n        ) {\n            options.level = this.m_levelSetForAll;\n        }\n        const logger = new Logger(loggerName, this.channel, options);\n        this.m_loggers.push(logger);\n        return logger;\n    }\n\n    dispose(logger: ILogger) {\n        const found = this.m_loggers.indexOf(logger);\n        if (found < 0) {\n            throw new Error(`Cannot unregister \"${logger}\" : no such logger registered.`);\n        }\n        this.m_loggers.splice(found, 1);\n    }\n\n    updateAll(options: LoggerOptions) {\n        for (const logger of this.m_loggers) {\n            logger.update(options);\n        }\n    }\n\n    update(loggerName: string, config: LoggerOptions) {\n        for (const logger of this.m_loggers) {\n            if (logger.name === loggerName) {\n                logger.update(config);\n            }\n        }\n    }\n\n    enableAll(enabled: boolean) {\n        for (const logger of this.m_loggers) {\n            logger.enabled = enabled;\n        }\n    }\n\n    enable(loggerName: string, value: boolean) {\n        this.update(loggerName, { enabled: value });\n    }\n\n    setLogLevelForAll(level: LogLevel) {\n        this.m_levelSetForAll = level;\n        for (const logger of this.m_loggers) {\n            logger.level = level;\n        }\n    }\n\n    setLogLevel(loggerName: string, level: LogLevel) {\n        this.update(loggerName, { level });\n    }\n\n    setChannel(channel: IChannel) {\n        this.channel = channel;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\n\n/**\n * Class allowing mixing several channels.\n */\nexport class MultiChannel implements IChannel {\n    private readonly channels: IChannel[] = [];\n    constructor(...channels: IChannel[]) {\n        this.channels = channels;\n    }\n\n    error(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.error(message, ...optionalParams);\n        }\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.debug(message, ...optionalParams);\n        }\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.info(message, ...optionalParams);\n        }\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.log(message, ...optionalParams);\n        }\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.trace(message, ...optionalParams);\n        }\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.warn(message, ...optionalParams);\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\nimport { LogLevel } from \"./ILogger\";\n\ndeclare let self: Worker;\n\nexport const WORKERCHANNEL_MSG_TYPE = \"worker-channel-message\";\n\n/**\n * The interface for the messages of the WorkerChannel.\n */\nexport interface IWorkerChannelMessage {\n    message: any[];\n    type: \"worker-channel-message\";\n    level: LogLevel;\n}\n\n/**\n * The class for the worker channel.\n */\nexport class WorkerChannel implements IChannel {\n    error(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Error\n        };\n        self.postMessage(workerMessage);\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Debug\n        };\n        self.postMessage(workerMessage);\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Info\n        };\n        self.postMessage(workerMessage);\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Log\n        };\n        self.postMessage(workerMessage);\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Trace\n        };\n        self.postMessage(workerMessage);\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Warn\n        };\n        self.postMessage(workerMessage);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./ConsoleChannel\";\nexport * from \"./IChannel\";\nexport * from \"./ILogger\";\nexport * from \"./Logger\";\nexport * from \"./LoggerManager\";\nexport * from \"./MultiChannel\";\nexport * from \"./WorkerChannel\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\ninterface Vec2Like {\n    x: number;\n    y: number;\n}\n\nexport namespace Math2D {\n    /**\n     * Alternative 2D box object with less memory impact (four numbers instead of two min/max\n     * objects with two numbers each). Should be faster.\n     */\n    export class Box {\n        /**\n         * Alternative 2D box object with less memory impact (four numbers instead of two min/max\n         * objects with two numbers each). Should be faster.\n         *\n         * @param x - New X value.\n         * @param y - New y value.\n         * @param w - New w value.\n         * @param h - New h value.\n         */\n        constructor(public x = 0, public y = 0, public w = 0, public h = 0) {}\n\n        /**\n         * Set new values to all properties of the box.\n         *\n         * @param x - New X value.\n         * @param y - New y value.\n         * @param w - New w value.\n         * @param h - New h value.\n         */\n        set(x: number, y: number, w: number, h: number) {\n            this.x = x;\n            this.y = y;\n            this.w = w;\n            this.h = h;\n        }\n\n        /**\n         * Copy values from another box.\n         *\n         * @param box - Another box.\n         */\n        copy(box: Box) {\n            this.x = box.x;\n            this.y = box.y;\n            this.w = box.w;\n            this.h = box.h;\n        }\n\n        /**\n         * Test box for inclusion of point.\n         *\n         * @param x - X coordinate of point.\n         * @param y - Y coordinate of point.\n         */\n        contains(x: number, y: number): boolean {\n            return this.x <= x && this.x + this.w >= x && this.y <= y && this.y + this.h >= y;\n        }\n\n        /**\n         * Test box for inclusion of another box.\n         *\n         * @param other - Box 2 to test for inclusion.\n         */\n        containsBox(other: Box): boolean {\n            const xmax = other.x + other.w;\n            const ymax = other.y + other.h;\n            return (\n                this.contains(other.x, other.y) &&\n                this.contains(xmax, other.y) &&\n                this.contains(other.x, ymax) &&\n                this.contains(xmax, ymax)\n            );\n        }\n\n        /**\n         * Test two boxes for intersection.\n         *\n         * @param other - Box 2 to test for intersection.\n         */\n        intersects(other: Box): boolean {\n            return (\n                this.x <= other.x + other.w &&\n                this.x + this.w >= other.x &&\n                this.y <= other.y + other.h &&\n                this.y + this.h >= other.y\n            );\n        }\n    }\n\n    /**\n     * Box to store UV coordinates.\n     */\n    export interface UvBox {\n        s0: number;\n        t0: number;\n        s1: number;\n        t1: number;\n    }\n\n    /**\n     * Compute squared distance between two 2D points `a` and `b`.\n     *\n     * @param ax - Point a.x\n     * @param ay - Point a.y\n     * @param bx - Point b.x\n     * @param by - Point b.y\n     * @returns Squared distance between the two points\n     */\n    export function distSquared(ax: number, ay: number, bx: number, by: number): number {\n        return (ax - bx) * (ax - bx) + (ay - by) * (ay - by);\n    }\n\n    /**\n     * Computes the squared length of a line.\n     *\n     * @param line - An array of that forms a line via [x,y,z,x,y,z,...] tuples.\n     */\n    export function computeSquaredLineLength(line: number[]): number {\n        let squaredLineLength: number = 0;\n\n        const length = line.length - 4;\n        for (let i = 0; i < length; i += 3) {\n            const xDiff = line[i + 3] - line[i];\n            const yDiff = line[i + 4] - line[i + 1];\n            squaredLineLength += xDiff * xDiff + yDiff * yDiff;\n        }\n        return squaredLineLength;\n    }\n\n    /**\n     * Compute squared distance between a 2D point and a 2D line segment.\n     *\n     * @param px - Test point X\n     * @param py - Test point y\n     * @param l0x - Line segment start X\n     * @param l0y - Line segment start Y\n     * @param l1x - Line segment end X\n     * @param l1y - Line segment end Y\n     * @returns Squared distance between point and line segment\n     */\n    export function distToSegmentSquared(\n        px: number,\n        py: number,\n        l0x: number,\n        l0y: number,\n        l1x: number,\n        l1y: number\n    ): number {\n        const lineLengthSuared = distSquared(l0x, l0y, l1x, l1y);\n        if (lineLengthSuared === 0) {\n            return distSquared(px, py, l0x, l0y);\n        }\n        let t = ((px - l0x) * (l1x - l0x) + (py - l0y) * (l1y - l0y)) / lineLengthSuared;\n        t = Math.max(0, Math.min(1, t));\n        return distSquared(px, py, l0x + t * (l1x - l0x), l0y + t * (l1y - l0y));\n    }\n\n    /**\n     * Finds the intersections of a line and a circle.\n     *\n     * @param xLine1 - abscissa of first line point.\n     * @param yLine1 - ordinate of second line point.\n     * @param xLine2 - abscissa of second line point.\n     * @param yLine2 - ordinate of second line point.\n     * @param radius - circle radius.\n     * @param xCenter - abscissa of circle center.\n     * @param yCenter - ordinate of circle center.\n     * @returns coordinates of the intersections (1 if the line is tangent to the circle, 2\n     * if it's secant) or undefined if there's no intersection.\n     */\n    export function intersectLineAndCircle(\n        xLine1: number,\n        yLine1: number,\n        xLine2: number,\n        yLine2: number,\n        radius: number,\n        xCenter: number = 0,\n        yCenter: number = 0\n    ): { x1: number; y1: number; x2?: number; y2?: number } | undefined {\n        // Line equation: dy*x - dx*y = c, c = dy*x1 - dx*y1 = x1*y2 - x2*y1\n        // Circle equation: (x-xCenter)^2 + (y-yCenter)^2 = r^2\n\n        // 1. Translate circle center to origin of coordinates:\n        // u = x - xCenter\n        // v = y - yCenter\n        // circle: u^2 + v^2 = r^2\n        // line: dy*u - dx*v = cp, cp = c - dy*xCenter - dx*yCenter\n\n        // 2. Intersections are solutions of a quadratic equation:\n        // ui = (cp*dy +/- sign(dy)*dx*discriminant / dSq\n        // vi = (-cp*dx +/- |dy|*discriminant / dSq\n        // discriminant = r^2*dSq - cp^2, dSq = dx^2 + dy^2\n        // The sign of the discriminant indicates the number of intersections.\n\n        // 3. Translate intersection coordinates back to original space:\n        // xi = xCenter + ui\n        // yi = yCenter + yi\n\n        const epsilon = 1e-10;\n        const dx = xLine2 - xLine1;\n        const dy = yLine2 - yLine1;\n        const dSq = dx * dx + dy * dy;\n        const rSq = radius * radius;\n        const c = xLine1 * yLine2 - xLine2 * yLine1;\n        const cp = c - dy * xCenter + dx * yCenter;\n        const discriminantSquared = rSq * dSq - cp * cp;\n\n        if (discriminantSquared < -epsilon) {\n            // no intersection\n            return undefined;\n        }\n\n        const xMid = cp * dy;\n        const yMid = -cp * dx;\n\n        if (discriminantSquared < epsilon) {\n            // 1 intersection (tangent line)\n            return { x1: xCenter + xMid / dSq, y1: yCenter + yMid / dSq };\n        }\n\n        const discriminant = Math.sqrt(discriminantSquared);\n\n        // 2 intersections (secant line)\n        const signDy = dy < 0 ? -1 : 1;\n        const absDy = Math.abs(dy);\n\n        const xDist = signDy * dx * discriminant;\n        const yDist = absDy * discriminant;\n\n        return {\n            x1: xCenter + (xMid + xDist) / dSq,\n            y1: yCenter + (yMid + yDist) / dSq,\n            x2: xCenter + (xMid - xDist) / dSq,\n            y2: yCenter + (yMid - yDist) / dSq\n        };\n    }\n\n    /**\n     * Computes the intersection point between two lines.\n     *\n     * @remarks\n     * This functions computes the\n     * {@link https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection\n     *    | line-line intersection} of two lines given two points on each line.\n     *\n     * @param x1 - x coordinate of the first point of the first line.\n     * @param y1 - y coordinate of the first point of the first line.\n     * @param x2 - x coordinate of the second point of the first line.\n     * @param y2 - y coordinate of the second point of the first line.\n     * @param x3 - x coordinate of the first point of the second line.\n     * @param y3 - y coordinate of the first point of the second line.\n     * @param x4 - x coordinate of the second point of the second line.\n     * @param y4 - y coordinate of the second point of the second line.\n     * @param result - The resulting point.\n     */\n    export function intersectLines(\n        x1: number,\n        y1: number,\n        x2: number,\n        y2: number,\n        x3: number,\n        y3: number,\n        x4: number,\n        y4: number,\n        result: Vec2Like = { x: 0, y: 0 }\n    ): Vec2Like | undefined {\n        const d = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n        if (d === 0) {\n            return undefined;\n        }\n        const px = ((x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)) / d;\n        const py = ((x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)) / d;\n        result.x = px;\n        result.y = py;\n        return result;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace MathUtils {\n    /**\n     * Ensures that input value fits in a given range.\n     *\n     * @param value - The value to be clamped.\n     * @param min - Minimum value.\n     * @param max - Maximum value.\n     *\n     * @returns Clamped value.\n     */\n    export function clamp(value: number, min: number, max: number): number {\n        return value < min ? min : value > max ? max : value;\n    }\n\n    /**\n     * Returns a smooth interpolation between the values edge0 and edge1 based on the interpolation\n     * factor x. `0 <= x <= 1`.\n     * @see https://en.wikipedia.org/wiki/Smoothstep\n     *\n     * @param edge0 -\n     * @param edge1 -\n     * @param x -\n     */\n    export function smoothStep(edge0: number, edge1: number, x: number) {\n        // Scale, bias and saturate x to 0..1 range\n        x = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n        // Evaluate polynomial\n        return x * x * (3 - 2 * x);\n    }\n\n    /**\n     * Returns a smooth interpolation between the values edge0 and edge1 based on the interpolation\n     * factor x. `0 <= x <= 1`.\n     *\n     * Improved version by Ken Perlin, which has zero 1st- and 2nd-order derivatives at `x = 0` and\n     * `x = 1`:\n     *\n     * @see https://en.wikipedia.org/wiki/Smoothstep\n     *\n     * @param edge0 -\n     * @param edge1 -\n     * @param x -\n     */\n    export function smootherStep(edge0: number, edge1: number, x: number) {\n        // Scale, and clamp x to 0..1 range\n        x = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n        // Evaluate polynomial\n        return x * x * x * (x * (x * 6 - 15) + 10);\n    }\n\n    /**\n     * Maps a number from one range to another.\n     *\n     * @param val - The incoming value to be converted.\n     * @param inMin - Lower bound of the value's current range.\n     * @param inMax - Upper bound of the value's current range.\n     * @param outMin - Lower bound of the value's target range.\n     * @param outMax - Upper bound of the value's target range.\n     */\n    export function map(val: number, inMin: number, inMax: number, outMin: number, outMax: number) {\n        return ((val - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n    }\n\n    /**\n     * Returns the smaller of the two given numbers. Both numbers may be undefined, in which case\n     * the result is undefined. If only one of the numbers is undefined, the other number is\n     * returned.\n     *\n     * @param a - First number.\n     * @param b - Second number.\n     */\n    export function min2(a: number | undefined, b: number | undefined): number | undefined {\n        let result: number | undefined;\n\n        if (a !== undefined) {\n            result = a;\n        }\n        if (b !== undefined) {\n            result = result === undefined ? b : Math.min(result, b);\n        }\n\n        return result;\n    }\n\n    /**\n     * Returns the larger of the two given numbers. Both numbers may be undefined, in which case\n     * the result is undefined. If only one of the numbers is undefined, the other number is\n     * returned.\n     *\n     * @param a - First number.\n     * @param b - Second number.\n     */\n    export function max2(a: number | undefined, b: number | undefined): number | undefined {\n        let result: number | undefined;\n\n        if (a !== undefined) {\n            result = a;\n        }\n        if (b !== undefined) {\n            result = result === undefined ? b : Math.max(result, b);\n        }\n\n        return result;\n    }\n\n    /**\n     * Checks if the value of a given number is inside an upper or lower bound. The bounds may be\n     * undefined, in which case their value is ignored.\n     *\n     * @param value - Value to check.\n     * @param lowerBound - The lower bound to check the value against.\n     * @param upperBound - The upper bound to check the value against.\n     *\n     * @returns `true` if value is inside the bounds or if the bounds are `undefined`, `false`\n     *          otherwise.\n     */\n    export function isClamped(\n        value: number,\n        lowerBound: number | undefined,\n        upperBound: number | undefined\n    ): boolean {\n        if (lowerBound !== undefined && value < lowerBound) {\n            return false;\n        }\n        if (upperBound !== undefined && value > upperBound) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Smoothly interpolates between two values using cubic formula\n     *\n     * @param startValue -\n     * @param endValue -\n     * @param time -\n     * @returns Result of the interpolation within the range of `[startValue, endValue]`\n     */\n    export function easeInOutCubic(startValue: number, endValue: number, time: number): number {\n        const timeValue =\n            time < 0.5 ? 4 * time * time * time : (time - 1) * (2 * time - 2) * (2 * time - 2) + 1;\n        return startValue + (endValue - startValue) * timeValue;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Copy methods and properties from one prototype into another.\n *\n * @see https://www.typescriptlang.org/docs/handbook/mixins.html\n *\n * @param derivedCtor - Class to mix methods and properties into.\n * @param baseCtors - Class to take all methods and properties from.\n */\nexport function applyMixins(derivedCtor: any, baseCtors: any[]) {\n    baseCtors.forEach(baseCtor => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n            derivedCtor.prototype[name] = baseCtor.prototype[name];\n        });\n    });\n}\n\n/**\n * Copy methods from one prototype into another.\n *\n * @see https://www.typescriptlang.org/docs/handbook/mixins.html\n *\n * @param derivedCtor - Class to mix methods into.\n * @param baseCtors - Class to take all methods from.\n */\nexport function applyMixinsWithoutProperties(derivedCtor: any, baseCtors: any[]) {\n    baseCtors.forEach(baseCtor => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n            const descriptor = Object.getOwnPropertyDescriptor(baseCtor.prototype, name);\n            if (\n                descriptor !== undefined &&\n                descriptor.get === undefined &&\n                name !== \"constructor\"\n            ) {\n                derivedCtor.prototype[name] = baseCtor.prototype[name];\n            }\n        });\n    });\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Deep clone of object.\n *\n * Like `JSON.parse(JSON.stringify(obj))`, but supports basic javascript types (string, number,\n * object), `Date` and `RegExp`s and cycles.\n *\n * Throws error if enounters object with `prototype` assuming that in general class instances\n * cannot be reliably cloned by generic algorithm.\n */\nexport function cloneDeep<T>(obj: T): T {\n    const cache: Map<object, object> = new Map();\n    function cloneInternal(src: any): any {\n        if (src === null) {\n            return null;\n        } else if (typeof src === \"object\") {\n            const cached = cache.get(src);\n            if (cached !== undefined) {\n                return cached;\n            }\n\n            if (Array.isArray(src)) {\n                const result: any[] = [];\n                cache.set(src, result);\n                result.length = src.length;\n                for (let i = 0; i < result.length; ++i) {\n                    result[i] = cloneInternal(src[i]);\n                }\n                return result;\n            } else if (src instanceof Date) {\n                const result = new Date(src.getTime());\n                cache.set(src, result);\n                return result;\n            } else if (src instanceof RegExp) {\n                const result = new RegExp(src.source, src.flags);\n                cache.set(src, result);\n                return result;\n            } else if (src.constructor !== Object) {\n                throw new Error(\"cloneDeep doesn't support objects with custom prototypes\");\n            } else {\n                const result: typeof src = {};\n                cache.set(src, result);\n                for (const key in src) {\n                    if (src.hasOwnProperty(key)) {\n                        result[key] = cloneInternal(src[key]);\n                    }\n                }\n                return result;\n            }\n        } else {\n            // string, number, boolean, undefined and functions are returned as is\n            return src;\n        }\n    }\n\n    const r = cloneInternal(obj);\n    cache.clear();\n    return r;\n}\n\n/**\n * Pick `props` from `object.\n *\n * Runtime version of `Pick<T,K>`.\n */\nexport function pick<T extends object, K extends keyof T>(object: T, props: K[]): Pick<T, K> {\n    const result: any = {};\n    for (const propName of props) {\n        if (object.hasOwnProperty(propName)) {\n            result[propName] = object[propName];\n        }\n    }\n    return result;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Get first defined value.\n *\n * Specialized \"replacement\" for `a || b || c` used frequently to get value from various sources\n * (defaults, configs  constants).\n * In contrast to `||`, this function provides proper typing for usual use cases (constant as last\n * argument) and correct treatment of `null` and `undefined`.\n *\n * If last parameter is \"defined\" then return type is `T`, otherwise return type is `T | undefined`.\n *\n * Usage example:\n *\n *     interface Config {\n *         x?: number;\n *     }\n *     const someConfig: Config = {};\n *     const val: number | undefined = undefined;\n *     const DEFAULT = 5;\n *     const x = getOptionValue(val, someConfig.x, DEFAULT);\n *         // typeof x === 'number' because DEFAULT is defined\n *     const y = getOptionValue(val, someConfig.x);\n *         // typeof y === 'number | undefined' because someConfig.x is possibly undefined\n */\n// specialized overloads with last param defined params overload\nexport function getOptionValue<T>(a: T): T;\nexport function getOptionValue<T>(a: T | undefined, b: T): T;\nexport function getOptionValue<T>(a: T | undefined, b: T | undefined, c: T): T;\nexport function getOptionValue<T>(a: T | undefined, b: T | undefined, c: T | undefined, d: T): T;\nexport function getOptionValue<T>(...values: Array<T | undefined>): T | undefined;\n\nexport function getOptionValue<T>(...values: Array<T | undefined>): T | undefined {\n    for (const candidate of values) {\n        if (candidate !== undefined && candidate !== null) {\n            return candidate;\n        }\n    }\n    return undefined;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * See:\n * https://developers.google.com/web/updates/2012/08/When-milliseconds-are-not-enough-performance-now\n */\n\nexport class PerformanceTimer {\n    /**\n     * Returns timestamp in milliseconds since page load.\n     *\n     * If the [[DOMHighResTimeStamp]] is supported, the resolution is up to 5 microseconds,\n     * otherwise it is in milliseconds. Timespans are computed by taking the difference between two\n     * samples.\n     *\n     * Example:\n     * ```typescript\n     * const now = PerformanceTimer.now();\n     * // call some expensive function for which you want to check the duration.\n     * const end = PerformanceTimer.now();\n     * const elapsedTime = end - now;\n     * ```\n     */\n    static now(): number {\n        return PerformanceTimer.nowFunc();\n    }\n\n    private static readonly instance = new PerformanceTimer();\n\n    private static readonly nowFunc: () => number = PerformanceTimer.getNowFunc();\n\n    private static getNowFunc() {\n        if (typeof performance !== \"undefined\" && typeof performance.now !== \"undefined\") {\n            return () => performance.now();\n        }\n\n        // fall back to Date.getTime()\n        return () => {\n            return new Date().getTime();\n        };\n    }\n}\n","/*\n * Copyright (C) 2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\ntype TypedArray =\n    | Int8Array\n    | Uint8Array\n    | Int16Array\n    | Uint16Array\n    | Int32Array\n    | Uint32Array\n    | Uint8ClampedArray\n    | Float32Array\n    | Float64Array;\n\n/**\n * Returns a bilinear-interpolated texture sample for a given texture.\n * @param texture - Two-dimensional texture to sample.\n * @param width - Texture width.\n * @param height - Texture height.\n * @param u - Number between 0 and 1 representing the location to sample in the width dimension.\n * @param v - Number between 0 and 1 representing the location to sample in the height dimension.\n */\nexport function sampleBilinear(\n    texture: TypedArray,\n    width: number,\n    height: number,\n    u: number,\n    v: number\n): number {\n    const maxXIndex = width - 1;\n    const maxYIndex = height - 1;\n    // Compute the x and y coordinates relative to the mesh size.\n    const xIndex = u * maxXIndex;\n    const xIndexFloor = Math.floor(xIndex);\n    const yIndex = v * maxYIndex;\n    const yIndexFloor = Math.floor(yIndex);\n    const swIndex = yIndexFloor * width + xIndexFloor;\n    const seIndex = xIndexFloor < maxXIndex ? swIndex + 1 : swIndex;\n    const nwIndex = yIndexFloor < maxYIndex ? swIndex + width : swIndex;\n    const neIndex = xIndexFloor < maxXIndex ? nwIndex + 1 : nwIndex;\n    const swElevation = texture[swIndex];\n    const seElevation = texture[seIndex];\n    const nwElevation = texture[nwIndex];\n    const neElevation = texture[neIndex];\n    // Get the fractional components to do bilinear interpolation.\n    const xFrac = Number.isInteger(xIndex) ? 0 : xIndex - xIndexFloor;\n    const xFracInverse = 1 - xFrac;\n    const yFrac = Number.isInteger(yIndex) ? 0 : yIndex - yIndexFloor;\n    const yFracInverse = 1 - yFrac;\n    // The interpolation is the sum of the four closest neighbours each\n    // multiplied by the diagonal areas.\n    const result =\n        swElevation * xFracInverse * yFracInverse +\n        seElevation * xFrac * yFracInverse +\n        nwElevation * xFracInverse * yFrac +\n        neElevation * xFrac * yFrac;\n    return result;\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Task that can be added to the [[TaskQueue]]\n */\nexport interface Task {\n    /**\n     * The Function that will be executed when the [[Task]] is processed\n     */\n    execute: () => void;\n\n    /**\n     * The group by which similar tasks in the TaskQueue are combined\n     */\n    group: string;\n\n    /**\n     * A function to retrieve the priority of the [[Task]], with 0 being\n     * the highest priority, and the first to be executed\n     */\n    getPriority: () => number;\n\n    /**\n     * An optional function that defines if a [[Task]] is alread expired\n     * and therefore can be removed from the [[TaskQueue]]\n     */\n    isExpired?: () => boolean;\n\n    /**\n     * An optional function that returns an estimated process time,\n     * this is not directly used by the [[TaskQueue]] but can be used\n     * by an Task Scheduler to schedule the processing\n     */\n    estimatedProcessTime?: () => number;\n}\n\nexport interface TaskQueueOptions {\n    //TODO: Use the max length\n    //maxLength?: number;\n    /**\n     * Groups to combine specific [[Task]]s in the [[TaskQueue]],\n     * [[Task]]s can only be added to the [[TaskQueue]] if their group is available\n     */\n    groups: string[];\n\n    /**\n     * Optional function to sort the priority, if set, i will override the internal TaskQueue.sort\n     * function.\n     *\n     * @remarks\n     * Caution, the {@link TaskQueue} uses the last element in the Arrays first, so the\n     * highest priorities should be ordered to the end\n     */\n    prioSortFn?: (a: Task, b: Task) => number;\n}\n\n/**\n * A Pull-TaskQueue sorted by priority and group-able {@link Task}s by {@link Task.group}.\n *\n * @remarks\n *\n * @example\n * Sample Usage\n * ```\n *  const taskQueue = new TaskQueue({\n *      group: [\"group1\"]\n *  })\n *  taskQueue.add({\n *     group: \"group1\",\n *     execute: () => {\n *         console.log(\"task of group1 executed\");\n *     },\n *     getPrio: () => {\n *         return 0;\n *     }\n *   });\n *\n * taskQueue.update();\n * taskQueue.processNext(\"group1\");\n *\n *  ```\n */\nexport class TaskQueue {\n    private readonly m_taskLists: Map<string, Task[]> = new Map();\n\n    constructor(private readonly m_options: TaskQueueOptions) {\n        this.m_options.groups?.forEach(group => {\n            this.m_taskLists.set(group, []);\n        });\n        if (this.m_options.prioSortFn) {\n            this.sort = this.m_options.prioSortFn;\n        }\n    }\n\n    /**\n     * Updates the lists in the queue depending on their priority functions and removes\n     * expired Tasks, based on their isExpired functions result.\n     *\n     * @param group The Group to update, if not set all groups will be updated.\n     */\n    update(group?: string) {\n        if (group === undefined) {\n            this.m_taskLists.forEach(taskList => {\n                this.updateTaskList(taskList);\n            });\n        } else {\n            const taskList = this.getTaskList(group);\n            if (taskList) {\n                this.updateTaskList(taskList);\n            }\n        }\n    }\n\n    /**\n     * Adds a Task to the Queue\n     *\n     * @param task\n     * @returns true if succesfully added, otherwise false\n     */\n    add(task: Task): boolean {\n        if (this.m_taskLists.has(task.group)) {\n            const taskList = this.m_taskLists.get(task.group);\n            if (!taskList?.includes(task)) {\n                this.m_taskLists.get(task.group)?.push(task);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Removes a Task from the Queue\n     *\n     * @param task\n     * @returns true if succesfully removed, otherwise false\n     */\n    remove(task: Task): boolean {\n        if (this.m_taskLists.has(task.group)) {\n            const index = this.m_taskLists.get(task.group)?.indexOf(task);\n            if (index !== -1) {\n                this.m_taskLists.get(task.group)?.splice(index as number, 1);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns the number of remaining tasks.\n     *\n     * @param group if group is set, it will return only the remaining tasks for this group,\n     * otherwise it will return the complete amount of tasks left.\n     */\n    numItemsLeft(group?: string): number {\n        let numLeft: number = 0;\n        if (group === undefined) {\n            this.m_taskLists.forEach(tasklist => {\n                numLeft += tasklist.length;\n            });\n        } else {\n            numLeft += this.getTaskList(group)?.length ?? 0;\n        }\n        return numLeft;\n    }\n\n    /**\n     * Processes the next Tasks for a group\n     *\n     * @param group The group the Tasks are pulled from.\n     * @param shouldProcess A condition that, if set will be executed before the task is processed,\n     * if returns true, the task will run\n     * @param n The amount of tasks that should be pulled, @defaults to 1\n     * @returns false if thte list was empty\n     */\n    processNext(group: string, shouldProcess?: (task: Task) => boolean, n: number = 1): boolean {\n        if (!this.getTaskList(group) || this.numItemsLeft(group) <= 0) {\n            return false;\n        }\n        for (let i = 0; i < n && this.numItemsLeft(group) > 0; i++) {\n            const nextTask = this.pull(group, true);\n            if (nextTask !== undefined) {\n                //if a condition is set, execute it\n                if (!shouldProcess || shouldProcess?.(nextTask)) {\n                    nextTask.execute();\n                } else {\n                    //as the task was not executed but already pulled, add it back\n                    //TODO: dont even pull it if it will not execute, this currently\n                    // interferes with the skipping and removal of expired tasks on this.pull\n                    this.add(nextTask);\n                }\n            }\n        }\n        return true;\n    }\n\n    clear() {\n        this.m_taskLists.clear();\n    }\n\n    private pull(group: string, checkIfExpired: boolean = false): Task | undefined {\n        const taskList = this.getTaskList(group);\n        let nextTask;\n        if (taskList) {\n            nextTask = this.getTaskList(group)?.pop();\n            if (checkIfExpired && nextTask && nextTask.isExpired?.()) {\n                return this.pull(group, checkIfExpired);\n            }\n        }\n        return nextTask;\n    }\n\n    private sort(a: Task, b: Task): number {\n        // the highest number in the beginning as the last in the array with\n        // highest priority which equals 0 will start to be processed\n        return b.getPriority() - a.getPriority();\n    }\n\n    private getTaskList(group: string): Task[] | undefined {\n        return this.m_taskLists.get(group);\n    }\n\n    private updateTaskList(taskList: Task[]) {\n        for (let i = 0; i < taskList.length; i++) {\n            const task = taskList[i];\n            if (task?.isExpired?.()) {\n                taskList.splice(i, 1);\n                i--;\n            }\n        }\n        taskList.sort(this.sort);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { resolveReferenceUri } from \"./UrlUtils\";\n\n/**\n * Custom, app-specific URI resolver interface.\n */\nexport interface UriResolver {\n    /**\n     * Attempt to resolve `URI` to `URL`.\n     *\n     * If given resolver doesn't know about this specific kind of `URI`, it should return string as\n     * received.\n     *\n     * @param input - `URI`\n     * @returns actual `URL` if this handler knows how locate given `uri` or original `uri`\n     */\n    resolveUri(uri: string): string;\n}\n\nexport interface PrefixUriResolverDefinition {\n    [prefix: string]: string;\n}\n\n/**\n * Basic, import-map like {@link UriResolver}.\n *\n * Resolves `uris` basing on exact or prefix match of `key` from `definitions`.\n *\n * In definitions, `key` is matched against input uri with following strategy:\n *  - `key` without trailing `/` -> `key` and input `uri` must be identical\n *  - `key` with trailing `/`, -> `key` is treated as \"package prefix\", so `uri` must start with\n *    `key`\n *\n * Example:\n * ```\n * {\n *     \"local://poiMasterList\": \"/assets/poiMasterList.json\"\n *        // will match only 'local://poiMasterList' and resolve `/assets/poiMasterList.json`\n *     \"local://icons/\": \"/assets/icons/\"\n *        // will match only 'local://icons/ANYPATH' (and similar) and resolve to\n *        // `/assets/icons/ANYPATH\n * }\n * ```\n * Inspired by [`WICG` import maps proposal](https://github.com/WICG/import-maps#the-import-map).\n */\nexport class PrefixMapUriResolver implements UriResolver {\n    constructor(readonly definitions: PrefixUriResolverDefinition) {}\n\n    resolveUri(uri: string) {\n        return Object.keys(this.definitions).reduce((r, key) => {\n            if (key.endsWith(\"/\") && r.startsWith(key)) {\n                const newPrefix = this.definitions[key];\n                return newPrefix + r.substr(key.length);\n            } else if (r === key) {\n                return this.definitions[key];\n            }\n            return r;\n        }, uri);\n    }\n}\n\n/**\n * [UriResolver] that resolve relative `uri`s against to parent resource `uri`.\n */\nexport class RelativeUriResolver implements UriResolver {\n    constructor(readonly parentUri: string) {}\n\n    resolveUri(uri: string) {\n        return resolveReferenceUri(this.parentUri, uri);\n    }\n}\n\n/**\n * Compose URI resolvers.\n *\n * Creates new {@link UriResolver} that applies resolvers in orders or arguments.\n *\n * Example:\n *\n *     const themeUrl = ...; // url of parent object\n *     const childUrlResolver = composeUrlResolvers(\n *           new RelativeUriResolver(themeUrl),\n *           defaultUrlResolver\n *     );\n */\nexport function composeUriResolvers(...resolvers: Array<UriResolver | undefined>): UriResolver {\n    return {\n        resolveUri(originalUrl: string) {\n            return resolvers.reduce((url, resolver) => {\n                if (resolver !== undefined) {\n                    return resolver.resolveUri(url);\n                } else {\n                    return url;\n                }\n            }, originalUrl);\n        }\n    };\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { baseUrl } from \"./UrlUtils\";\n\n/**\n * Get base URL for from where relative URLs will be loaded.\n *\n * * In browser, it resolves to `baseUrl(location.href)` i.e document's base URL\n * (see: https://www.w3.org/TR/WD-html40-970917/htmlweb.html#h-5.1.2).\n *\n * * In node, it resolves to `file://${process.cwd()}`.\n */\nexport function getAppBaseUrl() {\n    if (typeof window === \"undefined\") {\n        return `file://${process.cwd()}/`;\n    }\n    return baseUrl(window.location.href);\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Resolve URI of referenced object w.r.t parent URI.\n *\n * Resolves `childUri` as it would be loaded from location specified by `parentUri`.\n *\n * If `childUri` is absolute, then it is returned unchanged.\n * If `childUri` is origin-absolute path, then only origin path is taken from `parentUri`.\n *\n * See [[baseUri]] for reference how base URL of `parentUri` is determined.\n *\n * Supports `http:`, `https:`, `file:`, `data:` schemes.\n *\n * Examples:\n *\n *     // normal case, child is sibling\n *     https://foo.com/themes/day.json + images/foo.png -> https://foo.com/themes/images/foo.png\n *\n *     // parent is \"folder\", so child is just located in this folder\n *     https://foo.com/themes/ + images/foo.png -> https://foo.com/themes/images/foo.png\n *\n *     // parent looks like leaf, so last component is stripped\n *     https://foo.com/themes + images/foo.png -> https://foo.com/images/foo.png\n *\n *     // origin-absolute URL, takes only origin from parent\n *     https://foo.com/themes/day.json + /fonts/foo.json -> https://foo.com/fonts/foo.json\n *\n * @param parentUri - URI of parent resource\n * @param childUri - URI of child as referenced from parent resource\n * @return `childUrl` as if anchored in location of `parentUrl`\n */\nexport function resolveReferenceUri(parentUri: string | undefined, childUri: string): string {\n    if (absoluteUrlWithOriginRe.test(childUri)) {\n        return childUri;\n    } else if (childUri.startsWith(\"/\")) {\n        const origin = getUrlOrigin(parentUri);\n        return origin + childUri;\n    } else {\n        if (childUri.startsWith(\"./\")) {\n            childUri = childUri.substr(2);\n        }\n        const parentBaseUrl = baseUrl(parentUri);\n        return parentBaseUrl + childUri;\n    }\n}\n\nconst absoluteUrlWithOriginRe = new RegExp(\"^(((?:[a-z]+:)?//)|(file:/)|(data:))\", \"i\");\n\n/**\n * Returns base URL of given resource URL.\n *\n * `Url` with trailing slash are considered genuine 'locations', they are returned as is, however if\n * `url` ends with name component it is treated as \"leaf\", so last path component is removed.\n *\n * Standalone files (without any folder structure) are considered relative to `./`.\n *\n * Examples:\n * ```\n *     https://foo.com/themes/a.json -> https://foo.com/themes/\n *     https://foo.com/themes/ -> https://foo.com/themes/\n *     https://foo.com/themes -> https://foo.com/ // note, themes is treated as leaf\n *     themes/day.json -> themes/\n *     themes -> ./\n * ```\n */\nexport function baseUrl(url: string | undefined) {\n    if (url === undefined) {\n        return \"./\";\n    }\n    let idx = url.indexOf(\"#\");\n    if (idx !== -1) {\n        url = url.slice(0, idx);\n    }\n    idx = url.indexOf(\"?\");\n    if (idx !== -1) {\n        url = url.slice(0, idx);\n    }\n    idx = url.lastIndexOf(\"/\");\n    if (idx === -1) {\n        return \"./\";\n    } else {\n        return url.substring(0, idx + 1);\n    }\n}\n\n/**\n * Get `origin` part of URL.\n *\n * @example\n *    https://example.com/foo -> https://example.com\n *    //example.com:8080/ -> //example.com:8080\n *    file:///etc/hosts ->\n *\n * @param url - input URL\n * @return origin of given URL\n */\nexport function getUrlOrigin(url: string | undefined): string {\n    if (url === undefined) {\n        return \"\";\n    }\n    const parsed = getUrlHostAndProtocol(url);\n    if (parsed.protocol === \"file:\") {\n        return \"file://\";\n    } else if (parsed.host && parsed.protocol) {\n        return parsed.protocol + \"//\" + parsed.host;\n    } else if (parsed.host) {\n        return \"//\" + parsed.host;\n    } else if (parsed.protocol) {\n        return parsed.protocol + \"//\";\n    } else {\n        return \"\";\n    }\n}\n\n/**\n * Parse `host` and `protocol` part from URL.\n */\nexport function getUrlHostAndProtocol(\n    url: string\n): {\n    protocol: string;\n    host: string;\n} {\n    const urlOriginRe = new RegExp(/^(?:([a-z]+:))?\\/\\/([^\\/]*)/, \"i\");\n\n    const match = url.match(urlOriginRe);\n    if (!match) {\n        throw new Error(`getUrlHostAndProtocol: unable to parse URL '${url}'`);\n    }\n    return {\n        protocol: match[1],\n        host: match[2]\n    };\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\ndeclare const process: any;\n\n// cache value, because access to process.env.NODE_ENV is SLOW!\nconst isProduction = process.env.NODE_ENV === \"production\";\n\n//TODO: Make assertHandler configurable\n\n/**\n * Implementation of assert as a development help\n *\n * Note - this is deliberately a global function so that minimizers remove the\n * entire call when building for production.\n *\n * @hidden\n * @param condition - Condition to match, if false, throws an Error(message)\n * @param message - Optional message, defaults to \"ASSERTION failed\"\n */\nexport function assert(condition: boolean, message?: string): void {\n    if (!isProduction) {\n        if (!condition) {\n            throw new Error(message !== undefined ? message : \"ASSERTION failed\");\n        }\n    }\n}\n\nexport function assertExists<T>(element: T | undefined, message?: string): T {\n    if (!isProduction) {\n        if (element === undefined || element === null) {\n            throw new Error(\n                message !== undefined ? message : \"ASSERTION failed: Element is undefined or null\"\n            );\n        }\n    }\n    return element!;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * HERE OMV Data source.\n *\n * @remarks\n *\n * @packageDocumentation\n */\n\nexport * from \"./lib/OmvDataFilter\";\nexport * from \"./lib/VectorTileDataSource\";\nexport * from \"./lib/OmvDecoderDefs\";\nexport * from \"./lib/OmvDebugLabelsTile\";\nexport * from \"./lib/OmvRestClient\";\nexport * from \"./lib/GeoJsonDataProvider\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport \"@here/harp-fetch\";\n\nimport { GeoJson, ITiler, WorkerServiceProtocol } from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { ConcurrentTilerFacade } from \"@here/harp-mapview\";\nimport { DataProvider } from \"@here/harp-mapview-decoder\";\nimport { LoggerManager } from \"@here/harp-utils\";\n\nimport { GEOJSON_TILER_SERVICE_TYPE } from \"./OmvDecoderDefs\";\n\nconst logger = LoggerManager.instance.create(\"GeoJsonDataProvider\");\n\nconst INVALIDATED = \"invalidated\";\n\nexport interface GeoJsonDataProviderOptions {\n    /**\n     * Worker script hosting `Tiler` service.\n     * @default `./decoder.bundle.ts`\n     */\n    workerTilerUrl?: string;\n\n    /**\n     * Custom tiler instance.\n     *\n     * @remarks\n     * If not provided, {@link GeoJsonDataProvider} will obtain `WorkerBasedTiler`\n     * from `ConcurrentTilerFacade`.\n     */\n    tiler?: ITiler;\n\n    /**\n     * Timeout for connecting to the web worker in seconds. Default to 10s, search for:\n     * DEFAULT_WORKER_INITIALIZATION_TIMEOUT\n     */\n    workerConnectionTimeout?: number;\n}\n\nlet missingTilerServiceInfoEmitted: boolean = false;\n\n/**\n * GeoJson {@link @here/harp-mapview-decoder@DataProvider}.\n *\n * @remarks\n * Automatically handles tiling and simplification of static GeoJson.\n */\nexport class GeoJsonDataProvider extends DataProvider {\n    private readonly m_tiler: ITiler;\n    private m_registered = false;\n\n    /**\n     * Constructs a new `GeoJsonDataProvider`.\n     *\n     * @param name - Name to be used to reference this `DataProvider`\n     * @param input - URL of the GeoJSON, or a GeoJSON.\n     * @param options - Optional\n     * @returns New `GeoJsonDataProvider`.\n     */\n    constructor(\n        readonly name: string,\n        public input: URL | GeoJson,\n        options?: GeoJsonDataProviderOptions\n    ) {\n        super();\n\n        this.m_tiler =\n            options?.tiler ??\n            ConcurrentTilerFacade.getTiler(\n                GEOJSON_TILER_SERVICE_TYPE,\n                options?.workerTilerUrl,\n                options?.workerConnectionTimeout\n            );\n    }\n\n    async connect(): Promise<void> {\n        try {\n            await this.m_tiler.connect();\n        } catch (error) {\n            if (\n                WorkerServiceProtocol.isUnknownServiceError(error) &&\n                !missingTilerServiceInfoEmitted\n            ) {\n                logger.info(\n                    \"Unable to start GeoJson tiler service in worker. Use \" +\n                        \" 'OmvTilerService.start();' in decoder script.\"\n                );\n                missingTilerServiceInfoEmitted = true;\n            }\n            throw error;\n        }\n\n        await this.m_tiler.registerIndex(this.name, this.input);\n        this.m_registered = true;\n    }\n\n    updateInput(input: URL | GeoJson) {\n        this.input = input;\n        this.m_tiler.updateIndex(this.name, this.input);\n        this.dispatchEvent({ type: INVALIDATED });\n    }\n\n    ready(): boolean {\n        return this.m_registered;\n    }\n\n    async getTile(tileKey: TileKey): Promise<{}> {\n        return await this.m_tiler.getTile(this.name, tileKey);\n    }\n\n    onDidInvalidate(listener: () => void) {\n        this.addEventListener(INVALIDATED, listener);\n        return () => this.removeEventListener(INVALIDATED, listener);\n    }\n\n    /**\n     * Destroys this `GeoJsonDataProvider`.\n     */\n    dispose() {\n        this.m_tiler.dispose();\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { GeometryKind, GeometryKindSet } from \"@here/harp-datasource-protocol\";\nimport { MapEnv } from \"@here/harp-datasource-protocol/index-decoder\";\n\nimport {\n    OmvFeatureFilterDescription,\n    OmvFilterDescription,\n    OmvFilterFeatureAttribute,\n    OmvFilterString,\n    OmvGeometryType,\n    OmvLayerFilterDescription\n} from \"./OmvDecoderDefs\";\n\n/**\n * The `OmvFeatureFilter` is designed to work in an `OmvVisitor`/`visitOmv` combination (for\n * example, `OmvDecoder`).\n *\n * @remarks\n * Returning `false` from any of the calls terminates processing of that\n * layer or feature.\n *\n * The `OmvFeatureFilter` is an \"early-opt-out\" filter, which cannot filter individual features,\n * because at that point the features are not really decoded. Use the [[OmvFeatureModifier]] to\n * filter for individual features.\n */\nexport interface OmvFeatureFilter {\n    /**\n     * Returns `true` if the filter contains rules for specific kinds.\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    hasKindFilter: boolean;\n\n    /**\n     * Return `false` if the layer should not be processed.\n     *\n     * @param layer - Current layer.\n     * @param level - Level of tile.\n     */\n    wantsLayer(layer: string, level: number): boolean;\n\n    /**\n     * Return `false` if the point feature should not be processed.\n     *\n     * @param layer - Current layer.\n     * @param feature - Current feature.\n     * @param level - Level of tile.\n     */\n    wantsPointFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean;\n\n    /**\n     * Return `false` if the line feature should not be processed.\n     *\n     * @param layer - Current layer.\n     * @param feature - Current feature.\n     * @param level - Level of tile.\n     */\n    wantsLineFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean;\n\n    /**\n     * Return `false` if the polygon feature should not be processed.\n     *\n     * @param layer - Current layer.\n     * @param feature - Current feature.\n     * @param level - Level of tile.\n     */\n    wantsPolygonFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean;\n\n    /**\n     * Return `false` if kind of object is not enabled and the geometry should not be created.\n     *\n     * @param {(string | string[])} kind Tag \"kind\" of the tag.\n     * @returns {boolean}\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    wantsKind(kind: string | string[]): boolean;\n}\n\n/**\n * The `OmvFeatureModifier` can be used to filter individual features.\n *\n * @remarks\n * It gets passed in the `Env`\n * of the feature, which contains all the values that can be searched for in a style. If a filter\n * function returns false, the feature is ignored, and no geometry is being created.\n *\n * In addition to pure filtering, the `OmvFeatureModifier` can also modify the [[Env]] of the\n * feature, or even add new properties to the feature, for example, traffic states. The\n * `OmvFeatureModifier` is executed before the styles are selected, so the geometry is created with\n * the modified feature properties.\n */\nexport interface OmvFeatureModifier {\n    /**\n     * Check if the point feature described by `env` should be processed. The properties can be\n     * modified or added to.\n     *\n     * @param layer - Current layer.\n     * @param env - Properties of point feature.\n     * @param level - Level of tile.\n     * @returns `false` to ignore feature.\n     */\n    doProcessPointFeature(layer: string, env: MapEnv, level: number): boolean;\n\n    /**\n     * Check if the line feature described by `env` should be processed. The properties can be\n     * modified or added to.\n     *\n     * @param layer - Current layer.\n     * @param env - Properties of line feature.\n     * @param level - Level of tile.\n     * @returns `false` to ignore feature.\n     */\n    doProcessLineFeature(layer: string, env: MapEnv, level: number): boolean;\n\n    /**\n     * Check if the polygon feature described by `env` should be processed. The properties can be\n     * modified or added to.\n     *\n     * @param layer - Current layer.\n     * @param env - Properties of polygon feature.\n     * @param level - Level of tile.\n     * @returns `false` to ignore feature.\n     */\n    doProcessPolygonFeature(layer: string, env: MapEnv, level: number): boolean;\n}\n\n/**\n * Builds an `OmvFilterDescription` (internal type) that specifies an [[OmvFeatureFilter]] as well\n * as an [[OmvFeatureModifier]].\n *\n */\nexport class OmvFeatureFilterDescriptionBuilder {\n    private readonly m_processLayersDefault: boolean = true;\n    private readonly m_processPointsDefault: boolean = true;\n    private readonly m_processLinesDefault: boolean = true;\n    private readonly m_processPolygonsDefault: boolean = true;\n\n    private readonly m_layersToProcess = new Array<OmvLayerFilterDescription>();\n    private readonly m_layersToIgnore = new Array<OmvLayerFilterDescription>();\n    private readonly m_pointsToProcess = new Array<OmvFilterDescription>();\n    private readonly m_ignoredPoints = new Array<OmvFilterDescription>();\n    private readonly m_linesToProcess = new Array<OmvFilterDescription>();\n    private readonly m_linesToIgnore = new Array<OmvFilterDescription>();\n    private readonly m_polygonsToProcess = new Array<OmvFilterDescription>();\n    private readonly m_polygonsToIgnore = new Array<OmvFilterDescription>();\n\n    private m_kindsToProcess: string[] = [];\n    private m_kindsToIgnore: string[] = [];\n\n    /**\n     * Builds an `OmvFilterDescription` (internal type) that specifies an [[OmvFeatureFilter]] as\n     * well as an [[OmvFeatureModifier]].\n     *\n     * @param processLayersDefault - If `true`, all unspecified layers will be processed.\n     * If `false`, all unspecified layers will be ignored.\n     * @param processPointsDefault - If `true`, all unspecified point features will be processed. If\n     * `false`, all unspecified point features will be ignored.\n     * @param processLinesDefault - If `true`, all unspecified line features will be processed. If\n     * `false`, all unspecified line features will be ignored.\n     * @param processPolygonsDefault - If `true`, all unspecified polygon features will be\n     * processed. If `false`, all unspecified polygon features will be ignored.\n     */\n    constructor(\n        options?: OmvFeatureFilterDescriptionBuilder.OmvFeatureFilterDescriptionBuilderOptions\n    ) {\n        if (options) {\n            this.m_processLayersDefault =\n                options.processLayersDefault !== undefined ? options.processLayersDefault : true;\n            this.m_processPointsDefault =\n                options.processPointsDefault !== undefined ? options.processPointsDefault : true;\n            this.m_processLinesDefault =\n                options.processLinesDefault !== undefined ? options.processLinesDefault : true;\n            this.m_processPolygonsDefault =\n                options.processPolygonsDefault !== undefined\n                    ? options.processPolygonsDefault\n                    : true;\n        }\n    }\n\n    /**\n     * Add a layer that should be processed.\n     *\n     * @param layer - Layer name to be matched.\n     * @param match - Match condition.\n     */\n    processLayer(\n        layer: string,\n        match = OmvFilterString.StringMatch.Match,\n        minLevel: number = 0,\n        maxLevel: number = Infinity\n    ) {\n        this.m_layersToProcess.push({\n            name: { value: layer, match },\n            minLevel,\n            maxLevel\n        });\n    }\n\n    /**\n     * Add a layer that should be ignored.\n     *\n     * @param layer - Layer name to be matched.\n     * @param match - Match condition.\n     */\n    ignoreLayer(\n        layer: string,\n        match = OmvFilterString.StringMatch.Match,\n        minLevel: number = 0,\n        maxLevel: number = Infinity\n    ) {\n        this.m_layersToIgnore.push({\n            name: { value: layer, match },\n            minLevel,\n            maxLevel\n        });\n    }\n\n    /**\n     * Add a valid point feature.\n     *\n     * @param options - Feature options.\n     */\n    processPoint(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_pointsToProcess, options);\n    }\n\n    /**\n     * Add valid point features.\n     *\n     * @param options - Multi feature options.\n     */\n    processPoints(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_pointsToProcess, options);\n    }\n\n    /**\n     * Add a point feature that should be ignored.\n     *\n     * @param options - Feature options.\n     */\n    ignorePoint(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_ignoredPoints, options);\n    }\n\n    /**\n     * Add point features that should be ignored.\n     *\n     * @param options - Multi feature options.\n     */\n    ignorePoints(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_ignoredPoints, options);\n    }\n\n    /**\n     * Add a valid line feature.\n     *\n     * @param options - Feature options.\n     */\n    processLine(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_linesToProcess, options);\n    }\n\n    /**\n     * Add valid line features.\n     *\n     * @param options - Multi feature options.\n     */\n    processLines(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_linesToProcess, options);\n    }\n\n    /**\n     * Ignore a line feature.\n     *\n     * @param options - Feature options.\n     */\n    ignoreLine(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_linesToIgnore, options);\n    }\n\n    /**\n     * Ignore line features.\n     *\n     * @param options - Multi feature options.\n     */\n    ignoreLines(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_linesToIgnore, options);\n    }\n\n    /**\n     * Add a valid polygon feature.\n     *\n     * @param options - Feature options.\n     */\n    processPolygon(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_polygonsToProcess, options);\n    }\n\n    /**\n     * Add valid polygon features.\n     *\n     * @param options - Multi feature options.\n     */\n    processPolygons(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_polygonsToProcess, options);\n    }\n\n    /**\n     * Ignore a valid polygon feature.\n     *\n     * @param options - Feature options.\n     */\n    ignorePolygon(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_polygonsToIgnore, options);\n    }\n\n    /**\n     * Ignore polygon features.\n     *\n     * @param options - Multi feature options.\n     */\n    ignorePolygons(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_polygonsToIgnore, options);\n    }\n\n    /**\n     * Add all the specified strings as \"enabledKinds\".\n     *\n     * @param {string[]} enabledKinds List of kinds that should be generated.\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    processKinds(enabledKinds: string[]) {\n        this.m_kindsToProcess = this.m_kindsToProcess.concat(enabledKinds);\n    }\n\n    /**\n     * Add all the specified strings as \"disabledKinds\".\n     *\n     * @param {string[]} disabledKinds List of kinds that should _not_ be generated.\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    ignoreKinds(disabledKinds: string[]) {\n        this.m_kindsToIgnore = this.m_kindsToIgnore.concat(disabledKinds);\n    }\n\n    /**\n     * Create a filter description that can be passed as an option to the [[OmvDataSource]].\n     */\n    createDescription(): OmvFeatureFilterDescription {\n        return {\n            processLayersDefault: this.m_processLayersDefault,\n            processPointsDefault: this.m_processPointsDefault,\n            processLinesDefault: this.m_processLinesDefault,\n            processPolygonsDefault: this.m_processPolygonsDefault,\n\n            layersToProcess: this.m_layersToProcess,\n            layersToIgnore: this.m_layersToIgnore,\n            pointsToProcess: this.m_pointsToProcess,\n            pointsToIgnore: this.m_ignoredPoints,\n            linesToProcess: this.m_linesToProcess,\n            linesToIgnore: this.m_linesToIgnore,\n            polygonsToProcess: this.m_polygonsToProcess,\n            polygonsToIgnore: this.m_polygonsToIgnore,\n\n            kindsToProcess: this.m_kindsToProcess,\n            kindsToIgnore: this.m_kindsToIgnore\n        };\n    }\n\n    private addItem(\n        items: OmvFilterDescription[],\n        options: OmvFeatureFilterDescriptionBuilder.FeatureOption\n    ) {\n        if (options.minLevel === undefined || isNaN(options.minLevel)) {\n            options.minLevel = 0;\n        }\n        if (options.maxLevel === undefined || isNaN(options.maxLevel)) {\n            options.maxLevel = Infinity;\n        }\n\n        const item: OmvFilterDescription = {\n            layerName: {\n                value: options.layer,\n                match:\n                    options.matchLayer === undefined\n                        ? OmvFilterString.StringMatch.Match\n                        : options.matchLayer\n            },\n            geometryTypes:\n                options.geomType !== undefined\n                    ? Array.isArray(options.geomType)\n                        ? options.geomType\n                        : [options.geomType]\n                    : undefined,\n            classes: [\n                {\n                    value: options.featureClass,\n                    match:\n                        options.matchClass === undefined\n                            ? OmvFilterString.StringMatch.Match\n                            : options.matchClass\n                }\n            ],\n            minLevel: options.minLevel,\n            maxLevel: options.maxLevel,\n            featureAttribute: options.featureAttribute\n        };\n\n        items.push(item);\n    }\n\n    private addItems(\n        items: OmvFilterDescription[],\n        options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption\n    ) {\n        if (options.minLevel === undefined || isNaN(options.minLevel)) {\n            options.minLevel = 0;\n        }\n        if (options.maxLevel === undefined || isNaN(options.maxLevel)) {\n            options.maxLevel = Infinity;\n        }\n\n        const item: OmvFilterDescription = {\n            layerName: {\n                value: options.layer,\n                match:\n                    options.matchLayer === undefined\n                        ? OmvFilterString.StringMatch.Match\n                        : options.matchLayer\n            },\n            geometryTypes:\n                options.geomTypes !== undefined\n                    ? Array.isArray(options.geomTypes)\n                        ? options.geomTypes\n                        : [options.geomTypes]\n                    : undefined,\n            classes: options.featureClasses,\n            minLevel: options.minLevel,\n            maxLevel: options.maxLevel,\n            featureAttribute: options.featureAttribute\n        };\n\n        items.push(item);\n    }\n}\n\nexport namespace OmvFeatureFilterDescriptionBuilder {\n    /**\n     * Options for `OmvFeatureFilterDescriptionBuilder`.\n     */\n    export interface OmvFeatureFilterDescriptionBuilderOptions {\n        /**\n         * If `true`, all unspecified layers will be processed. If `false`, all unspecified layers\n         * will be ignored.\n         */\n        processLayersDefault?: boolean;\n        /**\n         * If `true`, all unspecified point features will be processed. If `false`, all unspecified\n         * point features will be ignored.\n         */\n        processPointsDefault?: boolean;\n        /**\n         * If `true`, all unspecified line features will be processed. If `false`, all unspecified\n         * line\n         * features will be ignored.\n         */\n        processLinesDefault?: boolean;\n        /**\n         * If `true`, all unspecified polygon features will be processed. If `false`, all\n         * unspecified polygon features will be ignored.\n         */\n        processPolygonsDefault?: boolean;\n    }\n\n    /**\n     * Description of a single feature.\n     */\n    export interface FeatureOption {\n        /**\n         * Layer name to be matched.\n         */\n        layer: string;\n        /**\n         * Optional geometry type to be limited to. If specified, but does not match, the feature is\n         * ignored.\n         */\n        geomType: OmvGeometryType | OmvGeometryType[] | undefined;\n        /**\n         * Optional class to match. If specified, but does not match, the feature is ignored.\n         */\n        featureClass: string;\n        /**\n         * Match condition for the layer name.\n         */\n        matchLayer?: OmvFilterString.StringMatch;\n        /**\n         * Match condition for `featureClass`.\n         */\n        matchClass?: OmvFilterString.StringMatch;\n        /**\n         * Minimum tile level to match.\n         */\n        minLevel?: number;\n        /**\n         * Maximum tile level to match.\n         */\n        maxLevel?: number;\n        /**\n         * Feature attribute to match.\n         */\n        featureAttribute?: OmvFilterFeatureAttribute;\n    }\n\n    /**\n     * Description for multiple features.\n     */\n    export interface MultiFeatureOption {\n        /**\n         * Layer name to be matched.\n         */\n        layer: string;\n        /**\n         * Optional geometry type to be limited to. If specified, but does not match, the feature is\n         * ignored.\n         */\n        geomTypes?: OmvGeometryType | OmvGeometryType[] | undefined;\n        /**\n         * Optional classes to match. If specified, but does not match, the feature is ignored.\n         */\n        featureClasses?: OmvFilterString[];\n        /**\n         * Match condition for the layer name.\n         */\n        matchLayer?: OmvFilterString.StringMatch;\n        /**\n         * Minimum tile level to match.\n         */\n        minLevel?: number;\n        /**\n         * Maximum tile level to match.\n         */\n        maxLevel?: number;\n        /**\n         * Feature attribute to match.\n         */\n        featureAttribute?: OmvFilterFeatureAttribute;\n    }\n}\n\n/**\n * `OmvFeatureFilter` implementation that uses a `OmvFeatureFilterDescription` to filter `TileData`\n * features before they are completely decoded.\n *\n * @internal\n */\nexport class OmvGenericFeatureFilter implements OmvFeatureFilter {\n    private static matchLayer(\n        layer: string,\n        layerItems: OmvLayerFilterDescription[],\n        level: number\n    ): boolean {\n        for (const layerItem of layerItems) {\n            if (level < layerItem.minLevel || level > layerItem.maxLevel) {\n                continue;\n            }\n\n            if (OmvFilterString.matchString(layer, layerItem.name)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private readonly disabledKinds: GeometryKindSet | undefined;\n    private readonly enabledKinds: GeometryKindSet | undefined;\n\n    constructor(private readonly description: OmvFeatureFilterDescription) {\n        if (this.description.kindsToProcess.length > 0) {\n            this.enabledKinds = new GeometryKindSet(\n                this.description.kindsToProcess as GeometryKind[]\n            );\n        }\n        if (this.description.kindsToIgnore.length > 0) {\n            this.disabledKinds = new GeometryKindSet(\n                this.description.kindsToIgnore as GeometryKind[]\n            );\n        }\n    }\n\n    wantsLayer(layer: string, level: number): boolean {\n        if (OmvGenericFeatureFilter.matchLayer(layer, this.description.layersToProcess, level)) {\n            return true;\n        }\n\n        if (OmvGenericFeatureFilter.matchLayer(layer, this.description.layersToIgnore, level)) {\n            return false;\n        }\n\n        return this.description.processLayersDefault;\n    }\n\n    wantsPointFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.wantsFeature(\n            this.description.pointsToProcess,\n            this.description.pointsToIgnore,\n            layer,\n            geometryType,\n            level,\n            this.description.processPointsDefault\n        );\n    }\n\n    wantsLineFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.wantsFeature(\n            this.description.linesToProcess,\n            this.description.linesToIgnore,\n            layer,\n            geometryType,\n            level,\n            this.description.processLinesDefault\n        );\n    }\n\n    wantsPolygonFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.wantsFeature(\n            this.description.polygonsToProcess,\n            this.description.polygonsToIgnore,\n            layer,\n            geometryType,\n            level,\n            this.description.processPolygonsDefault\n        );\n    }\n\n    /**\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    wantsKind(kind: string | string[]): boolean {\n        // undefined -> no way to filter\n        if (kind === undefined) {\n            return true;\n        }\n\n        return (\n            !(\n                this.disabledKinds !== undefined &&\n                this.disabledKinds.hasOrIntersects(kind as GeometryKind)\n            ) ||\n            (this.enabledKinds !== undefined &&\n                this.enabledKinds.hasOrIntersects(kind as GeometryKind))\n        );\n    }\n\n    /**\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    get hasKindFilter(): boolean {\n        return this.enabledKinds !== undefined || this.disabledKinds !== undefined;\n    }\n\n    private wantsFeature(\n        itemsToProcess: OmvFilterDescription[],\n        itemsToIgnore: OmvFilterDescription[],\n        layer: string,\n        geometryType: OmvGeometryType,\n        level: number,\n        defaultResult: boolean\n    ): boolean {\n        for (const item of itemsToProcess) {\n            if (level < item.minLevel || level > item.maxLevel) {\n                continue;\n            }\n\n            if (!OmvFilterString.matchString(layer, item.layerName)) {\n                // this rule is not for this layer\n                continue;\n            }\n\n            if (item.geometryTypes !== undefined && item.geometryTypes.includes(geometryType)) {\n                return true;\n            }\n        }\n\n        for (const item of itemsToIgnore) {\n            if (!OmvFilterString.matchString(layer, item.layerName)) {\n                // this rule is not for this layer\n                continue;\n            }\n\n            if (item.geometryTypes !== undefined && item.geometryTypes.includes(geometryType)) {\n                return false;\n            }\n        }\n\n        return defaultResult;\n    }\n}\n\n/**\n * An [[OmvFeatureFilter]] implementation that delegates all filter decision\n * returning `true` for any predicate if all delegates return `true`.\n *\n * @internal\n */\nexport class ComposedDataFilter implements OmvFeatureFilter {\n    constructor(readonly filters: OmvFeatureFilter[]) {}\n\n    /**\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    get hasKindFilter() {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result || filter.hasKindFilter,\n            true\n        );\n    }\n\n    wantsLayer(layer: string, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsLayer(layer, level),\n            true\n        );\n    }\n\n    wantsPointFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsPointFeature(layer, geometryType, level),\n            true\n        );\n    }\n\n    wantsLineFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsLineFeature(layer, geometryType, level),\n            true\n        );\n    }\n\n    wantsPolygonFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsPolygonFeature(layer, geometryType, level),\n            true\n        );\n    }\n\n    /**\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    wantsKind(kind: string | string[]): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsKind(kind),\n            true\n        );\n    }\n}\n/**\n * `OmvFeatureModifier` implementation that uses a `OmvFeatureFilterDescription` to filter\n * `TileData` features before they are completely decoded.\n *\n * @internal\n */\nexport class OmvGenericFeatureModifier implements OmvFeatureModifier {\n    static matchItems(\n        layerName: string,\n        featureClass: string,\n        items: OmvFilterDescription[]\n    ): boolean {\n        for (const item of items) {\n            if (item.classes !== undefined) {\n                if (!OmvFilterString.matchString(layerName, item.layerName)) {\n                    continue;\n                }\n                for (const matchClass of item.classes) {\n                    if (OmvFilterString.matchString(featureClass, matchClass)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    static matchAttribute(layerName: string, env: MapEnv, items: OmvFilterDescription[]): boolean {\n        for (const item of items) {\n            if (item.featureAttribute !== undefined) {\n                if (\n                    OmvFilterString.matchString(layerName, item.layerName) &&\n                    env.lookup(item.featureAttribute.key) === item.featureAttribute.value\n                ) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    constructor(private readonly description: OmvFeatureFilterDescription) {}\n\n    doProcessPointFeature(layer: string, env: MapEnv): boolean {\n        return this.doProcessFeature(\n            this.description.pointsToProcess,\n            this.description.pointsToIgnore,\n            layer,\n            env,\n            this.description.processPointsDefault\n        );\n    }\n\n    doProcessLineFeature(layer: string, env: MapEnv): boolean {\n        return this.doProcessFeature(\n            this.description.linesToProcess,\n            this.description.linesToIgnore,\n            layer,\n            env,\n            this.description.processLinesDefault\n        );\n    }\n\n    doProcessPolygonFeature(layer: string, env: MapEnv): boolean {\n        return this.doProcessFeature(\n            this.description.polygonsToProcess,\n            this.description.polygonsToIgnore,\n            layer,\n            env,\n            this.description.processPolygonsDefault\n        );\n    }\n\n    protected doProcessFeature(\n        itemsToProcess: OmvFilterDescription[],\n        itemsToIgnore: OmvFilterDescription[],\n        layer: string,\n        env: MapEnv,\n        defaultResult: boolean\n    ): boolean {\n        if (layer === undefined || (itemsToProcess.length === 0 && itemsToIgnore.length === 0)) {\n            return defaultResult;\n        }\n\n        let featureClass: string | undefined;\n        const featureClassThing = env.lookup(\"class\");\n\n        if (featureClassThing !== undefined && featureClassThing !== null) {\n            featureClass = featureClassThing.toString();\n        }\n\n        if (\n            featureClass &&\n            OmvGenericFeatureModifier.matchItems(layer, featureClass, itemsToProcess)\n        ) {\n            return true;\n        }\n\n        if (\n            featureClass &&\n            OmvGenericFeatureModifier.matchItems(layer, featureClass, itemsToIgnore)\n        ) {\n            return false;\n        }\n\n        if (OmvGenericFeatureModifier.matchAttribute(layer, env, itemsToProcess)) {\n            return true;\n        }\n\n        if (OmvGenericFeatureModifier.matchAttribute(layer, env, itemsToIgnore)) {\n            return false;\n        }\n\n        return defaultResult;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { getPropertyValue, isTextTechnique } from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils/lib/tiling/TileKey\";\nimport { DataSource, TextElement, Tile } from \"@here/harp-mapview\";\nimport { debugContext } from \"@here/harp-mapview/lib/DebugContext\";\nimport { TileGeometryCreator } from \"@here/harp-mapview/lib/geometry/TileGeometryCreator\";\nimport { TextElementType } from \"@here/harp-mapview/lib/text/TextElementType\";\nimport {\n    ContextualArabicConverter,\n    FontUnit,\n    TextLayoutStyle,\n    TextRenderStyle\n} from \"@here/harp-text-canvas\";\nimport * as THREE from \"three\";\n\nconst debugMaterial = new THREE.LineBasicMaterial({\n    color: 0x000000,\n    linewidth: 1,\n    depthTest: false,\n    depthFunc: THREE.NeverDepth\n});\n\nconst debugCircleMaterial = new THREE.MeshBasicMaterial({\n    color: 0xff0000,\n    depthTest: false,\n    depthFunc: THREE.NeverDepth\n});\n\nconst debugCircleMaterialWF = new THREE.MeshBasicMaterial({\n    color: 0xff0000,\n    depthTest: false,\n    depthFunc: THREE.NeverDepth\n});\ndebugCircleMaterialWF.wireframe = true;\n\nconst debugCircleMaterial2WF = new THREE.MeshBasicMaterial({\n    color: 0x8080ff,\n    depthTest: false,\n    depthFunc: THREE.NeverDepth\n});\ndebugCircleMaterial2WF.wireframe = true;\n\nconst debugBlackCircleMaterial = new THREE.MeshBasicMaterial({\n    color: 0x000000,\n    depthTest: false,\n    depthFunc: THREE.NeverDepth\n});\n\nconst debugBlueCircleMaterial = new THREE.MeshBasicMaterial({\n    color: 0x0000ff,\n    depthTest: false,\n    depthFunc: THREE.NeverDepth,\n    opacity: 0.75,\n    transparent: true\n});\n\nconst debugOrangeCircleMaterial = new THREE.MeshBasicMaterial({\n    color: 0xa07000,\n    depthTest: false,\n    depthFunc: THREE.NeverDepth,\n    opacity: 0.75,\n    transparent: true\n});\n\nconst textRenderStyle = new TextRenderStyle();\nconst textLayoutStyle = new TextLayoutStyle();\n\ntextRenderStyle.fontSize = {\n    unit: FontUnit.Point,\n    size: 9,\n    backgroundSize: 0\n};\ntextRenderStyle.opacity = 0.75;\ntextRenderStyle.backgroundOpacity = 0.75;\ntextRenderStyle.color = new THREE.Color(0.8, 0.2, 0.2);\n\n// Set maximum priority.\nconst PRIORITY_ALWAYS = Number.MAX_SAFE_INTEGER;\n\nclass DebugGeometry {\n    geometry = new THREE.BufferGeometry();\n    indices = new Array<number>();\n    positions = new Array<number>();\n}\n\nfunction addPoint(\n    xPos: number,\n    yPos: number,\n    zPos: number,\n    size: number,\n    debugGeometry: DebugGeometry\n) {\n    debugGeometry.positions.push(xPos, yPos - size, zPos);\n    debugGeometry.positions.push(xPos + size, yPos, zPos);\n    debugGeometry.positions.push(xPos, yPos + size, zPos);\n    debugGeometry.positions.push(xPos - size, yPos, zPos);\n\n    const index = debugGeometry.positions.length / 3;\n\n    debugGeometry.indices.push(index - 4);\n    debugGeometry.indices.push(index - 3);\n    debugGeometry.indices.push(index - 2);\n    debugGeometry.indices.push(index - 4);\n    debugGeometry.indices.push(index - 2);\n    debugGeometry.indices.push(index - 1);\n}\n\nfunction addObject(\n    objects: THREE.Object3D[],\n    debugGeometry: DebugGeometry,\n    priorityOffset: number = 0,\n    factory: (geom: THREE.BufferGeometry) => THREE.Object3D\n) {\n    if (debugGeometry.indices.length > 0) {\n        debugGeometry.geometry.addGroup(0, debugGeometry.indices.length, 0);\n\n        debugGeometry.geometry.setAttribute(\n            \"position\",\n            new THREE.BufferAttribute(new Float32Array(debugGeometry.positions), 3)\n        );\n\n        debugGeometry.geometry.setIndex(\n            new THREE.BufferAttribute(new Uint32Array(debugGeometry.indices), 1)\n        );\n        const mesh = factory(debugGeometry.geometry);\n        mesh.renderOrder = PRIORITY_ALWAYS - priorityOffset;\n        objects.push(mesh);\n    }\n}\n\nexport class OmvDebugLabelsTile extends Tile {\n    constructor(dataSource: DataSource, tileKey: TileKey) {\n        super(dataSource, tileKey);\n    }\n\n    /**\n     * @override\n     * Create [[TextElement]] objects for label debugging.\n     */\n    loadingFinished() {\n        // activate in the browser with:\n        // window.__debugContext.setValue(\"DEBUG_TEXT_PATHS\", true)\n        const debugTextPaths = debugContext.getValue(\"DEBUG_TEXT_PATHS\");\n        const debugTextPathsFull = debugContext.getValue(\"DEBUG_TEXT_PATHS_FULL\");\n        const debugTextPoisFull = debugContext.getValue(\"DEBUG_TEXT_POIS_FULL\");\n        const debugLineMarkers = debugContext.getValue(\"DEBUG_TEXT_LINE_MARKER\");\n\n        if (\n            !(debugTextPaths || debugTextPathsFull || debugLineMarkers) ||\n            this.decodedTile === undefined\n        ) {\n            return;\n        }\n\n        const tileGeometryCreator = TileGeometryCreator.instance;\n        const decodedTile = this.decodedTile!;\n        const colorMap = new Map<number, THREE.Color>();\n\n        // allow limiting to specific names and/or index. There can be many paths with the\n        // same text\n        const textFilter = debugContext.getValue(\"DEBUG_TEXT_PATHS.FILTER.TEXT\");\n        const indexFilter = debugContext.getValue(\"DEBUG_TEXT_PATHS.FILTER.INDEX\");\n        const env = this.mapView.env;\n\n        if (decodedTile.textPathGeometries !== undefined) {\n            this.preparedTextPaths = tileGeometryCreator.prepareTextPaths(\n                decodedTile.textPathGeometries,\n                decodedTile\n            );\n        }\n\n        const centerX = this.center.x;\n        const centerY = this.center.y;\n        const centerZ = this.center.z;\n        const pointScale = this.mapView.pixelToWorld;\n        const worldOffsetX = this.computeWorldOffsetX();\n        const zHeight = 10;\n\n        let pointLabelIndex = 0;\n\n        if (this.textElementGroups.count() > 0) {\n            const bluePoints = new DebugGeometry();\n            const orangePoints = new DebugGeometry();\n            const addedTextElements: TextElement[] = [];\n\n            this.textElementGroups.forEach((textElement: TextElement) => {\n                if (\n                    textElement.type !== TextElementType.LineMarker &&\n                    textElement.type !== TextElementType.PoiLabel\n                ) {\n                    return;\n                }\n\n                const isLineMarker = textElement.type === TextElementType.LineMarker;\n                const geometry = isLineMarker ? orangePoints : bluePoints;\n                const pointSize = pointScale * 5;\n\n                const addLabel = (x: number, y: number, z: number) => {\n                    addPoint(x, y, z, pointSize, geometry);\n\n                    if (debugTextPoisFull || debugLineMarkers) {\n                        const offsetXY = pointSize * 0.5;\n                        const label: string = `${textElement.text} [${pointLabelIndex}]`;\n\n                        const labelElement = new TextElement(\n                            ContextualArabicConverter.instance.convert(label),\n                            new THREE.Vector3(\n                                x + worldOffsetX + centerX + offsetXY,\n                                y + centerY + offsetXY,\n                                z + centerZ\n                            ),\n                            textRenderStyle,\n                            textLayoutStyle,\n                            PRIORITY_ALWAYS,\n                            0.0,\n                            0.0\n                        );\n                        labelElement.minZoomLevel = 0;\n                        labelElement.mayOverlap = true;\n                        labelElement.reserveSpace = false;\n                        labelElement.alwaysOnTop = true;\n                        labelElement.ignoreDistance = true;\n                        labelElement.priority = TextElement.HIGHEST_PRIORITY;\n\n                        (labelElement as any)._isDebug = true;\n\n                        addedTextElements.push(labelElement);\n                    }\n\n                    pointLabelIndex++;\n                };\n\n                if (textElement.path !== undefined && Array.isArray(textElement.path)) {\n                    for (let i = 0; i < textElement.path.length; i++) {\n                        const pos = textElement.path[i];\n                        const x = pos.x - centerX;\n                        const y = pos.y - centerY;\n                        const z = zHeight + pos.z + i * 5 - centerZ;\n                        addLabel(x, y, z);\n                    }\n                } else if (debugTextPoisFull) {\n                    const x = textElement.position.x - centerX;\n                    const y = textElement.position.y - centerY;\n                    const z = 5 - centerZ;\n                    addLabel(x, y, z);\n                }\n            });\n\n            for (const labelElement of addedTextElements) {\n                this.addTextElement(labelElement);\n            }\n\n            addObject(\n                this.objects,\n                bluePoints,\n                0,\n                (geometry: THREE.BufferGeometry): THREE.Object3D => {\n                    return new THREE.Mesh(geometry, debugBlueCircleMaterial);\n                }\n            );\n            addObject(\n                this.objects,\n                orangePoints,\n                0,\n                (geometry: THREE.BufferGeometry): THREE.Object3D => {\n                    return new THREE.Mesh(geometry, debugOrangeCircleMaterial);\n                }\n            );\n        }\n\n        if (this.preparedTextPaths !== undefined) {\n            const lines = new DebugGeometry();\n            const redPoints = new DebugGeometry();\n            const blackPoints = new DebugGeometry();\n\n            let baseVertex = 0;\n\n            for (const textPath of this.preparedTextPaths) {\n                const technique = decodedTile.techniques[textPath.technique];\n                if (!isTextTechnique(technique) || (textPath as any)._isDebug !== undefined) {\n                    continue;\n                }\n                if (technique.color !== undefined) {\n                    colorMap.set(\n                        textPath.technique,\n                        new THREE.Color(getPropertyValue(technique.color, env))\n                    );\n                }\n\n                baseVertex = lines.positions.length / 3;\n\n                const text = textPath.text;\n\n                const elementIndex = this.preparedTextPaths.indexOf(textPath);\n\n                const createDebugInfo =\n                    (!textFilter || (text && text.includes(textFilter))) &&\n                    (indexFilter === undefined || indexFilter === elementIndex);\n\n                if (createDebugInfo) {\n                    for (let i = 0; i < textPath.path.length; i += 3) {\n                        const pathIndex = i / 3;\n                        const x = textPath.path[i] - centerX;\n                        const y = textPath.path[i + 1] - centerY;\n                        // raise it a bit, so we get identify connectivity visually by tilting\n                        const z = zHeight + textPath.path[i + 2] + i / 3 - centerZ;\n\n                        if (debugTextPaths) {\n                            lines.positions.push(x, y, z);\n                        }\n\n                        const isRedPoint = i === 0 && debugTextPaths;\n\n                        if (debugTextPathsFull || isRedPoint) {\n                            const pointSize = pointScale * (isRedPoint ? 6 : 4);\n                            const geometry = isRedPoint ? redPoints : blackPoints;\n\n                            addPoint(x, y, z, pointSize, geometry);\n\n                            if (debugTextPathsFull) {\n                                const xOffset = technique.xOffset ?? 0.0;\n                                const yOffset = technique.yOffset ?? 0.0;\n                                const minZoomLevel = technique.minZoomLevel;\n                                // give point index a label\n                                const label: string =\n                                    pathIndex % 5 === 0\n                                        ? text + \":\" + pathIndex\n                                        : Number(pathIndex).toString();\n                                const labelElement = new TextElement(\n                                    ContextualArabicConverter.instance.convert(label),\n                                    new THREE.Vector3(\n                                        x + worldOffsetX + centerX,\n                                        y + centerY,\n                                        z + centerZ\n                                    ),\n                                    textRenderStyle,\n                                    textLayoutStyle,\n                                    getPropertyValue(technique.priority ?? 0, env),\n                                    xOffset,\n                                    yOffset\n                                );\n                                labelElement.minZoomLevel = getPropertyValue(minZoomLevel, env);\n                                labelElement.mayOverlap = true;\n                                labelElement.reserveSpace = false;\n                                labelElement.alwaysOnTop = true;\n                                labelElement.ignoreDistance = true;\n                                labelElement.priority = TextElement.HIGHEST_PRIORITY;\n                                this.addTextElement(labelElement);\n                            }\n                        }\n                    }\n\n                    // the lines of a path share a common geometry\n                    const N = textPath.path.length / 3;\n                    for (let i = 0; i < N; ++i) {\n                        if (i > 0) {\n                            lines.indices.push(baseVertex + i);\n                        }\n                        if (i + 1 < N) {\n                            lines.indices.push(baseVertex + i);\n                        }\n                    }\n                }\n            }\n\n            addObject(\n                this.objects,\n                lines,\n                -2,\n                (geometry: THREE.BufferGeometry): THREE.Object3D => {\n                    return new THREE.LineSegments(geometry, debugMaterial);\n                }\n            );\n            addObject(\n                this.objects,\n                redPoints,\n                0,\n                (geometry: THREE.BufferGeometry): THREE.Object3D => {\n                    return new THREE.Mesh(geometry, debugCircleMaterial);\n                }\n            );\n            addObject(\n                this.objects,\n                blackPoints,\n                -1,\n                (geometry: THREE.BufferGeometry): THREE.Object3D => {\n                    return new THREE.Mesh(geometry, debugBlackCircleMaterial);\n                }\n            );\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Value } from \"@here/harp-datasource-protocol/index-decoder\";\n\n/**\n * Feature Modifier ids to choose which OmvFeatureModifer should be used in OmvDecoder.\n */\nexport enum FeatureModifierId {\n    /**\n     * Generic feature modifier used when no other modifiers are defined.\n     *\n     * @note You do not need to specify it in [[OmvDataSourceParameters]] as it is added by default\n     * if no other feature modifier is used.\n     */\n    default\n}\n\n/**\n * Definition of a filter.\n */\nexport interface OmvFilterString {\n    /**  String value */\n    value: string;\n    /** Match condition */\n    match: OmvFilterString.StringMatch;\n}\n\n/**\n * Adding the match condition type and the matching function to the namespace of `OmvFilterString`.\n */\nexport namespace OmvFilterString {\n    /**\n     * Match condition.\n     */\n    export enum StringMatch {\n        /** Matches any. */\n        Any,\n        /** Exact match. */\n        Match,\n        /** Matches if a test string starts with a filter string. */\n        StartsWith,\n        /** Matches if a test string contains a filter string. */\n        Contains,\n        /** Matches if a test string ends with a filter string. */\n        EndsWith\n    }\n\n    /**\n     * Check for a string against a filter.\n     *\n     * @param str - The string to check against a filter.\n     * @param filterString - The filter containing the match condition.\n     * @returns `true` if the match condition is satisfied.\n     *\n     * @internal\n     */\n    export function matchString(str: string, filterString: OmvFilterString): boolean {\n        switch (filterString.match) {\n            case OmvFilterString.StringMatch.Any:\n                return true;\n            case OmvFilterString.StringMatch.Match:\n                return str === filterString.value;\n            case OmvFilterString.StringMatch.StartsWith:\n                return filterString.value.startsWith(str);\n            case OmvFilterString.StringMatch.EndsWith:\n                return filterString.value.endsWith(str);\n            default:\n                return str.includes(filterString.value);\n        }\n    }\n}\n\n/**\n * Definition of a filter for a feature attribute\n */\nexport interface OmvFilterFeatureAttribute {\n    key: string;\n    value: Value;\n}\n\nexport enum OmvGeometryType {\n    UNKNOWN = 0,\n    POINT = 1,\n    LINESTRING = 2,\n    POLYGON = 3\n}\n\n/**\n * Internal type of a layer filter description, Should not be publicly available.\n *\n * @hidden\n */\nexport interface OmvLayerFilterDescription {\n    name: OmvFilterString;\n    minLevel: number;\n    maxLevel: number;\n}\n\n/**\n * Internal type of a single filter description, Should not be publicly available.\n *\n * @hidden\n */\nexport interface OmvFilterDescription {\n    layerName: OmvFilterString;\n    geometryTypes?: OmvGeometryType[];\n    classes?: OmvFilterString[];\n    minLevel: number;\n    maxLevel: number;\n    featureAttribute?: OmvFilterFeatureAttribute;\n}\n\n/**\n * Internal type of a complete [[OmvFeatureFilter]] description, should not be publicly available.\n *\n * @hidden\n */\nexport interface OmvFeatureFilterDescription {\n    processLayersDefault: boolean;\n    processPointsDefault: boolean;\n    processLinesDefault: boolean;\n    processPolygonsDefault: boolean;\n\n    layersToProcess: OmvLayerFilterDescription[];\n    layersToIgnore: OmvLayerFilterDescription[];\n    pointsToProcess: OmvFilterDescription[];\n    pointsToIgnore: OmvFilterDescription[];\n    linesToProcess: OmvFilterDescription[];\n    linesToIgnore: OmvFilterDescription[];\n    polygonsToProcess: OmvFilterDescription[];\n    polygonsToIgnore: OmvFilterDescription[];\n\n    // enabledKinds and disabledKinds\n    kindsToProcess: string[];\n    kindsToIgnore: string[];\n}\n\n/**\n * Internal interface for options passed from the [[OmvDataSource]] to the decoder.\n *\n * @internal\n */\nexport interface OmvDecoderOptions {\n    /**\n     * If true, features that have no technique in the theme will be printed to the console (can be\n     * excessive!).\n     */\n    showMissingTechniques?: boolean;\n\n    /**\n     * Gather feature attributes from [[OmvData]]. Defaults to false.\n     */\n    gatherFeatureAttributes?: boolean;\n\n    /**\n     * @deprecated Tile info is not decoded anymore. The same information can be generated\n     * implementing a [[IGeometryProcessor]] and using [[OmvProtobufDataAdapter]] to decode OMV\n     * data.\n     */\n    createTileInfo?: boolean;\n\n    /**\n     * @deprecated Tile info is not decoded anymore. The same information can be generated\n     * implementing a [[IGeometryProcessor]] and using [[OmvProtobufDataAdapter]] to decode OMV\n     * data.\n     */\n    gatherRoadSegments?: boolean;\n\n    /**\n     * Optional storage level offset for [[Tile]]s. Default is -2.\n     */\n    storageLevelOffset?: number;\n\n    /**\n     * If not set to `false` very short text labels will be skipped during decoding based on a\n     * heuristic.\n     */\n    skipShortLabels?: boolean;\n\n    /**\n     * A description for the feature filter which can be safely passed down to the web workers.\n     * It has to be generated with the help of the [[OmvFeatureFilterDescriptionBuilder]] (to\n     * guarantee the correctness).\n     */\n    filterDescription?: OmvFeatureFilterDescription | null;\n\n    // NOTE: Consider using OmvFeatureModifiers objects already instead of ids, this way we could\n    // get rid of politicalView property as properly configured feature modifier (with country\n    // code), would be already defined here.\n    /**\n     * List of user specified [[OmvFeatureModifier]]s, list order declares the order of processing.\n     *\n     * Each identifier is used to choose corresponding OmvFeatureModifier, if undefined at least\n     * [[OmvGenericFeatureModifier]] is added to decoder.\n     */\n    featureModifiers?: FeatureModifierId[];\n\n    /**\n     * Country code (lower-case ISO 3166-1 alpha-2) defining optional point of view to be used.\n     * Set to empty string (\"\") if you want to use default (widely accepted) point of view.\n     * If set to `undefined` leaves current political view decoder configuration.\n     */\n    politicalView?: string;\n\n    enableElevationOverlay?: boolean;\n\n    roundUpCoordinatesIfNeeded?: boolean;\n}\n\n/**\n * Vector tile decoder service type id.\n *\n * @remarks\n * Used for requesting decoder services using `WorkerServiceManager`.\n *\n * @internal\n */\nexport const VECTOR_TILE_DECODER_SERVICE_TYPE = \"vector-tile-decoder\";\n\n/**\n * GeoJson tiler service type id.\n *\n * @remarks\n * Used for requesting tiler services using `WorkerServiceManager`.\n *\n * @internal\n */\nexport const GEOJSON_TILER_SERVICE_TYPE = \"geojson-tiler\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport \"@here/harp-fetch\";\n\nimport { TileKey, TilingScheme } from \"@here/harp-geoutils\";\nimport { DataProvider } from \"@here/harp-mapview-decoder\";\nimport { ITransferManager, TransferManager } from \"@here/harp-transfer-manager\";\nimport { LoggerManager } from \"@here/harp-utils\";\n\nconst logger = LoggerManager.instance.create(\"OmvRestClient\");\n\ninterface QueryParameters {\n    [key: string]: string;\n}\n\nexport enum APIFormat {\n    /**\n     * Use the REST API format of HERE Vector Tiles Server component version 1.\n     *\n     * @remarks\n     * Documentation:\n     *  https://developer.here.com/documentation/vector-tiles-api/dev_guide/index.html\n     *\n     * Usage:\n     *\n     *     <OmvRestClientParams.baseUrl>/<zoom>/<X>/<Y>/omv\n     *\n     * If [[OmvRestClientParams.authenticationToken]] is provided, it will be added as HTTP header:\n     *\n     *     Authorization: Bearer $authenticationToken\n     *\n     * Format definition:\n     * `//http|s://<base-url>/{API version}/{layers}/{projection}/{z}/{x}/{y}/{format}`\n     *\n     * Default authentication method used: [[AuthenticationTypeBearer]].\n     */\n    HereV1,\n\n    /**\n     * Use the REST API format of Mapbox Vector Tile API v4.\n     *\n     * @remarks\n     * Usage:\n     * `<OmvRestClientParams.baseUrl>/<zoom>/<X>/<Y>.mvt?access_token=<OmvRestClientParams.authenticationCode>`\n     *\n     * Format definition:\n     * `http|s://<base-url>/v4/{map_id}/{z}/{x}/{y}{@2x}.{format}?[style]&access_token={access_token}`\n     *\n     * Sample URL:\n     * `http://a.tiles.mapbox.com/v4/mapbox.mapbox-streets-v7/14/4823/6160.mvt?access_token=your-mapbox-access-token`\n     *\n     * Default authentication method used: [[AuthenticationTypeAccessToken]].\n     */\n    MapboxV4,\n\n    /**\n     * Use the REST API format of XYZ Vector Tile API in MVT format.\n     *\n     * @remarks\n     * Usage:\n     * `<OmvRestClientParams.baseUrl>/tiles/omsbase/256/<zoom>/<X>/<Y>.mvt?access_token=<OmvRestClientParams.authenticationCode>`\n     *\n     * Format definition:\n     * `http|s://<base-url>/tiles/{layers}/{z}/{x}/{y}/{format}?access_token={access_token}`\n     *\n     * Sample URL:\n     * `https://xyz.api.here.com/tiles/osmbase/256/all/16/19293/24641.mvt?access_token=your-xyz-access-token`\n     *\n     * Default authentication method used: [[AuthenticationTypeAccessToken]].\n     */\n    XYZMVT,\n\n    /**\n     * Use the REST API format of XYZ Vector Tile API in JSON format.\n     *\n     * @remarks\n     * Usage:\n     * `<OmvRestClientParams.baseUrl>/tiles/omsbase/256/<zoom>/<X>/<Y>.mvt?access_token=<OmvRestClientParams.authenticationCode>`\n     *\n     * Format definition:\n     * `http|s://<base-url>/tiles/{layers}/{z}/{x}/{y}/{format}?access_token={access_token}`\n     *\n     * Sample URL:\n     * `https://xyz.api.here.com/tiles/osmbase/256/all/16/19293/24641.json?access_token=your-xyz-api-key`\n     *\n     * Default authentication method used: [[AuthenticationTypeAccessToken]].\n     */\n    XYZJson,\n\n    /**\n     * Use the REST API format of XYZ Vector Tile API in OMV format.\n     *\n     * @remarks\n     * Usage:\n     * `<OmvRestClientParams.baseUrl>/tiles/herebase.02/<zoom>/<X>/<Y>/omv?access_token=<OmvRestClientParams.authenticationCode>`\n     *\n     * Format definition:\n     * `http|s://<base-url>/tiles/herebase.02/{z}/{x}/{y}/{format}?access_token={access_token}`\n     *\n     * Sample URL:\n     * `https://xyz.api.here.com/tiles/herebase.02/14/2649/6338/omv?access_token=your-xyz-access-token`\n     *\n     * Default authentication method used: [[AuthenticationTypeAccessToken]].\n     */\n    XYZOMV,\n\n    /**\n     * Use the REST API format of Tomtoms Vector Tile API v1.\n     *\n     * @remarks\n     * Usage:\n     * `<OmvRestClientParams.baseUrl>/<zoom>/<X>/<Y>.pbf?key=<OmvRestClientParams.authenticationCode>`\n     *\n     * Format definition:\n     * `<http|https>://<baseURL>/map/<versionNumber>/tile/<layer>/<style>/<zoom>/<X>/<Y>.<format>?key=<apiKey>[&view=<view>][&language=<language>]`\n     *\n     * Sample URL:\n     * `http://api.tomtom.com/map/1/tile/basic/main/0/0/0.pbf?key=<apiKey>`\n     *\n     * Default authentication method used: [[AuthenticationTypeTomTomV1]].\n     */\n    TomtomV1,\n\n    /**\n     * Use the REST API format of XYZ Space Vector Tile API in OMV format.\n     *\n     * @remarks\n     * Usage:\n     * `<OmvRestClientParams.baseUrl>/hub/spaces/<space-id>/tile/web/<zoom>_<X>_<Y>.mvt?access_token=<OmvRestClientParams.authenticationCode>`\n     *\n     * Format definition:\n     * `http|s://<base-url>/hub/spaces/{spaceId}/tile/web/{z}_{x}_{y}.mvt?access_token={access_token}`\n     *\n     * Sample URL:\n     * `https://xyz.api.here.com/hub/spaces/your-space-id/tile/web/{z}_{x}_{y}.mvt?access_token=your-access-token`\n     *\n     * Default authentication method used: [[AuthenticationTypeAccessToken]].\n     */\n    XYZSpace\n}\n\n/**\n * Authentication token/code provider used by [[OmvRestClient]] before each call to currently valid\n * authentication code/token.\n */\nexport type AuthenticationCodeProvider = () => Promise<string>;\n\nexport enum AuthenticationMethod {\n    QueryString,\n    AuthorizationHeader\n}\n\nexport interface AuthenticationMethodInfo {\n    method: AuthenticationMethod;\n    name?: string;\n}\n\n/**\n * Authentication method, where token will be provided as HTTP Header:\n *\n *    Authorization: Bearer $authenticationToken\n */\nexport const AuthenticationTypeBearer: AuthenticationMethodInfo = {\n    method: AuthenticationMethod.AuthorizationHeader,\n    name: \"Bearer\"\n};\n\n/**\n * TomTomV1 API compatible authorization method, where token will be provided as HTTP Header:\n *\n *    Authorization: Bearer $authenticationToken\n */\nexport const AuthenticationTypeTomTomV1: AuthenticationMethodInfo = {\n    method: AuthenticationMethod.QueryString,\n    name: \"key\"\n};\n\nexport const AuthenticationTypeAccessToken: AuthenticationMethodInfo = {\n    method: AuthenticationMethod.QueryString,\n    name: \"access_token\"\n};\n\nexport interface OmvRestClientParameters {\n    /**\n     * `URL` pattern used to fetch tile files.\n     *\n     * @remarks\n     * `URL` with special keywords replaced to retrieve specific tile:\n     *  - `{z}` - zoom level of tile, @see {@link @here/harp-geoutils#TileKey.level}\n     *  - `{x}` - horizontal coordinate of tile (column number),\n     *            see {@link @here/harp-geoutils#TileKey.column}\n     *  - `{y}` - vertical coordinate of Tile (row number),\n     *            see {@link @here/harp-geoutils#TileKey.row}\n     *\n     * Examples of `url` patterns:\n     * ```\n     *   https://my-base-url.com/vector-tiles/{z}/{x}/{y}.mvt\n     *   https://xyz.api.here.com/tiles/herebase.02/{z}/{x}/{y}/omv\n     *   https://xyz.api.here.com/tiles/osmbase/512/all/{z}/{x}/{y}.mvt\n     * ```\n     *\n     * Note: To add authentication headers and/or query params, use [[authMethod]], [[urlParams]]\n     * properties or embed token directly in `url`.\n     *\n     * Complete examples:\n     * ```\n     * // XYZ OSM with authentication using query param\n     * {\n     *     url: \"https://xyz.api.here.com/tiles/osmbase/512/all/{z}/{x}/{y}.mvt\",\n     *     urlParams: {\n     *           access_token: accessToken\n     *     },\n     * }\n     * // HERE Vector Tile with authentication using bearer token retrieved by callback\n     * {\n     *     url: \"https://vector.hereapi.com/v2/vectortiles/base/mc/{z}/{x}/{y}/omv\",\n     *     authenticationMethod: AuthenticationTypeBearer,\n     *     authenticationCode: () => getBearerToken()\n     * }\n     * ```\n     */\n    url?: string;\n\n    /**\n     * The base URL of the REST Tile Service.\n     * @see [[APIFormat]] for the definition of `baseUrl`.\n     */\n    baseUrl?: string;\n\n    /**\n     * Authentication code used for the different APIs.\n     *\n     * @remarks\n     * When [[AuthenticationCodeProvider]] is is used as value, the provider is called before each\n     * to get currently valid authentication code/token.\n     *\n     * @see [[APIFormat]] for the query parameter this is used with.\n     */\n    authenticationCode?: string | AuthenticationCodeProvider;\n\n    /**\n     * Specifies [[AuthMethod]] to be used when requesting tiles.\n     *\n     * @remarks\n     * Defaults for each [[APIFormat]] are documented with each format type.\n     */\n    authenticationMethod?: AuthenticationMethodInfo;\n\n    /**\n     * The REST API format to use for the tile path generation, will default to the HERE Vector Tile\n     * API.\n     */\n    apiFormat?: APIFormat;\n\n    /**\n     * Tiling scheme is used in some of the APIs, not implemented yet.\n     */\n    tilingScheme?: TilingScheme;\n\n    /**\n     * Transfer Manager to use; creates an own instance if none passed.\n     */\n    downloadManager?: ITransferManager;\n\n    /**\n     * Function to retrieve the Bearer Token\n     *\n     * @deprecated Please use [[authenticationCode]].\n     */\n    getBearerToken?: () => Promise<string>;\n\n    /**\n     * Array of query parameters to be appended at the end of the url.\n     * It is empty by default.\n     */\n    urlParams?: { [key: string]: string };\n}\n\n/**\n * REST client supporting getting protobuf OMV Tile from REST-based servers.\n */\nexport class OmvRestClient extends DataProvider {\n    private readonly downloadManager: ITransferManager;\n    private readonly urlParams: { [key: string]: string };\n\n    constructor(readonly params: OmvRestClientParameters) {\n        super();\n        this.downloadManager =\n            params.downloadManager === undefined\n                ? TransferManager.instance()\n                : params.downloadManager;\n        this.urlParams = params.urlParams === undefined ? {} : params.urlParams;\n    }\n\n    /** Overriding abstract method, in this case doing nothing. */\n    async connect(): Promise<void> {\n        // not needed\n    }\n\n    /** Overriding abstract method, in this case always returning `true`. */\n    ready(): boolean {\n        return true;\n    }\n\n    /**\n     * Asynchronously fetches a tile from this restful server.\n     *\n     * @remarks\n     * **Note:** In case of an HTTP Error, rejected promise is returned\n     * with an error.\n     *\n     * @example\n     * ```typescript\n     * const response = layer.getTile(tileKey);\n     * if (!response.ok) {\n     *     // a network error happened\n     *     console.error(\"Unable to download tile\", response.statusText);\n     *     return;\n     * }\n     *\n     * // the response is ok and contains data, access it e.g. as arrayBuffer:\n     * const payload = await response.arrayBuffer();\n     * ```\n     *\n     * @param tileKey - The tile key of the tile.\n     * @param tileRequestInit - Optional request options to be passed to fetch when downloading a\n     * tile.\n     * @returns A `Promise` of the HTTP response that contains the payload of the requested tile.\n     */\n    async getTile(\n        tileKey: TileKey,\n        abortSignal?: AbortSignal | undefined\n    ): Promise<ArrayBufferLike | {}> {\n        const init: RequestInit = { signal: abortSignal };\n\n        let tileUrl = this.dataUrl(tileKey);\n\n        const authenticationCode = await this.getActualAuthenticationCode();\n\n        tileUrl = this.applyAuthCode(tileUrl, init, authenticationCode);\n        tileUrl = this.addQueryParams(tileUrl, this.urlParams);\n\n        if (this.params.apiFormat === APIFormat.XYZJson) {\n            return await this.downloadManager.downloadJson(tileUrl, init);\n        }\n\n        return await this.downloadManager.downloadArrayBuffer(tileUrl, init);\n    }\n\n    /**\n     * Destroys this `OmvRestClient`.\n     */\n    dispose() {\n        // to be overloaded by subclasses\n    }\n\n    /**\n     * Get actual authentication code/token for this request according to configuration.\n     */\n    private async getActualAuthenticationCode() {\n        if (typeof this.params.authenticationCode === \"string\") {\n            return this.params.authenticationCode;\n        } else if (this.params.authenticationCode !== undefined) {\n            return await this.params.authenticationCode();\n        } else if (this.params.getBearerToken !== undefined) {\n            return await this.params.getBearerToken();\n        } else {\n            return undefined;\n        }\n    }\n\n    /**\n     * Get default authentication method basing on apiFormat and other params.\n     */\n    private getDefaultAuthMethod() {\n        if (this.params.getBearerToken !== undefined) {\n            return AuthenticationTypeBearer;\n        }\n\n        switch (this.params.apiFormat) {\n            case APIFormat.HereV1:\n                return AuthenticationTypeBearer;\n            case APIFormat.MapboxV4:\n            case APIFormat.XYZOMV:\n            case APIFormat.XYZMVT:\n            case APIFormat.XYZSpace:\n            case APIFormat.XYZJson:\n                return AuthenticationTypeAccessToken;\n            case APIFormat.TomtomV1:\n                return AuthenticationTypeTomTomV1;\n            default:\n                logger.warn(\n                    `#getDefaultAuthMethod: Not supported API format: ${this.params.apiFormat}`\n                );\n                return undefined;\n        }\n    }\n\n    /**\n     * Apply authentication code/token using configured (or default) authentication method.\n     *\n     * @param url -\n     * @param init - request extra data\n     * @param authenticationCode - authentication/token to be applied\n     * @return new url to be used\n     */\n    private applyAuthCode(url: string, init: RequestInit, authenticationCode: string | undefined) {\n        if (authenticationCode === undefined) {\n            return url;\n        }\n        const authMethod = this.params.authenticationMethod ?? this.getDefaultAuthMethod();\n        if (authMethod === undefined) {\n            return url;\n        }\n\n        if (authMethod.method === AuthenticationMethod.AuthorizationHeader) {\n            if (init.headers === undefined) {\n                init.headers = new Headers();\n            }\n            const authType = authMethod.name ?? \"Bearer\";\n            (init.headers as Headers).append(\"Authorization\", `${authType} ${authenticationCode}`);\n        } else if (authMethod.method === AuthenticationMethod.QueryString) {\n            const attrName: string = authMethod.name ?? \"access_token\";\n            const authParams: { [key: string]: string } = {};\n            authParams[attrName] = authenticationCode;\n            url = this.addQueryParams(url, authParams);\n        }\n        return url;\n    }\n\n    /**\n     * Get actual tile URL depending on configured API format.\n     */\n    private dataUrl(tileKey: TileKey): string {\n        if (this.params.url !== undefined) {\n            return this.params.url\n                .replace(\"{x}\", String(tileKey.column))\n                .replace(\"{y}\", String(tileKey.row))\n                .replace(\"{z}\", String(tileKey.level));\n        }\n        let path = [`/${tileKey.level}`, tileKey.column, tileKey.row].join(\n            this.params.apiFormat === APIFormat.XYZSpace ||\n                this.params.apiFormat === APIFormat.XYZJson\n                ? \"_\"\n                : \"/\"\n        );\n        switch (this.params.apiFormat) {\n            case APIFormat.HereV1:\n            case APIFormat.XYZOMV:\n                path += \"/omv\";\n                break;\n            case APIFormat.MapboxV4:\n                path += \".mvt\";\n                break;\n            case APIFormat.XYZMVT:\n                path += \".mvt\";\n                break;\n            case APIFormat.XYZJson:\n                break;\n            case APIFormat.XYZSpace:\n                path += \".mvt\";\n                break;\n            case APIFormat.TomtomV1:\n                path += \".pbf\";\n                break;\n            default:\n                logger.warn(`Not supported API format: ${this.params.apiFormat}`);\n                break;\n        }\n\n        return this.params.baseUrl + path;\n    }\n\n    private addQueryParams(url: string, queryParams: QueryParameters): string {\n        let queryString = \"\";\n        let sep = url.includes(\"?\") ? \"&\" : \"?\";\n        for (const prop in queryParams) {\n            if (!queryParams.hasOwnProperty(prop)) {\n                continue;\n            }\n            queryString += `${sep}${encodeURIComponent(prop)}=${encodeURIComponent(\n                queryParams[prop]\n            )}`;\n            if (sep === \"?\") {\n                sep = \"&\";\n            }\n        }\n        return url + queryString;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { DecoderOptions, OptionsMap, WorkerServiceProtocol } from \"@here/harp-datasource-protocol\";\nimport { EarthConstants, TileKey, webMercatorTilingScheme } from \"@here/harp-geoutils\";\nimport { DataSourceOptions, Tile } from \"@here/harp-mapview\";\nimport {\n    DataProvider,\n    TileDataSource,\n    TileDataSourceOptions,\n    TileFactory\n} from \"@here/harp-mapview-decoder\";\nimport { getOptionValue, LoggerManager } from \"@here/harp-utils\";\n\nimport {\n    FeatureModifierId,\n    OmvDecoderOptions,\n    OmvFeatureFilterDescription,\n    VECTOR_TILE_DECODER_SERVICE_TYPE\n} from \"./OmvDecoderDefs\";\nimport {\n    APIFormat,\n    AuthenticationMethod,\n    OmvRestClient,\n    OmvRestClientParameters\n} from \"./OmvRestClient\";\n\nconst logger = LoggerManager.instance.create(\"VectorTileDataSource\");\n\nexport interface VectorTileFactory {\n    /** Create an instance of {@link @here/harp-mapview#Tile} or a subclass. */\n    createTile(dataSource: VectorTileDataSource, tileKey: TileKey): Tile;\n}\n\nexport interface VectorTileDataSourceParameters\n    extends DataSourceOptions,\n        // These parameters have to be handled specially, see: completeDataSourceParameters\n        Omit<TileDataSourceOptions, \"dataProvider\" | \"tilingScheme\"> {\n    /**\n     * If set to `true`, features that have no technique in the theme will be printed to the console\n     * (can be excessive!).\n     */\n    showMissingTechniques?: boolean;\n\n    /**\n     * @deprecated Tile info is not decoded anymore. The same information can be generated\n     * implementing a [[IGeometryProcessor]] and using [[OmvProtobufDataAdapter]] to decode OMV\n     * data.\n     */\n    createTileInfo?: boolean;\n\n    /**\n     * Optionally specify the DataProvider that should be used.\n     */\n    dataProvider?: DataProvider;\n\n    /**\n     * Gather feature IDs from `OmvData`. Defaults to `false`.\n     * @deprecated FeatureIds are always gathered, use [[gatherFeatureAttributes]] to gather\n     * all feature attributes.\n     */\n    gatherFeatureIds?: boolean;\n\n    /**\n     * Gather feature attributes from `OmvData`. Defaults to `false`.\n     */\n    gatherFeatureAttributes?: boolean;\n\n    /**\n     * @deprecated Tile info is not decoded anymore. The same information can be generated\n     * implementing a [[IGeometryProcessor]] and using [[OmvProtobufDataAdapter]] to decode OMV\n     * data.\n     */\n    gatherRoadSegments?: boolean;\n\n    /**\n     * If not set to `false`, very short text labels will be skipped during decoding based on a\n     * heuristic.\n     */\n    skipShortLabels?: boolean;\n\n    /**\n     * A description for the feature filter that can be safely passed down to the web workers.\n     *\n     * @remarks\n     * It has to be generated with the help of the [[OmvFeatureFilterDescriptionBuilder]]\n     * (to guarantee correctness). This parameter gets applied to the decoder used in the\n     * {@link VectorTileDataSource} which might be shared between\n     * various {@link VectorTileDataSource}s.\n     */\n    filterDescr?: OmvFeatureFilterDescription;\n\n    /**\n     * Optional, custom factory for {@link @here/harp-mapview#Tile} instances created\n     * by this {@link VectorTileDataSource}.\n     */\n    tileFactory?: TileFactory<Tile>;\n\n    /**\n     * Identifier used to choose [[OmvFeatureModifier]]s to be applied.\n     *\n     * @remarks\n     * If left `undefined` at least [[OmvGenericFeatureModifier]] will be applied.\n     * The list of feature modifiers may be extended internally by some data source options\n     * such as [[politicalView]] which adds [[OmvPoliticalViewFeatureModifier]].\n     *\n     * @note This parameter gets applied to the decoder used in the {@link VectorTileDataSource}\n     * which might be shared between various {@link VectorTileDataSource}s.\n     */\n    featureModifierId?: FeatureModifierId;\n\n    /**\n     * Expresses specific country point of view that is used when rendering disputed features,\n     * like borders, names, etc. If undefined \"defacto\" or most widely accepted political view\n     * will be presented.\n     *\n     * @see featureModifiers\n     */\n    politicalView?: string;\n\n    /**\n     * Indicates whether overlay on elevation is enabled. Defaults to `false`.\n     */\n    enableElevationOverlay?: boolean;\n\n    /**\n     * Indicates whether to add a ground plane to cover the tile completely.\n     *\n     * @remarks\n     * This is necessary for the fallback logic, such that the parent fall back tiles don't\n     * overlap the children tiles.\n     * Default is true (i.e. if not defined it is taken to be true)\n     */\n    addGroundPlane?: boolean;\n\n    /**\n     * Indicates whether the decoder is allowed to adjust the coordinates to\n     * avoid possible glitches at the 180th meridian.\n     *\n     * @defaultValue `true` if the data service is\n     *               `https://vector.hereapi.com/v2/vectortiles/base/mc`,\n     *               `false` otherwise.\n     */\n    roundUpCoordinatesIfNeeded?: boolean;\n}\n\n/**\n * A helper function to retrieve the [[DataProvider]] from the\n * {@link VectorTileDataSource}s parameters.\n *\n * @param params - The parameters passed into the OmvDataSource.\n */\nfunction getDataProvider(params: OmvWithRestClientParams | OmvWithCustomDataProvider) {\n    if ((params as OmvWithCustomDataProvider).dataProvider) {\n        return (params as OmvWithCustomDataProvider).dataProvider;\n    } else if (\n        (params as OmvWithRestClientParams).baseUrl ??\n        (params as OmvWithRestClientParams).url\n    ) {\n        return new OmvRestClient(params as OmvRestClientParameters);\n    } else {\n        throw new Error(\"OmvDataSource: missing url, baseUrl or dataProvider params\");\n    }\n}\n\nexport type OmvWithRestClientParams = VectorTileDataSourceParameters & OmvRestClientParameters;\n\nexport type OmvWithCustomDataProvider = VectorTileDataSourceParameters & {\n    dataProvider: DataProvider;\n};\n\nlet missingOmvDecoderServiceInfoEmitted: boolean = false;\n\n/**\n * The default vector tile service.\n */\nconst hereVectorTileBaseUrl = \"https://vector.hereapi.com/v2/vectortiles/base/mc\";\n\n/**\n * Default options for the HERE Vector Tile service.\n */\nconst hereVectorTileDefaultOptions: OmvWithRestClientParams = {\n    baseUrl: hereVectorTileBaseUrl,\n    apiFormat: APIFormat.XYZOMV,\n    styleSetName: \"tilezen\",\n    authenticationMethod: {\n        method: AuthenticationMethod.QueryString,\n        name: \"apikey\"\n    },\n    copyrightInfo: [\n        {\n            id: \"here.com\",\n            year: new Date().getFullYear(),\n            label: \"HERE\",\n            link: \"https://legal.here.com/terms\"\n        }\n    ]\n};\n\nconst defaultOptions = new Map<string, OmvWithRestClientParams>([\n    [hereVectorTileBaseUrl, hereVectorTileDefaultOptions]\n]);\n\n/**\n * Tests if the given object has custom data provider.\n * @param object -\n */\nfunction hasCustomDataProvider(\n    object: Partial<OmvWithCustomDataProvider>\n): object is OmvWithCustomDataProvider {\n    return object.dataProvider !== undefined;\n}\n\n/**\n * Add service specific default values.\n *\n * @param params - The configuration settings of the data source.\n */\nfunction completeDataSourceParameters(\n    params: OmvWithRestClientParams | OmvWithCustomDataProvider\n): TileDataSourceOptions {\n    if (!hasCustomDataProvider(params) && params.url === undefined) {\n        const baseUrl = params.baseUrl ?? hereVectorTileBaseUrl;\n\n        const completedParams = {\n            ...defaultOptions.get(baseUrl),\n            ...params\n        };\n\n        return {\n            ...completedParams,\n            tilingScheme: webMercatorTilingScheme,\n            dataProvider: new OmvRestClient(completedParams)\n        };\n    }\n\n    return {\n        ...params,\n        tilingScheme: webMercatorTilingScheme,\n        dataProvider: getDataProvider(params)\n    };\n}\n\n/**\n * `VectorTileDataSource` is used for the visualization of vector tiles.\n *\n * @example\n * ```typescript\n *    const dataSource = new VectorTileDataSource({\n *        baseUrl: \"https://vector.hereapi.com/v2/vectortiles/base/mc\",\n *        authenticationCode: apikey\n *    });\n *    mapView.addDataSource(dataSource);\n *   ```\n */\nexport class VectorTileDataSource extends TileDataSource {\n    private readonly m_decoderOptions: OmvDecoderOptions;\n\n    constructor(private readonly m_params: OmvWithRestClientParams | OmvWithCustomDataProvider) {\n        super(m_params.tileFactory ?? new TileFactory(Tile), {\n            styleSetName: m_params.styleSetName ?? \"omv\",\n            concurrentDecoderServiceName:\n                m_params.concurrentDecoderServiceName ?? VECTOR_TILE_DECODER_SERVICE_TYPE,\n            minDataLevel: m_params.minDataLevel ?? 1,\n            maxDataLevel: m_params.maxDataLevel ?? 17,\n            storageLevelOffset: m_params.storageLevelOffset ?? -1,\n            ...completeDataSourceParameters(m_params)\n        });\n\n        this.cacheable = true;\n        this.addGroundPlane =\n            m_params.addGroundPlane === undefined || m_params.addGroundPlane === true;\n\n        let roundUpCoordinatesIfNeeded = m_params.roundUpCoordinatesIfNeeded;\n\n        if (\n            roundUpCoordinatesIfNeeded === undefined &&\n            (m_params as Partial<OmvWithRestClientParams>)?.baseUrl === hereVectorTileBaseUrl\n        ) {\n            roundUpCoordinatesIfNeeded = true;\n        }\n\n        this.m_decoderOptions = {\n            showMissingTechniques: this.m_params.showMissingTechniques === true,\n            filterDescription: this.m_params.filterDescr,\n            gatherFeatureAttributes: this.m_params.gatherFeatureAttributes === true,\n            featureModifiers: this.m_params.featureModifierId\n                ? [this.m_params.featureModifierId]\n                : undefined,\n            politicalView: this.m_params.politicalView,\n            skipShortLabels: this.m_params.skipShortLabels,\n            storageLevelOffset: m_params.storageLevelOffset ?? -1,\n            enableElevationOverlay: this.m_params.enableElevationOverlay === true,\n            roundUpCoordinatesIfNeeded\n        };\n\n        this.maxGeometryHeight = getOptionValue(\n            m_params.maxGeometryHeight,\n            EarthConstants.MAX_BUILDING_HEIGHT\n        );\n\n        this.minGeometryHeight = getOptionValue(m_params.minGeometryHeight, 0);\n    }\n\n    /** @override */\n    async connect() {\n        try {\n            await super.connect();\n        } catch (error) {\n            // error is a string if the promise was rejected.\n            if (\n                error.message &&\n                WorkerServiceProtocol.isUnknownServiceError(error) &&\n                !missingOmvDecoderServiceInfoEmitted\n            ) {\n                logger.info(\n                    \"Unable to create decoder service in worker. Use \" +\n                        \" 'OmvTileDecoderService.start();' in decoder script.\"\n                );\n                missingOmvDecoderServiceInfoEmitted = true;\n            }\n            throw typeof error === \"string\" ? new Error(error) : error;\n        }\n        this.configureDecoder(undefined, this.m_decoderOptions);\n    }\n\n    /**\n     * Remove the current data filter.\n     * Will be applied to the decoder, which might be shared with other omv datasources.\n     */\n    removeDataFilter(): void {\n        this.configureDecoder(undefined, {\n            filterDescription: null\n        });\n    }\n\n    /**\n     * Set a new data filter. Can also be done during\n     * the creation of an {@link VectorTileDataSource}.\n     * Will be applied to the decoder, which might be shared with other omv datasources.\n     *\n     * @param filterDescription - Data filter description created with\n     * [[OmvFeatureFilterDescriptionBuilder]].\n     */\n    setDataFilter(filterDescription: OmvFeatureFilterDescription): void {\n        this.m_decoderOptions.filterDescription =\n            filterDescription !== null ? filterDescription : undefined;\n\n        this.configureDecoder(undefined, {\n            filterDescription,\n            featureModifiers: this.m_decoderOptions.featureModifiers,\n            politicalView: this.m_decoderOptions.politicalView\n        });\n    }\n\n    /** @override */\n    shouldPreloadTiles(): boolean {\n        return true;\n    }\n\n    /** @override */\n    setPoliticalView(politicalView?: string): void {\n        // Just in case users mess with letters' casing.\n        politicalView = politicalView?.toLowerCase();\n        if (this.m_decoderOptions.politicalView !== politicalView) {\n            this.m_decoderOptions.politicalView = politicalView;\n            this.configureDecoder(undefined, {\n                filterDescription: this.m_decoderOptions.filterDescription,\n                featureModifiers: this.m_decoderOptions.featureModifiers,\n                politicalView: politicalView !== undefined ? politicalView : \"\"\n            });\n        }\n    }\n\n    /** @override */\n    get storageLevelOffset() {\n        return super.storageLevelOffset;\n    }\n\n    /** @override */\n    set storageLevelOffset(levelOffset: number) {\n        super.storageLevelOffset = levelOffset;\n        this.m_decoderOptions.storageLevelOffset = this.storageLevelOffset;\n        this.configureDecoder(undefined, {\n            storageLevelOffset: this.storageLevelOffset\n        });\n    }\n\n    /** @override */\n    setEnableElevationOverlay(enable: boolean) {\n        if (this.m_decoderOptions.enableElevationOverlay !== enable) {\n            this.m_decoderOptions.enableElevationOverlay = enable;\n            this.configureDecoder(undefined, {\n                enableElevationOverlay: enable\n            });\n        }\n    }\n\n    private configureDecoder(options?: DecoderOptions, customOptions?: OptionsMap) {\n        this.clearCache();\n        this.decoder.configure(options, customOptions);\n        this.mapView.markTilesDirty(this);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * HERE WebTile Data source.\n *\n * @remarks\n *\n * @packageDocumentation\n */\n\nexport * from \"./lib/WebTileDataSource\";\nexport * from \"./lib/HereWebTileDataSource\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    CopyrightInfo,\n    RequestHeaders,\n    TextureLoader,\n    Tile,\n    UrlCopyrightProvider\n} from \"@here/harp-mapview\";\nimport {\n    ApiKeyAuthentication,\n    AppIdAuthentication,\n    getOptionValue,\n    TokenAuthentication\n} from \"@here/harp-utils\";\nimport { Texture } from \"three\";\n\nimport {\n    WebTileDataProvider,\n    WebTileDataSource,\n    WebTileDataSourceOptions\n} from \"./WebTileDataSource\";\n\nconst textureLoader = new TextureLoader();\n\n/**\n * Options for {@link HereWebTileDataSource}.\n */\ninterface HereWebTileDataSourceOptions extends Omit<WebTileDataSourceOptions, \"dataProvider\"> {\n    /**\n     * Base URL.\n     *\n     * @remarks\n     * This parameter specifies static part of the final Web Tile URL:\n     *  * base url without protocol and load-balancing (`{1-4}.`) prefix\n     *  * path,\n     *  * resource (tile type)\n     *  * map version,\n     *  * scheme\n     *\n     * See [Map Tile API]\n     * (https://developer.here.com/documentation/map-tile/topics/request-constructing.html) for\n     * details.\n     *\n     * For example, given final url presented in documentation\n     * (https://developer.here.com/documentation/map-tile/topics/examples-base.html):\n     *\n     *     https://\n     *       2.base.maps.ls.hereapi.com/maptile/2.1/maptile/newest/normal.day/11/525/761/256/png8\n     *       ?apikey={YOUR_API_KEY}\n     *\n     * `tileBaseAddress` should be:\n     *\n     *      base.maps.ls.hereapi.com/maptile/2.1/maptile/newest/normal.day\n     *\n     * Rest of parameters are added by [[WebTileDataSource]].\n     *\n     * @see [Map Tile API]\n     * (https://developer.here.com/documentation/map-tile/topics/introduction.html)\n     * @default [[HereTileProvider.TILE_BASE_NORMAL]]\n     * @see [[HereTileProvider.TILE_BASE_NORMAL]]\n     * @see [[HereTileProvider.TILE_AERIAL_HYBRID]]\n     * @see [[HereTileProvider.TILE_AERIAL_SATELLITE]]\n     * @see [[HereTileProvider.TILE_TRAFFIC_NORMAL]]\n     */\n    tileBaseAddress?: string;\n\n    /**\n     * String which is appended to the tile request url, e.g. to add additional parameters\n     * to the tile requests as described in\n     * @see https://developer.here.com/documentation/map-tile/topics/resource-base-basetile.html\n     */\n    additionalRequestParameters?: string;\n\n    /**\n     * ppi parameter which impacts font/icon sizes, road width and other content\n     * of the map tiles. For valid values and restrictions see\n     * @see https://developer.here.com/documentation/map-tile/topics/resource-base-basetile.html#ppi\n     * By default it is not used.\n     */\n    ppi?: WebTileDataSource.ppiValue;\n\n    /**\n     * Whether to provide copyright info.\n     *\n     * @default `true`\n     */\n    gatherCopyrightInfo?: boolean;\n}\n\n/**\n * An interface for the type of options that can be passed to the [[WebTileDataSource]].\n */\nexport type HereWebTileDataSourceParameters = HereWebTileDataSourceOptions &\n    (ApiKeyAuthentication | AppIdAuthentication | TokenAuthentication);\n\n/**\n * Mapping from ISO-639-1 language codes to codes used by HERE Map Tile API (MARC)\n *\n * @see https://developer.here.com/documentation/map-tile/topics/resource-base-maptile.html\n * @see [MARC Code List for Languages](https://www.loc.gov/marc/languages/)\n */\nconst WEBTILE_LANGUAGE_DICTIONARY: { [s: string]: string } = {\n    eu: \"baq\",\n    ca: \"cat\",\n    zh: \"chi\",\n    cs: \"cze\",\n    da: \"dan\",\n    nl: \"dut\",\n    en: \"eng\",\n    fi: \"fin\",\n    fr: \"fre\",\n    de: \"ger\",\n    ga: \"gle\",\n    el: \"gre\",\n    he: \"heb\",\n    hi: \"hin\",\n    id: \"ind\",\n    it: \"ita\",\n    no: \"nor\",\n    fa: \"per\",\n    pl: \"pol\",\n    pt: \"por\",\n    ru: \"rus\",\n    si: \"sin\",\n    es: \"spa\",\n    sv: \"swe\",\n    th: \"tha\",\n    tr: \"tur\",\n    uk: \"ukr\",\n    ur: \"urd\",\n    vi: \"vie\",\n    cy: \"wel\"\n};\n\n/**\n * Map Tile request params.\n *\n * @see https://developer.here.com/documentation/map-tile/topics/request-constructing.html\n */\ninterface MapTileParams {\n    /**\n     * Baseurl without load-balancing prefix and scheme.\n     */\n    baseUrl: string;\n\n    /**\n     * Path, should be `/maptile/2.1`\n     */\n    path: string;\n\n    /**\n     * Tile type (`basetile`, `maptile` etc).\n     *\n     * @see https://developer.here.com/documentation/map-tile/topics/request-constructing.html\n     */\n    tileType: string;\n\n    /**\n     * Map version - `newest` or `hash` value\n     *\n     * @default `newest`\n     */\n    mapVersion?: string;\n\n    /**\n     * Scheme\n     *\n     * @default `normal.day`\n     */\n    scheme?: string;\n}\n\nexport class HereTileProvider implements WebTileDataProvider {\n    /**\n     * Base address for Base Map rendered using `normal.day` scheme.\n     * @see https://developer.here.com/documentation/map-tile/topics/example-normal-day-view.html\n     */\n    static readonly TILE_BASE_NORMAL =\n        \"base.maps.ls.hereapi.com/maptile/2.1/maptile/newest/normal.day\";\n\n    /**\n     * Base address for Aerial Map rendered using `hybrid.day` scheme.\n     * @see https://developer.here.com/documentation/map-tile/topics/example-hybrid-map.html\n     */\n    static readonly TILE_AERIAL_HYBRID =\n        \"aerial.maps.ls.hereapi.com/maptile/2.1/maptile/newest/hybrid.day\";\n\n    /**\n     * Base address for Aerial Map rendered using `satellite.day` scheme.\n     * @see https://developer.here.com/documentation/map-tile/topics/example-satellite-map.html\n     */\n    static readonly TILE_AERIAL_SATELLITE =\n        \"aerial.maps.ls.hereapi.com/maptile/2.1/maptile/newest/satellite.day\";\n\n    /**\n     * Base address for Traffic Map rendered using `normal.day` scheme.\n     * @see https://developer.here.com/documentation/map-tile/topics/example-traffic.html\n     */\n    static readonly TILE_TRAFFIC_NORMAL =\n        \"traffic.maps.ls.hereapi.com/maptile/2.1/traffictile/newest/normal.day\";\n\n    /** Copyright provider instance. */\n    private readonly m_copyrightProvider: UrlCopyrightProvider;\n    private readonly m_ppi: WebTileDataSource.ppiValue;\n    private readonly m_resolution: WebTileDataSource.resolutionValue;\n    private readonly m_tileBaseAddress: string;\n    private m_languages?: string[];\n\n    /** Predefined fixed HERE copyright info. */\n    private readonly HERE_COPYRIGHT_INFO: CopyrightInfo = {\n        id: \"here.com\",\n        year: new Date().getFullYear(),\n        label: \"HERE\",\n        link: \"https://legal.here.com/terms\"\n    };\n\n    constructor(private readonly m_options: HereWebTileDataSourceParameters) {\n        this.m_ppi = getOptionValue(m_options.ppi, WebTileDataSource.ppiValue.ppi72);\n        this.m_resolution = getOptionValue(\n            m_options.resolution,\n            WebTileDataSource.resolutionValue.resolution512\n        );\n        this.m_tileBaseAddress = m_options.tileBaseAddress ?? HereTileProvider.TILE_BASE_NORMAL;\n        if (\n            this.m_tileBaseAddress === HereTileProvider.TILE_AERIAL_SATELLITE &&\n            this.m_ppi !== WebTileDataSource.ppiValue.ppi72\n        ) {\n            throw new Error(\"Requested combination of scheme satellite.day and ppi is not valid\");\n        }\n\n        const mapTileParams = this.parseBaseUrl(this.m_tileBaseAddress);\n        const baseHostName = mapTileParams.baseUrl;\n        const mapId = getOptionValue(mapTileParams.mapVersion, \"newest\");\n        const scheme = mapTileParams.scheme ?? \"normal.day\";\n        const baseScheme = scheme.split(\".\")[0] || \"normal\";\n\n        const url =\n            `https://1.${baseHostName}/maptile/2.1/copyright/${mapId}` +\n            `${this.getCopyrightRequestParams()}`;\n        this.m_copyrightProvider = new UrlCopyrightProvider(url, baseScheme);\n    }\n\n    /** @override */\n    async getTexture(tile: Tile, abortSignal?: AbortSignal): Promise<[Texture, CopyrightInfo[]]> {\n        const column = tile.tileKey.column;\n        const row = tile.tileKey.row;\n        const level = tile.tileKey.level;\n        const quadKey = tile.tileKey.toQuadKey();\n        const server = parseInt(quadKey[quadKey.length - 1], 10) + 1;\n\n        const url =\n            `https://${server}.${this.m_tileBaseAddress}/` +\n            `${level}/${column}/${row}/${this.m_resolution}/png8` +\n            `${this.getImageRequestParams()}`;\n\n        return await this.getRequestHeaders().then(headers => {\n            return Promise.all([\n                textureLoader.load(url, headers, abortSignal),\n                this.getTileCopyright(tile, headers, abortSignal)\n            ]);\n        });\n    }\n\n    mapIsoLanguageToWebTile(languages: string[]): void {\n        this.m_languages = [];\n        for (const language of languages) {\n            if (WEBTILE_LANGUAGE_DICTIONARY[language] !== undefined) {\n                this.m_languages.push(WEBTILE_LANGUAGE_DICTIONARY[language]);\n            }\n        }\n    }\n\n    private async getRequestHeaders(): Promise<RequestHeaders | undefined> {\n        const { authenticationCode } = this.m_options as TokenAuthentication;\n\n        let token: string | undefined;\n        if (typeof authenticationCode === \"string\") {\n            token = authenticationCode;\n        } else if (authenticationCode !== undefined) {\n            token = await authenticationCode();\n        }\n\n        if (token !== undefined) {\n            return {\n                Authorization: `Bearer ${token}`\n            };\n        }\n\n        return undefined;\n    }\n\n    private async getTileCopyright(\n        tile: Tile,\n        requestHeaders: RequestHeaders | undefined,\n        abortSignal?: AbortSignal\n    ): Promise<CopyrightInfo[]> {\n        if (this.m_options.gatherCopyrightInfo === false) {\n            return [this.HERE_COPYRIGHT_INFO];\n        }\n\n        this.m_copyrightProvider.setRequestHeaders(requestHeaders);\n        return await this.m_copyrightProvider.getCopyrights(tile.geoBox, tile.tileKey.level);\n    }\n\n    private parseBaseUrl(url: string): MapTileParams {\n        const parsed = new URL(url.startsWith(\"https:\") ? url : `https://${url}`);\n        const fullPath = parsed.pathname;\n        const maptilePathRegexp = new RegExp(\"^(/maptile/2.1/)([^/]+)/([^/]+)/([^/]+)\");\n        const match = fullPath.match(maptilePathRegexp);\n        if (!match) {\n            throw new Error(`HereWebTileDataSource: invalid baseUrl: ${url}`);\n        }\n        return {\n            baseUrl: parsed.host,\n            path: match[1],\n            tileType: match[2],\n            mapVersion: match[3],\n            scheme: match[4]\n        };\n    }\n\n    private getAuthParams(): string[] {\n        const { apikey } = this.m_options as ApiKeyAuthentication;\n        const { appId, appCode } = this.m_options as AppIdAuthentication;\n        const { authenticationCode } = this.m_options as TokenAuthentication;\n\n        const useAuthenticationCode = authenticationCode !== undefined;\n        const useApiKey = apikey !== undefined;\n        const useAppId = appId !== undefined && appCode !== undefined;\n\n        if (useAuthenticationCode) {\n            return [];\n        } else if (useApiKey) {\n            return [`apikey=${apikey}`];\n        } else if (useAppId) {\n            return [`app_id=${appId}`, `app_code=${appCode}`];\n        }\n\n        throw new Error(\"Neither apiKey, appId/appCode nor authenticationCode are defined.\");\n    }\n\n    private getCopyrightRequestParams(): string {\n        const requestParams = [\"output=json\", ...this.getAuthParams()];\n\n        return `?${requestParams.join(\"&\")}`;\n    }\n\n    private getImageRequestParams(): string {\n        const requestParams = this.getAuthParams();\n\n        if (this.m_options.additionalRequestParameters !== undefined) {\n            requestParams.push(this.m_options.additionalRequestParameters);\n        }\n        if (this.m_ppi !== WebTileDataSource.ppiValue.ppi72) {\n            // because ppi=72 is default, we do not include it in the request\n            requestParams.push(`ppi=${this.m_ppi}`);\n        }\n        if (this.m_languages !== undefined && this.m_languages[0] !== undefined) {\n            requestParams.push(`lg=${this.m_languages[0]}`);\n        }\n\n        if (this.m_languages !== undefined && this.m_languages[1] !== undefined) {\n            requestParams.push(`lg2=${this.m_languages[1]}`);\n        }\n\n        if (requestParams.length > 0) {\n            return `?${requestParams.join(\"&\")}`;\n        }\n\n        return \"\";\n    }\n}\n\n/**\n * Instances of `HereWebTileDataSource` can be used to add Web Tile to [[MapView]].\n *\n * Example:\n *\n * ```typescript\n * const hereWebTileDataSource = new HereWebTileDataSource({\n *     authenticationCode: <authenticationCode>\n * });\n * ```\n * @see [[DataSource]], [[OmvDataSource]].\n */\nexport class HereWebTileDataSource extends WebTileDataSource {\n    /**\n     * Constructs a new `HereWebTileDataSource`.\n     *\n     * @param m_options - Represents the [[HereWebTileDataSourceParameters]].\n     */\n    constructor(m_options: HereWebTileDataSourceParameters) {\n        super({\n            ...m_options,\n            minDataLevel: 1,\n            maxDataLevel: 20,\n            resolution: m_options.resolution,\n            dataProvider: new HereTileProvider(m_options),\n            storageLevelOffset: m_options.storageLevelOffset ?? -1\n        });\n        this.cacheable = true;\n        if (this.resolution === WebTileDataSource.resolutionValue.resolution512) {\n            this.maxDataLevel = 19; // 512x512 tiles do not have z19\n        }\n    }\n\n    /** @override */\n    setLanguages(languages?: string[]): void {\n        if (languages !== undefined) {\n            (this.dataProvider as HereTileProvider).mapIsoLanguageToWebTile(languages);\n            this.mapView.markTilesDirty(this);\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { TileKey, TilingScheme, webMercatorTilingScheme } from \"@here/harp-geoutils\";\nimport { CopyrightInfo, DataSource, DataSourceOptions, Tile } from \"@here/harp-mapview\";\nimport { getOptionValue } from \"@here/harp-utils\";\nimport THREE = require(\"three\");\nimport { WebTileLoader } from \"./WebTileLoader\";\n\n/**\n * An interface for the rendering options that can be passed to the [[WebTileDataSource]].\n */\nexport interface WebTileRenderingOptions {\n    /**\n     * Opacity of the rendered images.\n     * @defaultValue 1.0\n     */\n    opacity?: number;\n\n    /**\n     * Force Material to use transparency from texture if available\n     * @defaultValue false\n     */\n    transparent?: boolean;\n\n    /**\n     * RenderOrder for order in which to render WebTileDataSouurces\n     * @defaultValue 0\n     * @deprecated Use instead `dataSourceOrder` on {@link DataSource}\n     */\n    renderOrder?: number;\n}\n\nexport interface WebTileDataProvider {\n    /**\n     * The method to create the Texture that will be applied to the Tile\n     *\n     * If the Promise is resolved with an undefined Texture, the Tile is considered loaded\n     * and having no data.\n     * If the Promise is rejected, it is considered a temporary failure and the tile will be\n     * disposed and recreated if visible again.\n     * @param tile - Tile to which the texture will be applied.\n     * @param abortSignal - Optional AbortSignal to cancel the request.\n     */\n    getTexture: (\n        tile: Tile,\n        abortSignal?: AbortSignal\n    ) => Promise<[THREE.Texture | undefined, CopyrightInfo[]] | undefined>;\n}\n\n/**\n * Options for [[WebTileDataSource]].\n */\nexport interface WebTileDataSourceOptions\n    extends Omit<DataSourceOptions, \"enablePicking\" | \"styleSetName\"> {\n    /**\n     * A DataProvider that will provide the tiles.\n     */\n    dataProvider: WebTileDataProvider;\n\n    /**\n     * The resolution of Web Tile images, defaults to 512.\n     */\n    resolution?: WebTileDataSource.resolutionValue;\n\n    /**\n     * Options affecting the rendering of the web tiles.\n     */\n    renderingOptions?: WebTileRenderingOptions;\n}\n\n/**\n * Instances of `WebTileDataSource` can be used to add Web Tile to [[MapView]].\n *\n * Example:\n *\n * ```typescript\n * const webTileDataSource = new WebTileDataSource({\n *     dataProvider: {\n *         getTexture: <your custom implementation>\n *     }\n * });\n * ```\n * @see {@links DataSource}\n */\nexport class WebTileDataSource extends DataSource {\n    protected readonly m_resolution: WebTileDataSource.resolutionValue;\n    protected dataProvider: WebTileDataProvider;\n\n    private m_opacity: number = 1;\n    private readonly m_renderOrder: number = 0;\n    private m_transparent: boolean = false;\n\n    /**\n     * Constructs a new `WebTileDataSource`.\n     *\n     * @param m_options - Represents the [[WebTileDataSourceParameters]].\n     */\n    constructor(protected readonly m_options: WebTileDataSourceOptions) {\n        super(m_options);\n\n        this.dataProvider = this.m_options.dataProvider;\n        this.cacheable = true;\n        this.m_opacity = this.m_options.renderingOptions?.opacity ?? 1;\n        this.m_transparent =\n            this.m_options.renderingOptions?.transparent === true || this.m_opacity < 1;\n        this.m_renderOrder = this.m_options.renderingOptions?.renderOrder ?? 0;\n        this.m_resolution = getOptionValue(\n            m_options.resolution,\n            WebTileDataSource.resolutionValue.resolution512\n        );\n    }\n\n    /**\n     * Sets the opacity for the WebTileDataSource, will only affect not yet loaded or not cached\n     * tiles.\n     *\n     * Use WebTileDataSource:clearCache and MapView:markTilesDirty to reload all tiles with the\n     * new opacity setting.\n     */\n    set opacity(value: number) {\n        this.m_opacity = value;\n        if (this.m_opacity < 1) {\n            this.m_transparent = true;\n        } else if (this.m_options.renderingOptions?.transparent !== true) {\n            this.m_transparent = false;\n        }\n    }\n\n    /**\n     * Gets the opacity of the WebTileDataSource.\n     */\n    get opacity(): number {\n        return this.m_opacity;\n    }\n\n    get resolution(): WebTileDataSource.resolutionValue {\n        return this.m_resolution as WebTileDataSource.resolutionValue;\n    }\n\n    /**\n     * Gets the renderOrder of the WebTileDataSource.\n     *\n     * @deprecated Use instead the `dataSourceOrder` on {@link DataSource}\n     */\n    get renderOrder(): number {\n        return this.m_renderOrder;\n    }\n\n    /**\n     * Gets whether tiles of this WebTileDataSource are transparent.\n     */\n    get transparent(): boolean {\n        return this.m_transparent;\n    }\n\n    /** @override */\n    shouldPreloadTiles(): boolean {\n        return true;\n    }\n\n    /** @override */\n    getTilingScheme(): TilingScheme {\n        return webMercatorTilingScheme;\n    }\n\n    /** @override */\n    getTile(tileKey: TileKey) {\n        const tile: Tile = new Tile(this, tileKey);\n        tile.tileLoader = new WebTileLoader(this, tile, this.dataProvider);\n        return tile;\n    }\n\n    /** @override */\n    isFullyCovering(): boolean {\n        return true;\n    }\n}\n/**\n * Definitions of variable values to be used with `WebTileDataSource`\n */\nexport namespace WebTileDataSource {\n    export enum ppiValue {\n        ppi72 = 72,\n        ppi250 = 250,\n        ppi320 = 320,\n        ppi500 = 500\n    }\n    export enum resolutionValue {\n        resolution256 = 256,\n        resolution512 = 512\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { BaseTileLoader, Tile, TileLoaderState } from \"@here/harp-mapview\";\nimport { addGroundPlane } from \"@here/harp-mapview/lib/geometry/AddGroundPlane\";\nimport { enableBlending } from \"@here/harp-materials\";\nimport * as THREE from \"three\";\n\nimport { WebTileDataProvider, WebTileDataSource } from \"./WebTileDataSource\";\n\n/**\n * TileLoader used by `WebTileDataSource`.\n */\nexport class WebTileLoader extends BaseTileLoader {\n    /**\n     * Set up loading of a single [[Tile]].\n     *\n     * @param dataSource - The [[DataSource]] the tile belongs to.\n     * @param tileKey - The quadtree address of a [[Tile]].\n     * @param dataProvider - The [[DataProvider]] that retrieves the binary tile data.\n     */\n    constructor(\n        protected dataSource: WebTileDataSource,\n        private readonly tile: Tile,\n        private readonly dataProvider: WebTileDataProvider\n    ) {\n        super(dataSource, tile.tileKey);\n    }\n\n    /**\n     * @override\n     */\n    protected loadImpl(\n        abortSignal: AbortSignal,\n        onDone: (doneState: TileLoaderState) => void,\n        onError: (error: Error) => void\n    ): void {\n        this.dataProvider\n            .getTexture(this.tile, abortSignal)\n            .then(value => {\n                if (value === undefined || value[0] === undefined) {\n                    this.tile.forceHasGeometry(true);\n                    onDone(TileLoaderState.Ready);\n                    return;\n                }\n\n                const [texture, copyrightInfo] = value;\n                if (copyrightInfo !== undefined) {\n                    this.tile.copyrightInfo = copyrightInfo;\n                }\n\n                texture.minFilter = THREE.LinearFilter;\n                texture.magFilter = THREE.LinearFilter;\n                texture.generateMipmaps = false;\n                // This is required because the WebTileDataSource uses the default setting of\n                // useGeometryLoader on the DataSource, so it has to clear the tile's objects\n                // manually.\n                this.tile.clear();\n                this.tile.addOwnedTexture(texture);\n                const planeMesh = addGroundPlane(\n                    this.tile,\n                    this.dataSource.renderOrder,\n                    0xffffff,\n                    this.dataSource.opacity,\n                    true\n                );\n                const planeMaterial = planeMesh.material as THREE.MeshBasicMaterial;\n                planeMaterial.map = texture;\n                if (this.dataSource.transparent) {\n                    enableBlending(planeMaterial);\n                }\n                planeMaterial.depthTest = false;\n\n                this.tile.invalidateResourceInfo();\n                this.dataSource.requestUpdate();\n                onDone(TileLoaderState.Ready);\n            }, onError)\n            .catch(onError);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ConcurrentDecoderFacade, ConcurrentTilerFacade } from \"@here/harp-mapview\";\nimport { WorkerLoader } from \"@here/harp-mapview/lib/workers/WorkerLoader\";\nimport { baseUrl, UriResolver } from \"@here/harp-utils\";\n\n/**\n * Default decoder url for bundled map component.\n */\nexport const DEFAULT_DECODER_SCRIPT_URL = \"harp.js-bundle://harp-decoders.js\";\n\n/**\n * Basename of map bundle script - used by [[getBundleScriptUrl]] as fallback, when\n * `document.currentScript` is not present.\n *\n * @hidden\n */\nexport const BUNDLE_SCRIPT_BASENAME = \"harp\";\n\n/**\n * Guess `harp(.min).js` script URL.\n *\n * Required to find default URLs `harp-decoders.js` which are hosted together, not necessarily with\n * base URL of current page.\n *\n * @see https://stackoverflow.com/questions/2976651\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/currentScript\n * @hidden\n */\nexport function getBundleScriptUrl(): string | undefined | null {\n    if (bundleScriptUrl !== undefined) {\n        return bundleScriptUrl;\n    }\n\n    const currentScript = document.currentScript as HTMLScriptElement | null;\n    const baseScriptUrl =\n        currentScript !== null &&\n        typeof currentScript.src === \"string\" &&\n        (currentScript.src.endsWith(BUNDLE_SCRIPT_BASENAME + \".js\") ||\n            currentScript.src.endsWith(BUNDLE_SCRIPT_BASENAME + \".min.js\"))\n            ? currentScript.src\n            : getScriptUrl(BUNDLE_SCRIPT_BASENAME);\n\n    if (baseScriptUrl) {\n        bundleScriptUrl = baseScriptUrl;\n        return bundleScriptUrl;\n    } else {\n        bundleScriptUrl = null;\n        return undefined;\n    }\n}\n\n/**\n * Memoizes result of [[getBundleScriptUrl]].\n * @hidden\n */\nlet bundleScriptUrl: string | undefined | null;\n\n/**\n * Get script URL assumet it's already loaded in DOM.\n *\n * Required to find default URLs `harp.(min.)js` and `three().min).js` which are required to\n * properly start decoder bundle.\n *\n * @see https://stackoverflow.com/questions/2976651\n * @hidden\n */\nexport function getScriptUrl(name: string): string | undefined | null {\n    const scriptElement =\n        document.querySelector(`script[src*='/${name}.min.js']`) ??\n        document.querySelector(`script[src='${name}.min.js']`) ??\n        document.querySelector(`script[src*='/${name}.js']`) ??\n        document.querySelector(`script[src='${name}.js']`);\n\n    if (scriptElement) {\n        return (scriptElement as HTMLScriptElement).src;\n    } else {\n        return undefined;\n    }\n}\n\nconst HARP_GL_BUNDLED_ASSETS_PREFIX = \"harp.js-bundle://\";\n\n/**\n * Resolve URLs with support for `harp.gl` bundle specific URLs.\n *\n * URLs with prefix `harp.gl:` are resolved relatively to `harp.js` bundle's base URL.\n *\n * @hidden\n */\nexport class BundledUriResolver implements UriResolver {\n    resolveUri(uri: string) {\n        if (uri.startsWith(HARP_GL_BUNDLED_ASSETS_PREFIX)) {\n            const bundleSriptUrl = getBundleScriptUrl();\n            if (bundleSriptUrl === null || bundleSriptUrl === undefined) {\n                throw new Error(\n                    `harp.js: cannot resolve ${uri} because 'harp.gl' base url is not set.`\n                );\n            } else {\n                uri = uri.substring(HARP_GL_BUNDLED_ASSETS_PREFIX.length);\n                if (uri.startsWith(\"/\")) {\n                    uri = uri.substring(1);\n                }\n                return baseUrl(bundleSriptUrl) + uri;\n            }\n        }\n        return uri;\n    }\n}\nconst bundledUriResolver = new BundledUriResolver();\n\nconst getActualDecoderScriptUrl = () => {\n    const baseScriptUrl = getBundleScriptUrl();\n    if (!baseScriptUrl) {\n        // eslint-disable-next-line no-console\n        console.error(\n            `harp.js: Unable to determine default location of 'harp-decoders(min).js'. ` +\n                `See https://github.com/heremaps/harp.gl/@here/harp.gl.`\n        );\n    }\n    if (!WorkerLoader.dependencyUrlMapping.three) {\n        // eslint-disable-next-line no-console\n        console.error(\n            `harp.js: Unable to determine location of 'three(.min).js'. ` +\n                \"`See https://github.com/heremaps/harp.gl/@here/harp.gl.`\"\n        );\n    }\n    const isMinified = baseScriptUrl && baseScriptUrl.endsWith(\".min.js\");\n\n    const decoderScriptName = !isMinified\n        ? DEFAULT_DECODER_SCRIPT_URL\n        : DEFAULT_DECODER_SCRIPT_URL.replace(/\\.js$/, \".min.js\");\n    return bundledUriResolver.resolveUri(decoderScriptName);\n};\n\n/**\n * Guess decoder script URL.\n *\n * Assumes that decoder script - `harp-decoders.js` is in same place as main bundle and calculates\n * it's URL.\n *\n * Minified version of `harp.js` bundle loads minified version of decoder.\n * Hooks in [[ConcurrentDecoderFacade]] to use this URL as default `defaultScriptUrl`.\n *\n * @hidden\n */\nfunction installDefaultDecoderUrlHook() {\n    ConcurrentDecoderFacade.defaultScriptUrl = \"\";\n    ConcurrentTilerFacade.defaultScriptUrl = \"\";\n\n    const threeUrl = getScriptUrl(\"three\")!;\n\n    WorkerLoader.dependencyUrlMapping.three = threeUrl;\n\n    const oldDecoderGetWorkerSet = ConcurrentDecoderFacade.getWorkerSet;\n    ConcurrentDecoderFacade.getWorkerSet = (scriptUrl?: string) => {\n        if (scriptUrl === undefined && ConcurrentDecoderFacade.defaultScriptUrl === \"\") {\n            const newScriptUrl = getActualDecoderScriptUrl();\n\n            ConcurrentDecoderFacade.defaultScriptUrl = newScriptUrl;\n        }\n        return oldDecoderGetWorkerSet.apply(ConcurrentDecoderFacade, [scriptUrl]);\n    };\n\n    const oldTilerGetWorkerSet = ConcurrentTilerFacade.getWorkerSet;\n    ConcurrentTilerFacade.getWorkerSet = (scriptUrl?: string) => {\n        if (scriptUrl === undefined && ConcurrentTilerFacade.defaultScriptUrl === \"\") {\n            const newScriptUrl = getActualDecoderScriptUrl();\n\n            ConcurrentTilerFacade.defaultScriptUrl = newScriptUrl;\n        }\n        return oldTilerGetWorkerSet.apply(ConcurrentTilerFacade, [scriptUrl]);\n    };\n}\n\n/**\n * Initialize `harp.gl` bundle.\n *\n * Install specific default decoder urls into [[ConcurrentDecoderFacade]].\n * @hidden\n */\nexport function mapBundleMain() {\n    getBundleScriptUrl();\n    installDefaultDecoderUrlHook();\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { mapBundleMain } from \"./BundleMain\";\n\nif (!(window as any).THREE) {\n    // eslint-disable-next-line no-console\n    console.warn(\n        \"harp.js: It looks like 'three.js' is not loaded. This script requires 'THREE' object to \" +\n            \"be defined. See https://github.com/heremaps/harp.gl/@here/harp.gl.\"\n    );\n}\n\nexport * from \"@here/harp-mapview\";\nexport * from \"@here/harp-vectortile-datasource\";\nexport * from \"@here/harp-omv-datasource\";\nexport * from \"@here/harp-debug-datasource\";\nexport * from \"@here/harp-geojson-datasource\";\nexport * from \"@here/harp-features-datasource\";\nexport * from \"@here/harp-webtile-datasource\";\nexport * from \"@here/harp-map-controls/lib/MapControls\";\nexport * from \"@here/harp-map-controls/lib/MapControlsUI\";\nexport * from \"@here/harp-datasource-protocol\";\nexport * from \"@here/harp-geoutils\";\nexport * from \"@here/harp-mapview-decoder\";\n\nmapBundleMain();\n","module.exports = THREE;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./lib/index.ts\");\n"],"sourceRoot":""}