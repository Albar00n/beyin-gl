{"version":3,"sources":["webpack://@here/harp.gl/../harp-geoutils/index.js","webpack://@here/harp.gl/../harp-utils/index.js","webpack://@here/harp.gl/../harp-vectortile-datasource/lib/adapters/omv/proto/vector_tile.js","webpack://@here/harp.gl/../node_modules/@protobufjs/aspromise/index.js","webpack://@here/harp.gl/../node_modules/@protobufjs/base64/index.js","webpack://@here/harp.gl/../node_modules/@protobufjs/eventemitter/index.js","webpack://@here/harp.gl/../node_modules/@protobufjs/float/index.js","webpack://@here/harp.gl/../node_modules/@protobufjs/inquire/index.js","webpack://@here/harp.gl/../node_modules/@protobufjs/pool/index.js","webpack://@here/harp.gl/../node_modules/@protobufjs/utf8/index.js","webpack://@here/harp.gl/../node_modules/csscolorparser/csscolorparser.js","webpack://@here/harp.gl/../node_modules/earcut/src/earcut.js","webpack://@here/harp.gl/../node_modules/geojson-vt/src/simplify.js","webpack://@here/harp.gl/../node_modules/geojson-vt/src/feature.js","webpack://@here/harp.gl/../node_modules/geojson-vt/src/convert.js","webpack://@here/harp.gl/../node_modules/geojson-vt/src/clip.js","webpack://@here/harp.gl/../node_modules/geojson-vt/src/wrap.js","webpack://@here/harp.gl/../node_modules/geojson-vt/src/transform.js","webpack://@here/harp.gl/../node_modules/geojson-vt/src/tile.js","webpack://@here/harp.gl/../node_modules/geojson-vt/src/index.js","webpack://@here/harp.gl/../node_modules/long/src/long.js","webpack://@here/harp.gl/../node_modules/protobufjs/minimal.js","webpack://@here/harp.gl/../node_modules/protobufjs/src/index-minimal.js","webpack://@here/harp.gl/../node_modules/protobufjs/src/reader.js","webpack://@here/harp.gl/../node_modules/protobufjs/src/reader_buffer.js","webpack://@here/harp.gl/../node_modules/protobufjs/src/roots.js","webpack://@here/harp.gl/../node_modules/protobufjs/src/rpc.js","webpack://@here/harp.gl/../node_modules/protobufjs/src/rpc/service.js","webpack://@here/harp.gl/../node_modules/protobufjs/src/util/longbits.js","webpack://@here/harp.gl/../node_modules/protobufjs/src/util/minimal.js","webpack://@here/harp.gl/../node_modules/protobufjs/src/writer.js","webpack://@here/harp.gl/../node_modules/protobufjs/src/writer_buffer.js","webpack://@here/harp.gl/../harp-datasource-protocol/index-decoder.ts","webpack://@here/harp.gl/../harp-datasource-protocol/index.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/ColorUtils.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/DecodedTile.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/Env.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/Expr.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/ExprEvaluator.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/ExprInstantiator.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/ExprParser.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/ExprPool.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/GeoJsonDataType.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/InterpolatedPropertyDefs.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/Outliner.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/Pixels.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/PropertyValue.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/RGBA.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/StringEncodedNumeral.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/StyleSetEvaluator.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/TechniqueAttr.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/TechniqueDescriptors.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/TechniqueParams.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/Techniques.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/Theme.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/ThemeVisitor.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/ThreeBufferUtils.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/WorkerDecoderProtocol.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/WorkerServiceProtocol.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/WorkerTilerProtocol.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/operators/ArrayOperators.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/operators/CastOperators.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/operators/ColorOperators.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/operators/ComparisonOperators.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/operators/FeatureOperators.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/operators/FlowOperators.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/operators/MapOperators.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/operators/MathOperators.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/operators/MiscOperators.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/operators/ObjectOperators.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/operators/StringOperators.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/operators/TypeOperators.ts","webpack://@here/harp.gl/../harp-datasource-protocol/lib/operators/VectorOperators.ts","webpack://@here/harp.gl/../harp-geometry/lib/ClipLineString.ts","webpack://@here/harp.gl/../harp-geometry/lib/ClipPolygon.ts","webpack://@here/harp.gl/../harp-geometry/lib/EdgeLengthGeometrySubdivisionModifier.ts","webpack://@here/harp.gl/../harp-geometry/lib/SphericalGeometrySubdivisionModifier.ts","webpack://@here/harp.gl/../harp-geometry/lib/SubdivisionModifier.ts","webpack://@here/harp.gl/../harp-geoutils/lib/coordinates/GeoBox.ts","webpack://@here/harp.gl/../harp-geoutils/lib/coordinates/GeoBoxExtentLike.ts","webpack://@here/harp.gl/../harp-geoutils/lib/coordinates/GeoCoordLike.ts","webpack://@here/harp.gl/../harp-geoutils/lib/coordinates/GeoCoordinates.ts","webpack://@here/harp.gl/../harp-geoutils/lib/coordinates/GeoCoordinatesLike.ts","webpack://@here/harp.gl/../harp-geoutils/lib/coordinates/GeoPointLike.ts","webpack://@here/harp.gl/../harp-geoutils/lib/coordinates/GeoPolygon.ts","webpack://@here/harp.gl/../harp-geoutils/lib/coordinates/GeoPolygonLike.ts","webpack://@here/harp.gl/../harp-geoutils/lib/coordinates/LatLngLike.ts","webpack://@here/harp.gl/../harp-geoutils/lib/math/Box3Like.ts","webpack://@here/harp.gl/../harp-geoutils/lib/math/MathUtils.ts","webpack://@here/harp.gl/../harp-geoutils/lib/math/OrientedBox3.ts","webpack://@here/harp.gl/../harp-geoutils/lib/math/OrientedBox3Like.ts","webpack://@here/harp.gl/../harp-geoutils/lib/math/TransformLike.ts","webpack://@here/harp.gl/../harp-geoutils/lib/math/Vector2Like.ts","webpack://@here/harp.gl/../harp-geoutils/lib/math/Vector3Like.ts","webpack://@here/harp.gl/../harp-geoutils/lib/projection/EarthConstants.ts","webpack://@here/harp.gl/../harp-geoutils/lib/projection/EquirectangularProjection.ts","webpack://@here/harp.gl/../harp-geoutils/lib/projection/IdentityProjection.ts","webpack://@here/harp.gl/../harp-geoutils/lib/projection/MercatorProjection.ts","webpack://@here/harp.gl/../harp-geoutils/lib/projection/Projection.ts","webpack://@here/harp.gl/../harp-geoutils/lib/projection/SphereProjection.ts","webpack://@here/harp.gl/../harp-geoutils/lib/projection/TransverseMercatorProjection.ts","webpack://@here/harp.gl/../harp-geoutils/lib/tiling/FlatTileBoundingBoxGenerator.ts","webpack://@here/harp.gl/../harp-geoutils/lib/tiling/HalfQuadTreeSubdivisionScheme.ts","webpack://@here/harp.gl/../harp-geoutils/lib/tiling/HereTilingScheme.ts","webpack://@here/harp.gl/../harp-geoutils/lib/tiling/MercatorTilingScheme.ts","webpack://@here/harp.gl/../harp-geoutils/lib/tiling/PolarTilingScheme.ts","webpack://@here/harp.gl/../harp-geoutils/lib/tiling/QuadTree.ts","webpack://@here/harp.gl/../harp-geoutils/lib/tiling/QuadTreeSubdivisionScheme.ts","webpack://@here/harp.gl/../harp-geoutils/lib/tiling/SubTiles.ts","webpack://@here/harp.gl/../harp-geoutils/lib/tiling/TileKey.ts","webpack://@here/harp.gl/../harp-geoutils/lib/tiling/TileKeyUtils.ts","webpack://@here/harp.gl/../harp-geoutils/lib/tiling/TileTreeTraverse.ts","webpack://@here/harp.gl/../harp-geoutils/lib/tiling/TilingScheme.ts","webpack://@here/harp.gl/../harp-geoutils/lib/tiling/WebMercatorTilingScheme.ts","webpack://@here/harp.gl/../harp-lines/lib/Lines.ts","webpack://@here/harp.gl/../harp-lines/lib/TriangulateLines.ts","webpack://@here/harp.gl/../harp-mapview-decoder/index-worker.ts","webpack://@here/harp.gl/../harp-mapview-decoder/lib/GeoJsonTiler.ts","webpack://@here/harp.gl/../harp-mapview-decoder/lib/ThemedTileDecoder.ts","webpack://@here/harp.gl/../harp-mapview-decoder/lib/TileDecoderService.ts","webpack://@here/harp.gl/../harp-mapview-decoder/lib/TilerService.ts","webpack://@here/harp.gl/../harp-mapview-decoder/lib/WorkerService.ts","webpack://@here/harp.gl/../harp-mapview-decoder/lib/WorkerServiceManager.ts","webpack://@here/harp.gl/../harp-mapview/lib/workers/WorkerBootstrapDefs.ts","webpack://@here/harp.gl/../harp-materials/lib/MapMeshMaterialsDefs.ts","webpack://@here/harp.gl/../harp-utils/index-common.ts","webpack://@here/harp.gl/../harp-utils/lib/ContextLogger.ts","webpack://@here/harp.gl/../harp-utils/lib/DOMUtils.ts","webpack://@here/harp.gl/../harp-utils/lib/Functions.ts","webpack://@here/harp.gl/../harp-utils/lib/GlslUtils.ts","webpack://@here/harp.gl/../harp-utils/lib/GroupedPriorityList.ts","webpack://@here/harp.gl/../harp-utils/lib/Logger/ConsoleChannel.ts","webpack://@here/harp.gl/../harp-utils/lib/Logger/ILogger.ts","webpack://@here/harp.gl/../harp-utils/lib/Logger/Logger.ts","webpack://@here/harp.gl/../harp-utils/lib/Logger/LoggerManager.ts","webpack://@here/harp.gl/../harp-utils/lib/Logger/LoggerManagerImpl.ts","webpack://@here/harp.gl/../harp-utils/lib/Logger/MultiChannel.ts","webpack://@here/harp.gl/../harp-utils/lib/Logger/WorkerChannel.ts","webpack://@here/harp.gl/../harp-utils/lib/Logger/index.ts","webpack://@here/harp.gl/../harp-utils/lib/Math2D.ts","webpack://@here/harp.gl/../harp-utils/lib/MathUtils.ts","webpack://@here/harp.gl/../harp-utils/lib/Mixins.ts","webpack://@here/harp.gl/../harp-utils/lib/ObjectUtils.ts","webpack://@here/harp.gl/../harp-utils/lib/OptionsUtils.ts","webpack://@here/harp.gl/../harp-utils/lib/PerformanceTimer.ts","webpack://@here/harp.gl/../harp-utils/lib/SampleBilinear.ts","webpack://@here/harp.gl/../harp-utils/lib/TaskQueue.ts","webpack://@here/harp.gl/../harp-utils/lib/UriResolver.ts","webpack://@here/harp.gl/../harp-utils/lib/UrlPlatformUtils.ts","webpack://@here/harp.gl/../harp-utils/lib/UrlUtils.ts","webpack://@here/harp.gl/../harp-utils/lib/assert.ts","webpack://@here/harp.gl/../harp-vectortile-datasource/index-worker.ts","webpack://@here/harp.gl/../harp-vectortile-datasource/lib/DecodeInfo.ts","webpack://@here/harp.gl/../harp-vectortile-datasource/lib/GeoJsonTilerService.ts","webpack://@here/harp.gl/../harp-vectortile-datasource/lib/OmvDataFilter.ts","webpack://@here/harp.gl/../harp-vectortile-datasource/lib/OmvDecoderDefs.ts","webpack://@here/harp.gl/../harp-vectortile-datasource/lib/OmvPoliticalViewFeatureModifier.ts","webpack://@here/harp.gl/../harp-vectortile-datasource/lib/OmvUtils.ts","webpack://@here/harp.gl/../harp-vectortile-datasource/lib/Ring.ts","webpack://@here/harp.gl/../harp-vectortile-datasource/lib/StyleSetDataFilter.ts","webpack://@here/harp.gl/../harp-vectortile-datasource/lib/VectorTileDataEmitter.ts","webpack://@here/harp.gl/../harp-vectortile-datasource/lib/VectorTileDecoder.ts","webpack://@here/harp.gl/../harp-vectortile-datasource/lib/adapters/geojson-vt/GeoJsonVtDataAdapter.ts","webpack://@here/harp.gl/../harp-vectortile-datasource/lib/adapters/geojson/GeoJsonDataAdapter.ts","webpack://@here/harp.gl/../harp-vectortile-datasource/lib/adapters/omv/OmvData.ts","webpack://@here/harp.gl/../harp-vectortile-datasource/lib/adapters/omv/OmvDataAdapter.ts","webpack://@here/harp.gl/./lib/DecoderBootstrap.ts","webpack://@here/harp.gl/./lib/DecoderBundleMain.ts","webpack://@here/harp.gl/external \"THREE\"","webpack://@here/harp.gl/webpack/bootstrap","webpack://@here/harp.gl/webpack/runtime/define property getters","webpack://@here/harp.gl/webpack/runtime/global","webpack://@here/harp.gl/webpack/runtime/hasOwnProperty shorthand","webpack://@here/harp.gl/webpack/runtime/make namespace object","webpack://@here/harp.gl/webpack/startup"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__exportStar","exports","p","prototype","hasOwnProperty","call","value","pb","mapbox","com","$protobuf","$Reader","Reader","$util","util","$root","roots","Tile","properties","layers","keys","i","length","valuesById","values","emptyArray","decode","reader","end","len","pos","message","tag","uint32","push","Layer","skipType","decodeDelimited","fromObject","object","Array","isArray","TypeError","toObject","options","arrays","defaults","j","toJSON","constructor","toJSONOptions","GeomType","Value","stringValue","floatValue","doubleValue","intValue","Long","fromBits","uintValue","sintValue","boolValue","string","float","double","int64","uint64","sint64","bool","String","Number","fromValue","unsigned","parseInt","LongBits","low","high","toNumber","Boolean","long","longs","toString","json","isFinite","Feature","tags","geometry","id","type","end2","int32","enums","features","version","name","extent","ProtocolError","instance","module","fn","ctx","params","arguments","offset","index","pending","Promise","resolve","reject","err","apply","base64","n","charAt","Math","ceil","b64","s64","encode","buffer","start","t","parts","chunk","b","fromCharCode","slice","join","invalidEncoding","c","charCodeAt","Error","test","EventEmitter","_listeners","on","evt","off","listeners","splice","emit","args","factory","Float32Array","f32","f8b","Uint8Array","le","writeFloat_f32_cpy","val","buf","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","floor","log","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","bind","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","replace","e","alloc","size","SIZE","MAX","slab","utf8","read","write","c1","c2","kCSSColorTable","clamp_css_byte","clamp_css_float","f","parse_css_int","str","parseFloat","parse_css_float","css_hue_to_rgb","m1","m2","h","parseCSSColor","css_str","iv","toLowerCase","substr","op","indexOf","ep","fname","split","alpha","pop","s","l","earcut","data","holeIndices","dim","minX","minY","maxX","maxY","x","y","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","next","prev","list","queue","steiner","getLeftmost","sort","compareX","eliminateHole","filterPoints","eliminateHoles","max","earcutLinked","clockwise","last","signedArea","insertNode","equals","removeNode","again","area","ear","pass","z","zOrder","prevZ","nextZ","q","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","a","pointInTriangle","minTX","minTY","maxTX","maxTY","minZ","maxZ","intersects","locallyInside","isValidDiagonal","splitPolygon","hole","hx","hy","qx","tan","mx","my","tanMin","abs","sectorContainsSector","findHoleBridge","leftmost","ax","ay","bx","by","cx","cy","px","py","intersectsPolygon","inside","middleInside","r","p1","p2","q1","q2","o1","o2","o3","o4","onSegment","min","num","a2","Node","b2","an","bp","sum","default","deviation","polygonArea","trianglesArea","flatten","result","vertices","holes","dimensions","holeIndex","d","simplify","coords","first","sqTolerance","maxSqDist","mid","minPosToMid","getSqSegDist","posToMid","dx","dy","createFeature","geom","feature","calcLineBBox","calcBBox","convertFeature","geojson","coordinates","tolerance","maxZoom","promoteId","generateId","convertPoint","convertLine","lineMetrics","convertLines","geometries","polygon","out","projectX","projectY","ring","isPolygon","x0","y0","sqrt","rings","sin","PI","y2","clip","scale","k1","axis","minAll","maxAll","clipped","newGeometry","clipPoints","clipLine","clipLines","newGeom","trackMetrics","segLen","newSlice","intersect","intersectX","intersectY","az","exited","addPoint","line","shiftFeatureCoords","newFeatures","shiftCoords","newPolygon","points","newPoints","transformTile","tile","transformed","z2","tx","ty","transformPoint","createTile","numPoints","numSimplified","numFeatures","source","addFeature","simplified","addLine","key","tileFeature","isOuter","rewind","geojsonvt","GeoJSONVT","debug","dest","src","extend","console","time","convert","tiles","tileCoords","timeEnd","indexMaxZoom","indexMaxPoints","stats","total","merged","left","right","concat","wrap","splitTile","JSON","stringify","toID","cz","stack","tl","bl","tr","br","k3","k4","getTile","parent","z0","wasm","WebAssembly","Instance","Module","isLong","obj","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","radix","RangeError","substring","radixToPower","power","mul","add","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","other","notEquals","neq","ne","lessThan","comp","lt","lessThanOrEqual","lte","greaterThan","gt","greaterThanOrEqual","gte","ge","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","log2","delta","approxRes","approxRem","modulo","rem_u","rem_s","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","bytes","fromBytesLE","fromBytesBE","protobuf","configure","_configure","Writer","BufferWriter","BufferReader","build","rpc","indexOutOfRange","writeLength","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","subarray","sint32","fixed32","sfixed32","skip","wireType","BufferReader_","merge","zzDecode","fixed64","sfixed64","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","rpcCall","method","requestCtor","responseCtor","request","callback","self","asPromise","finish","response","setTimeout","endedByRPC","zero","zzEncode","zeroHash","from","isString","toLong","fromHash","hash","toHash","mask","part0","part1","part2","dst","ifNotSet","newError","CustomError","captureStackTrace","pool","isNode","g","process","versions","node","global","window","freeze","emptyObject","isInteger","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","lcFirst","oneOfGetter","fieldNames","fieldMap","oneOfSetter","encoding","allocUnsafe","Op","noop","State","writer","head","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","set","fork","reset","ldelim","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","byteLength","HEX_FULL_CHANNEL","tmpColor","THREE","Color","ColorUtils","getHexFromRgba","assert","getHexFromRgb","getHexFromHsl","setHSL","getHex","getRgbaFromHex","hex","target","RGBA","hasAlphaInHex","getAlphaFromHex","removeAlphaFromHex","getFeatureName","env","basePropName","useAbbreviation","useIsoCode","languages","abbreviation","lookup","isoCode","lang","GeometryType","attr","Uint16Array","Uint32Array","Int8Array","Int16Array","Int32Array","projectionName","mercatorProjection","webMercatorProjection","sphereProjection","normalizedEquirectangularProjection","equirectangularProjection","projection","attributeMap","$id","context","technique","Env","propName","isTextTechnique","isPoiTechnique","isLineMarkerTechnique","text","evaluateTechniqueAttr","label","tileLevel","constantHeight","entries","super","unmap","exprEvaluator","ExprEvaluator","exprInstantiator","ExprInstantiator","ExprDependencies","Set","ComputeExprDependencies","expr","dependencies","accept","forEach","childExpr","volatile","featureState","visitCallExpr","branches","_","branch","fallback","condition","input","defaultValue","stops","isJsonExpr","v","ExprScope","Expr","code","ExprParser","parse","definitions","definitionExprCache","parseNode","lockedNames","Map","scope","ExprEvaluatorContext","m_dependencies","of","ExprSerializer","serialize","m_isDynamic","exprIsDynamic","VarExpr","visitor","visitVarExpr","LiteralExpr","BooleanLiteralExpr","NumberLiteralExpr","StringLiteralExpr","NullLiteralExpr","ObjectLiteralExpr","visitNullLiteralExpr","visitBooleanLiteralExpr","visitNumberLiteralExpr","m_promotedValue","Pixels","visitStringLiteralExpr","visitObjectLiteralExpr","HasAttributeExpr","visitHasAttributeExpr","CallExpr","descriptor","getOperator","isDynamicOperator","some","isDynamic","LookupExpr","referenceResolverState","lookupTableNode","lookupTableExpr","lookupTable","map","unshift","visitLookupExpr","MatchExpr","elementTy","every","visitMatchExpr","CaseExpr","visitCaseExpr","cond","StepExpr","visitStepExpr","InterpolateExpr","mode","visitInterpolateExpr","Vector2","Vector3","Vector4","w","body","parseCall","has","cachedEntry","definitionEntry","definitionValue","getDefinitionValue","isInterpolatedPropertyDefinition","fromJSON","interpolatedPropertyDefinitionToJsonExpr","delete","resolveReference","makeCallExpr","parseGetExpr","parseHasExpr","parseLiteralExpr","conditions","isValidMatchLabel","parseMatchExpr","caseFallback","parseCaseExpr","isInterpolationMode","isExpr","parseInterpolateExpr","parseStepExpr","parseArray","operatorDescriptors","promoteValue","promotedValue","evaluate","evaluator","cachedResult","builtin","builtins","getOwnPropertyNames","defineOperator","match","includes","firstDynamicCondition","findIndex","evaluatedCondition","evaluatedBody","wrapValue","partialEvaluate","arg","param","interp","i1","i0","iP","iN","tP","t0","t1","dt","wP","wN","pp","ppp","cP","c0","cN","vP","v0","v1","vN","MathUtils","clamp","N","cubicInterpolate","keyIndex","prevKey","prevValue","base","lerp","clone","defineOperators","CastOperators","ComparisonOperators","MathOperators","StringOperators","ColorOperators","TypeOperators","MiscOperators","FlowOperators","ArrayOperators","ObjectOperators","FeatureOperators","MapOperators","VectorOperators","emptyEnv","_context","preserve","visitCallExprImpl","changed","newBranch","newCondition","deps","Condition","instantiatedBranch","Character","Token","isSpace","codepoint","Tab","Lf","Cr","Space","isNumber","_0","_9","isLetter","A","Z","isIdentChar","isLetterOrNumber","Dollar","Dot","LBracket","RBracket","tokenSpell","token","Eof","Identifier","Comma","LParen","RParen","Exclaim","TildeEqual","CaretEqual","DollarEqual","EqualEqual","ExclaimEqual","Less","Greater","LessEqual","GreaterEqual","BarBar","AmpAmp","Lexer","m_token","m_index","m_char","m_text","yylex","codePointAt","yyinp","ch","SingleQuote","DoubleQuote","Equal","Caret","Tilde","Bar","Amp","getEqualityOp","getRelationalOp","lex","parseLogicalOr","yyexpect","hasAttribute","parseLiteral","parseUnary","parsePrimary","elements","parseRelational","parseEquality","expressions","parseLogicalAnd","m_booleanLiterals","m_numberLiterals","m_stringLiterals","m_objectLiterals","m_arrayLiterals","m_varExprs","m_hasAttributeExprs","m_matchExprs","m_caseExprs","m_interpolateExprs","m_stepExprs","m_callExprs","array","find","literal","candidate","branchesMatching","calls","step","InterpolationMode","interpolationMode","zoomLevels","property","interpolation","currEdgeStart","currEdgeGoal","prevEdgeStart","prevEdgeGoal","indexBuffer","vertexOffset","vertexStride","polygonContour","polygonContourEdges","isExtruded","addFootprintEdges","wallEdgeSlope","vFootprint0","vRoof0","vFootprint1","vRoof1","prevEdgeIdx","v0x","v0y","v1x","v1y","normalize","dot","vFoot0","RX","exec","logger","LoggerManager","Dynamic","error","pixelToMeters","parseStringEncodedNumeral","color","parseStringEncodedColor","StringEncodedNumeralType","StringEncodedMeters","Meters","regExp","decoder","encodedValue","StringEncodedPixels","StringEncodedHex","Hex","StringEncodedMetricFormats","StringEncodedMetricFormatMaxSize","reduce","StringEncodedColorFormats","StringEncodedColorFormatMaxSize","StringEncodedNumeralFormats","StringEncodedNumeralFormatMaxSize","tmpBuffer","parseStringLiteral","formats","matchedFormat","format","components","numeral","DEFAULT_TECHNIQUE_ATTR_SCOPE","AttrScope","TechniqueGeometry","StyleConditionClassifier","style","_whenExpr","savedStyle","switchStyle","_style","enclosingExpr","children","filter","matched","matchVarStringComparison","layer","_geometryType","saved","OptimizedSubSetKey","geometryType","keyUpdateNeeded","envLayer","envGeometryType","updateKey","cachedStyleSet","makeDecodedTechnique","attrName","attrValue","isVector2","isVector3","isVector4","m_options","styleSet","m_techniques","m_exprPool","ExprPool","m_cachedResults","m_styleConditionClassifier","m_subStyleSetCache","m_definitionExprCache","m_tmpOptimizedSubSetKey","m_emptyEnv","m_featureDependencies","m_nextArrayBufferId","m_definitions","resolveStyleReferences","techniqueRenderOrder","styleSetIndex","_styleSetIndex","renderOrder","computeDefaultRenderOrder","compileStyleSet","m_previousResult","m_previousEnv","clear","optimizedSubSetKey","m_layer","m_geometryType","m_zoomLevel","searchedStyleSet","getOptimizedStyleSet","currStyle","processStyle","techinque","_index","subSetKey","optimizedStyleSet","createPreFilteredStyleSet","compileStyle","checkStyleDynamicAttributes","when","classify","intern","minZoomLevel","_minZoomLevelExpr","maxZoomLevel","_maxZoomLevelExpr","checkZoomLevel","getTechniqueForStyleMatch","final","zoomLevel","_dynamicTechniques","dynamicAttributes","evaluateTechniqueProperties","getDynamicTechniqueKey","createTechnique","_staticTechnique","dynamicAttrKey","_attrName","ArrayBuffer","arrayBufferId","_dynamicTechniqueAttributes","_dynamicFeatureAttributes","_dynamicForwardedAttributes","_staticAttributes","dynamicFeatureAttributes","dynamicTechniqueAttributes","dynamicForwardedAttributes","targetStaticAttributes","processAttribute","_usesFeatureState","attrScope","vertexColors","getTechniqueAttributeDescriptor","getStyleAttributeScope","FeatureGeometry","TechniqueRendering","replacement","startsWith","attrExpr","dynamicAttrs","_styleSet","setTechniqueRenderOrderOrPriority","priorities","labelPriorities","isEnv","getPropertyValue","cachedExprResults","mergeTechniqueDescriptor","descriptors","attrDescriptors","attrTransparencyColor","baseTechniqueParamsDescriptor","enabled","fadeFar","fadeNear","transparent","automatic","side","pointTechniquePropTypes","opacity","squaresTechniquePropTypes","circlesTechniquePropTypes","lineMarkerTechniquePropTypes","poiName","imageTexture","iconColor","iconBrightness","backgroundColor","backgroundSize","backgroundOpacity","polygonalTechniqueDescriptor","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","depthTest","lineColor","lineFadeFar","lineFadeNear","solidLineTechniqueDescriptor","lineWidth","secondaryWidth","secondaryColor","dashSize","gapSize","outlineColor","caps","drawRangeStart","drawRangeEnd","dashes","dashColor","lineTechniqueDescriptor","fillTechniqueDescriptor","wireframe","standardTechniqueDescriptor","roughness","metalness","alphaTest","emissive","emissiveIntensity","refractionRatio","normalMapType","normalMap","displacementMap","roughnessMap","emissiveMap","bumpMap","metalnessMap","alphaMap","techniqueDescriptors","height","floorHeight","defaultColor","defaultHeight","boundaryWalls","footprint","maxSlope","animateExtrusion","terrain","standard","squares","circles","segments","fill","priority","shader","getTechniqueDescriptor","techniqueDescriptor","automaticAttributeCache","descr","StandardGeometryKind","Pickability","PlacementToken","PoiStackMode","TextureCoordinateType","GeometryKind","GeometryKindSet","subset","elem","hasIntersection","transient","pickability","onlyVisible","isExtrudedLineTechnique","isStandardExtrudedLineTechnique","shading","isFillTechnique","isExtrudedPolygonTechnique","isStandardTechnique","isTerrainTechnique","isShaderTechnique","supportsTextures","TEXTURE_PROPERTY_KEYS","TRANSPARENCY_PROPERTY_KEYS","textureCoordinateType","transferList","texturePropertyKey","textureProperty","isTextureBuffer","imageName","textureName","imageTexturePrefix","imageTexturePostfix","_category","computeRenderOrder","category","entry","group","_secondaryCategory","secondaryRenderOrder","isVerboseDefinition","definition","theme","visitFunc","visit","styles","styleSetName","ThreeBufferUtils","getBufferElementType","fromThreeBufferAttribute","bufferAttribute","itemCount","itemSize","normalized","fromThreeInterleavedBufferAttribute","fromThreeBufferGeometry","bufferGeometry","techniqueIndex","vertexAttributes","attributeNames","attributes","vertexAttribute","count","posAttr","position","Unspecified","groups","abortController","AbortController","signal","abort","WorkerDecoderProtocol","DecoderMessageName","Requests","isConfigurationMessage","service","Configuration","isDecodeTileRequest","DecodeTileRequest","isTileInfoRequest","TileInfoRequest","WorkerServiceProtocol","ServiceMessageName","WORKER_SERVICE_MANAGER_SERVICE_ID","isInitializedMessage","Initialized","isUnknownServiceError","isRequestMessage","Request","isResponseMessage","Response","WorkerTilerProtocol","isRegisterIndexRequest","RegisterIndex","isUpdateIndexRequest","UpdateIndex","isTileRequest","TileRequest","VALID_ELEMENT_TYPES","checkElementTypes","element","checkArray","operators","checkArrayLength","at","rgba","rgbaToHex","rgb","rgbToHex","hsl","euclideanModulo","hslToHex","strict","state","conditionalCast","all","any","none","boolean","number","pixels","scaleFactor","zoom","ppi","acos","asin","atan","cos","E","ln","ln2","log10","pi","joinKeyValues","stringifyKeyValue","getAllCombinations","combinations","initLength","getKeyCombinations","lookupExpr","reverse","lhs","rhs","joinCombinations","coalesce","keyCombinations","table","lookupArray","createLookupMap","lookupMapExpr","matchAttributes","searchLookupMap","LookupMode","lookupMember","lookupMode","memberName","in","downcase","toLocaleLowerCase","upcase","toLocaleUpperCase","endsWith","typeof","isVector","ctor","toVector","VectorCtor","fromArray","_value","vector2","vector3","vector4","ClipEdge","x1","y1","x2","isInside","p0","point","Math2D","intersectLines","lineString","inputList","pushPoint","currentPoint","prevPoint","computeIntersection","lineStrings","reuslt","clippedLine","wrapMultiLineStringHelper","multiLineString","edges","worldP","geoPoint","unprojectPoint","longitude","clipEdge0","clipEdge1","clipEdge2","clipEdge3","lines","projectPoint","WRAP_LEFT_CLIP_EDGES","middle","WRAP_MIDDLE_CLIP_EDGES","WRAP_RIGHT_CLIP_EDGES","ec","EarthConstants","EQUATORIAL_CIRCUMFERENCE","ClippingEdge","lastAddedPoint","isClipped","clipEdges","clipPolygon","VERTEX_POSITION_CACHE","SubdivisionMode","EdgeLengthGeometrySubdivisionModifier","SubdivisionModifier","subdivision","geoBox","subdivisionMode","All","ProjectionType","Planar","northEast","southWest","m_projectedBox","m_maxLengthX","m_maxLengthY","m_maxLength","shouldSplitAB","shouldSplitEdge","shouldSplitBC","shouldSplitCA","ab","distanceTo","bc","ca","maxDistance","NoDiagonals","SphericalGeometrySubdivisionModifier","angle","aa","reprojectPoint","bb","cc","angleTo","beta","gamma","tmpVectorA","tmpVectorB","tmpVectorC","positionAttr","getAttribute","uvAttr","uv","edgeAttr","edge","wallAttr","wall","indexAttr","getIndex","indices","middleVertex","lerpVectors","toArray","newIndices","shift","v2","shouldSplitTriangle","v3","needsUpdate","setIndex","GeoBox","west","east","center","GeoCoordinates","latitude","latitudeSpan","longitudeSpan","altitude","south","north","minAltitude","altitudeSpan","degToRad","maxAltitude","width","containsHelper","isFlat","isSameAltitude","isWithinAltitudeRange","MAX_LONGITUDE","coord","isGeoCoordinatesLike","isLatLngLike","lat","lng","isGeoPointLike","MAX_LATITUDE","MIN_LATITUDE","MIN_LONGITUDE","tmpV0","tmpV1","radToDeg","latLng","fromGeoPoint","fromDegrees","geoCoords0","geoCoords1","factor","geoCoordsEnd","dividend","minLongitude","maxLongitude","computeLonSpanAcrossGreewich","lonA","lonB","isLeftToRightAntimeridianCrossing","lonStart","lonEnd","needsSort","needsWrapping","m_coordinates","geoCoordLikeToGeoCoordinatesLike","sortCCW","wrapCoordinatesAround","centroid","getCentroid","fromCoordinates","getEastAndWest","getNorthAndSouth","getArea","previousIndex","coordinate","previousCoordinate","polyCenter","getPolyAverageCenter","veca","firstAntimerCrossIndex","prevLonIndex","wrapAround","currentLon","nextLon","polySum","curr","vecb","ccw","isValid","isGeoCoordLike","box3","normalizeAngleDeg","angleDistanceDeg","newEmptyBox3","newVector3","copyVector3","to","normalizeLongitudeDeg","interpolateAnglesDeg","intersectsSlab","rayDir","finv","t2","tmpVec","tmpT","OrientedBox3","rotationMatrix","extents","xAxis","yAxis","zAxis","extractBasis","newBox","multiplyScalar","matrix","Matrix4","makeBasis","frustumOrPlanes","planes","plane","normal","distanceToPoint","ray","origin","direction","dz","distanceToPointSquared","subVectors","lengths","getComponent","dd","obb","transform","EQUATORIAL_RADIUS","MIN_ELEVATION","MAX_ELEVATION","MAX_BUILDING_HEIGHT","EquirectangularProjection","Projection","_worldPoint","Box3","unitScale","geoToWorldScale","worldPoint","fromRadians","worldToGeoScale","worldCenter","latitudeSpanInRadians","longitudeSpanInRadians","sizeX","sizeY","isBox3Like","isOrientedBox3Like","EPSILON","worldBox","minGeo","maxGeo","IdentityProjection","identityProjection","MercatorProjection","MercatorConstants","MAXIMUM_LATITUDE","latitudeProject","latitudeClamp","exp","cosh","geoPointLike","latitudeClampProject","latitudeInRadians","unprojectLatitude","worldNorth","worldSouth","worldYCenter","sourceProjection","worldPos","sy","projectBox","getLongitudeQuadrant","oneOverPI","quadrantIndex","lengthOfVector3","makeBox3","halfEquatorialRadius","minLongitudeQuadrant","maxLongitudeQuadrant","xMin","xMax","yMin","yMax","cosMaxLongitude","sinMaxLongitude","xCenter","xExtent","yCenter","yExtent","minLatitude","maxLatutide","zMax","zMin","zCenter","zExtent","SphereProjection","Spherical","_minElevation","maxElevation","radius","worldpoint","cosLatitude","project","parallelRadiusSq","parallelRadius","atan2","bounds","midX","midY","cosSouth","sinSouth","cosWest","sinWest","cosNorth","sinNorth","cosEast","sinEast","cosMidX","sinMidX","cosMidY","sinMidY","rMax","rMin","_worldBox","gx","gy","cosLongitude","sinLongitude","sinLatitude","TransverseMercatorProjection","m_phi0","m_lambda0","_unitScale","lon","TransverseMercatorUtils","POLE_RADIUS","rsq","POLE_RADIUS_SQ","nearestQuarter","deltaLon","deltaLat","distanceToPoleSq","distanceToPole","dir","offsetLon","clamped","clampGeoPoint","normalLon","phi","lambda","B","atanh","outScale","tau","nx","ny","D","sinh","pointsToCheck","POLE_EDGE_DEG","containsEastCut","containsCenterX","containsCenterY","alignLatitude","projected","vx","vy","vz","lowerQ","upperQ","containsLowerQY","containsUpperQY","geoPoints","alignLongitude","latitudes","longitudes","altitudes","referencePoint","bad","good","POLE_EDGE","transverseMercatorProjection","tilingScheme","minElevation","m_tilingScheme","m_worldBox","worldExtent","m_worldDimensions","subdivisionScheme","tileKey","level","levelDimensionX","getLevelDimensionX","levelDimensionY","getLevelDimensionY","originX","column","originY","row","getWorldBox","unprojectBox","halfQuadTreeSubdivisionScheme","hereTilingScheme","TilingScheme","mercatorTilingScheme","quadTreeSubdivisionScheme","polarTilingScheme","visitTileKey","TileKey","fromRowColumnLevel","getGeoBox","subTileKey","getSubTileKeys","SubTiles","Symbol","iterator","ZCurveIterator","RowColumnIterator","parentKey","powerOfTwo","quadkey","quadKey64","quadKey","m_mortonCode","quadkey64","fromMortonCode","m_hereTile","coordX","coordY","totalWidth","totalHeight","rowsAtLevel","columnsAtLevel","mortonCode","changedLevelBy","col","qnr","subQuad","fromQuadKey","child","fromHereTile","msb","TileKeyUtils","worldCoordinatesToTileKey","worldSizeX","worldSizeY","getKeyForTileKeyAndOffset","bitshift","shiftedOffset","offsetBits","totalOffsetsToStore","getShiftedOffset","extractOffsetAndMortonKeyFromKey","geoCoordinatesToTileKey","geoRectangleToTileKeys","lower","upper","minVal","maxVal","southWestLongitude","longitudeInRadians","southWestLatitude","northEastLongitude","northEastLatitude","minTileKey","maxTileKey","columnCount","minColumn","maxColumn","minRow","maxRow","getParentKeyFromKey","calculatedKey","parentMortonCode","m_subdivisionScheme","divX","getSubdivisionX","divY","getSubdivisionY","boundingBoxGenerator","FlatTileBoundingBoxGenerator","tileTreeTraverse","TileTreeTraverse","subTiles","webMercatorTilingScheme","tmpV","tmpNormal","tmpTangent0","tmpTangent1","tmpBitangent","LINE_VERTEX_ATTRIBUTES","stride","NORMAL_UV_VERTEX_ATTRIBUTES","LINE_VERTEX_ATTRIBUTES_NUV","HP_LINE_VERTEX_ATTRIBUTES","HP_LINE_VERTEX_ATTRIBUTES_NUV","LineGeometry","getVertexDescriptor","hasNormalsAndUvs","highPrecision","createLineGeometry","polyline","offsets","uvs","colors","pointCount","tangents","baseVertex","hasSegmentOffsets","hasTexCoords","sqrLength","lineCoverage","lineLength","isClosed","tmpVertices","addVertexPair","T1","T2","segment","extrusionCoord","highComp","fround","lowComp","setComponent","surfaceNormal","bt","cross","computeBitangent","createSimpleLineGeometry","LineGroup","isSimple","m_geometry","setAttribute","BufferAttribute","vertexDescriptor","InterleavedBuffer","attribute","InterleavedBufferAttribute","BufferGeometry","createGeometry","UNIT_Z","POINTS","BEVEL_POINTS","STEP","addCircle","lineAngle","SECTORS_IN_CIRCLE","startWithCircle","endWithCircle","angleVec","prevBt","averageBt","p3","useBevel","inclineWidth","inBuffer","startOffset","outBuffer","i2","startIndex","xd","yd","zd","geojsonvtExport","BUFFER","EXTENT","indexes","indexId","updateIndex","URL","fetch","href","ok","statusText","isFeatureGeometry","m_storageLevelOffset","m_styleSetEvaluator","info","decodeThemedTile","customOptions","StyleSetEvaluator","storageLevelOffset","TileDecoderService","WorkerService","serviceId","m_decoder","connect","handleDecodeTileRequest","handleTileInfoRequest","handleRequest","handleConfigurationMessage","getProjection","decodedTile","decodeTile","transferBufferAttribute","interleavedVertexAttributes","edgeIndex","objInfos","attachments","attachment","techniques","addBuffersToTransferList","getTileInfo","then","tileInfo","TilerService","tiler","GeoJsonTiler","handleRegisterIndexRequest","handleUpdateIndexRequest","handleTileRequest","registerIndex","m_pendingRequests","onMessage","requestEntry","messageId","responseSent","tryHandleRequest","doSendResponse","catch","errorMessage","errorStack","tryHandleMessage","addEventListener","postMessage","cancelAllPendingRequests","removeEventListener","handleMessage","WorkerServiceManager","m_factories","m_services","m_service","workerServiceDescriptor","serviceType","CreateService","targetServiceId","targetServiceType","DestroyService","destroy","resolvedDependencies","ExtrusionFeatureDefs","DEFAULT_RATIO_MIN","DEFAULT_RATIO_MAX","MIN_BUILDING_HEIGHT","m_logger","headerMessage","m_headerLogged","warn","createLogMethod","severity","rest","DOMUtils","getIsoLanguageCode","language","getBrowserLanguages","navigator","languageList","f1","f2","vertexShader","fragmentShader","PriorityListGroup","foundIndex","GroupedPriorityList","getGroup","findGroup","remove","otherGroup","fun","normalizedPriority","optionalParams","trace","LogLevel","m_channel","Trace","update","prefix","Debug","Info","Log","Warn","m_instance","LoggerManagerImpl","m_loggers","channel","document","ConsoleChannel","WorkerChannel","loggerName","m_levelSetForAll","Logger","found","config","channels","WORKERCHANNEL_MSG_TYPE","workerMessage","distSquared","Box","box","xmax","ymax","contains","computeSquaredLineLength","squaredLineLength","xDiff","yDiff","distToSegmentSquared","l0x","l0y","l1x","l1y","lineLengthSuared","intersectLineAndCircle","xLine1","yLine1","xLine2","yLine2","dSq","cp","discriminantSquared","xMid","yMid","discriminant","xDist","yDist","x3","y3","x4","y4","smoothStep","edge0","edge1","smootherStep","inMin","inMax","outMin","outMax","min2","max2","isClamped","lowerBound","upperBound","easeInOutCubic","startValue","endValue","derivedCtor","baseCtors","baseCtor","getOwnPropertyDescriptor","cloneInternal","cached","Date","getTime","RegExp","flags","props","PerformanceTimer","nowFunc","performance","now","getNowFunc","texture","u","maxXIndex","maxYIndex","xIndex","xIndexFloor","yIndex","yIndexFloor","swIndex","seIndex","nwIndex","neIndex","swElevation","seElevation","nwElevation","neElevation","xFrac","xFracInverse","yFrac","yFracInverse","m_taskLists","prioSortFn","taskList","updateTaskList","getTaskList","task","numLeft","tasklist","shouldProcess","numItemsLeft","nextTask","pull","execute","checkIfExpired","isExpired","getPriority","uri","parentUri","resolveReferenceUri","resolvers","resolveUri","originalUrl","url","resolver","cwd","baseUrl","location","childUri","absoluteUrlWithOriginRe","getUrlOrigin","idx","lastIndexOf","parsed","getUrlHostAndProtocol","protocol","host","urlOriginRe","targetProjection","projectedBoundingBox","tileBounds","tileSize","getCenter","getSize","tileSizeOnScreen","rowCount","getInstance","register","GEOJSON_TILER_SERVICE_TYPE","m_processLayersDefault","m_processPointsDefault","m_processLinesDefault","m_processPolygonsDefault","m_layersToProcess","m_layersToIgnore","m_pointsToProcess","m_ignoredPoints","m_linesToProcess","m_linesToIgnore","m_polygonsToProcess","m_polygonsToIgnore","m_kindsToProcess","m_kindsToIgnore","processLayersDefault","processPointsDefault","processLinesDefault","processPolygonsDefault","OmvFilterString","StringMatch","Match","minLevel","maxLevel","addItem","addItems","enabledKinds","disabledKinds","layersToProcess","layersToIgnore","pointsToProcess","pointsToIgnore","linesToProcess","linesToIgnore","polygonsToProcess","polygonsToIgnore","kindsToProcess","kindsToIgnore","items","item","layerName","matchLayer","geometryTypes","geomType","classes","featureClass","matchClass","featureAttribute","geomTypes","featureClasses","OmvGenericFeatureFilter","description","layerItems","layerItem","matchString","wantsFeature","kind","hasOrIntersects","itemsToProcess","itemsToIgnore","defaultResult","filters","hasKindFilter","wantsLayer","wantsPointFeature","wantsLineFeature","wantsPolygonFeature","wantsKind","OmvGenericFeatureModifier","doProcessFeature","featureClassThing","matchItems","matchAttribute","OmvGeometryType","FeatureModifierId","filterString","Any","StartsWith","EndsWith","VECTOR_TILE_DECODER_SERVICE_TYPE","pov","m_countryCode","rewriteEnvironment","isPoliticalViewLayer","updateEnvironment","countryCode","getAlternativePov","lat2tile","createWorldTileTransformationCookie","decodeInfo","top","tile2world","flipY","worldTileProjectionCookie","R","isVector3Like","webMercatorTile2TargetWorld","scaleHeight","getScaleFactor","SharedArrayBuffer","textureCoords","hasClipInfo","ShapeUtils","winding","nextIdx","currWasClipped","nextWasClipped","styleSetEvaluator","tempTileOrigin","tempVertNormal","tempFootDisp","tempRoofDisp","tmpV2","tmpV2r","tmpV3","tmpV3r","tmpV4","tempP0","tempP1","tempPreviousTangent","tmpPointA","tmpPointB","tmpPointC","tmpPointD","tmpPointE","tmpLine","Line3","MAX_CORNER_ANGLE","createIndexBufferAttribute","maxValue","MeshBuffers","positions","normals","textureCoordinates","extrusionAxis","edgeIndices","texts","pathLengths","stringCatalog","imageTextures","featureStarts","edgeFeatureStarts","offsetDirections","LineType","m_decodeInfo","m_meshBuffers","m_geometries","m_textGeometries","m_textPathGeometries","m_pathGeometries","m_poiGeometries","m_simpleLines","m_solidLines","m_sources","m_maxGeometryHeight","m_minGeometryHeight","gatherFeatureAttributes","skipShortLabels","enableElevationOverlay","processFeatureCommon","tilePositions","meshBuffers","findOrCreateMeshBuffers","Point","shouldCreateTextGeometries","wantsPoi","poiTechnique","poiNameField","imageTextureField","imageTextureValue","composeTechniqueTextureName","scaleHeights","featureId","getFeatureId","textTechnique","getFeatureText","addText","webMercatorTile2TargetTile","localLines","worldLines","localLineSegments","tileWidth","tileHeight","tileSizeWorld","computeTexCoords","texCoordinateType","hasUntiledLines","untiledPositions","hasIndividualLineSegments","hasContinuousLineSegments","otherTexCoordType","getTextureCoordinateType","getComputeTexCoordsFunc","isSpecialDashesLineTechnique","untiledLine","lineDist","lastSegmentOffset","localLine","worldLine","lineUvs","segmentOffsets","pos1","pos2","findRelativePositionInLine","segmentLength","segOffsets","offs","lineOffsets","wantCircle","techniqueName","isLineTechnique","isSolidLineTechnique","lineGeometry","lineType","Simple","Complex","applyLineTechnique","validLines","worldUnitsPerPixel","minEstimatedLabelLength","minEstimatedLabelLengthSqr","splitJaggyLines","path","pathLengthSqr","lineMarkerTechnique","aLine","isLabelRejectionLineTechnique","worldPath","ExtrudedLine","techniqueCaps","triangulateLine","$layer","objectBounds","bbox","polygons","isFilled","isStandard","primitive","shouldClipPolygons","isExterior","ringCoords","Ring","isLine","applyPolygonTechnique","needIndividualLineSegments","ringLength","properEdge","isProperEdge","createGeometries","processSimpleLines","processLines","decodedTechniques","decodeTime","textGeometries","poiGeometries","textPathGeometries","pathGeometries","copyrightHolderIds","maxGeometryHeight","minGeometryHeight","maxCornerAngle","computeBoundingBoxSizeSqr","endIndex","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","pathsToCheck","splitIndex","tangent","theta","firstPathLengthSqr","secondPathLengthSqr","TileSpace","tilePos","tileExtents","divideScalar","EquirectangularSpace","FeatureSpace","linesGeometry","featureAttributes","lineGroup","lineGroupGeometries","SolidLine","Line","ExtrudedPolygon","Polygon","extrudedPolygonTechnique","fillTechnique","texCoordType","featureHeight","styleSetDefaultHeight","featureMinHeight","isSpherical","edgeWidth","hasEdges","getOptionValue","colorValue","featureColor","isColorStringValid","startIndexCount","edgeStartIndexCount","polygonBaseVertex","exteriorRing","featureStride","ringIndex","insideExtents","originalVertexCount","positionArray","uvArray","edgeArray","wallArray","Uint32BufferAttribute","Uint16BufferAttribute","modify","world2tile","geomIndex","addEdges","addWalls","techniqueIdx","poiGeometry","positionElements","positionCount","texCoordCount","linesArray","buffers","featureBaseVertex","featureVertexCount","hasFootprint","tmpEdgeA","tmpEdgeB","firstRingVertex","prevRingVertex","currRingVertex","maxRingVertex","nextRingVertex","prevPos","currPos","nextPos","lineOffset","closestPointToPoint","dist","VectorTileDataProcessor","m_tileKey","m_projection","m_dataAdapter","m_dataFilter","showMissingTechniques","resetTechniques","DecodeInfo","m_decodedTileEmitter","VectorTileDataEmitter","getDecodedTile","processFeature","processPointFeature","Label","processLineFeature","processPolygonFeature","Area","emitterFunc","geometryKind","createMapEnv","applyKindFilter","getMatchingTechniques","MapEnv","$level","$zoom","$geometryType","defaultKind","VectorTileDecoder","ThemedTileDecoder","m_roundUpCoordinatesIfNeeded","m_defaultDataAdapters","OmvDataAdapter","GeoJsonVtDataAdapter","GeoJsonDataAdapter","startTime","getDataAdapter","dataAdapter","canProcess","omvOptions","m_featureFilter","dataFilter","adapter","VT_JSON_EXTENTS","VTJsonGeometryType","isArrayBufferLike","geometryProcessor","pointGeometry","LineString","lineGeometries","lastLine","lastPos","startx","starty","outline","currX","currY","Unknown","DEFAULT_EXTENTS","convertLineStringGeometry","convertLineGeometry","convertRings","isOuterRing","isClockWise","convertPolygonGeometry","convertPointGeometry","featureCollection","clippedGeometries","DEFAULT_BORDER","clipLineString","CommandKind","visitOmvLayer","visitLayer","UNKNOWN","POINT","visitPointFeature","LINESTRING","visitLineFeature","POLYGON","visitPolygonFeature","endVisitLayer","command","MoveTo","LineTo","ClosePath","vectorTile","visitAttribute","geometryCount","xCoords","yCoords","commands","cmdIndex","xx","yy","visitCommand","propertyCategories","decodeFeatureId","asGeometryType","roundUpCoordinates","layerExtents","createFeatureModifier","filterDescription","featureModifierId","m_geometryCommands","GeometryCommands","featureModifiersIds","featureModifiers","fmId","m_featureModifiers","styleSetDataFilter","StyleSetDataFilter","ComposedDataFilter","politicalView","fm","OmvPoliticalViewFeatureModifier","povFeatureModifier","roundUpCoordinatesIfNeeded","payload","proto","m_processor","visitOmv","storageLevel","modifierFunc","doProcessPointFeature","filterAndModifyFeature","isMoveToCommand","doProcessLineFeature","isLineToCommand","mustRoundUpCoordinates","roundUpLineCoordinates","doProcessPolygonFeature","currentPolygon","currentRing","exteriorWinding","isClosePathCommand","currentRingWinding","roundUpPolygonCoordinates","multipolygon","firstPolygon","checkWinding","filterFunc","attrs","FeatureAttributes","simplifiedValue","readAttributes","timeoutHit","warnTimeout","bootstrapEventHandler","event","isWorkerBootstrapResponse","clearTimeout","initScript","importScripts","GeoJsonTilerService","VectorTileDecoderService","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","globalThis","Function","toStringTag"],"mappings":"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","file":"harp-decoders.min.js","sourcesContent":["\"use strict\";\n/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Utility classes for working with geospatial data.\n *\n * @remarks\n *\n * @packageDocumentation\n */\n__exportStar(require(\"./lib/coordinates/GeoBox\"), exports);\n__exportStar(require(\"./lib/coordinates/GeoBoxExtentLike\"), exports);\n__exportStar(require(\"./lib/coordinates/GeoCoordinatesLike\"), exports);\n__exportStar(require(\"./lib/coordinates/GeoCoordinates\"), exports);\n__exportStar(require(\"./lib/coordinates/GeoPointLike\"), exports);\n__exportStar(require(\"./lib/coordinates/GeoPolygonLike\"), exports);\n__exportStar(require(\"./lib/coordinates/GeoPolygon\"), exports);\n__exportStar(require(\"./lib/coordinates/LatLngLike\"), exports);\n__exportStar(require(\"./lib/projection/EarthConstants\"), exports);\n__exportStar(require(\"./lib/projection/EquirectangularProjection\"), exports);\n__exportStar(require(\"./lib/projection/IdentityProjection\"), exports);\n__exportStar(require(\"./lib/projection/Projection\"), exports);\n__exportStar(require(\"./lib/projection/MercatorProjection\"), exports);\n__exportStar(require(\"./lib/projection/TransverseMercatorProjection\"), exports);\n__exportStar(require(\"./lib/projection/SphereProjection\"), exports);\n__exportStar(require(\"./lib/tiling/FlatTileBoundingBoxGenerator\"), exports);\n__exportStar(require(\"./lib/tiling/HalfQuadTreeSubdivisionScheme\"), exports);\n__exportStar(require(\"./lib/tiling/QuadTreeSubdivisionScheme\"), exports);\n__exportStar(require(\"./lib/tiling/QuadTree\"), exports);\n__exportStar(require(\"./lib/tiling/SubTiles\"), exports);\n__exportStar(require(\"./lib/tiling/SubdivisionScheme\"), exports);\n__exportStar(require(\"./lib/tiling/TileKey\"), exports);\n__exportStar(require(\"./lib/tiling/TileKeyUtils\"), exports);\n__exportStar(require(\"./lib/tiling/TileTreeTraverse\"), exports);\n__exportStar(require(\"./lib/tiling/TilingScheme\"), exports);\n__exportStar(require(\"./lib/tiling/HereTilingScheme\"), exports);\n__exportStar(require(\"./lib/tiling/WebMercatorTilingScheme\"), exports);\n__exportStar(require(\"./lib/tiling/MercatorTilingScheme\"), exports);\n__exportStar(require(\"./lib/tiling/PolarTilingScheme\"), exports);\n__exportStar(require(\"./lib/math/Vector2Like\"), exports);\n__exportStar(require(\"./lib/math/Vector3Like\"), exports);\n__exportStar(require(\"./lib/math/Box3Like\"), exports);\n__exportStar(require(\"./lib/math/OrientedBox3Like\"), exports);\n__exportStar(require(\"./lib/math/MathUtils\"), exports);\n__exportStar(require(\"./lib/math/TransformLike\"), exports);\n__exportStar(require(\"./lib/math/OrientedBox3\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Provides utilities: logging and debugging.\n *\n * @remarks\n *\n * @packageDocumentation\n */\n__exportStar(require(\"./index-common\"), exports);\n__exportStar(require(\"./lib/UrlPlatformUtils\"), exports);\n//# sourceMappingURL=index.js.map","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.com = (function() {\n\n    /**\n     * Namespace com.\n     * @exports com\n     * @namespace\n     */\n    var com = {};\n\n    com.mapbox = (function() {\n\n        /**\n         * Namespace mapbox.\n         * @memberof com\n         * @namespace\n         */\n        var mapbox = {};\n\n        mapbox.pb = (function() {\n\n            /**\n             * Namespace pb.\n             * @memberof com.mapbox\n             * @namespace\n             */\n            var pb = {};\n\n            pb.Tile = (function() {\n\n                /**\n                 * Properties of a Tile.\n                 * @memberof com.mapbox.pb\n                 * @interface ITile\n                 * @property {Array.<com.mapbox.pb.Tile.ILayer>|null} [layers] Tile layers\n                 */\n\n                /**\n                 * Constructs a new Tile.\n                 * @memberof com.mapbox.pb\n                 * @classdesc Represents a Tile.\n                 * @implements ITile\n                 * @constructor\n                 * @param {com.mapbox.pb.ITile=} [properties] Properties to set\n                 */\n                function Tile(properties) {\n                    this.layers = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * Tile layers.\n                 * @member {Array.<com.mapbox.pb.Tile.ILayer>} layers\n                 * @memberof com.mapbox.pb.Tile\n                 * @instance\n                 */\n                Tile.prototype.layers = $util.emptyArray;\n\n                /**\n                 * Decodes a Tile message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {com.mapbox.pb.Tile} Tile\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Tile.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 3:\n                            if (!(message.layers && message.layers.length))\n                                message.layers = [];\n                            message.layers.push($root.com.mapbox.pb.Tile.Layer.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a Tile message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {com.mapbox.pb.Tile} Tile\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Tile.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Creates a Tile message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {com.mapbox.pb.Tile} Tile\n                 */\n                Tile.fromObject = function fromObject(object) {\n                    if (object instanceof $root.com.mapbox.pb.Tile)\n                        return object;\n                    var message = new $root.com.mapbox.pb.Tile();\n                    if (object.layers) {\n                        if (!Array.isArray(object.layers))\n                            throw TypeError(\".com.mapbox.pb.Tile.layers: array expected\");\n                        message.layers = [];\n                        for (var i = 0; i < object.layers.length; ++i) {\n                            if (typeof object.layers[i] !== \"object\")\n                                throw TypeError(\".com.mapbox.pb.Tile.layers: object expected\");\n                            message.layers[i] = $root.com.mapbox.pb.Tile.Layer.fromObject(object.layers[i]);\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a Tile message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {com.mapbox.pb.Tile} message Tile\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                Tile.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.layers = [];\n                    if (message.layers && message.layers.length) {\n                        object.layers = [];\n                        for (var j = 0; j < message.layers.length; ++j)\n                            object.layers[j] = $root.com.mapbox.pb.Tile.Layer.toObject(message.layers[j], options);\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this Tile to JSON.\n                 * @function toJSON\n                 * @memberof com.mapbox.pb.Tile\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                Tile.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                /**\n                 * GeomType enum.\n                 * @name com.mapbox.pb.Tile.GeomType\n                 * @enum {number}\n                 * @property {number} UNKNOWN=0 UNKNOWN value\n                 * @property {number} POINT=1 POINT value\n                 * @property {number} LINESTRING=2 LINESTRING value\n                 * @property {number} POLYGON=3 POLYGON value\n                 */\n                Tile.GeomType = (function() {\n                    var valuesById = {}, values = Object.create(valuesById);\n                    values[valuesById[0] = \"UNKNOWN\"] = 0;\n                    values[valuesById[1] = \"POINT\"] = 1;\n                    values[valuesById[2] = \"LINESTRING\"] = 2;\n                    values[valuesById[3] = \"POLYGON\"] = 3;\n                    return values;\n                })();\n\n                Tile.Value = (function() {\n\n                    /**\n                     * Properties of a Value.\n                     * @memberof com.mapbox.pb.Tile\n                     * @interface IValue\n                     * @property {string|null} [stringValue] Value stringValue\n                     * @property {number|null} [floatValue] Value floatValue\n                     * @property {number|null} [doubleValue] Value doubleValue\n                     * @property {number|Long|null} [intValue] Value intValue\n                     * @property {number|Long|null} [uintValue] Value uintValue\n                     * @property {number|Long|null} [sintValue] Value sintValue\n                     * @property {boolean|null} [boolValue] Value boolValue\n                     */\n\n                    /**\n                     * Constructs a new Value.\n                     * @memberof com.mapbox.pb.Tile\n                     * @classdesc Represents a Value.\n                     * @implements IValue\n                     * @constructor\n                     * @param {com.mapbox.pb.Tile.IValue=} [properties] Properties to set\n                     */\n                    function Value(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Value stringValue.\n                     * @member {string} stringValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.stringValue = \"\";\n\n                    /**\n                     * Value floatValue.\n                     * @member {number} floatValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.floatValue = 0;\n\n                    /**\n                     * Value doubleValue.\n                     * @member {number} doubleValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.doubleValue = 0;\n\n                    /**\n                     * Value intValue.\n                     * @member {number|Long} intValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.intValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n                    /**\n                     * Value uintValue.\n                     * @member {number|Long} uintValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.uintValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n                    /**\n                     * Value sintValue.\n                     * @member {number|Long} sintValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.sintValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n                    /**\n                     * Value boolValue.\n                     * @member {boolean} boolValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.boolValue = false;\n\n                    /**\n                     * Decodes a Value message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {com.mapbox.pb.Tile.Value} Value\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Value.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile.Value();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.stringValue = reader.string();\n                                break;\n                            case 2:\n                                message.floatValue = reader.float();\n                                break;\n                            case 3:\n                                message.doubleValue = reader.double();\n                                break;\n                            case 4:\n                                message.intValue = reader.int64();\n                                break;\n                            case 5:\n                                message.uintValue = reader.uint64();\n                                break;\n                            case 6:\n                                message.sintValue = reader.sint64();\n                                break;\n                            case 7:\n                                message.boolValue = reader.bool();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a Value message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {com.mapbox.pb.Tile.Value} Value\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Value.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Creates a Value message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {com.mapbox.pb.Tile.Value} Value\n                     */\n                    Value.fromObject = function fromObject(object) {\n                        if (object instanceof $root.com.mapbox.pb.Tile.Value)\n                            return object;\n                        var message = new $root.com.mapbox.pb.Tile.Value();\n                        if (object.stringValue != null)\n                            message.stringValue = String(object.stringValue);\n                        if (object.floatValue != null)\n                            message.floatValue = Number(object.floatValue);\n                        if (object.doubleValue != null)\n                            message.doubleValue = Number(object.doubleValue);\n                        if (object.intValue != null)\n                            if ($util.Long)\n                                (message.intValue = $util.Long.fromValue(object.intValue)).unsigned = false;\n                            else if (typeof object.intValue === \"string\")\n                                message.intValue = parseInt(object.intValue, 10);\n                            else if (typeof object.intValue === \"number\")\n                                message.intValue = object.intValue;\n                            else if (typeof object.intValue === \"object\")\n                                message.intValue = new $util.LongBits(object.intValue.low >>> 0, object.intValue.high >>> 0).toNumber();\n                        if (object.uintValue != null)\n                            if ($util.Long)\n                                (message.uintValue = $util.Long.fromValue(object.uintValue)).unsigned = true;\n                            else if (typeof object.uintValue === \"string\")\n                                message.uintValue = parseInt(object.uintValue, 10);\n                            else if (typeof object.uintValue === \"number\")\n                                message.uintValue = object.uintValue;\n                            else if (typeof object.uintValue === \"object\")\n                                message.uintValue = new $util.LongBits(object.uintValue.low >>> 0, object.uintValue.high >>> 0).toNumber(true);\n                        if (object.sintValue != null)\n                            if ($util.Long)\n                                (message.sintValue = $util.Long.fromValue(object.sintValue)).unsigned = false;\n                            else if (typeof object.sintValue === \"string\")\n                                message.sintValue = parseInt(object.sintValue, 10);\n                            else if (typeof object.sintValue === \"number\")\n                                message.sintValue = object.sintValue;\n                            else if (typeof object.sintValue === \"object\")\n                                message.sintValue = new $util.LongBits(object.sintValue.low >>> 0, object.sintValue.high >>> 0).toNumber();\n                        if (object.boolValue != null)\n                            message.boolValue = Boolean(object.boolValue);\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a Value message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {com.mapbox.pb.Tile.Value} message Value\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Value.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.defaults) {\n                            object.stringValue = \"\";\n                            object.floatValue = 0;\n                            object.doubleValue = 0;\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, false);\n                                object.intValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.intValue = options.longs === String ? \"0\" : 0;\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, true);\n                                object.uintValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.uintValue = options.longs === String ? \"0\" : 0;\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, false);\n                                object.sintValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.sintValue = options.longs === String ? \"0\" : 0;\n                            object.boolValue = false;\n                        }\n                        if (message.stringValue != null && message.hasOwnProperty(\"stringValue\"))\n                            object.stringValue = message.stringValue;\n                        if (message.floatValue != null && message.hasOwnProperty(\"floatValue\"))\n                            object.floatValue = options.json && !isFinite(message.floatValue) ? String(message.floatValue) : message.floatValue;\n                        if (message.doubleValue != null && message.hasOwnProperty(\"doubleValue\"))\n                            object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;\n                        if (message.intValue != null && message.hasOwnProperty(\"intValue\"))\n                            if (typeof message.intValue === \"number\")\n                                object.intValue = options.longs === String ? String(message.intValue) : message.intValue;\n                            else\n                                object.intValue = options.longs === String ? $util.Long.prototype.toString.call(message.intValue) : options.longs === Number ? new $util.LongBits(message.intValue.low >>> 0, message.intValue.high >>> 0).toNumber() : message.intValue;\n                        if (message.uintValue != null && message.hasOwnProperty(\"uintValue\"))\n                            if (typeof message.uintValue === \"number\")\n                                object.uintValue = options.longs === String ? String(message.uintValue) : message.uintValue;\n                            else\n                                object.uintValue = options.longs === String ? $util.Long.prototype.toString.call(message.uintValue) : options.longs === Number ? new $util.LongBits(message.uintValue.low >>> 0, message.uintValue.high >>> 0).toNumber(true) : message.uintValue;\n                        if (message.sintValue != null && message.hasOwnProperty(\"sintValue\"))\n                            if (typeof message.sintValue === \"number\")\n                                object.sintValue = options.longs === String ? String(message.sintValue) : message.sintValue;\n                            else\n                                object.sintValue = options.longs === String ? $util.Long.prototype.toString.call(message.sintValue) : options.longs === Number ? new $util.LongBits(message.sintValue.low >>> 0, message.sintValue.high >>> 0).toNumber() : message.sintValue;\n                        if (message.boolValue != null && message.hasOwnProperty(\"boolValue\"))\n                            object.boolValue = message.boolValue;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Value to JSON.\n                     * @function toJSON\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Value.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Value;\n                })();\n\n                Tile.Feature = (function() {\n\n                    /**\n                     * Properties of a Feature.\n                     * @memberof com.mapbox.pb.Tile\n                     * @interface IFeature\n                     * @property {number|Long|null} [id] Feature id\n                     * @property {Array.<number>|null} [tags] Feature tags\n                     * @property {com.mapbox.pb.Tile.GeomType|null} [type] Feature type\n                     * @property {Array.<number>|null} [geometry] Feature geometry\n                     */\n\n                    /**\n                     * Constructs a new Feature.\n                     * @memberof com.mapbox.pb.Tile\n                     * @classdesc Represents a Feature.\n                     * @implements IFeature\n                     * @constructor\n                     * @param {com.mapbox.pb.Tile.IFeature=} [properties] Properties to set\n                     */\n                    function Feature(properties) {\n                        this.tags = [];\n                        this.geometry = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Feature id.\n                     * @member {number|Long} id\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n                    /**\n                     * Feature tags.\n                     * @member {Array.<number>} tags\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.tags = $util.emptyArray;\n\n                    /**\n                     * Feature type.\n                     * @member {com.mapbox.pb.Tile.GeomType} type\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.type = 0;\n\n                    /**\n                     * Feature geometry.\n                     * @member {Array.<number>} geometry\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.geometry = $util.emptyArray;\n\n                    /**\n                     * Decodes a Feature message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {com.mapbox.pb.Tile.Feature} Feature\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Feature.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile.Feature();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.id = reader.uint64();\n                                break;\n                            case 2:\n                                if (!(message.tags && message.tags.length))\n                                    message.tags = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.tags.push(reader.uint32());\n                                } else\n                                    message.tags.push(reader.uint32());\n                                break;\n                            case 3:\n                                message.type = reader.int32();\n                                break;\n                            case 4:\n                                if (!(message.geometry && message.geometry.length))\n                                    message.geometry = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.geometry.push(reader.uint32());\n                                } else\n                                    message.geometry.push(reader.uint32());\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a Feature message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {com.mapbox.pb.Tile.Feature} Feature\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Feature.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Creates a Feature message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {com.mapbox.pb.Tile.Feature} Feature\n                     */\n                    Feature.fromObject = function fromObject(object) {\n                        if (object instanceof $root.com.mapbox.pb.Tile.Feature)\n                            return object;\n                        var message = new $root.com.mapbox.pb.Tile.Feature();\n                        if (object.id != null)\n                            if ($util.Long)\n                                (message.id = $util.Long.fromValue(object.id)).unsigned = true;\n                            else if (typeof object.id === \"string\")\n                                message.id = parseInt(object.id, 10);\n                            else if (typeof object.id === \"number\")\n                                message.id = object.id;\n                            else if (typeof object.id === \"object\")\n                                message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber(true);\n                        if (object.tags) {\n                            if (!Array.isArray(object.tags))\n                                throw TypeError(\".com.mapbox.pb.Tile.Feature.tags: array expected\");\n                            message.tags = [];\n                            for (var i = 0; i < object.tags.length; ++i)\n                                message.tags[i] = object.tags[i] >>> 0;\n                        }\n                        switch (object.type) {\n                        case \"UNKNOWN\":\n                        case 0:\n                            message.type = 0;\n                            break;\n                        case \"POINT\":\n                        case 1:\n                            message.type = 1;\n                            break;\n                        case \"LINESTRING\":\n                        case 2:\n                            message.type = 2;\n                            break;\n                        case \"POLYGON\":\n                        case 3:\n                            message.type = 3;\n                            break;\n                        }\n                        if (object.geometry) {\n                            if (!Array.isArray(object.geometry))\n                                throw TypeError(\".com.mapbox.pb.Tile.Feature.geometry: array expected\");\n                            message.geometry = [];\n                            for (var i = 0; i < object.geometry.length; ++i)\n                                message.geometry[i] = object.geometry[i] >>> 0;\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a Feature message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {com.mapbox.pb.Tile.Feature} message Feature\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Feature.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults) {\n                            object.tags = [];\n                            object.geometry = [];\n                        }\n                        if (options.defaults) {\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, true);\n                                object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.id = options.longs === String ? \"0\" : 0;\n                            object.type = options.enums === String ? \"UNKNOWN\" : 0;\n                        }\n                        if (message.id != null && message.hasOwnProperty(\"id\"))\n                            if (typeof message.id === \"number\")\n                                object.id = options.longs === String ? String(message.id) : message.id;\n                            else\n                                object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber(true) : message.id;\n                        if (message.tags && message.tags.length) {\n                            object.tags = [];\n                            for (var j = 0; j < message.tags.length; ++j)\n                                object.tags[j] = message.tags[j];\n                        }\n                        if (message.type != null && message.hasOwnProperty(\"type\"))\n                            object.type = options.enums === String ? $root.com.mapbox.pb.Tile.GeomType[message.type] : message.type;\n                        if (message.geometry && message.geometry.length) {\n                            object.geometry = [];\n                            for (var j = 0; j < message.geometry.length; ++j)\n                                object.geometry[j] = message.geometry[j];\n                        }\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Feature to JSON.\n                     * @function toJSON\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Feature.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Feature;\n                })();\n\n                Tile.Layer = (function() {\n\n                    /**\n                     * Properties of a Layer.\n                     * @memberof com.mapbox.pb.Tile\n                     * @interface ILayer\n                     * @property {number} version Layer version\n                     * @property {string} name Layer name\n                     * @property {Array.<com.mapbox.pb.Tile.IFeature>|null} [features] Layer features\n                     * @property {Array.<string>|null} [keys] Layer keys\n                     * @property {Array.<com.mapbox.pb.Tile.IValue>|null} [values] Layer values\n                     * @property {number|null} [extent] Layer extent\n                     */\n\n                    /**\n                     * Constructs a new Layer.\n                     * @memberof com.mapbox.pb.Tile\n                     * @classdesc Represents a Layer.\n                     * @implements ILayer\n                     * @constructor\n                     * @param {com.mapbox.pb.Tile.ILayer=} [properties] Properties to set\n                     */\n                    function Layer(properties) {\n                        this.features = [];\n                        this.keys = [];\n                        this.values = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Layer version.\n                     * @member {number} version\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.version = 1;\n\n                    /**\n                     * Layer name.\n                     * @member {string} name\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.name = \"\";\n\n                    /**\n                     * Layer features.\n                     * @member {Array.<com.mapbox.pb.Tile.IFeature>} features\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.features = $util.emptyArray;\n\n                    /**\n                     * Layer keys.\n                     * @member {Array.<string>} keys\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.keys = $util.emptyArray;\n\n                    /**\n                     * Layer values.\n                     * @member {Array.<com.mapbox.pb.Tile.IValue>} values\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.values = $util.emptyArray;\n\n                    /**\n                     * Layer extent.\n                     * @member {number} extent\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.extent = 4096;\n\n                    /**\n                     * Decodes a Layer message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {com.mapbox.pb.Tile.Layer} Layer\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Layer.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile.Layer();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 15:\n                                message.version = reader.uint32();\n                                break;\n                            case 1:\n                                message.name = reader.string();\n                                break;\n                            case 2:\n                                if (!(message.features && message.features.length))\n                                    message.features = [];\n                                message.features.push($root.com.mapbox.pb.Tile.Feature.decode(reader, reader.uint32()));\n                                break;\n                            case 3:\n                                if (!(message.keys && message.keys.length))\n                                    message.keys = [];\n                                message.keys.push(reader.string());\n                                break;\n                            case 4:\n                                if (!(message.values && message.values.length))\n                                    message.values = [];\n                                message.values.push($root.com.mapbox.pb.Tile.Value.decode(reader, reader.uint32()));\n                                break;\n                            case 5:\n                                message.extent = reader.uint32();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        if (!message.hasOwnProperty(\"version\"))\n                            throw $util.ProtocolError(\"missing required 'version'\", { instance: message });\n                        if (!message.hasOwnProperty(\"name\"))\n                            throw $util.ProtocolError(\"missing required 'name'\", { instance: message });\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a Layer message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {com.mapbox.pb.Tile.Layer} Layer\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Layer.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Creates a Layer message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {com.mapbox.pb.Tile.Layer} Layer\n                     */\n                    Layer.fromObject = function fromObject(object) {\n                        if (object instanceof $root.com.mapbox.pb.Tile.Layer)\n                            return object;\n                        var message = new $root.com.mapbox.pb.Tile.Layer();\n                        if (object.version != null)\n                            message.version = object.version >>> 0;\n                        if (object.name != null)\n                            message.name = String(object.name);\n                        if (object.features) {\n                            if (!Array.isArray(object.features))\n                                throw TypeError(\".com.mapbox.pb.Tile.Layer.features: array expected\");\n                            message.features = [];\n                            for (var i = 0; i < object.features.length; ++i) {\n                                if (typeof object.features[i] !== \"object\")\n                                    throw TypeError(\".com.mapbox.pb.Tile.Layer.features: object expected\");\n                                message.features[i] = $root.com.mapbox.pb.Tile.Feature.fromObject(object.features[i]);\n                            }\n                        }\n                        if (object.keys) {\n                            if (!Array.isArray(object.keys))\n                                throw TypeError(\".com.mapbox.pb.Tile.Layer.keys: array expected\");\n                            message.keys = [];\n                            for (var i = 0; i < object.keys.length; ++i)\n                                message.keys[i] = String(object.keys[i]);\n                        }\n                        if (object.values) {\n                            if (!Array.isArray(object.values))\n                                throw TypeError(\".com.mapbox.pb.Tile.Layer.values: array expected\");\n                            message.values = [];\n                            for (var i = 0; i < object.values.length; ++i) {\n                                if (typeof object.values[i] !== \"object\")\n                                    throw TypeError(\".com.mapbox.pb.Tile.Layer.values: object expected\");\n                                message.values[i] = $root.com.mapbox.pb.Tile.Value.fromObject(object.values[i]);\n                            }\n                        }\n                        if (object.extent != null)\n                            message.extent = object.extent >>> 0;\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a Layer message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {com.mapbox.pb.Tile.Layer} message Layer\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Layer.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults) {\n                            object.features = [];\n                            object.keys = [];\n                            object.values = [];\n                        }\n                        if (options.defaults) {\n                            object.name = \"\";\n                            object.extent = 4096;\n                            object.version = 1;\n                        }\n                        if (message.name != null && message.hasOwnProperty(\"name\"))\n                            object.name = message.name;\n                        if (message.features && message.features.length) {\n                            object.features = [];\n                            for (var j = 0; j < message.features.length; ++j)\n                                object.features[j] = $root.com.mapbox.pb.Tile.Feature.toObject(message.features[j], options);\n                        }\n                        if (message.keys && message.keys.length) {\n                            object.keys = [];\n                            for (var j = 0; j < message.keys.length; ++j)\n                                object.keys[j] = message.keys[j];\n                        }\n                        if (message.values && message.values.length) {\n                            object.values = [];\n                            for (var j = 0; j < message.values.length; ++j)\n                                object.values[j] = $root.com.mapbox.pb.Tile.Value.toObject(message.values[j], options);\n                        }\n                        if (message.extent != null && message.hasOwnProperty(\"extent\"))\n                            object.extent = message.extent;\n                        if (message.version != null && message.hasOwnProperty(\"version\"))\n                            object.version = message.version;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Layer to JSON.\n                     * @function toJSON\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Layer.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Layer;\n                })();\n\n                return Tile;\n            })();\n\n            return pb;\n        })();\n\n        return mapbox;\n    })();\n\n    return com;\n})();\n\nmodule.exports = $root;\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n\n        // filter collinear points around the cuts\n        filterPoints(outerNode, outerNode.next);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","\n// calculate simplification data using optimized Douglas-Peucker algorithm\n\nexport default function simplify(coords, first, last, sqTolerance) {\n    var maxSqDist = sqTolerance;\n    var mid = (last - first) >> 1;\n    var minPosToMid = last - first;\n    var index;\n\n    var ax = coords[first];\n    var ay = coords[first + 1];\n    var bx = coords[last];\n    var by = coords[last + 1];\n\n    for (var i = first + 3; i < last; i += 3) {\n        var d = getSqSegDist(coords[i], coords[i + 1], ax, ay, bx, by);\n\n        if (d > maxSqDist) {\n            index = i;\n            maxSqDist = d;\n\n        } else if (d === maxSqDist) {\n            // a workaround to ensure we choose a pivot close to the middle of the list,\n            // reducing recursion depth, for certain degenerate inputs\n            // https://github.com/mapbox/geojson-vt/issues/104\n            var posToMid = Math.abs(i - mid);\n            if (posToMid < minPosToMid) {\n                index = i;\n                minPosToMid = posToMid;\n            }\n        }\n    }\n\n    if (maxSqDist > sqTolerance) {\n        if (index - first > 3) simplify(coords, first, index, sqTolerance);\n        coords[index + 2] = maxSqDist;\n        if (last - index > 3) simplify(coords, index, last, sqTolerance);\n    }\n}\n\n// square distance from a point to a segment\nfunction getSqSegDist(px, py, x, y, bx, by) {\n\n    var dx = bx - x;\n    var dy = by - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = bx;\n            y = by;\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","\nexport default function createFeature(id, type, geom, tags) {\n    var feature = {\n        id: typeof id === 'undefined' ? null : id,\n        type: type,\n        geometry: geom,\n        tags: tags,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n    calcBBox(feature);\n    return feature;\n}\n\nfunction calcBBox(feature) {\n    var geom = feature.geometry;\n    var type = feature.type;\n\n    if (type === 'Point' || type === 'MultiPoint' || type === 'LineString') {\n        calcLineBBox(feature, geom);\n\n    } else if (type === 'Polygon' || type === 'MultiLineString') {\n        for (var i = 0; i < geom.length; i++) {\n            calcLineBBox(feature, geom[i]);\n        }\n\n    } else if (type === 'MultiPolygon') {\n        for (i = 0; i < geom.length; i++) {\n            for (var j = 0; j < geom[i].length; j++) {\n                calcLineBBox(feature, geom[i][j]);\n            }\n        }\n    }\n}\n\nfunction calcLineBBox(feature, geom) {\n    for (var i = 0; i < geom.length; i += 3) {\n        feature.minX = Math.min(feature.minX, geom[i]);\n        feature.minY = Math.min(feature.minY, geom[i + 1]);\n        feature.maxX = Math.max(feature.maxX, geom[i]);\n        feature.maxY = Math.max(feature.maxY, geom[i + 1]);\n    }\n}\n","\nimport simplify from './simplify';\nimport createFeature from './feature';\n\n// converts GeoJSON feature into an intermediate projected JSON vector format with simplification data\n\nexport default function convert(data, options) {\n    var features = [];\n    if (data.type === 'FeatureCollection') {\n        for (var i = 0; i < data.features.length; i++) {\n            convertFeature(features, data.features[i], options, i);\n        }\n\n    } else if (data.type === 'Feature') {\n        convertFeature(features, data, options);\n\n    } else {\n        // single geometry or a geometry collection\n        convertFeature(features, {geometry: data}, options);\n    }\n\n    return features;\n}\n\nfunction convertFeature(features, geojson, options, index) {\n    if (!geojson.geometry) return;\n\n    var coords = geojson.geometry.coordinates;\n    var type = geojson.geometry.type;\n    var tolerance = Math.pow(options.tolerance / ((1 << options.maxZoom) * options.extent), 2);\n    var geometry = [];\n    var id = geojson.id;\n    if (options.promoteId) {\n        id = geojson.properties[options.promoteId];\n    } else if (options.generateId) {\n        id = index || 0;\n    }\n    if (type === 'Point') {\n        convertPoint(coords, geometry);\n\n    } else if (type === 'MultiPoint') {\n        for (var i = 0; i < coords.length; i++) {\n            convertPoint(coords[i], geometry);\n        }\n\n    } else if (type === 'LineString') {\n        convertLine(coords, geometry, tolerance, false);\n\n    } else if (type === 'MultiLineString') {\n        if (options.lineMetrics) {\n            // explode into linestrings to be able to track metrics\n            for (i = 0; i < coords.length; i++) {\n                geometry = [];\n                convertLine(coords[i], geometry, tolerance, false);\n                features.push(createFeature(id, 'LineString', geometry, geojson.properties));\n            }\n            return;\n        } else {\n            convertLines(coords, geometry, tolerance, false);\n        }\n\n    } else if (type === 'Polygon') {\n        convertLines(coords, geometry, tolerance, true);\n\n    } else if (type === 'MultiPolygon') {\n        for (i = 0; i < coords.length; i++) {\n            var polygon = [];\n            convertLines(coords[i], polygon, tolerance, true);\n            geometry.push(polygon);\n        }\n    } else if (type === 'GeometryCollection') {\n        for (i = 0; i < geojson.geometry.geometries.length; i++) {\n            convertFeature(features, {\n                id: id,\n                geometry: geojson.geometry.geometries[i],\n                properties: geojson.properties\n            }, options, index);\n        }\n        return;\n    } else {\n        throw new Error('Input data is not a valid GeoJSON object.');\n    }\n\n    features.push(createFeature(id, type, geometry, geojson.properties));\n}\n\nfunction convertPoint(coords, out) {\n    out.push(projectX(coords[0]));\n    out.push(projectY(coords[1]));\n    out.push(0);\n}\n\nfunction convertLine(ring, out, tolerance, isPolygon) {\n    var x0, y0;\n    var size = 0;\n\n    for (var j = 0; j < ring.length; j++) {\n        var x = projectX(ring[j][0]);\n        var y = projectY(ring[j][1]);\n\n        out.push(x);\n        out.push(y);\n        out.push(0);\n\n        if (j > 0) {\n            if (isPolygon) {\n                size += (x0 * y - x * y0) / 2; // area\n            } else {\n                size += Math.sqrt(Math.pow(x - x0, 2) + Math.pow(y - y0, 2)); // length\n            }\n        }\n        x0 = x;\n        y0 = y;\n    }\n\n    var last = out.length - 3;\n    out[2] = 1;\n    simplify(out, 0, last, tolerance);\n    out[last + 2] = 1;\n\n    out.size = Math.abs(size);\n    out.start = 0;\n    out.end = out.size;\n}\n\nfunction convertLines(rings, out, tolerance, isPolygon) {\n    for (var i = 0; i < rings.length; i++) {\n        var geom = [];\n        convertLine(rings[i], geom, tolerance, isPolygon);\n        out.push(geom);\n    }\n}\n\nfunction projectX(x) {\n    return x / 360 + 0.5;\n}\n\nfunction projectY(y) {\n    var sin = Math.sin(y * Math.PI / 180);\n    var y2 = 0.5 - 0.25 * Math.log((1 + sin) / (1 - sin)) / Math.PI;\n    return y2 < 0 ? 0 : y2 > 1 ? 1 : y2;\n}\n","\nimport createFeature from './feature';\n\n/* clip features between two axis-parallel lines:\n *     |        |\n *  ___|___     |     /\n * /   |   \\____|____/\n *     |        |\n */\n\nexport default function clip(features, scale, k1, k2, axis, minAll, maxAll, options) {\n\n    k1 /= scale;\n    k2 /= scale;\n\n    if (minAll >= k1 && maxAll < k2) return features; // trivial accept\n    else if (maxAll < k1 || minAll >= k2) return null; // trivial reject\n\n    var clipped = [];\n\n    for (var i = 0; i < features.length; i++) {\n\n        var feature = features[i];\n        var geometry = feature.geometry;\n        var type = feature.type;\n\n        var min = axis === 0 ? feature.minX : feature.minY;\n        var max = axis === 0 ? feature.maxX : feature.maxY;\n\n        if (min >= k1 && max < k2) { // trivial accept\n            clipped.push(feature);\n            continue;\n        } else if (max < k1 || min >= k2) { // trivial reject\n            continue;\n        }\n\n        var newGeometry = [];\n\n        if (type === 'Point' || type === 'MultiPoint') {\n            clipPoints(geometry, newGeometry, k1, k2, axis);\n\n        } else if (type === 'LineString') {\n            clipLine(geometry, newGeometry, k1, k2, axis, false, options.lineMetrics);\n\n        } else if (type === 'MultiLineString') {\n            clipLines(geometry, newGeometry, k1, k2, axis, false);\n\n        } else if (type === 'Polygon') {\n            clipLines(geometry, newGeometry, k1, k2, axis, true);\n\n        } else if (type === 'MultiPolygon') {\n            for (var j = 0; j < geometry.length; j++) {\n                var polygon = [];\n                clipLines(geometry[j], polygon, k1, k2, axis, true);\n                if (polygon.length) {\n                    newGeometry.push(polygon);\n                }\n            }\n        }\n\n        if (newGeometry.length) {\n            if (options.lineMetrics && type === 'LineString') {\n                for (j = 0; j < newGeometry.length; j++) {\n                    clipped.push(createFeature(feature.id, type, newGeometry[j], feature.tags));\n                }\n                continue;\n            }\n\n            if (type === 'LineString' || type === 'MultiLineString') {\n                if (newGeometry.length === 1) {\n                    type = 'LineString';\n                    newGeometry = newGeometry[0];\n                } else {\n                    type = 'MultiLineString';\n                }\n            }\n            if (type === 'Point' || type === 'MultiPoint') {\n                type = newGeometry.length === 3 ? 'Point' : 'MultiPoint';\n            }\n\n            clipped.push(createFeature(feature.id, type, newGeometry, feature.tags));\n        }\n    }\n\n    return clipped.length ? clipped : null;\n}\n\nfunction clipPoints(geom, newGeom, k1, k2, axis) {\n    for (var i = 0; i < geom.length; i += 3) {\n        var a = geom[i + axis];\n\n        if (a >= k1 && a <= k2) {\n            newGeom.push(geom[i]);\n            newGeom.push(geom[i + 1]);\n            newGeom.push(geom[i + 2]);\n        }\n    }\n}\n\nfunction clipLine(geom, newGeom, k1, k2, axis, isPolygon, trackMetrics) {\n\n    var slice = newSlice(geom);\n    var intersect = axis === 0 ? intersectX : intersectY;\n    var len = geom.start;\n    var segLen, t;\n\n    for (var i = 0; i < geom.length - 3; i += 3) {\n        var ax = geom[i];\n        var ay = geom[i + 1];\n        var az = geom[i + 2];\n        var bx = geom[i + 3];\n        var by = geom[i + 4];\n        var a = axis === 0 ? ax : ay;\n        var b = axis === 0 ? bx : by;\n        var exited = false;\n\n        if (trackMetrics) segLen = Math.sqrt(Math.pow(ax - bx, 2) + Math.pow(ay - by, 2));\n\n        if (a < k1) {\n            // ---|-->  | (line enters the clip region from the left)\n            if (b > k1) {\n                t = intersect(slice, ax, ay, bx, by, k1);\n                if (trackMetrics) slice.start = len + segLen * t;\n            }\n        } else if (a > k2) {\n            // |  <--|--- (line enters the clip region from the right)\n            if (b < k2) {\n                t = intersect(slice, ax, ay, bx, by, k2);\n                if (trackMetrics) slice.start = len + segLen * t;\n            }\n        } else {\n            addPoint(slice, ax, ay, az);\n        }\n        if (b < k1 && a >= k1) {\n            // <--|---  | or <--|-----|--- (line exits the clip region on the left)\n            t = intersect(slice, ax, ay, bx, by, k1);\n            exited = true;\n        }\n        if (b > k2 && a <= k2) {\n            // |  ---|--> or ---|-----|--> (line exits the clip region on the right)\n            t = intersect(slice, ax, ay, bx, by, k2);\n            exited = true;\n        }\n\n        if (!isPolygon && exited) {\n            if (trackMetrics) slice.end = len + segLen * t;\n            newGeom.push(slice);\n            slice = newSlice(geom);\n        }\n\n        if (trackMetrics) len += segLen;\n    }\n\n    // add the last point\n    var last = geom.length - 3;\n    ax = geom[last];\n    ay = geom[last + 1];\n    az = geom[last + 2];\n    a = axis === 0 ? ax : ay;\n    if (a >= k1 && a <= k2) addPoint(slice, ax, ay, az);\n\n    // close the polygon if its endpoints are not the same after clipping\n    last = slice.length - 3;\n    if (isPolygon && last >= 3 && (slice[last] !== slice[0] || slice[last + 1] !== slice[1])) {\n        addPoint(slice, slice[0], slice[1], slice[2]);\n    }\n\n    // add the final slice\n    if (slice.length) {\n        newGeom.push(slice);\n    }\n}\n\nfunction newSlice(line) {\n    var slice = [];\n    slice.size = line.size;\n    slice.start = line.start;\n    slice.end = line.end;\n    return slice;\n}\n\nfunction clipLines(geom, newGeom, k1, k2, axis, isPolygon) {\n    for (var i = 0; i < geom.length; i++) {\n        clipLine(geom[i], newGeom, k1, k2, axis, isPolygon, false);\n    }\n}\n\nfunction addPoint(out, x, y, z) {\n    out.push(x);\n    out.push(y);\n    out.push(z);\n}\n\nfunction intersectX(out, ax, ay, bx, by, x) {\n    var t = (x - ax) / (bx - ax);\n    out.push(x);\n    out.push(ay + (by - ay) * t);\n    out.push(1);\n    return t;\n}\n\nfunction intersectY(out, ax, ay, bx, by, y) {\n    var t = (y - ay) / (by - ay);\n    out.push(ax + (bx - ax) * t);\n    out.push(y);\n    out.push(1);\n    return t;\n}\n","\nimport clip from './clip';\nimport createFeature from './feature';\n\nexport default function wrap(features, options) {\n    var buffer = options.buffer / options.extent;\n    var merged = features;\n    var left  = clip(features, 1, -1 - buffer, buffer,     0, -1, 2, options); // left world copy\n    var right = clip(features, 1,  1 - buffer, 2 + buffer, 0, -1, 2, options); // right world copy\n\n    if (left || right) {\n        merged = clip(features, 1, -buffer, 1 + buffer, 0, -1, 2, options) || []; // center world copy\n\n        if (left) merged = shiftFeatureCoords(left, 1).concat(merged); // merge left into center\n        if (right) merged = merged.concat(shiftFeatureCoords(right, -1)); // merge right into center\n    }\n\n    return merged;\n}\n\nfunction shiftFeatureCoords(features, offset) {\n    var newFeatures = [];\n\n    for (var i = 0; i < features.length; i++) {\n        var feature = features[i],\n            type = feature.type;\n\n        var newGeometry;\n\n        if (type === 'Point' || type === 'MultiPoint' || type === 'LineString') {\n            newGeometry = shiftCoords(feature.geometry, offset);\n\n        } else if (type === 'MultiLineString' || type === 'Polygon') {\n            newGeometry = [];\n            for (var j = 0; j < feature.geometry.length; j++) {\n                newGeometry.push(shiftCoords(feature.geometry[j], offset));\n            }\n        } else if (type === 'MultiPolygon') {\n            newGeometry = [];\n            for (j = 0; j < feature.geometry.length; j++) {\n                var newPolygon = [];\n                for (var k = 0; k < feature.geometry[j].length; k++) {\n                    newPolygon.push(shiftCoords(feature.geometry[j][k], offset));\n                }\n                newGeometry.push(newPolygon);\n            }\n        }\n\n        newFeatures.push(createFeature(feature.id, type, newGeometry, feature.tags));\n    }\n\n    return newFeatures;\n}\n\nfunction shiftCoords(points, offset) {\n    var newPoints = [];\n    newPoints.size = points.size;\n\n    if (points.start !== undefined) {\n        newPoints.start = points.start;\n        newPoints.end = points.end;\n    }\n\n    for (var i = 0; i < points.length; i += 3) {\n        newPoints.push(points[i] + offset, points[i + 1], points[i + 2]);\n    }\n    return newPoints;\n}\n","\n// Transforms the coordinates of each feature in the given tile from\n// mercator-projected space into (extent x extent) tile space.\nexport default function transformTile(tile, extent) {\n    if (tile.transformed) return tile;\n\n    var z2 = 1 << tile.z,\n        tx = tile.x,\n        ty = tile.y,\n        i, j, k;\n\n    for (i = 0; i < tile.features.length; i++) {\n        var feature = tile.features[i],\n            geom = feature.geometry,\n            type = feature.type;\n\n        feature.geometry = [];\n\n        if (type === 1) {\n            for (j = 0; j < geom.length; j += 2) {\n                feature.geometry.push(transformPoint(geom[j], geom[j + 1], extent, z2, tx, ty));\n            }\n        } else {\n            for (j = 0; j < geom.length; j++) {\n                var ring = [];\n                for (k = 0; k < geom[j].length; k += 2) {\n                    ring.push(transformPoint(geom[j][k], geom[j][k + 1], extent, z2, tx, ty));\n                }\n                feature.geometry.push(ring);\n            }\n        }\n    }\n\n    tile.transformed = true;\n\n    return tile;\n}\n\nfunction transformPoint(x, y, extent, z2, tx, ty) {\n    return [\n        Math.round(extent * (x * z2 - tx)),\n        Math.round(extent * (y * z2 - ty))];\n}\n","\nexport default function createTile(features, z, tx, ty, options) {\n    var tolerance = z === options.maxZoom ? 0 : options.tolerance / ((1 << z) * options.extent);\n    var tile = {\n        features: [],\n        numPoints: 0,\n        numSimplified: 0,\n        numFeatures: 0,\n        source: null,\n        x: tx,\n        y: ty,\n        z: z,\n        transformed: false,\n        minX: 2,\n        minY: 1,\n        maxX: -1,\n        maxY: 0\n    };\n    for (var i = 0; i < features.length; i++) {\n        tile.numFeatures++;\n        addFeature(tile, features[i], tolerance, options);\n\n        var minX = features[i].minX;\n        var minY = features[i].minY;\n        var maxX = features[i].maxX;\n        var maxY = features[i].maxY;\n\n        if (minX < tile.minX) tile.minX = minX;\n        if (minY < tile.minY) tile.minY = minY;\n        if (maxX > tile.maxX) tile.maxX = maxX;\n        if (maxY > tile.maxY) tile.maxY = maxY;\n    }\n    return tile;\n}\n\nfunction addFeature(tile, feature, tolerance, options) {\n\n    var geom = feature.geometry,\n        type = feature.type,\n        simplified = [];\n\n    if (type === 'Point' || type === 'MultiPoint') {\n        for (var i = 0; i < geom.length; i += 3) {\n            simplified.push(geom[i]);\n            simplified.push(geom[i + 1]);\n            tile.numPoints++;\n            tile.numSimplified++;\n        }\n\n    } else if (type === 'LineString') {\n        addLine(simplified, geom, tile, tolerance, false, false);\n\n    } else if (type === 'MultiLineString' || type === 'Polygon') {\n        for (i = 0; i < geom.length; i++) {\n            addLine(simplified, geom[i], tile, tolerance, type === 'Polygon', i === 0);\n        }\n\n    } else if (type === 'MultiPolygon') {\n\n        for (var k = 0; k < geom.length; k++) {\n            var polygon = geom[k];\n            for (i = 0; i < polygon.length; i++) {\n                addLine(simplified, polygon[i], tile, tolerance, true, i === 0);\n            }\n        }\n    }\n\n    if (simplified.length) {\n        var tags = feature.tags || null;\n        if (type === 'LineString' && options.lineMetrics) {\n            tags = {};\n            for (var key in feature.tags) tags[key] = feature.tags[key];\n            tags['mapbox_clip_start'] = geom.start / geom.size;\n            tags['mapbox_clip_end'] = geom.end / geom.size;\n        }\n        var tileFeature = {\n            geometry: simplified,\n            type: type === 'Polygon' || type === 'MultiPolygon' ? 3 :\n                type === 'LineString' || type === 'MultiLineString' ? 2 : 1,\n            tags: tags\n        };\n        if (feature.id !== null) {\n            tileFeature.id = feature.id;\n        }\n        tile.features.push(tileFeature);\n    }\n}\n\nfunction addLine(result, geom, tile, tolerance, isPolygon, isOuter) {\n    var sqTolerance = tolerance * tolerance;\n\n    if (tolerance > 0 && (geom.size < (isPolygon ? sqTolerance : tolerance))) {\n        tile.numPoints += geom.length / 3;\n        return;\n    }\n\n    var ring = [];\n\n    for (var i = 0; i < geom.length; i += 3) {\n        if (tolerance === 0 || geom[i + 2] > sqTolerance) {\n            tile.numSimplified++;\n            ring.push(geom[i]);\n            ring.push(geom[i + 1]);\n        }\n        tile.numPoints++;\n    }\n\n    if (isPolygon) rewind(ring, isOuter);\n\n    result.push(ring);\n}\n\nfunction rewind(ring, clockwise) {\n    var area = 0;\n    for (var i = 0, len = ring.length, j = len - 2; i < len; j = i, i += 2) {\n        area += (ring[i] - ring[j]) * (ring[i + 1] + ring[j + 1]);\n    }\n    if (area > 0 === clockwise) {\n        for (i = 0, len = ring.length; i < len / 2; i += 2) {\n            var x = ring[i];\n            var y = ring[i + 1];\n            ring[i] = ring[len - 2 - i];\n            ring[i + 1] = ring[len - 1 - i];\n            ring[len - 2 - i] = x;\n            ring[len - 1 - i] = y;\n        }\n    }\n}\n","\nimport convert from './convert';     // GeoJSON conversion and preprocessing\nimport clip from './clip';           // stripe clipping algorithm\nimport wrap from './wrap';           // date line processing\nimport transform from './transform'; // coordinate transformation\nimport createTile from './tile';     // final simplified tile generation\n\nexport default function geojsonvt(data, options) {\n    return new GeoJSONVT(data, options);\n}\n\nfunction GeoJSONVT(data, options) {\n    options = this.options = extend(Object.create(this.options), options);\n\n    var debug = options.debug;\n\n    if (debug) console.time('preprocess data');\n\n    if (options.maxZoom < 0 || options.maxZoom > 24) throw new Error('maxZoom should be in the 0-24 range');\n    if (options.promoteId && options.generateId) throw new Error('promoteId and generateId cannot be used together.');\n\n    var features = convert(data, options);\n\n    this.tiles = {};\n    this.tileCoords = [];\n\n    if (debug) {\n        console.timeEnd('preprocess data');\n        console.log('index: maxZoom: %d, maxPoints: %d', options.indexMaxZoom, options.indexMaxPoints);\n        console.time('generate tiles');\n        this.stats = {};\n        this.total = 0;\n    }\n\n    features = wrap(features, options);\n\n    // start slicing from the top tile down\n    if (features.length) this.splitTile(features, 0, 0, 0);\n\n    if (debug) {\n        if (features.length) console.log('features: %d, points: %d', this.tiles[0].numFeatures, this.tiles[0].numPoints);\n        console.timeEnd('generate tiles');\n        console.log('tiles generated:', this.total, JSON.stringify(this.stats));\n    }\n}\n\nGeoJSONVT.prototype.options = {\n    maxZoom: 14,            // max zoom to preserve detail on\n    indexMaxZoom: 5,        // max zoom in the tile index\n    indexMaxPoints: 100000, // max number of points per tile in the tile index\n    tolerance: 3,           // simplification tolerance (higher means simpler)\n    extent: 4096,           // tile extent\n    buffer: 64,             // tile buffer on each side\n    lineMetrics: false,     // whether to calculate line metrics\n    promoteId: null,        // name of a feature property to be promoted to feature.id\n    generateId: false,      // whether to generate feature ids. Cannot be used with promoteId\n    debug: 0                // logging level (0, 1 or 2)\n};\n\nGeoJSONVT.prototype.splitTile = function (features, z, x, y, cz, cx, cy) {\n\n    var stack = [features, z, x, y],\n        options = this.options,\n        debug = options.debug;\n\n    // avoid recursion by using a processing queue\n    while (stack.length) {\n        y = stack.pop();\n        x = stack.pop();\n        z = stack.pop();\n        features = stack.pop();\n\n        var z2 = 1 << z,\n            id = toID(z, x, y),\n            tile = this.tiles[id];\n\n        if (!tile) {\n            if (debug > 1) console.time('creation');\n\n            tile = this.tiles[id] = createTile(features, z, x, y, options);\n            this.tileCoords.push({z: z, x: x, y: y});\n\n            if (debug) {\n                if (debug > 1) {\n                    console.log('tile z%d-%d-%d (features: %d, points: %d, simplified: %d)',\n                        z, x, y, tile.numFeatures, tile.numPoints, tile.numSimplified);\n                    console.timeEnd('creation');\n                }\n                var key = 'z' + z;\n                this.stats[key] = (this.stats[key] || 0) + 1;\n                this.total++;\n            }\n        }\n\n        // save reference to original geometry in tile so that we can drill down later if we stop now\n        tile.source = features;\n\n        // if it's the first-pass tiling\n        if (!cz) {\n            // stop tiling if we reached max zoom, or if the tile is too simple\n            if (z === options.indexMaxZoom || tile.numPoints <= options.indexMaxPoints) continue;\n\n        // if a drilldown to a specific tile\n        } else {\n            // stop tiling if we reached base zoom or our target tile zoom\n            if (z === options.maxZoom || z === cz) continue;\n\n            // stop tiling if it's not an ancestor of the target tile\n            var m = 1 << (cz - z);\n            if (x !== Math.floor(cx / m) || y !== Math.floor(cy / m)) continue;\n        }\n\n        // if we slice further down, no need to keep source geometry\n        tile.source = null;\n\n        if (features.length === 0) continue;\n\n        if (debug > 1) console.time('clipping');\n\n        // values we'll use for clipping\n        var k1 = 0.5 * options.buffer / options.extent,\n            k2 = 0.5 - k1,\n            k3 = 0.5 + k1,\n            k4 = 1 + k1,\n            tl, bl, tr, br, left, right;\n\n        tl = bl = tr = br = null;\n\n        left  = clip(features, z2, x - k1, x + k3, 0, tile.minX, tile.maxX, options);\n        right = clip(features, z2, x + k2, x + k4, 0, tile.minX, tile.maxX, options);\n        features = null;\n\n        if (left) {\n            tl = clip(left, z2, y - k1, y + k3, 1, tile.minY, tile.maxY, options);\n            bl = clip(left, z2, y + k2, y + k4, 1, tile.minY, tile.maxY, options);\n            left = null;\n        }\n\n        if (right) {\n            tr = clip(right, z2, y - k1, y + k3, 1, tile.minY, tile.maxY, options);\n            br = clip(right, z2, y + k2, y + k4, 1, tile.minY, tile.maxY, options);\n            right = null;\n        }\n\n        if (debug > 1) console.timeEnd('clipping');\n\n        stack.push(tl || [], z + 1, x * 2,     y * 2);\n        stack.push(bl || [], z + 1, x * 2,     y * 2 + 1);\n        stack.push(tr || [], z + 1, x * 2 + 1, y * 2);\n        stack.push(br || [], z + 1, x * 2 + 1, y * 2 + 1);\n    }\n};\n\nGeoJSONVT.prototype.getTile = function (z, x, y) {\n    var options = this.options,\n        extent = options.extent,\n        debug = options.debug;\n\n    if (z < 0 || z > 24) return null;\n\n    var z2 = 1 << z;\n    x = ((x % z2) + z2) % z2; // wrap tile x coordinate\n\n    var id = toID(z, x, y);\n    if (this.tiles[id]) return transform(this.tiles[id], extent);\n\n    if (debug > 1) console.log('drilling down to z%d-%d-%d', z, x, y);\n\n    var z0 = z,\n        x0 = x,\n        y0 = y,\n        parent;\n\n    while (!parent && z0 > 0) {\n        z0--;\n        x0 = Math.floor(x0 / 2);\n        y0 = Math.floor(y0 / 2);\n        parent = this.tiles[toID(z0, x0, y0)];\n    }\n\n    if (!parent || !parent.source) return null;\n\n    // if we found a parent tile containing the original geometry, we can drill down from it\n    if (debug > 1) console.log('found parent tile z%d-%d-%d', z0, x0, y0);\n\n    if (debug > 1) console.time('drilling down');\n    this.splitTile(parent.source, z0, x0, y0, z, x, y);\n    if (debug > 1) console.timeEnd('drilling down');\n\n    return this.tiles[id] ? transform(this.tiles[id], extent) : null;\n};\n\nfunction toID(z, x, y) {\n    return (((1 << z) * y + x) * 32) + z;\n}\n\nfunction extend(dest, src) {\n    for (var i in src) dest[i] = src[i];\n    return dest;\n}\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/StyleSetEvaluator\";\nexport * from \"./lib/IMeshBuffers\";\nexport * from \"./lib/Outliner\";\nexport * from \"./lib/Expr\";\nexport * from \"./lib/ThreeBufferUtils\";\nexport * from \"./lib/GeoJsonDataType\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Components used for the decoding and styling of data that is used by the Datasources.\n *\n * @remarks\n * The DataSource Protocol package contains components used for the decoding and styling\n * of data that is used by the Datasources.\n * This code is shared between the ui-thread and the web-workers which are\n * used to parallelise the decoding of the data.\n * This module contains interfaces for choosing techniques form the techniques\n * catalog that are applied via the {@link Theme} files to draw geometries on the map canvas.\n *\n * @packageDocumentation\n */\n\nexport * from \"./lib/ColorUtils\";\nexport * from \"./lib/Expr\";\nexport * from \"./lib/Techniques\";\nexport * from \"./lib/TechniqueParams\";\nexport * from \"./lib/Theme\";\nexport * from \"./lib/PostEffects\";\nexport * from \"./lib/PropertyValue\";\nexport * from \"./lib/InterpolatedPropertyDefs\";\nexport * from \"./lib/WorkerServiceProtocol\";\nexport * from \"./lib/WorkerTilerProtocol\";\nexport * from \"./lib/WorkerDecoderProtocol\";\nexport * from \"./lib/ITileDecoder\";\nexport * from \"./lib/ITiler\";\nexport * from \"./lib/DecodedTile\";\nexport * from \"./lib/TileInfo\";\nexport * from \"./lib/GeoJsonDataType\";\nexport * from \"./lib/ThemeVisitor\";\nexport * from \"./lib/StringEncodedNumeral\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { assert } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { RGBA } from \"./RGBA\";\n\nconst SHIFT_TRANSPARENCY: number = 24;\nconst SHIFT_RED: number = 16;\nconst SHIFT_GREEN: number = 8;\nconst SHIFT_BLUE: number = 0;\n\n//    Allow bitwise operations for colors decoding\n\nconst HEX_FULL_CHANNEL: number = 0xff;\nconst HEX_RGB_MASK: number = 0xffffff;\nconst HEX_TRGB_MASK: number = 0xffffffff;\n\nconst tmpColor = new THREE.Color();\n\n/**\n * Utilities to convert RGBA colors encoded in custom number (hex) format to THREE.Color objects.\n *\n * The functions provided allows for conversion from and to our custom number based color format,\n * which contains transparency, red, green and blue color channels in a way that each channel\n * occupies 8 bits of resulting number (color format 0xTTRRGGBB).\n * In order to preserve compatibility with THREE.Color class and its hexadecimal color\n * representation, we do not store __alpha__ channel in encoded color's number, but replace it\n * with __transparency__ channel, which is simply opposite to alpha:\n * ```transparency = 0xFF - alpha```\n * Such channel value is stored on the oldest bits (octet) in the integral color (numeric) value,\n * so it is fully compatible with THREE.Color numerical representation (@see [[THREE.Color.getHex]],\n * [[THREE.Color.setHex]]).\n * See also [[getHexFromRgba]] and [[getRgbaFromHex]] for more info about conversion.\n */\nexport namespace ColorUtils {\n    /**\n     * Encodes RGBA channels in custom number coded format (represented in hex as 0xTTRRGGBB).\n     *\n     * We do not use direct alpha channel mapping to hex in order to preserve compatibility\n     * with THREE.js color format (0xRRGGBB). This is done by encoding transparency\n     * (255 - alpha) instead of alpha on the oldest bits, shifted by [[SHIFT_TRANSPARENCY]].\n     * This way simple 0xRRGGBB color is equal to 0x00RRGGBB without transparency and\n     * color defining transparency (alpha < 255) is always recognizable by the oldest\n     * bit set:\n     * ```typescript\n     * (color >> SHIFT_TRANSPARENCY) !== 0.\n     * ```\n     * @note All input components are floating points in <0, 1> range (inclusively).\n     * @note Although method encodes transparency channel in single number value, it is still\n     * compatible with THREE.js number based color coding (0xRRGGBB), so you may pass this value to\n     * [[THREE.Color]] c-tor, but keep in mind that transparency will be silently ignored.\n     */\n    export function getHexFromRgba(r: number, g: number, b: number, a: number): number {\n        assert(a >= 0 && a <= 1);\n        const t = HEX_FULL_CHANNEL - Math.floor(a * HEX_FULL_CHANNEL);\n        return (\n            (t << SHIFT_TRANSPARENCY) ^\n            ((r * HEX_FULL_CHANNEL) << SHIFT_RED) ^\n            ((g * HEX_FULL_CHANNEL) << SHIFT_GREEN) ^\n            ((b * HEX_FULL_CHANNEL) << SHIFT_BLUE)\n        );\n    }\n\n    /**\n     * Encodes RGB all color channels in single number with format 0xRRGGBB.\n     *\n     * All input channels should be in <0, 1> range (inclusively).\n     * See also [[getHexFromRgba]] for more information about [[THREE.Color]] compatibility.\n     *\n     * @note This method is fully compatible with THREE.js color encoding, so\n     * you may pass this value directly to THREE.Color c-tor.\n     */\n    export function getHexFromRgb(r: number, g: number, b: number): number {\n        assert(r >= 0 && r <= 1);\n        assert(g >= 0 && g <= 1);\n        assert(b >= 0 && b <= 1);\n        return (\n            ((r * HEX_FULL_CHANNEL) << SHIFT_RED) ^\n            ((g * HEX_FULL_CHANNEL) << SHIFT_GREEN) ^\n            ((b * HEX_FULL_CHANNEL) << SHIFT_BLUE)\n        );\n    }\n\n    /**\n     * Encode and convert HSL value to number coded color format (0xRRGGBB).\n     *\n     * @see getHexFromRgb.\n     * @param h - Hue component value between 0 and 1.\n     * @param s - Saturation value between 0 and 1.\n     * @param l - Lightness channel between 0 and 1.\n     */\n    export function getHexFromHsl(h: number, s: number, l: number): number {\n        assert(h >= 0 && h <= 1);\n        assert(s >= 0 && s <= 1);\n        assert(l >= 0 && l <= 1);\n        return tmpColor.setHSL(h, s, l).getHex();\n    }\n\n    /**\n     * Retrieve RGBA channels separately from number encoded custom color format.\n     *\n     * Provides an easy way for channels extraction (r, g, b, a) from custom number coded color\n     * format.\n     *\n     * @see getHexFromRgba.\n     * @param hex - The number encoded color value (0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns r, g, b, a channels in simple object, where each channel value is saved as floating\n     * point from 0 to 1 inclusively.\n     */\n    export function getRgbaFromHex(hex: number, target = new RGBA()): RGBA {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        target.r = ((hex >> SHIFT_RED) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL;\n        target.g = ((hex >> SHIFT_GREEN) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL;\n        target.b = ((hex >> SHIFT_BLUE) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL;\n        target.a =\n            (HEX_FULL_CHANNEL - ((hex >> SHIFT_TRANSPARENCY) & HEX_FULL_CHANNEL)) /\n            HEX_FULL_CHANNEL;\n        return target;\n    }\n\n    /**\n     * Determines if number encoded color contains alpha (opacity) defined and different then 255.\n     *\n     * @param hex - The number encoded color (0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns True if color has transparency defined.\n     */\n    export function hasAlphaInHex(hex: number): boolean {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        return hex >> SHIFT_TRANSPARENCY !== 0;\n    }\n\n    /**\n     * Retrieves alpha color channel from hex encoded color value.\n     *\n     * @see getHexFromRgba.\n     * @param hex - The number encoded color value (representable as 0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns The floating point alpha component in <0, 1> range.\n     */\n    export function getAlphaFromHex(hex: number): number {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        return (\n            ((HEX_FULL_CHANNEL - (hex >> SHIFT_TRANSPARENCY)) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL\n        );\n    }\n\n    /**\n     * Remove transparency info from the number coded color, makes it compatible with external libs.\n     *\n     * @see getAlphaFromHex.\n     * @param hex - The number encoded color value (representable as 0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns number coded color value representable as 0xRRGGBB in hex.\n     */\n    export function removeAlphaFromHex(hex: number): number {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        return hex & HEX_RGB_MASK;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    equirectangularProjection,\n    mercatorProjection,\n    normalizedEquirectangularProjection,\n    OrientedBox3,\n    Projection,\n    sphereProjection,\n    Vector3Like,\n    webMercatorProjection\n} from \"@here/harp-geoutils\";\n\nimport { Env } from \"./Expr\";\nimport { AttrEvaluationContext, evaluateTechniqueAttr } from \"./TechniqueAttr\";\nimport {\n    IndexedTechnique,\n    isLineMarkerTechnique,\n    isPoiTechnique,\n    isTextTechnique,\n    Technique\n} from \"./Techniques\";\nimport { TileInfo } from \"./TileInfo\";\n\n/**\n * This object has geometry data in the form of geometries buffers ready to be used by WebGL.\n * These geometries are not `three.js` objects. They are pure data stored as `ArrayBuffer`s and\n * metadata describing these buffers.\n */\nexport interface DecodedTile {\n    techniques: IndexedTechnique[];\n    geometries: Geometry[];\n    pathGeometries?: PathGeometry[];\n    textPathGeometries?: TextPathGeometry[];\n    textGeometries?: TextGeometry[]; // ### deprecate\n    poiGeometries?: PoiGeometry[];\n    tileInfo?: TileInfo;\n    decodeTime?: number; // time used to decode (in ms)\n\n    /**\n     * The default bounding box in [[Tile]] is based on the geo box of the tile.\n     * For data-sources that have 3d data this is not sufficient so the data-source can provide a\n     * more accurate bounding box once the data is decoded.\n     */\n    boundingBox?: OrientedBox3;\n\n    /**\n     * Data sources not defining a bounding box may define alternatively a maximum geometry height\n     * in meters. The bounding box of the resulting tile will be extended to encompass this height.\n     */\n    maxGeometryHeight?: number;\n\n    /**\n     * Data sources not defining a bounding box may define alternatively a minimum geometry height\n     * in meters. The bounding box of the resulting tile will be extended to encompass this height.\n     */\n    minGeometryHeight?: number;\n\n    /**\n     * Tile data Copyright holder identifiers.\n     *\n     * `id`s should be unique. It is recommended to build them from unique identifiers like\n     * registered domain names.\n     *\n     * @see [[CopyrightInfo]]\n     */\n    copyrightHolderIds?: string[];\n\n    /**\n     * List of {@link @here/harp-geoutils#TileKey}s stored as mortonCodes representing\n     * {@link @here/harp-mapview#Tile}s that have geometry covering this `Tile`.\n     */\n    dependencies?: number[];\n}\n\n/**\n * This object keeps the path of the geometry. Space of the path depends on the\n * use case, so could be either world or local tile space.\n */\nexport interface PathGeometry {\n    path: Vector3Like[];\n}\n\n/**\n * Attributes corresponding to some decoded geometry. It may be either a map\n * of multiple attributes or just a string with the geometry's feature id (id numbers are\n * deprecated).\n */\nexport type AttributeMap = {} | string | number;\n\n/**\n * This object keeps textual data together with metadata to place it on the map.\n */\nexport interface TextPathGeometry {\n    path: number[];\n    pathLengthSqr: number;\n    text: string;\n    technique: number;\n    objInfos?: AttributeMap;\n}\n\n/**\n * Returns an array with the data type specified as parameter.\n *\n * @param attr - specifies which type of data is being stored in the array\n */\nexport function getArrayConstructor(attr: BufferElementType) {\n    switch (attr) {\n        case \"float\":\n            return Float32Array;\n        case \"uint8\":\n            return Uint8Array;\n        case \"uint16\":\n            return Uint16Array;\n        case \"uint32\":\n            return Uint32Array;\n        case \"int8\":\n            return Int8Array;\n        case \"int16\":\n            return Int16Array;\n        case \"int32\":\n            return Int32Array;\n    }\n}\n\n/**\n * Structured clone compliant WebGL interleaved buffer with its metadata attached.\n */\nexport interface InterleavedBufferAttribute {\n    buffer: ArrayBufferLike;\n    stride: number;\n    type: BufferElementType;\n    attributes: Array<{\n        name: string;\n        itemSize: number;\n        offset: number;\n    }>;\n}\n\n/**\n * Geometry types supported by [[Geometry]] objects.\n */\nexport enum GeometryType {\n    Unspecified = 0,\n    Point,\n    Line,\n    SolidLine,\n    Text,\n    TextPath,\n    ExtrudedLine,\n    Polygon,\n    ExtrudedPolygon,\n    Object3D,\n    Other = 1000\n}\n\n/**\n * Structured clone compliant version of a `three.js` geometry object, consisting of buffers with\n * metadata for map features and objects for example roads, trees or parks.\n */\nexport interface Geometry {\n    type: GeometryType;\n    vertexAttributes?: BufferAttribute[];\n    interleavedVertexAttributes?: InterleavedBufferAttribute[];\n    index?: BufferAttribute;\n    edgeIndex?: BufferAttribute;\n    groups: Group[];\n    uuid?: string;\n\n    /**\n     * Optional sorted list of feature start indices. The indices point into the index attribute.\n     * Feature i starts at featureStarts[i] and ends at featureStarts[i+1]-1, except for the last\n     * feature, which ends at index[index.length-1].\n     */\n    featureStarts?: number[];\n\n    /**\n     * Optional sorted list of feature start indices for the outline geometry.\n     * Equivalent to {@link featureStarts} but pointing into the edgeIndex attribute.\n     */\n    edgeFeatureStarts?: number[];\n\n    /**\n     * Optional array of objects. It can be used to pass user data from the geometry to the mesh.\n     */\n    objInfos?: AttributeMap[];\n\n    /**\n     * Optional [[Array]] of [[Attachment]]s.\n     */\n    attachments?: Attachment[];\n}\n\n/**\n * Attachments together with [[Geometry]] define the meshes and the objects\n * of a [[Scene]].\n */\nexport interface Attachment {\n    /**\n     * The unique uuid of this [[Attachment]].\n     */\n    uuid?: string;\n\n    /**\n     * The name of this [[Attachment]].\n     */\n    name?: string;\n\n    /**\n     * The index [[BufferAttribute]]. If not provided the index\n     * buffer of the [[Geometry]] will be used.\n     */\n    index?: BufferAttribute;\n\n    /**\n     * Optional additional buffer index used to create an edge object.\n     */\n    edgeIndex?: BufferAttribute;\n\n    /**\n     * The draw [[Group]]]s of this [[Attachment]].\n     */\n    groups: Group[];\n}\n\n/**\n * The data stored in Buffers' elements can be of the following elementary types: float, signed or\n * unsigned integers (8-bit, 16-bit or 32-bit long).\n */\nexport type BufferElementType =\n    | \"float\"\n    | \"uint8\"\n    | \"uint16\"\n    | \"uint32\"\n    | \"int8\"\n    | \"int16\"\n    | \"int32\";\n\n/**\n * Structured clone compliant WebGL buffer and its metadata.\n */\nexport interface BufferAttribute {\n    name: string;\n    buffer: ArrayBufferLike;\n    type: BufferElementType;\n    itemCount: number;\n    normalized?: boolean;\n}\n\n/**\n * Structured clone compliant version of a `three.js` geometry object with text to be rendered.\n * It is composed of buffers with metadata for text objects.\n */\nexport interface TextGeometry {\n    positions: BufferAttribute;\n    texts: number[];\n    technique?: number;\n    stringCatalog: Array<string | undefined>;\n    objInfos?: AttributeMap[];\n}\n\n/**\n * Structured clone compliant version of a `three.js` geometry object with points of interest (POIs)\n * to be rendered. It is composed of buffers with metadata for POI objects.\n */\nexport interface PoiGeometry extends TextGeometry {\n    /**\n     * Names of the image texture or the name of the POI as indices into the array `stringCatalog`.\n     */\n    imageTextures?: number[];\n    // Angle in degrees from north clockwise specifying the directions the icons can be shifted.\n    offsetDirections?: number[];\n}\n\n/**\n * Structured clone compliant WebGL group object and its metadata.\n * Its purpose is to make working with groups of objects easier.\n */\nexport interface Group {\n    start: number;\n    count: number;\n    technique: number;\n\n    /**\n     * Contains tile offsets if its [[Geometry]] has been created.\n     */\n    createdOffsets?: number[];\n}\n\n/**\n * Returns the projection object specified in the parameter.\n *\n * @param projectionName - string describing projection to be used\n */\nexport function getProjection(projectionName: string): Projection | never {\n    switch (projectionName) {\n        case \"mercator\":\n            return mercatorProjection;\n        case \"webMercator\":\n            return webMercatorProjection;\n        case \"sphere\":\n            return sphereProjection;\n        case \"normalizedEquirectangular\":\n            return normalizedEquirectangularProjection;\n        case \"equirectangular\":\n            return equirectangularProjection;\n        default:\n            throw new Error(`Unknown projection ${projectionName}`);\n    } // switch\n}\n\n/**\n * String with the projection's name.\n *\n * @param projection - `Projection` object containing the name of the projection to retrieve\n */\nexport function getProjectionName(projection: Projection): string | never {\n    if (projection === mercatorProjection) {\n        return \"mercator\";\n    } else if (projection === webMercatorProjection) {\n        return \"webMercator\";\n    } else if (projection === sphereProjection) {\n        return \"sphere\";\n    } else if (projection === normalizedEquirectangularProjection) {\n        return \"normalizedEquirectangular\";\n    } else if (projection === equirectangularProjection) {\n        return \"equirectangular\";\n    }\n    throw new Error(\"Unknown projection\");\n}\n\n/**\n * @returns Feature id from the provided attribute map.\n * @internal\n */\nexport function getFeatureId(attributeMap: AttributeMap | undefined): string | number {\n    if (attributeMap === undefined) {\n        return 0;\n    }\n\n    if (typeof attributeMap === \"string\" || typeof attributeMap === \"number\") {\n        return attributeMap;\n    } else if (attributeMap.hasOwnProperty(\"$id\")) {\n        const id = (attributeMap as any).$id;\n\n        if (typeof id === \"string\" || typeof id === \"number\") {\n            return id;\n        }\n    }\n\n    return 0;\n}\n\n/**\n * Determine the name of (OMV) feature. It implements the special handling required\n * to determine the text content of a feature from its tags, which are passed in as the `env`.\n *\n * @param env - Environment containing the tags from the (OMV) feature.\n * @param useAbbreviation - `true` to use the abbreviation if available.\n * @param useIsoCode - `true` to use the tag \"iso_code\".\n * @param languages - List of languages to use, for example: Specify \"en\" to use the tag \"name_en\"\n *                  as the text of the string. Order reflects priority.\n */\nexport function getFeatureName(\n    env: Env,\n    basePropName: string | undefined,\n    useAbbreviation?: boolean,\n    useIsoCode?: boolean,\n    languages?: string[]\n): string | undefined {\n    let name;\n    if (basePropName === undefined) {\n        basePropName = \"name\";\n    }\n    if (useAbbreviation) {\n        const abbreviation = env.lookup(`${basePropName}:short`);\n        if (typeof abbreviation === \"string\" && abbreviation.length > 0) {\n            return abbreviation;\n        }\n    }\n    if (useIsoCode) {\n        const isoCode = env.lookup(`iso_code`);\n        if (typeof isoCode === \"string\" && isoCode.length > 0) {\n            return isoCode;\n        }\n    }\n    if (languages !== undefined) {\n        for (const lang of languages) {\n            name = env.lookup(`${basePropName}:${lang}`) ?? env.lookup(`${basePropName}_${lang}`);\n            if (typeof name === \"string\" && name.length > 0) {\n                return name;\n            }\n        }\n    }\n    name = env.lookup(basePropName);\n    if (typeof name === \"string\") {\n        return name;\n    }\n    return undefined;\n}\n\n/**\n * Determine the text string of the map feature. It implements the special handling required\n * to determine the text content of a feature from its tags, which are passed in as the `env`.\n *\n * @param feature - Feature, including properties from the (OMV) feature.\n * @param technique - technique defining how text should be created from feature\n * @param languages - List of languages to use, for example: Specify \"en\" to use the tag \"name_en\"\n *                  as the text of the string. Order reflects priority.\n */\nexport function getFeatureText(\n    context: Env | AttrEvaluationContext,\n    technique: Technique,\n    languages?: string[]\n): string | undefined {\n    let useAbbreviation: boolean | undefined;\n    let useIsoCode: boolean | undefined;\n    const env = context instanceof Env ? context : context.env;\n    let propName: string = \"name\";\n    if (\n        isTextTechnique(technique) ||\n        isPoiTechnique(technique) ||\n        isLineMarkerTechnique(technique)\n    ) {\n        if (technique.text !== undefined) {\n            return evaluateTechniqueAttr(context, technique.text);\n        }\n        if (technique.label !== undefined) {\n            propName = evaluateTechniqueAttr(context, technique.label)!;\n            if (typeof propName !== \"string\") {\n                return undefined;\n            }\n        }\n        useAbbreviation = technique.useAbbreviation;\n        useIsoCode = technique.useIsoCode;\n    }\n\n    return getFeatureName(env, propName, useAbbreviation, useIsoCode, languages);\n}\n\n/**\n * Determine whether to scale heights by the projection scale factor for geometry\n * using the given technique.\n * @remarks Unless explicitly defined, the scale factor to convert meters to world space units\n * won't be applied if the tile's level is less than a fixed storage level.\n * @param context - Context for evaluation of technique attributes.\n * @param technique - Technique to be evaluated.\n * @param tileLevel - The level of the tile where the geometry is stored.\n * @returns `true` if height must be scaled, `false` otherwise.\n */\nexport function scaleHeight(\n    context: Env | AttrEvaluationContext,\n    technique: Technique,\n    tileLevel: number\n): boolean {\n    const SCALED_HEIGHT_MIN_STORAGE_LEVEL = 12;\n    const useConstantHeight = evaluateTechniqueAttr(\n        context,\n        technique.constantHeight,\n        tileLevel < SCALED_HEIGHT_MIN_STORAGE_LEVEL\n    );\n    return !useConstantHeight;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * The type representing the value of a property.\n */\nexport type Value = null | boolean | number | string | object;\n\n/**\n * An interface defining a collection of named properties.\n *\n * @example\n * ```typescript\n * const properties: ValueMap = {\n *    $id: 123,\n *    color: \"rgba(255, 0, 0, 1)\"\n * }\n * ```\n */\nexport interface ValueMap {\n    [name: string]: Value;\n}\n\n/**\n * A class used to lookup properties by name.\n *\n * @remarks\n * Concrete implementation of `Env` like {@link MapEnv} are used\n * to resolve the property names used in {@link Expr | style expressions}.\n *\n * @example\n * ```typescript\n * const env = new MapEnv({\n *     kind: \"landuse\",\n * });\n *\n * const expr = Expr.fromJson([\"get\", \"kind\"]);\n *\n * const value = expr.evaluate(env);\n *\n * console.log(`kind is '${value}`);\n * ```\n */\nexport class Env {\n    /**\n     * Returns `true` if the given object is an instance of {@link Env}.\n     *\n     * @param object - The object to test.\n     */\n    static isEnv(object: any): object is Env {\n        return object instanceof Env;\n    }\n\n    /**\n     * Returns property in {@link Env} by name.\n     *\n     * @param name - Name of property.\n     */\n    lookup(name: string): Value | undefined {\n        return undefined;\n    }\n\n    /**\n     * Return an object containing all properties of this environment. (Here: empty object).\n     */\n    unmap(): ValueMap {\n        return {};\n    }\n}\n\n/**\n * `MapEnv` is a concrete implementation of {@link Env} that\n * creates a lookup environment from a set of properties.\n *\n * @example\n * ```typescript\n * const baseEnv = new MapEnv({\n *     $zoom: 14,\n * });\n *\n * // extends baseEnv with a the new binding (kind, \"landuse\").\n * const env = new MapEnv({ kind: \"landuse\" }, baseEnv);\n *\n * const zoom = env.lookup(\"$zoom\"); // zoom is 14\n * const kind = env.lookup(\"kind\"); // kind is is \"landuse\"\n *\n * const expr = Expr.fromJson([\"get\", \"kind\"]);\n * const value = expr.evaluate(env); // value is \"landuse\"\n * ```\n */\nexport class MapEnv extends Env {\n    constructor(readonly entries: ValueMap, private readonly parent?: Env) {\n        super();\n    }\n\n    /**\n     * Returns property in {@link Env} by name.\n     *\n     * @param name - Name of property.\n     * @override\n     */\n    lookup(name: string): Value | undefined {\n        if (this.entries.hasOwnProperty(name)) {\n            const value = this.entries[name];\n            if (value !== undefined) {\n                return value;\n            }\n        }\n        return this.parent ? this.parent.lookup(name) : undefined;\n    }\n\n    /**\n     * Return an object containing all properties of this environment, takes care of the parent\n     * object.\n     * @override\n     */\n    unmap(): ValueMap {\n        const obj: any = this.parent ? this.parent.unmap() : {};\n        for (const key in this.entries) {\n            if (this.entries.hasOwnProperty(key)) {\n                obj[key] = this.entries[key];\n            }\n        }\n        return obj;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport * as THREE from \"three\";\n\nimport { Env, Value } from \"./Env\";\nimport { ExprEvaluator, ExprEvaluatorContext, OperatorDescriptor } from \"./ExprEvaluator\";\nimport { ExprInstantiator, InstantiationContext } from \"./ExprInstantiator\";\nimport { ExprParser } from \"./ExprParser\";\nimport { ExprPool } from \"./ExprPool\";\nimport {\n    interpolatedPropertyDefinitionToJsonExpr,\n    isInterpolatedPropertyDefinition\n} from \"./InterpolatedPropertyDefs\";\nimport { Pixels } from \"./Pixels\";\nimport { RGBA } from \"./RGBA\";\nimport { Definition, Definitions, getDefinitionValue } from \"./Theme\";\n\nexport * from \"./Env\";\n\nconst exprEvaluator = new ExprEvaluator();\n\nconst exprInstantiator = new ExprInstantiator();\n\n/**\n * A visitor for {@link Expr} nodes.\n * @internal\n */\nexport interface ExprVisitor<Result, Context> {\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: Context): Result;\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: Context): Result;\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: Context): Result;\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: Context): Result;\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: Context): Result;\n    visitVarExpr(expr: VarExpr, context: Context): Result;\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: Context): Result;\n    visitCallExpr(expr: CallExpr, context: Context): Result;\n    visitLookupExpr(expr: LookupExpr, context: Context): Result;\n    visitMatchExpr(expr: MatchExpr, context: Context): Result;\n    visitCaseExpr(expr: CaseExpr, context: Context): Result;\n    visitStepExpr(expr: StepExpr, context: Context): Result;\n    visitInterpolateExpr(expr: InterpolateExpr, context: Context): Result;\n}\n\n/**\n * The dependencies of an {@link Expr}.\n * @internal\n */\nexport class ExprDependencies {\n    /**\n     * The properties needed to evaluate the {@link Expr}.\n     */\n    readonly properties = new Set<string>();\n\n    /**\n     * `true` if the expression depends on the feature state.\n     */\n    featureState?: boolean;\n\n    /**\n     * `true` if this expression cannot be cached.\n     */\n    volatile?: boolean;\n}\n\nclass ComputeExprDependencies implements ExprVisitor<void, ExprDependencies> {\n    static instance = new ComputeExprDependencies();\n\n    /**\n     * Gets the dependencies of an {@link Expr}.\n     *\n     * @param expr - The {@link Expr} to process.\n     * @param scope - The evaluation scope. Defaults to [[ExprScope.Value]].\n     * @param dependencies - The output [[Set]] of dependency names.\n     */\n    static of(expr: Expr) {\n        const dependencies = new ExprDependencies();\n        expr.accept(this.instance, dependencies);\n        return dependencies;\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitVarExpr(expr: VarExpr, context: ExprDependencies): void {\n        context.properties.add(expr.name);\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: ExprDependencies): void {\n        context.properties.add(expr.name);\n    }\n\n    visitCallExpr(expr: CallExpr, context: ExprDependencies): void {\n        expr.args.forEach(childExpr => childExpr.accept(this, context));\n\n        switch (expr.op) {\n            case \"dynamic-properties\":\n                context.volatile = true;\n                break;\n            case \"feature-state\":\n                context.featureState = true;\n                context.properties.add(\"$state\");\n                context.properties.add(\"$id\");\n                break;\n            case \"id\":\n                context.properties.add(\"$id\");\n                break;\n            case \"zoom\":\n            case \"world-ppi-scale\":\n            case \"world-discrete-ppi-scale\":\n                context.properties.add(\"$zoom\");\n                break;\n            case \"geometry-type\":\n                context.properties.add(\"$geometryType\");\n                break;\n            default:\n                break;\n        }\n    }\n\n    visitLookupExpr(expr: LookupExpr, context: ExprDependencies): void {\n        // Same behaviour as call expressions.\n        return this.visitCallExpr(expr, context);\n    }\n\n    visitMatchExpr(expr: MatchExpr, context: ExprDependencies): void {\n        expr.value.accept(this, context);\n        expr.branches.forEach(([_, branch]) => branch.accept(this, context));\n        expr.fallback.accept(this, context);\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: ExprDependencies): void {\n        expr.branches.forEach(([condition, branch]) => {\n            condition.accept(this, context);\n            branch.accept(this, context);\n        });\n        expr.fallback.accept(this, context);\n    }\n\n    visitStepExpr(expr: StepExpr, context: ExprDependencies): void {\n        expr.input.accept(this, context);\n        expr.defaultValue.accept(this, context);\n        expr.stops.forEach(([_, value]) => value.accept(this, context));\n    }\n\n    visitInterpolateExpr(expr: InterpolateExpr, context: ExprDependencies): void {\n        expr.input.accept(this, context);\n        expr.stops.forEach(([_, value]) => value.accept(this, context));\n    }\n}\n\n/**\n * A type represeting JSON values.\n */\nexport type JsonValue = null | boolean | number | string | JsonObject | JsonArray;\n\n/**\n * A type representing JSON arrays.\n */\nexport interface JsonArray extends Array<JsonValue> {}\n\n/**\n * A type representing JSON objects.\n */\nexport interface JsonObject {\n    [name: string]: JsonValue;\n}\n\n/**\n * The JSON representation of an {@link Expr} object.\n */\nexport type JsonExpr = JsonArray;\n\nexport function isJsonExpr(v: any): v is JsonExpr {\n    return Array.isArray(v) && v.length > 0 && typeof v[0] === \"string\";\n}\n\n/**\n * Internal state needed by {@link Expr.fromJSON} to resolve `\"ref\"` expressions.\n */\ninterface ReferenceResolverState {\n    definitions: Definitions;\n    lockedNames: Set<string>;\n    cache: Map<string, Expr>;\n}\n\n/**\n * The evaluation scope of an {@link Expr}.\n * @internal\n */\nexport enum ExprScope {\n    /**\n     * The scope of an {@link Expr} used as value of an attribute.\n     */\n    Value,\n\n    /**\n     * The scope of an {@link Expr} used in a [[Technique]] `when` condition.\n     */\n    Condition,\n\n    /**\n     * The scope of an {@link Expr} used as dynamic property attribute value.\n     */\n    Dynamic\n}\n\n/**\n * Abstract class representing the\n * {@link https://github.com/heremaps/harp.gl/blob/master/%40here/harp-datasource-protocol/StyleExpressions.md | style expressions}\n * used in {@link Theme}.\n */\nexport abstract class Expr {\n    /**\n     * Tests of given value is an {@link Expr}.\n     *\n     * @param value - The object to test.\n     */\n    static isExpr(value: any): value is Expr {\n        return value instanceof Expr;\n    }\n\n    /**\n     * Creates an expression from the given `code`.\n     *\n     * @param code - The code to parse.\n     * @returns The parsed {@link Expr}.\n     * @deprecated `string` encoded expression are deprecated. Use {@link Expr.fromJSON} instead.\n     */\n    static parse(code: string): Expr | never {\n        const parser = new ExprParser(code);\n        const expr = parser.parse();\n        return expr;\n    }\n\n    /**\n     * Creates a style expression from JSON.\n     *\n     * @remarks\n     * The optional set of {@link Theme.definitions | definitions} is used\n     * to resolve the {@link https://github.com/heremaps/harp.gl/blob/master/%40here/harp-datasource-protocol/StyleExpressions.md#ref | ref expressions}.\n     *\n     * @param json - JSON object representing the expression to parse.\n     * @param definitions - Optional set of definitions used to expand references.\n     * @param definitionExprCache - Optional cache of `Expr` instances\n     *\n     * @example\n     * ```typescript\n     * const expr = Expr.fromJSON([\"all\",\n     *     [\"==\", [\"geometry-type\"], \"LineString\"],\n     *     [\"has\", \"text\"]\n     * ]);\n     * ```\n     */\n    static fromJSON(\n        json: JsonValue,\n        definitions?: Definitions,\n        definitionExprCache?: Map<string, Expr>\n    ) {\n        const referenceResolverState: ReferenceResolverState | undefined =\n            definitions !== undefined\n                ? {\n                      definitions,\n                      lockedNames: new Set(),\n                      cache: definitionExprCache ?? new Map<string, Expr>()\n                  }\n                : undefined;\n\n        return parseNode(json, referenceResolverState);\n    }\n\n    private m_dependencies?: ExprDependencies;\n    private m_isDynamic?: boolean;\n\n    /**\n     * Evaluate an expression returning a {@link Value} object.\n     *\n     * @param env - The {@link Env} used to lookup symbols.\n     * @param scope - The evaluation scope. Defaults to [[ExprScope.Value]].\n     * @param cache - A cache of previously computed results.\n     */\n    evaluate(\n        env: Env,\n        scope: ExprScope = ExprScope.Value,\n        cache?: Map<Expr, Value>\n    ): Value | never {\n        return this.accept(\n            exprEvaluator,\n            new ExprEvaluatorContext(exprEvaluator, env, scope, cache)\n        );\n    }\n\n    /**\n     * Instantiates this {@link Expr}.\n     *\n     * @remarks\n     * references to the `get` and `has` operator using the given instantiation context.\n     *\n     * @param context - The [[InstantationContext]] used to resolve names.\n     */\n    instantiate(context: InstantiationContext): Expr {\n        return this.accept(exprInstantiator, context);\n    }\n\n    /**\n     * Gets the dependencies of this {@link Expr}.\n     */\n    dependencies(): ExprDependencies {\n        if (!this.m_dependencies) {\n            this.m_dependencies = ComputeExprDependencies.of(this);\n        }\n        return this.m_dependencies;\n    }\n\n    /**\n     * Create a unique object that is structurally equivalent to this {@link Expr}.\n     *\n     * @param pool - The [[ExprPool]] used to create a unique\n     * equivalent object of this {@link Expr}.\n     */\n    intern(pool: ExprPool): Expr {\n        return pool.add(this);\n    }\n\n    toJSON(): JsonValue {\n        return new ExprSerializer().serialize(this);\n    }\n\n    /**\n     * Returns `true` if a dynamic execution context is required to evaluate this {@link Expr}.\n     */\n    isDynamic(): boolean {\n        if (this.m_isDynamic === undefined) {\n            this.m_isDynamic = this.exprIsDynamic();\n        }\n        return this.m_isDynamic;\n    }\n\n    /**\n     * Visits this expression.\n     *\n     * @param visitor The visitor used to visit the expression.\n     * @param context The context passed to the vistor.\n     */\n    abstract accept<Result, Context>(\n        visitor: ExprVisitor<Result, Context>,\n        context: Context\n    ): Result;\n\n    /**\n     * Update the dynamic state of this {@link Expr}.\n     *\n     * `exprIsDynamic` must never be called directly.\n     * @internal\n     */\n    protected abstract exprIsDynamic(): boolean;\n}\n\n/**\n * @internal\n */\nexport type RelationalOp = \"<\" | \">\" | \"<=\" | \">=\";\n\n/**\n * @internal\n */\nexport type EqualityOp = \"~=\" | \"^=\" | \"$=\" | \"==\" | \"!=\";\n\n/**\n * @internal\n */\nexport type BinaryOp = RelationalOp | EqualityOp;\n\n/**\n * A node representing a `get` expression.\n * @internal\n */\nexport class VarExpr extends Expr {\n    constructor(readonly name: string) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitVarExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * A node representing a `literal` expression.\n * @internal\n */\nexport abstract class LiteralExpr extends Expr {\n    /**\n     * Create a [[LiteralExpr]] from the given value.\n     *\n     * @param value - A constant value.\n     */\n    static fromValue(value: Value): Expr {\n        switch (typeof value) {\n            case \"boolean\":\n                return new BooleanLiteralExpr(value);\n            case \"number\":\n                return new NumberLiteralExpr(value);\n            case \"string\":\n                return new StringLiteralExpr(value);\n            case \"object\":\n                return value === null ? NullLiteralExpr.instance : new ObjectLiteralExpr(value);\n            default:\n                throw new Error(`failed to create a literal from '${value}'`);\n        } // switch\n    }\n\n    abstract get value(): Value;\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * Null literal expression.\n * @internal\n */\nexport class NullLiteralExpr extends LiteralExpr {\n    static instance = new NullLiteralExpr();\n    /** @override */\n    readonly value: Value = null;\n\n    protected constructor() {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitNullLiteralExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * Boolean literal expression.\n * @internal\n */\nexport class BooleanLiteralExpr extends LiteralExpr {\n    constructor(readonly value: boolean) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitBooleanLiteralExpr(this, context);\n    }\n}\n\n/**\n * Number literal expression.\n * @internal\n */\nexport class NumberLiteralExpr extends LiteralExpr {\n    constructor(readonly value: number) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitNumberLiteralExpr(this, context);\n    }\n}\n\n/**\n * String literal expression.\n * @internal\n */\nexport class StringLiteralExpr extends LiteralExpr {\n    private m_promotedValue?: RGBA | Pixels | null;\n\n    constructor(readonly value: string) {\n        super();\n    }\n\n    /**\n     * Returns the value of parsing this string as [[RGBA]] or [[Pixels]] constant.\n     */\n    get promotedValue(): RGBA | Pixels | undefined {\n        if (this.m_promotedValue === undefined) {\n            this.m_promotedValue = RGBA.parse(this.value) ?? Pixels.parse(this.value) ?? null;\n        }\n        return this.m_promotedValue ?? undefined;\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitStringLiteralExpr(this, context);\n    }\n}\n\n/**\n * Object literal expression.\n * @internal\n */\nexport class ObjectLiteralExpr extends LiteralExpr {\n    constructor(readonly value: object) {\n        super();\n    }\n\n    get isArrayLiteral() {\n        return Array.isArray(this.value);\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitObjectLiteralExpr(this, context);\n    }\n}\n\n/**\n * A node reperesenting a `has` expression.\n * @internal\n */\nexport class HasAttributeExpr extends Expr {\n    constructor(readonly name: string) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitHasAttributeExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * A node representing a `call` expression.\n * @internal\n */\nexport class CallExpr extends Expr {\n    descriptor?: OperatorDescriptor;\n\n    constructor(readonly op: string, readonly args: Expr[]) {\n        super();\n    }\n\n    /**\n     * Returns the child nodes of this {@link Expr}.\n     *\n     * @deprecated Use {@link CallExpr.args} instead.\n     */\n    get children() {\n        return this.args;\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitCallExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        const descriptor = this.descriptor ?? ExprEvaluator.getOperator(this.op);\n\n        if (descriptor && descriptor.isDynamicOperator && descriptor.isDynamicOperator(this)) {\n            return true;\n        }\n\n        return this.args.some(e => e.isDynamic());\n    }\n}\n\n/**\n * A `lookup` expression is a call expression using the `lookup` operator. Then only difference is\n * that the lookup table definition (first argument) is cached as a map for fast search\n * (see {@link ExprEvaluator.visitLookupExpr}).\n * @internal\n */\n\nexport class LookupExpr extends CallExpr {\n    /**\n     * Creates a lookup expression from a {@link JsonArray}.\n     * @param node The {@link JsonArray} to parse.\n     * @param referenceResolverState Used to resolve references to definitions.\n     * @returns A LookupExpr instance.\n     */\n    static parseArray(node: JsonArray, referenceResolverState?: ReferenceResolverState): Expr {\n        const lookupTableNode = node[1];\n        if (lookupTableNode === undefined) {\n            throw new Error(\"missing lookup table in 'lookup' expression\");\n        }\n\n        const lookupTableExpr = parseNode(lookupTableNode, referenceResolverState);\n        if (!Array.isArray(lookupTableNode) || !(lookupTableExpr instanceof ObjectLiteralExpr)) {\n            throw new Error(\n                `Invalid lookup table expression for operator 'lookup'. It must be a literal or a ref to one.`\n            );\n        }\n        const lookupTable = lookupTableExpr.value;\n        if (!Array.isArray(lookupTable)) {\n            throw new Error(\n                `Invalid lookup table type (${typeof lookupTable}) for operator 'lookup'`\n            );\n        }\n\n        // Skip the operator name and the lookup table and parse the rest of the arguments. Then add\n        // the lookup table expr as first argument.\n        const args = node.slice(2).map(childExpr => parseNode(childExpr, referenceResolverState));\n        args.unshift(lookupTableExpr);\n\n        return new LookupExpr(args);\n    }\n\n    /**\n     * Constructs a LookupExpr instance.\n     * @param args Arguments of the lookup expression. At least an argument for the lookup table.\n     */\n    constructor(readonly args: Expr[]) {\n        super(\"lookup\", args);\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitLookupExpr(this, context);\n    }\n}\n\n/**\n * The labels of a {@link MatchExpr} expression.\n * @internal\n */\nexport type MatchLabel = number | string | number[] | string[];\n\n/**\n * A node representing a `match` expression.\n * @internal\n */\nexport class MatchExpr extends Expr {\n    /**\n     * Tests if the given JSON node is a valid label for the `\"match\"` operator.\n     *\n     * @param node - A JSON value.\n     */\n    static isValidMatchLabel(node: JsonValue): node is MatchLabel {\n        switch (typeof node) {\n            case \"number\":\n            case \"string\":\n                return true;\n            case \"object\":\n                if (!Array.isArray(node) || node.length === 0) {\n                    return false;\n                }\n                const elementTy = typeof node[0];\n                if (elementTy === \"number\" || elementTy === \"string\") {\n                    return node.every(t => typeof t === elementTy);\n                }\n                return false;\n            default:\n                return false;\n        } // switch\n    }\n\n    constructor(\n        readonly value: Expr,\n        readonly branches: Array<[MatchLabel, Expr]>,\n        readonly fallback: Expr\n    ) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitMatchExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return (\n            this.value.isDynamic() ||\n            this.branches.some(([_, branch]) => branch.isDynamic()) ||\n            this.fallback.isDynamic()\n        );\n    }\n}\n\n/**\n * A node representing a `case` expression.\n * @internal\n */\nexport class CaseExpr extends Expr {\n    constructor(readonly branches: Array<[Expr, Expr]>, readonly fallback: Expr) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitCaseExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return (\n            this.branches.some(([cond, branch]) => cond.isDynamic() || branch.isDynamic()) ||\n            this.fallback.isDynamic()\n        );\n    }\n}\n\n/**\n * A node representing a `step` expression.\n * @internal\n */\nexport class StepExpr extends Expr {\n    constructor(\n        readonly input: Expr,\n        readonly defaultValue: Expr,\n        readonly stops: Array<[number, Expr]>\n    ) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitStepExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic(): boolean {\n        return (\n            this.input.isDynamic() ||\n            this.defaultValue.isDynamic() ||\n            this.stops.some(([_, value]) => value.isDynamic())\n        );\n    }\n}\n\n/**\n * The type of the interpolation mode.\n */\nexport type InterpolateMode = [\"discrete\"] | [\"linear\"] | [\"cubic\"] | [\"exponential\", number];\n\n/**\n * A node representing an `interpolate` expression.\n * @internal\n */\nexport class InterpolateExpr extends Expr {\n    constructor(\n        readonly mode: InterpolateMode,\n        readonly input: Expr,\n        readonly stops: Array<[number, Expr]>\n    ) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitInterpolateExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic(): boolean {\n        return this.input.isDynamic() || this.stops.some(([_, value]) => value.isDynamic());\n    }\n}\n\n/**\n * Serializes the Expr to JSON.\n *\n * @internal\n */\nclass ExprSerializer implements ExprVisitor<JsonValue, void> {\n    serialize(expr: Expr): JsonValue {\n        return expr.accept(this, undefined);\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: void): JsonValue {\n        return null;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: void): JsonValue {\n        return expr.value;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: void): JsonValue {\n        return expr.value;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: void): JsonValue {\n        return expr.value;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: void): JsonValue {\n        if (expr.value instanceof THREE.Vector2) {\n            return [\"make-vector\", expr.value.x, expr.value.y];\n        } else if (expr.value instanceof THREE.Vector3) {\n            return [\"make-vector\", expr.value.x, expr.value.y, expr.value.z];\n        } else if (expr.value instanceof THREE.Vector4) {\n            return [\"make-vector\", expr.value.x, expr.value.y, expr.value.z, expr.value.w];\n        }\n        return [\"literal\", expr.value as JsonObject];\n    }\n\n    visitVarExpr(expr: VarExpr, context: void): JsonValue {\n        return [\"get\", expr.name];\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: void): JsonValue {\n        return [\"has\", expr.name];\n    }\n\n    visitCallExpr(expr: CallExpr, context: void): JsonValue {\n        return [expr.op, ...expr.args.map(childExpr => this.serialize(childExpr))];\n    }\n\n    visitLookupExpr(expr: LookupExpr, context: void): JsonValue {\n        // Same serialization as call expressions.\n        return this.visitCallExpr(expr, context);\n    }\n\n    visitMatchExpr(expr: MatchExpr, context: void): JsonValue {\n        const branches: JsonValue[] = [];\n        for (const [label, body] of expr.branches) {\n            branches.push(label, this.serialize(body));\n        }\n        return [\"match\", this.serialize(expr.value), ...branches, this.serialize(expr.fallback)];\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: void): JsonValue {\n        const branches: JsonValue[] = [];\n        for (const [condition, body] of expr.branches) {\n            branches.push(this.serialize(condition), this.serialize(body));\n        }\n        return [\"case\", ...branches, this.serialize(expr.fallback)];\n    }\n\n    visitStepExpr(expr: StepExpr, context: void): JsonValue {\n        const result: JsonArray = [\"step\"];\n        result.push(this.serialize(expr.input));\n        result.push(this.serialize(expr.defaultValue));\n        expr.stops.forEach(([key, value]) => {\n            result.push(key);\n            result.push(this.serialize(value));\n        });\n        return result;\n    }\n\n    visitInterpolateExpr(expr: InterpolateExpr, context: void): JsonValue {\n        const result: JsonArray = [\"interpolate\", expr.mode];\n        result.push(this.serialize(expr.input));\n        expr.stops.forEach(([key, value]) => {\n            result.push(key);\n            result.push(this.serialize(value));\n        });\n        return result;\n    }\n}\n\nfunction parseNode(\n    node: JsonValue,\n    referenceResolverState: ReferenceResolverState | undefined\n): Expr {\n    if (Array.isArray(node)) {\n        return parseCall(node, referenceResolverState);\n    } else if (node === null) {\n        return NullLiteralExpr.instance;\n    } else if (typeof node === \"boolean\") {\n        return new BooleanLiteralExpr(node);\n    } else if (typeof node === \"number\") {\n        return new NumberLiteralExpr(node);\n    } else if (typeof node === \"string\") {\n        return new StringLiteralExpr(node);\n    }\n    throw new Error(`failed to create expression from: ${JSON.stringify(node)}`);\n}\n\nfunction parseCall(node: JsonArray, referenceResolverState?: ReferenceResolverState): Expr {\n    const op = node[0];\n\n    if (typeof op !== \"string\") {\n        throw new Error(\"expected a builtin function name\");\n    }\n\n    switch (op) {\n        case \"!has\":\n        case \"!in\":\n            return new CallExpr(\"!\", [parseCall([op.slice(1), ...node.slice(1)])]);\n\n        case \"ref\":\n            return resolveReference(node, referenceResolverState);\n\n        case \"get\":\n            return parseGetExpr(node, referenceResolverState);\n\n        case \"has\":\n            return parseHasExpr(node, referenceResolverState);\n\n        case \"literal\":\n            return parseLiteralExpr(node);\n\n        case \"match\":\n            return parseMatchExpr(node, referenceResolverState);\n\n        case \"case\":\n            return parseCaseExpr(node, referenceResolverState);\n\n        case \"interpolate\":\n            return parseInterpolateExpr(node, referenceResolverState);\n\n        case \"step\":\n            return parseStepExpr(node, referenceResolverState);\n\n        case \"lookup\":\n            return LookupExpr.parseArray(node, referenceResolverState);\n\n        default:\n            return makeCallExpr(op, node, referenceResolverState);\n    } // switch\n}\n\nfunction parseGetExpr(node: JsonArray, referenceResolverState?: ReferenceResolverState) {\n    if (node[2] !== undefined) {\n        return makeCallExpr(\"get\", node, referenceResolverState);\n    }\n    const name = node[1];\n    if (typeof name !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n    return new VarExpr(name);\n}\n\nfunction parseHasExpr(node: JsonArray, referenceResolverState?: ReferenceResolverState) {\n    if (node[2] !== undefined) {\n        return makeCallExpr(\"has\", node, referenceResolverState);\n    }\n    const name = node[1];\n    if (typeof name !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n    return new HasAttributeExpr(name);\n}\n\nfunction parseLiteralExpr(node: JsonArray) {\n    const obj = node[1];\n    if (obj === null || typeof obj !== \"object\") {\n        throw new Error(\"expected an object or array literal\");\n    }\n    return new ObjectLiteralExpr(obj);\n}\n\nfunction parseMatchExpr(node: JsonArray, referenceResolverState?: ReferenceResolverState) {\n    if (node.length < 4) {\n        throw new Error(\"not enough arguments\");\n    }\n    if (!(node.length % 2)) {\n        throw new Error(\"fallback is missing in 'match' expression\");\n    }\n    const value = parseNode(node[1], referenceResolverState);\n    const conditions: Array<[MatchLabel, Expr]> = [];\n    for (let i = 2; i < node.length - 1; i += 2) {\n        const label = node[i];\n        if (!MatchExpr.isValidMatchLabel(label)) {\n            throw new Error(`'${JSON.stringify(label)}' is not a valid label for 'match'`);\n        }\n        const expr = parseNode(node[i + 1], referenceResolverState);\n        conditions.push([label, expr]);\n    }\n    const fallback = parseNode(node[node.length - 1], referenceResolverState);\n    return new MatchExpr(value, conditions, fallback);\n}\n\nfunction parseCaseExpr(node: JsonArray, referenceResolverState?: ReferenceResolverState) {\n    if (node.length < 3) {\n        throw new Error(\"not enough arguments\");\n    }\n    if (node.length % 2) {\n        throw new Error(\"fallback is missing in 'case' expression\");\n    }\n    const branches: Array<[Expr, Expr]> = [];\n    for (let i = 1; i < node.length - 1; i += 2) {\n        const condition = parseNode(node[i], referenceResolverState);\n        const expr = parseNode(node[i + 1], referenceResolverState);\n        branches.push([condition, expr]);\n    }\n    const caseFallback = parseNode(node[node.length - 1], referenceResolverState);\n    return new CaseExpr(branches, caseFallback);\n}\n\nfunction isInterpolationMode(object: any): object is InterpolateMode {\n    if (!Array.isArray(object)) {\n        return false;\n    }\n    switch (object[0]) {\n        case \"discrete\":\n        case \"linear\":\n        case \"cubic\":\n        case \"exponential\":\n            return true;\n        default:\n            return false;\n    }\n}\n\nfunction parseInterpolateExpr(node: JsonArray, referenceResolverState?: ReferenceResolverState) {\n    const mode: InterpolateMode = node[1] as any;\n    if (!isInterpolationMode(mode)) {\n        throw new Error(\"expected an interpolation type\");\n    }\n    if (mode[0] === \"exponential\" && typeof mode[1] !== \"number\") {\n        throw new Error(\"expected the base of the exponential interpolation\");\n    }\n    const input = node[2] !== undefined ? parseNode(node[2], referenceResolverState) : undefined;\n    if (!Expr.isExpr(input)) {\n        throw new Error(`expected the input of the interpolation`);\n    }\n    if (node.length === 3 || !(node.length % 2)) {\n        throw new Error(\"invalid number of samples\");\n    }\n\n    const stops: Array<[number, Expr]> = [];\n    for (let i = 3; i < node.length - 1; i += 2) {\n        const key = node[i] as number;\n        const value = parseNode(node[i + 1], referenceResolverState);\n        stops.push([key, value]);\n    }\n    return new InterpolateExpr(mode, input, stops);\n}\n\nfunction parseStepExpr(node: JsonArray, referenceResolverState?: ReferenceResolverState) {\n    if (node.length < 2) {\n        throw new Error(\"expected the input of the 'step' operator\");\n    }\n    if (node.length < 3 || !(node.length % 2)) {\n        throw new Error(\"not enough arguments\");\n    }\n    const input = parseNode(node[1], referenceResolverState);\n    const defaultValue = parseNode(node[2], referenceResolverState);\n    const stops: Array<[number, Expr]> = [];\n    for (let i = 3; i < node.length; i += 2) {\n        const key = node[i] as number;\n        const value = parseNode(node[i + 1], referenceResolverState);\n        stops.push([key, value]);\n    }\n    return new StepExpr(input, defaultValue, stops);\n}\n\nfunction makeCallExpr(\n    op: string,\n    node: any[],\n    referenceResolverState?: ReferenceResolverState\n): Expr {\n    return new CallExpr(\n        op,\n        node.slice(1).map(childExpr => parseNode(childExpr, referenceResolverState))\n    );\n}\n\nfunction resolveReference(node: JsonArray, referenceResolverState?: ReferenceResolverState) {\n    if (typeof node[1] !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n    if (referenceResolverState === undefined) {\n        throw new Error(`ref used with no definitions`);\n    }\n    const name = node[1] as string;\n\n    if (referenceResolverState.lockedNames.has(name)) {\n        throw new Error(`circular referene to '${name}'`);\n    }\n\n    if (!(name in referenceResolverState.definitions)) {\n        throw new Error(`definition '${name}' not found`);\n    }\n\n    const cachedEntry = referenceResolverState.cache.get(name);\n    if (cachedEntry !== undefined) {\n        return cachedEntry;\n    }\n    let definitionEntry = referenceResolverState.definitions[name] as any;\n    let result: Expr;\n    const definitionValue: Definition = getDefinitionValue(definitionEntry);\n    if (isInterpolatedPropertyDefinition(definitionValue)) {\n        // found a reference to an interpolation using\n        // the deprecated object-like syntax.\n        return Expr.fromJSON(interpolatedPropertyDefinitionToJsonExpr(definitionEntry));\n    } else if (isJsonExpr(definitionValue)) {\n        definitionEntry = definitionValue;\n    } else {\n        return Expr.fromJSON(definitionValue);\n    }\n\n    if (isJsonExpr(definitionEntry)) {\n        referenceResolverState.lockedNames.add(name);\n        try {\n            result = parseNode(definitionEntry, referenceResolverState);\n        } finally {\n            referenceResolverState.lockedNames.delete(name);\n        }\n    } else {\n        throw new Error(`unsupported definition ${name}`);\n    }\n    referenceResolverState.cache.set(name, result);\n    return result;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    Env,\n    Expr,\n    ExprScope,\n    ExprVisitor,\n    HasAttributeExpr,\n    InterpolateExpr,\n    LiteralExpr,\n    LookupExpr,\n    MatchExpr,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StepExpr,\n    StringLiteralExpr,\n    Value,\n    VarExpr\n} from \"./Expr\";\nimport { ArrayOperators } from \"./operators/ArrayOperators\";\nimport { CastOperators } from \"./operators/CastOperators\";\nimport { ColorOperators } from \"./operators/ColorOperators\";\nimport { ComparisonOperators } from \"./operators/ComparisonOperators\";\nimport { FeatureOperators } from \"./operators/FeatureOperators\";\nimport { FlowOperators } from \"./operators/FlowOperators\";\nimport { MapOperators } from \"./operators/MapOperators\";\nimport { MathOperators } from \"./operators/MathOperators\";\nimport { MiscOperators } from \"./operators/MiscOperators\";\nimport { ObjectOperators } from \"./operators/ObjectOperators\";\nimport { StringOperators } from \"./operators/StringOperators\";\nimport { TypeOperators } from \"./operators/TypeOperators\";\nimport { VectorOperators } from \"./operators/VectorOperators\";\nimport { Pixels } from \"./Pixels\";\nimport { RGBA } from \"./RGBA\";\n\nexport interface OperatorDescriptor {\n    /**\n     * Returns `true` if this operator requires a dynamic execution context (e.g. [\"zoom\"]).\n     */\n    isDynamicOperator?: (call: CallExpr) => boolean;\n\n    /**\n     * Evaluates the given expression.\n     */\n    call: (context: ExprEvaluatorContext, call: CallExpr) => Value;\n\n    /**\n     * Partial evaluate the `call` expression using the given `context`.\n     */\n    partialEvaluate?: (context: ExprEvaluatorContext, call: CallExpr) => Value;\n}\n\nexport interface OperatorDescriptorMap {\n    [name: string]: OperatorDescriptor;\n}\n\nconst operatorDescriptors = new Map<string, OperatorDescriptor>();\n\n/**\n * Promote string literals and values to color and pixel constants.\n *\n * @hidden\n * @internal\n */\nfunction promoteValue(context: ExprEvaluatorContext, expr: Expr): Value {\n    if (expr instanceof StringLiteralExpr) {\n        return expr.promotedValue ?? expr.value;\n    }\n\n    const value = context.evaluate(expr);\n\n    if (typeof value === \"string\") {\n        return RGBA.parse(value) ?? Pixels.parse(value) ?? value;\n    }\n\n    return value;\n}\n\nfunction cubicInterpolate(\n    context: ExprEvaluatorContext,\n    interp: InterpolateExpr,\n    t: number\n): Value {\n    if (t < interp.stops[0][0]) {\n        return promoteValue(context, interp.stops[0][1]);\n    } else if (t >= interp.stops[interp.stops.length - 1][0]) {\n        return promoteValue(context, interp.stops[interp.stops.length - 1][1]);\n    }\n\n    // indices\n    const i1 = interp.stops.findIndex(stop => stop[0] > t);\n    const i0 = Math.max(0, i1 - 1);\n    const iP = i0 === 0 ? i1 : i0 - 1;\n    const iN = i1 < interp.stops.length - 1 ? i1 + 1 : i1 - 1;\n\n    // keys\n    const tP = interp.stops[iP][0];\n    const t0 = interp.stops[i0][0];\n    const t1 = interp.stops[i1][0];\n    const tN = interp.stops[iN][0];\n\n    const dt = (t1 - t0) * 0.5;\n    const wP = dt / (t0 - tP);\n    const wN = dt / (tN - t1);\n    const p = (t - t0) / (t1 - t0);\n    const pp = p * p;\n    const ppp = pp * p;\n\n    // coefficients\n    const cP = -wP * ppp + 2 * wP * pp - wP * p;\n    const c0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n    const c1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n    const cN = wN * ppp - wN * pp;\n\n    // values\n    const vP = promoteValue(context, interp.stops[iP][1]);\n    const v0 = promoteValue(context, interp.stops[i0][1]);\n    const v1 = promoteValue(context, interp.stops[i1][1]);\n    const vN = promoteValue(context, interp.stops[iN][1]);\n\n    if (\n        typeof vP === \"number\" &&\n        typeof v0 === \"number\" &&\n        typeof v1 === \"number\" &&\n        typeof vN === \"number\"\n    ) {\n        return cP * vP + c0 * v0 + c1 * v1 + cN * vN;\n    } else if (\n        vP instanceof RGBA &&\n        v0 instanceof RGBA &&\n        v1 instanceof RGBA &&\n        vN instanceof RGBA\n    ) {\n        return new RGBA(\n            THREE.MathUtils.clamp(cP * vP.r + c0 * v0.r + c1 * v1.r + cN * vN.r, 0, 1),\n            THREE.MathUtils.clamp(cP * vP.g + c0 * v0.g + c1 * v1.g + cN * vN.g, 0, 1),\n            THREE.MathUtils.clamp(cP * vP.b + c0 * v0.b + c1 * v1.b + cN * vN.b, 0, 1),\n            THREE.MathUtils.clamp(cP * vP.a + c0 * v0.a + c1 * v1.a + cN * vN.a, 0, 1)\n        );\n    } else if (\n        vP instanceof Pixels &&\n        v0 instanceof Pixels &&\n        v1 instanceof Pixels &&\n        vN instanceof Pixels\n    ) {\n        return new Pixels(cP * vP.value + c0 * v0.value + c1 * v1.value + cN * vN.value);\n    } else if (\n        vP instanceof THREE.Color &&\n        v0 instanceof THREE.Color &&\n        v1 instanceof THREE.Color &&\n        vN instanceof THREE.Color\n    ) {\n        return new THREE.Color(\n            cP * vP.r + c0 * v0.r + c1 * v1.r + cN * vN.r,\n            cP * vP.g + c0 * v0.g + c1 * v1.g + cN * vN.g,\n            cP * vP.b + c0 * v0.b + c1 * v1.b + cN * vN.b\n        );\n    } else if (\n        vP instanceof THREE.Vector2 &&\n        v0 instanceof THREE.Vector2 &&\n        v1 instanceof THREE.Vector2 &&\n        vN instanceof THREE.Vector2\n    ) {\n        return new THREE.Vector2(\n            cP * vP.x + c0 * v0.x + c1 * v1.x + cN * vN.x,\n            cP * vP.y + c0 * v0.y + c1 * v1.y + cN * vN.y\n        );\n    } else if (\n        vP instanceof THREE.Vector3 &&\n        v0 instanceof THREE.Vector3 &&\n        v1 instanceof THREE.Vector3 &&\n        vN instanceof THREE.Vector3\n    ) {\n        return new THREE.Vector3(\n            cP * vP.x + c0 * v0.x + c1 * v1.x + cN * vN.x,\n            cP * vP.y + c0 * v0.y + c1 * v1.y + cN * vN.y,\n            cP * vP.z + c0 * v0.z + c1 * v1.z + cN * vN.z\n        );\n    } else if (\n        vP instanceof THREE.Vector4 &&\n        v0 instanceof THREE.Vector4 &&\n        v1 instanceof THREE.Vector4 &&\n        vN instanceof THREE.Vector4\n    ) {\n        return new THREE.Vector4(\n            cP * vP.x + c0 * v0.x + c1 * v1.x + cN * vN.x,\n            cP * vP.y + c0 * v0.y + c1 * v1.y + cN * vN.y,\n            cP * vP.z + c0 * v0.z + c1 * v1.z + cN * vN.z,\n            cP * vP.w + c0 * v0.w + c1 * v1.w + cN * vN.w\n        );\n    } else if (Array.isArray(vP) && Array.isArray(v0) && Array.isArray(v1) && Array.isArray(vN)) {\n        const N = vP.length;\n        const r: number[] = [];\n        for (let i = 0; i < N; ++i) {\n            r[i] = cP * vP[i] + c0 * v0[i] + c1 * v1[i] + cN * vN[i];\n        }\n        return r;\n    }\n\n    throw new Error(`failed to interpolate values`);\n}\n\n/*\n * @hidden\n */\nexport class ExprEvaluatorContext {\n    constructor(\n        readonly evaluator: ExprEvaluator,\n        readonly env: Env,\n        readonly scope: ExprScope,\n        readonly cache?: Map<Expr, Value>\n    ) {}\n\n    /**\n     * Evaluate the given expression.\n     *\n     * @param expr - The {@link Expr} to evaluate.\n     */\n    evaluate(expr: Expr | undefined) {\n        if (expr === undefined) {\n            throw new Error(\"Failed to evaluate expression\");\n        }\n\n        const cachedResult = this.cache?.get(expr);\n\n        if (cachedResult !== undefined) {\n            return cachedResult;\n        }\n\n        const result = expr.accept(this.evaluator, this);\n        this.cache?.set(expr, result);\n        return result;\n    }\n\n    /**\n     * Wraps the given value in an {@link Expr} if needed.\n     *\n     * @param value -\n     */\n    wrapValue(value: Value | Expr): Expr {\n        return Expr.isExpr(value) ? value : LiteralExpr.fromValue(value);\n    }\n}\n\n/**\n * [[ExprEvaluator]] is used to evaluate {@link Expr} in a given environment.\n *\n * @hidden\n */\nexport class ExprEvaluator implements ExprVisitor<Value, ExprEvaluatorContext> {\n    static defineOperator(op: string, builtin: OperatorDescriptor) {\n        operatorDescriptors.set(op, builtin);\n    }\n\n    static defineOperators(builtins: OperatorDescriptorMap) {\n        Object.getOwnPropertyNames(builtins).forEach(p => {\n            this.defineOperator(p, builtins[p]);\n        });\n    }\n\n    /**\n     * Returns the [[OperatorDescriptor]] for the given operator name.\n     * @hidden\n     */\n    static getOperator(op: string): OperatorDescriptor | undefined {\n        return operatorDescriptors.get(op);\n    }\n\n    visitVarExpr(expr: VarExpr, context: ExprEvaluatorContext): Value {\n        const value = context.env.lookup(expr.name);\n        return value !== undefined ? value : null;\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: ExprEvaluatorContext): Value {\n        return null;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: ExprEvaluatorContext): Value {\n        return context.env.lookup(expr.name) !== undefined;\n    }\n\n    visitMatchExpr(match: MatchExpr, context: ExprEvaluatorContext): Value {\n        const r = context.evaluate(match.value);\n        for (const [label, body] of match.branches) {\n            if (Array.isArray(label) && (label as any[]).includes(r)) {\n                return context.evaluate(body);\n            } else if (label === r) {\n                return context.evaluate(body);\n            }\n        }\n        return context.evaluate(match.fallback);\n    }\n\n    visitCaseExpr(match: CaseExpr, context: ExprEvaluatorContext): Value {\n        if (context.scope === ExprScope.Value) {\n            const firstDynamicCondition = match.branches.findIndex(([condition, _]) =>\n                condition.isDynamic()\n            );\n\n            if (firstDynamicCondition !== -1) {\n                let branches: Array<[Expr, Expr]> | undefined;\n\n                for (let i = 0; i < match.branches.length; ++i) {\n                    const [condition, body] = match.branches[i];\n\n                    const evaluatedCondition = context.evaluate(condition);\n                    const evaluatedBody = context.evaluate(body);\n\n                    if (i < firstDynamicCondition && Boolean(evaluatedCondition)) {\n                        return evaluatedBody;\n                    }\n\n                    if (!Expr.isExpr(evaluatedCondition) && !Boolean(evaluatedCondition)) {\n                        // skip this branch, it constantly evaluates to false.\n                        continue;\n                    }\n\n                    if (branches === undefined) {\n                        branches = [];\n                    }\n\n                    branches?.push([\n                        context.wrapValue(evaluatedCondition),\n                        context.wrapValue(evaluatedBody)\n                    ]);\n\n                    if (!Expr.isExpr(evaluatedCondition) && Boolean(evaluatedCondition)) {\n                        // skip unreachble expressions\n                        return new CaseExpr(branches, LiteralExpr.fromValue(null));\n                    }\n                }\n\n                const fallback = context.evaluate(match.fallback);\n\n                return branches === undefined\n                    ? fallback\n                    : new CaseExpr(branches, context.wrapValue(fallback));\n            }\n        }\n\n        for (const [condition, body] of match.branches) {\n            if (context.evaluate(condition)) {\n                return context.evaluate(body);\n            }\n        }\n\n        return context.evaluate(match.fallback);\n    }\n\n    visitCallExpr(expr: CallExpr, context: ExprEvaluatorContext): Value {\n        const descriptor = expr.descriptor ?? operatorDescriptors.get(expr.op);\n\n        if (descriptor) {\n            expr.descriptor = descriptor;\n\n            let result: Value;\n\n            if (context.scope === ExprScope.Value && expr.isDynamic()) {\n                if (expr.descriptor.partialEvaluate) {\n                    return expr.descriptor.partialEvaluate(context, expr);\n                }\n\n                const args = expr.args.map(arg => {\n                    return context.wrapValue(context.evaluate(arg));\n                });\n\n                if (args.every((arg, i) => arg === expr.args[i])) {\n                    return expr;\n                }\n\n                result = new CallExpr(expr.op, args);\n            } else {\n                result = descriptor.call(context, expr);\n            }\n\n            return result;\n        }\n\n        throw new Error(`undefined operator '${expr.op}'`);\n    }\n\n    visitLookupExpr(expr: LookupExpr, context: ExprEvaluatorContext): Value {\n        // Same behaviour as call expressions.\n        return this.visitCallExpr(expr, context);\n    }\n\n    visitStepExpr(expr: StepExpr, context: ExprEvaluatorContext): Value {\n        if (context.scope === ExprScope.Value) {\n            const input = context.evaluate(expr.input);\n            const defaultValue = context.evaluate(expr.defaultValue);\n            return new StepExpr(\n                context.wrapValue(input),\n                context.wrapValue(defaultValue),\n                expr.stops.map(([key, value]) => {\n                    const v = context.evaluate(value);\n                    return [key, context.wrapValue(v)];\n                })\n            );\n        } else {\n            const input = context.evaluate(expr.input);\n\n            if (typeof input !== \"number\") {\n                throw new Error(`input '${input}' must be a number`);\n            }\n\n            if (input < expr.stops[0][0]) {\n                return context.evaluate(expr.defaultValue);\n            }\n\n            let index = expr.stops.findIndex(s => s[0] > input);\n\n            if (index === -1) {\n                index = expr.stops.length;\n            }\n\n            return context.evaluate(expr.stops[index - 1][1]);\n        }\n    }\n\n    visitInterpolateExpr(expr: InterpolateExpr, context: ExprEvaluatorContext): Value {\n        if (context.scope === ExprScope.Value) {\n            const input = context.evaluate(expr.input);\n            return new InterpolateExpr(\n                expr.mode,\n                context.wrapValue(input),\n                expr.stops.map(([key, value]) => {\n                    const v = context.evaluate(value);\n                    return [key, context.wrapValue(v)];\n                })\n            );\n        } else {\n            const param = context.evaluate(expr.input);\n\n            if (typeof param !== \"number\") {\n                throw new Error(`input must be a number`);\n            }\n\n            if (expr.mode[0] === \"cubic\") {\n                return cubicInterpolate(context, expr, param);\n            }\n\n            const keyIndex = expr.stops.findIndex(stop => stop[0] > param);\n\n            if (keyIndex === -1) {\n                // all the keys are smaller than the parameter\n                return context.evaluate(expr.stops[expr.stops.length - 1][1]);\n            } else if (keyIndex === 0) {\n                return context.evaluate(expr.stops[0][1]);\n            }\n\n            const [key, value] = expr.stops[keyIndex];\n            const [prevKey, prevValue] = expr.stops[keyIndex - 1];\n\n            const v0 = promoteValue(context, prevValue);\n\n            let t = 0;\n\n            switch (expr.mode[0]) {\n                case \"discrete\":\n                    return v0;\n\n                case \"linear\":\n                    t = (param - prevKey) / (key - prevKey);\n                    break;\n\n                case \"exponential\": {\n                    const base = expr.mode[1];\n                    t =\n                        base === 1\n                            ? (param - prevKey) / (key - prevKey)\n                            : (Math.pow(base, param - prevKey) - 1) /\n                              (Math.pow(base, key - prevKey) - 1);\n\n                    break;\n                }\n\n                default:\n                    throw new Error(\n                        `interpolation mode ${JSON.stringify(expr.mode)} is not supported`\n                    );\n            }\n\n            const v1 = promoteValue(context, value);\n\n            if (typeof v0 === \"number\" && typeof v1 === \"number\") {\n                return THREE.MathUtils.lerp(v0, v1, t);\n            } else if (v0 instanceof RGBA && v1 instanceof RGBA) {\n                return v0.clone().lerp(v1, t);\n            } else if (v0 instanceof Pixels && v1 instanceof Pixels) {\n                return new Pixels(THREE.MathUtils.lerp(v0.value, v1.value, t));\n            } else if (v0 instanceof THREE.Color && v1 instanceof THREE.Color) {\n                return v0.clone().lerp(v1, t);\n            } else if (v0 instanceof THREE.Vector2 && v1 instanceof THREE.Vector2) {\n                return v0.clone().lerp(v1, t);\n            } else if (v0 instanceof THREE.Vector3 && v1 instanceof THREE.Vector3) {\n                return v0.clone().lerp(v1, t);\n            } else if (v0 instanceof THREE.Vector4 && v1 instanceof THREE.Vector4) {\n                return v0.clone().lerp(v1, t);\n            } else if (Array.isArray(v0) && Array.isArray(v1) && v0.length === v1.length) {\n                return v0.map((x, i) => THREE.MathUtils.lerp(x, (v1 as number[])[i], t));\n            }\n\n            throw new Error(`todo: mix(${JSON.stringify(v0)}, ${JSON.stringify(v1)}, ${t})`);\n        }\n    }\n}\n\nExprEvaluator.defineOperators(CastOperators);\nExprEvaluator.defineOperators(ComparisonOperators);\nExprEvaluator.defineOperators(MathOperators);\nExprEvaluator.defineOperators(StringOperators);\nExprEvaluator.defineOperators(ColorOperators);\nExprEvaluator.defineOperators(TypeOperators);\nExprEvaluator.defineOperators(MiscOperators);\nExprEvaluator.defineOperators(FlowOperators);\nExprEvaluator.defineOperators(ArrayOperators);\nExprEvaluator.defineOperators(ObjectOperators);\nExprEvaluator.defineOperators(FeatureOperators);\nExprEvaluator.defineOperators(MapOperators);\nExprEvaluator.defineOperators(VectorOperators);\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env } from \"./Env\";\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    Expr,\n    ExprScope,\n    ExprVisitor,\n    HasAttributeExpr,\n    InterpolateExpr,\n    LiteralExpr,\n    LookupExpr,\n    MatchExpr,\n    MatchLabel,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StepExpr,\n    StringLiteralExpr,\n    VarExpr\n} from \"./Expr\";\n\nexport interface InstantiationContext {\n    /**\n     * The {@link Env} used to lookup for names.\n     */\n    env: Env;\n\n    /**\n     * The names to preserve during the instantiation.\n     */\n    preserve?: Set<string>;\n}\n\nconst emptyEnv = new Env();\n\n/**\n * @hidden\n */\nexport class ExprInstantiator implements ExprVisitor<Expr, InstantiationContext> {\n    visitNullLiteralExpr(expr: NullLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitVarExpr(expr: VarExpr, context: InstantiationContext): Expr {\n        if (context.preserve && context.preserve.has(expr.name)) {\n            return expr;\n        }\n        const value = context.env.lookup(expr.name);\n        return LiteralExpr.fromValue(value !== undefined ? value : null);\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: InstantiationContext): Expr {\n        if (context.preserve && context.preserve.has(expr.name)) {\n            return expr;\n        }\n        const value = context.env.lookup(expr.name) !== undefined;\n        return LiteralExpr.fromValue(value);\n    }\n\n    private visitCallExprImpl(\n        expr: CallExpr,\n        context: InstantiationContext,\n        constructor: (op: string, args: Expr[]) => CallExpr\n    ): Expr {\n        const args = expr.args.map(arg => arg.accept(this, context));\n        if (args.some((a, i) => a !== expr.args[i])) {\n            return constructor(expr.op, args);\n        }\n        return expr;\n    }\n\n    visitCallExpr(expr: CallExpr, context: InstantiationContext): Expr {\n        return this.visitCallExprImpl(expr, context, (op: string, args: Expr[]) => {\n            return new CallExpr(op, args);\n        });\n    }\n\n    visitLookupExpr(expr: LookupExpr, context: InstantiationContext): Expr {\n        return this.visitCallExprImpl(expr, context, (op: string, args: Expr[]) => {\n            return new LookupExpr(args);\n        });\n    }\n\n    visitMatchExpr(match: MatchExpr, context: InstantiationContext): Expr {\n        const value = match.value.accept(this, context);\n\n        if (value instanceof LiteralExpr) {\n            const r = value.value;\n            for (const [label, body] of match.branches) {\n                if (Array.isArray(label) && (label as any[]).includes(r)) {\n                    return body.accept(this, context);\n                } else if (label === r) {\n                    return body.accept(this, context);\n                }\n            }\n            return match.fallback.accept(this, context);\n        }\n\n        let changed = match.value !== value;\n\n        const branches: Array<[MatchLabel, Expr]> = match.branches.map(([label, branch]) => {\n            const newBranch = branch.accept(this, context);\n            if (newBranch !== branch) {\n                changed = true;\n            }\n            return [label, newBranch];\n        });\n\n        const fallback = match.fallback.accept(this, context);\n\n        if (fallback !== match.fallback) {\n            changed = true;\n        }\n\n        return changed ? new MatchExpr(value, branches, fallback) : match;\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: InstantiationContext): Expr {\n        const branches: Array<[Expr, Expr]> = [];\n\n        let changed = false;\n\n        for (const [condition, branch] of expr.branches) {\n            const newCondition = condition.accept(this, context);\n            const deps = newCondition.dependencies();\n            if (!condition.isDynamic() && deps.properties.size === 0) {\n                if (Boolean(newCondition.evaluate(emptyEnv, ExprScope.Condition))) {\n                    return branch.accept(this, context);\n                }\n            } else {\n                if (newCondition !== condition) {\n                    changed = true;\n                }\n                branches.push([newCondition, branch]);\n            }\n        }\n\n        if (branches.length === 0) {\n            // all the conditions of this CaseExpr evaluated\n            // to false, so the resulting of instantiating this CaseExpr\n            // is the same as instantiating its fallback expression.\n            return expr.fallback.accept(this, context);\n        }\n\n        if (branches.length !== expr.branches.length) {\n            // the number of branches changed, this means that\n            // some of the branches had constant expressions that\n            // evaluate to false. In this case the resulting\n            // `CaseExpr` has less branches.\n            changed = true;\n        }\n\n        // Instantiate the body of all the branches of this CaseExpr\n        // that have dynamic conditions.\n        branches.forEach(branch => {\n            const instantiatedBranch = branch[1].accept(this, context);\n\n            if (instantiatedBranch !== branch[1]) {\n                changed = true;\n            }\n\n            branch[1] = instantiatedBranch;\n        });\n\n        const fallback = expr.fallback.accept(this, context);\n\n        if (fallback !== expr.fallback) {\n            changed = true;\n        }\n\n        if (!changed) {\n            // nothing changed, return the old expression.\n            return expr;\n        }\n\n        return new CaseExpr(branches, fallback);\n    }\n\n    visitStepExpr(expr: StepExpr, context: InstantiationContext): Expr {\n        const input = expr.input.accept(this, context);\n        const defaultValue = expr.defaultValue.accept(this, context);\n        const stops: Array<[number, Expr]> = expr.stops.map(([key, value]) => [\n            key,\n            value.accept(this, context)\n        ]);\n        return new StepExpr(input, defaultValue, stops);\n    }\n\n    visitInterpolateExpr(expr: InterpolateExpr, context: InstantiationContext): Expr {\n        const input = expr.input.accept(this, context);\n        const stops: Array<[number, Expr]> = expr.stops.map(([key, value]) => [\n            key,\n            value.accept(this, context)\n        ]);\n        return new InterpolateExpr(expr.mode, input, stops);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    CallExpr,\n    EqualityOp,\n    Expr,\n    HasAttributeExpr,\n    LiteralExpr,\n    NumberLiteralExpr,\n    RelationalOp,\n    StringLiteralExpr,\n    VarExpr\n} from \"./Expr\";\n\n/**\n * Character value\n */\nenum Character {\n    Tab = 9,\n    Lf = 10,\n    Cr = 13,\n    Space = 32,\n    LParen = 40,\n    RParen = 41,\n    Comma = 44,\n    Dot = 46,\n    LBracket = 91,\n    Backslash = 92,\n    RBracket = 93,\n    _0 = 48,\n    _9 = 57,\n    _ = 95,\n    A = 64,\n    Z = 90,\n    a = 97,\n    z = 122,\n    DoubleQuote = 34,\n    SingleQuote = 39,\n    Exclaim = 33,\n    Equal = 61,\n    Caret = 94,\n    Tilde = 126,\n    Dollar = 36,\n    Less = 60,\n    Greater = 62,\n    Bar = 124,\n    Amp = 38\n}\n\n/**\n * Check if a codepoint is a whitespace character.\n */\nfunction isSpace(codepoint: number): boolean {\n    switch (codepoint) {\n        case Character.Tab:\n        case Character.Lf:\n        case Character.Cr:\n        case Character.Space:\n            return true;\n        default:\n            return false;\n    } // switch\n}\n\n/**\n * Check if codepoint is a digit character.\n */\nfunction isNumber(codepoint: number): boolean {\n    return codepoint >= Character._0 && codepoint <= Character._9;\n}\n\n/**\n * Check if codepoint is a letter character.\n */\nfunction isLetter(codepoint: number): boolean {\n    return (\n        (codepoint >= Character.a && codepoint <= Character.z) ||\n        (codepoint >= Character.A && codepoint <= Character.Z)\n    );\n}\n\n/**\n * Check if codepoint is either a digit or a letter character.\n */\nfunction isLetterOrNumber(codepoint: number): boolean {\n    return isLetter(codepoint) || isNumber(codepoint);\n}\n\n/**\n * Check if codepoint is an identification character: underscore, dollar sign, dot or bracket.\n */\nfunction isIdentChar(codepoint: number): boolean {\n    return (\n        isLetterOrNumber(codepoint) ||\n        codepoint === Character._ ||\n        codepoint === Character.Dollar ||\n        codepoint === Character.Dot ||\n        codepoint === Character.LBracket ||\n        codepoint === Character.RBracket\n    );\n}\n\n/**\n * Tokens used in theme grammar.\n */\nenum Token {\n    Eof = 0,\n    Error,\n    Identifier,\n    Number,\n    String,\n    Comma,\n    LParen,\n    RParen,\n    LBracket,\n    RBracket,\n    Exclaim,\n    TildeEqual,\n    CaretEqual,\n    DollarEqual,\n    EqualEqual,\n    ExclaimEqual,\n    Less,\n    Greater,\n    LessEqual,\n    GreaterEqual,\n    BarBar,\n    AmpAmp\n}\n\n/**\n * Maps a token to its string name.\n */\nfunction tokenSpell(token: Token): string {\n    switch (token) {\n        case Token.Eof:\n            return \"eof\";\n        case Token.Error:\n            return \"error\";\n        case Token.Identifier:\n            return \"identifier\";\n        case Token.Number:\n            return \"number\";\n        case Token.String:\n            return \"string\";\n        case Token.Comma:\n            return \",\";\n        case Token.LParen:\n            return \"(\";\n        case Token.RParen:\n            return \")\";\n        case Token.LBracket:\n            return \"[\";\n        case Token.RBracket:\n            return \"]\";\n        case Token.Exclaim:\n            return \"!\";\n        case Token.TildeEqual:\n            return \"~=\";\n        case Token.CaretEqual:\n            return \"^=\";\n        case Token.DollarEqual:\n            return \"$=\";\n        case Token.EqualEqual:\n            return \"==\";\n        case Token.ExclaimEqual:\n            return \"!=\";\n        case Token.Less:\n            return \"<\";\n        case Token.Greater:\n            return \">\";\n        case Token.LessEqual:\n            return \"<=\";\n        case Token.GreaterEqual:\n            return \">=\";\n        case Token.BarBar:\n            return \"||\";\n        case Token.AmpAmp:\n            return \"&&\";\n        default:\n            throw new Error(`invalid token ${token}`);\n    }\n}\n\n/**\n * Lexer class implementation.\n */\nclass Lexer {\n    private m_token: Token = Token.Error;\n    private m_index = 0;\n    private m_char: number = Character.Lf;\n    private m_text?: string;\n\n    constructor(readonly code: string) {}\n\n    /**\n     * Single lexer token.\n     */\n    token(): Token {\n        return this.m_token;\n    }\n\n    /**\n     * Parsed text.\n     */\n    text(): string {\n        return this.m_text ?? \"\";\n    }\n\n    /**\n     * Go to the next token.\n     */\n    next(): Token {\n        this.m_token = this.yylex();\n        if (this.m_token === Token.Error) {\n            throw new Error(`unexpected character ${this.m_char}`);\n        }\n        return this.m_token;\n    }\n\n    private yyinp(): void {\n        this.m_char = this.code.codePointAt(this.m_index++) ?? 0;\n    }\n\n    private yylex(): Token {\n        this.m_text = undefined;\n        while (isSpace(this.m_char)) {\n            this.yyinp();\n        }\n        if (this.m_char === 0) {\n            return Token.Eof;\n        }\n        const ch = this.m_char;\n        this.yyinp();\n        switch (ch) {\n            case Character.LParen:\n                return Token.LParen;\n            case Character.RParen:\n                return Token.RParen;\n            case Character.LBracket:\n                return Token.LBracket;\n            case Character.RBracket:\n                return Token.RBracket;\n            case Character.Comma:\n                return Token.Comma;\n            case Character.SingleQuote:\n            case Character.DoubleQuote: {\n                const start = this.m_index - 1;\n                while (this.m_char && this.m_char !== ch) {\n                    // ### TODO handle escape sequences\n                    this.yyinp();\n                }\n                if (this.m_char !== ch) {\n                    throw new Error(\"Unfinished string literal\");\n                }\n                this.yyinp();\n                this.m_text = this.code.substring(start, this.m_index - 2);\n                return Token.String;\n            }\n            case Character.Exclaim:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.ExclaimEqual;\n                }\n                return Token.Exclaim;\n            case Character.Caret:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.CaretEqual;\n                }\n                return Token.Error;\n            case Character.Tilde:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.TildeEqual;\n                }\n                return Token.Error;\n            case Character.Equal:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.EqualEqual;\n                }\n                return Token.Error;\n            case Character.Less:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.LessEqual;\n                }\n                return Token.Less;\n            case Character.Greater:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.GreaterEqual;\n                }\n                return Token.Greater;\n            case Character.Bar:\n                if (this.m_char === Character.Bar) {\n                    this.yyinp();\n                    return Token.BarBar;\n                }\n                return Token.Error;\n            case Character.Amp:\n                if (this.m_char === Character.Amp) {\n                    this.yyinp();\n                    return Token.AmpAmp;\n                }\n                return Token.Error;\n            default: {\n                const start = this.m_index - 2;\n                if (\n                    isLetter(ch) ||\n                    ch === Character._ ||\n                    (ch === Character.Dollar && isIdentChar(this.m_char))\n                ) {\n                    while (isIdentChar(this.m_char)) {\n                        this.yyinp();\n                    }\n                    this.m_text = this.code.substring(start, this.m_index - 1);\n                    return Token.Identifier;\n                } else if (isNumber(ch)) {\n                    while (isNumber(this.m_char)) {\n                        this.yyinp();\n                    }\n                    if (this.m_char === Character.Dot) {\n                        this.yyinp();\n                        while (isNumber(this.m_char)) {\n                            this.yyinp();\n                        }\n                    }\n                    this.m_text = this.code.substring(start, this.m_index - 1);\n                    return Token.Number;\n                } else if (ch === Character.Dollar) {\n                    if (this.m_char === Character.Equal) {\n                        this.yyinp();\n                        return Token.DollarEqual;\n                    }\n                    return Token.Error;\n                }\n            }\n        }\n        return Token.Error;\n    }\n}\n\nfunction getEqualityOp(token: Token): EqualityOp | undefined {\n    switch (token) {\n        case Token.TildeEqual:\n            return \"~=\";\n        case Token.CaretEqual:\n            return \"^=\";\n        case Token.DollarEqual:\n            return \"$=\";\n        case Token.EqualEqual:\n            return \"==\";\n        case Token.ExclaimEqual:\n            return \"!=\";\n        default:\n            return undefined;\n    } // switch\n}\n\nfunction getRelationalOp(token: Token): RelationalOp | undefined {\n    switch (token) {\n        case Token.Less:\n            return \"<\";\n        case Token.Greater:\n            return \">\";\n        case Token.LessEqual:\n            return \"<=\";\n        case Token.GreaterEqual:\n            return \">=\";\n        default:\n            return undefined;\n    } // switch\n}\n\nexport class ExprParser {\n    private readonly lex: Lexer;\n\n    constructor(code: string) {\n        this.lex = new Lexer(code);\n        this.lex.next();\n    }\n\n    parse(): Expr | never {\n        return this.parseLogicalOr();\n    }\n\n    private yyexpect(token: Token): void | never {\n        if (this.lex.token() !== token) {\n            throw new Error(\n                `Syntax error: Expected token '${tokenSpell(token)}' but ` +\n                    `found '${tokenSpell(this.lex.token())}'`\n            );\n        }\n        this.lex.next();\n    }\n\n    private parsePrimary(): Expr | never {\n        switch (this.lex.token()) {\n            case Token.Identifier: {\n                const text = this.lex.text();\n                switch (text) {\n                    case \"has\":\n                        this.lex.next(); // skip has keyword\n                        this.yyexpect(Token.LParen);\n                        const hasAttribute = this.lex.text();\n                        this.yyexpect(Token.Identifier);\n                        this.yyexpect(Token.RParen);\n                        return new HasAttributeExpr(hasAttribute);\n                    case \"length\":\n                        this.lex.next(); // skip length keyword\n                        this.yyexpect(Token.LParen);\n                        const value = this.parseLogicalOr();\n                        this.yyexpect(Token.RParen);\n                        return new CallExpr(\"length\", [value]);\n                    default:\n                        const expr = new VarExpr(text);\n                        this.lex.next();\n                        return expr;\n                }\n            }\n\n            case Token.LParen: {\n                this.lex.next();\n                const expr = this.parseLogicalOr();\n                this.yyexpect(Token.RParen);\n                return expr;\n            }\n\n            default:\n                return this.parseLiteral();\n        } // switch\n    }\n\n    private parseLiteral(): NumberLiteralExpr | StringLiteralExpr | never {\n        switch (this.lex.token()) {\n            case Token.Number: {\n                const expr = new NumberLiteralExpr(parseFloat(this.lex.text()));\n                this.lex.next();\n                return expr;\n            }\n            case Token.String: {\n                const expr = new StringLiteralExpr(this.lex.text());\n                this.lex.next();\n                return expr;\n            }\n            default:\n                throw new Error(\"Syntax error\");\n        } // switch\n    }\n\n    private parseUnary(): Expr | never {\n        if (this.lex.token() === Token.Exclaim) {\n            this.lex.next();\n            return new CallExpr(\"!\", [this.parseUnary()]);\n        }\n        return this.parsePrimary();\n    }\n\n    private parseRelational(): Expr | never {\n        let expr = this.parseUnary();\n        while (true) {\n            if (this.lex.token() === Token.Identifier && this.lex.text() === \"in\") {\n                this.lex.next();\n                this.yyexpect(Token.LBracket);\n                const elements = [this.parseLiteral()];\n                while (this.lex.token() === Token.Comma) {\n                    this.lex.next();\n                    elements.push(this.parseLiteral());\n                }\n                this.yyexpect(Token.RBracket);\n                expr = new CallExpr(\"in\", [\n                    expr,\n                    LiteralExpr.fromValue(elements.map(({ value }) => value))\n                ]);\n            } else {\n                const op = getRelationalOp(this.lex.token());\n                if (op === undefined) {\n                    break;\n                }\n                this.lex.next();\n                const right = this.parseUnary();\n                expr = new CallExpr(op, [expr, right]);\n            }\n        }\n        return expr;\n    }\n\n    private parseEquality(): Expr | never {\n        let expr = this.parseRelational();\n        while (true) {\n            let op: string | undefined = getEqualityOp(this.lex.token());\n\n            if (op === undefined) {\n                break;\n            }\n\n            if (op === \"~=\") {\n                op = \"in\";\n            }\n\n            this.lex.next();\n            const right = this.parseRelational();\n            expr = new CallExpr(op, [expr, right]);\n        }\n        return expr;\n    }\n\n    private parseLogicalAnd(): Expr | never {\n        const expr = this.parseEquality();\n\n        if (this.lex.token() !== Token.AmpAmp) {\n            return expr;\n        }\n\n        const expressions: Expr[] = [expr];\n\n        do {\n            this.lex.next();\n            expressions.push(this.parseEquality());\n        } while (this.lex.token() === Token.AmpAmp);\n\n        return new CallExpr(\"all\", expressions);\n    }\n\n    private parseLogicalOr(): Expr | never {\n        const expr = this.parseLogicalAnd();\n\n        if (this.lex.token() !== Token.BarBar) {\n            return expr;\n        }\n\n        const expressions: Expr[] = [expr];\n\n        do {\n            this.lex.next();\n            expressions.push(this.parseLogicalAnd());\n        } while (this.lex.token() === Token.BarBar);\n\n        return new CallExpr(\"any\", expressions);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Value } from \"./Env\";\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    Expr,\n    ExprVisitor,\n    HasAttributeExpr,\n    InterpolateExpr,\n    LookupExpr,\n    MatchExpr,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StepExpr,\n    StringLiteralExpr,\n    VarExpr\n} from \"./Expr\";\n\n/**\n * [[ExprPool]] maintains a set of unique interned {@link Expr} objects.\n *\n * @hidden\n */\nexport class ExprPool implements ExprVisitor<Expr, void> {\n    private readonly m_booleanLiterals = new Map<boolean, BooleanLiteralExpr>();\n    private readonly m_numberLiterals = new Map<number, NumberLiteralExpr>();\n    private readonly m_stringLiterals = new Map<string, StringLiteralExpr>();\n    private readonly m_objectLiterals = new Map<object, ObjectLiteralExpr>();\n    private readonly m_arrayLiterals: ObjectLiteralExpr[] = [];\n    private readonly m_varExprs = new Map<string, VarExpr>();\n    private readonly m_hasAttributeExprs = new Map<string, HasAttributeExpr>();\n    private readonly m_matchExprs: MatchExpr[] = [];\n    private readonly m_caseExprs: CaseExpr[] = [];\n    private readonly m_interpolateExprs: InterpolateExpr[] = [];\n    private readonly m_stepExprs: StepExpr[] = [];\n    private readonly m_callExprs = new Map<string, CallExpr[]>();\n\n    /**\n     * Add `expr` to this [[ExprPool]] and return a unique {@link Expr}\n     * object that is structurally equivalent to `expr`.\n     *\n     * @param expr - The {@link Expr} to add to this [[ExprPool]].\n     * @returns A unique {@link Expr} that is structurally equivalent to `expr`.\n     */\n    add(expr: Expr): Expr {\n        return expr.accept(this, undefined);\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: void): Expr {\n        return NullLiteralExpr.instance;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: void): Expr {\n        const e = this.m_booleanLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_booleanLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: void): Expr {\n        const e = this.m_numberLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_numberLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: void): Expr {\n        const e = this.m_stringLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_stringLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: void): Expr {\n        const e = this.m_objectLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n\n        if (Array.isArray(expr.value)) {\n            const array = expr.value as Value[];\n\n            const r = this.m_arrayLiterals.find(literal => {\n                const elements = literal.value as Value[];\n                if (elements.length !== array.length) {\n                    return false;\n                }\n                return array.every((x, i) => x === elements[i]);\n            });\n\n            if (r !== undefined) {\n                return r;\n            }\n\n            this.m_arrayLiterals.push(expr);\n        }\n\n        this.m_objectLiterals.set(expr.value, expr);\n\n        return expr;\n    }\n\n    visitVarExpr(expr: VarExpr, context: void): Expr {\n        const e = this.m_varExprs.get(expr.name);\n        if (e) {\n            return e;\n        }\n        this.m_varExprs.set(expr.name, expr);\n        return expr;\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: void): Expr {\n        const e = this.m_hasAttributeExprs.get(expr.name);\n        if (e) {\n            return e;\n        }\n        this.m_hasAttributeExprs.set(expr.name, expr);\n        return expr;\n    }\n\n    visitMatchExpr(expr: MatchExpr, context: void): Expr {\n        const value = expr.value.accept(this, context);\n        const branches: typeof expr.branches = expr.branches.map(([label, body]) => [\n            label,\n            body.accept(this, context)\n        ]);\n        const fallback = expr.fallback.accept(this, context);\n        for (const candidate of this.m_matchExprs) {\n            if (candidate.value !== value) {\n                continue;\n            }\n            if (candidate.fallback !== fallback) {\n                continue;\n            }\n            if (candidate.branches.length !== branches.length) {\n                continue;\n            }\n            let branchesMatching = true;\n            for (let i = 0; i < branches.length; i++) {\n                if (\n                    branches[i][0] !== candidate.branches[i][0] ||\n                    branches[i][1] !== candidate.branches[i][1]\n                ) {\n                    branchesMatching = false;\n                    break;\n                }\n            }\n            if (branchesMatching) {\n                return candidate;\n            }\n        }\n        const r = new MatchExpr(value, branches, fallback);\n        this.m_matchExprs.push(r);\n        return r;\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: void): Expr {\n        const branches: typeof expr.branches = expr.branches.map(([condition, body]) => [\n            condition.accept(this, context),\n            body.accept(this, context)\n        ]);\n        const fallback = expr.fallback.accept(this, context);\n\n        for (const candidate of this.m_caseExprs) {\n            if (candidate.fallback !== fallback) {\n                continue;\n            }\n            if (candidate.branches.length !== branches.length) {\n                continue;\n            }\n            let branchesMatching = true;\n            for (let i = 0; i < branches.length; i++) {\n                if (\n                    branches[i][0] !== candidate.branches[i][0] ||\n                    branches[i][1] !== candidate.branches[i][1]\n                ) {\n                    branchesMatching = false;\n                    break;\n                }\n            }\n            if (branchesMatching) {\n                return candidate;\n            }\n        }\n\n        const r = new CaseExpr(branches, fallback);\n        this.m_caseExprs.push(r);\n        return r;\n    }\n\n    private visitCallExprImpl(\n        expr: CallExpr,\n        context: void,\n        constructor: (op: string, args: Expr[]) => CallExpr\n    ): Expr {\n        // rewrite the actual arguments\n        const expressions = expr.args.map(childExpr => childExpr.accept(this, context));\n        // ensure we have a valid set of interned expressions for the calls\n        if (!this.m_callExprs.has(expr.op)) {\n            this.m_callExprs.set(expr.op, []);\n        }\n        // get the calls for the given operator.\n        const calls = this.m_callExprs.get(expr.op)!;\n        for (const call of calls) {\n            // check the number of arguments\n            if (call.args.length !== expressions.length) {\n                continue;\n            }\n            // find the index of the first mismatch.\n            let index = 0;\n            for (; index < call.args.length; ++index) {\n                if (call.args[index] !== expressions[index]) {\n                    break;\n                }\n            }\n            if (index === call.args.length) {\n                // no mismatch found, return the 'interned' call.\n                return call;\n            }\n        }\n        const e = constructor(expr.op, expressions);\n        e.descriptor = expr.descriptor;\n        calls.push(e);\n        return e;\n    }\n\n    visitCallExpr(expr: CallExpr, context: void): Expr {\n        return this.visitCallExprImpl(expr, context, (op: string, args: Expr[]) => {\n            return new CallExpr(op, args);\n        });\n    }\n\n    visitLookupExpr(expr: LookupExpr, context: void): Expr {\n        return this.visitCallExprImpl(expr, context, (op: string, args: Expr[]) => {\n            return new LookupExpr(args);\n        });\n    }\n\n    visitStepExpr(expr: StepExpr, context: void): Expr {\n        if (this.m_stepExprs.includes(expr)) {\n            return expr;\n        }\n        const input = expr.input.accept(this, context);\n        const defaultValue = expr.defaultValue.accept(this, context);\n        const stops: Array<[number, Expr]> = expr.stops.map(stop => {\n            const key = stop[0];\n            const value = stop[1].accept(this, context);\n            return value === stop[1] ? stop : [key, value];\n        });\n        for (const step of this.m_stepExprs) {\n            if (\n                step.input === input &&\n                step.defaultValue === defaultValue &&\n                stops.length === step.stops.length &&\n                stops.every(\n                    ([key, value], i) => key === step.stops[i][0] && value === step.stops[i][1]\n                )\n            ) {\n                return step;\n            }\n        }\n        const e = new StepExpr(input, defaultValue, stops);\n        this.m_stepExprs.push(e);\n        return e;\n    }\n\n    visitInterpolateExpr(expr: InterpolateExpr, context: void): Expr {\n        if (this.m_interpolateExprs.includes(expr)) {\n            return expr;\n        }\n        const input = expr.input.accept(this, context);\n        const stops: Array<[number, Expr]> = expr.stops.map(stop => {\n            const key = stop[0];\n            const value = stop[1].accept(this, context);\n            return value === stop[1] ? stop : [key, value];\n        });\n        for (const interp of this.m_interpolateExprs) {\n            if (\n                interp.input === input &&\n                interp.mode[0] === expr.mode[0] &&\n                interp.mode[1] === expr.mode[1] &&\n                stops.length === interp.stops.length &&\n                stops.every(\n                    ([key, value], i) => key === interp.stops[i][0] && value === interp.stops[i][1]\n                )\n            ) {\n                return interp;\n            }\n        }\n        const e = new InterpolateExpr(expr.mode, input, stops);\n        this.m_interpolateExprs.push(e);\n        return e;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Feature details contains `feature.id`, `feature.properties.featureClass` which provides\n * possibility to define style in theme for particular feature.\n */\nexport interface FeatureDetails {\n    featureId?: string;\n    featureClass?: string;\n}\n\n/**\n * Represents \"Point\" GeoJSON geometry object.\n */\nexport interface Point {\n    type: \"Point\";\n    coordinates: number[];\n}\n\n/**\n * Represents \"MultiPoint\" GeoJSON geometry object.\n */\nexport interface MultiPoint {\n    type: \"MultiPoint\";\n    coordinates: number[][];\n}\n\n/**\n * Represents \"LineString\" GeoJSON geometry object.\n */\nexport interface LineString {\n    type: \"LineString\";\n    coordinates: number[][];\n}\n\n/**\n * Represents \"MultiLineString\" GeoJSON geometry object.\n */\nexport interface MultiLineString {\n    type: \"MultiLineString\";\n    coordinates: number[][][];\n}\n\n/**\n * Represents \"Polygon\" GeoJSON geometry object.\n */\nexport interface Polygon {\n    type: \"Polygon\";\n    coordinates: number[][][];\n}\n\n/**\n * Represents \"MultiPolygon\" GeoJSON geometry object.\n */\nexport interface MultiPolygon {\n    type: \"MultiPolygon\";\n    coordinates: number[][][][];\n}\n\n/**\n * Represents \"geometry\" property of \"Feature\" GeoJSON object.\n */\nexport type FeatureGeometry =\n    | Point\n    | MultiPoint\n    | LineString\n    | MultiLineString\n    | Polygon\n    | MultiPolygon;\n\nexport function isFeatureGeometry(object: any): object is FeatureGeometry {\n    const t = object.type;\n    return (\n        t === \"Point\" ||\n        t === \"MultiPoint\" ||\n        t === \"LineString\" ||\n        t === \"MultiLineString\" ||\n        t === \"Polygon\" ||\n        t === \"MultiPolygon\"\n    );\n}\n\n/**\n * Represents \"GeometryCollection\" GeoJSON geometry object.\n */\nexport interface GeometryCollection {\n    type: \"GeometryCollection\";\n    geometries: FeatureGeometry[];\n}\n\n/**\n * Represents \"Feature\" GeoJSON object.\n */\nexport interface Feature {\n    type: \"Feature\";\n    bbox?: number[];\n    id?: string;\n    geometry: FeatureGeometry | GeometryCollection;\n    properties?: any;\n    title?: string;\n}\n\n/**\n * Represents \"FeatureCollection\" GeoJSON object.\n */\nexport interface FeatureCollection {\n    type: \"FeatureCollection\";\n    features: Feature[];\n}\n\n/**\n * Represents a GeoJSON object.\n */\nexport type GeoJson = FeatureGeometry | GeometryCollection | Feature | FeatureCollection;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { JsonExpr } from \"./Expr\";\n\n/**\n * Interpolation mode used when computing a [[InterpolatedProperty]] value for a given zoom level.\n * @internal\n */\nexport enum InterpolationMode {\n    Discrete,\n    Linear,\n    Cubic,\n    Exponential\n}\n\n/**\n * Interpolated property could have its value (some initial value should be provided) changed\n * according to an interpolation type.\n *\n * Here is an example of an interpolated property from a map style:\n * \"lineWidth\": {\n *  \"interpolation\": \"Linear\",\n *  \"zoomLevels\": [13, 14, 15],\n *  \"values\": [ 1.5, 1.2, 0.9]\n * }\n * @internal\n */\nexport interface InterpolatedPropertyDefinition<T> {\n    interpolation?: \"Discrete\" | \"Linear\" | \"Cubic\" | \"Exponential\";\n    zoomLevels: number[];\n    values: T[];\n    exponent?: number;\n}\n\n/**\n * Checks if a property is interpolated.\n * @param p - property to be checked\n * @internal\n */\nexport function isInterpolatedPropertyDefinition<T>(\n    p: any\n): p is InterpolatedPropertyDefinition<T> {\n    if (\n        p &&\n        p.interpolationMode === undefined &&\n        Array.isArray(p.values) &&\n        p.values.length > 0 &&\n        p.values[0] !== undefined &&\n        Array.isArray(p.zoomLevels) &&\n        p.zoomLevels.length > 0 &&\n        p.zoomLevels[0] !== undefined &&\n        p.values.length === p.zoomLevels.length\n    ) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Converts an [[InterpolatedPropertyDefinition]] to a [[JsonExpr]].\n *\n * @param property - A valid [[InterpolatedPropertyDefinition]]\n */\nexport function interpolatedPropertyDefinitionToJsonExpr(\n    property: InterpolatedPropertyDefinition<any>\n): JsonExpr {\n    if (property.interpolation === undefined || property.interpolation === \"Discrete\") {\n        const step: JsonExpr = [\"step\", [\"zoom\"], property.values[0]];\n        for (let i = 1; i < property.zoomLevels.length; ++i) {\n            step.push(property.zoomLevels[i], property.values[i]);\n        }\n        return step;\n    }\n    const interpolation: JsonExpr = [\"interpolate\"];\n    switch (property.interpolation) {\n        case \"Linear\":\n            interpolation.push([\"linear\"]);\n            break;\n        case \"Cubic\":\n            interpolation.push([\"cubic\"]);\n            break;\n        case \"Exponential\":\n            interpolation.push([\n                \"exponential\",\n                property.exponent !== undefined ? property.exponent : 2\n            ]);\n            break;\n        default:\n            throw new Error(`interpolation mode '${property.interpolation}' is not supported`);\n    } //switch\n    interpolation.push([\"zoom\"]);\n    for (let i = 0; i < property.zoomLevels.length; ++i) {\n        interpolation.push(property.zoomLevels[i], property.values[i]);\n    }\n    return interpolation;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nconst currEdgeStart = new THREE.Vector2();\nconst currEdgeGoal = new THREE.Vector2();\nconst prevEdgeStart = new THREE.Vector2();\nconst prevEdgeGoal = new THREE.Vector2();\n\n/**\n * Fills an index buffer with the indices for the edges of a polygon contour.\n *\n * @param indexBuffer - Edge index buffer to be filled.\n * @param vertexOffset - Starting offset of the vertices composing the contour.\n * @param vertexStride - Number of elements per contour vertex.\n * @param polygonContour - Vertices that compose the contour.\n * @param polygonContourEdges - Collection of booleans indicating if contour edges should be added.\n */\nexport function addPolygonEdges(\n    indexBuffer: number[],\n    vertexOffset: number,\n    vertexStride: number,\n    polygonContour: number[],\n    polygonContourEdges: boolean[],\n    isExtruded?: boolean,\n    addFootprintEdges?: boolean,\n    wallEdgeSlope?: number\n) {\n    for (let i = 0; i < polygonContourEdges.length; ++i) {\n        if (polygonContourEdges[i]) {\n            if (isExtruded === true) {\n                const vFootprint0 = vertexOffset + i * 2;\n                const vRoof0 = vFootprint0 + 1;\n                const vFootprint1 = vertexOffset + ((i + 1) % polygonContourEdges.length) * 2;\n                const vRoof1 = vFootprint1 + 1;\n\n                if (addFootprintEdges === true) {\n                    indexBuffer.push(vFootprint0, vFootprint1);\n                }\n                indexBuffer.push(vRoof0, vRoof1);\n\n                const prevEdgeIdx = (i === 0 ? polygonContourEdges.length : i) - 1;\n                if (polygonContourEdges[prevEdgeIdx]) {\n                    if (wallEdgeSlope !== undefined) {\n                        const v0x = polygonContour[i * vertexStride];\n                        const v0y = polygonContour[i * vertexStride + 1];\n                        const v1x =\n                            polygonContour[((i + 1) % polygonContourEdges.length) * vertexStride];\n                        const v1y =\n                            polygonContour[\n                                ((i + 1) % polygonContourEdges.length) * vertexStride + 1\n                            ];\n\n                        currEdgeStart.set(v0x, v0y);\n                        currEdgeGoal.set(v1x, v1y);\n                        prevEdgeStart.set(\n                            polygonContour[prevEdgeIdx * vertexStride],\n                            polygonContour[prevEdgeIdx * vertexStride + 1]\n                        );\n                        prevEdgeGoal.set(currEdgeStart.x, currEdgeStart.y);\n\n                        if (\n                            prevEdgeGoal\n                                .sub(prevEdgeStart)\n                                .normalize()\n                                .dot(currEdgeGoal.sub(currEdgeStart).normalize()) <= wallEdgeSlope\n                        ) {\n                            indexBuffer.push(vFootprint0, vRoof0);\n                        }\n                    } else {\n                        indexBuffer.push(vFootprint0, vRoof0);\n                    }\n                }\n            } else {\n                const vFoot0 = vertexOffset + i;\n                const vRoof0 = vertexOffset + ((i + 1) % polygonContourEdges.length);\n                indexBuffer.push(vFoot0, vRoof0);\n            }\n        }\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nconst RX = /^((?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*))px$/;\n\n/**\n * A class representing Pixels.\n *\n * @hidden\n * @internal\n */\nexport class Pixels {\n    /**\n     * Parses a pixel string literal.\n     *\n     * @param text - The string color literal\n     */\n    static parse(text: string): Pixels | undefined {\n        const match = RX.exec(text);\n        if (match === null) {\n            return undefined;\n        }\n        return new Pixels(Number(match[1]));\n    }\n\n    /**\n     * Constructs a [[Pixels]] literal\n     *\n     * @param value - The number of pixels.\n     */\n    constructor(readonly value: number) {}\n\n    toJSON() {\n        return `${this.value}px`;\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LoggerManager } from \"@here/harp-utils\";\n\nimport { Env } from \"./Env\";\nimport { Expr, ExprScope, Value } from \"./Expr\";\nimport { Pixels } from \"./Pixels\";\nimport { RGBA } from \"./RGBA\";\nimport { parseStringEncodedNumeral } from \"./StringEncodedNumeral\";\n\nconst logger = LoggerManager.instance.create(\"PropertyValue\");\n\n/**\n * Get the value of the specified property in given `env`.\n *\n * @param property - Property of a technique.\n * @param env - The {@link Env} used to evaluate the property\n * @param cache - An optional expression cache.\n */\nexport function getPropertyValue(\n    property: Value | undefined,\n    env: Env,\n    cache?: Map<Expr, Value>\n): any {\n    if (Expr.isExpr(property)) {\n        try {\n            let r = property.evaluate(env, ExprScope.Dynamic, cache);\n\n            if (typeof r === \"string\") {\n                r = RGBA.parse(r) ?? Pixels.parse(r) ?? r;\n            }\n\n            if (r instanceof RGBA) {\n                return r.getHex();\n            } else if (r instanceof Pixels) {\n                return r.value * (Number(env.lookup(\"$pixelToMeters\")) ?? 1);\n            }\n            return r;\n        } catch (error) {\n            logger.error(\n                \"failed to evaluate expression\",\n                JSON.stringify(property),\n                \"error\",\n                String(error)\n            );\n            return null;\n        }\n    }\n\n    if (property === null || typeof property === \"undefined\") {\n        return null;\n    } else if (typeof property !== \"string\") {\n        // Property in numeric or array, etc. format\n        return property;\n    } else {\n        // Non-interpolated string encoded numeral parsing\n        const pixelToMeters = (env.lookup(\"$pixelToMeters\") as number) || 1;\n        const value = parseStringEncodedNumeral(property, pixelToMeters);\n        return value !== undefined ? value : property;\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { MathUtils } from \"three\";\n\nimport { ColorUtils } from \"./ColorUtils\";\nimport { parseStringEncodedColor } from \"./StringEncodedNumeral\";\n\n/**\n * A class representing RGBA colors.\n *\n * @hidden\n * @internal\n */\nexport class RGBA {\n    /**\n     * Parses a string describing a color.\n     *\n     * @param text - The string color literal\n     */\n    static parse(text: string) {\n        const color = parseStringEncodedColor(text);\n\n        if (color === undefined) {\n            return undefined;\n        }\n\n        return ColorUtils.getRgbaFromHex(color);\n    }\n\n    /**\n     * Constructs a [[RGBA]] color using the given components in the [0..1] range.\n     */\n    constructor(\n        public r: number = 1,\n        public g: number = 1,\n        public b: number = 1,\n        public a: number = 1\n    ) {}\n\n    /**\n     * Clones this [[RGBA]] color.\n     */\n    clone() {\n        return new RGBA(this.r, this.g, this.b, this.a);\n    }\n\n    /**\n     * Returns this color encoded as one single number.\n     */\n    getHex() {\n        return ColorUtils.getHexFromRgba(this.r, this.g, this.b, this.a);\n    }\n\n    /**\n     * Linearly interpolate the components of this color.\n     */\n    lerp(target: RGBA, t: number) {\n        this.r = MathUtils.lerp(this.r, target.r, t);\n        this.g = MathUtils.lerp(this.g, target.g, t);\n        this.b = MathUtils.lerp(this.b, target.b, t);\n        this.a = MathUtils.lerp(this.a, target.a, t);\n        return this;\n    }\n\n    /**\n     * Returns this color encoded as JSON literal.\n     */\n    toJSON() {\n        return `rgba(${(this.r * 255) << 0}, ${(this.g * 255) << 0}, ${(this.b * 255) << 0}, ${\n            this.a\n        })`;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { assert } from \"@here/harp-utils\";\n//@ts-ignore\nimport { parseCSSColor } from \"csscolorparser\";\n\nimport { ColorUtils } from \"./ColorUtils\";\n\n/**\n * Enumeration of supported string encoded numerals.\n * @internal\n */\nexport enum StringEncodedNumeralType {\n    Meters,\n    Pixels,\n    Hex\n}\n\n/**\n * Interface containing information about a [[StringEncodedNumeral]] format, component size and\n * evaluation.\n * @internal\n */\nexport interface StringEncodedNumeralFormat {\n    readonly type: StringEncodedNumeralType;\n    readonly size: number;\n    readonly regExp: RegExp;\n    mask?: number;\n    decoder: (encodedValue: string, target: number[]) => boolean;\n}\nconst StringEncodedMeters: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.Meters,\n    size: 1,\n    regExp: /^((?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*))m$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const match = StringEncodedMeters.regExp.exec(encodedValue);\n        return match ? (target[0] = Number(match[1])) !== undefined : false;\n    }\n};\nconst StringEncodedPixels: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.Pixels,\n    size: 1,\n    mask: 1.0,\n    regExp: /^((?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*))px$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const match = StringEncodedPixels.regExp.exec(encodedValue);\n        if (match === null) {\n            return false;\n        }\n        target[0] = Number(match[1]);\n        return true;\n    }\n};\nconst StringEncodedHex: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.Hex,\n    size: 4,\n    regExp: /^\\#((?:[0-9A-Fa-f][0-9A-Fa-f]){4}|[0-9A-Fa-f]{4})$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const match = StringEncodedHex.regExp.exec(encodedValue);\n        if (match === null) {\n            return false;\n        }\n        const hex = match[1];\n        const size = hex.length;\n        // Only few sizes are possible for given reg-exp.\n        assert(size === 4 || size === 8, `Matched incorrect hex color format`);\n        // Note that we simply ignore alpha channel value.\n        // TODO: To be resolved with HARP-7517\n        if (size === 4) {\n            // #RGB or #RGBA\n            target[0] = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n            target[1] = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n            target[2] = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n            target[3] = size === 4 ? parseInt(hex.charAt(3) + hex.charAt(3), 16) / 255 : 1;\n        } else if (size === 8) {\n            // #RRGGBB or #RRGGBBAA\n            target[0] = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n            target[1] = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n            target[2] = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n            target[3] = size === 8 ? parseInt(hex.charAt(6) + hex.charAt(7), 16) / 255 : 1;\n        }\n        return true;\n    }\n};\n\n/**\n * Array of all supported [[StringEncodedNumeralFormat]]s describing sizes, lengths and distances.\n * @internal\n */\nexport const StringEncodedMetricFormats: StringEncodedNumeralFormat[] = [\n    StringEncodedMeters,\n    StringEncodedPixels\n];\n\nconst StringEncodedMetricFormatMaxSize = StringEncodedMetricFormats.reduce(\n    (a, b) => Math.max(a, b.size),\n    0\n);\n\n/**\n * Array of all supported [[StringEncodedNumeralFormat]]s describing color data.\n * @internal\n */\nexport const StringEncodedColorFormats: StringEncodedNumeralFormat[] = [StringEncodedHex];\n\nconst StringEncodedColorFormatMaxSize = StringEncodedColorFormats.reduce(\n    (a, b) => Math.max(a, b.size),\n    0\n);\n\n/**\n * Array of supported [[StringEncodedNumeralFormat]]s (intended to be indexed with\n * [[StringEncodedNumeralType]] enum).\n * @internal\n */\nexport const StringEncodedNumeralFormats: StringEncodedNumeralFormat[] = [\n    ...StringEncodedMetricFormats,\n    ...StringEncodedColorFormats\n];\n\n/**\n * @internal\n */\nexport const StringEncodedNumeralFormatMaxSize = Math.max(\n    StringEncodedColorFormatMaxSize,\n    StringEncodedMetricFormatMaxSize\n);\n\nconst tmpBuffer: number[] = new Array(StringEncodedNumeralFormatMaxSize);\n\n/**\n * Parse string encoded numeral values using all known [[StringEncodedNumeralFormats]].\n *\n * @param numeral - The string representing numeric value.\n * @param pixelToMeters - The ratio used to convert from meters to pixels (default 1.0).\n * @returns Number parsed or __undefined__ if non of the numeral patterns matches the expression\n * provided in [[numeral]].\n */\nexport function parseStringEncodedNumeral(\n    numeral: string,\n    pixelToMeters: number = 1.0\n): number | undefined {\n    return parseStringLiteral(numeral, StringEncodedNumeralFormats, pixelToMeters);\n}\n\n/**\n * Parse string encoded color value using all known [[StringEncodedColorFormats]].\n *\n * @param color - The string encoded color expression (i.e. '#FFF', 'rgb(255, 0, 0)', etc.).\n * @returns The color parsed or __undefined__ if non of the known representations matches\n * the expression provided in [[color]].\n */\nexport function parseStringEncodedColor(color: string): number | undefined {\n    return parseStringLiteral(color, StringEncodedColorFormats);\n}\n\nfunction parseStringLiteral(\n    text: string,\n    formats: StringEncodedNumeralFormat[],\n    pixelToMeters: number = 1.0\n): number | undefined {\n    const matchedFormat = formats.find(format => {\n        return format.decoder(text, tmpBuffer) ? true : false;\n    });\n\n    if (matchedFormat === undefined) {\n        const components: number[] | null = parseCSSColor(text);\n\n        return Array.isArray(components) && !components.some(c => isNaN(c))\n            ? ColorUtils.getHexFromRgba(\n                  components[0] / 255,\n                  components[1] / 255,\n                  components[2] / 255,\n                  components[3]\n              )\n            : undefined;\n    }\n\n    switch (matchedFormat?.type) {\n        case StringEncodedNumeralType.Pixels:\n            return tmpBuffer[0] * pixelToMeters;\n        case StringEncodedNumeralType.Hex:\n            return ColorUtils.getHexFromRgba(\n                tmpBuffer[0],\n                tmpBuffer[1],\n                tmpBuffer[2],\n                tmpBuffer[3]\n            );\n        default:\n            return tmpBuffer[0];\n    }\n}\n","/*\n * Copyright (C) 2019-2022 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { LoggerManager } from \"@here/harp-utils\";\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    Env,\n    Expr,\n    ExprScope,\n    ExprVisitor,\n    HasAttributeExpr,\n    InterpolateExpr,\n    isJsonExpr,\n    JsonExpr,\n    LiteralExpr,\n    LookupExpr,\n    MatchExpr,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StepExpr,\n    StringLiteralExpr,\n    Value,\n    VarExpr\n} from \"./Expr\";\nimport { ExprPool } from \"./ExprPool\";\nimport {\n    interpolatedPropertyDefinitionToJsonExpr,\n    isInterpolatedPropertyDefinition\n} from \"./InterpolatedPropertyDefs\";\nimport { DecoderOptions } from \"./ITileDecoder\";\nimport { AttrScope, getTechniqueAttributeDescriptor } from \"./TechniqueDescriptors\";\nimport { IndexedTechnique, setTechniqueRenderOrderOrPriority, Technique } from \"./Techniques\";\nimport { Definitions, Style, StyleSet } from \"./Theme\";\n\nconst logger = LoggerManager.instance.create(\"StyleSetEvaluator\");\n\nconst DEFAULT_TECHNIQUE_ATTR_SCOPE = AttrScope.TechniqueGeometry;\n\n/**\n * Get the attribute scope of the given style property.\n *\n * @remarks\n * Certain Style properties change their dynamic scope behavior\n * based on other properties. For example, the `color` property\n * of `extruded-polygon` change behavior based on the usage\n * of `vertexColors`.\n *\n * @param style A valid Style.\n * @param attrName The name of the attribute of the {@link style}.\n */\nfunction getStyleAttributeScope(style: InternalStyle, attrName: string): AttrScope {\n    if (style.technique === \"extruded-polygon\") {\n        if (attrName === \"color\" && style.vertexColors !== false) {\n            return DEFAULT_TECHNIQUE_ATTR_SCOPE;\n        }\n    }\n\n    return (\n        getTechniqueAttributeDescriptor(style.technique, attrName)?.scope ??\n        DEFAULT_TECHNIQUE_ATTR_SCOPE\n    );\n}\n\ninterface StyleInternalParams {\n    /**\n     * Optimization: Lazy creation and storage of expression in a style object.\n     */\n    _whenExpr?: Expr;\n    _minZoomLevelExpr?: Expr;\n    _maxZoomLevelExpr?: Expr;\n\n    _staticAttributes?: Array<[string, Value]>;\n\n    /**\n     * These attributes are used to instantiate Technique variants.\n     *\n     * @see [[TechiqueDescriptor.techniquePropNames]]\n     */\n    _dynamicTechniqueAttributes?: Array<[string, Expr]>;\n\n    /**\n     * These attributes must be evaluated basing with feature env.\n     *\n     * They are not propagated to rendering scope.\n     *\n     * @see [[TechniqueAttrScope.Feature]]\n     */\n    _dynamicFeatureAttributes?: Array<[string, Expr]>;\n\n    /**\n     * These attributes are forwarded as serialized by decoder to main thread, so they are resolved\n     * directly in render loop.\n     *\n     * Will contain attributes from these lists\n     *  - interpolants from [[TechiqueDescriptor.techniquePropNames]]\n     *  - expressions [[TechniqueDescriptor.dynamicPropNames]] (Future)\n     */\n    _dynamicForwardedAttributes?: Array<[string, Expr]>;\n    _dynamicTechniques?: Map<string, IndexedTechnique>;\n\n    /**\n     * Optimization: Index into table in StyleSetEvaluator.\n     * @hidden\n     */\n    _staticTechnique?: IndexedTechnique;\n\n    /**\n     * Optimization: StyleSet index.\n     * @hidden\n     */\n    _styleSetIndex?: number;\n\n    /**\n     * Optimization: Requested $geometryType.\n     * @hidden\n     */\n    _geometryType?: string;\n\n    /**\n     * `true` if any of the properties of this technique\n     * requires access to the feature's state.\n     */\n    _usesFeatureState?: boolean;\n}\n\ntype InternalStyle = Style & StyleInternalParams;\n\n/**\n * `StyleConditionClassifier` searches for usages of `$layer` in `when` conditions\n * associated with styling rules.\n *\n * @hidden\n */\nclass StyleConditionClassifier implements ExprVisitor<Expr | undefined, Expr | undefined> {\n    private _style!: InternalStyle;\n\n    classify(style: InternalStyle) {\n        if (style._whenExpr) {\n            const savedStyle = this.switchStyle(style);\n            style._whenExpr = style._whenExpr.accept(this, undefined);\n            this._style = savedStyle;\n        }\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitVarExpr(expr: VarExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitMatchExpr(expr: MatchExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitCaseExpr(expr: CaseExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitCallExpr(call: CallExpr, enclosingExpr: Expr | undefined): Expr | undefined {\n        if (call.op === \"all\") {\n            // processing of an `[\"all\", e1, e2, ... eN]` expression. In this case\n            // search for expressions matching comparison of `$layer` and string literals\n            // in the sub expressions.\n            const children = call.args\n                .map(childExpr => childExpr.accept(this, call))\n                .filter(childExpr => childExpr !== undefined) as Expr[];\n\n            return new CallExpr(call.op, children);\n        } else if (enclosingExpr) {\n            // `call` is a direct child expression of an `\"all\"` operator.\n            const matched = this.matchVarStringComparison(call);\n\n            if (matched) {\n                if (this._style.layer === undefined && matched.name === \"$layer\") {\n                    // found a subexpression `[\"==\", [\"get\", \"$layer\"], \"some layer name\"]`\n                    // enclosed in an `[\"all\", e1...eN]` expression. Remove it from\n                    // its parent expression and store the value of the expected $layer in\n                    // [[StyleInternalParams]].\n\n                    this._style.layer = matched.value;\n\n                    // return `undefined` to remove this sub expression from its parent.\n                    return undefined;\n                } else if (\n                    this._style._geometryType === undefined &&\n                    matched.name === \"$geometryType\"\n                ) {\n                    // found a subexpression `[\"==\", [\"get\", \"$geometryType\"], \"geometry\"]`\n                    // enclosed in an `[\"all\", e1...eN]` expression. Remove it from\n                    // its parent expression and store the value of the expected $geometryType in\n                    // [[StyleInternalParams]].\n\n                    this._style._geometryType = matched.value;\n\n                    // return `undefined` to remove this sub expression from its parent.\n                    return undefined;\n                }\n            }\n        }\n\n        return call;\n    }\n\n    visitLookupExpr(lookup: LookupExpr, enclosingExpr: Expr | undefined): Expr | undefined {\n        return this.visitCallExpr(lookup, enclosingExpr);\n    }\n\n    visitStepExpr(expr: StepExpr, enclosingExpr: Expr | undefined): Expr | undefined {\n        return expr;\n    }\n\n    visitInterpolateExpr(expr: InterpolateExpr, enclosingExpr: Expr | undefined): Expr | undefined {\n        return expr;\n    }\n\n    /**\n     * Tests if the given `call` matches the structure [\"==\", [\"get\", name], value].\n     * If a match is found returns an object containing the `name` and the `value`;\n     *\n     * @param call - The expression to match.\n     */\n    private matchVarStringComparison(call: CallExpr) {\n        if (call.op === \"==\") {\n            const left = call.args[0];\n            const right = call.args[1];\n\n            if (left instanceof VarExpr && right instanceof StringLiteralExpr) {\n                return { name: left.name, value: right.value };\n            }\n\n            if (right instanceof VarExpr && left instanceof StringLiteralExpr) {\n                return { name: right.name, value: left.value };\n            }\n        }\n\n        return undefined;\n    }\n\n    /**\n     * Sets the given `style` as current.\n     *\n     * @returns The previous `style`.\n     */\n    private switchStyle(style: InternalStyle) {\n        const saved = this._style;\n        this._style = style;\n        return saved;\n    }\n}\n\nclass OptimizedSubSetKey {\n    key: string;\n    layer: string | undefined;\n    geometryType: string | undefined;\n\n    cachedStyleSet?: InternalStyle[];\n\n    constructor(layer?: string | undefined, geometryType?: string | undefined) {\n        this.key = \"\";\n        this.set(layer, geometryType);\n    }\n\n    set(\n        layer: string | undefined,\n        geometryType: string | undefined,\n        env?: Env\n    ): OptimizedSubSetKey {\n        let keyUpdateNeeded: boolean = false;\n        if (layer === undefined) {\n            const envLayer = env !== undefined ? env.lookup(\"$layer\") : undefined;\n            layer = typeof envLayer === \"string\" ? envLayer : undefined;\n        }\n        if (this.layer !== layer) {\n            this.layer = layer;\n            keyUpdateNeeded = true;\n        }\n\n        if (geometryType === undefined) {\n            const envGeometryType = env !== undefined ? env.lookup(\"$geometryType\") : undefined;\n            geometryType = typeof envGeometryType === \"string\" ? envGeometryType : undefined;\n        }\n        if (this.geometryType !== geometryType) {\n            this.geometryType = geometryType;\n            keyUpdateNeeded = true;\n        }\n\n        if (keyUpdateNeeded) {\n            this.updateKey();\n        }\n        return this;\n    }\n\n    private updateKey() {\n        if (this.layer !== undefined) {\n            if (this.geometryType !== undefined) {\n                this.key = `${this.layer}:${this.geometryType}`;\n            } else {\n                this.key = `${this.layer}:`;\n            }\n        } else {\n            if (this.geometryType !== undefined) {\n                this.key = `:${this.geometryType}`;\n            } else {\n                this.key = \"all\";\n            }\n        }\n        this.cachedStyleSet = undefined;\n    }\n}\n\n/**\n * Options to be passed to the StyleSetEvaluator\n *\n * Basically identical as the DecoderOptions but requires styleSet to be set.\n */\nexport type StyleSetOptions = Omit<DecoderOptions, \"languages\"> & { styleSet: StyleSet };\n\n/**\n * Combine data from datasource and apply the rules from a specified theme to show it on the map.\n */\nexport class StyleSetEvaluator {\n    readonly styleSet: InternalStyle[];\n\n    private readonly m_techniques: IndexedTechnique[] = [];\n    private readonly m_exprPool = new ExprPool();\n    private readonly m_cachedResults = new Map<Expr, Value>();\n    private readonly m_styleConditionClassifier = new StyleConditionClassifier();\n    private readonly m_subStyleSetCache = new Map<string, InternalStyle[]>();\n    private readonly m_definitions?: Definitions;\n    private readonly m_definitionExprCache = new Map<string, Expr>();\n    private readonly m_tmpOptimizedSubSetKey: OptimizedSubSetKey = new OptimizedSubSetKey();\n    private readonly m_emptyEnv = new Env();\n    private m_featureDependencies: string[] = [];\n    private m_layer: string | undefined;\n    private m_geometryType: string | undefined;\n    private m_zoomLevel: number | undefined;\n    private m_previousResult: IndexedTechnique[] | undefined;\n    private m_previousEnv: Env | undefined;\n    private m_nextArrayBufferId = 0;\n\n    constructor(private readonly m_options: StyleSetOptions) {\n        this.m_definitions = this.m_options.definitions;\n        this.styleSet = resolveReferences(this.m_options.styleSet, this.m_definitions);\n        computeDefaultRenderOrder(this.styleSet);\n        this.compileStyleSet();\n    }\n\n    /**\n     * Find all techniques that fit the current objects' environment.\n     * *The techniques in the resulting array may not be modified* since they are being reused for\n     * identical objects.\n     *\n     * @param env - The objects environment, i.e. the attributes that are relevant for its\n     * representation.\n     * @param layer - The optional layer name used to filter techniques.\n     * @param geometryType - The optional geometryType used to filter techniques.\n     */\n    getMatchingTechniques(\n        env: Env,\n        layer?: string | undefined,\n        geometryType?: string | undefined\n    ): IndexedTechnique[] {\n        if (\n            this.m_previousResult &&\n            this.m_previousEnv &&\n            this.m_featureDependencies.every(p => this.m_previousEnv?.lookup(p) === env.lookup(p))\n        ) {\n            return this.m_previousResult;\n        }\n\n        const result: IndexedTechnique[] = [];\n        this.m_cachedResults.clear();\n\n        const optimizedSubSetKey = this.m_tmpOptimizedSubSetKey;\n        optimizedSubSetKey.set(layer, geometryType, env);\n\n        // get the requested $layer and $geometryType, if any.\n        this.m_layer = optimizedSubSetKey.layer;\n        this.m_geometryType = optimizedSubSetKey.geometryType;\n        this.m_zoomLevel = env.lookup(\"$zoom\") as number | undefined;\n\n        const searchedStyleSet = this.getOptimizedStyleSet(optimizedSubSetKey);\n\n        for (const currStyle of searchedStyleSet) {\n            if (this.processStyle(env, currStyle, result)) {\n                break;\n            }\n        }\n\n        this.m_previousResult = result;\n        this.m_previousEnv = env;\n\n        return result;\n    }\n\n    /**\n     * Check if `styleSet` contains any rule related to `layer`.\n     *\n     * @param layer - name of layer\n     */\n    wantsLayer(layer: string): boolean {\n        return (\n            this.getOptimizedStyleSet(this.m_tmpOptimizedSubSetKey.set(layer, undefined)).length > 0\n        );\n    }\n\n    /**\n     * Check if `styleSet` contains any rule related to particular `[layer, geometryType]` pair.\n     *\n     * @param layer - name of layer\n     * @param geometryType - type of layer - `point`, `line` or `polygon`\n     */\n    wantsFeature(layer: string, geometryType?: string): boolean {\n        return (\n            this.getOptimizedStyleSet(this.m_tmpOptimizedSubSetKey.set(layer, geometryType))\n                .length > 0\n        );\n    }\n\n    /**\n     * Reset array of techniques.\n     *\n     * Cleans technique array and indices, so it doesn't accumulate accross several decoding runs.\n     */\n    resetTechniques() {\n        for (const techinque of this.m_techniques) {\n            techinque._index = undefined!;\n        }\n        this.m_techniques.length = 0;\n        this.m_previousResult = undefined;\n        this.m_previousEnv = undefined;\n    }\n\n    /**\n     * Get the (current) array of techniques that have been created during decoding.\n     */\n    get techniques(): IndexedTechnique[] {\n        return this.m_techniques;\n    }\n\n    /**\n     * Get the (current) array of techniques that have been created during decoding.\n     */\n    get decodedTechniques(): IndexedTechnique[] {\n        return this.m_techniques.map(makeDecodedTechnique);\n    }\n\n    private getOptimizedStyleSet(subSetKey: OptimizedSubSetKey): InternalStyle[] {\n        if (subSetKey.cachedStyleSet !== undefined) {\n            return subSetKey.cachedStyleSet;\n        }\n        let optimizedStyleSet = this.m_subStyleSetCache.get(subSetKey.key);\n        if (optimizedStyleSet !== undefined) {\n            subSetKey.cachedStyleSet = optimizedStyleSet;\n            return optimizedStyleSet;\n        }\n        optimizedStyleSet = this.createPreFilteredStyleSet(subSetKey);\n        this.m_subStyleSetCache.set(subSetKey.key, optimizedStyleSet);\n        subSetKey.cachedStyleSet = optimizedStyleSet;\n        return optimizedStyleSet;\n    }\n\n    private createPreFilteredStyleSet(subSetKey: OptimizedSubSetKey) {\n        const { layer, geometryType } = subSetKey;\n\n        return this.styleSet.filter(style => {\n            if (layer !== undefined && style.layer !== undefined && style.layer !== layer) {\n                return false;\n            }\n            if (\n                geometryType !== undefined &&\n                style._geometryType !== undefined &&\n                style._geometryType !== geometryType\n            ) {\n                return false;\n            }\n            return true;\n        });\n    }\n\n    /**\n     * Compile the `when` conditions found when traversting the styling rules.\n     */\n    private compileStyleSet() {\n        this.m_featureDependencies = [\"$layer\", \"$geometryType\", \"$zoom\"];\n\n        this.styleSet.forEach(style => this.compileStyle(style));\n\n        // Create optimized styleSets for each `layer` & `geometryType` tuple.\n        this.styleSet.forEach(style => {\n            this.getOptimizedStyleSet(\n                this.m_tmpOptimizedSubSetKey.set(style.layer, style._geometryType)\n            );\n        });\n    }\n\n    /**\n     * Compile the `when` conditions reachable from the given `style`.\n     *\n     * @param style - The current style.\n     */\n    private compileStyle(style: InternalStyle) {\n        this.checkStyleDynamicAttributes(style);\n\n        if (style.when !== undefined) {\n            try {\n                style._whenExpr = Array.isArray(style.when)\n                    ? Expr.fromJSON(style.when, this.m_definitions, this.m_definitionExprCache)\n                    : Expr.parse(style.when);\n\n                // search for usages of '$layer' and any other\n                // special symbol that can be used to speed up the evaluation\n                // of the `when` conditions associated to this `style`.\n                this.m_styleConditionClassifier.classify(style);\n\n                if (style._whenExpr !== undefined) {\n                    style._whenExpr = style._whenExpr.intern(this.m_exprPool);\n                }\n\n                const deps = style._whenExpr.dependencies();\n\n                deps?.properties.forEach(prop => {\n                    if (!this.m_featureDependencies.includes(prop)) {\n                        this.m_featureDependencies.push(prop);\n                    }\n                });\n\n                if (isJsonExpr(style.minZoomLevel)) {\n                    style._minZoomLevelExpr = Expr.fromJSON(\n                        style.minZoomLevel,\n                        this.m_definitions\n                    ).intern(this.m_exprPool);\n                }\n\n                if (isJsonExpr(style.maxZoomLevel)) {\n                    style._maxZoomLevelExpr = Expr.fromJSON(\n                        style.maxZoomLevel,\n                        this.m_definitions\n                    ).intern(this.m_exprPool);\n                }\n            } catch (err) {\n                logger.log(\n                    \"failed to evaluate expression\",\n                    JSON.stringify(style.when),\n                    \"error\",\n                    String(err)\n                );\n            }\n        }\n    }\n\n    /**\n     * Process a style (and its sub-styles) hierarchically to look for the technique that fits the\n     * current objects' environment. The attributes of the styles are assembled to create a unique\n     * technique for every object.\n     *\n     * @param env - The objects environment, i.e. the attributes that are relevant for its\n     *            representation.\n     * @param style - Current style (could also be top of stack).\n     * @param result - The array of resulting techniques. There may be more than one technique per\n     *               object, resulting in multiple graphical objects for representation.\n     * @returns `true` if style has been found and processing is finished. `false` if not found, or\n     *          more than one technique should be applied.\n     */\n    private processStyle(env: Env, style: InternalStyle, result: Technique[]): boolean {\n        if (!this.checkZoomLevel(env, style)) {\n            return false;\n        }\n\n        if (\n            this.m_layer !== undefined &&\n            style.layer !== undefined &&\n            style.layer !== this.m_layer\n        ) {\n            return false;\n        }\n        if (\n            this.m_geometryType !== undefined &&\n            style._geometryType !== undefined &&\n            style._geometryType !== this.m_geometryType\n        ) {\n            return false;\n        }\n\n        if (style._whenExpr) {\n            try {\n                if (!style._whenExpr.evaluate(env, ExprScope.Condition, this.m_cachedResults)) {\n                    // Stop processing this styling rule. The `when` condition\n                    // associated with the current `style` evaluates to false so\n                    // no techinque defined by this style should be applied.\n                    return false;\n                }\n            } catch (error) {\n                logger.error(\n                    `failed to evaluate expression '${JSON.stringify(style.when)}': ${error}`\n                );\n                return false;\n            }\n        }\n\n        if (style.technique === undefined) {\n            return false;\n        }\n        // we found a technique!\n        if (style.technique !== \"none\") {\n            result.push(this.getTechniqueForStyleMatch(env, style));\n        }\n        // stop processing if \"final\" is set\n        return style.final === true;\n    }\n\n    private checkZoomLevel(env: Env, style: InternalStyle) {\n        if (style.minZoomLevel === undefined && style.maxZoomLevel === undefined) {\n            return true;\n        }\n\n        const zoomLevel = this.m_zoomLevel;\n        if (zoomLevel === undefined) {\n            return true;\n        }\n\n        if (style.minZoomLevel !== undefined) {\n            let minZoomLevel: Value = style.minZoomLevel;\n\n            if (style._minZoomLevelExpr?.isDynamic() === false) {\n                // Only filter by zoom level if the expression is not dynamic.\n                try {\n                    minZoomLevel = style._minZoomLevelExpr.evaluate(\n                        env,\n                        ExprScope.Condition,\n                        this.m_cachedResults\n                    );\n                } catch (error) {\n                    logger.error(\n                        `failed to evaluate expression '${JSON.stringify(\n                            style._minZoomLevelExpr\n                        )}': ${error}`\n                    );\n                }\n            }\n\n            if (typeof minZoomLevel === \"number\" && zoomLevel < minZoomLevel) {\n                return false;\n            }\n        }\n\n        if (style.maxZoomLevel !== undefined) {\n            let maxZoomLevel: Value = style.maxZoomLevel;\n\n            if (style._maxZoomLevelExpr?.isDynamic() === false) {\n                // Only filter by zoom level if the expression is not dynamic.\n                try {\n                    maxZoomLevel = style._maxZoomLevelExpr.evaluate(\n                        env,\n                        ExprScope.Condition,\n                        this.m_cachedResults\n                    );\n                } catch (error) {\n                    logger.error(\n                        `failed to evaluate expression '${JSON.stringify(\n                            style._maxZoomLevelExpr\n                        )}': ${error}`\n                    );\n                }\n            }\n\n            if (typeof maxZoomLevel === \"number\" && zoomLevel >= maxZoomLevel) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private getTechniqueForStyleMatch(env: Env, style: InternalStyle) {\n        let technique: IndexedTechnique | undefined;\n        if (style._dynamicTechniques !== undefined) {\n            const dynamicAttributes = this.evaluateTechniqueProperties(style, env);\n            const key = this.getDynamicTechniqueKey(style, dynamicAttributes);\n            technique = style._dynamicTechniques!.get(key);\n            if (technique === undefined) {\n                technique = this.createTechnique(style, key, dynamicAttributes);\n                style._dynamicTechniques!.set(key, technique);\n            }\n        } else {\n            technique = style._staticTechnique;\n            if (technique === undefined) {\n                style._staticTechnique = technique = this.createTechnique(\n                    style,\n                    `${style._styleSetIndex}`,\n                    []\n                ) as IndexedTechnique;\n            }\n        }\n\n        if (technique._index === undefined) {\n            technique._index = this.m_techniques.length;\n            this.m_techniques.push(technique);\n        }\n        return technique;\n    }\n\n    private getDynamicTechniqueKey(\n        style: InternalStyle,\n        dynamicAttributes: Array<[string, Value]>\n    ) {\n        const dynamicAttrKey = dynamicAttributes\n            .map(([_attrName, attrValue]) => {\n                if (attrValue === undefined) {\n                    return \"U\";\n                } else if (typeof attrValue === \"object\") {\n                    return JSON.stringify(attrValue, (_, value) => {\n                        if (value instanceof ArrayBuffer) {\n                            // ArrayBuffers cannot be directly stringified. They can be converted\n                            // to typed arrays and then stringified, but it's too slow. Instead,\n                            // assign them unique ids.\n                            let arrayBufferId = (value as any).id;\n                            if (arrayBufferId === undefined) {\n                                arrayBufferId = (value as any).id = this.m_nextArrayBufferId++;\n                            }\n                            return arrayBufferId;\n                        }\n                        return value;\n                    });\n                } else {\n                    return JSON.stringify(attrValue);\n                }\n            })\n            .join(\":\");\n        return `${style._styleSetIndex!}:${dynamicAttrKey}`;\n    }\n\n    private checkStyleDynamicAttributes(style: InternalStyle) {\n        if (style._dynamicTechniqueAttributes !== undefined || style.technique === \"none\") {\n            return;\n        }\n\n        style._dynamicTechniqueAttributes = [];\n        style._dynamicFeatureAttributes = [];\n        style._dynamicForwardedAttributes = [];\n        style._staticAttributes = [];\n\n        const dynamicFeatureAttributes = style._dynamicFeatureAttributes;\n        const dynamicTechniqueAttributes = style._dynamicTechniqueAttributes;\n        const dynamicForwardedAttributes = style._dynamicForwardedAttributes;\n        const targetStaticAttributes = style._staticAttributes;\n\n        const processAttribute = (attrName: string, attrValue: Value | JsonExpr | undefined) => {\n            if (attrValue === undefined) {\n                return;\n            }\n\n            if (isJsonExpr(attrValue)) {\n                attrValue = Expr.fromJSON(\n                    attrValue,\n                    this.m_definitions,\n                    this.m_definitionExprCache\n                ).intern(this.m_exprPool);\n            } else if (isInterpolatedPropertyDefinition(attrValue)) {\n                // found a property using an object-like interpolation definition.\n                attrValue = Expr.fromJSON(\n                    interpolatedPropertyDefinitionToJsonExpr(attrValue)\n                ).intern(this.m_exprPool);\n            }\n\n            if (Expr.isExpr(attrValue)) {\n                const deps = attrValue.dependencies();\n\n                if (deps.featureState) {\n                    if (attrName !== \"enabled\") {\n                        logger.log(\"feature-state is not supported in this context\");\n                    } else {\n                        style._usesFeatureState = true;\n                    }\n                }\n\n                if (deps.properties.size === 0 && !attrValue.isDynamic()) {\n                    // no data-dependencies detected.\n                    attrValue = attrValue.evaluate(this.m_emptyEnv);\n                }\n            }\n\n            if (Expr.isExpr(attrValue)) {\n                const attrScope = getStyleAttributeScope(style, attrName);\n\n                const deps = attrValue.dependencies();\n\n                deps.properties.forEach(prop => {\n                    if (!this.m_featureDependencies.includes(prop)) {\n                        this.m_featureDependencies.push(prop);\n                    }\n                });\n\n                switch (attrScope) {\n                    case AttrScope.FeatureGeometry:\n                        dynamicFeatureAttributes.push([attrName, attrValue]);\n                        break;\n                    case AttrScope.TechniqueGeometry:\n                        dynamicTechniqueAttributes.push([attrName, attrValue]);\n                        break;\n                    case AttrScope.TechniqueRendering:\n                        if (deps.properties.size === 0) {\n                            dynamicForwardedAttributes.push([attrName, attrValue]);\n                        } else {\n                            dynamicTechniqueAttributes.push([attrName, attrValue]);\n                        }\n                        break;\n                }\n            } else if (attrValue !== undefined && attrValue !== null) {\n                targetStaticAttributes.push([attrName, attrValue]);\n            }\n        };\n\n        const replacement = new Map<string, string>([\n            [\"category\", \"_category\"],\n            [\"secondaryCategory\", \"_secondaryCategory\"]\n        ]);\n\n        for (const p in style) {\n            if (!style.hasOwnProperty(p)) {\n                continue;\n            }\n            if (p.startsWith(\"_\")) {\n                continue;\n            }\n            if ([\"when\", \"technique\", \"layer\", \"attr\", \"description\"].includes(p)) {\n                continue;\n            }\n            const pp = replacement.get(p) ?? p;\n            processAttribute(pp, (style as any)[p]);\n        }\n\n        if (style.attr !== undefined) {\n            for (const attrName in style.attr) {\n                if (!style.attr.hasOwnProperty(attrName)) {\n                    continue;\n                }\n                processAttribute(attrName, (style.attr as any)[attrName]);\n            }\n        }\n\n        if (dynamicTechniqueAttributes.length > 0) {\n            style._dynamicTechniques = new Map();\n        }\n    }\n\n    private evaluateTechniqueProperties(style: InternalStyle, env: Env): Array<[string, Value]> {\n        if (style._dynamicTechniqueAttributes === undefined) {\n            return [];\n        }\n\n        return style._dynamicTechniqueAttributes.map(([attrName, attrExpr]) => {\n            try {\n                const evaluatedValue = attrExpr.evaluate(\n                    env,\n                    ExprScope.Value,\n                    this.m_cachedResults\n                );\n                return [attrName, evaluatedValue];\n            } catch (error) {\n                logger.error(`failed to evaluate expression '${attrExpr.toJSON()}': ${error}`);\n                return [attrName, null];\n            }\n        });\n    }\n\n    private createTechnique(\n        style: InternalStyle,\n        key: string,\n        dynamicAttrs: Array<[string, Value]>\n    ) {\n        const technique: any = {};\n        technique.name = style.technique;\n        if (style._staticAttributes !== undefined) {\n            for (const [attrName, attrValue] of style._staticAttributes) {\n                if (attrValue !== null) {\n                    technique[attrName] = attrValue;\n                }\n            }\n        }\n        for (const [attrName, attrValue] of dynamicAttrs) {\n            if (attrValue !== null) {\n                technique[attrName] = attrValue;\n            }\n        }\n\n        if (style._dynamicFeatureAttributes !== undefined) {\n            for (const [attrName, attrValue] of style._dynamicFeatureAttributes) {\n                technique[attrName] = attrValue;\n            }\n        }\n\n        if (style._dynamicForwardedAttributes !== undefined) {\n            for (const [attrName, attrValue] of style._dynamicForwardedAttributes) {\n                technique[attrName] = attrValue;\n            }\n        }\n\n        technique._index = this.m_techniques.length;\n        technique._styleSetIndex = style._styleSetIndex!;\n        if (style.styleSet !== undefined) {\n            technique._styleSet = style.styleSet;\n        }\n        if (style._usesFeatureState !== undefined) {\n            technique._usesFeatureState = style._usesFeatureState;\n        }\n        setTechniqueRenderOrderOrPriority(\n            technique,\n            this.m_options.priorities ?? [],\n            this.m_options.labelPriorities ?? []\n        );\n        this.m_techniques.push(technique as IndexedTechnique);\n        return technique as IndexedTechnique;\n    }\n}\n\nfunction computeDefaultRenderOrder(styleSet: InternalStyle[]) {\n    let techniqueRenderOrder = 0;\n    let styleSetIndex = 0;\n    for (const style of styleSet) {\n        style._styleSetIndex = styleSetIndex++;\n        if (style.technique !== undefined && style.renderOrder === undefined) {\n            style.renderOrder = techniqueRenderOrder++;\n        }\n    }\n}\n\nfunction resolveReferences(styleSet: Style[], definitions: Definitions | undefined) {\n    return styleSet.map(style => resolveStyleReferences(style, definitions));\n}\n\nfunction resolveStyleReferences(style: Style, definitions: Definitions | undefined): InternalStyle {\n    return { ...style };\n}\n\n/**\n * Create transferable representation of dynamic technique.\n *\n * Converts  non-transferable {@link Expr}instances back to JSON form.\n */\nexport function makeDecodedTechnique(technique: IndexedTechnique): IndexedTechnique {\n    const result: Partial<IndexedTechnique> = {};\n    for (const attrName in technique) {\n        if (!technique.hasOwnProperty(attrName)) {\n            continue;\n        }\n\n        let attrValue: any = (technique as any)[attrName];\n\n        if (\n            typeof attrValue === \"object\" &&\n            (attrValue.isVector2 || attrValue.isVector3 || attrValue.isVector4)\n        ) {\n            attrValue = LiteralExpr.fromValue(attrValue);\n        }\n\n        if (Expr.isExpr(attrValue)) {\n            attrValue = attrValue.toJSON();\n        }\n\n        (result as any)[attrName] = attrValue;\n    }\n    return (result as any) as IndexedTechnique;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env, Expr, MapEnv, Value } from \"./Expr\";\nimport { getPropertyValue } from \"./PropertyValue\";\n\nexport interface AttrEvaluationContext {\n    /**\n     * Expression evaluation environment containing variable bindings.\n     */\n    env: MapEnv;\n\n    /**\n     * Optional, cache of expression results.\n     *\n     * @see [[Expr.evaluate]]\n     */\n    cachedExprResults?: Map<Expr, Value>;\n}\n\n/**\n * Evaluate feature attr _without_ default value.\n *\n * @returns actual value or `undefined`\n */\nexport function evaluateTechniqueAttr<T = Value>(\n    context: Env | AttrEvaluationContext,\n    attrValue: T | Expr | undefined\n): T | undefined;\n\n/**\n * Evaluate feature attr _with_ default value.\n *\n * @returns actual value or `defaultValue`\n */\nexport function evaluateTechniqueAttr<T extends Value>(\n    context: Env | AttrEvaluationContext,\n    attrValue: T | Expr | undefined,\n    defaultValue: T\n): T;\n\nexport function evaluateTechniqueAttr<T = Value>(\n    context: Env | AttrEvaluationContext,\n    attrValue: Value | undefined,\n    defaultValue?: T\n): T | undefined {\n    if (attrValue === undefined) {\n        return defaultValue;\n    }\n\n    const result = Env.isEnv(context)\n        ? getPropertyValue(attrValue, context)\n        : getPropertyValue(attrValue, context.env, context.cachedExprResults);\n\n    return result ?? defaultValue;\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    BaseTechniqueParams,\n    PointTechniqueParams,\n    PolygonalTechniqueParams\n} from \"./TechniqueParams\";\nimport {\n    CirclesTechnique,\n    ExtrudedPolygonTechnique,\n    FillTechnique,\n    IndexedTechnique,\n    LineMarkerTechnique,\n    LineTechnique,\n    ShaderTechnique,\n    SolidLineTechnique,\n    SquaresTechnique,\n    StandardTechnique,\n    Technique,\n    TextTechnique\n} from \"./Techniques\";\n\nexport enum AttrScope {\n    /**\n     * Attributes that affect generation of feature geometry and thus must be resolved at decoding\n     * time.\n     *\n     * @remarks\n     * They may have huge variancy as they are implemented as vertex attributes or embedded in\n     * generated meshes.\n     *\n     * These attributes are available only in decoding scope.\n     */\n    FeatureGeometry,\n\n    /**\n     * Attributes that are common to whole group of features drawn with this technique.\n     * These attributes affect generated geometry and  thus must be resolved at decoding time.\n     *\n     * @remarks\n     * They shouldn't have big variancy and evaluate to at least dozens of values as each\n     * combination of these attributes consitute new technique and material.\n     *\n     * These attributes are available in decoding and rendering scope.\n     */\n    TechniqueGeometry,\n\n    /**\n     * Attributes that are common to whole group of features drawn with this technique.\n     *\n     * @remarks\n     * Attributes that can be changed in resulting object/material from frame to frame. They are\n     * usually implemented as uniforms.\n     *\n     * These attributes may be available only at rendering scope.\n     */\n    TechniqueRendering\n}\n\n/**\n * Extract  property names from `Technique`-like interface (excluding `name`) as union of string\n * literals.\n *\n * TechniquePropName<Base\n *\n */\ntype TechniquePropNames<T> = T extends { name: any } ? keyof Omit<T, \"name\"> : keyof T;\n\ninterface AttrDescriptor {\n    /**\n     * The evaluation scope of this attribute.\n     */\n    scope?: AttrScope;\n\n    /**\n     * Mark this attribute as automatic.\n     *\n     * @remarks\n     * When set to `true`, the underlying material property\n     * associated with this attribute is automatically kept in sync\n     * with the value of the technique attribute.\n     */\n    automatic?: boolean;\n}\n\ntype TechniqueAttrDescriptors<T> = {\n    [P in TechniquePropNames<T>]?: AttrScope | AttrDescriptor;\n};\n\nexport interface TechniqueDescriptor<T = Technique> {\n    attrTransparencyColor?: string;\n    attrDescriptors: TechniqueAttrDescriptors<T>;\n}\n\ntype OneThatMatches<T, P> = T extends P ? T : never;\ntype TechniqueByName<K extends Technique[\"name\"]> = OneThatMatches<Technique, { name: K }>;\n\ntype TechniqueDescriptorRegistry = {\n    [P in Technique[\"name\"]]?: TechniqueDescriptor<TechniqueByName<P>>;\n};\n\n/**\n * @internal\n */\nfunction mergeTechniqueDescriptor<T>(\n    ...descriptors: Array<Partial<TechniqueDescriptor<T>>>\n): TechniqueDescriptor<T> {\n    const result: TechniqueDescriptor<T> = {\n        attrDescriptors: {}\n    };\n    for (const descriptor of descriptors) {\n        if (descriptor.attrTransparencyColor !== undefined) {\n            result.attrTransparencyColor = descriptor.attrTransparencyColor;\n        }\n        if (descriptor.attrDescriptors !== undefined) {\n            result.attrDescriptors = { ...result.attrDescriptors, ...descriptor.attrDescriptors };\n        }\n    }\n    return result;\n}\n\nconst baseTechniqueParamsDescriptor: TechniqueDescriptor<BaseTechniqueParams> = {\n    // TODO: Choose which techniques should support color with transparency.\n    // For now we chosen all, but it maybe not suitable for text or line marker techniques.\n    attrTransparencyColor: \"color\",\n    attrDescriptors: {\n        constantHeight: AttrScope.FeatureGeometry,\n        enabled: AttrScope.FeatureGeometry,\n        fadeFar: AttrScope.TechniqueRendering,\n        fadeNear: AttrScope.TechniqueRendering,\n        transparent: { scope: AttrScope.TechniqueRendering, automatic: true },\n        side: { scope: AttrScope.TechniqueRendering, automatic: true }\n    }\n};\n\nconst pointTechniquePropTypes = mergeTechniqueDescriptor<PointTechniqueParams>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrDescriptors: {\n            color: { scope: AttrScope.TechniqueRendering, automatic: true },\n            size: { scope: AttrScope.TechniqueRendering, automatic: true },\n            opacity: { scope: AttrScope.TechniqueRendering, automatic: true }\n        }\n    }\n);\n\nconst squaresTechniquePropTypes = mergeTechniqueDescriptor<SquaresTechnique>(\n    baseTechniqueParamsDescriptor,\n    pointTechniquePropTypes\n);\n\nconst circlesTechniquePropTypes = mergeTechniqueDescriptor<CirclesTechnique>(\n    baseTechniqueParamsDescriptor,\n    pointTechniquePropTypes\n);\n\nconst lineMarkerTechniquePropTypes = mergeTechniqueDescriptor<LineMarkerTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrDescriptors: {\n            text: AttrScope.FeatureGeometry,\n            label: AttrScope.FeatureGeometry,\n            useAbbreviation: AttrScope.FeatureGeometry,\n            useIsoCode: AttrScope.FeatureGeometry,\n            poiName: AttrScope.FeatureGeometry,\n            imageTexture: AttrScope.FeatureGeometry,\n            iconColor: AttrScope.TechniqueRendering,\n            iconBrightness: AttrScope.TechniqueRendering,\n            backgroundColor: AttrScope.TechniqueRendering,\n            backgroundSize: AttrScope.TechniqueRendering,\n            backgroundOpacity: AttrScope.TechniqueRendering,\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            size: AttrScope.TechniqueRendering\n        }\n    }\n);\n\nconst polygonalTechniqueDescriptor: TechniqueDescriptor<PolygonalTechniqueParams> = {\n    attrDescriptors: {\n        polygonOffset: { scope: AttrScope.TechniqueRendering, automatic: true },\n        polygonOffsetFactor: { scope: AttrScope.TechniqueRendering, automatic: true },\n        polygonOffsetUnits: { scope: AttrScope.TechniqueRendering, automatic: true },\n        depthTest: { scope: AttrScope.TechniqueRendering, automatic: true },\n        transparent: { scope: AttrScope.TechniqueRendering, automatic: true },\n        opacity: { scope: AttrScope.TechniqueRendering, automatic: true },\n        color: { scope: AttrScope.TechniqueRendering, automatic: true },\n        lineColor: AttrScope.TechniqueRendering,\n        lineFadeFar: AttrScope.TechniqueRendering,\n        lineFadeNear: AttrScope.TechniqueRendering\n    }\n};\n\nconst solidLineTechniqueDescriptor = mergeTechniqueDescriptor<SolidLineTechnique>(\n    baseTechniqueParamsDescriptor,\n    polygonalTechniqueDescriptor,\n    {\n        attrDescriptors: {\n            lineWidth: AttrScope.TechniqueRendering,\n            secondaryWidth: AttrScope.TechniqueRendering,\n            secondaryColor: AttrScope.TechniqueRendering,\n            dashSize: AttrScope.TechniqueRendering,\n            gapSize: AttrScope.TechniqueRendering,\n            outlineColor: { scope: AttrScope.TechniqueRendering, automatic: true },\n            caps: { scope: AttrScope.TechniqueRendering, automatic: true },\n            drawRangeStart: { scope: AttrScope.TechniqueRendering, automatic: true },\n            drawRangeEnd: { scope: AttrScope.TechniqueRendering, automatic: true },\n            dashes: { scope: AttrScope.TechniqueRendering, automatic: true },\n            dashColor: { scope: AttrScope.TechniqueRendering, automatic: true }\n        }\n    }\n);\n\nconst lineTechniqueDescriptor = mergeTechniqueDescriptor<LineTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrDescriptors: {\n            // TODO, check, which are really dynamic !\n            color: { scope: AttrScope.TechniqueRendering, automatic: true },\n            opacity: { scope: AttrScope.TechniqueRendering, automatic: true },\n            lineWidth: AttrScope.FeatureGeometry\n        }\n    }\n);\n\nconst fillTechniqueDescriptor = mergeTechniqueDescriptor<FillTechnique>(\n    baseTechniqueParamsDescriptor,\n    polygonalTechniqueDescriptor,\n    {\n        attrDescriptors: {\n            wireframe: { scope: AttrScope.TechniqueRendering, automatic: true },\n            color: { scope: AttrScope.TechniqueRendering, automatic: true },\n            opacity: { scope: AttrScope.TechniqueRendering, automatic: true },\n            transparent: { scope: AttrScope.TechniqueRendering, automatic: true },\n            lineWidth: AttrScope.TechniqueRendering,\n            map: { scope: AttrScope.TechniqueRendering, automatic: true }\n        }\n    }\n);\n\nconst standardTechniqueDescriptor = mergeTechniqueDescriptor<StandardTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrDescriptors: {\n            color: { scope: AttrScope.TechniqueRendering, automatic: true },\n            vertexColors: { scope: AttrScope.TechniqueRendering, automatic: true },\n            wireframe: { scope: AttrScope.TechniqueRendering, automatic: true },\n            roughness: { scope: AttrScope.TechniqueRendering, automatic: true },\n            metalness: { scope: AttrScope.TechniqueRendering, automatic: true },\n            alphaTest: { scope: AttrScope.TechniqueRendering, automatic: true },\n            depthTest: { scope: AttrScope.TechniqueRendering, automatic: true },\n            transparent: { scope: AttrScope.TechniqueRendering, automatic: true },\n            opacity: { scope: AttrScope.TechniqueRendering, automatic: true },\n            emissive: { scope: AttrScope.TechniqueRendering, automatic: true },\n            emissiveIntensity: { scope: AttrScope.TechniqueRendering, automatic: true },\n            refractionRatio: { scope: AttrScope.TechniqueRendering, automatic: true },\n            normalMapType: { scope: AttrScope.TechniqueRendering, automatic: true },\n            map: { scope: AttrScope.TechniqueRendering, automatic: true },\n            normalMap: { scope: AttrScope.TechniqueRendering, automatic: true },\n            displacementMap: { scope: AttrScope.TechniqueRendering, automatic: true },\n            roughnessMap: { scope: AttrScope.TechniqueRendering, automatic: true },\n            emissiveMap: { scope: AttrScope.TechniqueRendering, automatic: true },\n            bumpMap: { scope: AttrScope.TechniqueRendering, automatic: true },\n            metalnessMap: { scope: AttrScope.TechniqueRendering, automatic: true },\n            alphaMap: { scope: AttrScope.TechniqueRendering, automatic: true }\n        }\n    }\n);\n\nconst extrudedPolygonTechniqueDescriptor = mergeTechniqueDescriptor<ExtrudedPolygonTechnique>(\n    baseTechniqueParamsDescriptor,\n    standardTechniqueDescriptor,\n    {\n        attrDescriptors: {\n            height: AttrScope.FeatureGeometry,\n            floorHeight: AttrScope.FeatureGeometry,\n            color: AttrScope.FeatureGeometry,\n            defaultColor: AttrScope.FeatureGeometry,\n            defaultHeight: AttrScope.FeatureGeometry,\n            boundaryWalls: AttrScope.FeatureGeometry,\n            footprint: AttrScope.FeatureGeometry,\n            maxSlope: AttrScope.FeatureGeometry,\n            animateExtrusion: AttrScope.TechniqueRendering,\n            lineWidth: AttrScope.TechniqueRendering,\n            lineFadeNear: AttrScope.TechniqueRendering,\n            lineFadeFar: AttrScope.TechniqueRendering,\n            lineColor: AttrScope.TechniqueRendering\n        }\n    }\n);\n\nconst textTechniqueDescriptor = mergeTechniqueDescriptor<TextTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrDescriptors: {\n            text: AttrScope.FeatureGeometry,\n            label: AttrScope.FeatureGeometry,\n            useAbbreviation: AttrScope.FeatureGeometry,\n            useIsoCode: AttrScope.FeatureGeometry,\n            backgroundColor: AttrScope.TechniqueRendering,\n            backgroundSize: AttrScope.TechniqueRendering,\n            backgroundOpacity: AttrScope.TechniqueRendering,\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            priority: AttrScope.TechniqueRendering,\n            size: AttrScope.TechniqueRendering\n        }\n    }\n);\n\nconst shaderTechniqueDescriptor = mergeTechniqueDescriptor<ShaderTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrDescriptors: {\n            params: AttrScope.TechniqueRendering\n        }\n    }\n);\n\nconst techniqueDescriptors: TechniqueDescriptorRegistry = {\n    \"extruded-polygon\": extrudedPolygonTechniqueDescriptor,\n    \"line-marker\": lineMarkerTechniquePropTypes,\n    \"labeled-icon\": lineMarkerTechniquePropTypes,\n    \"solid-line\": solidLineTechniqueDescriptor,\n    \"dashed-line\": solidLineTechniqueDescriptor,\n    terrain: standardTechniqueDescriptor,\n    standard: standardTechniqueDescriptor,\n    squares: squaresTechniquePropTypes,\n    circles: circlesTechniquePropTypes,\n    line: lineTechniqueDescriptor,\n    segments: lineTechniqueDescriptor,\n    fill: fillTechniqueDescriptor,\n    text: textTechniqueDescriptor,\n    shader: shaderTechniqueDescriptor\n};\n\nexport function getTechniqueDescriptor(\n    technique: string | IndexedTechnique | Technique\n): TechniqueDescriptor | undefined {\n    if (typeof technique !== \"string\") {\n        technique = technique.name;\n    }\n    return (techniqueDescriptors as any)[technique];\n}\n\nexport function getTechniqueAttributeDescriptor(\n    technique: string | IndexedTechnique | Technique,\n    attrName: string\n): AttrDescriptor | undefined {\n    const techniqueDescriptor = getTechniqueDescriptor(technique);\n    const attrDescriptors = techniqueDescriptor?.attrDescriptors;\n    const descriptor = attrDescriptors?.[attrName];\n    if (typeof descriptor === undefined) {\n        return undefined;\n    } else if (typeof descriptor === \"object\") {\n        return descriptor;\n    }\n    return { scope: descriptor };\n}\n\nconst automaticAttributeCache: Map<string, string[]> = new Map();\n\nexport function getTechniqueAutomaticAttrs(\n    technique: string | IndexedTechnique | Technique\n): string[] {\n    if (typeof technique !== \"string\") {\n        technique = technique.name;\n    }\n\n    if (automaticAttributeCache.has(technique)) {\n        return automaticAttributeCache.get(technique)!;\n    }\n\n    const descriptors: string[] = [];\n\n    const attrDescriptors = getTechniqueDescriptor(technique)?.attrDescriptors;\n\n    if (attrDescriptors === undefined) {\n        return descriptors;\n    }\n\n    for (const attrName in attrDescriptors) {\n        if (!attrDescriptors.hasOwnProperty(attrName)) {\n            continue;\n        }\n\n        const descr = attrDescriptors[attrName];\n\n        if (descr === undefined || typeof descr === \"number\") {\n            continue;\n        }\n\n        if (descr.automatic === true) {\n            descriptors.push(attrName);\n        }\n    }\n\n    automaticAttributeCache.set(technique, descriptors);\n\n    return descriptors;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { JsonExpr } from \"./Expr\";\nimport { InterpolatedPropertyDefinition } from \"./InterpolatedPropertyDefs\";\n\n/**\n * The style type of the line caps.\n */\nexport type LineCaps = \"Square\" | \"Round\" | \"None\" | \"TriangleOut\" | \"TriangleIn\";\n\n/**\n * The style type of the line dashes.\n */\nexport type LineDashes = \"Square\" | \"Round\" | \"Diamond\";\n\n/**\n * Defines how to interpret the units.\n */\nexport type MetricUnit = \"Meter\" | \"Pixel\";\n\n/**\n * Standard kinds of geometry.\n * @deprecated See {@link BaseTechniqueParams.kind}.\n */\nexport enum StandardGeometryKind {\n    /**\n     * Used in the enabledKinds/disabledKinds filter to match any kind.\n     */\n    All = \"_all_\",\n\n    /**\n     * Background geometry.\n     */\n    Background = \"background\",\n\n    /**\n     * Terrain geometry.\n     */\n    Terrain = \"terrain\",\n\n    /**\n     * Default value for the FillTechnique.\n     */\n    Area = \"area\",\n\n    /**\n     * Default value for all line techniques.\n     */\n    Line = \"line\",\n\n    /**\n     * Default value for the FillTechnique.\n     */\n    Water = \"water\",\n\n    /**\n     * Political borders.\n     */\n    Border = \"border\",\n\n    /**\n     * Basis for all roads.\n     */\n    Road = \"road\",\n\n    /**\n     * Default value for the ExtrudedPolygonTechnique.\n     */\n    Building = \"building\",\n\n    /**\n     * Default value for the TextTechnique, LineMarkerTechnique and the PoiTechnique.\n     */\n    Label = \"label\",\n\n    /**\n     * Anything that may show up last.\n     */\n    Detail = \"detail\"\n}\n\n/**\n * The kind of geometry is used to group objects together,\n * allowing the group to be hidden or displayed.\n *\n * @remarks\n * Any string can be used to specify the kind of the technique in a style in the theme file. Is is\n * suggested to specify multiple kinds for specific types of data. For a highway, the following list\n * of kinds is suggested:\n *```json\n *    [\"line\", \"road\", \"road:highway\"]\n *```\n * If it is a tunnel for a highway:\n *```json\n *    [\"line\", \"road\", \"road:highway\", \"tunnel\", \"road:tunnel\", \"road:highway:tunnel\"]\n *```\n * If specified in this way, specific types of data (here: highway roads) can be enabled and/or\n * disabled.\n * @deprecated See {@link BaseTechniqueParams.kind}.\n */\nexport type GeometryKind = string | StandardGeometryKind;\n\n// See https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-redeclare.md#ignoredeclarationmerge\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const GeometryKind = StandardGeometryKind;\n\n/**\n * Decorate property type with possible dynamic variants.\n */\nexport type DynamicProperty<T> = T | JsonExpr | InterpolatedPropertyDefinition<T>;\n\n/**\n * Length literals.\n *\n * @remarks\n * Description of length units inside a style. Supports literal values (interpreted as `m`), `m` and\n * `px`(i.e. `80`, `14px`, `0.6m`, etc.).\n */\nexport type StyleLength = string | number;\n\n/**\n * Color literals.\n *\n * @remarks\n * Description of colors inside a style. Supports hex values as well as CSS hex, rgb and hsl values\n * (i.e. `0xffffff`, `#f00fab`, `#aaa`, `rgb(255, 0 120)`, `hsl(360, 100%, 100%)`, etc.).\n */\nexport type StyleColor = string | number;\n\n/**\n * A set of {@link GeometryKind}s.\n */\nexport class GeometryKindSet extends Set {\n    /**\n     * Return `true` if the Set is a superset of the set 'subset'.\n     */\n    isSuperset(subset: Set<any>): boolean {\n        for (const elem of subset) {\n            if (!this.has(elem)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Return `true` if the Set intersects Set 'set'.\n     */\n    hasIntersection(set: any) {\n        for (const elem of set) {\n            if (this.has(elem)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Return `true` if the Set either intersects Set 'set' (if set is a Set), of has element 'set'\n     * if set is not a Set.\n     */\n    hasOrIntersects(set: any) {\n        if (set instanceof Set) {\n            return this.hasIntersection(set);\n        }\n        return this.has(set);\n    }\n\n    /**\n     * Return `true` if this set and the array of elements share at least a single element.\n     */\n    hasOrIntersectsArray(subset: any[]) {\n        for (const elem of subset) {\n            if (this.has(elem)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n/**\n * Common attributes or all [[Technique]]s.\n */\nexport interface BaseTechniqueParams {\n    /**\n     * The name used to identify materials created from this technique.\n     */\n    id?: string;\n\n    /**\n     * The render order of the objects created using this technique.\n     *\n     * @remarks\n     * If not specified in style file monotonically increasing\n     * values according to style position in file.\n     */\n    renderOrder?: DynamicProperty<number>;\n\n    /**\n     * The category of this technique.\n     *\n     * @remarks\n     * The category is used in conjunction with {@link Theme.priorities}\n     * to assign render orders to the objects created by this {@link Style}.\n     */\n    category?: DynamicProperty<string>;\n\n    /**\n     * Optional. If `true` or `Pickability.transient`, no IDs will be saved for the geometry\n     * this style creates. Default is `Pickability.onlyVisible`, which allows all pickable and\n     * visible objects to be picked, Pickability.all, will also allow invisible objects to be\n     * picked.\n     * @defaultValue `Pickability.onlyVisible`\n     * The boolean option is for backwardscompatibilty, please use the Pickability.\n     *\n     *\n     * TODO: deprecate and rename to something that makes more sense\n     */\n    transient?: boolean | Pickability;\n\n    /**\n     * Distance to the camera `(0.0 = camera position, 1.0 = farPlane) at which the object start\n     * fading out (opacity decreases).\n     */\n    fadeNear?: DynamicProperty<number>;\n\n    /**\n     * Distance to the camera (0.0 = camera position, 1.0 = farPlane) at which the object has zero\n     * opacity and stops fading out. An undefined value disables fading.\n     */\n    fadeFar?: DynamicProperty<number>;\n\n    /**\n     * Specified kind of geometry.\n     *\n     * @remarks\n     * One kind is set as default in the technique, and can be overridden in the style.\n     *\n     * @deprecated Use {@link enabled} with expressions based on `['dynamic-properties']` operator.\n     * See \"object picking\" example.\n     */\n    kind?: GeometryKind | GeometryKindSet;\n\n    /**\n     * Runtime filtering of techniques.\n     *\n     * Use with `['dynamic-properties']` operator for dynamic feature highlight, highlighig etc.\n     *\n     * @see Picking example\n     */\n    enabled?: DynamicProperty<boolean>;\n\n    /**\n     * Set to 'true' if line should appear transparent.\n     *\n     * @remarks\n     * Rendering transparent lines may come with a\n     * slight performance impact.\n     * See https://threejs.org/docs/#api/en/materials/Material.transparent.\n     */\n    transparent?: DynamicProperty<boolean>;\n\n    /**\n     * Defines which side of faces will be rendered - front, back or both.\n     * See https://threejs.org/docs/#api/en/materials/Material.side.\n     */\n    side?: DynamicProperty<number>;\n\n    /**\n     * Minimal zoom level. If the current zoom level is smaller, the technique will not be used.\n     */\n    minZoomLevel?: DynamicProperty<number>;\n\n    /**\n     * Maximum zoom level. If the current zoom level is equal to or greater, the technique will not be used.\n     */\n    maxZoomLevel?: DynamicProperty<number>;\n\n    /**\n     * If `true`, geometry height won't be scaled on projection. Enable it for projections with\n     * variable scale factor (e.g. mercator) to avoid distortions in geometry with great heights and\n     * latitude spans. E.g. a large object with even height would look oblique to the ground plane\n     * on mercator unless this property is set to `true`.\n     *\n     * @defaultValue `true` for geometries stored at level less than `12`.\n     */\n    constantHeight?: DynamicProperty<boolean>;\n}\n\nexport enum TextureCoordinateType {\n    /**\n     * Texture coordinates are in tile space.\n     *\n     * @remarks\n     * SW of the tile will have (0,0) and NE will have (1,1).\n     */\n    TileSpace = \"tile-space\",\n\n    /**\n     * Texture coordinates are in equirectangular space.\n     *\n     * @remarks\n     * (u, v) = ( (longitude+180) / 360, (latitude+90) / 180).\n     */\n    EquirectangularSpace = \"equirectangular-space\",\n\n    /**\n     * Texture coordinates in feature space.\n     *\n     * @remarks\n     * To compute texture coordinates in feature space,\n     * the feature must have a property named `bbox` with value\n     * the tuple `[west, south, east, north]`.\n     */\n    FeatureSpace = \"feature-space\"\n}\n\n/**\n * Standard technique parameters.\n */\nexport interface StandardTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of the feature in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`,\n     * `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.color.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * A value of `true` creates a wireframe geometry. (May not be supported with all techniques).\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.wireframe.\n     */\n    wireframe?: boolean;\n    /**\n     * If `vertexColors` is `true`, every vertex has color information, which is interpolated\n     * between vertices.\n     * See https://threejs.org/docs/#api/en/materials/Material.vertexColors.\n     */\n    vertexColors?: boolean;\n    /**\n     * How rough the material appears. `0.0` means a smooth mirror reflection. `1.0` means fully\n     * diffuse. Default is `1.0`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.roughness.\n     */\n    roughness?: DynamicProperty<number>;\n    /**\n     * How much the material is like a metal. Nonmetallic materials such as wood or stone use `0.0`,\n     * metallic ones use `1.0`, with nothing (usually) in between. Default is `0.0`. A value between\n     * `0.0` and `1.0` can be used for a rusty metal look. If `metalnessMap` is also provided, both\n     * values are multiplied.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.metalness.\n     */\n    metalness?: DynamicProperty<number>;\n    /**\n     * The material will not be rendered if the opacity is lower than this value.\n     * See https://threejs.org/docs/#api/en/materials/Material.alphaTest.\n     */\n    alphaTest?: DynamicProperty<number>;\n    /**\n     * Skip rendering clobbered pixels.\n     * See https://threejs.org/docs/#api/en/materials/Material.depthTest.\n     */\n    depthTest?: DynamicProperty<boolean>;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     * See https://threejs.org/docs/#api/en/materials/Material.opacity.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Emissive (light) color of the material, essentially a solid color unaffected by other\n     * lighting. Default is black.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.emissive.\n     * @format color-hex\n     */\n    emissive?: DynamicProperty<StyleColor>;\n    /**\n     * Intensity of the emissive light. Modulates the emissive color. Default is `1`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.emissiveIntensity.\n     */\n    emissiveIntensity?: DynamicProperty<number>;\n    /**\n     * The index of refraction (IOR) of air (approximately 1) divided by the index of refraction of\n     * the material. It is used with environment mapping modes `THREE.CubeRefractionMapping` and\n     * `THREE.EquirectangularRefractionMapping`. The refraction ratio should not exceed `1`. Default\n     *  is `0.98`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.refractionRatio.\n     */\n    refractionRatio?: DynamicProperty<number>;\n\n    /**\n     * Whether and how texture coordinates should be generated. No texture coordinates are\n     * generated if `undefined`.\n     * Should be set if any texture assigned (e.g. `map`, `normalMap`, ...).\n     */\n    textureCoordinateType?: TextureCoordinateType;\n\n    /*\n     * URL or texture buffer that should be used as color map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.map\n     */\n    map?: DynamicProperty<string | TextureBuffer>;\n    mapProperties?: DynamicProperty<TextureProperties>;\n\n    /**\n     * URL or texture buffer that should be used as normal map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.normalMap\n     */\n    normalMap?: DynamicProperty<string | TextureBuffer>;\n    normalMapType?: DynamicProperty<number>;\n    normalMapProperties?: DynamicProperty<TextureProperties>;\n\n    /**\n     * URL or texture buffer that should be used as displacement map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.displacementMap\n     */\n    displacementMap?: DynamicProperty<string | TextureBuffer>;\n    displacementMapProperties?: DynamicProperty<TextureProperties>;\n\n    /**\n     * URL or texture buffer that should be used as roughness map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.roughnessMap\n     */\n    roughnessMap?: DynamicProperty<string | TextureBuffer>;\n    roughnessMapProperties?: DynamicProperty<TextureProperties>;\n\n    /**\n     * URL or texture buffer that should be used as emissive map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.emissiveMap\n     */\n    emissiveMap?: DynamicProperty<string | TextureBuffer>;\n    emissiveMapProperties?: DynamicProperty<TextureProperties>;\n\n    /**\n     * URL or texture buffer that should be used as bump map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.bumpMap\n     */\n    bumpMap?: DynamicProperty<string | TextureBuffer>;\n    bumpMapProperties?: DynamicProperty<TextureProperties>;\n\n    /**\n     * URL or texture buffer that should be used as metalness map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.metalnessMap\n     */\n    metalnessMap?: DynamicProperty<string | TextureBuffer>;\n    metalnessMapProperties?: DynamicProperty<TextureProperties>;\n\n    /**\n     * URL or texture buffer that should be used as alpha map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.alphaMap\n     */\n    alphaMap?: DynamicProperty<string | TextureBuffer>;\n    alphaMapProperties?: DynamicProperty<TextureProperties>;\n}\n\n/**\n * Possible parameters of [[PointTechnique]].\n */\nexport interface PointTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of a point in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * URL of a texture image to be loaded.\n     */\n    texture?: string;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Size of point in pixels.\n     */\n    size?: DynamicProperty<number>;\n    /**\n     * Whether to enable picking on these points.\n     */\n    enablePicking?: boolean;\n}\n\n/**\n * Define the stacking option. Enum values for theme file are in \"kebab-case\".\n */\nexport enum PoiStackMode {\n    /**\n     * Show in a stack.\n     */\n    Show = \"show-in-stack\",\n    /**\n     * Do not show in a stack.\n     */\n    Hide = \"hide-in-stack\",\n    /**\n     * Show category parent in the stack.\n     */\n    ShowParent = \"show-parent\"\n}\n\n/**\n * Define the pickability of an object.\n */\nexport enum Pickability {\n    /**\n     * Pickable if visible.\n     */\n    onlyVisible = \"only-visible\",\n    /**\n     * Not Pickable at all.\n     */\n    transient = \"transient\",\n    /**\n     * All objects of this type pickable.\n     */\n    all = \"all\"\n}\n\n/**\n * Converts backwards compatible transient property to pure {@type Pickabilty} object\n *\n * @param transient The transient property from the style\n */\nexport function transientToPickability(transient?: boolean | Pickability): Pickability {\n    let pickability: Pickability = Pickability.onlyVisible;\n    if (transient !== undefined && transient !== null) {\n        pickability =\n            typeof transient === \"string\"\n                ? transient\n                : transient === true\n                ? Pickability.transient\n                : Pickability.onlyVisible;\n    }\n    return pickability;\n}\n\n/**\n * Defines options (tokens) supported for text placements defined via [[placements]] attribute.\n *\n * @remarks\n * Possible values are defined as vertical placement letter and horizontal letter, where\n * one of the axis may be ignored and then assumed centered. Moving clock-wise, we have:\n * `TL` (top-left), `T` (top-center), `TR` (top-right), `R` (center-right), `BR` (bottom-right),\n * `B` (bottom-center), `BL` (bottom-left), `L` (left), `C` (center-center).\n * Alternatively instead of `T`, `B`, `L`, `R` geographic directions may be used accordingly:\n * `NW` (north-west), `N` (north), `NE` (north-east), `E` (east), `SE` (south-east), `S` (south),\n * `SW` (south-west), `W` (west).\n */\nexport enum PlacementToken {\n    TopLeft = \"TL\",\n    Top = \"T\",\n    TopRight = \"TR\",\n    Right = \"R\",\n    BottomRight = \"BR\",\n    Bottom = \"B\",\n    BottomLeft = \"BL\",\n    Left = \"L\",\n    Center = \"C\",\n    NorthWest = \"NW\",\n    North = \"N\",\n    NorthEast = \"NE\",\n    East = \"E\",\n    SouthEast = \"SE\",\n    South = \"S\",\n    SouthWest = \"SW\",\n    West = \"W\"\n}\n\n/**\n * Technique that describes icons with labels. Used in [[PoiTechnique]] and [[LineMarkerTechnique]]\n * (for road shields).\n */\nexport interface MarkerTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Text to be displayed for feature.\n     *\n     * @remarks\n     * Defaults to first defined:\n     *  - feature property `label` if present in technique (deprecated)\n     *  - `[\"get\", \"name:short\"]` is `useAbbreviation` is true\n     *  - `[\"get\", \"iso_code\"]` is `useIsoCode` is true\n     *  - `[\"get\", \"name:$LANGUAGE\"]` for each specified language\n     *  - `[\"get\", \"name\"]`\n     *\n     * See [[ExtendedTileInfo.getFeatureText]]\n     */\n    text?: DynamicProperty<string>;\n\n    /**\n     * Field name of object containing the text to be rendered.\n     *\n     * @deprecated Use `[\"get\", \"FIELD\"]`.\n     */\n    label?: string;\n    /**\n     * If `true`, the abbreviation (field `name:short`) of the elements is used as text.\n     *\n     * @deprecated Use proper expression with [`get`, `name:short`] for this purpose.\n     */\n    useAbbreviation?: boolean;\n    /**\n     * If `true`, the iso code (field 'iso_code') of the elements is used as text.\n     * The `iso_code` field contains the ISO 3166-1 2-letter country code.\n     *\n     * @deprecated Use proper expression with [`get`, `iso_code`] for this purpose.\n     */\n    useIsoCode?: boolean;\n    /**\n     * Priority of marker, defaults to `0`. Markers with highest priority get placed first.\n     */\n    priority?: DynamicProperty<number>;\n    /**\n     * Minimum zoomLevel at which to display the label text. No default.\n     */\n    textMinZoomLevel?: DynamicProperty<number>;\n    /**\n     * Maximum zoomLevel at which to display the label text. No default.\n     */\n    textMaxZoomLevel?: DynamicProperty<number>;\n    /**\n     * Minimum zoomLevel at which to display the label icon. No default.\n     */\n    iconMinZoomLevel?: DynamicProperty<number>;\n    /**\n     * Maximum zoomLevel at which to display the label icon. No default.\n     */\n    iconMaxZoomLevel?: DynamicProperty<number>;\n\n    /**\n     * Icon color.\n     *\n     * @remarks\n     * If specified, combined using multiplication with color value read from icon texture.\n     * Works best for grayscale or monochromatic textures.\n     */\n    iconColor?: StyleColor;\n\n    /**\n     * Icon brightness.\n     *\n     * @remarks\n     * Factor that multiplies a color on top of the icon texture (and `iconColor`) with `0` being\n     * fully black as final output, `1` being the original rgb colors of the texture.\n     *\n     * @defaultValue `1`\n     */\n    iconBrightness?: number;\n\n    /**\n     * Scaling factor of icon. Defaults to 0.5, reducing the size ot 50% in the distance.\n     */\n    distanceScale?: number;\n    /**\n     * If `false`, text may overlap markers.\n     * @defaultValue `false`\n     */\n    textMayOverlap?: boolean;\n    /**\n     * If `false`, the icon may overlap text and other icons of lower priority.\n     *\n     * @remarks\n     * If not defined, the\n     * property value from `textMayOverlap` will be used.\n     * @defaultValue `false`\n     */\n    iconMayOverlap?: boolean;\n    /**\n     * If `false`, text will not reserve screen space, other markers will be able to overlap.\n     * @defaultValue `true`\n     */\n    textReserveSpace?: boolean;\n    /**\n     * If `false`, icon will not reserve screen space, other markers will be able to overlap.\n     *\n     * @remarks\n     * If not defined, the property value from `iconReserveSpace` will be used.\n     * @defaultValue `true`\n     */\n    iconReserveSpace?: boolean;\n    /**\n     * If `false`, text will not be rendered during animations. Defaults to `true`.\n     */\n    renderTextDuringMovements?: boolean;\n    /**\n     * If `true`, the label will always be rendered on top.\n     *\n     * @remarks\n     * If overlapping with other labels with\n     * this flag set, the render order is undefined.\n     * @defaultValue `false`\n     */\n    alwaysOnTop?: boolean;\n    /**\n     * If `true`, icon will appear even if the text part is blocked by other labels.\n     *\n     * @remarks\n     * @defaultValue `false`\n     */\n    textIsOptional?: boolean;\n    /**\n     * Should be displayed on map or not. Defaults to `true`.\n     */\n    showOnMap?: boolean;\n    /**\n     * Specify stack mode. Defaults to `ShowInStack`.\n     */\n    stackMode?: PoiStackMode;\n    /**\n     * Minimal distance between markers in screen pixels.\n     */\n    minDistance?: number;\n    /**\n     * If `true`, text will appear even if the icon is blocked by other labels.\n     *\n     * @defaultValue `false`\n     */\n    iconIsOptional?: boolean;\n    /**\n     * Fading time for labels in seconds.\n     */\n    textFadeTime?: number;\n    /**\n     * Fading time for icons in seconds.\n     */\n    iconFadeTime?: number;\n    /**\n     * Horizontal offset (to the right) in screen pixels.\n     */\n    xOffset?: DynamicProperty<number>;\n    /**\n     * Vertical offset (up) in screen pixels.\n     */\n    yOffset?: DynamicProperty<number>;\n    /**\n     * Horizontal offset (to the right) in screen pixels.\n     */\n    iconXOffset?: DynamicProperty<number>;\n    /**\n     * Vertical offset (up) in screen pixels.\n     */\n    iconYOffset?: DynamicProperty<number>;\n    /**\n     * Scaling factor of icon.\n     */\n    iconScale?: number;\n    /**\n     * Vertical height in pixels, controls vertical scaling. Overrides `iconScale`.\n     */\n    screenHeight?: DynamicProperty<number>;\n    /**\n     * Horizontal height in pixels, controls horizontal scaling. Overrides `iconScale`.\n     */\n    screenWidth?: DynamicProperty<number>;\n    /**\n     * Name of the POI table which should be used for this POI.\n     */\n    poiTable?: string;\n    /**\n     * Fixed name to identify POI options in the POI table.\n     *\n     * @remarks\n     * If `poiName` has a value, this value\n     * supersedes any value read from the field referenced in `poiNameField`.\n     */\n    poiName?: string;\n    /**\n     * Name of the field to evaluate to get the name of the POI options in the POI table.\n     */\n    poiNameField?: string;\n    /**\n     * The name of either the {@link ImageTexture} in {@link Theme.imageTextures} or the user image\n     * cached in {@link @here/harp-mapview#userImageCache} to be rendered as marker.\n     */\n    imageTexture?: DynamicProperty<string>;\n    /**\n     * Field name to extract imageTexture content from, if imageTexture refers to an\n     * [[ImageTexture]] definition.\n     */\n    imageTextureField?: string;\n    /**\n     * Prefix for `imageTexture` if `imageTextureField` is used.\n     */\n    imageTexturePrefix?: string;\n    /**\n     * Postfix for `imageTexture` if `imageTextureField` is used.\n     */\n    imageTexturePostfix?: string;\n    /**\n     * Name of the text style.\n     */\n    style?: string;\n    /**\n     * Name of the preferred [[Font]] to be used when rendering.\n     */\n    fontName?: string;\n    /**\n     * Size of the text (pixels).\n     */\n    size?: DynamicProperty<number>;\n    /**\n     * Size of the text background (pixels).\n     */\n    backgroundSize?: DynamicProperty<number>;\n    /**\n     * Glyph style to apply for the currently active [[Font]].\n     */\n    fontStyle?: \"Regular\" | \"Bold\" | \"Italic\" | \"BoldItalic\";\n    /**\n     * Glyph variant to apply for the currently active [[Font]].\n     */\n    fontVariant?: \"Regular\" | \"AllCaps\" | \"SmallCaps\";\n    /**\n     * Glyph local rotation (radians).\n     */\n    rotation?: number;\n    /**\n     * Text color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * Text background color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`,\n     * `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    backgroundColor?: DynamicProperty<StyleColor>;\n    /**\n     * For transparent text, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Background text opacity value.\n     */\n    backgroundOpacity?: DynamicProperty<number>;\n    /**\n     * Inter-glyph spacing (pixels). Scaled by `size`.\n     */\n    tracking?: DynamicProperty<number>;\n    /**\n     * Inter-line spacing (pixels). Scaled by `size`.\n     */\n    leading?: DynamicProperty<number>;\n    /**\n     * Maximum number of lines for this label.\n     */\n    maxLines?: DynamicProperty<number>;\n    /**\n     * Maximum line width (pixels).\n     */\n    lineWidth?: DynamicProperty<number>;\n    /**\n     * [[TextCanvas]] rotation (radians).\n     */\n    canvasRotation?: DynamicProperty<number>;\n    /**\n     * Line typesetting rotation (radians).\n     */\n    lineRotation?: DynamicProperty<number>;\n    /**\n     * Wrapping (line-breaking) mode.\n     */\n    wrappingMode?: DynamicProperty<\"None\" | \"Character\" | \"Word\">;\n    /**\n     * Text position regarding the baseline.\n     *\n     * @note The [[placements]] attribute may override the alignment settings.\n     */\n    hAlignment?: DynamicProperty<\"Left\" | \"Center\" | \"Right\">;\n    /**\n     * Text position inside a line.\n     *\n     * @note The [[placements]] attribute may supersede it.\n     */\n    vAlignment?: DynamicProperty<\"Above\" | \"Center\" | \"Below\">;\n    /**\n     * Text label positions relative to the label central position (anchor point).\n     *\n     * @remarks\n     * This attribute defines a comma separated tokens of possible text placements\n     * relative to label central position (anchor), for example: \"TL, TR, C\".\n     * Keep in mind that horizontal placement defines text position in opposite way to\n     * the alignment, so the text `R` placed (located on the **right side** of label position)\n     * will be the same as `Left` aligned by deduction. On other side vertical placement is quite\n     * similar to vertical alignment so `T` placement corresponds with `Above` alignment.\n     *\n     * @note This attribute may override [[hAlignment]] and [[vAlignment]] if defined.\n     */\n    placements?: string;\n\n    /**\n     * World space offset in meters applied to the icon along the ground plane, i.e. tangent\n     * to the local space up vector.\n     *\n     * @remarks\n     * Valid only for icons which have the\n     * \"offset_direction\" property as an attribute of the data, which specifies an angle in degrees\n     * in which direction the offset should take place, i.e. 0 degrees is north, 90 is east etc.\n     */\n    worldOffset?: DynamicProperty<number>;\n}\n\nexport interface LineTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of a line in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Width of line in pixels. WebGL implementations will normally render all lines with 1 pixel\n     * width, and ignore this value.\n     */\n    lineWidth: DynamicProperty<number>;\n}\n\n/**\n * Declares a geometry as a segment.\n */\nexport interface SegmentsTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of segments in a hexadecimal notation, for example: `\"#e4e9ec\"` or `\"#fff\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * For transparent lines, set a value between `0.0` for fully transparent, to `1.0` for fully\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Width of a line in meters.\n     */\n    lineWidth: DynamicProperty<number>;\n}\n\n/**\n * Declares a a geometry as a polygon.\n */\nexport interface PolygonalTechniqueParams {\n    /**\n     * Whether to use polygon offset. Default is false.\n     *\n     * @remarks\n     * This corresponds to the\n     * GL_POLYGON_OFFSET_FILL WebGL feature.\n     *\n     * PolygonOffset is used to raise the geometry towards the geometry (for depth calculation\n     * only). Default is false.\n     *\n     * See here: https://sites.google.com/site/threejstuts/home/polygon_offset\n     *\n     * To activate polygonOffset these values have to be set to pull the line \"forwards\":\n     *\n     * transparent: true\n     *\n     * polygonOffset: true\n     *\n     * polygonOffsetFactor : -1.0, (as an example, see link above)\n     *\n     * polygonOffsetUnits: -1 (as an example, see link above)\n     */\n    polygonOffset?: boolean;\n\n    /**\n     * Sets the polygon offset factor. Default is 0.\n     */\n    polygonOffsetFactor?: DynamicProperty<number>;\n\n    /**\n     * Sets the polygon offset units. Default is 0.\n     */\n    polygonOffsetUnits?: DynamicProperty<number>;\n\n    /**\n     * Skip rendering clobbered pixels.\n     * See https://threejs.org/docs/#api/en/materials/Material.depthTest.\n     * @defaultValue `false`\n     */\n    depthTest?: DynamicProperty<boolean>;\n\n    /**\n     * Sets the polygon outline color.\n     * @format color-hex\n     */\n    lineColor?: DynamicProperty<StyleColor>;\n\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges start\n     * fading out.\n     */\n    lineFadeNear?: DynamicProperty<number>;\n\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges become\n     * transparent. A value of <= 0.0 disables fading.\n     */\n    lineFadeFar?: DynamicProperty<number>;\n\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: DynamicProperty<boolean>;\n\n    /**\n     * For transparent lines, set a value between `0.0` for fully transparent, to `1.0` for fully\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n\n    /**\n     * Fill color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n}\n\n/**\n * Declares a a geometry as a basic extruded line.\n */\nexport interface BasicExtrudedLineTechniqueParams\n    extends BaseTechniqueParams,\n        PolygonalTechniqueParams {\n    /**\n     * A value determining the shading technique.\n     *\n     * @remarks\n     * Valid values are \"Basic\" and \"Standard\". Default is \"basic\".\n     *\n     * `\"basic\"`   : Simple shading, faster to render. Only simple color and opacity are effective.\n     * `\"standard\"`: Elaborate shading, with metalness, and roughness.\n     */\n    shading?: \"basic\";\n    /**\n     * Width of line in meters for different zoom levels.\n     */\n    lineWidth: DynamicProperty<number>;\n    /**\n     * A value of `true` creates a wireframe geometry. (May not be supported with all techniques).\n     */\n    wireframe?: boolean;\n    /**\n     * Style of both end caps. Possible values: `\"None\"`, `\"Circle\"`. A value of undefined maps to\n     * `\"Circle\"`.\n     */\n    caps?: DynamicProperty<\"None\" | \"Circle\">;\n}\n\n/**\n * Declares a a geometry as a standard extruded line.\n */\nexport interface StandardExtrudedLineTechniqueParams\n    extends StandardTechniqueParams,\n        PolygonalTechniqueParams {\n    /**\n     * A value determining the shading technique. Valid values are `\"basic\"` and `\"standard\"`.\n     * Default is `\"basic\"`.\n     *\n     * @remarks\n     * `\"basic\"` : Simple shading, faster to render. Only simple color and opacity are effective.\n     * `\"standard\"` : Elaborate shading, with metalness, and roughness.\n     */\n    shading: \"standard\";\n    /**\n     * Width of a line in meters for different zoom levels.\n     */\n    lineWidth: DynamicProperty<number>;\n    /**\n     * Style of both end caps. Possible values: `\"None\"`, `\"Circle\"`.\n     *\n     * @remarks\n     * A value of undefined maps to\n     * `\"Circle\"`.\n     */\n    caps?: DynamicProperty<\"None\" | \"Circle\">;\n}\n\n/**\n * Declares a a geometry as a solid line.\n */\nexport interface SolidLineTechniqueParams extends BaseTechniqueParams, PolygonalTechniqueParams {\n    /**\n     * Color of a line in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * Color of a line outline in hexadecimal or CSS-style notation,\n     * for example: `\"#e4e9ec\"`, `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    outlineColor?: DynamicProperty<StyleColor>;\n    /**\n     * @deprecated Specify metrics units as part of the value instead.\n     * Units in which different size properties are specified. Either `Meter` (default) or `Pixel`.\n     */\n    metricUnit?: MetricUnit;\n    /**\n     * Width of a line in `metricUnit` for different zoom levels.\n     */\n    lineWidth: DynamicProperty<StyleLength>;\n    /**\n     * Outline width of a line in `metricUnit`s for different zoom levels.\n     */\n    outlineWidth?: DynamicProperty<StyleLength>;\n    /**\n     * Clip the line outside the tile if `true`.\n     * @defaultValue false\n     */\n    clipping?: DynamicProperty<boolean>;\n    /**\n     * Describes the style of the line caps.\n     * @defaultValue `\"Round\"`.\n     */\n    caps?: DynamicProperty<LineCaps>;\n    /**\n     * Color of secondary line geometry in hexadecimal or CSS-style notation, for example:\n     * `\"#e4e9ec\"`, `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    secondaryColor?: DynamicProperty<StyleColor>;\n    /**\n     * Width of secondary line geometry in `metricUnit`s for different zoom levels.\n     */\n    secondaryWidth?: DynamicProperty<StyleLength>;\n    /**\n     * The render order of the secondary line geometry object created using this technique.\n     */\n    secondaryRenderOrder?: DynamicProperty<number>;\n    /**\n     * Describes the style of the secondary line caps\n     * @defaultValue `\"Round\"`.\n     */\n    secondaryCaps?: DynamicProperty<LineCaps>;\n    /**\n     * Describes the category of the secondary geometry object created using this technique.\n     */\n    secondaryCategory?: DynamicProperty<string>;\n    /**\n     * Describes the starting drawing position for the line (in the range [0...1]).\n     * Default is `0.0`.\n     */\n    drawRangeStart?: number;\n    /**\n     * Describes the ending drawing position for the line (in the range [0...1]).\n     * Default is `1.0`.\n     */\n    drawRangeEnd?: number;\n    /**\n     * Describes the style of the line dashes.\n     * @defaultValue `\"Square\"`.\n     */\n    dashes?: DynamicProperty<LineDashes>;\n    /**\n     * Color of a line dashes in hexadecimal or CSS-style notation,\n     * for example: `\"#e4e9ec\"`, `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    dashColor?: DynamicProperty<StyleColor>;\n    /**\n     * Length of a line in meters for different zoom levels.\n     */\n    dashSize?: DynamicProperty<StyleLength>;\n    /**\n     * Size of a gap between lines in meters for different zoom levels.\n     */\n    gapSize?: DynamicProperty<StyleLength>;\n    /**\n     * Size in world units how far to offset the line perpendicular to its direction.\n     */\n    offset?: DynamicProperty<number>;\n}\n\n/**\n * Technique used to draw filled polygons.\n */\nexport interface FillTechniqueParams extends BaseTechniqueParams, PolygonalTechniqueParams {\n    /**\n     * A value of `true` creates a wireframe geometry. (May not be supported with all techniques).\n     */\n    wireframe?: boolean;\n    /**\n     * Width of the lines. Currently limited to the [0, 1] range.\n     */\n    lineWidth?: DynamicProperty<number>;\n\n    /*\n     * URL or texture buffer that should be used as color map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshBasicMaterial.map\n     */\n    map?: DynamicProperty<string | TextureBuffer>;\n    mapProperties?: DynamicProperty<TextureProperties>;\n\n    /**\n     * Whether and how texture coordinates should be generated. No texture coordinates are\n     * generated if `undefined`.\n     * Should be set if a `map` is assigned.\n     */\n    textureCoordinateType?: TextureCoordinateType;\n}\n\n/**\n * Technique used to draw a geometry as an extruded polygon, for example extruded buildings.\n */\nexport interface ExtrudedPolygonTechniqueParams extends StandardTechniqueParams {\n    /**\n     * Renders the footprint lines if set to 'true'.\n     */\n    footprint?: boolean;\n    /**\n     * Set to a negative value to remove all the vertical lines, and to a value between 0.0 and 1.0\n     * to modulate the amount of vertical lines rendered.\n     */\n    maxSlope?: number;\n    /**\n     * Width of the lines. Currently limited to the [0, 1] range.\n     */\n    lineWidth: DynamicProperty<number>;\n    /**\n     * Fill color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    lineColor?: DynamicProperty<StyleColor>;\n    /**\n     * Mix value between the lineColor(0.0) and the geometry's vertex colors(1.0).\n     */\n    lineColorMix?: number;\n\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges start\n     * fading out.\n     */\n    lineFadeNear?: DynamicProperty<number>;\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges become\n     * transparent. A value of <= 0.0 disables fading.\n     */\n    lineFadeFar?: DynamicProperty<number>;\n\n    /**\n     * Height above ground in world units of extruded polygon.\n     *\n     * Usually, unique per feature, so defaults to `[\"get\", \"height\"]`.\n     */\n    height?: DynamicProperty<number>;\n\n    /**\n     * Height of \"floor\" of extruded polygon in world units of extruded polygon.\n     *\n     * Usually, unique per feature, so defaults to `[\"number\", [\"get\", \"min_height\"], 0]`.\n     */\n    floorHeight?: DynamicProperty<number>;\n\n    /**\n     * In some data sources, for example Tilezen, building extrusion information might be missing.\n     * This attribute allows to define a default height of an extruded polygon in the theme.\n     *\n     * @deprecated use [[height]]\n     */\n    defaultHeight?: number;\n\n    /**\n     * Default color used if feature doesn't provide color attribute\n     * and [[MapEnv]] did not return it too.\n     * @format color-hex\n     */\n    defaultColor?: DynamicProperty<StyleColor>;\n\n    /**\n     * If `true`, wall geometry will is added along the tile boundaries.\n     *\n     * @remarks\n     * this causes artifacts when used with shadows,\n     * so it should be known in advance that shadows won't be enabled.\n     * @defaultValue `false`\n     */\n    boundaryWalls?: boolean;\n\n    /**\n     * Animate the extrusion of the buildings if set to `true`.\n     */\n    animateExtrusion?: DynamicProperty<boolean>;\n\n    /**\n     * Duration of the building's extrusion in milliseconds\n     */\n    animateExtrusionDuration?: number;\n\n    /**\n     * Control rendering of depth prepass before the actual geometry.\n     *\n     * @remarks\n     * Depth prepass is a method to render translucent meshes, hence only the visible front faces of\n     * a mesh are actually rendered, removing artifacts caused by blending with internal faces of\n     * the mesh. This method is used for drawing translucent buildings over map background.\n     *\n     * By default, each [[DataSource]] determines how/if enable the depth pre-pass. A value of\n     * `false` forcefully disables depth prepass.\n     */\n    enableDepthPrePass?: boolean;\n}\n\nexport interface ShaderTechniqueMaterialParameters {\n    [name: string]: any;\n}\n\n/**\n * Special technique for user-defined shaders. See\n * https://threejs.org/docs/#api/harp-materials/ShaderMaterial for details.\n */\nexport interface ShaderTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Parameters for shader. See `THREE.ShaderMaterialParameters`.\n     */\n    params: ShaderTechniqueMaterialParameters;\n\n    /**\n     * Type of primitive for the shader technique.\n     */\n    primitive: \"point\" | \"line\" | \"segments\" | \"mesh\";\n\n    [name: string]: any;\n}\n\n/**\n * Technique used to render a terrain geometry with a texture.\n *\n * @remarks\n * When using this technique, the datasource will produce texture coordinates in\n * local tile space (i.e. [0,0] at south-west and [1,1] at north-east tile corner).\n */\nexport interface TerrainTechniqueParams extends StandardTechniqueParams {\n    /**\n     * Colors to be applied at different heights (as a results of a `displacementMap`).\n     */\n    heightBasedColors?: HeightBasedColors;\n\n    /**\n     * If `heightBasedColors` is defined, this value defines the interpolation method used to\n     * generate the height-based gradient texture (defaults to `Discrete`).\n     * @defaultValue `\"Discrete\"`\n     */\n    heightGradientInterpolation?: \"Discrete\" | \"Linear\" | \"Cubic\";\n\n    /**\n     * If `heightBasedColors` is defined, this value defines the width (in pixels) of the generated\n     * gradient texture.\n     *\n     * @defaultValue `128`\n     */\n    heightGradientWidth?: number;\n}\n\n/**\n * Render geometry as a text.\n */\nexport interface TextTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Text to be displayed for feature.\n     *\n     * @remarks\n     * Defaults to first defined:\n     *  - feature property `label` if present in technique (depreacted);\n     *  - `[\"get\", \"name:short\"]` is `useAbbreviation` is true;\n     *  - `[\"get\", \"iso_code\"]` is `useIsoCode` is true;\n     *  - `[\"get\", \"name:$LANGUAGE\"]` for each specified language;\n     *  - `[\"get\", \"name\"]`.\n     */\n    text?: DynamicProperty<string>;\n\n    /**\n     * Field name of object containing the text to be rendered.\n     *\n     * @deprecated Use `[\"get\", \"FIELD\"]`.\n     */\n    label?: string;\n    /**\n     * If `true`, the abbreviation (field `name:short`) of the elements is used as text.\n     *\n     * @deprecated Use proper expression with [`get`, `name:short`] for this purpose.\n     */\n    useAbbreviation?: boolean;\n    /**\n     * If `true`, the iso code (field 'iso_code') of the elements is used as text.\n     * @remarks\n     * The `iso_code` field contains the ISO 3166-1 2-letter country code.\n     *\n     * @deprecated Use proper expression with [`get`, `iso_code`] for this purpose.\n     */\n    useIsoCode?: boolean;\n    /**\n     * Priority of text, defaults to `0`. Elements with highest priority get placed first.\n     */\n    priority?: DynamicProperty<number>;\n    /**\n     * Scaling factor of the text. Defaults to 0.5, reducing the size ot 50% in the distance.\n     */\n    distanceScale?: number;\n    /**\n     * If `true`, icon is allowed to overlap other labels or icons of lower priority.\n     * @defaultValue `false`\n     */\n    mayOverlap?: boolean;\n    /**\n     * If `true`, element will reserve screen space, other markers of lower priority will not be\n     * able to overlap.\n     * @defaultValue `true`\n     */\n    reserveSpace?: boolean;\n    /**\n     * Fading time for labels in seconds.\n     */\n    textFadeTime?: number;\n    /**\n     * Horizontal offset (to the right) in screen pixels.\n     */\n    xOffset?: number;\n    /**\n     * Vertical offset (up) in screen pixels.\n     */\n    yOffset?: number;\n    /**\n     * Name of the text style.\n     */\n    style?: string;\n    /**\n     * Name of the preferred [[Font]] to be used when rendering.\n     */\n    fontName?: string;\n    /**\n     * Size of the text (pixels).\n     */\n    size?: DynamicProperty<number>;\n    /**\n     * Size of the text background (pixels).\n     */\n    backgroundSize?: DynamicProperty<number>;\n    /**\n     * Glyph style to apply for the currently active [[Font]].\n     */\n    fontStyle?: \"Regular\" | \"Bold\" | \"Italic\" | \"BoldItalic\";\n    /**\n     * Glyph variant to apply for the currently active [[Font]].\n     */\n    fontVariant?: \"Regular\" | \"AllCaps\" | \"SmallCaps\";\n    /**\n     * Glyph local rotation (radians).\n     */\n    rotation?: number;\n    /**\n     * Text color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * Text background color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`,\n     * `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    backgroundColor?: DynamicProperty<StyleColor>;\n    /**\n     * For transparent text, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Background text opacity value.\n     */\n    backgroundOpacity?: DynamicProperty<number>;\n    /**\n     * Inter-glyph spacing (pixels). Scaled by `size`.\n     */\n    tracking?: DynamicProperty<number>;\n    /**\n     * Inter-line spacing (pixels). Scaled by `size`.\n     */\n    leading?: DynamicProperty<number>;\n    /**\n     * Maximum number of lines for this label.\n     */\n    maxLines?: DynamicProperty<number>;\n    /**\n     * Maximum line width (pixels).\n     */\n    lineWidth?: DynamicProperty<number>;\n    /**\n     * [[TextCanvas]] rotation (radians).\n     */\n    canvasRotation?: DynamicProperty<number>;\n    /**\n     * Line typesetting rotation (radians).\n     */\n    lineRotation?: DynamicProperty<number>;\n    /**\n     * Wrapping (line-breaking) mode.\n     */\n    wrappingMode?: DynamicProperty<\"None\" | \"Character\" | \"Word\">;\n    /**\n     * Text position regarding the baseline.\n     */\n    hAlignment?: DynamicProperty<\"Left\" | \"Center\" | \"Right\">;\n    /**\n     * Text position inside a line.\n     */\n    vAlignment?: DynamicProperty<\"Above\" | \"Center\" | \"Below\">;\n}\n\n/**\n * Buffer holding a texture.\n */\nexport interface TextureBuffer {\n    /**\n     * Buffer containing the (compressed) image or the raw texture data.\n     */\n    buffer: ArrayBuffer;\n\n    /**\n     * Mime type of the image or 'image/raw' in case of raw texture data.\n     */\n    type: string;\n\n    /**\n     * Properties for creating a three.js DataTexture\n     * (https://threejs.org/docs/#api/en/textures/DataTexture).\n     */\n    dataTextureProperties?: DataTextureProperties;\n}\n\n/**\n * Type guard to check if an object is an instance of `TextureBuffer`.\n */\nexport function isTextureBuffer(object: any): object is TextureBuffer {\n    return object && object.buffer && typeof object.type === \"string\";\n}\n\n/**\n * Properties of a DataTexture (https://threejs.org/docs/#api/en/textures/DataTexture).\n */\nexport interface DataTextureProperties {\n    width: number;\n    height: number;\n\n    format?: PixelFormat;\n    type?: TextureDataType;\n}\n\n/**\n * Properties of a Texture (https://threejs.org/docs/#api/en/textures/Texture).\n */\nexport interface TextureProperties {\n    /**\n     * Texture horizontal wrapping mode.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.wrapS.\n     */\n    wrapS?: WrappingMode;\n\n    /**\n     * Texture vertical wrapping mode.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.wrapT.\n     */\n    wrapT?: WrappingMode;\n\n    /**\n     * Texture magnification filter.\n     */\n    magFilter?: MagFilter;\n\n    /**\n     * Texture minification filter.\n     */\n    minFilter?: MinFilter;\n\n    /**\n     * Flip texture vertically.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.flipY.\n     */\n    flipY?: boolean;\n\n    /**\n     * Texture horizontal repetition rate.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.repeat.\n     */\n    repeatU?: number;\n\n    /**\n     * Texture vertical repetition rate.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.repeat.\n     */\n    repeatV?: number;\n}\n\n/**\n * Interface containing the definition of different colors to be used at different heights with the\n * [[TerrainTechnique]].\n */\nexport interface HeightBasedColors {\n    heightArray: number[];\n    colorArray: string[];\n}\n\nexport type PixelFormat =\n    | \"Alpha\"\n    | \"RGB\"\n    | \"RGBA\"\n    | \"Luminance\"\n    | \"LuminanceAlpha\"\n    | \"RGBE\"\n    | \"Depth\"\n    | \"DepthStencil\"\n    | \"Red\";\n\nexport type TextureDataType =\n    | \"UnsignedByte\"\n    | \"Byte\"\n    | \"Short\"\n    | \"UnsignedShort\"\n    | \"Int\"\n    | \"UnsignedInt\"\n    | \"Float\"\n    | \"HalfFloat\";\n\n/**\n * Available texture wrapping modes.\n */\nexport type WrappingMode = \"clamp\" | \"repeat\" | \"mirror\";\n\n/**\n * Available texture magnification filters.\n */\nexport type MagFilter = \"nearest\" | \"linear\";\n\n/**\n * Available texture minification filters.\n */\nexport type MinFilter =\n    | \"nearest\"\n    | \"nearestMipMapNearest\"\n    | \"nearestMipMapLinear\"\n    | \"linear\"\n    | \"linearMipMapNearest\"\n    | \"linearMipMapLinear\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Expr, JsonExpr } from \"./Expr\";\nimport { InterpolatedPropertyDefinition } from \"./InterpolatedPropertyDefs\";\nimport {\n    BaseTechniqueParams,\n    BasicExtrudedLineTechniqueParams,\n    ExtrudedPolygonTechniqueParams,\n    FillTechniqueParams,\n    isTextureBuffer,\n    LineTechniqueParams,\n    MarkerTechniqueParams,\n    PointTechniqueParams,\n    SegmentsTechniqueParams,\n    ShaderTechniqueParams,\n    SolidLineTechniqueParams,\n    StandardExtrudedLineTechniqueParams,\n    StandardTechniqueParams,\n    TerrainTechniqueParams,\n    TextTechniqueParams,\n    TextureCoordinateType\n} from \"./TechniqueParams\";\nimport { StylePriority } from \"./Theme\";\n\n/**\n * Names of the supported texture properties.\n * @internal\n */\nexport const TEXTURE_PROPERTY_KEYS = [\n    \"map\",\n    \"normalMap\",\n    \"displacementMap\",\n    \"roughnessMap\",\n    \"emissiveMap\",\n    \"alphaMap\",\n    \"metalnessMap\",\n    \"bumpMap\"\n];\n\n// TODO: Can be removed, when all when interpolators are implemented as {@link Expr}s\ntype RemoveInterpolatedPropDef<T> = T | InterpolatedPropertyDefinition<any> extends T\n    ? Exclude<T, InterpolatedPropertyDefinition<any>>\n    : T;\ntype RemoveJsonExpr<T> = T | JsonExpr extends T ? Exclude<T, JsonExpr> : T;\n\n/**\n * Make runtime representation of technique attributes from JSON-compatible typings.\n *\n * Translates\n *  - InterpolatedPropertyDefinition -> InterpolatedProperty\n *  - JsonExpr -> Expr\n */\nexport type MakeTechniqueAttrs<T> = {\n    [P in keyof T]: T[P] | JsonExpr extends T[P]\n        ? RemoveInterpolatedPropDef<RemoveJsonExpr<T[P]>> | Expr\n        : T[P];\n};\n\n/**\n * Possible techniques that can be used to draw a geometry on the map.\n */\nexport type Technique =\n    | SquaresTechnique\n    | CirclesTechnique\n    | PoiTechnique\n    | LineMarkerTechnique\n    | LineTechnique\n    | SegmentsTechnique\n    | SolidLineTechnique\n    | FillTechnique\n    | StandardTechnique\n    | TerrainTechnique\n    | BasicExtrudedLineTechnique\n    | StandardExtrudedLineTechnique\n    | ExtrudedPolygonTechnique\n    | ShaderTechnique\n    | TextTechnique\n    | LabelRejectionLineTechnique;\n\n/**\n * Runtime representation of `SquaresStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `PointTechniqueParams`.\n */\nexport interface SquaresTechnique extends MakeTechniqueAttrs<PointTechniqueParams> {\n    name: \"squares\";\n}\n\n/**\n * Runtime representation of `CirclesStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `PointTechniqueParams`.\n */\nexport interface CirclesTechnique extends MakeTechniqueAttrs<PointTechniqueParams> {\n    name: \"circles\";\n}\n\n/**\n * Runtime representation of `PoiStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `MarkerTechniqueParams`.\n */\nexport interface PoiTechnique extends MakeTechniqueAttrs<MarkerTechniqueParams> {\n    name: \"labeled-icon\";\n}\n\n/**\n * Runtime representation of `LineMarkerStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `MarkerTechniqueParams`.\n */\nexport interface LineMarkerTechnique extends MakeTechniqueAttrs<MarkerTechniqueParams> {\n    name: \"line-marker\";\n}\n\n/**\n * Runtime representation of `SegmentsStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `SegmentsTechniqueParams`.\n */\nexport interface SegmentsTechnique extends MakeTechniqueAttrs<SegmentsTechniqueParams> {\n    name: \"segments\";\n}\n\n/**\n * Runtime representation of `BasicExtrudedLineStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `BasicExtrudedLineTechniqueParams`.\n */\nexport interface BasicExtrudedLineTechnique\n    extends MakeTechniqueAttrs<BasicExtrudedLineTechniqueParams> {\n    name: \"extruded-line\";\n}\n\n/**\n * Runtime representation of `StandardExtrudedLineStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `StandardExtrudedLineTechniqueParams`.\n */\nexport interface StandardExtrudedLineTechnique\n    extends MakeTechniqueAttrs<StandardExtrudedLineTechniqueParams> {\n    name: \"extruded-line\";\n}\n\n/**\n * Runtime representation of `SolidLineStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `SolidLineTechniqueParams`.\n */\nexport interface SolidLineTechnique extends MakeTechniqueAttrs<SolidLineTechniqueParams> {\n    name: \"solid-line\" | \"dashed-line\";\n}\n\n/**\n * Runtime representation of `LineStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `LineTechniqueParams`.\n */\nexport interface LineTechnique extends MakeTechniqueAttrs<LineTechniqueParams> {\n    name: \"line\";\n}\n\n/**\n * Runtime representation of `FillStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `FillTechniqueParams`.\n */\nexport interface FillTechnique extends MakeTechniqueAttrs<FillTechniqueParams> {\n    name: \"fill\";\n}\n\n/**\n * Technique used to render a mesh geometry.\n * For technique parameters see `StandardTechniqueParams`.\n */\nexport interface StandardTechnique extends MakeTechniqueAttrs<StandardTechniqueParams> {\n    name: \"standard\";\n}\n\n/**\n * Runtime representation of `ExtrudedPolygonStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `ExtrudedPolygonTechniqueParams`.\n */\nexport interface ExtrudedPolygonTechnique\n    extends MakeTechniqueAttrs<ExtrudedPolygonTechniqueParams> {\n    name: \"extruded-polygon\";\n}\n\n/**\n * Runtime representation of `TextStyle` as parsed by `StyleSetEvaluator`.\n * For technique parameters see `TextTechniqueParams`.\n */\nexport interface TextTechnique extends MakeTechniqueAttrs<TextTechniqueParams> {\n    name: \"text\";\n}\n\n/**\n * Special technique for user-defined shaders.\n * For technique parameters see `ShaderTechniqueParams`.\n */\nexport interface ShaderTechnique extends MakeTechniqueAttrs<ShaderTechniqueParams> {\n    name: \"shader\";\n}\n\n/**\n * Technique used to render a terrain geometry with textures.\n * For technique parameters see `TerrainTechniqueParams`.\n */\nexport interface TerrainTechnique extends MakeTechniqueAttrs<TerrainTechniqueParams> {\n    name: \"terrain\";\n}\n\n/**\n * Technique to avoid label rendering on top of certain line geometries.\n * For technique parameters see `BaseTechniqueParams`.\n */\nexport interface LabelRejectionLineTechnique extends MakeTechniqueAttrs<BaseTechniqueParams> {\n    name: \"label-rejection-line\";\n}\n\n/**\n * Names of the properties controlling transparency.\n * @internal\n */\nexport const TRANSPARENCY_PROPERTY_KEYS = [\"opacity\", \"transparent\"];\n\n/**\n * Additional params used for optimized usage of `Techniques`.\n */\nexport interface IndexedTechniqueParams {\n    /**\n     * Optimization: Index into table in `StyleSetEvaluator` or in `DecodedTile`.\n     * @hidden\n     */\n    _index: number;\n\n    /**\n     * Optimization: Unique `Technique` index of `Style` from which technique was derived.\n     * @hidden\n     */\n    _styleSetIndex: number;\n\n    /**\n     * The styleSet associated to this `Technique`.\n     * @hidden\n     */\n    _styleSet?: string;\n\n    /**\n     * The category used to assign render orders to objects created using this `Technique`.\n     * @hidden\n     */\n    _category?: string;\n\n    /**\n     * The category used to assign render orders to secondary objects\n     * created using this `Technique`.\n     * @hidden\n     */\n    _secondaryCategory?: string;\n\n    /**\n     * `true` if any of the properties of this technique needs to access\n     * the feature's state.\n     *\n     * @hidden\n     */\n    _usesFeatureState?: boolean;\n\n    /**\n     * Last computed state derived from [[Technique.kind]].\n     */\n    _kindState?: boolean;\n}\n\n/**\n * For efficiency, `StyleSetEvaluator` returns `Techniques` additional params as defined in\n * `IndexedTechniqueParams`.\n */\nexport type IndexedTechnique = Technique & IndexedTechniqueParams;\n\n/**\n * Type guard to check if an object is an instance of `CirclesTechnique`.\n */\nexport function isCirclesTechnique(technique: Technique): technique is CirclesTechnique {\n    return technique.name === \"circles\";\n}\n\n/**\n * Type guard to check if an object is an instance of `SquaresTechnique`.\n */\nexport function isSquaresTechnique(technique: Technique): technique is SquaresTechnique {\n    return technique.name === \"squares\";\n}\n\n/**\n * Type guard to check if an object is an instance of `PoiTechnique`.\n */\nexport function isPoiTechnique(technique: Technique): technique is PoiTechnique {\n    return technique.name === \"labeled-icon\";\n}\n\n/**\n * Type guard to check if an object is an instance of `LineMarkerTechnique`.\n */\nexport function isLineMarkerTechnique(technique: Technique): technique is LineMarkerTechnique {\n    return technique.name === \"line-marker\";\n}\n\n/**\n * Type guard to check if an object is an instance of `LineTechnique`.\n */\nexport function isLineTechnique(technique: Technique): technique is LineTechnique {\n    return technique.name === \"line\";\n}\n\n/**\n * Type guard to check if an object is an instance of `SolidLineTechnique`.\n */\nexport function isSolidLineTechnique(technique: Technique): technique is SolidLineTechnique {\n    return technique.name === \"solid-line\" || technique.name === \"dashed-line\";\n}\n\n/**\n * Type guard to check if an object is an instance of `SolidLineTechnique` and is a kind that\n * has special dashes.\n * @note Lines with special dashes need line caps to render properly.\n */\nexport function isSpecialDashesLineTechnique(\n    technique: Technique\n): technique is SolidLineTechnique {\n    return (\n        (technique.name === \"solid-line\" || technique.name === \"dashed-line\") &&\n        technique.dashes !== undefined &&\n        technique.dashes !== \"Square\"\n    );\n}\n\n/**\n * Type guard to check if an object is an instance of `SegmentsTechnique`.\n */\nexport function isSegmentsTechnique(technique: Technique): technique is SegmentsTechnique {\n    return technique.name === \"segments\";\n}\n\n/**\n * Type guard to check if an object is an instance of `BasicExtrudedLineTechnique`\n * or `StandardExtrudedLineTechnique`.\n */\nexport function isExtrudedLineTechnique(\n    technique: Technique\n): technique is BasicExtrudedLineTechnique | StandardExtrudedLineTechnique {\n    return technique.name === \"extruded-line\";\n}\n\n/**\n * Type guard to check if an object is an instance of `BasicExtrudedLineTechnique`.\n */\nexport function isBasicExtrudedLineTechnique(\n    technique: Technique\n): technique is BasicExtrudedLineTechnique {\n    return isExtrudedLineTechnique(technique) && technique.shading === \"basic\";\n}\n\n/**\n * Type guard to check if an object is an instance of `StandardExtrudedLineTechnique`.\n */\nexport function isStandardExtrudedLineTechnique(\n    technique: Technique\n): technique is StandardExtrudedLineTechnique {\n    return isExtrudedLineTechnique(technique) && technique.shading === \"standard\";\n}\n\n/**\n * Type guard to check if an object is an instance of `FillTechnique`.\n */\nexport function isFillTechnique(technique: Technique): technique is FillTechnique {\n    return technique.name === \"fill\";\n}\n\n/**\n * Type guard to check if an object is an instance of `ExtrudedPolygonTechnique`.\n */\nexport function isExtrudedPolygonTechnique(\n    technique: Technique\n): technique is ExtrudedPolygonTechnique {\n    return technique.name === \"extruded-polygon\";\n}\n\n/**\n * Type guard to check if an object is an instance of `StandardTechnique`.\n */\nexport function isStandardTechnique(technique: Technique): technique is StandardTechnique {\n    return technique.name === \"standard\";\n}\n\n/**\n * Type guard to check if an object is an instance of `TerrainTechnique`.\n */\nexport function isTerrainTechnique(technique: Technique): technique is TerrainTechnique {\n    return technique.name === \"terrain\";\n}\n\n/**\n * Type guard to check if an object is an instance of `TextTechnique`.\n */\nexport function isTextTechnique(technique: Technique): technique is TextTechnique {\n    return technique.name === \"text\";\n}\n\n/**\n * Type guard to check if an object is an instance of `ShaderTechnique`.\n */\nexport function isShaderTechnique(technique: Technique): technique is ShaderTechnique {\n    return technique.name === \"shader\";\n}\n\nexport function isLabelRejectionLineTechnique(\n    technique: Technique\n): technique is LabelRejectionLineTechnique {\n    return technique.name === \"label-rejection-line\";\n}\n\n/**\n * Check if vertex normals should be generated for this technique (if no normals are in the data).\n * @param technique - Technique to check.\n */\nexport function needsVertexNormals(technique: Technique): boolean {\n    return (\n        isExtrudedPolygonTechnique(technique) ||\n        isFillTechnique(technique) ||\n        isStandardTechnique(technique) ||\n        isTerrainTechnique(technique) ||\n        isStandardExtrudedLineTechnique(technique)\n    );\n}\n\n/**\n * Type guard to check if an object is an instance of a technique with textures.\n */\nexport function supportsTextures(\n    technique: Technique\n): technique is FillTechnique | StandardTechnique | ExtrudedPolygonTechnique | TerrainTechnique {\n    return (\n        isFillTechnique(technique) ||\n        isStandardTechnique(technique) ||\n        isExtrudedPolygonTechnique(technique) ||\n        isTerrainTechnique(technique)\n    );\n}\n\n/**\n * Get the texture coordinate type if the technique supports it.\n */\nexport function textureCoordinateType(technique: Technique): TextureCoordinateType | undefined {\n    return supportsTextures(technique) || isShaderTechnique(technique)\n        ? technique.textureCoordinateType\n        : undefined;\n}\n\n/**\n * Add all the buffers of the technique to the transfer list.\n */\nexport function addBuffersToTransferList(technique: Technique, transferList: ArrayBuffer[]) {\n    if (\n        isStandardTechnique(technique) ||\n        isExtrudedPolygonTechnique(technique) ||\n        isTerrainTechnique(technique)\n    ) {\n        for (const texturePropertyKey of TEXTURE_PROPERTY_KEYS) {\n            const textureProperty = (technique as any)[texturePropertyKey];\n            if (isTextureBuffer(textureProperty)) {\n                if (textureProperty.buffer instanceof ArrayBuffer) {\n                    transferList.push(textureProperty.buffer);\n                }\n            }\n        }\n    }\n}\n\n/**\n * Compose full texture name for given image name with technique specified.\n * Some techniques allows to add prefix/postfix to icons names specified, this\n * function uses technique information to create fully qualified texture name.\n * @param imageName - base name of the marker icon.\n * @param technique - the technique describing POI or line marker.\n * @returns fully qualified texture name for loading from atlas (without extension).\n */\nexport function composeTechniqueTextureName(\n    imageName: string,\n    technique: PoiTechnique | LineMarkerTechnique\n): string {\n    let textureName = imageName;\n    if (typeof technique.imageTexturePrefix === \"string\") {\n        textureName = technique.imageTexturePrefix + textureName;\n    }\n    if (typeof technique.imageTexturePostfix === \"string\") {\n        textureName = textureName + technique.imageTexturePostfix;\n    }\n    return textureName;\n}\n\n/**\n * Sets a technique's render order (or priority for screen-space techniques) depending on its\n * category and the priorities specified in a given theme.\n * @param technique- The technique whose render order or priority will be set.\n * @param theme - The theme from which the category priorities will be taken.\n */\nexport function setTechniqueRenderOrderOrPriority(\n    technique: IndexedTechnique,\n    priorities: StylePriority[],\n    labelPriorities: string[]\n) {\n    if (\n        isTextTechnique(technique) ||\n        isPoiTechnique(technique) ||\n        isLineMarkerTechnique(technique)\n    ) {\n        // for screen-space techniques the `category` is used to assign\n        // priorities.\n        if (labelPriorities && typeof technique._category === \"string\") {\n            // override the `priority` when the technique uses `category`.\n            const priority = labelPriorities.indexOf(technique._category);\n            if (priority !== -1) {\n                technique.priority = labelPriorities.length - priority;\n            }\n        }\n    } else if (priorities && technique._styleSet !== undefined) {\n        // Compute the render order based on the style category and styleSet.\n        const computeRenderOrder = (category: string): number | undefined => {\n            const priority = priorities?.findIndex(\n                entry => entry.group === technique._styleSet && entry.category === category\n            );\n\n            return priority !== undefined && priority !== -1 ? (priority + 1) * 10 : undefined;\n        };\n\n        if (typeof technique._category === \"string\") {\n            // override the renderOrder when the technique is using categories.\n            const renderOrder = computeRenderOrder(technique._category);\n\n            if (renderOrder !== undefined) {\n                technique.renderOrder = renderOrder;\n            }\n        }\n\n        if (typeof technique._secondaryCategory === \"string\") {\n            // override the secondaryRenderOrder when the technique is using categories.\n            const secondaryRenderOrder = computeRenderOrder(technique._secondaryCategory);\n\n            if (secondaryRenderOrder !== undefined) {\n                (technique as any).secondaryRenderOrder = secondaryRenderOrder;\n            }\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Vector3Like } from \"@here/harp-geoutils/lib/math/Vector3Like\";\n\nimport { JsonExpr, JsonValue } from \"./Expr\";\nimport { InterpolatedPropertyDefinition } from \"./InterpolatedPropertyDefs\";\nimport {\n    BaseTechniqueParams,\n    BasicExtrudedLineTechniqueParams,\n    ExtrudedPolygonTechniqueParams,\n    FillTechniqueParams,\n    LineTechniqueParams,\n    MarkerTechniqueParams,\n    Pickability,\n    PointTechniqueParams,\n    SegmentsTechniqueParams,\n    ShaderTechniqueParams,\n    SolidLineTechniqueParams,\n    StandardExtrudedLineTechniqueParams,\n    StandardTechniqueParams,\n    TerrainTechniqueParams,\n    TextTechniqueParams\n} from \"./TechniqueParams\";\n\n/**\n * Map theme is used to define what features are shown and how the map is styled, for example\n * which lightning is used or whether fog should be displayed.\n */\nexport interface Theme {\n    /**\n     * The URI of the JSON schema describing themes.\n     */\n    $schema?: string;\n\n    /**\n     * The base `Theme`s or `theme` URLs to extend.\n     *\n     * @remarks\n     * If used, base themes are loaded first, and then all the properties from inherited theme\n     * overwrite these defined in base theme.\n     */\n\n    extends?: string | Theme | FlatTheme | Array<string | Theme | FlatTheme>;\n\n    /**\n     * Actual URL the theme has been loaded from.\n     */\n    url?: string;\n\n    /**\n     * Color to be used as a clear background - no map objects.\n     * @format color-hex\n     */\n    clearColor?: string;\n\n    /**\n     * Alpha to be used as a clear background - no map objects.\n     * @format 0-1\n     */\n    clearAlpha?: number;\n\n    /**\n     * Define the default text style for styling labels and texts.\n     */\n    defaultTextStyle?: TextStyleDefinition;\n\n    /**\n     * Define the lightning available on the three.js scene.\n     */\n    lights?: Light[];\n\n    /**\n     * Define the style of the sky presented in the map scene.\n     */\n    sky?: Sky;\n\n    /**\n     * Define the fog used in the map scene.\n     */\n    fog?: Fog;\n\n    /**\n     * The definitions exported by these theme.\n     */\n    definitions?: Definitions;\n\n    /**\n     * Map styles available for datasources used to render the map.\n     */\n    styles?: Styles;\n\n    /**\n     * Define the style to render different types of text used on the map.\n     */\n    textStyles?: TextStyleDefinition[];\n\n    /**\n     * List available fonts to be used while rendering text.\n     */\n    fontCatalogs?: FontCatalogConfig[];\n\n    /**\n     * Optional images to be rendered on the map view.\n     */\n    images?: ImageDefinitions;\n\n    /**\n     * Image textures to be used while rendering geometries on the map view.\n     */\n    imageTextures?: ImageTexture[];\n\n    /**\n     * Optional list of [[ThemePoiTableDef]]s.\n     */\n    poiTables?: PoiTableRef[];\n\n    /**\n     * Optional list of symbolic priorities for the object\n     * created using this {@link Theme}.\n     *\n     * @remarks\n     * The attribute `styleSet` and `category` of the [[Technique]]\n     * are used together with [[Theme.priorities]] to sort\n     * the objects created using this {@link Theme}, for example:\n     *\n     *\n     * ```json\n     * {\n     *      \"priorities\": [\n     *          { \"group\": \"tilezen\", \"category\": \"outline-1\" }\n     *      ],\n     *      \"styles\": [\n     *          {\n     *              \"technique\": \"solid-line\",\n     *              \"styleSet\": \"tilezen\",\n     *              \"category\": \"outline-1\"\n     *          }\n     *      ]\n     * }\n     * ```\n     */\n    priorities?: StylePriority[];\n\n    /**\n     * Optional list of priorities for the screen-space\n     * objects created using this style.\n     *\n     * @remarks\n     * The name of the `category` attribute of the screen-space\n     * technique (e.g. `\"text\"`) must match on the strings\n     * defined by this [[Theme.labelPriorities]], for example:\n     *\n     * ```json\n     * {\n     *      \"labelPriorities\": [\n     *          \"continent-labels\",\n     *          \"country-labels\",\n     *          \"state-labels\"\n     *      ],\n     *      \"styles\": [\n     *          {\n     *              \"technique\": \"text\",\n     *              \"category\": \"state-labels\"\n     *          }\n     *      ]\n     * }\n     * ```\n     */\n    labelPriorities?: string[];\n}\n\n/**\n * A type representing symbolic render orders.\n */\nexport interface StylePriority {\n    /**\n     * The group of this `StylePriority`.\n     */\n    group: string;\n\n    /**\n     * The category of this `StylePriority`.\n     */\n    category?: string;\n}\n\n/**\n * A type representing HARP themes with all the styleset declarations\n * grouped in one `Array`.\n *\n * @internal This type will merge with {@link Theme}.\n */\nexport type FlatTheme = Omit<Theme, \"styles\"> & {\n    /**\n     * The style rules used to render the map.\n     */\n    styles?: StyleSet;\n};\n\n/**\n * Value definition commons.\n */\nexport type Definition = JsonValue | InterpolatedPropertyDefinition<JsonValue>;\n\n/**\n * This is the old, more verbose, format of the definitions, to be deprecated\n * @deprecated\n */\nexport interface VerboseDefinition {\n    /**\n     * The type of the definition.\n     */\n    type?: \"selector\" | \"boolean\" | \"number\" | \"string\" | \"color\";\n\n    /**\n     * The value of the definition.\n     */\n    value: Definition;\n\n    /**\n     * The description of the definition.\n     */\n    description?: string;\n}\n\n/**\n * This is to distinguish between definition types at runtime, to be deprecated with\n * {@link VerboseDefinition}\n * @deprecated\n *\n * @param definition\n * @returns `true` if the Definition is of the deprecated {@link VerboseDefinition} type\n */\nexport function isVerboseDefinition(definition: VerboseDefinition | Definition) {\n    return (definition as VerboseDefinition)?.value !== undefined;\n}\n\n/**\n * This is a utility function to retrive a definitions value until {@link VerboseDefinition} is fully\n * deprecated\n * @deprecated\n *\n * @param definition\n * @returns value of the given definition.\n */\nexport function getDefinitionValue(definition: VerboseDefinition | Definition): Definition {\n    return isVerboseDefinition(definition)\n        ? (definition as VerboseDefinition).value\n        : (definition as Definition);\n}\n\n/*\n * An set of {@link Definition}s.\n */\nexport interface Definitions {\n    [name: string]: Definition | VerboseDefinition;\n}\n\nexport type JsonExprReference = [\"ref\", string];\n\n/**\n * Checks if the given value is a reference to a definition.\n *\n * @param value - The value of a technique property.\n */\nexport function isJsonExprReference(value: any): value is JsonExprReference {\n    return (\n        Array.isArray(value) &&\n        value.length === 2 &&\n        value[0] === \"ref\" &&\n        typeof value[1] === \"string\"\n    );\n}\n\n/**\n * An array of {@link Style}s that are used together to define how a\n * {@link @here/harp-mapview#DataSource} should be rendered.\n *\n * @remarks\n * `StyleSet`s are applied to sources providing vector tiles via their method\n * `setStyleSet`. This is also handle internally when a whole theme is passed to a\n * {@link @here/harp-mapview#MapView} via {@link @here/harp-mapview#MapViewtheme}.\n */\nexport type StyleSet = Style[];\n\n/**\n * The object that defines what way an item of a {@link @here/harp-mapview#DataSource}\n * should be decoded to assemble a tile.\n *\n * @remarks\n * {@link Style} is describing which features are shown on a map and in what way they are being\n * shown.\n */\nexport type BaseStyle<Technique, Params> = StyleAttributes<Technique, Params> & Partial<Params>;\n\n/**\n * The common attributes of a {@link Style}.\n */\nexport interface StyleAttributes<Technique, Params> {\n    /**\n     * Unique identifier associated with this `Style`.\n     */\n    id?: string;\n\n    /**\n     * Reference to the identifier of an existing `Style` to extend.\n     */\n    extends?: string;\n\n    /**\n     * Condition when this style rule applies.\n     *\n     * @remarks\n     * Condition that is applied to feature properties to check if given {@link Style} this feature\n     * should emit geometry of this style.\n     */\n    when?: string | JsonExpr;\n\n    /**\n     * The layer containing the carto features processed by this style rule.\n     */\n    layer?: string;\n\n    /**\n     * Optional. If `true`, no more matching styles will be evaluated.\n     */\n    final?: boolean;\n\n    /**\n     * Human readable description.\n     */\n    description?: string;\n\n    /**\n     * The style set referenced by this styling rule.\n     */\n    styleSet?: string;\n\n    /**\n     * The category of this style.\n     */\n    category?: string | JsonExpr;\n\n    /**\n     * The name of the technique to use.\n     *\n     * @remarks\n     * Technique name. See the classes extending from this class to determine what possible\n     * techniques are possible, includes `\"line\"`, `\"fill\"`, `\"solid-line\"`, `\"extruded-line\"`,\n     * `\"extruded-polygon\"`, `\"text\"`, `\"none\"`.\n     */\n    technique: Technique;\n\n    /**\n     * Specify `renderOrder` of value.\n     *\n     * @remarks\n     * @default If not specified in style file, `renderOrder` will be assigned with monotonically\n     * increasing values according to style position in file.\n     */\n    renderOrder?: number | JsonExpr;\n\n    /**\n     * Minimal zoom level. If the current zoom level is smaller, the technique will not be used.\n     */\n    minZoomLevel?: number | JsonExpr;\n\n    /**\n     * Maximum zoom level. If the current zoom level is larger, the technique will not be used.\n     */\n    maxZoomLevel?: number | JsonExpr;\n\n    /**\n     * Optional. If `true` or `Pickability.transient`, no IDs will be saved for the geometry\n     * this style creates. Default is `Pickability.onlyVisible`, which allows all pickable and visible\n     * objects to be picked, Pickability.all, will also allow invisible objects to be\n     * picked.\n     * @defaultValue `Pickability.onlyVisible`\n     * The boolean option is for backwardscompatibilty, please use the Pickability.\n     *\n     *\n     * TODO: deprecate and rename to something that makes more sense\n     */\n    transient?: boolean | Pickability;\n\n    /**\n     * Optional: If `true`, the objects with matching `when` statement will be printed to the\n     * console.\n     */\n    debug?: boolean;\n\n    /**\n     * @deprecated Technique parameters are now properties at the Style interface level.\n     */\n    attr?: Partial<Params>;\n}\n\nexport type Style =\n    | SquaresStyle\n    | CirclesStyle\n    | PoiStyle\n    | LineMarkerStyle\n    | LineStyle\n    | SegmentsStyle\n    | SolidLineStyle\n    | LabelRejectionLineStyle\n    | FillStyle\n    | StandardStyle\n    | BasicExtrudedLineStyle\n    | StandardExtrudedLineStyle\n    | ExtrudedPolygonStyle\n    | ShaderStyle\n    | TerrainStyle\n    | TextTechniqueStyle\n    | NoneStyle;\n\n/**\n * A dictionary of {@link StyleSet}s.\n */\nexport interface Styles {\n    [styleSetName: string]: StyleSet;\n}\n\n/**\n * A reference to a style definition.\n *\n * @remarks\n * Use as value `attrs` to reference value from `definitions`.\n *\n * Example of usage:\n * ```json\n * {\n *   \"definitions\": {\n *     \"roadColor\": \"#f00\"\n *   },\n *   \"styles\": { \"tilezen\": [\n *      {\n *       \"when\": \"kind == 'road\",\n *       \"technique\": \"solid-line\",\n *       \"attr\": {\n *         \"lineColor\": { \"$ref\": \"roadColor\" }\n *       }\n *     }\n *   ] }\n * }\n * ```\n */\n\n/**\n * The attributes of a technique.\n */\nexport type Attr<T> = { [P in keyof T]?: T[P] | JsonExpr };\n\n/**\n * Render feature as set of squares rendered in screen space.\n *\n * @see {@link PointTechniqueParams}.\n */\nexport type SquaresStyle = BaseStyle<\"squares\", PointTechniqueParams>;\n\n/**\n * Render feature as set of circles rendered in screen space.\n *\n * @see {@link PointTechniqueParams}.\n */\nexport type CirclesStyle = BaseStyle<\"circles\", PointTechniqueParams>;\n\n/**\n * Render feature as POIs (icons and text) rendered in screen space.\n *\n * @see [[MarkerTechniqueParams]].\n */\nexport type PoiStyle = BaseStyle<\"labeled-icon\", MarkerTechniqueParams>;\n\n/**\n * Render feature as line markers, which is a recurring marker along a line (usually road).\n *\n * @see [[MarkerTechniqueParams]].\n */\nexport type LineMarkerStyle = BaseStyle<\"line-marker\", MarkerTechniqueParams>;\n\n/**\n * Render feature as line.\n */\nexport type LineStyle = BaseStyle<\"line\", LineTechniqueParams>;\n\n/**\n * Render feature as segments.\n */\nexport type SegmentsStyle = BaseStyle<\"segments\", SegmentsTechniqueParams>;\n\nexport type SolidLineStyle = BaseStyle<\"solid-line\" | \"dashed-line\", SolidLineTechniqueParams>;\n\nexport type LabelRejectionLineStyle = BaseStyle<\"label-rejection-line\", BaseTechniqueParams>;\n\nexport type FillStyle = BaseStyle<\"fill\", FillTechniqueParams>;\n\nexport type StandardStyle = BaseStyle<\"standard\", StandardTechniqueParams>;\n\nexport type TerrainStyle = BaseStyle<\"terrain\", TerrainTechniqueParams>;\n\nexport type BasicExtrudedLineStyle = BaseStyle<\"extruded-line\", BasicExtrudedLineTechniqueParams>;\n\nexport type StandardExtrudedLineStyle = BaseStyle<\n    \"extruded-line\",\n    StandardExtrudedLineTechniqueParams\n>;\n\n/**\n * Style used to draw a geometry as an extruded polygon, for example extruded buildings.\n */\nexport type ExtrudedPolygonStyle = BaseStyle<\"extruded-polygon\", ExtrudedPolygonTechniqueParams>;\n\nexport type ShaderStyle = BaseStyle<\"shader\", ShaderTechniqueParams>;\n\nexport type TextTechniqueStyle = BaseStyle<\"text\", TextTechniqueParams>;\n\nexport interface NoneStyle\n    extends BaseStyle<\n        \"none\",\n        {\n            [name: string]: any;\n        }\n    > {\n    [name: string]: any;\n}\n\n/**\n * Possible lights used for light the map.\n */\nexport type Light = AmbientLight | DirectionalLight;\n\nexport interface BaseLight {\n    type: string;\n    name: string;\n}\n\n/**\n * Ambient light\n */\nexport interface AmbientLight extends BaseLight {\n    /**\n     * The type of the light.\n     */\n    type: \"ambient\";\n\n    /**\n     * The color of this ambient light.\n     */\n    color: string;\n\n    /**\n     * The intensity of this ambient light.\n     */\n    intensity?: number;\n}\n\n/**\n * Directional light.\n */\nexport interface DirectionalLight extends BaseLight {\n    /**\n     * The type of the light.\n     */\n    type: \"directional\";\n\n    /**\n     * The color of this directional light.\n     */\n    color: string;\n\n    /**\n     * The intensity of this directional light.\n     */\n    intensity: number;\n\n    /**\n     * The direction of this directional light.\n     */\n    direction: Vector3Like;\n\n    /**\n     * Determine if this light casts dynamic shadows.\n     *\n     * @defaultValue false\n     */\n    castShadow?: boolean;\n}\n\n/**\n * Various text styles used with labels and texts.\n */\nexport interface TextStyleDefinition {\n    name?: string;\n    fontCatalogName?: string;\n\n    fontName?: string;\n    size?: number;\n    backgroundSize?: number;\n    fontStyle?: \"Regular\" | \"Bold\" | \"Italic\" | \"BoldItalic\";\n    fontVariant?: \"Regular\" | \"AllCaps\" | \"SmallCaps\";\n    rotation?: number;\n    /**\n     * @format color-hex\n     */\n    color?: string;\n    /**\n     * @format color-hex\n     */\n    backgroundColor?: string;\n    opacity?: number;\n    backgroundOpacity?: number;\n\n    tracking?: number;\n    leading?: number;\n    maxLines?: number;\n    lineWidth?: number;\n    canvasRotation?: number;\n    lineRotation?: number;\n    wrappingMode?: \"None\" | \"Character\" | \"Word\";\n    hAlignment?: \"Left\" | \"Center\" | \"Right\";\n    vAlignment?: \"Above\" | \"Center\" | \"Below\";\n    /**\n     * @format comma separated list of placement tokens, i.e. \"TR, TL, C\"\n     * @see [[PlacementToken]]\n     */\n    placements?: string;\n}\n\n/**\n * Interface that defines a procedural gradient sky.\n */\nexport interface GradientSky {\n    /** Sky type. */\n    type: \"gradient\";\n    /**\n     * Color of the upper part of the gradient.\n     * @format color-hex\n     */\n    topColor: string;\n    /**\n     * Color of bottom part of the gradient.\n     * @format color-hex\n     */\n    bottomColor: string;\n    /**\n     * Color of the ground plane.\n     * @format color-hex\n     */\n    groundColor: string;\n    /** Texture's gradient power. */\n    monomialPower?: number;\n}\n\n/**\n * Interface that defines a cubemap sky.\n */\nexport interface CubemapSky {\n    /** Sky type. */\n    type: \"cubemap\";\n    /** Positive X cube map face. */\n    positiveX: string;\n    /** Negative X cube map face. */\n    negativeX: string;\n    /** Positive Y cube map face. */\n    positiveY: string;\n    /** Negative Y cube map face. */\n    negativeY: string;\n    /** Positive Z cube map face. */\n    positiveZ: string;\n    /** Negative Z cube map face. */\n    negativeZ: string;\n}\n\n/**\n * Interface that defines the options to configure the sky.\n */\nexport type Sky = GradientSky | CubemapSky;\n\n/**\n * Interface that defines the options to configure fog.\n */\nexport interface Fog {\n    /** Fog's color. */\n    color: string;\n    /** Distance ratio to far plane at which the linear fog begins. */\n    startRatio: number;\n}\n\n/**\n * Define an image (e.g. icon).\n */\nexport interface ImageDefinition {\n    /** Url to load content from. */\n    url: string;\n    /** `true` to start loading at init tile, `false` to lazily wait until required. */\n    preload: boolean;\n    /** Url of JSON file containing the texture atlas */\n    atlas?: string;\n}\n\nexport interface ImageDefinitions {\n    /** Name of Image. */\n    [name: string]: ImageDefinition;\n}\n\n/**\n * Can be used to create a texture atlas.\n */\nexport interface ImageTexture {\n    /** Name of ImageTexture. Used to reference texture in the styles. */\n    name: string;\n    /** Name of ImageDefinition to use. */\n    image: string;\n    /** Origin of image, defaults to \"topleft\" */\n    origin?: string;\n    /** Specify sub-region: Defaults to 0. */\n    xOffset?: number;\n    /** Specify sub-region: Defaults to 0. */\n    yOffset?: number;\n    /** Specify sub-region:  Defaults to 0, meaning width is taken from loaded image. */\n    width?: number;\n    /** Specify sub-region:  Defaults to 0, meaning height is taken from loaded image. */\n    height?: number;\n    /** Defaults to false. */\n    flipH?: boolean;\n    /** Defaults to false. */\n    flipV?: boolean;\n    /** Defaults to 1. */\n    opacity?: number;\n}\n\n/**\n * Definition for a [[PoiTable]] reference as part of the {@link Theme} object.\n */\nexport interface PoiTableRef {\n    /** Required name of the [[PoiTable]] for later reference. */\n    name: string;\n    /**\n     * Required URL from where to load [[PoiTable]].\n     *\n     * Should refer to JSON that is matched [[PoiTableDef]] interface.\n     */\n    url: string;\n    /**\n     * If set to `true`, the list of values in the field \"altNames\" will be used as names for this\n     * POI.\n     */\n    useAltNamesForKey: boolean;\n}\n\n/**\n * Interface for the JSON description of the [[PoiTable]]. It is being implemented in [[PoiTable]].\n */\nexport interface PoiTableDef {\n    /** Name of the `PoiTable`. Must be unique. */\n    name?: string;\n    /**\n     * Stores the list of {@link PoiTableEntryDef}s.\n     */\n    poiList?: PoiTableEntryDef[];\n}\n\n/**\n * Interface descrining POI entries.\n */\nexport interface PoiTableEntryDef {\n    /** Default name of the POI as the key for looking it up. */\n    name?: string;\n    /** Alternative names of the POI. */\n    altNames?: string[];\n    /** Visibility of the POI. If `false`, the POI will not be rendered. */\n    visible?: boolean;\n    /** Name of the icon, defined in the the texture atlases. */\n    iconName?: string;\n    /** Stacking mode of the POI. For future use. */\n    stackMode?: string;\n    /**\n     * Priority of the POI to select the visible set in case there are more POIs than can be\n     * handled.\n     */\n    priority?: number;\n    /** Minimum zoom level to render the icon on. */\n    iconMinLevel?: number;\n    /** Maximum zoom level to render the icon on. */\n    iconMaxLevel?: number;\n    /** Minimum zoom level to render the text label on. */\n    textMinLevel?: number;\n    /** Maximum zoom level to render the text label on. */\n    textMaxLevel?: number;\n}\n\n/**\n * Fonts used for all text related rendering.\n */\nexport interface FontCatalogConfig {\n    url: string;\n    name: string;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { isJsonExpr } from \"./Expr\";\nimport { Style, Theme } from \"./Theme\";\n\n/**\n * The ThemeVisitor visits every style in the theme in a depth-first fashion.\n */\nexport class ThemeVisitor {\n    constructor(readonly theme: Theme) {}\n    /**\n     * Applies a function to every style in the theme.\n     *\n     * @param visitFunc - Function to be called with `style` as an argument. Function should return\n     *                  `true` to cancel visitation.\n     * @returns `true` if function has finished prematurely.\n     */\n    visitStyles(visitFunc: (style: Style) => boolean): boolean {\n        const visit = (style: Style): boolean => {\n            if (isJsonExpr(style)) {\n                return false;\n            }\n            if (visitFunc(style)) {\n                return true;\n            }\n            return false;\n        };\n        if (this.theme.styles !== undefined) {\n            for (const styleSetName in this.theme.styles) {\n                if (this.theme.styles[styleSetName] !== undefined) {\n                    for (const style of this.theme.styles[styleSetName]) {\n                        if (visit(style)) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BufferAttribute as ThreeBufferAttribute,\n    BufferGeometry as ThreeBufferGeometry,\n    InterleavedBufferAttribute as ThreeInterleavedBufferAttribute\n} from \"three\";\n\nimport {\n    BufferAttribute,\n    BufferElementType,\n    Geometry,\n    GeometryType,\n    InterleavedBufferAttribute\n} from \"./DecodedTile\";\n\n/**\n * Collection of helper methods to convert\n * {@link https://threejs.org/docs/index.html#api/en/core/BufferGeometry|three.js BufferGeometry}\n * to [[Geometry]] that allows creation and transfering of THREE BufferGeometry in webworkers.\n * See also [[CustomDatasourceExample]].\n */\nexport namespace ThreeBufferUtils {\n    export function getBufferElementType(buffer: ArrayBufferView): BufferElementType {\n        if (buffer instanceof Int8Array) {\n            return \"int8\";\n        } else if (buffer instanceof Uint8Array) {\n            return \"uint8\";\n        } else if (buffer instanceof Int16Array) {\n            return \"int16\";\n        } else if (buffer instanceof Uint16Array) {\n            return \"uint16\";\n        } else if (buffer instanceof Int32Array) {\n            return \"int32\";\n        } else if (buffer instanceof Uint32Array) {\n            return \"uint32\";\n        } else if (buffer instanceof Float32Array) {\n            return \"float\";\n        }\n\n        throw new Error(`Unsupported buffer type ${name}`);\n    }\n\n    export function fromThreeBufferAttribute(\n        bufferAttribute: ThreeBufferAttribute\n    ): BufferAttribute {\n        const buffer = (bufferAttribute.array as any) as ArrayBufferView;\n        return {\n            name: bufferAttribute.name,\n            buffer: buffer.buffer,\n            type: getBufferElementType(buffer),\n            itemCount: bufferAttribute.itemSize,\n            normalized: bufferAttribute.normalized\n        };\n    }\n\n    export function fromThreeInterleavedBufferAttribute(\n        bufferAttribute: ThreeInterleavedBufferAttribute\n    ): InterleavedBufferAttribute {\n        throw new Error(\"Not implemented yet\");\n    }\n\n    export function fromThreeBufferGeometry(\n        bufferGeometry: ThreeBufferGeometry,\n        techniqueIndex: number\n    ): Geometry {\n        const vertexAttributes: BufferAttribute[] = [];\n        const attributeNames = Object.getOwnPropertyNames(bufferGeometry.attributes);\n        for (const name of attributeNames) {\n            const attribute = bufferGeometry.attributes[name];\n            // FIXME: Also support InterleavedBufferAttribute\n            const vertexAttribute = fromThreeBufferAttribute(attribute as ThreeBufferAttribute);\n            vertexAttribute.name = name;\n            vertexAttributes.push(vertexAttribute);\n        }\n        const index =\n            bufferGeometry.index !== null\n                ? fromThreeBufferAttribute(bufferGeometry.index)\n                : undefined;\n\n        let count = 0;\n        if (index !== undefined) {\n            count = bufferGeometry.index === null ? 0 : bufferGeometry.index.count;\n        } else {\n            // If there is no index buffer, try to deduce the count from the position attribute.\n            const posAttr = bufferGeometry.attributes.position as ThreeBufferAttribute;\n            if (posAttr === undefined) {\n                throw new Error(\"Missing position attibute to deduce item count\");\n            }\n            count = posAttr.count;\n        }\n\n        return {\n            type: GeometryType.Unspecified,\n            vertexAttributes,\n            index,\n            groups: [{ start: 0, count, technique: techniqueIndex }]\n        };\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Definitions, StylePriority, StyleSet } from \"./Theme\";\nimport { WorkerServiceProtocol } from \"./WorkerServiceProtocol\";\n\n/**\n * Interface for `OptionsMap` which describes a general structure of key-value pairs.\n */\nexport interface OptionsMap {\n    [name: string]: any;\n}\n\n/**\n * Allows to cancel and prioritize requests inside the requestQueue.\n *\n * @remarks\n * Useful to optimize the order of decoding tiles during animations and camera movements.\n *\n * `RequestController` is not extending [[AbortController]], because this is not supported in ES5.\n */\nexport class RequestController implements AbortController {\n    /**\n     * Creates an instance of `RequestController`.\n     *\n     * @param {number} priority\n     * @param {AbortController} abortController Optional [[AbortController]] used internally, since\n     *      [[AbortController]]s should not be subclassed.\n     */\n    constructor(\n        public priority: number = 0,\n        public abortController: AbortController = new AbortController()\n    ) {}\n\n    get signal(): AbortSignal {\n        return this.abortController.signal;\n    }\n\n    /**\n     * Invoking this method will set this object's AbortSignal's aborted flag and\n     * signal to any observers that the associated activity is to be aborted.\n     */\n    abort(): void {\n        this.abortController.abort();\n    }\n}\n\n/**\n * Communication protocol with [[ITileDecoder]].\n */\nexport namespace WorkerDecoderProtocol {\n    /**\n     * Define possible names of messages exchanged with decoder services within `WebWorker`.\n     */\n    export enum DecoderMessageName {\n        Configuration = \"configuration\"\n    }\n\n    /**\n     * Interface for `DecodedTileMessage` which describes metadata for a decoded tile.\n     */\n    export interface DecoderMessage {\n        service: string;\n        type: DecoderMessageName;\n    }\n\n    /**\n     * Interface for a ConfigurationMessage that is sent from the datasource to the decoder. The\n     * message used to configure the [[ITileDecoder]].\n     */\n    export interface ConfigurationMessage extends DecoderMessage {\n        type: DecoderMessageName.Configuration;\n        styleSet?: StyleSet;\n        definitions?: Definitions;\n        priorities?: StylePriority[];\n        labelPriorities?: string[];\n        options?: OptionsMap;\n        languages?: string[];\n    }\n\n    /**\n     * Type guard to check if an object is an instance of `ConfigurationMessage`.\n     */\n    export function isConfigurationMessage(message: any): message is ConfigurationMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === DecoderMessageName.Configuration\n        );\n    }\n\n    /**\n     * Define possible names of requests called on decoder services within `WebWorker`.\n     */\n    export enum Requests {\n        DecodeTileRequest = \"decode-tile-request\",\n        TileInfoRequest = \"tile-info-request\"\n    }\n\n    /**\n     * This object is sent to the decoder asking to decode a specific tile. The expected response\n     * type is a [[DecodedTile]].\n     */\n    export interface DecodeTileRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.DecodeTileRequest;\n        tileKey: number;\n        data: ArrayBufferLike;\n        projection: string;\n    }\n\n    /**\n     * Type guard to check if an object is a decoded tile object sent to a worker.\n     */\n    export function isDecodeTileRequest(message: any): message is DecodeTileRequest {\n        return (\n            message &&\n            typeof message.type === \"string\" &&\n            message.type === Requests.DecodeTileRequest\n        );\n    }\n\n    /**\n     * This object is sent to the decoder asking for a tile info of a specific tile. The expected\n     * response type is a [[DecodedTile]].\n     */\n    export interface TileInfoRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.TileInfoRequest;\n        tileKey: number;\n        data: ArrayBufferLike;\n        projection: string;\n    }\n\n    /**\n     * Type guard to check if an object is an info tile object sent to a worker.\n     */\n    export function isTileInfoRequest(message: any): message is TileInfoRequest {\n        return (\n            message && typeof message.type === \"string\" && message.type === Requests.TileInfoRequest\n        );\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Common communication protocol for [[WorkerService]].\n */\nexport namespace WorkerServiceProtocol {\n    /**\n     * Service id of worker manager ([[WorkerServiceManager]]) used to create/destroy service\n     * instances in workers.\n     */\n    export const WORKER_SERVICE_MANAGER_SERVICE_ID = \"worker-service-manager\";\n\n    /**\n     * Define possible names of messages exchanged with services within `WebWorker`.\n     */\n    export enum ServiceMessageName {\n        Initialized = \"initialized\",\n        Request = \"request\",\n        Response = \"response\"\n    }\n\n    /**\n     * Interface for `ServiceMessage` which describes metadata for a service messages.\n     */\n    export interface ServiceMessage {\n        service: string;\n        type: ServiceMessageName;\n    }\n\n    /**\n     * This message is sent by the worker to the main thread. No data is sent. Receiving this\n     * message confirms that the worker has started successfully.\n     */\n    export interface InitializedMessage extends ServiceMessage {\n        type: ServiceMessageName.Initialized;\n    }\n\n    /**\n     * Type guard to check if an object is a signal message from worker.\n     */\n    export function isInitializedMessage(message: any): message is InitializedMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === ServiceMessageName.Initialized\n        );\n    }\n\n    /**\n     * Define possible names of requests called on services within `WebWorker`.\n     */\n    export enum Requests {\n        CreateService = \"create-service\",\n        DestroyService = \"destroy-service\"\n    }\n\n    /**\n     * This is an internal general interface used in communication with workers.\n     * Check [[ConcurrentWorkerSet]]'s invokeRequest function for exemplary usage.\n     */\n    export interface ServiceRequest {\n        type: string;\n    }\n\n    /**\n     * This message is sent by the main thread to [[WorkerServiceManager]] to dynamically create a\n     * new service.\n     *\n     * May throw `UnknownServiceError` if service of given type is not registered in\n     * [[WorkerServiceManager]], see [[isUnknownServiceError]].\n     */\n    export interface CreateServiceRequest extends ServiceRequest {\n        type: Requests.CreateService;\n\n        /**\n         * Type of service to be created.\n         *\n         * @see [[WorkerServiceManager.register]]\n         */\n        targetServiceType: string;\n\n        /**\n         * The newly created service instance will be available under this id.\n         */\n        targetServiceId: string;\n    }\n\n    /**\n     * Test if `error` thrown by [[CreateServiceRequest]] was caused by unknown type of service.\n     */\n    export function isUnknownServiceError(error: Error): boolean {\n        return error.message.includes(\"unknown targetServiceType requested: \");\n    }\n\n    /**\n     * This message is sent by the main thread to [[WorkerServiceManager]] to dynamically destroy a\n     * service.\n     */\n    export interface DestroyServiceRequest extends ServiceRequest {\n        type: Requests.DestroyService;\n\n        /**\n         * Id of service to be destroyed.\n         */\n        targetServiceId: string;\n    }\n\n    /**\n     * Possible service management messages (`CreateService` or `DestroyService`) sent to WebWorker.\n     */\n    export type WorkerServiceManagerRequest = CreateServiceRequest | DestroyServiceRequest;\n\n    /**\n     * This message is a part of the Request-Response scheme implemented to be used in communication\n     * between workers and the decoder.\n     */\n    export interface RequestMessage extends ServiceMessage {\n        type: ServiceMessageName.Request;\n        messageId: number;\n        request: any;\n    }\n\n    /**\n     * Type guard to check if an object is a request message sent to a worker.\n     */\n    export function isRequestMessage(message: any): message is RequestMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === ServiceMessageName.Request\n        );\n    }\n\n    /**\n     * This message is a part of the Request-Response scheme implemented to be used in communication\n     * between workers and the decoder.\n     */\n    export interface ResponseMessage extends ServiceMessage {\n        type: ServiceMessageName.Response;\n        messageId: number;\n        errorMessage?: string;\n        errorStack?: string;\n        response?: object;\n    }\n\n    /**\n     * Type guard to check if an object is a request message sent to a worker.\n     */\n    export function isResponseMessage(message: any): message is ResponseMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === ServiceMessageName.Response\n        );\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoJson } from \"../lib/GeoJsonDataType\";\nimport { WorkerServiceProtocol } from \"./WorkerServiceProtocol\";\n\n/**\n * Communication protocol with {@link ITiler}.\n */\nexport namespace WorkerTilerProtocol {\n    /**\n     * Define possible names of requests called on tiler services within `WebWorker`.\n     */\n    export enum Requests {\n        RegisterIndex = \"register-index\",\n        UpdateIndex = \"update-index\",\n        TileRequest = \"tile-request\"\n    }\n\n    /**\n     * This object is sent to the tiler to register a new tile index in the worker.\n     */\n    export interface RegisterIndexRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.RegisterIndex;\n        id: string;\n        input: string | GeoJson;\n    }\n\n    /**\n     * Type guard to check if an object is an index registration request sent to a worker.\n     */\n    export function isRegisterIndexRequest(message: any): message is RegisterIndexRequest {\n        return (\n            message && typeof message.type === \"string\" && message.type === Requests.RegisterIndex\n        );\n    }\n\n    /**\n     * This object is sent to the tiler to register a new tile index in the worker.\n     */\n    export interface UpdateIndexRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.UpdateIndex;\n        id: string;\n        input: string | GeoJson;\n    }\n\n    /**\n     * Type guard to check if an object is an update request for the index registration.\n     */\n    export function isUpdateIndexRequest(message: any): message is UpdateIndexRequest {\n        return message && typeof message.type === \"string\" && message.type === Requests.UpdateIndex;\n    }\n\n    /**\n     * This object is sent to the tiler asking to retrieve a specific tile. The expected response\n     * type is an object containing a tiled payload.\n     */\n    export interface TileRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.TileRequest;\n        index: string;\n        tileKey: number;\n    }\n\n    /**\n     * Type guard to check if an object is a tile request sent to a worker.\n     */\n    export function isTileRequest(message: any): message is TileRequest {\n        return message && typeof message.type === \"string\" && message.type === Requests.TileRequest;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, Expr, JsonArray, NumberLiteralExpr, StringLiteralExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst VALID_ELEMENT_TYPES = [\"boolean\", \"number\", \"string\"];\n\nfunction checkElementTypes(arg: Expr, array: JsonArray) {\n    if (!(arg instanceof StringLiteralExpr) || !VALID_ELEMENT_TYPES.includes(arg.value)) {\n        throw new Error(\n            `expected \"boolean\", \"number\" or \"string\" instead of '${JSON.stringify(arg)}'`\n        );\n    }\n\n    const ty = arg.value;\n\n    array.forEach((element, index) => {\n        if (typeof element !== ty) {\n            throw new Error(`expected array element at index ${index} to have type '${ty}'`);\n        }\n    });\n}\n\nfunction checkArrayLength(arg: Expr, array: JsonArray) {\n    if (!(arg instanceof NumberLiteralExpr)) {\n        throw new Error(`missing expected number of elements`);\n    }\n\n    const length = arg.value;\n\n    if (array.length !== length) {\n        throw new Error(`the array must have ${length} element(s)`);\n    }\n}\n\nfunction checkArray(context: ExprEvaluatorContext, arg: Expr) {\n    const value = context.evaluate(arg);\n    if (!Array.isArray(value)) {\n        throw new Error(`'${value}' is not an array`);\n    }\n    return value;\n}\n\nconst operators = {\n    array: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            switch (call.args.length) {\n                case 0:\n                    throw new Error(\"not enough arguments\");\n                case 1:\n                    return checkArray(context, call.args[0]);\n                case 2: {\n                    const array = checkArray(context, call.args[1]);\n                    checkElementTypes(call.args[0], array);\n                    return array;\n                }\n                case 3: {\n                    const array = checkArray(context, call.args[2]);\n                    checkArrayLength(call.args[1], array);\n                    checkElementTypes(call.args[0], array);\n                    return array;\n                }\n                default:\n                    throw new Error(\"too many arguments\");\n            }\n        }\n    },\n    \"make-array\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            if (call.args.length === 0) {\n                throw new Error(\"not enough arguments\");\n            }\n            return [...call.args.map(arg => context.evaluate(arg))];\n        }\n    },\n    at: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const args = call.args;\n            const index = context.evaluate(args[0]);\n            if (typeof index !== \"number\") {\n                throw new Error(`expected the index of the element to retrieve`);\n            }\n            const value = context.evaluate(args[1]);\n            if (!Array.isArray(value)) {\n                throw new Error(`expected an array`);\n            }\n            return index >= 0 && index < value.length ? value[index] : null;\n        }\n    },\n\n    slice: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            if (call.args.length < 2) {\n                throw new Error(\"not enough arguments\");\n            }\n            const input = context.evaluate(call.args[0]);\n            if (!(typeof input === \"string\" || Array.isArray(input))) {\n                throw new Error(\"input must be a string or an array\");\n            }\n            const start = context.evaluate(call.args[1]);\n            if (typeof start !== \"number\") {\n                throw new Error(\"expected an index\");\n            }\n            let end: number | undefined;\n            if (call.args.length > 2) {\n                end = context.evaluate(call.args[2]) as any;\n                if (typeof end !== \"number\") {\n                    throw new Error(\"expected an index\");\n                }\n            }\n            return input.slice(start, end);\n        }\n    }\n};\n\nexport const ArrayOperators: OperatorDescriptorMap = operators;\nexport type ArrayOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    \"to-boolean\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return Boolean(context.evaluate(call.args[0]));\n        }\n    },\n\n    \"to-string\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return String(context.evaluate(call.args[0]));\n        }\n    },\n\n    \"to-number\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const arg of call.args) {\n                const value = Number(context.evaluate(arg));\n                if (!isNaN(value)) {\n                    return value;\n                }\n            }\n            throw new Error(\"cannot convert the value to a number\");\n        }\n    }\n};\n\nexport const CastOperators: OperatorDescriptorMap = operators;\nexport type CastOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { ColorUtils } from \"../ColorUtils\";\nimport { CallExpr, Value } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\nimport { parseStringEncodedColor } from \"../StringEncodedNumeral\";\n\nconst operators = {\n    alpha: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            let color: Value | undefined = context.evaluate(call.args[0]);\n            if (typeof color === \"string\") {\n                color = parseStringEncodedColor(color);\n            }\n            const alpha = typeof color === \"number\" ? ColorUtils.getAlphaFromHex(color) : 1;\n            return alpha;\n        }\n    },\n    rgba: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const r = context.evaluate(call.args[0]);\n            const g = context.evaluate(call.args[1]);\n            const b = context.evaluate(call.args[2]);\n            const a = context.evaluate(call.args[3]);\n            if (\n                typeof r === \"number\" &&\n                typeof g === \"number\" &&\n                typeof b === \"number\" &&\n                typeof a === \"number\" &&\n                r >= 0 &&\n                g >= 0 &&\n                b >= 0 &&\n                a >= 0 &&\n                a <= 1\n            ) {\n                return rgbaToHex(r, g, b, a);\n            }\n            throw new Error(`unknown color 'rgba(${r},${g},${b},${a})'`);\n        }\n    },\n    rgb: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const r = context.evaluate(call.args[0]);\n            const g = context.evaluate(call.args[1]);\n            const b = context.evaluate(call.args[2]);\n            if (\n                typeof r === \"number\" &&\n                typeof g === \"number\" &&\n                typeof b === \"number\" &&\n                r >= 0 &&\n                g >= 0 &&\n                b >= 0\n            ) {\n                return rgbToHex(r, g, b);\n            }\n            throw new Error(`unknown color 'rgb(${r},${g},${b})'`);\n        }\n    },\n    // Hsl operator contains angle modulated to <0, 360> range, percent of\n    // saturation and lightness in <0, 100> range, i.e. hsl(360, 100, 100)\n    hsl: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const h = context.evaluate(call.args[0]);\n            const s = context.evaluate(call.args[1]);\n            const l = context.evaluate(call.args[2]);\n            if (\n                typeof h === \"number\" &&\n                typeof s === \"number\" &&\n                typeof l === \"number\" &&\n                h >= 0 &&\n                s >= 0 &&\n                l >= 0\n            ) {\n                return hslToHex(h, s, l);\n            }\n            throw new Error(`unknown color 'hsl(${h},${s}%,${l}%)'`);\n        }\n    }\n};\n\nfunction rgbaToHex(r: number, g: number, b: number, a: number): number {\n    // We decode rgba color channels using custom hex format with transparency.\n    return ColorUtils.getHexFromRgba(\n        THREE.MathUtils.clamp(r, 0, 255) / 255,\n        THREE.MathUtils.clamp(g, 0, 255) / 255,\n        THREE.MathUtils.clamp(b, 0, 255) / 255,\n        THREE.MathUtils.clamp(a, 0, 1)\n    );\n}\n\nfunction rgbToHex(r: number, g: number, b: number): number {\n    return ColorUtils.getHexFromRgb(\n        THREE.MathUtils.clamp(r, 0, 255) / 255,\n        THREE.MathUtils.clamp(g, 0, 255) / 255,\n        THREE.MathUtils.clamp(b, 0, 255) / 255\n    );\n}\n\nfunction hslToHex(h: number, s: number, l: number): number {\n    return ColorUtils.getHexFromHsl(\n        THREE.MathUtils.euclideanModulo(h, 360) / 360,\n        THREE.MathUtils.clamp(s, 0, 100) / 100,\n        THREE.MathUtils.clamp(l, 0, 100) / 100\n    );\n}\n\nexport const ColorOperators: OperatorDescriptorMap = operators;\nexport type ColorOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nfunction compare(context: ExprEvaluatorContext, call: CallExpr, strict: boolean = false) {\n    const left = context.evaluate(call.args[0]) as any;\n    const right = context.evaluate(call.args[1]) as any;\n\n    if (\n        !(\n            (typeof left === \"number\" && typeof right === \"number\") ||\n            (typeof left === \"string\" && typeof right === \"string\")\n        )\n    ) {\n        if (strict) {\n            throw new Error(`invalid operands '${left}' and '${right}' for operator '${call.op}'`);\n        }\n    }\n\n    switch (call.op) {\n        case \"<\":\n            return left < right;\n        case \">\":\n            return left > right;\n        case \"<=\":\n            return left <= right;\n        case \">=\":\n            return left >= right;\n        default:\n            throw new Error(`invalid comparison operator '${call.op}'`);\n    }\n}\n\nconst operators = {\n    \"!\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return !context.evaluate(call.args[0]);\n        }\n    },\n\n    \"==\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            return left === right;\n        }\n    },\n\n    \"!=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            return left !== right;\n        }\n    },\n\n    \"<\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) },\n    \">\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) },\n    \"<=\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) },\n    \">=\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) }\n};\n\nexport const ComparisonOperators: OperatorDescriptorMap = operators;\nexport type ComparisonOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env } from \"../Env\";\nimport { CallExpr, ExprScope } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    \"geometry-type\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const geometryType = context.env.lookup(\"$geometryType\");\n            switch (geometryType) {\n                case \"point\":\n                    return \"Point\";\n                case \"line\":\n                    return \"LineString\";\n                case \"polygon\":\n                    return \"Polygon\";\n                default:\n                    return null;\n            }\n        }\n    },\n    \"feature-state\": {\n        isDynamicOperator: () => true,\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            if (context.scope !== ExprScope.Dynamic) {\n                throw new Error(\"feature-state cannot be used in this context\");\n            }\n            const property = context.evaluate(call.args[0]);\n            if (typeof property !== \"string\") {\n                throw new Error(`expected the name of the property of the feature state`);\n            }\n            const state = context.env.lookup(\"$state\");\n            if (Env.isEnv(state)) {\n                return state.lookup(property) ?? null;\n            } else if (state instanceof Map) {\n                return state.get(property) ?? null;\n            }\n            return null;\n        }\n    },\n    id: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return context.env.lookup(\"$id\") ?? null;\n        }\n    }\n};\n\nexport const FeatureOperators: OperatorDescriptorMap = operators;\nexport type FeatureOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, Expr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nfunction conditionalCast(context: ExprEvaluatorContext, type: string, args: Expr[]) {\n    switch (type) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n            for (const childExpr of args) {\n                const value = context.evaluate(childExpr);\n                if (typeof value === type) {\n                    return value;\n                }\n            }\n            throw new Error(`expected a '${type}'`);\n        default:\n            throw new Error(`invalid type '${type}'`);\n    } // switch\n}\n\nconst operators = {\n    all: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                if (!context.evaluate(childExpr)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    },\n\n    any: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                if (context.evaluate(childExpr)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    },\n\n    none: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                if (context.evaluate(childExpr)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    },\n\n    boolean: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return conditionalCast(context, \"boolean\", call.args);\n        }\n    },\n\n    number: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return conditionalCast(context, \"number\", call.args);\n        }\n    },\n\n    string: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return conditionalCast(context, \"string\", call.args);\n        }\n    }\n};\n\nexport const FlowOperators: OperatorDescriptorMap = operators;\nexport type FlowOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, ExprScope, Value } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    \"ppi-scale\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]) as number;\n            const scaleFactor = call.args[1] ? (context.evaluate(call.args[1]) as number) : 1;\n            return value * scaleFactor;\n        }\n    },\n    \"world-ppi-scale\": {\n        isDynamicOperator: (): boolean => {\n            return true;\n        },\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const pixels = context.evaluate(call.args[0]) as number;\n            const scaleFactor = call.args[1] ? (context.evaluate(call.args[1]) as number) : 1;\n            const zoom = context.env.lookup(\"$zoom\") as number;\n            const zoomWidth = Math.pow(2, 17) / Math.pow(2, zoom);\n            const v = pixels * zoomWidth * scaleFactor;\n            return v;\n        }\n    },\n    \"world-discrete-ppi-scale\": {\n        isDynamicOperator: (): boolean => {\n            return true;\n        },\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const pixels = context.evaluate(call.args[0]) as number;\n            const scaleFactor = call.args[1] ? (context.evaluate(call.args[1]) as number) : 1;\n            const zoom = context.env.lookup(\"$zoom\") as number;\n            const zoomWidthDiscrete = Math.pow(2, 17) / Math.pow(2, Math.floor(zoom));\n            const v = pixels * zoomWidthDiscrete * scaleFactor;\n            return v;\n        }\n    },\n    ppi: {\n        call: (context: ExprEvaluatorContext) => {\n            const ppi = context.env.lookup(\"$ppi\");\n            if (typeof ppi === \"number\") {\n                return ppi;\n            }\n            return 72;\n        }\n    },\n    zoom: {\n        isDynamicOperator: (): boolean => {\n            return true;\n        },\n        call: (context: ExprEvaluatorContext, call: CallExpr): Value => {\n            if (context.scope === ExprScope.Value) {\n                return call;\n            }\n            return context.env.lookup(\"$zoom\") ?? null;\n        }\n    }\n};\n\nexport const MapOperators: OperatorDescriptorMap = operators;\nexport type MapOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    \"^\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '^'`\n                );\n            }\n            return Math.pow(a, b);\n        }\n    },\n\n    \"-\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            if (call.args.length === 1) {\n                const value = context.evaluate(call.args[0]);\n                if (typeof value !== \"number\") {\n                    throw new Error(`ìnvalid operand '${typeof value} for operator '-'`);\n                }\n\n                return -value;\n            }\n\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '-'`\n                );\n            }\n            return a - b;\n        }\n    },\n\n    \"/\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '/'`\n                );\n            }\n            return a / b;\n        }\n    },\n\n    \"%\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '%'`\n                );\n            }\n            return a % b;\n        }\n    },\n\n    \"+\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return call.args.reduce((a, b) => Number(a) + Number(context.evaluate(b)), 0);\n        }\n    },\n\n    \"*\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return call.args.reduce((a, b) => Number(a) * Number(context.evaluate(b)), 1);\n        }\n    },\n\n    abs: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'abs'`);\n            }\n            return Math.abs(value);\n        }\n    },\n\n    acos: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'acos'`);\n            }\n            return Math.acos(value);\n        }\n    },\n\n    asin: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'asin'`);\n            }\n            return Math.asin(value);\n        }\n    },\n\n    atan: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'atan'`);\n            }\n            return Math.atan(value);\n        }\n    },\n\n    ceil: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'ceil'`);\n            }\n            return Math.ceil(value);\n        }\n    },\n\n    cos: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'cos'`);\n            }\n            return Math.cos(value);\n        }\n    },\n\n    e: {\n        call: () => {\n            return Math.E;\n        }\n    },\n\n    floor: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'floor'`);\n            }\n            return Math.floor(value);\n        }\n    },\n\n    ln: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'ln'`);\n            }\n            return Math.log(value);\n        }\n    },\n\n    ln2: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'ln2'`);\n            }\n            return Math.log2(value);\n        }\n    },\n\n    log10: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'log10'`);\n            }\n            return Math.log10(value);\n        }\n    },\n\n    max: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return Math.max(...call.args.map(v => Number(context.evaluate(v))));\n        }\n    },\n\n    min: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return Math.min(...call.args.map(v => Number(context.evaluate(v))));\n        }\n    },\n\n    /**\n     * Clamp numeric value to given range, inclusive.\n     *\n     * Synopsis:\n     * ```\n     * [\"clamp\", v: number, min: number, max: number]`\n     * ```\n     */\n    clamp: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const v = context.evaluate(call.args[0]);\n            const min = context.evaluate(call.args[1]);\n            const max = context.evaluate(call.args[2]);\n\n            if (typeof v !== \"number\" || typeof min !== \"number\" || typeof max !== \"number\") {\n                throw new Error(`invalid operands '${v}', ${min}, ${max} for operator 'clamp'`);\n            }\n            return THREE.MathUtils.clamp(v, min, max);\n        }\n    },\n\n    pi: {\n        call: () => {\n            return Math.PI;\n        }\n    },\n\n    round: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'round'`);\n            }\n            return Math.round(value);\n        }\n    },\n\n    sin: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'sin'`);\n            }\n            return Math.sin(value);\n        }\n    },\n\n    sqrt: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'sqrt'`);\n            }\n            return Math.sqrt(value);\n        }\n    },\n\n    tan: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'tan'`);\n            }\n            return Math.tan(value);\n        }\n    }\n};\n\nexport const MathOperators: OperatorDescriptorMap = operators;\nexport type MathOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { assert } from \"@here/harp-utils\";\n\nimport { CallExpr, LookupExpr, ObjectLiteralExpr, Value } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\ninterface KeyValObj {\n    [key: string]: Value;\n}\ninterface LookupEntry {\n    keys: KeyValObj;\n    attributes: KeyValObj;\n}\n\ntype LookupArray = LookupEntry[];\ntype LookupMap = Map<string, KeyValObj>;\n\nfunction joinKeyValues(keys: string[]): string {\n    return keys.join(\"&\");\n}\n\nfunction stringifyKeyValue(key: string, value: Value): string {\n    return key + \"=\" + JSON.stringify(value);\n}\n\n/**\n * Joins the strings of each given array.\n * @param combinations Array of string arrays that must be joined.\n * @returns The joined strings sorted from longest to shortest (in number of substrings).\n */\nfunction joinCombinations(combinations: string[][]): string[] {\n    // sort from longest (more specific) to shortest (more generic).\n    combinations.sort((lhs, rhs) => rhs.length - lhs.length);\n    const result = combinations.map((keys: string[]) => joinKeyValues(keys));\n    // Add the empty combination which will match a default table entry (an entry without keys) if\n    // it exists.\n    result.push(\"\");\n    return result;\n}\n/**\n * Gets all combinations of all lengths of a list of strings.\n * @param input An array containing all strings.\n * @param index Start index of the strings in `input` that will be considered.\n * @returns An array of all combinations. The strings within each combination are in the inverse\n * order of the input array.\n */\nfunction getAllCombinations(input: string[], index: number = 0): string[][] {\n    if (index >= input.length) {\n        return [];\n    }\n\n    const combinations = getAllCombinations(input, index + 1);\n\n    const initLength = combinations.length;\n    for (let i = 0; i < initLength; i += 1) {\n        combinations.push([...combinations[i], input[index]]);\n    }\n    combinations.push([input[index]]);\n    return combinations;\n}\n\n/**\n * Make all combinations of all lengths with the search keys of the given lookup expression.\n * @param lookupExpr The lookup expression.\n * @param context The context to evaluate expressions.\n * @returns All combinations, sorted from longest(more specific) to shortest (more generic).\n */\nfunction getKeyCombinations(lookupExpr: LookupExpr, context: ExprEvaluatorContext): string[] {\n    const keys = lookupExpr.args.slice(1);\n    const result = [];\n    for (let i = 0; i < keys.length; i += 2) {\n        const value = context.evaluate(keys[i + 1]);\n        // ignore keys whose values evaluate to null.\n        if (value === null) {\n            continue;\n        }\n        const key = context.evaluate(keys[i]) as string;\n        result.push(stringifyKeyValue(key, value));\n    }\n    // Reverse sort, getAllCombinations reverses the order.\n    result.sort().reverse();\n\n    return joinCombinations(getAllCombinations(result));\n}\n\n/**\n * Creates a map from the lookup entries in a given array.\n * @param lookupArray The array to transform.\n * @returns The resulting map.\n */\nfunction createLookupMap(lookupArray: LookupArray): LookupMap {\n    const map = new Map();\n    for (const entry of lookupArray) {\n        if (typeof entry !== \"object\") {\n            throw new Error(`Invalid lookup table entry type (${typeof entry})`);\n        }\n        if (!entry.keys) {\n            throw new Error(`Lookup table entry has no 'keys' property.`);\n        }\n        if (!entry.attributes) {\n            throw new Error(`Lookup table entry has no 'attributes' property.`);\n        }\n        const key = joinKeyValues(\n            Object.getOwnPropertyNames(entry.keys)\n                .sort()\n                .map(key => stringifyKeyValue(key, entry.keys[key]))\n        );\n        map.set(key, entry.attributes);\n    }\n    return map;\n}\n\n/**\n * Searches matches of the given keys in a map.\n * @param keys Keys to search in the map.\n * @param map The lookup map.\n * @returns The first match (in the order in which keys are given) or null if no match found.\n */\nfunction searchLookupMap(keys: string[], map: LookupMap): KeyValObj | null {\n    for (const key of keys) {\n        const matchAttributes = map.get(key);\n        if (matchAttributes) {\n            return matchAttributes;\n        }\n    }\n    return null;\n}\n\nconst operators = {\n    length: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (Array.isArray(value) || typeof value === \"string\") {\n                return value.length;\n            }\n            throw new Error(`invalid operand '${value}' for operator 'length'`);\n        }\n    },\n    coalesce: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                const value = context.evaluate(childExpr);\n                if (value !== null) {\n                    return value;\n                }\n            }\n            return null;\n        }\n    },\n    lookup: {\n        call: (context: ExprEvaluatorContext, lookup: LookupExpr) => {\n            // Argument types are checked on parsing, see LookupExpr.parseArray().\n            assert(lookup.args.length > 0, \"missing lookup table\");\n\n            const keyCombinations = getKeyCombinations(lookup, context);\n            let table = context.evaluate(lookup.args[0]) as LookupArray | LookupMap;\n            assert(Array.isArray(table) || table instanceof Map, \"wrong lookup table type\");\n\n            if (Array.isArray(table)) {\n                // Transform the lookup table into a map to speedup lookup, since the same table\n                // might be used by multiple lookup expressions.\n                table = createLookupMap(table);\n                const lookupMapExpr = new ObjectLiteralExpr(table);\n                // Replace the lookup table argument with the map. Next calls to the same expression\n                // (e.g. re-evaluations due to data dependencies) will use the map.\n                lookup.args[0] = lookupMapExpr;\n            }\n\n            return searchLookupMap(keyCombinations, table);\n        }\n    }\n};\n\nexport const MiscOperators: OperatorDescriptorMap = operators;\nexport type MiscOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env } from \"../Env\";\nimport { CallExpr, Expr, ExprScope } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nenum LookupMode {\n    get,\n    has\n}\n\nfunction lookupMember(context: ExprEvaluatorContext, args: Expr[], lookupMode: LookupMode) {\n    const memberName = context.evaluate(args[0]);\n\n    if (typeof memberName !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n\n    const object = context.evaluate(args[1]) as any;\n\n    if (object && typeof object === \"object\") {\n        if (Env.isEnv(object)) {\n            const value = object.lookup(memberName) ?? null;\n            return lookupMode === LookupMode.get ? value : value !== null;\n        }\n        if (hasOwnProperty.call(object, memberName)) {\n            return lookupMode === LookupMode.get ? object[memberName] : true;\n        }\n    }\n\n    return lookupMode === LookupMode.get ? null : false;\n}\n\nconst operators = {\n    in: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            const object = context.evaluate(call.args[1]);\n            if (typeof value === \"string\" && typeof object === \"string\") {\n                return object.includes(value);\n            } else if (Array.isArray(object)) {\n                return object.includes(value);\n            }\n            return false;\n        }\n    },\n\n    get: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) =>\n            lookupMember(context, call.args, LookupMode.get)\n    },\n\n    has: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) =>\n            lookupMember(context, call.args, LookupMode.has)\n    },\n\n    \"dynamic-properties\": {\n        isDynamicOperator: () => true,\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            if (context.scope === ExprScope.Dynamic) {\n                return context.env;\n            }\n            return call;\n        }\n    }\n};\n\nexport const ObjectOperators: OperatorDescriptorMap = operators;\nexport type ObjectOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    concat: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return \"\".concat(...call.args.map(a => String(context.evaluate(a))));\n        }\n    },\n\n    downcase: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return String(context.evaluate(call.args[0])).toLocaleLowerCase();\n        }\n    },\n\n    upcase: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return String(context.evaluate(call.args[0])).toLocaleUpperCase();\n        }\n    },\n\n    \"~=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            if (typeof left === \"string\" && typeof right === \"string\") {\n                return left.includes(right);\n            }\n            return false;\n        }\n    },\n\n    \"^=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            if (typeof left === \"string\" && typeof right === \"string\") {\n                return left.startsWith(right);\n            }\n            return false;\n        }\n    },\n\n    \"$=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            if (typeof left === \"string\" && typeof right === \"string\") {\n                return left.endsWith(right);\n            }\n            return false;\n        }\n    }\n};\n\nexport const StringOperators: OperatorDescriptorMap = operators;\nexport type StringOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    typeof: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return typeof context.evaluate(call.args[0]);\n        }\n    }\n};\n\nexport const TypeOperators: OperatorDescriptorMap = operators;\nexport type TypeOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { Value } from \"../Env\";\nimport { CallExpr, NumberLiteralExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\ntype MakeVectorCallExpr = CallExpr & {\n    _value?: THREE.Vector2 | THREE.Vector3 | THREE.Vector4;\n};\n\nfunction isVector(\n    context: ExprEvaluatorContext,\n    call: CallExpr,\n    type: \"vector2\" | \"vector3\" | \"vector4\"\n): Value {\n    let ctor: new () => object;\n    switch (type) {\n        case \"vector2\":\n            ctor = THREE.Vector2;\n            break;\n        case \"vector3\":\n            ctor = THREE.Vector3;\n            break;\n        case \"vector4\":\n            ctor = THREE.Vector4;\n            break;\n    }\n    for (const childExpr of call.args) {\n        const value = context.evaluate(childExpr);\n        if (value instanceof ctor) {\n            return value;\n        }\n    }\n    throw new Error(`expected a \"${type}\"`);\n}\n\nfunction toVector(\n    context: ExprEvaluatorContext,\n    call: CallExpr,\n    type: \"vector2\" | \"vector3\" | \"vector4\"\n): Value {\n    let VectorCtor: any;\n    let components: number;\n\n    switch (type) {\n        case \"vector2\":\n            VectorCtor = THREE.Vector2;\n            components = 2;\n            break;\n        case \"vector3\":\n            VectorCtor = THREE.Vector3;\n            components = 3;\n            break;\n        case \"vector4\":\n            VectorCtor = THREE.Vector4;\n            components = 4;\n            break;\n    }\n\n    for (const childExpr of call.args) {\n        const value = context.evaluate(childExpr);\n        if (value instanceof VectorCtor) {\n            return value;\n        } else if (\n            Array.isArray(value) &&\n            value.length === components &&\n            value.every(v => typeof v === \"number\")\n        ) {\n            return new VectorCtor().fromArray(value);\n        }\n    }\n    throw new Error(`expected a \"${type}\"`);\n}\n\nconst operators = {\n    \"make-vector\": {\n        call: (context: ExprEvaluatorContext, call: MakeVectorCallExpr) => {\n            if (call._value !== undefined) {\n                return call._value;\n            }\n\n            if (call.args.length < 2) {\n                throw new Error(\"not enough arguments\");\n            } else if (call.args.length > 4) {\n                throw new Error(\"too many arguments\");\n            }\n\n            const components = call.args.map(arg => context.evaluate(arg)) as number[];\n\n            components.forEach((element, index) => {\n                if (typeof element !== \"number\") {\n                    throw new Error(\n                        `expected vector component at index ${index} to have type \"number\"`\n                    );\n                }\n            });\n\n            let result: THREE.Vector2 | THREE.Vector3 | THREE.Vector4 | undefined;\n\n            switch (components.length) {\n                case 2:\n                    result = new THREE.Vector2().fromArray(components);\n                    break;\n                case 3:\n                    result = new THREE.Vector3().fromArray(components);\n                    break;\n                case 4:\n                    result = new THREE.Vector4().fromArray(components);\n                    break;\n                default:\n                    throw new Error(\"too many arguments\");\n            }\n\n            if (call.args.every(arg => arg instanceof NumberLiteralExpr)) {\n                call._value = result;\n            }\n\n            return result;\n        }\n    },\n    vector2: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => isVector(context, call, \"vector2\")\n    },\n    vector3: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => isVector(context, call, \"vector3\")\n    },\n    vector4: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => isVector(context, call, \"vector4\")\n    },\n    \"to-vector2\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => toVector(context, call, \"vector2\")\n    },\n    \"to-vector3\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => toVector(context, call, \"vector3\")\n    },\n    \"to-vector4\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => toVector(context, call, \"vector4\")\n    }\n};\n\nexport const VectorOperators: OperatorDescriptorMap = operators;\nexport type VectorOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { EarthConstants, GeoCoordinates, webMercatorProjection } from \"@here/harp-geoutils\";\nimport { Math2D } from \"@here/harp-utils\";\nimport { Vector2, Vector3 } from \"three\";\n\n/**\n * A clipping edge.\n *\n * @remarks\n * Clip lines using the Sutherland-Hodgman algorithm.\n *\n * @internal\n */\nclass ClipEdge {\n    readonly p0: Vector2;\n    readonly p1: Vector2;\n\n    /**\n     * Creates a clipping edge.\n     *\n     * @param x1 - The x coordinate of the first point of this ClipEdge.\n     * @param y1 - The y coordinate of the first point of this ClipEdge.\n     * @param x2 - The x coordinate of the second point of this ClipEdge.\n     * @param y2 - The y coordinate of the second point of this ClipEdge.\n     * @param isInside - The function used to test points against this ClipEdge.\n     */\n    constructor(\n        x1: number,\n        y1: number,\n        x2: number,\n        y2: number,\n        private readonly isInside: (p: Vector2) => boolean\n    ) {\n        this.p0 = new Vector2(x1, y1);\n        this.p1 = new Vector2(x2, y2);\n    }\n\n    /**\n     * Tests if the given point is inside this clipping edge.\n     */\n    inside(point: Vector2): boolean {\n        return this.isInside(point);\n    }\n\n    /**\n     * Computes the intersection of a line and this clipping edge.\n     *\n     * @remarks\n     * {@link https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection\n     *    | line-line intersection}.\n     */\n    computeIntersection(a: Vector2, b: Vector2): Vector2 {\n        const result = new Vector2();\n        Math2D.intersectLines(\n            a.x,\n            a.y,\n            b.x,\n            b.y,\n            this.p0.x,\n            this.p0.y,\n            this.p1.x,\n            this.p1.y,\n            result\n        );\n        return result;\n    }\n\n    /**\n     * Clip the input line against this edge.\n     */\n    clipLine(lineString: Vector2[]): Vector2[][] {\n        const inputList = lineString;\n\n        const result: Vector2[][] = [];\n\n        lineString = [];\n        result.push(lineString);\n\n        const pushPoint = (point: Vector2) => {\n            if (lineString.length === 0 || !lineString[lineString.length - 1].equals(point)) {\n                lineString.push(point);\n            }\n        };\n\n        for (let i = 0; i < inputList.length; ++i) {\n            const currentPoint = inputList[i];\n            const prevPoint = i > 0 ? inputList[i - 1] : undefined;\n\n            if (this.inside(currentPoint)) {\n                if (prevPoint !== undefined && !this.inside(prevPoint)) {\n                    if (lineString.length > 0) {\n                        lineString = [];\n                        result.push(lineString);\n                    }\n                    pushPoint(this.computeIntersection(prevPoint, currentPoint));\n                }\n                pushPoint(currentPoint);\n            } else if (prevPoint !== undefined && this.inside(prevPoint)) {\n                pushPoint(this.computeIntersection(prevPoint, currentPoint));\n            }\n        }\n\n        if (result[result.length - 1].length === 0) {\n            result.length = result.length - 1;\n        }\n\n        return result;\n    }\n\n    /**\n     * Clip the input lines against this edge.\n     */\n    clipLines(lineStrings: Vector2[][]) {\n        const reuslt: Vector2[][] = [];\n        lineStrings.forEach(lineString => {\n            this.clipLine(lineString).forEach(clippedLine => {\n                reuslt.push(clippedLine);\n            });\n        });\n        return reuslt;\n    }\n}\n\n/**\n * Clip the input line against the given bounds.\n *\n * @param lineString - The line to clip.\n * @param minX - The minimum x coordinate.\n * @param minY - The minimum y coordinate.\n * @param maxX - The maxumum x coordinate.\n * @param maxY - The maxumum y coordinate.\n */\nexport function clipLineString(\n    lineString: Vector2[],\n    minX: number,\n    minY: number,\n    maxX: number,\n    maxY: number\n): Vector2[][] {\n    const clipEdge0 = new ClipEdge(minX, minY, minX, maxY, p => p.x > minX); // left\n    const clipEdge1 = new ClipEdge(minX, maxY, maxX, maxY, p => p.y < maxY); // bottom\n    const clipEdge2 = new ClipEdge(maxX, maxY, maxX, minY, p => p.x < maxX); // right\n    const clipEdge3 = new ClipEdge(maxX, minY, minX, minY, p => p.y > minY); // top\n\n    let lines = clipEdge0.clipLine(lineString);\n    lines = clipEdge1.clipLines(lines);\n    lines = clipEdge2.clipLines(lines);\n    lines = clipEdge3.clipLines(lines);\n\n    return lines;\n}\n\n/**\n * The result of wrapping a line string.\n */\ninterface WrappedLineString {\n    left: GeoCoordinates[][];\n    middle: GeoCoordinates[][];\n    right: GeoCoordinates[][];\n}\n\n/**\n * Helper function to wrap a line string projected in web mercator.\n *\n * @param multiLineString The input to wrap\n * @param edges The clipping edges used to wrap the input.\n * @param offset The x-offset used to displace the result\n *\n * @internal\n */\nfunction wrapMultiLineStringHelper(\n    multiLineString: Vector2[][],\n    edges: ClipEdge[],\n    offset: number\n): GeoCoordinates[][] | undefined {\n    for (const clip of edges) {\n        multiLineString = clip.clipLines(multiLineString);\n    }\n\n    const worldP = new Vector3();\n\n    const coordinates: GeoCoordinates[][] = [];\n\n    multiLineString.forEach(lineString => {\n        if (lineString.length === 0) {\n            return;\n        }\n\n        const coords = lineString.map(({ x, y }) => {\n            worldP.set(x, y, 0);\n            const geoPoint = webMercatorProjection.unprojectPoint(worldP);\n            geoPoint.longitude += offset;\n            return geoPoint;\n        });\n\n        coordinates.push(coords);\n    });\n\n    return coordinates.length > 0 ? coordinates : undefined;\n}\n\n/**\n * Wrap the given line string.\n *\n * @remarks\n * This function splits this input line string in three parts.\n *\n * The `left` member of the result contains the part of the line string with longitude less than `-180`.\n *\n * The `middle` member contains the part of the line string with longitude in the range `[-180, 180]`.\n *\n * The `right` member contains the part of the line string with longitude greater than `180`.\n *\n * @param coordinates The coordinates of the line string to wrap.\n */\nexport function wrapLineString(coordinates: GeoCoordinates[]): Partial<WrappedLineString> {\n    const worldP = new Vector3();\n\n    const lineString = coordinates.map(g => {\n        const { x, y } = webMercatorProjection.projectPoint(g, worldP);\n        return new Vector2(x, y);\n    });\n\n    const multiLineString = [lineString];\n\n    return {\n        left: wrapMultiLineStringHelper(multiLineString, WRAP_LEFT_CLIP_EDGES, 360),\n        middle: wrapMultiLineStringHelper(multiLineString, WRAP_MIDDLE_CLIP_EDGES, 0),\n        right: wrapMultiLineStringHelper(multiLineString, WRAP_RIGHT_CLIP_EDGES, -360)\n    };\n}\n\nconst ec = EarthConstants.EQUATORIAL_CIRCUMFERENCE;\nconst border = 0;\n\nconst WRAP_MIDDLE_CLIP_EDGES = [\n    new ClipEdge(0 - border, ec, 0 - border, 0, p => p.x > 0 - border),\n    new ClipEdge(ec + border, 0, ec + border, ec, p => p.x < ec + border)\n];\n\nconst WRAP_LEFT_CLIP_EDGES = [\n    new ClipEdge(-ec - border, ec, -ec - border, 0, p => p.x > -ec - border),\n    new ClipEdge(0 + border, 0, 0 + border, ec, p => p.x < 0 + border)\n];\n\nconst WRAP_RIGHT_CLIP_EDGES = [\n    new ClipEdge(ec - border, ec, ec - border, 0, p => p.x > ec - border),\n    new ClipEdge(ec * 2 + border, 0, ec * 2 + border, ec, p => p.x < ec * 2 + border)\n];\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector2 } from \"three\";\n\ninterface ClipInfo {\n    /**\n     * `true` if this vertex was clipped.\n     */\n    isClipped?: boolean;\n}\n\nexport type ClippedVertex = Vector2 & ClipInfo;\n\n/**\n * Abstract helper class used to implement the Sutherland-Hodgman clipping algorithm.\n *\n * @remarks\n * Concrete implementation of this class are used to clip a polygon\n * against one edge of a bounding box.\n *\n * @internal\n */\nexport abstract class ClippingEdge {\n    /**\n     * Tests if the given point is inside this clipping edge.\n     *\n     * @param point A point of the polygon.\n     * @param extent The extent of the bounding box.\n     */\n    abstract inside(point: Vector2, extent: number): boolean;\n\n    /**\n     * Computes the intersection of a line and this clipping edge.\n     *\n     * @remarks\n     * Specialization of {@link https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection\n     *    | line-line intersection}.\n     *\n     * @param a A point of the segment to clip.\n     * @param b A point of the segment to clip.\n     * @param extent The extent of the bounding box.\n     */\n    abstract computeIntersection(a: Vector2, b: Vector2, extent: number): ClippedVertex;\n\n    /**\n     * Clip the polygon against this clipping edge.\n     *\n     * @param polygon Clip the polygon against this edge.\n     * @param extent The extent of the bounding box.\n     *\n     * @return The clipped polygon.\n     */\n    clipPolygon(polygon: Vector2[], extent: number): Vector2[] {\n        const inputList = polygon;\n\n        polygon = [];\n\n        const pushPoint = (point: ClippedVertex) => {\n            const lastAddedPoint: ClippedVertex = polygon[polygon.length - 1];\n\n            if (\n                !lastAddedPoint?.equals(point) ||\n                (point.isClipped === true && !lastAddedPoint?.isClipped) ||\n                (!point.isClipped && lastAddedPoint?.isClipped === true)\n            ) {\n                polygon.push(point);\n            }\n        };\n\n        for (let i = 0; i < inputList.length; ++i) {\n            const currentPoint = inputList[i];\n            const prevPoint = inputList[(i + inputList.length - 1) % inputList.length];\n            if (this.inside(currentPoint, extent)) {\n                if (!this.inside(prevPoint, extent)) {\n                    const p = this.computeIntersection(prevPoint, currentPoint, extent);\n                    p.isClipped = true;\n                    pushPoint(p);\n                }\n                pushPoint(currentPoint);\n            } else if (this.inside(prevPoint, extent)) {\n                const p = this.computeIntersection(prevPoint, currentPoint, extent);\n                p.isClipped = true;\n                pushPoint(p);\n            }\n        }\n\n        return polygon;\n    }\n}\n\nclass TopClippingEdge extends ClippingEdge {\n    /** @override */\n    inside(point: Vector2): boolean {\n        return point.y >= 0;\n    }\n\n    /**\n     * Computes the intersection of a line and this clipping edge.\n     *\n     * @remarks\n     * Find the intersection point between the line defined by the points `a` and `b`\n     * and the edge defined by the points `(0, 0)` and `(0, extent)`.\n     *\n     * @override\n     *\n     */\n    computeIntersection(a: Vector2, b: Vector2): Vector2 {\n        const { x: x1, y: y1 } = a;\n        const { x: x2, y: y2 } = b;\n        const v: Vector2 = new Vector2((x1 * y2 - y1 * x2) / -(y1 - y2), 0).round();\n        return v;\n    }\n}\n\nclass RightClippingEdge extends ClippingEdge {\n    /**\n     * @override\n     *\n     * See: HARP-14633, this should potentially be changed to < as it was previously.\n     * However further investigation is needed to confirm this.\n     */\n    inside(point: Vector2, extent: number): boolean {\n        return point.x <= extent;\n    }\n\n    /**\n     * Computes the intersection of a line and this clipping edge.\n     *\n     * @remarks\n     * Find the intersection point between the line defined by the points `a` and `b`\n     * and the edge defined by the points `(extent, 0)` and `(extent, extent)`.\n     *\n     * @override\n     *\n     */\n    computeIntersection(a: Vector2, b: Vector2, extent: number): Vector2 {\n        const { x: x1, y: y1 } = a;\n        const { x: x2, y: y2 } = b;\n        const v: Vector2 = new Vector2(\n            extent,\n            (x1 * y2 - y1 * x2 - (y1 - y2) * -extent) / (x1 - x2)\n        ).round();\n        return v;\n    }\n}\n\nclass BottomClipEdge extends ClippingEdge {\n    /** @override */\n    inside(point: Vector2, extent: number): boolean {\n        return point.y <= extent;\n    }\n\n    /**\n     * Computes the intersection of a line and this clipping edge.\n     *\n     * @remarks\n     * Find the intersection point between the line defined by the points `a` and `b`\n     * and the edge defined by the points `(extent, extent)` and `(0, extent)`.\n     *\n     * @override\n     *\n     */\n    computeIntersection(a: Vector2, b: Vector2, extent: number): Vector2 {\n        const { x: x1, y: y1 } = a;\n        const { x: x2, y: y2 } = b;\n        const v: Vector2 = new Vector2(\n            (x1 * y2 - y1 * x2 - (x1 - x2) * extent) / -(y1 - y2),\n            extent\n        ).round();\n        return v;\n    }\n}\n\nclass LeftClippingEdge extends ClippingEdge {\n    /** @override */\n    inside(point: Vector2) {\n        return point.x >= 0;\n    }\n\n    /**\n     * Computes the intersection of a line and this clipping edge.\n     *\n     * @remarks\n     * Find the intersection point between the line defined by the points `a` and `b`\n     * and the edge defined by the points `(0, extent)` and `(0, 0)`.\n     *\n     * @override\n     *\n     */\n    computeIntersection(a: Vector2, b: Vector2): Vector2 {\n        const { x: x1, y: y1 } = a;\n        const { x: x2, y: y2 } = b;\n        const v: Vector2 = new Vector2(0, (x1 * y2 - y1 * x2) / (x1 - x2)).round();\n        return v;\n    }\n}\n\nconst clipEdges = [\n    new TopClippingEdge(),\n    new RightClippingEdge(),\n    new BottomClipEdge(),\n    new LeftClippingEdge()\n];\n\n/**\n * Clip the given polygon against a rectangle using the Sutherland-Hodgman algorithm.\n *\n * @remarks\n * The coordinates of the polygon must be integer numbers.\n *\n * @param polygon The vertices of the polygon to clip.\n * @param extent The extents of the rectangle to clip against.\n */\nexport function clipPolygon(polygon: Vector2[], extent: number): Vector2[] {\n    if (polygon.length === 0) {\n        return polygon;\n    }\n\n    if (!polygon[0].equals(polygon[polygon.length - 1])) {\n        // close the polygon if needed.\n        polygon = [...polygon, polygon[0]];\n    }\n\n    for (const clip of clipEdges) {\n        polygon = clip.clipPolygon(polygon, extent);\n    }\n\n    if (polygon.length < 3) {\n        return [];\n    }\n\n    return polygon;\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Box3Like, GeoBox, Projection, ProjectionType } from \"@here/harp-geoutils\";\nimport { assert } from \"@here/harp-utils\";\nimport { Vector3 } from \"three\";\n\nimport { SubdivisionModifier } from \"./SubdivisionModifier\";\n\nconst VERTEX_POSITION_CACHE = [new Vector3(), new Vector3()];\n\nexport enum SubdivisionMode {\n    /**\n     * Subdivide all edges\n     */\n    All,\n    /**\n     * Only subdivide horizontal and vertical edges\n     */\n    NoDiagonals\n}\n\n/**\n * The [[EdgeLengthGeometrySubdivisionModifier]] subdivides triangle mesh depending on\n * length of edges.\n */\nexport class EdgeLengthGeometrySubdivisionModifier extends SubdivisionModifier {\n    private readonly m_projectedBox: Box3Like;\n    private readonly m_maxLength: number;\n    private readonly m_maxLengthX: number;\n    private readonly m_maxLengthY: number;\n\n    /**\n     * Constructs a new [[EdgeLengthGeometrySubdivisionModifier]].\n     *\n     * @param subdivision - The subdivision factor\n     * @param geoBox - The geo bounding box of a tile\n     * @param subdivisionMode - Configures what edges to divide\n     * @param projection - The projection that defines the world space of this geometry.\n     */\n    constructor(\n        readonly subdivision: number,\n        readonly geoBox: GeoBox,\n        readonly subdivisionMode: SubdivisionMode = SubdivisionMode.All,\n        readonly projection: Projection\n    ) {\n        super();\n\n        assert(\n            projection.type === ProjectionType.Planar,\n            \"EdgeLengthGeometrySubdivisionModifier only supports planar projections\"\n        );\n\n        const northEast = projection.projectPoint(geoBox.northEast, VERTEX_POSITION_CACHE[0]);\n        const southWest = projection.projectPoint(geoBox.southWest, VERTEX_POSITION_CACHE[1]);\n        this.m_projectedBox = {\n            min: {\n                x: Math.min(northEast.x, southWest.x),\n                y: Math.min(northEast.y, southWest.y),\n                z: Math.min(northEast.z, southWest.z)\n            },\n            max: {\n                x: Math.max(northEast.x, southWest.x),\n                y: Math.max(northEast.y, southWest.y),\n                z: Math.max(northEast.z, southWest.z)\n            }\n        };\n        this.m_maxLengthX = (this.m_projectedBox.max.x - this.m_projectedBox.min.x) / subdivision;\n        this.m_maxLengthY = (this.m_projectedBox.max.y - this.m_projectedBox.min.y) / subdivision;\n\n        // Increase max length slightly to account for precision errors\n        if (this.subdivisionMode === SubdivisionMode.All) {\n            this.m_maxLengthX *= 1.1;\n            this.m_maxLengthY *= 1.1;\n        }\n        this.m_maxLength = Math.sqrt(\n            this.m_maxLengthX * this.m_maxLengthX + this.m_maxLengthY * this.m_maxLengthY\n        );\n    }\n\n    /**\n     * Return upper bound for length of diagonal edges\n     */\n    get maxLength() {\n        return this.m_maxLength;\n    }\n\n    /**\n     * Return upper bound for edge length in x direction\n     */\n    get maxLengthX() {\n        return this.m_maxLengthX;\n    }\n\n    /**\n     * Return upper bound for edge length in y direction\n     */\n    get maxLengthY() {\n        return this.m_maxLengthY;\n    }\n\n    /** @override */\n    protected shouldSplitTriangle(a: Vector3, b: Vector3, c: Vector3): number | undefined {\n        const shouldSplitAB = this.shouldSplitEdge(a, b);\n        const shouldSplitBC = this.shouldSplitEdge(b, c);\n        const shouldSplitCA = this.shouldSplitEdge(c, a);\n        const shouldSplit = shouldSplitAB || shouldSplitBC || shouldSplitCA;\n\n        if (!shouldSplit) {\n            return;\n        }\n\n        const ab = a.distanceTo(b);\n        const bc = b.distanceTo(c);\n        const ca = c.distanceTo(a);\n        const maxDistance = Math.max(\n            shouldSplitAB ? ab : 0,\n            shouldSplitBC ? bc : 0,\n            shouldSplitCA ? ca : 0\n        );\n        if (ab === maxDistance) {\n            return 0;\n        } else if (bc === maxDistance) {\n            return 1;\n        } else if (ca === maxDistance) {\n            return 2;\n        }\n\n        throw new Error(\"Could not split triangle.\");\n    }\n\n    private shouldSplitEdge(a: Vector3, b: Vector3): boolean {\n        switch (this.subdivisionMode) {\n            case SubdivisionMode.All:\n                return (\n                    (a.y === b.y && Math.abs(a.x - b.x) > this.m_maxLengthX) ||\n                    (a.x === b.x && Math.abs(a.y - b.y) > this.m_maxLengthY) ||\n                    a.distanceTo(b) > this.m_maxLength\n                );\n            case SubdivisionMode.NoDiagonals:\n                return (\n                    (a.y === b.y && Math.abs(a.x - b.x) > this.m_maxLengthX) ||\n                    (a.x === b.x && Math.abs(a.y - b.y) > this.m_maxLengthY)\n                );\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Projection, sphereProjection } from \"@here/harp-geoutils\";\nimport { Vector3 } from \"three\";\n\nimport { SubdivisionModifier } from \"./SubdivisionModifier\";\n\nconst VERTEX_POSITION_CACHE = [new Vector3(), new Vector3(), new Vector3()];\n\n/**\n * The [[SphericalGeometrySubdivisionModifier]] subdivides triangle mesh geometries positioned\n * on the surface of a sphere centered at `(0, 0, 0)`.\n */\nexport class SphericalGeometrySubdivisionModifier extends SubdivisionModifier {\n    /**\n     * Constructs a new [[SphericalGeometrySubdivisionModifier]].\n     *\n     * @param angle - The maximum angle in radians between two vertices and the origin.\n     * @param projection - The projection that defines the world space of this geometry.\n     */\n    constructor(readonly angle: number, readonly projection: Projection = sphereProjection) {\n        super();\n    }\n\n    /** @override */\n    protected shouldSplitTriangle(a: Vector3, b: Vector3, c: Vector3): number | undefined {\n        const aa = sphereProjection.reprojectPoint(this.projection, a, VERTEX_POSITION_CACHE[0]);\n        const bb = sphereProjection.reprojectPoint(this.projection, b, VERTEX_POSITION_CACHE[1]);\n        const cc = sphereProjection.reprojectPoint(this.projection, c, VERTEX_POSITION_CACHE[2]);\n\n        const alpha = aa.angleTo(bb);\n        const beta = bb.angleTo(cc);\n        const gamma = cc.angleTo(aa);\n\n        // find the maximum angle\n        const m = Math.max(alpha, Math.max(beta, gamma));\n\n        // split the triangle if needed.\n        if (m < this.angle) {\n            return undefined;\n        }\n\n        if (m === alpha) {\n            return 0;\n        } else if (m === beta) {\n            return 1;\n        } else if (m === gamma) {\n            return 2;\n        }\n\n        throw new Error(\"failed to split triangle\");\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { BufferAttribute, BufferGeometry, Vector3 } from \"three\";\n\nconst tmpVectorA = new Vector3();\nconst tmpVectorB = new Vector3();\nconst tmpVectorC = new Vector3();\n\n/**\n * The [[SubdivisionModifier]] subdivides triangle mesh geometries.\n */\nexport abstract class SubdivisionModifier {\n    /**\n     * Constructs a new [[SubdivisionModifier]].\n     */\n    constructor() {\n        // nothing to do\n    }\n\n    /**\n     * Subdivides the faces of the given [[THREE.BufferGeometry]].\n     *\n     * This method modifies (in-place) the vertices and the faces of the geometry.\n     * Please note that only the vertex position and their UV coordinates are subdivided.\n     * Normals, vertex colors and other attributes are left unmodified.\n     *\n     * @param geometry - The [[THREE.BufferGeometry]] to subdivide.\n     */\n    modify(geometry: BufferGeometry): BufferGeometry {\n        const positionAttr = geometry.getAttribute(\"position\") as BufferAttribute;\n        const position = Array.from(positionAttr.array);\n\n        const uvAttr = geometry.getAttribute(\"uv\") as BufferAttribute;\n        const uv = uvAttr !== undefined ? Array.from(uvAttr.array) : undefined;\n\n        const edgeAttr = geometry.getAttribute(\"edge\") as BufferAttribute;\n        const edge = edgeAttr !== undefined ? Array.from(edgeAttr.array) : undefined;\n\n        const wallAttr = geometry.getAttribute(\"wall\") as BufferAttribute;\n        const wall = wallAttr !== undefined ? Array.from(wallAttr.array) : undefined;\n\n        const indexAttr = geometry.getIndex() as BufferAttribute;\n        const indices = Array.from(indexAttr.array);\n\n        // A cache containing the indices of the vertices added\n        // when subdiving the faces of the geometry.\n        const cache = new Map<string, number>();\n\n        /**\n         * Returns the index of the vertex positioned in the middle of the given vertices.\n         */\n        function middleVertex(i: number, j: number): number {\n            // Build a unique `key` for the pair of indices `(i, j)`.\n            const key = `${Math.min(i, j)}_${Math.max(i, j)}`;\n\n            const h = cache.get(key);\n\n            if (h !== undefined) {\n                // Nothing to do, a vertex in the middle of (i, j) was already created.\n                return h;\n            }\n\n            // The position of the new vertex.\n            tmpVectorA.set(position[i * 3], position[i * 3 + 1], position[i * 3 + 2]);\n            tmpVectorB.set(position[j * 3], position[j * 3 + 1], position[j * 3 + 2]);\n            tmpVectorC.lerpVectors(tmpVectorA, tmpVectorB, 0.5);\n\n            // The index of the new vertex.\n            const index = position.length / 3;\n            position.push(...tmpVectorC.toArray());\n            // Cache the position of the new vertex.\n            cache.set(key, index);\n\n            // The uvs of the new vertex.\n            if (uv !== undefined) {\n                tmpVectorA.set(uv[i * 2], uv[i * 2 + 1], 0);\n                tmpVectorB.set(uv[j * 2], uv[j * 2 + 1], 0);\n                tmpVectorC.lerpVectors(tmpVectorA, tmpVectorB, 0.5);\n                uv.push(tmpVectorC.x, tmpVectorC.y);\n            }\n\n            // The edge and wall attributes of the new vertex.\n            // If a new vertex has been introduced between i and j, connect the elements\n            // accordingly.\n            if (edge !== undefined) {\n                if (edge[i] === j) {\n                    edge.push(j);\n                    edge[i] = index;\n                } else if (edge[j] === i) {\n                    edge.push(i);\n                    edge[j] = index;\n                } else {\n                    edge.push(-1);\n                }\n            }\n            if (wall !== undefined) {\n                if (wall[i] === j) {\n                    wall.push(j);\n                    wall[i] = index;\n                } else if (wall[j] === i) {\n                    wall.push(i);\n                    wall[j] = index;\n                } else {\n                    wall.push(-1);\n                }\n            }\n\n            return index;\n        }\n\n        const newIndices = [];\n        while (indices.length >= 3) {\n            const v0 = indices.shift()!;\n            const v1 = indices.shift()!;\n            const v2 = indices.shift()!;\n\n            tmpVectorA.set(position[v0 * 3], position[v0 * 3 + 1], position[v0 * 3 + 2]);\n            tmpVectorB.set(position[v1 * 3], position[v1 * 3 + 1], position[v1 * 3 + 2]);\n            tmpVectorC.set(position[v2 * 3], position[v2 * 3 + 1], position[v2 * 3 + 2]);\n\n            const edgeToSplit = this.shouldSplitTriangle(tmpVectorA, tmpVectorB, tmpVectorC);\n\n            switch (edgeToSplit) {\n                case 0: {\n                    const v3 = middleVertex(v0, v1);\n                    indices.push(v0, v3, v2, v3, v1, v2);\n                    break;\n                }\n\n                case 1: {\n                    const v3 = middleVertex(v1, v2);\n                    indices.push(v0, v1, v3, v0, v3, v2);\n                    break;\n                }\n\n                case 2: {\n                    const v3 = middleVertex(v2, v0);\n                    indices.push(v0, v1, v3, v3, v1, v2);\n                    break;\n                }\n\n                case undefined: {\n                    newIndices.push(v0, v1, v2);\n                    break;\n                }\n\n                default:\n                    throw new Error(\"failed to subdivide the given geometry\");\n            }\n        }\n\n        positionAttr.array =\n            positionAttr.array instanceof Float32Array\n                ? new Float32Array(position)\n                : new Float64Array(position);\n        positionAttr.count = position.length / positionAttr.itemSize;\n        positionAttr.needsUpdate = true;\n\n        geometry.setIndex(newIndices);\n\n        if (uv !== undefined) {\n            uvAttr.array = new Float32Array(uv);\n            uvAttr.count = uv.length / uvAttr.itemSize;\n            uvAttr.needsUpdate = true;\n        }\n\n        if (edge !== undefined) {\n            edgeAttr.array = new Float32Array(edge);\n            edgeAttr.count = edge.length / edgeAttr.itemSize;\n            edgeAttr.needsUpdate = true;\n        }\n\n        return geometry;\n    }\n\n    /**\n     * Returns if the given triangle should be subdivide.\n     *\n     * Implementations of this function should return the index of\n     * the edge of the triangle to split (0, 1, or 2) or undefined if\n     * the triangle doesn't need to be subdivided.\n     *\n     * @param a - The position of the first vertex of the triangle.\n     * @param b - The position of the second vertex of the triangle.\n     * @param c - The position of the third vertex of the triangle.\n     */\n    protected abstract shouldSplitTriangle(a: Vector3, b: Vector3, c: Vector3): number | undefined;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport * as THREE from \"three\";\n\nimport { GeoBoxExtentLike } from \"./GeoBoxExtentLike\";\nimport { GeoCoordinates, MAX_LONGITUDE } from \"./GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"./GeoCoordinatesLike\";\n\n/**\n * `GeoBox` is used to represent a bounding box in geo coordinates.\n */\nexport class GeoBox implements GeoBoxExtentLike {\n    /**\n     * Returns a `GeoBox` with the given geo coordinates.\n     *\n     * @param southWest - The south west position in geo coordinates.\n     * @param northEast - The north east position in geo coordinates.\n     */\n    static fromCoordinates(southWest: GeoCoordinates, northEast: GeoCoordinates): GeoBox {\n        return new GeoBox(southWest, northEast);\n    }\n\n    /**\n     * Returns a `GeoBox` with the given center and dimensions.\n     *\n     * @param center - The center position of geo box.\n     * @param extent - Box latitude and logitude span\n     */\n    static fromCenterAndExtents(center: GeoCoordinates, extent: GeoBoxExtentLike): GeoBox {\n        return new GeoBox(\n            new GeoCoordinates(\n                center.latitude - extent.latitudeSpan / 2,\n                center.longitude - extent.longitudeSpan / 2\n            ),\n            new GeoCoordinates(\n                center.latitude + extent.latitudeSpan / 2,\n                center.longitude + extent.longitudeSpan / 2\n            )\n        );\n    }\n\n    /**\n     * Constructs a new `GeoBox` with the given geo coordinates.\n     *\n     * @param southWest - The south west position in geo coordinates.\n     * @param northEast - The north east position in geo coordinates.\n     */\n    constructor(readonly southWest: GeoCoordinates, readonly northEast: GeoCoordinates) {\n        if (this.west > this.east) {\n            this.northEast.longitude += 360;\n        }\n    }\n\n    /**\n     * Returns the minimum altitude or `undefined`.\n     */\n    get minAltitude(): number | undefined {\n        if (this.southWest.altitude === undefined || this.northEast.altitude === undefined) {\n            return undefined;\n        }\n        return Math.min(this.southWest.altitude, this.northEast.altitude);\n    }\n\n    /**\n     * Returns the maximum altitude or `undefined`.\n     */\n    get maxAltitude(): number | undefined {\n        if (this.southWest.altitude === undefined || this.northEast.altitude === undefined) {\n            return undefined;\n        }\n        return Math.max(this.southWest.altitude, this.northEast.altitude);\n    }\n\n    /**\n     * Returns the south latitude in degrees of this `GeoBox`.\n     */\n    get south(): number {\n        return this.southWest.latitude;\n    }\n\n    /**\n     * Returns the north altitude in degrees of this `GeoBox`.\n     */\n    get north(): number {\n        return this.northEast.latitude;\n    }\n\n    /**\n     * Returns the west longitude in degrees of this `GeoBox`.\n     */\n    get west(): number {\n        return this.southWest.longitude;\n    }\n\n    /**\n     * Returns the east longitude in degrees of this `GeoBox`.\n     */\n    get east(): number {\n        return this.northEast.longitude;\n    }\n\n    /**\n     * Returns the center of this `GeoBox`.\n     */\n    get center(): GeoCoordinates {\n        const latitude = (this.south + this.north) * 0.5;\n        const { west, east } = this;\n        const { minAltitude, altitudeSpan } = this;\n\n        let altitude: number | undefined;\n\n        if (minAltitude !== undefined && altitudeSpan !== undefined) {\n            altitude = minAltitude + altitudeSpan * 0.5;\n        }\n\n        if (west <= east) {\n            return new GeoCoordinates(latitude, (west + east) * 0.5, altitude);\n        }\n\n        let longitude = (360 + east + west) * 0.5;\n\n        if (longitude > 360) {\n            longitude -= 360;\n        }\n\n        return new GeoCoordinates(latitude, longitude, altitude);\n    }\n\n    /**\n     * Returns the latitude span in radians.\n     */\n    get latitudeSpanInRadians(): number {\n        return THREE.MathUtils.degToRad(this.latitudeSpan);\n    }\n\n    /**\n     * Returns the longitude span in radians.\n     */\n    get longitudeSpanInRadians(): number {\n        return THREE.MathUtils.degToRad(this.longitudeSpan);\n    }\n\n    /**\n     * Returns the latitude span in degrees.\n     */\n    get latitudeSpan(): number {\n        return this.north - this.south;\n    }\n\n    get altitudeSpan(): number | undefined {\n        if (this.maxAltitude === undefined || this.minAltitude === undefined) {\n            return undefined;\n        }\n        return this.maxAltitude - this.minAltitude;\n    }\n\n    /**\n     * Returns the longitude span in degrees.\n     */\n    get longitudeSpan(): number {\n        let width = this.northEast.longitude - this.southWest.longitude;\n\n        if (width < 0) {\n            width += 360;\n        }\n\n        return width;\n    }\n\n    /**\n     * Returns the latitude span in degrees.\n     * @deprecated Use [[latitudeSpan]] instead.\n     */\n    get latitudeSpanInDegrees(): number {\n        return this.latitudeSpan;\n    }\n\n    /**\n     * Returns the longitude span in degrees.\n     * @deprecated Use [[longitudeSpan]] instead.\n     */\n    get longitudeSpanInDegrees(): number {\n        return this.longitudeSpan;\n    }\n\n    /**\n     * Returns `true` if the given geo coordinates are contained in this `GeoBox`.\n     *\n     * @param point - The geo coordinates.\n     */\n    contains(point: GeoCoordinates): boolean {\n        if (\n            point.altitude === undefined ||\n            this.minAltitude === undefined ||\n            this.maxAltitude === undefined\n        ) {\n            return this.containsHelper(point);\n        }\n\n        const isFlat = this.minAltitude === this.maxAltitude;\n        const isSameAltitude = this.minAltitude === point.altitude;\n        const isWithinAltitudeRange =\n            this.minAltitude <= point.altitude && this.maxAltitude > point.altitude;\n\n        // If box is flat, we should check the altitude and containment,\n        // otherwise we should check also altitude difference where we consider\n        // point to be inside if alt is from [m_minAltitude, m_maxAltitude) range!\n        if (isFlat ? isSameAltitude : isWithinAltitudeRange) {\n            return this.containsHelper(point);\n        }\n\n        return false;\n    }\n\n    /**\n     * Clones this `GeoBox` instance.\n     */\n    clone(): GeoBox {\n        return new GeoBox(this.southWest.clone(), this.northEast.clone());\n    }\n\n    /**\n     * Update the bounding box by considering a given point.\n     *\n     * @param point - The point that may expand the bounding box.\n     */\n    growToContain(point: GeoCoordinatesLike) {\n        this.southWest.latitude = Math.min(this.southWest.latitude, point.latitude);\n        this.southWest.longitude = Math.min(this.southWest.longitude, point.longitude);\n        this.southWest.altitude =\n            this.southWest.altitude !== undefined && point.altitude !== undefined\n                ? Math.min(this.southWest.altitude, point.altitude)\n                : this.southWest.altitude !== undefined\n                ? this.southWest.altitude\n                : point.altitude !== undefined\n                ? point.altitude\n                : undefined;\n\n        this.northEast.latitude = Math.max(this.northEast.latitude, point.latitude);\n        this.northEast.longitude = Math.max(this.northEast.longitude, point.longitude);\n        this.northEast.altitude =\n            this.northEast.altitude !== undefined && point.altitude !== undefined\n                ? Math.max(this.northEast.altitude, point.altitude)\n                : this.northEast.altitude !== undefined\n                ? this.northEast.altitude\n                : point.altitude !== undefined\n                ? point.altitude\n                : undefined;\n    }\n\n    private containsHelper(point: GeoCoordinates): boolean {\n        if (point.latitude < this.southWest.latitude || point.latitude >= this.northEast.latitude) {\n            return false;\n        }\n\n        const { west, east } = this;\n\n        let longitude = point.longitude;\n        if (east > MAX_LONGITUDE) {\n            while (longitude < west) {\n                longitude = longitude + 360;\n            }\n        }\n\n        if (longitude > east) {\n            while (longitude > west + 360) {\n                longitude = longitude - 360;\n            }\n        }\n\n        return longitude >= west && longitude < east;\n    }\n}\n","/*\n * Copyright (C) 2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Represents an object that carry {@link GeoBox} extents like interface.\n */\nexport interface GeoBoxExtentLike {\n    /**\n     * Latitude span in degrees.\n     */\n    readonly latitudeSpan: number;\n\n    /**\n     * Longitude span in degrees\n     */\n    readonly longitudeSpan: number;\n}\n\n/**\n * Type guard to assert that `object` conforms to {@link GeoBoxExtentLike} interface.\n */\nexport function isGeoBoxExtentLike(obj: any): obj is GeoBoxExtentLike {\n    return (\n        obj &&\n        typeof obj === \"object\" &&\n        typeof obj.latitudeSpan === \"number\" &&\n        typeof obj.longitudeSpan === \"number\"\n    );\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { GeoCoordinatesLike, isGeoCoordinatesLike } from \"./GeoCoordinatesLike\";\nimport { GeoPointLike, isGeoPointLike } from \"./GeoPointLike\";\nimport { isLatLngLike, LatLngLike } from \"./LatLngLike\";\n\n/**\n * Represents an object in different geo coordinate formats\n */\nexport type GeoCoordLike = GeoPointLike | GeoCoordinatesLike | LatLngLike;\n\nexport function geoCoordLikeToGeoCoordinatesLike(coord: GeoCoordLike): GeoCoordinatesLike {\n    return isGeoCoordinatesLike(coord)\n        ? coord\n        : isLatLngLike(coord)\n        ? { latitude: coord.lat, longitude: coord.lng }\n        : { latitude: coord[1], longitude: coord[0] };\n}\n\nexport function geoCoordLikeToGeoPointLike(coord: GeoCoordLike): GeoPointLike {\n    return isGeoPointLike(coord)\n        ? coord\n        : isLatLngLike(coord)\n        ? [coord.lng, coord.lat]\n        : [coord.longitude, coord.latitude];\n}\n\nexport function isGeoCoordLike(object: any): boolean {\n    return isGeoCoordinatesLike(object) || isLatLngLike(object) || !isGeoPointLike(object);\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport * as THREE from \"three\";\n\nimport { GeoCoordinatesLike, isGeoCoordinatesLike } from \"./GeoCoordinatesLike\";\nimport { GeoCoordLike } from \"./GeoCoordLike\";\nimport { GeoPointLike, isGeoPointLike } from \"./GeoPointLike\";\nimport { isLatLngLike, LatLngLike } from \"./LatLngLike\";\n\nexport const MAX_LATITUDE = 90;\nexport const MIN_LATITUDE = -90;\nexport const MAX_LONGITUDE = 180;\nexport const MIN_LONGITUDE = -180;\n\nconst tmpV0 = new THREE.Vector3();\nconst tmpV1 = new THREE.Vector3();\n\n/**\n * Compute the modulo.\n *\n * @internal\n */\nfunction mod(dividend: number, divisor: number): number {\n    const modulo = dividend % divisor;\n    const modulo_sign = modulo < 0;\n    const divisor_sign = divisor < 0;\n    return modulo_sign === divisor_sign ? modulo : modulo + divisor;\n}\n\n/**\n * `GeoCoordinates` is used to represent geo positions.\n */\nexport class GeoCoordinates implements GeoCoordinatesLike {\n    /**\n     * Returns a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude - Latitude in degrees.\n     * @param longitude - Longitude in degrees.\n     * @param altitude - Altitude in meters.\n     */\n    static fromDegrees(latitude: number, longitude: number, altitude?: number): GeoCoordinates {\n        return new GeoCoordinates(latitude, longitude, altitude);\n    }\n\n    /**\n     * Returns a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude - Latitude in radians.\n     * @param longitude - Longitude in radians.\n     * @param altitude - Altitude in meters.\n     */\n    static fromRadians(latitude: number, longitude: number, altitude?: number): GeoCoordinates {\n        return new GeoCoordinates(\n            THREE.MathUtils.radToDeg(latitude),\n            THREE.MathUtils.radToDeg(longitude),\n            altitude\n        );\n    }\n\n    /**\n     * Creates a {@link GeoCoordinates} from a {@link LatLngLike} literal.\n     * ```typescript\n     * const center = { lat: 53.3, lng: 13.4 };\n     * mapView.geoCenter = GeoCoordinates.fromLatLng(center);\n     * ```\n     * @param latLng - A {@link LatLngLike} object literal.\n     */\n    static fromLatLng(latLng: LatLngLike) {\n        return new GeoCoordinates(latLng.lat, latLng.lng);\n    }\n\n    /**\n     * Creates a {@link GeoCoordinates} from a [[GeoPointLike]] tuple.\n     *\n     * Example:\n     * ```typescript\n     * mapView.geoCenter = GeoCoordinates.fromGeoPoint([longitude, latitude]);\n     *\n     * let geoCoords: number[] = ...;\n     *\n     * if (isGeoPointLike(geoCoords)) {\n     *     const p = GeoCoordinates.fromGeoPoint(geoCoords);\n     * }\n     * ```\n     * @param geoPoint - An [[Array]] of at least two elements following the order\n     * longitude, latitude, altitude.\n     */\n    static fromGeoPoint(geoPoint: GeoPointLike): GeoCoordinates {\n        return new GeoCoordinates(geoPoint[1], geoPoint[0], geoPoint[2]);\n    }\n\n    /**\n     * Creates a {@link GeoCoordinates} from different types of geo coordinate objects.\n     *\n     * Example:\n     * ```typescript\n     * const fromGeoPointLike = GeoCoordinates.fromObject([longitude, latitude]);\n     * const fromGeoCoordinateLike = GeoCoordinates.fromObject({ longitude, latitude });\n     * const fromGeoCoordinate = GeoCoordinates.fromObject(new GeoCoordinates(latitude, longitude));\n     * const fromLatLngLike = GeoCoordinates.fromObject({ lat: latitude , lng: longitude });\n     * ```\n     *\n     * @param geoPoint - Either [[GeoPointLike]], {@link GeoCoordinatesLike}\n     * or {@link LatLngLike} object literal.\n     */\n    static fromObject(geoPoint: GeoCoordLike): GeoCoordinates {\n        if (isGeoPointLike(geoPoint)) {\n            return GeoCoordinates.fromGeoPoint(geoPoint);\n        } else if (isGeoCoordinatesLike(geoPoint)) {\n            return GeoCoordinates.fromDegrees(\n                geoPoint.latitude,\n                geoPoint.longitude,\n                geoPoint.altitude\n            );\n        } else if (isLatLngLike(geoPoint)) {\n            return GeoCoordinates.fromDegrees(geoPoint.lat, geoPoint.lng);\n        }\n\n        throw new Error(\"Invalid input coordinate format.\");\n    }\n\n    /**\n     * Returns a `GeoCoordinates` resulting from the linear interpolation of other two.\n     * @param geoCoords0 - One of the `GeoCoordinates` used for interpolation.\n     * @param geoCoords1 - The other `GeoCoordinates` used for interpolation.\n     * @param factor - Interpolation factor. If `0` result will be equal to `geoCoords0`, if `1`\n     * it'll be equal to `geoCoords1`.\n     * @param wrap - If `true`, interpolation will be done across the antimeridian, otherwise it's\n     * done across the Greenwich meridian. Supported only if longitude span is less than 360 deg.\n     * @default false\n     * @param normalize - If `true`, interpolation result will be normalized. @default false\n     */\n    static lerp(\n        geoCoords0: GeoCoordinates,\n        geoCoords1: GeoCoordinates,\n        factor: number,\n        wrap: boolean = false,\n        normalize: boolean = false\n    ): GeoCoordinates {\n        if (wrap) {\n            if (geoCoords0.lng < geoCoords1.lng) {\n                const geoCoordsEnd = geoCoords0.clone();\n                geoCoordsEnd.longitude += 360;\n                return this.lerp(geoCoords1, geoCoordsEnd, 1 - factor);\n            } else {\n                const geoCoordsEnd = geoCoords1.clone();\n                geoCoordsEnd.longitude += 360;\n                return this.lerp(geoCoords0, geoCoordsEnd, factor);\n            }\n        }\n\n        const v0 = tmpV0.set(geoCoords0.lat, geoCoords0.lng, geoCoords0.altitude ?? 0);\n        const v1 = tmpV1.set(geoCoords1.lat, geoCoords1.lng, geoCoords1.altitude ?? 0);\n        v0.lerp(v1, factor);\n        const result = new GeoCoordinates(v0.x, v0.y, v0.z);\n\n        return normalize ? result.normalized() : result;\n    }\n\n    /**\n     * Creates a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude - Latitude in degrees.\n     * @param longitude - Longitude in degrees.\n     * @param altitude - Altitude in meters.\n     */\n    constructor(public latitude: number, public longitude: number, public altitude?: number) {}\n\n    /**\n     * Returns the latitude in radians.\n     */\n    get latitudeInRadians(): number {\n        return THREE.MathUtils.degToRad(this.latitude);\n    }\n\n    /**\n     * Returns the longitude in radians.\n     */\n    get longitudeInRadians(): number {\n        return THREE.MathUtils.degToRad(this.longitude);\n    }\n\n    /**\n     * Returns the latitude in degrees.\n     * @deprecated Use the [[latitude]] property instead.\n     */\n    get latitudeInDegrees(): number {\n        return this.latitude;\n    } // compat api\n\n    /**\n     * Returns the longitude in degrees.\n     * @deprecated Use the [[longitude]] property instead.\n     */\n    get longitudeInDegrees(): number {\n        return this.longitude;\n    } // compat api\n\n    /**\n     * The latitude in the degrees.\n     */\n    get lat() {\n        return this.latitude;\n    }\n\n    /**\n     * The longitude in the degrees.\n     */\n    get lng() {\n        return this.longitude;\n    }\n\n    /**\n     * Returns `true` if this `GeoCoordinates` is valid; returns `false` otherwise.\n     */\n    isValid(): boolean {\n        return !isNaN(this.latitude) && !isNaN(this.longitude);\n    }\n\n    /**\n     * Returns the normalized `GeoCoordinates`.\n     */\n    normalized(): GeoCoordinates {\n        let { latitude, longitude } = this;\n        if (isNaN(latitude) || isNaN(longitude)) {\n            return this;\n        }\n        if (longitude < -180 || longitude > 180) {\n            longitude = mod(longitude + 180, 360) - 180;\n        }\n        latitude = THREE.MathUtils.clamp(latitude, -90, 90);\n        return new GeoCoordinates(latitude, longitude, this.altitude);\n    }\n\n    /**\n     * Returns `true` if this `GeoCoordinates` is equal to the other.\n     *\n     * @param other - GeoCoordinatesLike to compare to.\n     */\n    equals(other: GeoCoordinatesLike): boolean {\n        return (\n            this.latitude === other.latitude &&\n            this.longitude === other.longitude &&\n            this.altitude === other.altitude\n        );\n    }\n\n    /**\n     * Copy values from the other.\n     *\n     * @param other - GeoCoordinatesLike to copy all values from.\n     */\n    copy(other: GeoCoordinatesLike): GeoCoordinates {\n        this.latitude = other.latitude;\n        this.longitude = other.longitude;\n        this.altitude = other.altitude;\n        return this;\n    }\n\n    /**\n     * Clones this `GeoCoordinates`.\n     */\n    clone(): GeoCoordinates {\n        return new GeoCoordinates(this.latitude, this.longitude, this.altitude);\n    }\n\n    /**\n     * Returns this {@link GeoCoordinates} as {@link LatLngLike} literal.\n     */\n    toLatLng(): LatLngLike {\n        return { lat: this.latitude, lng: this.longitude };\n    }\n\n    /**\n     * Converts this {@link GeoCoordinates} to a [[GeoPointLike]].\n     */\n    toGeoPoint(): GeoPointLike {\n        return this.altitude !== undefined\n            ? [this.longitude, this.latitude, this.altitude]\n            : [this.longitude, this.latitude];\n    }\n\n    /**\n     * Returns the minimum longitude span from this `GeoCoordinates` to another.\n     *\n     * @param other - The other GeoCoordinatesLike defining the longitude span.\n     */\n    minLongitudeSpanTo(other: GeoCoordinatesLike): number {\n        const minLongitude = Math.min(this.longitude, other.longitude);\n        const maxLongitude = Math.max(this.longitude, other.longitude);\n\n        return Math.min(maxLongitude - minLongitude, 360 + minLongitude - maxLongitude);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Represents an object with `GeoCoordinates` like interface.\n */\nexport interface GeoCoordinatesLike {\n    /** The latitude in degrees. */\n    latitude: number;\n\n    /** The longitude in degrees. */\n    longitude: number;\n\n    /** The optional altitude in meters. */\n    altitude?: number;\n}\n\n/**\n * Type guard to assert that `object` conforms to {@link GeoCoordinatesLike} data interface.\n */\nexport function isGeoCoordinatesLike(object: any): object is GeoCoordinatesLike {\n    return (\n        object &&\n        typeof object.latitude === \"number\" &&\n        typeof object.longitude === \"number\" &&\n        (typeof object.altitude === \"number\" || typeof object.altitude === \"undefined\")\n    );\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * An [[Array]] following the order longitude, latitude, altitude.\n */\nexport type GeoPointLike = [number, number, number?];\n\n/**\n * Type guard to assert that `object` conforms to [[GeoPointLike]] interface.\n */\nexport function isGeoPointLike(geoPoint: any): geoPoint is GeoPointLike {\n    if (Array.isArray(geoPoint)) {\n        const [longitude, latitude, altitude] = geoPoint;\n        return (\n            typeof longitude === \"number\" &&\n            typeof latitude === \"number\" &&\n            (altitude === undefined || typeof altitude === \"number\")\n        );\n    }\n    return false;\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Vector2 } from \"three\";\n\nimport { GeoBox } from \"./GeoBox\";\nimport { GeoCoordinates, MAX_LATITUDE, MIN_LATITUDE } from \"./GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"./GeoCoordinatesLike\";\nimport { GeoCoordLike, geoCoordLikeToGeoCoordinatesLike } from \"./GeoCoordLike\";\nimport { GeoPolygonLike } from \"./GeoPolygonLike\";\n\nfunction computeLonSpanAcrossGreewich(lonA: number, lonB: number) {\n    return Math.max(lonA, lonB) - Math.min(lonA, lonB);\n}\n\nfunction isLeftToRightAntimeridianCrossing(lonStart: number, lonEnd: number) {\n    return lonStart > 0 && lonEnd < 0 && computeLonSpanAcrossGreewich(lonStart, lonEnd) > 180;\n}\n\nfunction isRightToLeftAntimeridianCrossing(lonStart: number, lonEnd: number) {\n    return isLeftToRightAntimeridianCrossing(lonEnd, lonStart);\n}\n\nexport function isAntimeridianCrossing(lonStart: number, lonEnd: number) {\n    return (\n        Math.sign(lonStart) === -Math.sign(lonEnd) &&\n        computeLonSpanAcrossGreewich(lonStart, lonEnd) > 180\n    );\n}\n\ntype MinThreeItemsArray<T> = [T, T, T, ...T[]];\n\nexport type GeoPolygonCoordinates = MinThreeItemsArray<\n    GeoCoordinatesLike | GeoCoordinates | GeoCoordLike\n>;\n\n/**\n * A GeoPolygon in 2D Space (altitudes will be ignored).\n * Coordinates are expected in counter-clockwise order, for convex polygons a sorting is\n * available.\n * Clockwise ordered or selfintersecting Polygons might lead to no or unexpected results.\n *\n * @beta @internal\n */\nexport class GeoPolygon implements GeoPolygonLike {\n    private readonly m_coordinates: MinThreeItemsArray<GeoCoordinatesLike>;\n\n    /**\n     * Creates a GeoPolygon instance\n     *\n     * @param coordinates An array of GeoCoordinates acting as the Vertices of the Polygon.\n     * @param needsSort  If `true` it will sort the coordinates in ccw order, this will only\n     *  result correctly for convex polygons @default false\n     * @param needsWrapping  If `true` it will wrap around coordinates crossing the antemeridian.\n     * Only supported for polygons with sides that don't span more than 180 degrees longitude.\n     * @default false\n     */\n    constructor(\n        coordinates: GeoPolygonCoordinates,\n        needsSort: boolean = false,\n        needsWrapping: boolean = false\n    ) {\n        this.m_coordinates = coordinates.map(coord => {\n            return geoCoordLikeToGeoCoordinatesLike(coord);\n        }) as MinThreeItemsArray<GeoCoordinatesLike>;\n        if (needsSort) {\n            this.sortCCW();\n        }\n        if (needsWrapping) {\n            this.wrapCoordinatesAround();\n        }\n    }\n\n    get coordinates(): MinThreeItemsArray<GeoCoordinatesLike> {\n        return this.m_coordinates;\n    }\n\n    /**\n     * Gets a BoundingBox for the Polygon\n     *\n     * Might have unexpected results for twisted or concave Polygons\n     */\n    getGeoBoundingBox(): GeoBox {\n        const centroid = this.getCentroid();\n        if (centroid === undefined) {\n            //return a BBox without extend if the centroid could not be generated\n            return GeoBox.fromCoordinates(\n                this.coordinates[0] as GeoCoordinates,\n                this.coordinates[0] as GeoCoordinates\n            );\n        }\n        const { east, west } = this.getEastAndWest(centroid);\n        const { north, south } = this.getNorthAndSouth();\n        return GeoBox.fromCoordinates(\n            new GeoCoordinates(south, west),\n            new GeoCoordinates(north, east)\n        );\n    }\n\n    /**\n     * Gets the Centroid for the Polygon\n     *\n     * Might be undefined or with unexpected results for twisted or concave Polygons.\n     */\n    getCentroid(): GeoCoordinates | undefined {\n        const area = this.getArea();\n        if (area === 0) {\n            return undefined;\n        }\n        let latitude = 0;\n        let longitude = 0;\n        let f;\n\n        let previousIndex = this.m_coordinates.length - 1;\n\n        this.m_coordinates.forEach((coordinate, index) => {\n            const previousCoordinate = this.m_coordinates[previousIndex];\n            f =\n                coordinate.latitude * previousCoordinate.longitude -\n                previousCoordinate.latitude * coordinate.longitude;\n            latitude += (coordinate.latitude + previousCoordinate.latitude) * f;\n            longitude += (coordinate.longitude + previousCoordinate.longitude) * f;\n            previousIndex = index;\n        });\n\n        f = area * 6;\n\n        return new GeoCoordinates(\n            latitude / f,\n            area < 0 /* antimeridian crossing */ ? -180 + longitude / f : longitude / f\n        );\n    }\n\n    private sortCCW() {\n        const polyCenter = this.getPolyAverageCenter();\n        if (!polyCenter) {\n            return;\n        }\n\n        //sorts by angle from x-axis\n        this.m_coordinates.sort((a: GeoCoordinatesLike, b: GeoCoordinatesLike) => {\n            const veca = new Vector2(\n                a.latitude - polyCenter.latitude,\n                a.longitude - polyCenter.longitude\n            ).normalize();\n            const vecb = new Vector2(\n                b.latitude - polyCenter.latitude,\n                b.longitude - polyCenter.longitude\n            ).normalize();\n\n            return vecb.angle() - veca.angle();\n        });\n    }\n\n    private wrapCoordinatesAround() {\n        const firstAntimerCrossIndex = this.m_coordinates.findIndex(\n            (val: GeoCoordinatesLike, index: number) => {\n                const prevLonIndex = index === 0 ? this.m_coordinates.length - 1 : index - 1;\n                const prevLon = this.m_coordinates[prevLonIndex].longitude;\n                const lon = val.longitude;\n\n                return isLeftToRightAntimeridianCrossing(prevLon, lon);\n            }\n        );\n        if (firstAntimerCrossIndex < 0) {\n            return;\n        }\n\n        let wrapAround = true;\n        for (let i = 0; i < this.m_coordinates.length; i++) {\n            const index = (firstAntimerCrossIndex + i) % this.m_coordinates.length;\n            const currentLon = this.m_coordinates[index].longitude;\n            const nextLon = this.m_coordinates[(index + 1) % this.m_coordinates.length].longitude;\n\n            if (wrapAround) {\n                this.m_coordinates[index].longitude += 360;\n            }\n\n            if (isRightToLeftAntimeridianCrossing(currentLon, nextLon)) {\n                wrapAround = false;\n            } else if (isLeftToRightAntimeridianCrossing(currentLon, nextLon)) {\n                wrapAround = true;\n            }\n        }\n    }\n\n    private getPolyAverageCenter(): GeoCoordinates | undefined {\n        const polySum = this.m_coordinates.reduce((prev, curr) => {\n            return new GeoCoordinates(\n                prev.latitude + curr.latitude,\n                prev.longitude + curr.longitude\n            );\n        });\n        //create an average center point\n        return new GeoCoordinates(\n            polySum.latitude / this.m_coordinates.length,\n            polySum.longitude / this.m_coordinates.length\n        );\n    }\n\n    private getArea(): number {\n        let area = 0;\n        let previousIndex = this.m_coordinates.length - 1;\n\n        this.m_coordinates.forEach((coordinate, index) => {\n            const previousCoordinate = this.m_coordinates[previousIndex];\n            area += coordinate.latitude * previousCoordinate.longitude;\n            area -= coordinate.longitude * previousCoordinate.latitude;\n            previousIndex = index;\n        });\n\n        return (area /= 2);\n    }\n\n    private getEastAndWest(center: GeoCoordinates): { east: number; west: number } {\n        let west = center.longitude;\n        let east = center.longitude;\n        let previousIndex = this.m_coordinates.length - 1;\n        this.m_coordinates.forEach((coordinate, index) => {\n            const previousCoordinate = this.m_coordinates[previousIndex];\n            previousIndex = index;\n            const veca = new Vector2(\n                coordinate.latitude - center.latitude,\n                coordinate.longitude - center.longitude\n            ).normalize();\n\n            const vecb = new Vector2(\n                previousCoordinate.latitude - center.latitude,\n                previousCoordinate.longitude - center.longitude\n            ).normalize();\n\n            let ccw = Math.sign(vecb.angle() - veca.angle()) === 1;\n            // overwrite in case of angle over axis\n            if (vecb.y >= 0 && veca.y < 0) {\n                ccw = true;\n            }\n\n            const long = coordinate.longitude;\n            if (long < center.longitude) {\n                if (ccw) {\n                    west = Math.min(west, long);\n                } else {\n                    east = Math.min(east, long);\n                }\n            } else {\n                if (ccw) {\n                    east = Math.max(east, long);\n                } else {\n                    west = Math.max(west, long);\n                }\n            }\n        });\n        return { east, west };\n    }\n\n    private getNorthAndSouth(): { north: number; south: number } {\n        let north = MIN_LATITUDE;\n        let south = MAX_LATITUDE;\n        this.m_coordinates.forEach((coordinate, index) => {\n            north = Math.max(north, coordinate.latitude);\n            south = Math.min(south, coordinate.latitude);\n        });\n        return { north, south };\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { GeoCoordLike, isGeoCoordLike } from \"./GeoCoordLike\";\n\n/**\n * Represents an object with `GeoPolygon` like interface.\n *\n * This is defined as an Array of GeoCoordinates sorted in ccw order.\n *\n * @beta, @internal\n */\nexport interface GeoPolygonLike {\n    /**\n     * Array of ccw sorted GeoCoordLike\n     */\n    coordinates: GeoCoordLike[];\n}\n\n/**\n * Type guard to assert that `object` conforms to {@link GeoPolygonLike} data interface.\n *\n * @beta, @internal\n */\nexport function isGeoPolygonLike(object: any): object is GeoPolygonLike {\n    if (!object || (!Array.isArray(object.coordinates) && object.coordinates.length > 2)) {\n        return false;\n    }\n    let isValid: boolean = true;\n    //TODO: this might take a while, not sure this should be that extensive\n    object.coordinates.forEach((coord: any) => {\n        if (!isGeoCoordLike(object)) {\n            isValid = false;\n        }\n    });\n    return isValid;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Represents an object with `LatLng` like interface.\n */\nexport interface LatLngLike {\n    /** The latitude in degrees. */\n    lat: number;\n\n    /** The longitude in degrees. */\n    lng: number;\n}\n\n/**\n * Type guard to assert that `object` conforms to {@link LatLngLike} interface.\n */\nexport function isLatLngLike(object: any): object is LatLngLike {\n    return object && typeof object.lat === \"number\" && typeof object.lng === \"number\";\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"./Vector3Like\";\n\n/**\n * An interface representing bounding box in world coordinates.\n */\nexport interface Box3Like {\n    /**\n     * The minimum position in world coordinates of this bounding box.\n     */\n    readonly min: Vector3Like;\n\n    /**\n     * The maximum position in world coordinates of this bounding box.\n     */\n    readonly max: Vector3Like;\n}\n\n/**\n * Returns true if the given object implements the {@link Box3Like} interface.\n *\n * @param object - A valid object.\n */\nexport function isBox3Like(object: {}): object is Box3Like {\n    const box3 = object as Partial<Box3Like>;\n    return box3.min !== undefined && box3.max !== undefined;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { Box3Like } from \"./Box3Like\";\nimport { Vector3Like } from \"./Vector3Like\";\n\nexport namespace MathUtils {\n    /**\n     * Creates a new empty bounding box.\n     *\n     * @deprecated Use {@link https://threejs.org/docs/#api/en/math/Box3 | THREE.Box3} instead.\n     */\n    export function newEmptyBox3(): Box3Like {\n        return {\n            min: { x: Infinity, y: Infinity, z: Infinity },\n            max: { x: -Infinity, y: -Infinity, z: -Infinity }\n        };\n    }\n\n    /**\n     * Creates a new [Vector3Like] instance.\n     *\n     * @param x - The x component.\n     * @param y - The y component.\n     * @param z - The z component.\n     */\n    export function newVector3(x: number, y: number, z: number): Vector3Like;\n\n    /**\n     * Creates a new [Vector3Like] instance.\n     *\n     * @param x - The x component.\n     * @param y - The y component.\n     * @param z - The z component.\n     * @param v - The resulting [Vector3Like] instance.\n     */\n    export function newVector3<Vector extends Vector3Like>(\n        x: number,\n        y: number,\n        z: number,\n        v: Vector\n    ): Vector;\n\n    /**\n     * Set the components of the given [Vector3Like] instance.\n     *\n     * @param x - The x component.\n     * @param y - The y component.\n     * @param z - The z component.\n     * @param v - The [Vector3Like]\n     */\n    export function newVector3(x: number, y: number, z: number, v?: Vector3Like): Vector3Like {\n        if (v === undefined) {\n            return { x, y, z };\n        }\n        v.x = x;\n        v.y = y;\n        v.z = z;\n        return v;\n    }\n\n    /**\n     * Copies the vector across.\n     *\n     * @param from - The vector to copy from.\n     * @param to - The resulting [Vector3Like] instance, with the contents copied from from\n     */\n    export function copyVector3<Vector extends Vector3Like>(from: Vector3Like, to: Vector): Vector {\n        to.x = from.x;\n        to.y = from.y;\n        to.z = from.z;\n        return to;\n    }\n\n    /**\n     * Converts an angle measured in degrees to an equivalent value in radians.\n     *\n     * @param degrees - Value in degrees.\n     * @returns Value in radians.\n     * @deprecated use THREE.MathUtils.degToRad instead\n     */\n    export const degToRad = THREE.MathUtils.degToRad;\n\n    /**\n     * Converts an angle measured in radians to an equivalent value in degrees.\n     *\n     * @param degrees - Value in radians.\n     * @returns Value in degrees.\n     * @deprecated Use {@link https://threejs.org/docs/#api/en/math/MathUtils.radToDeg\n     *                | THREE.MathUtils.radToDeg}.\n     */\n    export const radToDeg = THREE.MathUtils.radToDeg;\n\n    /**\n     * Ensures that input value fits in a given range.\n     *\n     * @param value - The value to be clamped.\n     * @param min - Minimum value.\n     * @param max - Maximum value.\n     * @returns Clamped value.\n     * @deprecated Use {@link https://threejs.org/docs/#api/en/math/MathUtils.clamp\n     *                | THREE.MathUtils.clamp}.\n     */\n    export const clamp = THREE.MathUtils.clamp;\n\n    /**\n     * Normalize angle in degrees to range `[0, 360)`.\n     *\n     * @param a - Angle in degrees.\n     * @returns Angle in degrees in range `[0, 360)`.\n     */\n    export function normalizeAngleDeg(a: number): number {\n        a = a % 360;\n        if (a < 0) {\n            a = a + 360;\n        }\n        return a;\n    }\n\n    /**\n     * Normalize latitude angle in degrees to range `[-180, 180]`.\n     *\n     * @param a - Latitude angle in degrees.\n     * @returns Latitude angle in degrees in range `[-180, 180]`.\n     */\n    export function normalizeLongitudeDeg(a: number): number {\n        a = normalizeAngleDeg(a);\n        if (a > 180) {\n            a = a - 360;\n        }\n        return a;\n    }\n\n    /**\n     * Return the minimal delta between angles `a` and `b` given in degrees.\n     *\n     * Equivalent to `a - b` in coordinate space with exception vector direction can be reversed\n     * that if `abs(a-b) > 180` because trip is shorter in 'other' direction.\n     *\n     * Useful when interpolating between `b` and `a` in angle space.\n     *\n     * @param a - Start angle in degrees.\n     * @param b - End angle in degrees.\n     * @returns Angle that that satisfies condition `a - b - d = 0` in angle space.\n     */\n    export function angleDistanceDeg(a: number, b: number): number {\n        a = normalizeAngleDeg(a);\n        b = normalizeAngleDeg(b);\n\n        const d = a - b;\n        if (d > 180) {\n            return d - 360;\n        } else if (d <= -180) {\n            return d + 360;\n        } else {\n            return d;\n        }\n    }\n\n    /**\n     * Interpolate linearly between two angles given in degrees.\n     *\n     * @param p0 - Angle from in degrees\n     * @param p1 - Angle to in degrees\n     * @param t - Interpolation factor (alpha), in range `0-1`.\n     */\n    export function interpolateAnglesDeg(p0: number, p1: number, t: number): number {\n        // hand crafted version,\n        // see stack for maybe better versions:\n        //    https://stackoverflow.com/questions/2708476/rotation-interpolation\n\n        const d = angleDistanceDeg(p1, p0);\n        const r = (p0 + d * t) % 360;\n        return r;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Frustum, Matrix4, Plane, Ray, Vector3 } from \"three\";\n\nimport { OrientedBox3Like } from \"./OrientedBox3Like\";\n\nfunction intersectsSlab(\n    rayDir: Vector3,\n    p: Vector3,\n    axis: Vector3,\n    extent: number,\n    t: { min: number; max: number }\n): boolean {\n    const epsilon = 1e-20;\n    const e = axis.dot(p);\n    const f = axis.dot(rayDir);\n    if (Math.abs(f) < epsilon) {\n        // ray parallel to near/far slab lines.\n        return Math.abs(e) <= extent;\n    }\n\n    // ray intersects near/far slab lines.\n    const finv = 1 / f;\n    const t1 = (e + extent) * finv;\n    const t2 = (e - extent) * finv;\n    if (t1 > t2) {\n        // t1 is far intersect, t2 is near.\n        if (t2 > t.min) {\n            t.min = t2;\n        }\n        if (t1 < t.max) {\n            t.max = t1;\n        }\n    } else {\n        // t1 is near intersect, t2 is far.\n        if (t1 > t.min) {\n            t.min = t1;\n        }\n        if (t2 < t.max) {\n            t.max = t2;\n        }\n    }\n    return t.min <= t.max && t.max >= 0;\n}\n\nconst tmpVec = new Vector3();\nconst tmpT = { min: -Infinity, max: Infinity };\n\nexport class OrientedBox3 implements OrientedBox3Like {\n    /**\n     * The position of the center of this `OrientedBox3`.\n     */\n    readonly position = new Vector3();\n\n    /**\n     * The x-axis of this `OrientedBox3`.\n     */\n    readonly xAxis = new Vector3(1, 0, 0);\n\n    /**\n     * The y-axis of this `OrientedBox3`.\n     */\n    readonly yAxis = new Vector3(0, 1, 0);\n\n    /**\n     * The z-axis of this `OrientedBox3`.\n     */\n    readonly zAxis = new Vector3(0, 0, 1);\n\n    /**\n     * The extents of this `OrientedBox3`.\n     */\n    readonly extents = new Vector3();\n\n    /**\n     * Creates a new `OrientedBox3`.\n     */\n    constructor();\n\n    /**\n     * Creates a new `OrientedBox3` with the given position, orientation and extents.\n     *\n     * @param position - The position of the center of the `OrientedBox3`.\n     * @param rotationMatrix - The rotation of the `OrientedBox3`.\n     * @param extents - The extents of the `OrientedBox3`.\n     */\n    constructor(position: Vector3, rotationMatrix: Matrix4, extents: Vector3);\n\n    /**\n     * Creates a new `OrientedBox3`.\n     *\n     * @hideconstructor\n     */\n    constructor(position?: Vector3, rotationMatrix?: Matrix4, extents?: Vector3) {\n        if (position !== undefined) {\n            this.position.copy(position);\n        }\n\n        if (rotationMatrix !== undefined) {\n            rotationMatrix.extractBasis(this.xAxis, this.yAxis, this.zAxis);\n        }\n\n        if (extents !== undefined) {\n            this.extents.copy(extents);\n        }\n    }\n\n    /**\n     * Create a copy of this [[OrientedBoundingBox]].\n     */\n    clone(): OrientedBox3 {\n        const newBox = new OrientedBox3();\n        newBox.copy(this);\n        return newBox;\n    }\n\n    /**\n     * Copies the values of `other` to this {@link OrientedBox3}.\n     * @param other - The other {@link OrientedBox3} to copy.\n     */\n    copy(other: OrientedBox3) {\n        this.position.copy(other.position);\n        this.xAxis.copy(other.xAxis);\n        this.yAxis.copy(other.yAxis);\n        this.zAxis.copy(other.zAxis);\n        this.extents.copy(other.extents);\n    }\n\n    /**\n     * Gets the center position of this {@link OrientedBox3}.\n     *\n     * @param center - The returned center position.\n     */\n    getCenter(center = new Vector3()): Vector3 {\n        return center.copy(this.position);\n    }\n\n    /**\n     * Gets the size of this {@link OrientedBox3}.\n     *\n     * @param size - The returned size.\n     */\n    getSize(size = new Vector3()): Vector3 {\n        return size.copy(this.extents).multiplyScalar(2);\n    }\n\n    /**\n     * Gets the orientation matrix of this `OrientedBox3`.\n     * @param matrix - The output orientation matrix.\n     */\n    getRotationMatrix(matrix: Matrix4 = new Matrix4()): Matrix4 {\n        return matrix.makeBasis(this.xAxis, this.yAxis, this.zAxis);\n    }\n\n    /**\n     * Checks intersection with the given `THREE.Frustum` or array of `THREE.Plane`s.\n     *\n     * @param frustumOrPlanes - Frustum or array of planes.\n     */\n    intersects(frustumOrPlanes: Plane[] | Frustum): boolean {\n        const planes: Plane[] = Array.isArray(frustumOrPlanes)\n            ? frustumOrPlanes\n            : frustumOrPlanes.planes;\n\n        for (const plane of planes) {\n            const r =\n                Math.abs(plane.normal.dot(this.xAxis) * this.extents.x) +\n                Math.abs(plane.normal.dot(this.yAxis) * this.extents.y) +\n                Math.abs(plane.normal.dot(this.zAxis) * this.extents.z);\n\n            const d = plane.distanceToPoint(this.position);\n\n            if (d + r < 0) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Checks intersection with the given ray.\n     *\n     * @param ray - The ray to test.\n     * @returns distance from ray origin to intersection point if it exist, undefined otherwise.\n     */\n    intersectsRay(ray: Ray): number | undefined {\n        // Slabs intersection algorithm.\n        tmpT.min = -Infinity;\n        tmpT.max = Infinity;\n        tmpVec.copy(this.position).sub(ray.origin);\n        if (!intersectsSlab(ray.direction, tmpVec, this.xAxis, this.extents.x, tmpT)) {\n            return undefined;\n        }\n        if (!intersectsSlab(ray.direction, tmpVec, this.yAxis, this.extents.y, tmpT)) {\n            return undefined;\n        }\n        if (!intersectsSlab(ray.direction, tmpVec, this.zAxis, this.extents.z, tmpT)) {\n            return undefined;\n        }\n\n        return tmpT.min > 0 ? tmpT.min : tmpT.max;\n    }\n\n    /**\n     * Returns true if this {@link OrientedBox3} contains the given point.\n     *\n     * @param point - A valid point.\n     */\n    contains(point: Vector3): boolean {\n        const dx = point.x - this.position.x;\n        const dy = point.y - this.position.y;\n        const dz = point.z - this.position.z;\n        const x = Math.abs(dx * this.xAxis.x + dy * this.xAxis.y + dz * this.xAxis.z);\n        const y = Math.abs(dx * this.yAxis.x + dy * this.yAxis.y + dz * this.yAxis.z);\n        const z = Math.abs(dx * this.zAxis.x + dy * this.zAxis.y + dz * this.zAxis.z);\n        if (x > this.extents.x || y > this.extents.y || z > this.extents.z) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Returns the distance from this {@link OrientedBox3} and the given `point`.\n     *\n     * @param point - A point.\n     */\n    distanceToPoint(point: Vector3): number {\n        return Math.sqrt(this.distanceToPointSquared(point));\n    }\n\n    /**\n     * Returns the squared distance from this {@link OrientedBox3} and the given `point`.\n     *\n     * @param point - A point.\n     */\n    distanceToPointSquared(point: Vector3): number {\n        const d = new Vector3();\n        d.subVectors(point, this.position);\n\n        const lengths = [d.dot(this.xAxis), d.dot(this.yAxis), d.dot(this.zAxis)];\n\n        let result = 0;\n\n        for (let i = 0; i < 3; ++i) {\n            const length = lengths[i];\n            const extent = this.extents.getComponent(i);\n            if (length < -extent) {\n                const dd = extent + length;\n                result += dd * dd;\n            } else if (length > extent) {\n                const dd = length - extent;\n                result += dd * dd;\n            }\n        }\n\n        return result;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TransformLike } from \"./TransformLike\";\nimport { Vector3Like } from \"./Vector3Like\";\n\n/**\n * The interface {@link OrientedBox3Like} is used to represent oriented bounding box.\n */\nexport interface OrientedBox3Like extends TransformLike {\n    /**\n     * The extents of this bounding box.\n     */\n    readonly extents: Vector3Like;\n}\n\n/**\n * Returns true if the given object implements the interface {@link OrientedBox3Like}.\n *\n * @param object - The object.\n */\nexport function isOrientedBox3Like(object: {}): object is OrientedBox3Like {\n    const obb = object as Partial<OrientedBox3Like>;\n    return (\n        obb.position !== undefined &&\n        obb.xAxis !== undefined &&\n        obb.yAxis !== undefined &&\n        obb.zAxis !== undefined &&\n        obb.extents !== undefined\n    );\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"./Vector3Like\";\n\n/**\n * The interface {@link TransformLike} is used to represent transforms with\n * only translation and rotation.\n */\nexport interface TransformLike {\n    /**\n     * The position of this transform.\n     */\n    readonly position: Vector3Like;\n\n    /**\n     * The x-axis of this transform.\n     */\n    readonly xAxis: Vector3Like;\n\n    /**\n     * The y-axis of this transform.\n     */\n    readonly yAxis: Vector3Like;\n\n    /**\n     * The z-axis of this transform.\n     */\n    readonly zAxis: Vector3Like;\n}\n\n/**\n * Returns true if the given object implements the interface {@link TransformLike}.\n *\n * @param object - The object.\n */\nexport function isTransformLike(object: {}): object is TransformLike {\n    const transform = object as Partial<TransformLike>;\n    return (\n        transform.position !== undefined &&\n        transform.xAxis !== undefined &&\n        transform.yAxis !== undefined &&\n        transform.zAxis !== undefined\n    );\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Interface representing a Vector2.\n */\nexport interface Vector2Like {\n    /**\n     * The X position.\n     */\n    x: number;\n\n    /**\n     * The Y position.\n     */\n    y: number;\n}\n\nexport function isVector2Like(v: any): v is Vector2Like {\n    return v && typeof v.x === \"number\" && typeof v.y === \"number\";\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Interface representing a Vector3.\n */\nexport interface Vector3Like {\n    /**\n     * The X position.\n     */\n    x: number;\n\n    /**\n     * The Y position.\n     */\n    y: number;\n\n    /**\n     * The Z position.\n     */\n    z: number;\n}\n\nexport function isVector3Like(v: any): v is Vector3Like {\n    return v && typeof v.x === \"number\" && typeof v.y === \"number\" && typeof v.z === \"number\";\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport class EarthConstants {\n    /** The equatorial circumference in meters. */\n    static EQUATORIAL_CIRCUMFERENCE: number = 40075016.6855784861531768177614;\n\n    /** The equatorial radius in meters. */\n    static EQUATORIAL_RADIUS: number = 6378137.0;\n\n    /** The lowest point on earth (Dead Sea) in meters. */\n    static MIN_ELEVATION: number = -433.0;\n\n    /** The highest point on earth (Mt. Everest) in meters. */\n    static MAX_ELEVATION: number = 8848.0;\n\n    /** The highest artificial structure (building) on earth, Burj Khalifa tower in Dubai */\n    static MAX_BUILDING_HEIGHT: number = 828;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nclass EquirectangularProjection extends Projection {\n    static geoToWorldScale: number = 1.0 / (2.0 * Math.PI);\n    static worldToGeoScale: number = (2.0 * Math.PI) / 1.0;\n\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    /** @override */\n    getScaleFactor(_worldPoint: Vector3Like): number {\n        return 1;\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        result.min.x = 0.0;\n        result.min.y = 0.0;\n        result.min.z = minAltitude;\n        result.max.x = this.unitScale;\n        result.max.y = this.unitScale / 2;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        if (result === undefined) {\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n        result.x =\n            (THREE.MathUtils.degToRad(geoPoint.longitude) + Math.PI) *\n            EquirectangularProjection.geoToWorldScale *\n            this.unitScale;\n        result.y =\n            (THREE.MathUtils.degToRad(geoPoint.latitude) + Math.PI * 0.5) *\n            EquirectangularProjection.geoToWorldScale *\n            this.unitScale;\n        result.z = geoPoint.altitude ?? 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const geoPoint = GeoCoordinates.fromRadians(\n            (worldPoint.y * EquirectangularProjection.worldToGeoScale) / this.unitScale -\n                Math.PI * 0.5,\n            (worldPoint.x * EquirectangularProjection.worldToGeoScale) / this.unitScale - Math.PI,\n            worldPoint.z\n        );\n        return geoPoint;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const worldCenter = this.projectPoint(\n            new GeoCoordinates(geoBox.center.latitude, geoBox.center.longitude, 0)\n        );\n        const { latitudeSpanInRadians, longitudeSpanInRadians, altitudeSpan } = geoBox;\n        const sizeX = longitudeSpanInRadians * EquirectangularProjection.geoToWorldScale;\n        const sizeY = latitudeSpanInRadians * EquirectangularProjection.geoToWorldScale;\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        if (isBox3Like(result)) {\n            result.min.x = worldCenter.x - sizeX * 0.5 * this.unitScale;\n            result.min.y = worldCenter.y - sizeY * 0.5 * this.unitScale;\n            result.max.x = worldCenter.x + sizeX * 0.5 * this.unitScale;\n            result.max.y = worldCenter.y + sizeY * 0.5 * this.unitScale;\n            if (altitudeSpan !== undefined) {\n                result.min.z = worldCenter.z - altitudeSpan * 0.5;\n                result.max.z = worldCenter.z + altitudeSpan * 0.5;\n            } else {\n                result.min.z = 0;\n                result.max.z = 0;\n            }\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = worldCenter.x;\n            result.position.y = worldCenter.y;\n            result.position.z = worldCenter.z;\n            result.extents.x = sizeX * 0.5 * this.unitScale;\n            result.extents.y = sizeY * 0.5 * this.unitScale;\n            result.extents.z = Math.max(Number.EPSILON, (altitudeSpan ?? 0) * 0.5);\n        }\n        return result;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        return GeoBox.fromCoordinates(minGeo, maxGeo);\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = 1;\n        }\n        return normal;\n    }\n}\n\n/**\n * Equirectangular {@link Projection} used to convert geo coordinates to unit coordinates and vice\n * versa.\n */\nexport const normalizedEquirectangularProjection: Projection = new EquirectangularProjection(1);\n\n/**\n * Equirectangular {@link Projection} used to convert geo coordinates to world coordinates and vice\n * versa.\n */\nexport const equirectangularProjection: Projection = new EquirectangularProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nclass IdentityProjection extends Projection {\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    /** @override */\n    getScaleFactor(_worldPoint: Vector3Like): number {\n        return 1;\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        result.min.x = -Math.PI;\n        result.min.y = -Math.PI * 0.5;\n        result.min.z = minAltitude;\n        result.max.x = Math.PI;\n        result.max.y = Math.PI * 0.5;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        if (!result) {\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n        result.x = THREE.MathUtils.degToRad(geoPoint.longitude);\n        result.y = THREE.MathUtils.degToRad(geoPoint.latitude);\n        result.z = geoPoint.altitude ?? 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const geoPoint = GeoCoordinates.fromRadians(worldPoint.y, worldPoint.x, worldPoint.z);\n        return geoPoint;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        const min = this.projectPoint(\n            new GeoCoordinates(geoBox.south, geoBox.west, geoBox.minAltitude)\n        );\n        const max = this.projectPoint(\n            new GeoCoordinates(geoBox.north, geoBox.east, geoBox.maxAltitude)\n        );\n        if (isBox3Like(result)) {\n            result.min.x = min.x;\n            result.min.y = min.y;\n            result.min.z = min.z;\n            result.max.x = max.x;\n            result.max.y = max.y;\n            result.max.z = max.z;\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = (min.x + max.x) * 0.5;\n            result.position.y = (min.y + max.y) * 0.5;\n            result.position.z = (min.z + max.z) * 0.5;\n            result.extents.x = (max.x - min.x) * 0.5;\n            result.extents.y = (max.y - min.y) * 0.5;\n            result.extents.z = Math.max(Number.EPSILON, (max.z - min.z) * 0.5);\n        }\n        return result;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        return GeoBox.fromCoordinates(minGeo, maxGeo);\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = 1;\n        }\n        return normal;\n    }\n}\n\n/**\n * Identity {@link Projection} used to convert geo coordinates to unit coordinates and vice versa.\n */\nexport const identityProjection: Projection = new IdentityProjection(1);\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike, isGeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { TransformLike } from \"../math/TransformLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nclass MercatorProjection extends Projection {\n    protected static clamp(val: number, min: number, max: number): number {\n        return Math.min(Math.max(min, val), max);\n    }\n\n    protected static latitudeClamp(latitude: number): number {\n        return MercatorProjection.clamp(\n            latitude,\n            -MercatorConstants.MAXIMUM_LATITUDE,\n            MercatorConstants.MAXIMUM_LATITUDE\n        );\n    }\n\n    private static latitudeProject(latitude: number): number {\n        return Math.log(Math.tan(Math.PI * 0.25 + latitude * 0.5)) / Math.PI;\n    }\n\n    private static latitudeClampProject(latitude: number): number {\n        return MercatorProjection.latitudeProject(MercatorProjection.latitudeClamp(latitude));\n    }\n\n    private static unprojectLatitude(y: number): number {\n        return 2.0 * Math.atan(Math.exp(Math.PI * y)) - Math.PI * 0.5;\n    }\n\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    /** @override */\n    getScaleFactor(worldPoint: Vector3Like): number {\n        return Math.cosh(2 * Math.PI * (worldPoint.y / this.unitScale - 0.5));\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        result.min.x = 0;\n        result.min.y = 0;\n        result.min.z = minAltitude;\n        result.max.x = this.unitScale;\n        result.max.y = this.unitScale;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPointLike: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        let geoPoint: GeoCoordinates;\n\n        if (geoPointLike instanceof GeoCoordinates) {\n            geoPoint = geoPointLike;\n        } else {\n            geoPoint = new GeoCoordinates(\n                geoPointLike.latitude,\n                geoPointLike.longitude,\n                geoPointLike.altitude\n            );\n        }\n\n        if (!result) {\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n        result.x = ((geoPoint.longitude + 180) / 360) * this.unitScale;\n        result.y =\n            (MercatorProjection.latitudeClampProject(geoPoint.latitudeInRadians) * 0.5 + 0.5) *\n            this.unitScale;\n        result.z = geoPoint.altitude ?? 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const geoPoint = GeoCoordinates.fromRadians(\n            MercatorProjection.unprojectLatitude((worldPoint.y / this.unitScale - 0.5) * 2.0),\n            (worldPoint.x / this.unitScale) * 2 * Math.PI - Math.PI,\n            worldPoint.z\n        );\n        return geoPoint;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const worldCenter = this.projectPoint(geoBox.center);\n        const worldNorth =\n            (MercatorProjection.latitudeClampProject(geoBox.northEast.latitudeInRadians) * 0.5 +\n                0.5) *\n            this.unitScale;\n        const worldSouth =\n            (MercatorProjection.latitudeClampProject(geoBox.southWest.latitudeInRadians) * 0.5 +\n                0.5) *\n            this.unitScale;\n        const worldYCenter = (worldNorth + worldSouth) * 0.5;\n\n        worldCenter.y = worldYCenter;\n\n        const latitudeSpan = worldNorth - worldSouth;\n        const longitudeSpan = (geoBox.longitudeSpan / 360) * this.unitScale;\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        if (isBox3Like(result)) {\n            result.min.x = worldCenter.x - longitudeSpan * 0.5;\n            result.min.y = worldCenter.y - latitudeSpan * 0.5;\n            result.max.x = worldCenter.x + longitudeSpan * 0.5;\n            result.max.y = worldCenter.y + latitudeSpan * 0.5;\n            const altitudeSpan = geoBox.altitudeSpan;\n            if (altitudeSpan !== undefined) {\n                result.min.z = worldCenter.z - altitudeSpan * 0.5;\n                result.max.z = worldCenter.z + altitudeSpan * 0.5;\n            } else {\n                result.min.z = 0;\n                result.max.z = 0;\n            }\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = worldCenter.x;\n            result.position.y = worldCenter.y;\n            result.position.z = worldCenter.z;\n            result.extents.x = longitudeSpan * 0.5;\n            result.extents.y = latitudeSpan * 0.5;\n            result.extents.z = Math.max(Number.EPSILON, (geoBox.altitudeSpan ?? 0) * 0.5);\n        } else {\n            throw new Error(\"invalid bounding box\");\n        }\n        return result;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        const geoBox = GeoBox.fromCoordinates(minGeo, maxGeo);\n        return geoBox;\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = 1;\n        }\n        return normal;\n    }\n\n    /** @override */\n    reprojectPoint(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result?: Vector3Like\n    ): Vector3Like {\n        // this implementation of [[reprojectPoint]] supports both\n        // [[WebMercatorProjection]] and [[MercatorProjection]]. The only\n        // difference betweeen these two variants of WEB Mercator\n        // is in the orientation of the Y axis, so we just flip Y coordinates\n        // when reprojecting between them.\n        if (\n            sourceProjection !== this &&\n            (sourceProjection === webMercatorProjection || sourceProjection === mercatorProjection)\n        ) {\n            if (result === undefined) {\n                result = {} as Vector3Like;\n            }\n\n            result.x = worldPos.x;\n            result.y = this.unitScale - worldPos.y;\n            result.z = worldPos.z;\n\n            return result;\n        }\n\n        return super.reprojectPoint(sourceProjection, worldPos, result!);\n    }\n}\n\nclass WebMercatorProjection extends MercatorProjection {\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPointLike: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        let geoPoint: GeoCoordinates;\n\n        if (geoPointLike instanceof GeoCoordinates) {\n            geoPoint = geoPointLike;\n        } else {\n            geoPoint = new GeoCoordinates(\n                geoPointLike.latitude,\n                geoPointLike.longitude,\n                geoPointLike.altitude\n            );\n        }\n\n        /*\n         * The following tslint:disable is due to the fact that the [[WorldCoordinates]]\n         * might be a concrete class which is not available at runtime.\n         * Consider the following example:\n         *\n         *  const x: THREE.Vector3 = new THREE.Vector3(0,0,0);\n         *  const result = EquirectangularProjection.projectPoint<THREE.Vector3>(x);\n         *\n         * Note: type of `result` is Vector3Like and not as expected: THREE.Vector3!\n         */\n        if (!result) {\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n\n        result.x = ((geoPoint.longitude + 180) / 360) * this.unitScale;\n        const sy = Math.sin(MercatorProjection.latitudeClamp(geoPoint.latitudeInRadians));\n        result.y = (0.5 - Math.log((1 + sy) / (1 - sy)) / (4 * Math.PI)) * this.unitScale;\n        result.z = geoPoint.altitude ?? 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const x = worldPoint.x / this.unitScale - 0.5;\n        const y = 0.5 - worldPoint.y / this.unitScale;\n\n        const longitude = 360 * x;\n        const latitude = 90 - (360 * Math.atan(Math.exp(-y * 2 * Math.PI))) / Math.PI;\n\n        return new GeoCoordinates(latitude, longitude, worldPoint.z);\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const r = super.projectBox(geoBox, result);\n        if (isBox3Like(r)) {\n            // Invert the y axis for web mercator, this means that max => min & min => max\n            const maxY = r.max.y;\n            r.max.y = this.unitScale - r.min.y;\n            r.min.y = this.unitScale - maxY;\n        } else if (isOrientedBox3Like(r)) {\n            MathUtils.newVector3(1, 0, 0, r.xAxis);\n            MathUtils.newVector3(0, -1, 0, r.yAxis);\n            MathUtils.newVector3(0, 0, -1, r.zAxis);\n            r.position.y = this.unitScale - r.position.y;\n        }\n        return r;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        const geoBox = new GeoBox(\n            new GeoCoordinates(maxGeo.latitude, minGeo.longitude, minGeo.altitude),\n            new GeoCoordinates(minGeo.latitude, maxGeo.longitude, maxGeo.altitude)\n        );\n        return geoBox;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: -1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = -1;\n        }\n        return normal;\n    }\n\n    /** @override */\n    localTangentSpace(\n        point: GeoCoordinatesLike | Vector3Like,\n        result: TransformLike\n    ): TransformLike {\n        if (isGeoCoordinatesLike(point)) {\n            this.projectPoint(point, result.position);\n        } else {\n            MathUtils.copyVector3(point, result.position);\n        }\n        MathUtils.newVector3(1, 0, 0, result.xAxis);\n        MathUtils.newVector3(0, -1, 0, result.yAxis);\n        MathUtils.newVector3(0, 0, -1, result.zAxis);\n        return result;\n    }\n}\n\nexport class MercatorConstants {\n    // Math.atan(Math.sinh(Math.PI))\n    static readonly MAXIMUM_LATITUDE: number = 1.4844222297453323;\n}\n\n/**\n * Mercator {@link Projection} used to convert geo coordinates to world coordinates and vice versa.\n */\nexport const mercatorProjection: Projection = new MercatorProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n\n/**\n * Web Mercator {@link Projection} used to convert geo coordinates to world coordinates\n * and vice versa.\n */\nexport const webMercatorProjection: Projection = new WebMercatorProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike, isGeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { TransformLike } from \"../math/TransformLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\n\n/**\n * The type of projection.\n */\nexport enum ProjectionType {\n    /**\n     * A type of [Projection] with zero curvature.\n     */\n    Planar,\n\n    /**\n     * A spherical [Projection].\n     */\n    Spherical\n}\n\n/**\n * `Projection` is used to convert positions from geo coordinates to world coordinates and vice\n * versa.\n */\nexport abstract class Projection {\n    /**\n     * The type of this [Projection].\n     */\n    abstract get type(): ProjectionType;\n\n    /**\n     * Constructs the Projection\n     *\n     * @param unitScale - How to transform the projected coordinates to world units.\n     */\n    constructor(readonly unitScale: number) {\n        //Prevent empty constructor error.\n    }\n\n    /**\n     * Returns the world extents in world coordinates.\n     *\n     * @param minElevation - The minimum elevation in meters.\n     * @param maxElevation - The maximum elevation in meters.\n     * @param result - The optional object that will be used to create the resulting bounding box.\n     */\n    abstract worldExtent<Bounds extends Box3Like>(\n        minElevation: number,\n        maxElevation: number,\n        result?: Bounds\n    ): Bounds;\n\n    /**\n     * Projects a point from geo coordinates (latitude, longitude, altitude) to world coordinates\n     * (x,y,z).\n     *\n     * Example:\n     * ```typescript\n     * const worldPos = new THREE.Vector3();\n     * projection.projectPoint(geoPos, worldPos);\n     * ```\n     *\n     * @param geoPoint - The position in geo coordinates.\n     * @param result - The optional object used to store the resulting world position, result must\n     * implement {@link Vector3Like}.\n     */\n    abstract projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates;\n\n    /**\n     * Gets the {@link TransformLike} of the local tangent space at the given point.\n     *\n     * @param point - The geo / world coordinates.\n     * @param result - The {@link TransformLike}.\n     */\n    localTangentSpace(\n        point: GeoCoordinatesLike | Vector3Like,\n        result: TransformLike\n    ): TransformLike {\n        if (isGeoCoordinatesLike(point)) {\n            this.projectPoint(point, result.position);\n        } else {\n            MathUtils.copyVector3(point, result.position);\n        }\n        MathUtils.newVector3(1, 0, 0, result.xAxis);\n        MathUtils.newVector3(0, 1, 0, result.yAxis);\n        MathUtils.newVector3(0, 0, 1, result.zAxis);\n        return result;\n    }\n\n    /**\n     * Returns the geo coordinates (latitude, longitude, altitude) from the given world position\n     * (x,y,z).\n     *\n     * Example:\n     * ```typescript\n     * const geoPos = projection.unprojectPoint(worldPos);\n     * console.log(geoPos.latitude, geoPos.longitude, geoPos.altitude);\n     * ```\n     *\n     * @param worldPoint - The position in world coordinates.\n     */\n    abstract unprojectPoint(worldPoint: Vector3Like): GeoCoordinates;\n\n    /**\n     * Returns the altitude at the given world position (x,y,z) in meters.\n     *\n     * @param worldPoint - The position in world coordinates.\n     */\n    abstract unprojectAltitude(worldPoint: Vector3Like): number;\n\n    /**\n     * Projects bounds in geo coordinates to a bounding box in world coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const bounds = projection.projectBox(geoBox);\n     * console.log(bounds.min, bounds.max);\n     * ```\n     *\n     * @param geoBox - The bounding box in geo coordinates.\n     */\n    abstract projectBox(geoBox: GeoBox): Box3Like;\n\n    /**\n     * Projects bounds in geo coordinates to a bounding box in world coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const bounds = projection.projectBox(geoBox, new THREE.Box3());\n     * console.log(bounds.min, bounds.max);\n     * ```\n     *\n     * @param geoBox - The bounding box in geo coordinates.\n     * @param result - The resulting {@link OrientedBox3Like}.\n     */\n    abstract projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result: WorldBoundingBox\n    ): WorldBoundingBox;\n\n    /**\n     * Converts a bounding box in world coordinates to a bounding box in geo coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const geoPos = projection.unprojectPoint(worldPos);\n     * console.log(geoPos.latitude, geoPos.longitude, geoPos.altitude);\n     * ```\n     *\n     * @param worldBox - The bounding box in world coordinates.\n     */\n    abstract unprojectBox(worldBox: Box3Like): GeoBox;\n\n    /**\n     * Returns the scaling factor that must be used to convert the units used by `worldPoint` to\n     * meters.\n     *\n     * @param worldPoint - The position in world coordinates.\n     */\n    abstract getScaleFactor(worldPoint: Vector3Like): number;\n\n    /**\n     * Returns the surface normal at the given world position.\n     *\n     * @param worldPoint - The position in world coordinates.\n     */\n    abstract surfaceNormal(worldPoint: Vector3Like): Vector3Like;\n\n    /**\n     * Returns the surface normal at the given world position.\n     *\n     * @param worldPoint - The position in world coordinates.\n     * @returns The resulting normal vector.\n     */\n    abstract surfaceNormal<Normal extends Vector3Like>(\n        worldPoint: Vector3Like,\n        result: Normal\n    ): Normal;\n\n    /**\n     * Returns the signed distance between the given coordinates and\n     * the closest point on the surface.\n     *\n     * @param worldPoint - The position in world coordinates.\n     */\n    abstract groundDistance(worldPoint: Vector3Like): number;\n\n    /**\n     * Scales the given world coordinates to the surface.\n     *\n     * @param worldPoint - The position in world coordinates.\n     */\n    abstract scalePointToSurface(worldPoint: Vector3Like): Vector3Like;\n\n    /**\n     * Reproject a world position from the given source {@link Projection}.\n     *\n     * @param sourceProjection - The source projection.\n     * @param worldPos - A valid world position for the given source projection.\n     * @returns The world position reprojected using this {@link Projection}.\n     */\n    reprojectPoint(sourceProjection: Projection, worldPos: Vector3Like): Vector3Like;\n\n    /**\n     * Reproject a world position from the given source {@link Projection}.\n     *\n     * @param sourceProjection - The source projection.\n     * @param worldPos - A valid position in the world space defined by the source projection.\n     * @param result - The resulting position reprojected using this {@link Projection}.\n     */\n    reprojectPoint<WorldCoordinates extends Vector3Like>(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result: WorldCoordinates\n    ): WorldCoordinates;\n\n    /**\n     * Reproject a world position from the given source {@link Projection}.\n     * Implementations should be aware of worldPos and result may be one object\n     *\n     * @param sourceProjection - The source projection.\n     * @param worldPos - A valid position in the world space defined by the source projection.\n     * @param result - The resulting position reprojected using this {@link Projection}.\n     * @hidden\n     */\n    reprojectPoint(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result?: Vector3Like\n    ): Vector3Like {\n        if (sourceProjection === this) {\n            if (result === undefined) {\n                return { x: worldPos.x, y: worldPos.y, z: worldPos.z };\n            }\n            result.x = worldPos.x;\n            result.y = worldPos.y;\n            result.z = worldPos.z;\n            return result;\n        }\n        return this.projectPoint(sourceProjection.unprojectPoint(worldPos), result);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike, isGeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { TransformLike } from \"../math/TransformLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { mercatorProjection, webMercatorProjection } from \"./MercatorProjection\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\n/**\n * Transforms the given vector using the provided basis.\n */\nfunction apply(\n    xAxis: Vector3Like,\n    yAxis: Vector3Like,\n    zAxis: Vector3Like,\n    v: Vector3Like\n): Vector3Like {\n    const x = xAxis.x * v.x + yAxis.x * v.y + zAxis.x * v.z;\n    const y = xAxis.y * v.x + yAxis.y * v.y + zAxis.y * v.z;\n    const z = xAxis.z * v.x + yAxis.z * v.y + zAxis.z * v.z;\n    v.x = x;\n    v.y = y;\n    v.z = z;\n    return v;\n}\n\n/**\n * Returns the quadrants for the given longitude. The quadrant is defined as:\n *  - quadrant(+Math.PI * -1.0) = 0\n *  - quadrant(+Math.PI * -0.5) = 1\n *  - quadrant(+Math.PI *  0.0) = 2\n *  - quadrant(+Math.PI *  0.5) = 3\n *  - quadrant(+Math.PI *  1.0) = 4\n *\n * @param longitude - The longitude in radians.\n */\nfunction getLongitudeQuadrant(longitude: number) {\n    const oneOverPI = 1 / Math.PI;\n    const quadrantIndex = Math.floor(2 * (longitude * oneOverPI + 1));\n    return THREE.MathUtils.clamp(quadrantIndex, 0, 4);\n}\n\nfunction lengthOfVector3(worldPoint: Vector3Like): number {\n    const d = Math.sqrt(\n        worldPoint.x * worldPoint.x + worldPoint.y * worldPoint.y + worldPoint.z * worldPoint.z\n    );\n    return d;\n}\n\n/**\n * Creates a Box3 enclosing the geobox.\n *\n * @param geoBox - Ghe given geobox\n * @param worldBox - The resulting axis aligned bounding box.\n */\nfunction makeBox3<Bounds extends Box3Like>(\n    geoBox: GeoBox,\n    worldBox: Bounds,\n    unitScale: number\n): Bounds {\n    const halfEquatorialRadius = (unitScale + (geoBox.maxAltitude ?? 0)) * 0.5;\n\n    const minLongitude = THREE.MathUtils.degToRad(geoBox.west);\n    const maxLongitude = THREE.MathUtils.degToRad(geoBox.east);\n\n    const minLongitudeQuadrant = getLongitudeQuadrant(minLongitude);\n    const maxLongitudeQuadrant = getLongitudeQuadrant(maxLongitude);\n\n    let xMin = Math.cos(minLongitude);\n    let xMax = xMin;\n    let yMin = Math.sin(minLongitude);\n    let yMax = yMin;\n\n    for (\n        let quadrantIndex = minLongitudeQuadrant + 1;\n        quadrantIndex <= maxLongitudeQuadrant;\n        quadrantIndex++\n    ) {\n        const x = ((quadrantIndex + 1) & 1) * ((quadrantIndex & 2) - 1);\n        xMin = Math.min(x, xMin);\n        xMax = Math.max(x, xMax);\n\n        const y = (quadrantIndex & 1) * ((quadrantIndex & 2) - 1);\n        yMin = Math.min(y, yMin);\n        yMax = Math.max(y, yMax);\n    }\n\n    const cosMaxLongitude = Math.cos(maxLongitude);\n    xMin = Math.min(cosMaxLongitude, xMin);\n    xMax = Math.max(cosMaxLongitude, xMax);\n\n    const sinMaxLongitude = Math.sin(maxLongitude);\n    yMin = Math.min(sinMaxLongitude, yMin);\n    yMax = Math.max(sinMaxLongitude, yMax);\n\n    const xCenter = (xMax + xMin) * halfEquatorialRadius;\n    const xExtent = (xMax - xMin) * halfEquatorialRadius;\n\n    const yCenter = (yMax + yMin) * halfEquatorialRadius;\n    const yExtent = (yMax - yMin) * halfEquatorialRadius;\n\n    // Calculate Z boundaries.\n    const minLatitude = THREE.MathUtils.degToRad(geoBox.south);\n    const maxLatutide = THREE.MathUtils.degToRad(geoBox.north);\n\n    const zMax = Math.sin(maxLatutide);\n    const zMin = Math.sin(minLatitude);\n\n    const zCenter = (zMax + zMin) * halfEquatorialRadius;\n    const zExtent = (zMax - zMin) * halfEquatorialRadius;\n\n    worldBox.min.x = xCenter - xExtent;\n    worldBox.min.y = yCenter - yExtent;\n    worldBox.min.z = zCenter - zExtent;\n    worldBox.max.x = xCenter + xExtent;\n    worldBox.max.y = yCenter + yExtent;\n    worldBox.max.z = zCenter + zExtent;\n\n    return worldBox;\n}\n\n/**\n * Computes the spherical projection of the given geo coordinates.\n *\n * @param geoPoint - The geo coordinates.\n * @param worldpoint - The resulting world coordinates.\n */\nfunction project<WorldCoordinates extends Vector3Like>(\n    geoPoint: GeoCoordinatesLike,\n    worldpoint: WorldCoordinates,\n    unitScale: number\n): typeof worldpoint {\n    const radius = unitScale + (geoPoint.altitude ?? 0);\n    const latitude = THREE.MathUtils.degToRad(geoPoint.latitude);\n    const longitude = THREE.MathUtils.degToRad(geoPoint.longitude);\n    const cosLatitude = Math.cos(latitude);\n    worldpoint.x = radius * cosLatitude * Math.cos(longitude);\n    worldpoint.y = radius * cosLatitude * Math.sin(longitude);\n    worldpoint.z = radius * Math.sin(latitude);\n    return worldpoint;\n}\n\nclass SphereProjection extends Projection {\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Spherical;\n\n    /** @override */\n    worldExtent<Bounds extends Box3Like>(\n        _minElevation: number,\n        maxElevation: number,\n        result: Bounds = (new THREE.Box3() as Box3Like) as Bounds\n    ): Bounds {\n        const radius = this.unitScale + maxElevation;\n        result.min.x = -radius;\n        result.min.y = -radius;\n        result.min.z = -radius;\n        result.max.x = radius;\n        result.max.y = radius;\n        result.max.z = radius;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result: WorldCoordinates = MathUtils.newVector3(0, 0, 0) as WorldCoordinates\n    ): WorldCoordinates {\n        return project(geoPoint, result, this.unitScale);\n    }\n\n    /** @override */\n    unprojectPoint(point: Vector3Like): GeoCoordinates {\n        const parallelRadiusSq = point.x * point.x + point.y * point.y;\n        const parallelRadius = Math.sqrt(parallelRadiusSq);\n        const v = point.z / parallelRadius;\n\n        if (isNaN(v)) {\n            return GeoCoordinates.fromRadians(0, 0, -this.unitScale);\n        }\n\n        const radius = Math.sqrt(parallelRadiusSq + point.z * point.z);\n\n        return GeoCoordinates.fromRadians(\n            Math.atan(v),\n            Math.atan2(point.y, point.x),\n            radius - this.unitScale\n        );\n    }\n\n    /** @override */\n    unprojectAltitude(point: Vector3Like): number {\n        const parallelRadiusSq = point.x * point.x + point.y * point.y + point.z * point.z;\n        return Math.sqrt(parallelRadiusSq) - EarthConstants.EQUATORIAL_RADIUS;\n    }\n\n    /** @override */\n    projectBox<Bounds extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result: Bounds = (new THREE.Box3() as Box3Like) as Bounds\n    ): Bounds {\n        if (isBox3Like(result)) {\n            return makeBox3(geoBox, result, this.unitScale);\n        } else if (isOrientedBox3Like(result)) {\n            if (geoBox.longitudeSpan >= 90) {\n                const bounds = makeBox3(geoBox, new THREE.Box3() as Box3Like, this.unitScale);\n                MathUtils.newVector3(1, 0, 0, result.xAxis);\n                MathUtils.newVector3(0, 1, 0, result.yAxis);\n                MathUtils.newVector3(0, 0, 1, result.zAxis);\n                result.position.x = (bounds.max.x + bounds.min.x) * 0.5;\n                result.position.y = (bounds.max.y + bounds.min.y) * 0.5;\n                result.position.z = (bounds.max.z + bounds.min.z) * 0.5;\n                result.extents.x = (bounds.max.x - bounds.min.x) * 0.5;\n                result.extents.y = (bounds.max.y - bounds.min.y) * 0.5;\n                result.extents.z = (bounds.max.z - bounds.min.z) * 0.5;\n                return result;\n            }\n\n            const { south, west, north, east, center: mid } = geoBox;\n            const midX = mid.longitude;\n            const midY = mid.latitude;\n            const cosSouth = Math.cos(THREE.MathUtils.degToRad(south));\n            const sinSouth = Math.sin(THREE.MathUtils.degToRad(south));\n            const cosWest = Math.cos(THREE.MathUtils.degToRad(west));\n            const sinWest = Math.sin(THREE.MathUtils.degToRad(west));\n            const cosNorth = Math.cos(THREE.MathUtils.degToRad(north));\n            const sinNorth = Math.sin(THREE.MathUtils.degToRad(north));\n            const cosEast = Math.cos(THREE.MathUtils.degToRad(east));\n            const sinEast = Math.sin(THREE.MathUtils.degToRad(east));\n            const cosMidX = Math.cos(THREE.MathUtils.degToRad(midX));\n            const sinMidX = Math.sin(THREE.MathUtils.degToRad(midX));\n            const cosMidY = Math.cos(THREE.MathUtils.degToRad(midY));\n            const sinMidY = Math.sin(THREE.MathUtils.degToRad(midY));\n\n            // Build the orientation of the OBB using the normal vector and its partial derivates.\n\n            // the sperical coordinates of the mid point of the geobox.\n            MathUtils.newVector3(cosMidX * cosMidY, sinMidX * cosMidY, sinMidY, result.zAxis);\n\n            // the partial derivates of the normal vector.\n            MathUtils.newVector3(-sinMidX, cosMidX, 0, result.xAxis);\n            MathUtils.newVector3(-cosMidX * sinMidY, -sinMidX * sinMidY, cosMidY, result.yAxis);\n\n            let width: number;\n            let minY: number;\n            let maxY: number;\n\n            if (south >= 0) {\n                // abs(dot(southWest - southEast, xAxis))\n                width = Math.abs(\n                    cosSouth * (cosMidX * (sinWest - sinEast) + sinMidX * (cosEast - cosWest))\n                );\n\n                // dot(south, yAxis)\n                minY = cosMidY * sinSouth - sinMidY * cosSouth;\n\n                // dot(northEast, zAxis)\n                maxY =\n                    cosMidY * sinNorth -\n                    sinMidY * cosNorth * (cosMidX * cosEast + sinMidX * sinEast);\n            } else {\n                if (north <= 0) {\n                    // abs(dot(northWest - northEast, xAxis))\n                    width = Math.abs(\n                        cosNorth * (cosMidX * (sinWest - sinEast) + sinMidX * (cosEast - cosWest))\n                    );\n\n                    // dot(north, yAxis)\n                    maxY = cosMidY * sinNorth - sinMidY * cosNorth;\n                } else {\n                    // abs(dot(west - east, xAxis))\n                    width = Math.abs(cosMidX * (sinWest - sinEast) + sinMidX * (cosEast - cosWest));\n\n                    // dot(northEast, yAxis)\n                    maxY =\n                        cosMidY * sinNorth -\n                        sinMidY * cosNorth * (sinMidX * sinEast + cosMidX * cosEast);\n                }\n\n                // dot(southEast, yAxis)\n                minY =\n                    cosMidY * sinSouth -\n                    sinMidY * cosSouth * (cosMidX * cosEast + sinMidX * sinEast);\n            }\n\n            const rMax = (this.unitScale + (geoBox.maxAltitude ?? 0)) * 0.5;\n            const rMin = (this.unitScale + (geoBox.minAltitude ?? 0)) * 0.5;\n\n            // min(dot(southEast, zAxis), dot(northEast, zAxis))\n\n            const d = cosMidY * (cosMidX * cosEast + sinMidX * sinEast);\n\n            const minZ = Math.min(\n                cosNorth * d + sinNorth * sinMidY,\n                cosSouth * d + sinSouth * sinMidY\n            );\n\n            MathUtils.newVector3(\n                width * rMax,\n                (maxY - minY) * rMax,\n                rMax - minZ * rMin,\n                result.extents\n            );\n\n            MathUtils.newVector3(0, (minY + maxY) * rMax, rMax + rMax, result.position);\n\n            apply(result.xAxis, result.yAxis, result.zAxis, result.position);\n\n            result.position.x = result.position.x - result.zAxis.x * result.extents.z;\n            result.position.y = result.position.y - result.zAxis.y * result.extents.z;\n            result.position.z = result.position.z - result.zAxis.z * result.extents.z;\n\n            return result;\n        }\n\n        throw new Error(\"Invalid bounding box\");\n    }\n\n    /** @override */\n    unprojectBox(_worldBox: Box3Like): GeoBox {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    /** @override */\n    getScaleFactor(_worldPoint: Vector3Like): number {\n        return 1;\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return lengthOfVector3(worldPoint) - this.unitScale;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        const scale = this.unitScale / (lengthOfVector3(worldPoint) || 1);\n        worldPoint.x *= scale;\n        worldPoint.y *= scale;\n        worldPoint.z *= scale;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 0 };\n        }\n        const scale = 1 / (lengthOfVector3(worldPoint) || 1);\n        normal.x = worldPoint.x * scale;\n        normal.y = worldPoint.y * scale;\n        normal.z = worldPoint.z * scale;\n        return normal;\n    }\n\n    /** @override */\n    reprojectPoint(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result?: Vector3Like\n    ): Vector3Like {\n        if (sourceProjection === mercatorProjection || sourceProjection === webMercatorProjection) {\n            const { x, y, z } = worldPos;\n            const r = this.unitScale;\n            const mx = x / r - Math.PI;\n            const my = y / r - Math.PI;\n            const w = Math.exp(my);\n            const d = w * w;\n            const gx = (2 * w) / (d + 1);\n            const gy = (d - 1) / (d + 1);\n            const scale = r + z;\n\n            if (result === undefined) {\n                result = {} as Vector3Like;\n            }\n\n            result.x = Math.cos(mx) * gx * scale;\n            result.y = Math.sin(mx) * gx * scale;\n            result.z = gy * scale;\n\n            if (sourceProjection === webMercatorProjection) {\n                result.z = -result.z;\n            }\n\n            return result;\n        }\n\n        return super.reprojectPoint(sourceProjection, worldPos, result!);\n    }\n\n    /** @override */\n    localTangentSpace(\n        point: GeoCoordinatesLike | Vector3Like,\n        result: TransformLike\n    ): TransformLike {\n        let geoPoint: GeoCoordinatesLike;\n        if (isGeoCoordinatesLike(point)) {\n            this.projectPoint(point, result.position);\n            geoPoint = point;\n        } else {\n            MathUtils.copyVector3(point, result.position);\n            geoPoint = this.unprojectPoint(point);\n        }\n\n        const latitude = THREE.MathUtils.degToRad(geoPoint.latitude);\n        const longitude = THREE.MathUtils.degToRad(geoPoint.longitude);\n\n        const cosLongitude = Math.cos(longitude);\n        const sinLongitude = Math.sin(longitude);\n        const cosLatitude = Math.cos(latitude);\n        const sinLatitude = Math.sin(latitude);\n\n        MathUtils.newVector3(\n            cosLongitude * cosLatitude,\n            sinLongitude * cosLatitude,\n            sinLatitude,\n            result.zAxis\n        );\n\n        MathUtils.newVector3(-sinLongitude, cosLongitude, 0, result.xAxis);\n\n        MathUtils.newVector3(\n            -cosLongitude * sinLatitude,\n            -sinLongitude * sinLatitude,\n            cosLatitude,\n            result.yAxis\n        );\n        return result;\n    }\n}\n\nexport const sphereProjection: Projection = new SphereProjection(EarthConstants.EQUATORIAL_RADIUS);\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\n/**\n *\n * https://en.wikipedia.org/wiki/Transverse_Mercator_projection\n * http://mathworld.wolfram.com/MercatorProjection.html\n *\n */\nclass TransverseMercatorProjection extends Projection {\n    /**\n     * Like in regular Mercator projection, there are two points on sphere\n     * with radius about 5 degrees, that is out of projected space.\n     *\n     *\n     * in regular Mercator these points are:\n     *     (90, any), (-90, any)\n     *\n     * and in transverse Mercator:\n     *     (0, 90), (0, -90)\n     *\n     * So, in transverse we need to compute distnce to poles, and clamp if\n     * radius is exceeded\n     */\n    static clampGeoPoint(geoPoint: GeoCoordinatesLike, _unitScale: number) {\n        const lat = geoPoint.latitude;\n        const lon = geoPoint.longitude;\n\n        const r = TransverseMercatorUtils.POLE_RADIUS;\n        const rsq = TransverseMercatorUtils.POLE_RADIUS_SQ;\n\n        const nearestQuarter = Math.round(lon / 90);\n        const deltaLon = nearestQuarter * 90 - lon;\n        if (nearestQuarter % 2 === 0 || Math.abs(deltaLon) > r) {\n            return geoPoint;\n        }\n\n        const deltaLat = lat - 0;\n        const distanceToPoleSq = deltaLon * deltaLon + deltaLat * deltaLat;\n        if (distanceToPoleSq < rsq) {\n            const distanceToPole = Math.sqrt(distanceToPoleSq);\n            const scale = (r - distanceToPole) / distanceToPole;\n            // const quarter = ((nearestQuarter % 4) + 4) % 4;\n            // const dir = quarter === 1 ? -1 : quarter === 3 ? 1 : 0;\n            const dir = 1;\n            const offsetLon = deltaLon === 0 && deltaLat === 0 ? r * dir : deltaLon;\n            return new GeoCoordinates(lat + deltaLat * scale, lon + offsetLon * scale);\n        }\n\n        return geoPoint;\n    }\n\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    private readonly m_phi0: number = 0;\n    private readonly m_lambda0: number = 0;\n\n    constructor(readonly unitScale: number) {\n        super(unitScale);\n    }\n\n    /** @override */\n    getScaleFactor(worldPoint: Vector3Like): number {\n        return Math.cosh((worldPoint.x / this.unitScale - 0.5) * 2 * Math.PI);\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        result.min.x = 0;\n        result.min.y = 0;\n        result.min.z = minAltitude;\n        result.max.x = this.unitScale;\n        result.max.y = this.unitScale;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        if (!result) {\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n\n        const clamped = TransverseMercatorProjection.clampGeoPoint(geoPoint, this.unitScale);\n        const normalLon = clamped.longitude / 360 + 0.5;\n        const offset = normalLon === 1 ? 0 : Math.floor(normalLon);\n        const phi = THREE.MathUtils.degToRad(clamped.latitude);\n        const lambda = THREE.MathUtils.degToRad(clamped.longitude - offset * 360) - this.m_lambda0;\n\n        const B = Math.cos(phi) * Math.sin(lambda);\n        // result.x = 1/2 * Math.log((1 + B) / (1 - B));\n        result.x = Math.atanh(B);\n        result.y = Math.atan2(Math.tan(phi), Math.cos(lambda)) - this.m_phi0;\n\n        const outScale = 0.5 / Math.PI;\n        result.x =\n            this.unitScale * (THREE.MathUtils.clamp(result.x * outScale + 0.5, 0, 1) + offset);\n        result.y = this.unitScale * THREE.MathUtils.clamp(result.y * outScale + 0.5, 0, 1);\n\n        result.z = geoPoint.altitude ?? 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const tau = Math.PI * 2;\n        const nx = worldPoint.x / this.unitScale;\n        const ny = worldPoint.y / this.unitScale;\n        const offset = nx === 1 ? 0 : Math.floor(nx);\n        const x = tau * (nx - 0.5 - offset);\n        const y = tau * (ny - 0.5);\n        const z = worldPoint.z || 0;\n\n        const D = y + this.m_phi0;\n\n        const phi = Math.asin(Math.sin(D) / Math.cosh(x));\n        const lambda = this.m_lambda0 + Math.atan2(Math.sinh(x), Math.cos(D)) + offset * tau;\n\n        const geoPoint = GeoCoordinates.fromRadians(phi, lambda, z);\n        return geoPoint;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const { north, south, east, west } = geoBox;\n\n        const pointsToCheck = [\n            geoBox.center,\n            geoBox.northEast,\n            geoBox.southWest,\n            new GeoCoordinates(south, east),\n            new GeoCoordinates(north, west)\n        ];\n\n        const E = TransverseMercatorUtils.POLE_EDGE_DEG;\n\n        const containsWestCut = west < -90 && east > -90;\n        const containsEastCut = west < 90 && east > 90;\n        const containsCenterX = west < 0 && east > 0;\n        const containsCenterY = west < E && east > -E && north > 0 && south < 0;\n\n        if (containsWestCut) {\n            pointsToCheck.push(new GeoCoordinates(north, -90));\n            pointsToCheck.push(new GeoCoordinates(south, -90));\n        }\n\n        if (containsEastCut) {\n            pointsToCheck.push(new GeoCoordinates(north, 90));\n            pointsToCheck.push(new GeoCoordinates(south, 90));\n        }\n\n        if (containsCenterX) {\n            pointsToCheck.push(new GeoCoordinates(north, 0));\n            pointsToCheck.push(new GeoCoordinates(south, 0));\n        }\n\n        if (containsCenterY) {\n            pointsToCheck.push(new GeoCoordinates(0, west));\n            pointsToCheck.push(new GeoCoordinates(0, east));\n        }\n\n        TransverseMercatorUtils.alignLatitude(pointsToCheck, pointsToCheck[0]);\n\n        const projected = pointsToCheck.map(p => this.projectPoint(p));\n        const vx = projected.map(p => p.x);\n        const vy = projected.map(p => p.y);\n        const vz = projected.map(p => p.z);\n\n        const minX = Math.min(...vx);\n        const minY = Math.min(...vy);\n        const minZ = Math.min(...vz);\n        const maxX = Math.max(...vx);\n        const maxY = Math.max(...vy);\n        const maxZ = Math.max(...vz);\n\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        if (isBox3Like(result)) {\n            result.min.x = minX;\n            result.min.y = minY;\n            result.min.z = minZ;\n            result.max.x = maxX;\n            result.max.y = maxY;\n            result.max.z = maxZ;\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = (minX + maxX) / 2;\n            result.position.y = (minY + maxY) / 2;\n            result.position.z = (minZ + maxZ) / 2;\n            result.extents.x = (maxX - minX) / 2;\n            result.extents.y = (maxY - minY) / 2;\n            result.extents.z = (maxZ - minZ) / 2;\n        } else {\n            throw new Error(\"invalid bounding box\");\n        }\n        return result;\n    }\n\n    /**\n     * There are 8 sub-regions on entire projection space\n     * where both longitude and latitude preserve direction.\n     * If bounding box hits more than one region, it should be splitted\n     * into sub-boxes by regions, (un)projected and then united again.\n     *\n     *\n     * directions in form [latitude / longitude]:\n     *    1 ┌─────────|─────────┐\n     *      │ dr / dl | dl / ul │\n     * 0.75 ----------|----------\n     *      │ ur / dr | ul / ur │\n     * 0.5  ----------|----------\n     *      │ ul / ur | ur / dr │\n     * 0.25 ----------|----------\n     *      │ dl / ul | dr / dl │\n     *      └─────────|─────────┘\n     *     0         0.5        1\n     *     @override\n     */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const s = this.unitScale;\n\n        const min = worldBox.min;\n        const max = worldBox.max;\n        const pointsToCheck = [\n            { x: (min.x + max.x) / 2, y: (min.y + max.y) / 2, z: 0 },\n            min,\n            max,\n            { x: min.x, y: max.y, z: 0 },\n            { x: max.x, y: min.y, z: 0 }\n        ];\n\n        const center = 0.5 * s;\n        const lowerQ = 0.25 * s;\n        const upperQ = 0.75 * s;\n\n        const containsCenterX = min.x < center && max.x > center;\n        const containsCenterY = min.y < center && max.y > center;\n        const containsLowerQY = min.y < lowerQ && max.y > lowerQ;\n        const containsUpperQY = min.y < upperQ && max.y > upperQ;\n\n        if (containsCenterY) {\n            pointsToCheck.push({ x: min.x, y: center, z: 0 });\n            pointsToCheck.push({ x: max.x, y: center, z: 0 });\n\n            if (containsCenterX) {\n                pointsToCheck.push({ x: center, y: center, z: 0 });\n            }\n        }\n        if (containsLowerQY) {\n            pointsToCheck.push({ x: min.x, y: lowerQ, z: 0 });\n            pointsToCheck.push({ x: max.x, y: lowerQ, z: 0 });\n\n            if (containsCenterX) {\n                pointsToCheck.push({ x: center, y: lowerQ, z: 0 });\n            }\n        }\n        if (containsUpperQY) {\n            pointsToCheck.push({ x: min.x, y: upperQ, z: 0 });\n            pointsToCheck.push({ x: max.x, y: upperQ, z: 0 });\n\n            if (containsCenterX) {\n                pointsToCheck.push({ x: center, y: upperQ, z: 0 });\n            }\n        }\n\n        const geoPoints = pointsToCheck.map(p => this.unprojectPoint(p));\n        TransverseMercatorUtils.alignLongitude(geoPoints, geoPoints[0]);\n\n        const latitudes = geoPoints.map(g => g.latitude);\n        const longitudes = geoPoints.filter(g => Math.abs(g.latitude) < 90).map(g => g.longitude);\n        const altitudes = geoPoints.map(g => g.altitude ?? 0);\n\n        const minGeo = new GeoCoordinates(\n            Math.min(...latitudes),\n            Math.min(...longitudes),\n            Math.min(...altitudes)\n        );\n\n        const maxGeo = new GeoCoordinates(\n            Math.max(...latitudes),\n            Math.max(...longitudes),\n            Math.max(...altitudes)\n        );\n\n        const geoBox = GeoBox.fromCoordinates(minGeo, maxGeo);\n        return geoBox;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: -1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = -1;\n        }\n        return normal;\n    }\n}\n\nexport class TransverseMercatorUtils {\n    static POLE_EDGE: number = 1.4844222297453323;\n    static POLE_EDGE_DEG: number = THREE.MathUtils.radToDeg(TransverseMercatorUtils.POLE_EDGE);\n    static POLE_RADIUS: number = 90 - TransverseMercatorUtils.POLE_EDGE_DEG;\n    static POLE_RADIUS_SQ: number = Math.pow(TransverseMercatorUtils.POLE_RADIUS, 2);\n\n    /**\n     * There are two regions on projected space that have same geo coordinates,\n     * it's the entire lines   { x: [0..1], y: 0 } and { x: [0..1], y: 1 }\n     * they both have geo coordinates of   (0, [-90..+90])\n     * and should be aligned somehow to fall into first or second region\n     * to make proper bounding boxes, tile bounds, etc.\n     */\n    static alignLatitude(points: GeoCoordinatesLike[], referencePoint: GeoCoordinatesLike): void {\n        const EPSILON = 1e-9;\n\n        for (const point of points) {\n            if (point.latitude === 0) {\n                point.latitude = referencePoint.latitude * EPSILON;\n            }\n        }\n    }\n\n    /**\n     * There are two regions on projected plane,\n     * { x: 0.5, y: [0..0.25] }    and    { x: 0.5, y: [0.75..1] }\n     * that represent longitude edge where -180 and +180 met.\n     * Points falling in this regions should be aligned to get proper boxes etc.\n     */\n    static alignLongitude(points: GeoCoordinatesLike[], referencePoint: GeoCoordinatesLike): void {\n        const bad = referencePoint.longitude < 0 ? 180 : -180;\n        const good = referencePoint.longitude < 0 ? -180 : 180;\n\n        for (const point of points) {\n            if (point.longitude === bad) {\n                point.longitude = good;\n            }\n        }\n    }\n}\n\n/**\n * Transverse Mercator {@link Projection} used to convert geo coordinates to world coordinates\n * and vice versa.\n */\nexport const transverseMercatorProjection: Projection = new TransverseMercatorProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { Box3Like } from \"../math/Box3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { Projection } from \"../projection/Projection\";\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\nimport { TileKey } from \"./TileKey\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * `FlatTileBoundingBoxGenerator` generates bounding boxes in world and geo coordinates for a given\n * TilingScheme.\n */\nexport class FlatTileBoundingBoxGenerator {\n    private readonly m_tilingScheme: TilingScheme;\n    private readonly m_worldDimensions: Vector3Like;\n    private readonly m_worldBox: Box3Like;\n    /**\n     * Creates a new `FlatTileBoundingBoxGenerator` that can generate bounding boxes for the given\n     * TilingScheme.\n     *\n     * @param tilingScheme - The {@link TilingScheme} used to compute bounding boxes.\n     * @param minElevation - The minimum elevation in meters.\n     * @param maxElevation - The maximum elevation in meters.\n     */\n    constructor(\n        readonly tilingScheme: TilingScheme,\n        readonly minElevation: number = 0,\n        readonly maxElevation: number = 0\n    ) {\n        this.m_tilingScheme = tilingScheme;\n        this.m_worldBox = tilingScheme.projection.worldExtent(minElevation, maxElevation);\n        const { min, max } = this.m_worldBox;\n        this.m_worldDimensions = { x: max.x - min.x, y: max.y - min.y, z: max.z - min.z };\n    }\n\n    /**\n     * Returns the {@link Projection} of the {@link TilingScheme}.\n     */\n    get projection(): Projection {\n        return this.m_tilingScheme.projection;\n    }\n\n    /**\n     * Returns the {@link SubdivisionScheme} of the {@link TilingScheme}.\n     */\n    get subdivisionScheme(): SubdivisionScheme {\n        return this.m_tilingScheme.subdivisionScheme;\n    }\n\n    /**\n     * Returns the bounding box in world coordinates of the given {@link TileKey}.\n     *\n     * Example:\n     * ```typescript\n     * const worldBounds = new THREE.Box3();\n     * generator.getWorldBox(geoBox, worldBounds);\n     * console.log(worldBounds.getCenter());\n     * ```\n     *\n     * @param tileKey - The TileKey.\n     * @param result - The optional object used to store the resulting bounding box in world\n     * coordinates.\n     */\n    getWorldBox(tileKey: TileKey, result?: Box3Like): Box3Like {\n        const level = tileKey.level;\n        const levelDimensionX = this.subdivisionScheme.getLevelDimensionX(level);\n        const levelDimensionY = this.subdivisionScheme.getLevelDimensionY(level);\n        const sizeX = this.m_worldDimensions.x / levelDimensionX;\n        const sizeY = this.m_worldDimensions.y / levelDimensionY;\n        const originX = this.m_worldBox.min.x + sizeX * tileKey.column;\n        const originY = this.m_worldBox.min.y + sizeY * tileKey.row;\n\n        if (!result) {\n            result = new THREE.Box3();\n        }\n\n        result.min.x = originX;\n        result.min.y = originY;\n        result.min.z = this.m_worldBox.min.z;\n        result.max.x = originX + sizeX;\n        result.max.y = originY + sizeY;\n        result.max.z = this.m_worldBox.max.z;\n        return result;\n    }\n\n    /**\n     * Returns the bounding box in geo coordinates for the given {@link TileKey}.\n     *\n     * Example:\n     * ```typescript\n     * const geoBox = generator.getGeoBox(worldBounds);\n     * console.log(geoBox.center);\n     * ```\n     *\n     * @param tileKey - The {@link TileKey}.\n     */\n    getGeoBox(tileKey: TileKey): GeoBox {\n        const worldBox = this.getWorldBox(tileKey);\n        return this.projection.unprojectBox(worldBox);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\n\nclass HalfQuadTreeSubdivisionScheme implements SubdivisionScheme {\n    getSubdivisionX(): number {\n        return 2;\n    }\n\n    getSubdivisionY(level: number): number {\n        return level === 0 ? 1 : 2;\n    }\n\n    getLevelDimensionX(level: number): number {\n        return 1 << level;\n    }\n\n    getLevelDimensionY(level: number): number {\n        return level !== 0 ? 1 << (level - 1) : 1;\n    }\n}\n\n/**\n * A {@link SubdivisionScheme} used to represent half quadtrees.\n * This particular subdivision scheme is\n * used by the HERE tiling scheme.\n */\nexport const halfQuadTreeSubdivisionScheme: SubdivisionScheme = new HalfQuadTreeSubdivisionScheme();\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { normalizedEquirectangularProjection } from \"../projection/EquirectangularProjection\";\nimport { halfQuadTreeSubdivisionScheme } from \"./HalfQuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * {@link TilingScheme} used by most of the data published by HERE.\n *\n * The `hereTilingScheme` features a half quadtree subdivision scheme and an equirectangular\n * projection.\n */\nexport const hereTilingScheme = new TilingScheme(\n    halfQuadTreeSubdivisionScheme,\n    normalizedEquirectangularProjection\n);\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { mercatorProjection } from \"../projection/MercatorProjection\";\nimport { quadTreeSubdivisionScheme } from \"./QuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * The {@link TilingScheme} used by the HERE web tiles.\n *\n * The `mercatorTilingScheme` features a quadtree subdivision scheme and a Mercator projection.\n */\nexport const mercatorTilingScheme = new TilingScheme(quadTreeSubdivisionScheme, mercatorProjection);\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { transverseMercatorProjection } from \"../projection/TransverseMercatorProjection\";\nimport { quadTreeSubdivisionScheme } from \"./QuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * A {@link TilingScheme} featuring quadtree subdivision scheme and\n * transverse Mercator projection.\n */\nexport const polarTilingScheme = new TilingScheme(\n    quadTreeSubdivisionScheme,\n    transverseMercatorProjection\n);\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { TileKey } from \"./TileKey\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * A class used to represent a quadtree.\n */\nexport class QuadTree {\n    /**\n     * Constructs a new `QuadTree` for the given {@link TilingScheme}.\n     *\n     * Example:\n     * ```typescript\n     * const quadTree = new QuadTree(hereTilingScheme);\n     * const geoBox = quadTree.getGeoBox(tileKey);\n     * console.log(geoBox.center);\n     * ```\n     *\n     * @param tilingScheme - The TilingScheme used by this `QuadTree`.\n     */\n    constructor(readonly tilingScheme: TilingScheme) {}\n\n    /**\n     * Visits this `QuadTree` and invoke the given accept method\n     * with the current {@link TileKey} and\n     * its bounding box in geo coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const geoPos = new GeoCoordinates(latitude, longitude);\n     * const quadTree = new QuadTree(hereTilingScheme);\n     * quadTree.visit((tileKey, geoBox) => {\n     *     if (geoBox.contains(geoPos)) {\n     *         console.log(\"tile\", tileKey, \"contains\", geoPos);\n     *         return tileKey.level < 14; // stop visiting the quadtree if the level is >= 14.\n     *     }\n     *     return false; // stop visiting the quadtree,\n     *                   // the tile's geoBox doesn't contain the given coordinates.\n     * });\n     * ```\n     *\n     * @param accept - A function that takes a {@link TileKey}\n     * and its bounding box in geo coordinates\n     * and returns `true` if the visit of the `QuadTree`\n     * should continue; otherwise `false`.\n     */\n    visit(accept: (tileKey: TileKey, geoBox: GeoBox) => boolean) {\n        this.visitTileKey(TileKey.fromRowColumnLevel(0, 0, 0), accept);\n    }\n\n    /**\n     * Visits the subtree starting from the given tile.\n     *\n     * @param tileKey - The root of the subtree that should be visited.\n     * @param accept - A function that takes a {@link TileKey}\n     *                 and its bounding box in geo coordinates\n     *                 and returns `true` if the visit of the\n     *                 `QuadTree` should continue; otherwise `false`.\n     */\n    visitTileKey(tileKey: TileKey, accept: (tileKey: TileKey, geoBox: GeoBox) => boolean) {\n        const geoBox = this.tilingScheme.getGeoBox(tileKey);\n\n        if (!accept(tileKey, geoBox)) {\n            return;\n        }\n\n        for (const subTileKey of this.tilingScheme.getSubTileKeys(tileKey)) {\n            this.visitTileKey(subTileKey, accept);\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\n\nclass QuadTreeSubdivisionScheme implements SubdivisionScheme {\n    getSubdivisionX(): number {\n        return 2;\n    }\n\n    getSubdivisionY(): number {\n        return 2;\n    }\n\n    getLevelDimensionX(level: number): number {\n        return 1 << level;\n    }\n\n    getLevelDimensionY(level: number): number {\n        return 1 << level;\n    }\n}\n\n/**\n * {@link SubdivisionScheme} representing a quadtree.\n */\nexport const quadTreeSubdivisionScheme: SubdivisionScheme = new QuadTreeSubdivisionScheme();\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TileKey } from \"./TileKey\";\n\nexport class SubTiles implements Iterable<TileKey> {\n    constructor(public tileKey: TileKey, public sizeX: number, public sizeY: number) {}\n\n    [Symbol.iterator](): Iterator<TileKey> {\n        return this.sizeX === 2 && this.sizeY === 2\n            ? SubTiles.ZCurveIterator(this.tileKey)\n            : SubTiles.RowColumnIterator(this.tileKey, this.sizeX, this.sizeY);\n    }\n}\n\nexport namespace SubTiles {\n    export function* RowColumnIterator(\n        parentKey: TileKey,\n        sizeX: number,\n        sizeY: number\n    ): Iterator<TileKey> {\n        for (let y = 0; y < sizeY; y++) {\n            for (let x = 0; x < sizeX; x++) {\n                yield TileKey.fromRowColumnLevel(\n                    parentKey.row * sizeY + y,\n                    parentKey.column * sizeX + x,\n                    parentKey.level + 1\n                );\n            }\n        }\n    }\n\n    export function* ZCurveIterator(parentKey: TileKey): Iterator<TileKey> {\n        for (let i = 0; i < 4; i++) {\n            yield TileKey.fromRowColumnLevel(\n                (parentKey.row << 1) | (i >> 1),\n                (parentKey.column << 1) | (i & 1),\n                parentKey.level + 1\n            );\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/** @hidden */\nconst powerOfTwo = [\n    0x1,\n    0x2,\n    0x4,\n    0x8,\n    0x10,\n    0x20,\n    0x40,\n    0x80,\n    0x100,\n    0x200,\n    0x400,\n    0x800,\n    0x1000,\n    0x2000,\n    0x4000,\n    0x8000,\n    0x10000,\n    0x20000,\n    0x40000,\n    0x80000,\n    0x100000,\n    0x200000,\n    0x400000,\n    0x800000,\n    0x1000000,\n    0x2000000,\n    0x4000000,\n    0x8000000,\n    0x10000000,\n    0x20000000,\n    0x40000000,\n    0x80000000,\n    0x100000000,\n    0x200000000,\n    0x400000000,\n    0x800000000,\n    0x1000000000,\n    0x2000000000,\n    0x4000000000,\n    0x8000000000,\n    0x10000000000,\n    0x20000000000,\n    0x40000000000,\n    0x80000000000,\n    0x100000000000,\n    0x200000000000,\n    0x400000000000,\n    0x800000000000,\n    0x1000000000000,\n    0x2000000000000,\n    0x4000000000000,\n    0x8000000000000,\n    0x10000000000000 // Math.pow(2, 52), highest bit that can be set correctly.\n];\n\n/**\n * The `TileKey` instances are used to address a tile in a quadtree.\n *\n * A tile key is defined by a row, a column, and a level. The tree has a root at level 0, with one\n * single tile. On every level, each tile is divided into four children (therefore the name\n * quadtree).\n *\n * Within each [[level]], any particular tile is addressed with [[row]] and [[column]]. The number\n * of rows and columns in each level is 2 to the power of the level. This means: On level 0, only\n * one tile exists, [[columnsAtLevel]]() and [[rowsAtLevel]]() are both 1. On level 1, 4 tiles\n * exist, in 2 rows and 2 columns. On level 2 we have 16 tiles, in 4 rows and 4 columns. And so on.\n *\n * A tile key is usually created using [[fromRowColumnLevel]]() method.\n *\n * `TileKey` instances are immutable, all members return new instances of `TileKey` and do not\n * modify the original object.\n *\n * Utility functions like [[parent]](), [[changedLevelBy]](), and [[changedLevelTo]]() allow for\n * easy vertical navigation of the tree. The number of available rows and columns in the tile's\n * level is given with [[rowCount]]() and [[columnCount]]().\n *\n * Tile keys can be created from and converted into various alternative formats:\n *\n *  - [[toQuadKey]]() / [[fromQuadKey]]() - string representation 4-based\n *  - [[toHereTile]]() / [[fromHereTile]]() - string representation 10-based\n *  - [[mortonCode]]() / [[fromMortonCode]]() - number representation\n *\n * Note - as JavaScript's number type can hold 53 bits in its mantissa, only levels up to 26 can be\n * represented in the number representation returned by [[mortonCode]]().\n */\nexport class TileKey {\n    /**\n     * Creates a tile key.\n     *\n     * @param row - The requested row. Must be less than 2 to the power of level.\n     * @param column - The requested column. Must be less than 2 to the power of level.\n     * @param level - The requested level.\n     */\n    static fromRowColumnLevel(row: number, column: number, level: number): TileKey {\n        return new TileKey(row, column, level);\n    }\n\n    /**\n     * Creates a tile key from a quad string.\n     *\n     * The quad string can be created with [[toQuadKey]].\n     *\n     * @param quadkey - The quadkey to convert.\n     * @returns A new instance of `TileKey`.\n     */\n    static fromQuadKey(quadkey: string): TileKey {\n        const level = quadkey.length;\n        let row = 0;\n        let column = 0;\n        for (let i = 0; i < quadkey.length; ++i) {\n            const mask = 1 << i;\n            const d = parseInt(quadkey.charAt(level - i - 1), 10);\n            if (d & 0x1) {\n                column |= mask;\n            }\n            if (d & 0x2) {\n                row |= mask;\n            }\n        }\n        return TileKey.fromRowColumnLevel(row, column, level);\n    }\n\n    /**\n     * Creates a tile key from a numeric Morton code representation.\n     *\n     * You can convert a tile key into a numeric Morton code with [[mortonCode]].\n     *\n     * @param quadKey64 - The Morton code to be converted.\n     * @returns A new instance of {@link TileKey}.\n     */\n    static fromMortonCode(quadKey64: number): TileKey {\n        let level = 0;\n        let row = 0;\n        let column = 0;\n        let quadKey = quadKey64;\n        while (quadKey > 1) {\n            const mask: number = 1 << level;\n\n            if (quadKey & 0x1) {\n                column |= mask;\n            }\n            if (quadKey & 0x2) {\n                row |= mask;\n            }\n\n            level++;\n            quadKey = (quadKey - (quadKey & 0x3)) / 4;\n        }\n        const result = TileKey.fromRowColumnLevel(row, column, level);\n        result.m_mortonCode = quadKey64;\n        return result;\n    }\n\n    /**\n     * Creates a tile key from a heretile code string.\n     *\n     * The string can be created with [[toHereTile]].\n     *\n     * @param quadkey64 - The string representation of the HERE tile key.\n     * @returns A new instance of `TileKey`.\n     */\n    static fromHereTile(quadkey64: string): TileKey {\n        const result = TileKey.fromMortonCode(parseInt(quadkey64, 10));\n        result.m_hereTile = quadkey64;\n        return result;\n    }\n\n    /**\n     * Returns the number of available columns at a given level.\n     *\n     * This is 2 to the power of the level.\n     *\n     * @param level - The level for which to return the number of columns.\n     * @returns The available columns at the given level.\n     */\n    static columnsAtLevel(level: number): number {\n        return Math.pow(2, level);\n    }\n\n    /**\n     * Returns the number of available rows at a given level.\n     *\n     * This is 2 to the power of the level.\n     *\n     * @param level - The level for which to return the number of rows.\n     * @returns The available rows at the given level.\n     */\n    static rowsAtLevel(level: number): number {\n        return Math.pow(2, level);\n    }\n\n    /**\n     * Returns the closest matching `TileKey` in a cartesian coordinate system.\n     *\n     * @param level - The level for the tile key.\n     * @param coordX - The X coordinate.\n     * @param coordY - The Y coordinate.\n     * @param totalWidth - The maximum X coordinate.\n     * @param totalHeight - The maximum Y coordinate.\n     * @returns A new tile key at the given level that includes the given coordinates.\n     */\n    static atCoords(\n        level: number,\n        coordX: number,\n        coordY: number,\n        totalWidth: number,\n        totalHeight: number\n    ): TileKey {\n        return TileKey.fromRowColumnLevel(\n            Math.floor(coordY / (totalHeight / TileKey.rowsAtLevel(level))),\n            Math.floor(coordX / (totalWidth / TileKey.columnsAtLevel(level))),\n            level\n        );\n    }\n\n    /**\n     * Computes the Morton code of the parent tile key of the given Morton code.\n     *\n     * Note: The parent key of the root key is the root key itself.\n     *\n     * @param mortonCode - A Morton code, for example, obtained from [[mortonCode]].\n     * @returns The Morton code of the parent tile.\n     */\n    static parentMortonCode(mortonCode: number): number {\n        return Math.floor(mortonCode / 4);\n    }\n\n    private m_mortonCode?: number;\n    private m_hereTile?: string;\n\n    /**\n     * Constructs a new immutable instance of a `TileKey`.\n     *\n     * For the better readability, {@link TileKey.fromRowColumnLevel} should be preferred.\n     *\n     * Note - row and column must not be greater than the maximum rows/columns for the given level.\n     *\n     * @param row - Represents the row in the quadtree.\n     * @param column - Represents the column in the quadtree.\n     * @param level - Represents the level in the quadtree.\n     */\n    constructor(readonly row: number, readonly column: number, readonly level: number) {}\n\n    /**\n     * Returns a tile key representing the parent of the tile addressed by this tile key.\n     *\n     * Throws an exception is this tile is already the root.\n     */\n    parent(): TileKey {\n        if (this.level === 0) {\n            throw new Error(\"Cannot get the parent of the root tile key\");\n        }\n        return TileKey.fromRowColumnLevel(this.row >>> 1, this.column >>> 1, this.level - 1);\n    }\n\n    /**\n     * Returns a new tile key at a level that differs from this tile's level by delta.\n     *\n     * Equivalent to `changedLevelTo(level() + delta)`.\n     *\n     * Note - root key is returned if `delta` is smaller than the level of this tile key.\n     *\n     * @param delta - The numeric difference between the current level and the requested level.\n     */\n    changedLevelBy(delta: number): TileKey {\n        const level = Math.max(0, this.level + delta);\n        let row = this.row;\n        let column = this.column;\n\n        if (delta >= 0) {\n            row <<= delta;\n            column <<= delta;\n        } else {\n            row >>>= -delta;\n            column >>>= -delta;\n        }\n        return TileKey.fromRowColumnLevel(row, column, level);\n    }\n\n    /**\n     * Returns a new tile key at the requested level.\n     *\n     * If the requested level is smaller than the tile's level, then the key of an ancestor of this\n     * tile is returned. If the requested level is larger than the tile's level, then the key of\n     * first child or grandchild of this tile is returned, for example, the child with the lowest\n     * row and column number. If the requested level equals this tile's level, then the tile key\n     * itself is returned. If the requested level is negative, the root tile key is returned.\n     *\n     * @param level - The requested level.\n     */\n    changedLevelTo(level: number): TileKey {\n        return this.changedLevelBy(level - this.level);\n    }\n\n    /**\n     * Converts the tile key to a numeric code representation.\n     *\n     * You can create a tile key from a numeric Morton code with [[fromMortonCode]].\n     *\n     * Note - only levels <= 26 are supported.\n     */\n    mortonCode(): number {\n        if (this.m_mortonCode === undefined) {\n            let column = this.column;\n            let row = this.row;\n\n            let result = powerOfTwo[this.level << 1];\n            for (let i = 0; i < this.level; ++i) {\n                if (column & 0x1) {\n                    result += powerOfTwo[2 * i];\n                }\n                if (row & 0x1) {\n                    result += powerOfTwo[2 * i + 1];\n                }\n                column >>>= 1;\n                row >>>= 1;\n            }\n\n            this.m_mortonCode = result;\n        }\n        return this.m_mortonCode;\n    }\n\n    /**\n     * Converts the tile key into a string for using in REST API calls.\n     *\n     * The string is a quadkey Morton code representation as a string.\n     *\n     * You can convert back from a quadkey string with [[fromHereTile]].\n     */\n    toHereTile(): string {\n        if (this.m_hereTile === undefined) {\n            this.m_hereTile = this.mortonCode().toString();\n        }\n        return this.m_hereTile;\n    }\n\n    /**\n     * Converts the tile key into a string for using in REST API calls.\n     *\n     * If the tile is the root tile, the quadkey is '-'. Otherwise the string is a number to the\n     * base of 4, but without the leading 1, with the following properties:\n     *  1. the number of digits equals the level.\n     *  2. removing the last digit gives the parent tile's quadkey string, i.e. appending 0,1,2,3\n     *     to a quadkey string gives the tiles's children.\n     *\n     * You can convert back from a quadkey string with [[fromQuadKey]].\n     */\n    toQuadKey(): string {\n        let result: string = \"\";\n\n        for (let i = this.level; i > 0; --i) {\n            const mask = 1 << (i - 1);\n\n            const col = (this.column & mask) !== 0;\n            const row = (this.row & mask) !== 0;\n\n            if (col && row) {\n                result += \"3\";\n            } else if (row) {\n                result += \"2\";\n            } else if (col) {\n                result += \"1\";\n            } else {\n                result += \"0\";\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Equality operator.\n     *\n     * @param qnr - The tile key to compare to.\n     * @returns `true` if this tile key has identical row, column and level, `false` otherwise.\n     */\n    equals(qnr: TileKey): boolean {\n        return this.row === qnr.row && this.column === qnr.column && this.level === qnr.level;\n    }\n\n    /**\n     * Returns the absolute quadkey that is constructed from its sub quadkey.\n     *\n     * @param sub - The sub key.\n     * @returns The absolute tile key in the quadtree.\n     */\n    addedSubKey(sub: string): TileKey {\n        const subQuad = TileKey.fromQuadKey(sub.length === 0 ? \"-\" : sub);\n        const child = this.changedLevelBy(subQuad.level);\n        return TileKey.fromRowColumnLevel(\n            child.row + subQuad.row,\n            child.column + subQuad.column,\n            child.level\n        );\n    }\n\n    /**\n     * Returns the absolute quadkey that is constructed from its sub HERE tile key.\n     *\n     * @param sub - The sub HERE key.\n     * @returns The absolute tile key in the quadtree.\n     */\n    addedSubHereTile(sub: string): TileKey {\n        const subQuad = TileKey.fromHereTile(sub);\n        const child = this.changedLevelBy(subQuad.level);\n        return TileKey.fromRowColumnLevel(\n            child.row + subQuad.row,\n            child.column + subQuad.column,\n            child.level\n        );\n    }\n\n    /**\n     * Returns a sub quadkey that is relative to its parent.\n     *\n     * This function can be used to generate sub keys that are relative to a parent that is delta\n     * levels up in the quadtree.\n     *\n     * This function can be used to create shortened keys for quads on lower levels if the parent is\n     * known.\n     *\n     * Note - the sub quadkeys fit in a 16-bit unsigned integer if the `delta` is smaller than 8. If\n     * `delta` is smaller than 16, the sub quadkey fits into an unsigned 32-bit integer.\n     *\n     * Deltas larger than 16 are not supported.\n     *\n     * @param delta - The number of levels relative to its parent quadkey. Must be greater or equal\n     * to 0 and smaller than 16.\n     * @returns The quadkey relative to its parent that is `delta` levels up the tree.\n     */\n    getSubHereTile(delta: number): string {\n        const key = this.mortonCode();\n        const msb = 1 << (delta * 2);\n        const mask = msb - 1;\n        const result = (key & mask) | msb;\n        return result.toString();\n    }\n\n    /**\n     * Returns the number of available rows in the tile's [[level]].\n     *\n     * This is 2 to the power of the level.\n     */\n    rowCount(): number {\n        return TileKey.rowsAtLevel(this.level);\n    }\n\n    /**\n     * Returns the number of available columns in the tile's [[level]].\n     *\n     * This is 2 to the power of the level.\n     */\n    columnCount(): number {\n        return TileKey.columnsAtLevel(this.level);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { TileKey } from \"./TileKey\";\nimport { TilingScheme } from \"./TilingScheme\";\n\nexport const powerOfTwo = (() => {\n    let val = 0.5;\n    return new Array(53).fill(0).map(() => (val *= 2));\n})();\n\nexport namespace TileKeyUtils {\n    export function geoCoordinatesToTileKey(\n        tilingScheme: TilingScheme,\n        geoPoint: GeoCoordinatesLike,\n        level: number\n    ): TileKey | null {\n        const projection = tilingScheme.projection;\n        const worldPoint = projection.projectPoint(geoPoint);\n\n        return worldCoordinatesToTileKey(tilingScheme, worldPoint, level);\n    }\n\n    export function worldCoordinatesToTileKey(\n        tilingScheme: TilingScheme,\n        worldPoint: Vector3Like,\n        level: number\n    ): TileKey | null {\n        const projection = tilingScheme.projection;\n        const subdivisionScheme = tilingScheme.subdivisionScheme;\n\n        const cx = subdivisionScheme.getLevelDimensionX(level);\n        const cy = subdivisionScheme.getLevelDimensionY(level);\n\n        const { min, max } = projection.worldExtent(0, 0);\n        const worldSizeX = max.x - min.x;\n        const worldSizeY = max.y - min.y;\n\n        if (worldPoint.x < min.x || worldPoint.x > max.x) {\n            return null;\n        }\n\n        if (worldPoint.y < min.y || worldPoint.y > max.y) {\n            return null;\n        }\n\n        const column = Math.min(cx - 1, Math.floor((cx * (worldPoint.x - min.x)) / worldSizeX));\n        const row = Math.min(cy - 1, Math.floor((cy * (worldPoint.y - min.y)) / worldSizeY));\n\n        return TileKey.fromRowColumnLevel(row, column, level);\n    }\n\n    export function geoRectangleToTileKeys(\n        tilingScheme: TilingScheme,\n        geoBox: GeoBox,\n        level: number\n    ): TileKey[] {\n        const wrap = (value: number, lower: number, upper: number) => {\n            if (value < lower) {\n                return upper - ((lower - value) % (upper - lower));\n            }\n\n            return lower + ((value - lower) % (upper - lower));\n        };\n\n        const clamp = (x: number, minVal: number, maxVal: number) => {\n            return Math.min(Math.max(x, minVal), maxVal);\n        };\n\n        // Clamp at the poles and wrap around the international date line.\n        const southWestLongitude = wrap(geoBox.southWest.longitudeInRadians, -Math.PI, Math.PI);\n        const southWestLatitude = clamp(\n            geoBox.southWest.latitudeInRadians,\n            -(Math.PI * 0.5),\n            Math.PI * 0.5\n        );\n        const northEastLongitude = wrap(geoBox.northEast.longitudeInRadians, -Math.PI, Math.PI);\n        const northEastLatitude = clamp(\n            geoBox.northEast.latitudeInRadians,\n            -(Math.PI * 0.5),\n            Math.PI * 0.5\n        );\n        const minTileKey = TileKeyUtils.geoCoordinatesToTileKey(\n            tilingScheme,\n            GeoCoordinates.fromRadians(southWestLatitude, southWestLongitude),\n            level\n        );\n        const maxTileKey = TileKeyUtils.geoCoordinatesToTileKey(\n            tilingScheme,\n            GeoCoordinates.fromRadians(northEastLatitude, northEastLongitude),\n            level\n        );\n        const columnCount = tilingScheme.subdivisionScheme.getLevelDimensionX(level);\n\n        if (!minTileKey || !maxTileKey) {\n            throw new Error(\"Invalid coordinates\");\n        }\n\n        const minColumn = minTileKey.column;\n        let maxColumn = maxTileKey.column;\n\n        // wrap around case\n        if (southWestLongitude > northEastLongitude) {\n            if (maxColumn !== minColumn) {\n                maxColumn += columnCount;\n            } else {\n                // do not duplicate\n                maxColumn += columnCount - 1;\n            }\n        }\n\n        const minRow = Math.min(minTileKey.row, maxTileKey.row);\n        const maxRow = Math.max(minTileKey.row, maxTileKey.row);\n\n        const keys = new Array<TileKey>();\n\n        for (let row = minRow; row <= maxRow; ++row) {\n            for (let column = minColumn; column <= maxColumn; ++column) {\n                keys.push(TileKey.fromRowColumnLevel(row, column % columnCount, level));\n            }\n        }\n\n        return keys;\n    }\n\n    /**\n     * Creates a unique key based on the supplied parameters. Note, the uniqueness is bounded by the\n     * bitshift. The [[TileKey.mortonCode()]] supports currently up to 26 levels (this is because\n     * 26*2 equals 52, and 2^52 is the highest bit that can be set in an integer in Javascript), the\n     * bitshift reduces this accordingly, so given the default bitshift of four, we support up to 24\n     * levels. Given the current support up to level 19 this should be fine.\n     *\n     * @param tileKey - The unique {@link @here/harp-geoutils#TileKey}\n     *                  from which to compute the unique key.\n     * @param offset - How much the given {@link @here/harp-geoutils#TileKey} is offset\n     * @param bitshift - How much space we have to store the offset. The default of 4 means we have\n     *      enough space to store 16 unique tiles in a single view.\n     */\n    export function getKeyForTileKeyAndOffset(\n        tileKey: TileKey,\n        offset: number,\n        bitshift: number = 4\n    ) {\n        const shiftedOffset = getShiftedOffset(offset, bitshift);\n        return tileKey.mortonCode() + shiftedOffset;\n    }\n\n    /**\n     * Extracts the offset and morton key from the given key (must be created by:\n     * [[getKeyForTileKeyAndOffset]])\n     *\n     * Note, we can't use bitshift operators in Javascript because they work on 32-bit integers, and\n     * would truncate the numbers, hence using powers of two.\n     *\n     * @param key - Key to extract offset and morton key.\n     * @param bitshift - How many bits to shift by, must be the same as was used when creating the\n     * key.\n     */\n    export function extractOffsetAndMortonKeyFromKey(key: number, bitshift: number = 4) {\n        let offset = 0;\n        let mortonCode = key;\n        let i = 0;\n        // Compute the offset\n        for (; i < bitshift; i++) {\n            // Note, we use 52, because 2^53-1 is the biggest value, the highest value\n            // that can be set is the bit in the 52th position.\n            const num = powerOfTwo[52 - i];\n            if (mortonCode >= num) {\n                mortonCode -= num;\n                offset += powerOfTwo[bitshift - 1 - i];\n            }\n        }\n        // We subtract half of the total amount, this undoes what is computed in getShiftedOffset\n        offset -= powerOfTwo[bitshift - 1];\n        return { offset, mortonCode };\n    }\n\n    /**\n     * Returns the key of the parent. Key must have been computed using the function\n     * [[getKeyForTileKeyAndOffset]].\n     *\n     * @param calculatedKey - Key to decompose\n     * @param bitshift - Bit shift used to create the key\n     */\n    export function getParentKeyFromKey(calculatedKey: number, bitshift: number = 4) {\n        const { offset, mortonCode } = extractOffsetAndMortonKeyFromKey(calculatedKey, bitshift);\n        const parentTileKey = TileKey.fromMortonCode(TileKey.parentMortonCode(mortonCode));\n        return getKeyForTileKeyAndOffset(parentTileKey, offset, bitshift);\n    }\n\n    /**\n     * Packs the supplied offset into the high bits, where the highbits are between 2^52 and\n     * 2^(52-bitshift).\n     *\n     * Offsets are wrapped around, to fit in the offsetBits. In practice, this doesn't really\n     * matter, this is primarily used to find a unique id, if there is an offset 10, which is\n     * wrapped to 2, it doesn't matter, because the offset of 10 is still stored in the tile.\n     * What can be a problem though is that the cache gets filled up and isn't emptied.\n     *\n     * Note, because bit shifting in JavaScript works on 32 bit integers, we use powers of 2 to set\n     * the high bits instead.\n     *\n     * @param offset - Offset to pack into the high bits.\n     * @param offsetBits - How many bits to use to pack the offset.\n     */\n    function getShiftedOffset(offset: number, offsetBits: number = 4) {\n        let result = 0;\n        const totalOffsetsToStore = powerOfTwo[offsetBits];\n        //Offsets are stored by adding half 2 ^ (bitshift - 1), i.e.half of the max amount stored,\n        //and then wrapped based on this value.For example, given a bitshift of 3, and an offset -\n        //3, it would have 4 added(half of 2 ^ 3), and be stored as 1, 3 would have 4 added and be\n        //stored as 7, 4 would be added with 4 and be stored as 0 (it wraps around).\n        offset += totalOffsetsToStore / 2;\n        while (offset < 0) {\n            offset += totalOffsetsToStore;\n        }\n        while (offset >= totalOffsetsToStore) {\n            offset -= totalOffsetsToStore;\n        }\n        // Offset is now a number between >= 0 and < totalOffsetsToStore\n        for (let i = 0; i < offsetBits && offset > 0; i++) {\n            // 53 is used because 2^53-1 is the biggest number that Javascript can represent as an\n            // integer safely.\n            if (offset & 0x1) {\n                result += powerOfTwo[53 - offsetBits + i];\n            }\n            offset >>>= 1;\n        }\n        return result;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\nimport { SubTiles } from \"./SubTiles\";\nimport { TileKey } from \"./TileKey\";\n\nexport class TileTreeTraverse {\n    private readonly m_subdivisionScheme: SubdivisionScheme;\n\n    constructor(subdivisionScheme: SubdivisionScheme) {\n        this.m_subdivisionScheme = subdivisionScheme;\n    }\n\n    subTiles(tileKey: TileKey): Iterable<TileKey> {\n        const divX = this.m_subdivisionScheme.getSubdivisionX(tileKey.level);\n        const divY = this.m_subdivisionScheme.getSubdivisionY(tileKey.level);\n\n        return new SubTiles(tileKey, divX, divY);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like } from \"../math/Box3Like\";\nimport { Projection } from \"../projection/Projection\";\nimport { FlatTileBoundingBoxGenerator } from \"./FlatTileBoundingBoxGenerator\";\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\nimport { TileKey } from \"./TileKey\";\nimport { TileKeyUtils } from \"./TileKeyUtils\";\nimport { TileTreeTraverse } from \"./TileTreeTraverse\";\n\n/**\n * The `TilingScheme` represents how the data is tiled.\n */\nexport class TilingScheme {\n    readonly boundingBoxGenerator: FlatTileBoundingBoxGenerator;\n    readonly tileTreeTraverse: TileTreeTraverse;\n\n    /**\n     * Constructs a new `TilingScheme` with the given subdivision scheme and projection.\n     *\n     * @param subdivisionScheme - The subdivision scheme used by this `TilingScheme`.\n     * @param projection - The projection used by this `TilingScheme`.\n     */\n    constructor(readonly subdivisionScheme: SubdivisionScheme, readonly projection: Projection) {\n        this.boundingBoxGenerator = new FlatTileBoundingBoxGenerator(this);\n        this.tileTreeTraverse = new TileTreeTraverse(subdivisionScheme);\n    }\n\n    /**\n     * Returns the sub tile keys of the given tile.\n     *\n     * @param tileKey - The {@link TileKey}.\n     * @returns The list of the sub tile keys.\n     */\n    getSubTileKeys(tileKey: TileKey): Iterable<TileKey> {\n        return this.tileTreeTraverse.subTiles(tileKey);\n    }\n\n    /**\n     * Gets the {@link TileKey} from the given geo position and level.\n     *\n     * @param geoPoint - The position in geo coordinates.\n     * @param level - The level of the resulting `TileKey`.\n     */\n    getTileKey(geoPoint: GeoCoordinatesLike, level: number): TileKey | null {\n        return TileKeyUtils.geoCoordinatesToTileKey(this, geoPoint, level);\n    }\n\n    /**\n     * Gets the list of {@link TileKey}s contained in the given {@link GeoBox}.\n     *\n     * @param geoBox - The bounding box in geo coordinates.\n     * @param level - The level of the resulting `TileKey`.\n     */\n    getTileKeys(geoBox: GeoBox, level: number): TileKey[] {\n        return TileKeyUtils.geoRectangleToTileKeys(this, geoBox, level);\n    }\n\n    /**\n     * Returns the bounding box in geo coordinates for the given {@link TileKey}.\n     *\n     * @param tileKey - The `TileKey`.\n     */\n    getGeoBox(tileKey: TileKey): GeoBox {\n        return this.boundingBoxGenerator.getGeoBox(tileKey);\n    }\n\n    /**\n     * Returns the bounding box in world coordinates.\n     *\n     * @param tileKey - The `TileKey`.\n     * @param result - The optional object that will contain the resulting bounding box.\n     */\n    getWorldBox(tileKey: TileKey, result?: Box3Like): Box3Like {\n        return this.boundingBoxGenerator.getWorldBox(tileKey, result);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { webMercatorProjection } from \"../projection/MercatorProjection\";\nimport { quadTreeSubdivisionScheme } from \"./QuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * A {@link TilingScheme} featuring quadtree subdivision scheme and web Mercator projection.\n */\nexport const webMercatorTilingScheme = new TilingScheme(\n    quadTreeSubdivisionScheme,\n    webMercatorProjection\n);\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Projection } from \"@here/harp-geoutils\";\nimport { assert } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\n// Preallocate temp variables used during line generation.\nconst tmpV = new THREE.Vector3();\nconst tmpNormal = new THREE.Vector3();\nconst tmpTangent0 = new THREE.Vector3();\nconst tmpTangent1 = new THREE.Vector3();\nconst tmpBitangent = new THREE.Vector3();\nconst SEGMENT_OFFSET = 0.1;\n\n/**\n * Describes vertex attribute parameters of interleaved buffer.\n */\ninterface VertexAttributeDescriptor {\n    name: string;\n    itemSize: number;\n    offset: number;\n}\n\ninterface VertexDescriptor {\n    attributes: VertexAttributeDescriptor[];\n    stride: number;\n}\n\n/**\n * Declares all the vertex attributes used for rendering a line using the [[SolidLineMaterial]].\n */\n\n/** Base line vertex attributes. */\nconst LINE_VERTEX_ATTRIBUTES: VertexDescriptor = {\n    attributes: [\n        // The \"extrusionCoord\" is a vec4 which represents:\n        // xy: Extrusion coordinates\n        // sign(xy): Extrusion direction\n        // z: Line length\n        { name: \"extrusionCoord\", itemSize: 3, offset: 0 },\n        { name: \"position\", itemSize: 3, offset: 3 },\n        { name: \"tangent\", itemSize: 3, offset: 6 },\n        // HARP-17373: Original uniform name 'bitangent' due to shader compilation errors with Metal\n        // in Safari 15 on MacOS Monterrey and iPadOS 15.\n        { name: \"biTangent\", itemSize: 4, offset: 9 }\n    ],\n    stride: 13\n};\n\n/** Optional normal and uv coordinates. */\nconst NORMAL_UV_VERTEX_ATTRIBUTES: VertexDescriptor = {\n    attributes: [\n        { name: \"uv\", itemSize: 2, offset: LINE_VERTEX_ATTRIBUTES.stride },\n        { name: \"normal\", itemSize: 3, offset: LINE_VERTEX_ATTRIBUTES.stride + 2 }\n    ],\n    stride: 5\n};\n\n/** Base line vertex attributes plus normals and uv coordinates. */\nconst LINE_VERTEX_ATTRIBUTES_NUV: VertexDescriptor = {\n    attributes: [...LINE_VERTEX_ATTRIBUTES.attributes, ...NORMAL_UV_VERTEX_ATTRIBUTES.attributes],\n    stride: LINE_VERTEX_ATTRIBUTES.stride + NORMAL_UV_VERTEX_ATTRIBUTES.stride\n};\n\n/**\n * Declares all the vertex attributes used for rendering a line using the\n * [[HighPrecisionLineMaterial]].\n */\nconst HP_LINE_VERTEX_ATTRIBUTES: VertexDescriptor = {\n    attributes: [\n        { name: \"extrusionCoord\", itemSize: 2, offset: 0 },\n        { name: \"position\", itemSize: 3, offset: 2 },\n        { name: \"positionLow\", itemSize: 3, offset: 5 },\n        { name: \"tangent\", itemSize: 3, offset: 8 },\n        // HARP-17373: Original uniform name 'bitangent' due to shader compilation errors with Metal\n        // in Safari 15 on MacOS Monterrey and iPadOS 15.\n        { name: \"biTangent\", itemSize: 4, offset: 11 }\n    ],\n    stride: 15\n};\n\n/** High precision line vertex attributes plus normals and uv coordinates. */\nconst HP_LINE_VERTEX_ATTRIBUTES_NUV: VertexDescriptor = {\n    attributes: [\n        ...HP_LINE_VERTEX_ATTRIBUTES.attributes,\n        ...NORMAL_UV_VERTEX_ATTRIBUTES.attributes\n    ],\n    stride: HP_LINE_VERTEX_ATTRIBUTES.stride + NORMAL_UV_VERTEX_ATTRIBUTES.stride\n};\n\n/**\n * Class that holds the vertex and index attributes for a [[Lines]] object.\n */\nexport class LineGeometry {\n    vertices: number[] = [];\n    vertexColors: number[] = [];\n    indices: number[] = [];\n}\n\nfunction getVertexDescriptor(hasNormalsAndUvs: boolean, highPrecision: boolean): VertexDescriptor {\n    if (highPrecision) {\n        return hasNormalsAndUvs ? HP_LINE_VERTEX_ATTRIBUTES_NUV : HP_LINE_VERTEX_ATTRIBUTES;\n    } else {\n        return hasNormalsAndUvs ? LINE_VERTEX_ATTRIBUTES_NUV : LINE_VERTEX_ATTRIBUTES;\n    }\n}\n\n/**\n * Creates a [[LineGeometry]] object out of a polyline.\n *\n * @param center - Center of the polyline.\n * @param polyline - Array of `numbers` describing a polyline.\n * @param offsets - Array of `numbers` representing line segment offsets.\n * @param uvs - Array of `numbers` representing texture coordinates.\n * @param colors - Array of `numbers` describing a polyline's colors.\n * @param geometry - [[LineGeometry]] object used to store the vertex and index attributes.\n * @param highPrecision - If `true` will create high-precision vertex information.\n */\nexport function createLineGeometry(\n    center: THREE.Vector3,\n    polyline: ArrayLike<number>,\n    projection: Projection,\n    offsets?: ArrayLike<number>,\n    uvs?: ArrayLike<number>,\n    colors?: ArrayLike<number>,\n    geometry = new LineGeometry(),\n    highPrecision: boolean = false\n): LineGeometry {\n    if (polyline.length === 0) {\n        return geometry;\n    }\n\n    const stride = getVertexDescriptor(uvs !== undefined, highPrecision).stride;\n\n    const pointCount = polyline.length / 3;\n    const segments = new Array<number>(pointCount);\n    const tangents = new Array<number>(polyline.length - 3);\n    const baseVertex = geometry.vertices.length / stride;\n\n    const hasSegmentOffsets = offsets !== undefined && offsets.length > 0;\n    const hasTexCoords = uvs !== undefined && uvs.length > 0;\n    const vertexColors = colors !== undefined && colors.length && polyline.length;\n\n    assert(!hasSegmentOffsets || offsets!.length === pointCount);\n    assert(!hasTexCoords || uvs!.length / 2 === pointCount);\n    assert(!vertexColors || colors!.length === polyline.length);\n\n    // Compute segments and tangents.\n    let sum = SEGMENT_OFFSET;\n    segments[0] = sum;\n    for (let i = 0; i < pointCount - 1; ++i) {\n        let sqrLength = 0;\n        for (let j = 0; j < 3; ++j) {\n            const d = polyline[(i + 1) * 3 + j] - polyline[i * 3 + j];\n            tangents[i * 3 + j] = d;\n            sqrLength += d * d;\n        }\n        const len = Math.sqrt(sqrLength);\n        sum = sum + len;\n        segments[i + 1] = sum;\n    }\n\n    const lineCoverage = hasSegmentOffsets\n        ? Math.abs(offsets![offsets!.length - 1] - offsets![0])\n        : 1.0;\n    const lineLength = segments[segments.length - 1] / lineCoverage;\n\n    // Override the segments if offsets are explicitly provided.\n    if (hasSegmentOffsets) {\n        for (let i = 0; i < pointCount; ++i) {\n            segments[i] = offsets![i] * lineLength + SEGMENT_OFFSET;\n        }\n    }\n\n    // Check if we're working with a closed line.\n    let isClosed = true;\n    for (let j = 0; j < 3; ++j) {\n        isClosed = isClosed && polyline[j] === polyline[polyline.length - 3 + j];\n    }\n\n    const tmpVertices: number[] = [];\n\n    const addVertexPair = (\n        i: number,\n        T1: number,\n        T2: number,\n        segment: number,\n        extrusionCoord: number\n    ) => {\n        tmpVertices.length = 0;\n\n        // Store the segment and extrusionCoord attributes.\n        geometry.vertices.push(segment, extrusionCoord * -1, lineLength);\n        tmpVertices.push(segment, extrusionCoord * 1, lineLength);\n\n        // Store the position attribute (component-dependant).\n        for (let j = 0; j < 3; ++j) {\n            if (!highPrecision) {\n                geometry.vertices.push(polyline[i * 3 + j]);\n                tmpVertices.push(polyline[i * 3 + j]);\n            } else {\n                const highComp = Math.fround(polyline[i * 3 + j]);\n                const lowComp = polyline[i * 3 + j] - highComp;\n                geometry.vertices.push(highComp, lowComp);\n                tmpVertices.push(highComp, lowComp);\n            }\n            tmpNormal.setComponent(j, polyline[i * 3 + j]);\n        }\n\n        // Store the bitangent attribute (component-dependant).\n        for (let j = 0; j < 3; ++j) {\n            tmpTangent0.setComponent(j, tangents[T1 + j]);\n            tmpTangent1.setComponent(j, tangents[T2 + j]);\n        }\n        tmpTangent0.normalize();\n        geometry.vertices.push(tmpTangent0.x, tmpTangent0.y, tmpTangent0.z);\n        tmpVertices.push(tmpTangent0.x, tmpTangent0.y, tmpTangent0.z);\n        tmpNormal.add(center); // tmpNormal contains world position\n        projection.surfaceNormal(tmpNormal, tmpNormal);\n        const angle = computeBitangent(\n            tmpNormal,\n            tmpTangent0,\n            tmpTangent1.normalize(),\n            tmpBitangent\n        );\n        geometry.vertices.push(tmpBitangent.x, tmpBitangent.y, tmpBitangent.z, angle);\n        tmpVertices.push(tmpBitangent.x, tmpBitangent.y, tmpBitangent.z, angle);\n\n        if (hasTexCoords) {\n            // uvs\n            geometry.vertices.push(uvs![i * 2], uvs![i * 2 + 1]);\n            tmpVertices.push(uvs![i * 2], uvs![i * 2 + 1]);\n            // normals\n            geometry.vertices.push(tmpNormal.x, tmpNormal.y, tmpNormal.z);\n            tmpVertices.push(tmpNormal.x, tmpNormal.y, tmpNormal.z);\n        }\n\n        geometry.vertices.push(...tmpVertices);\n\n        // Add vertex colors (if supplied).\n        if (vertexColors) {\n            geometry.vertexColors.push(colors![i * 3], colors![i * 3 + 1], colors![i * 3 + 2]);\n            geometry.vertexColors.push(colors![i * 3], colors![i * 3 + 1], colors![i * 3 + 2]);\n        }\n    };\n\n    for (let i = 0; i < pointCount; ++i) {\n        // Retrieve the per-point tangents.\n        const T1 = isClosed && i === 0 ? tangents.length - 3 : Math.max(0, i - 1) * 3;\n        const T2 = isClosed && i === pointCount - 1 ? 0 : Math.min(i * 3, tangents.length - 3);\n\n        // Process v0 and v1.\n        if (i > 0) {\n            addVertexPair(i, T1, T2, segments[i - 1], segments[i]);\n        }\n\n        // Process v2 and v3.\n        if (i + 1 < pointCount) {\n            addVertexPair(\n                i,\n                T1,\n                T2,\n                segments[Math.min(i, segments.length - 1)] * -1,\n                segments[Math.min(i + 1, segments.length - 1)]\n            );\n        }\n    }\n\n    // Store the triangle indices in the final index buffer.\n    for (let i = 0; i < pointCount - 1; ++i) {\n        const base = baseVertex + i * 4;\n        geometry.indices.push(base, base + 1, base + 2, base + 2, base + 1, base + 3);\n    }\n\n    return geometry;\n}\n\n/**\n * Creates a [[LineGeometry]] object out of a polyline.\n *\n * @param polyline - Array of `numbers` describing a polyline.\n * @param colors - Array of `numbers` describing a polyline's colors.\n * @param geometry - [[LineGeometry]] object used to store the vertex and index attributes.\n */\nexport function createSimpleLineGeometry(\n    polyline: ArrayLike<number>,\n    colors?: ArrayLike<number>,\n    geometry = new LineGeometry()\n): LineGeometry {\n    if (polyline.length === 0) {\n        return geometry;\n    }\n\n    const pointCount = polyline.length / 3;\n    let index = geometry.vertices.length / 3;\n\n    const vertexColors = colors !== undefined && colors.length && polyline.length;\n\n    for (let i = 0; i < pointCount; ++i, index++) {\n        if (i > 0) {\n            geometry.indices.push(index);\n        }\n        if (i < pointCount - 1) {\n            geometry.indices.push(index);\n        }\n        for (let j = 0; j < 3; ++j) {\n            geometry.vertices.push(polyline[i * 3 + j]);\n            if (vertexColors) {\n                geometry.vertexColors.push(colors![i * 3 + j]);\n            }\n        }\n    }\n\n    return geometry;\n}\n\n/**\n * Class used to render groups (or batches) of width-variable lines (in the same tile).\n */\nexport class LineGroup {\n    /**\n     * Adds all the attribute data needed to a [[BufferGeometry]] object for rendering `Lines`.\n     *\n     * @param vertices - Array of vertex attributes.\n     * @param colors - Array of vertex colors.\n     * @param indices - Array of vertex indices.\n     * @param geometry - [[BufferGeometry]] object which will store all the `Lines` attribute data.\n     * @param hasNormalsAnUvs - Whether vertices have normal and uv coordinates as attributes.\n     * @param highPrecision - If `true` will create high-precision vertex information.\n     * @param isSimple - `true` to create simple (nonsolid, nonextruded) lines. Defaults to `false`.\n     */\n    static createGeometry(\n        vertices: ArrayLike<number>,\n        colors: ArrayLike<number>,\n        indices: ArrayLike<number>,\n        geometry: THREE.BufferGeometry,\n        hasNormalsAndUvs: boolean = false,\n        highPrecision = false,\n        isSimple = false\n    ): THREE.BufferGeometry {\n        if (isSimple) {\n            geometry.setAttribute(\n                \"position\",\n                new THREE.BufferAttribute(new Float32Array(vertices), 3)\n            );\n            if (colors.length === vertices.length) {\n                geometry.setAttribute(\n                    \"color\",\n                    new THREE.BufferAttribute(new Float32Array(colors), 3)\n                );\n            }\n            geometry.setIndex(new THREE.BufferAttribute(new Uint32Array(indices), 1));\n            return geometry;\n        } else {\n            const vertexDescriptor = getVertexDescriptor(hasNormalsAndUvs, highPrecision);\n\n            const buffer = new THREE.InterleavedBuffer(\n                new Float32Array(vertices),\n                vertexDescriptor.stride\n            );\n            vertexDescriptor.attributes.forEach(descr => {\n                const attribute = new THREE.InterleavedBufferAttribute(\n                    buffer,\n                    descr.itemSize,\n                    descr.offset,\n                    false\n                );\n                geometry.setAttribute(descr.name, attribute);\n            });\n            if (colors.length === vertices.length) {\n                geometry.setAttribute(\n                    \"color\",\n                    new THREE.BufferAttribute(new Float32Array(colors), 3)\n                );\n            }\n\n            geometry.setIndex(new THREE.BufferAttribute(new Uint32Array(indices), 1));\n\n            return geometry;\n        }\n    }\n\n    private readonly m_geometry: LineGeometry;\n\n    constructor(\n        readonly hasNormalsAndUvs: boolean = false,\n        readonly highPrecision: boolean = false,\n        readonly isSimple: boolean = false\n    ) {\n        this.m_geometry = new LineGeometry();\n    }\n\n    /**\n     * Clears the list of line strips.\n     */\n    clear() {\n        this.m_geometry.vertices = [];\n        this.m_geometry.vertexColors = [];\n        this.m_geometry.indices = [];\n    }\n\n    /**\n     * Add the given points to this line group.\n     *\n     * @param center - World center of the provided points.\n     * @param points - Sequence of (x,y,z) coordinates.\n     * @param offsets - Sequence of line segment offsets.\n     * @param uvs - Sequence of (u,v) texture coordinates.\n     * @param colors - Sequence of (r,g,b) color components.\n     */\n    add(\n        center: THREE.Vector3,\n        points: ArrayLike<number>,\n        projection: Projection,\n        offsets?: ArrayLike<number>,\n        uvs?: ArrayLike<number>,\n        colors?: ArrayLike<number>\n    ): this {\n        if (!this.isSimple) {\n            assert(!this.hasNormalsAndUvs || uvs !== undefined);\n            createLineGeometry(\n                center,\n                points,\n                projection,\n                offsets,\n                uvs,\n                colors,\n                this.m_geometry,\n                this.highPrecision\n            );\n        } else {\n            createSimpleLineGeometry(points, colors, this.m_geometry);\n        }\n        return this;\n    }\n\n    /**\n     * Returns the list of vertices.\n     */\n    get vertices(): number[] {\n        return this.m_geometry.vertices;\n    }\n\n    /**\n     * Returns the list of vertex colors.\n     */\n    get vertexColors(): number[] {\n        return this.m_geometry.vertexColors;\n    }\n\n    /**\n     * Returns the list of indices.\n     */\n    get indices(): number[] {\n        return this.m_geometry.indices;\n    }\n\n    /**\n     * Returns the list of [[VertexAttributeDescriptor]]s.\n     */\n    get vertexAttributes(): VertexAttributeDescriptor[] {\n        return getVertexDescriptor(this.hasNormalsAndUvs, this.highPrecision).attributes;\n    }\n\n    /**\n     * Returns the vertex attribute stride.\n     */\n    get stride(): number {\n        return getVertexDescriptor(this.hasNormalsAndUvs, this.highPrecision).stride;\n    }\n\n    /**\n     * Creates a three.js geometry.\n     */\n    createGeometry(geometry?: THREE.BufferGeometry): THREE.BufferGeometry {\n        if (geometry === undefined) {\n            geometry = new THREE.BufferGeometry();\n        }\n        return LineGroup.createGeometry(\n            this.m_geometry.vertices,\n            this.m_geometry.vertexColors,\n            this.m_geometry.indices,\n            geometry,\n            this.hasNormalsAndUvs,\n            this.highPrecision\n        );\n    }\n}\n\nfunction computeBitangent(\n    n: THREE.Vector3,\n    t0: THREE.Vector3,\n    t1: THREE.Vector3,\n    bt: THREE.Vector3\n): number {\n    let angle = 0;\n    if (!t0.equals(t1)) {\n        angle = Math.acos(t0.dot(t1)) * Math.sign(n.dot(tmpV.copy(t0).cross(t1)));\n        if (Number.isNaN(angle)) {\n            angle = 0;\n        }\n    }\n    bt.copy(t0).add(t1).normalize().cross(n).normalize();\n    return angle;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nconst UNIT_Z = new THREE.Vector3(0, 0, 1);\nconst POINTS = [0, 1, 2, 1, 3, 2];\nconst BEVEL_POINTS = [0, 1, 3, 3, 1, 2, 0, 3, 4, 5, 4, 3];\n\nconst SECTORS_IN_CIRCLE = 8;\nconst STEP = Math.PI / SECTORS_IN_CIRCLE;\n\n/**\n * Adds a half-circle geometry to original line\n *\n * @param x - The line end X (used as circle center X)\n * @param y - The line end Y (used as circle center Y)\n * @param lineAngle - The cap incline angle\n * @param radius - The cap (circle) radius\n * @param vertices - The input vertex buffer (cap vertices are added there)\n * @param indices - The input index buffer (cap indices are is added there)\n */\nfunction addCircle(\n    x: number,\n    y: number,\n    lineAngle: number,\n    radius: number,\n    vertices: number[],\n    indices: number[]\n) {\n    const baseVertex = vertices.length / 3;\n\n    // Add cap center to vertices directly (it doesn't need rotation)\n    vertices.push(x, y, 0);\n\n    for (let i = 0; i < SECTORS_IN_CIRCLE + 1; ++i) {\n        const angle = STEP * i + Math.PI / 2 + lineAngle; // Start angle is -90deg\n        vertices.push(x + radius * Math.cos(angle), y + radius * Math.sin(angle), 0);\n\n        indices.push(\n            baseVertex,\n            baseVertex + i + 1,\n            baseVertex + ((i + 1) % (SECTORS_IN_CIRCLE + 1)) + 1\n        );\n    }\n}\n\n/**\n * Returns the number of points in circle used for caps.\n *\n * @param lineWidth - Width of line.\n */\nexport function numCirclePoints(lineWidth: number): number {\n    return SECTORS_IN_CIRCLE + 1;\n}\n\n/**\n * Create a triangle mesh from the given polyline.\n *\n * @param points - Sequence of (x,y,z) coordinates.\n * @param width - The width of the extruded line.\n * @param vertices - The output vertex buffer.\n * @param indices - The output index buffer.\n * @param startWithCircle - `true` if the line should start will a circle.\n * @param endWithCircle - `true` if the line should end with a circle.\n */\nexport function triangulateLine(\n    points: ArrayLike<number>,\n    width: number,\n    vertices: number[],\n    indices: number[],\n    startWithCircle = true,\n    endWithCircle = startWithCircle\n) {\n    if (points.length < 3) {\n        return;\n    }\n\n    // This vector is used for computing cap angle\n    const angleVec = new THREE.Vector2();\n\n    if (startWithCircle) {\n        // Define lineAngle as (direction - origin) vector angle to X axis\n        const lineAngle =\n            points.length !== 3\n                ? angleVec.set(points[3] - points[0], points[4] - points[1]).angle()\n                : 0;\n\n        addCircle(points[0], points[1], lineAngle, width, vertices, indices);\n    }\n\n    const baseVertex = vertices.length / 3;\n\n    // bt = Bitangent (i.e. extrusion vector)\n    const prevBt = new THREE.Vector3();\n    const p = new THREE.Vector3(); // current point\n    const n = new THREE.Vector3(); // next point\n    const bt = new THREE.Vector3();\n    const averageBt = new THREE.Vector3();\n    const p0 = new THREE.Vector3();\n    const p1 = new THREE.Vector3();\n    const p2 = new THREE.Vector3();\n    const p3 = new THREE.Vector3();\n\n    const N = points.length / 3;\n\n    let vertexOffset = 0;\n    for (let i = 0; i < N; ++i) {\n        let useBevel = false;\n        p.set(points[i * 3], points[i * 3 + 1], points[i * 3 + 2]);\n\n        if (i + 1 < N) {\n            n.set(points[(i + 1) * 3], points[(i + 1) * 3 + 1], points[(i + 1) * 3 + 2]);\n\n            bt.copy(n).sub(p).normalize().cross(UNIT_Z);\n\n            averageBt.copy(bt);\n\n            if (i > 0) {\n                averageBt.add(prevBt).multiplyScalar(1.0 - 0.5 * bt.dot(prevBt));\n\n                useBevel = prevBt.angleTo(bt) > Math.PI / 2;\n\n                if (useBevel) {\n                    const inclineWidth = width / Math.cos(bt.angleTo(prevBt) / 2);\n\n                    p0.copy(bt).add(prevBt).normalize().multiplyScalar(-inclineWidth).add(p);\n\n                    p1.copy(prevBt).multiplyScalar(width).add(p);\n\n                    // p2 is used for \"miter\" connections\n                    p2.copy(bt).add(prevBt).normalize().multiplyScalar(inclineWidth).add(p);\n\n                    p3.copy(bt).multiplyScalar(width).add(p);\n                }\n            }\n\n            if (useBevel) {\n                vertices.push(\n                    p0.x,\n                    p0.y,\n                    p0.z,\n                    p1.x,\n                    p1.y,\n                    p1.z,\n                    p2.x,\n                    p2.y,\n                    p2.z,\n                    p3.x,\n                    p3.y,\n                    p3.z\n                );\n            } else {\n                p0.copy(averageBt).multiplyScalar(-width).add(p);\n\n                p1.copy(averageBt).multiplyScalar(width).add(p);\n\n                vertices.push(p0.x, p0.y, p0.z, p1.x, p1.y, p1.z);\n            }\n\n            prevBt.copy(bt);\n        } else {\n            p0.copy(prevBt).multiplyScalar(-width).add(p);\n\n            p1.copy(prevBt).multiplyScalar(width).add(p);\n\n            vertices.push(p0.x, p0.y, p0.z, p1.x, p1.y, p1.z);\n        }\n\n        if (i !== N - 1) {\n            (useBevel ? BEVEL_POINTS : POINTS).forEach(o =>\n                indices.push(baseVertex + vertexOffset + o)\n            );\n            vertexOffset += useBevel ? 4 : 2;\n        }\n    }\n\n    if (endWithCircle) {\n        const lineAngle =\n            points.length !== 2\n                ? angleVec\n                      .set(\n                          points[(N - 3) * 3] - points[(N - 2) * 3],\n                          points[(N - 3) * 3 + 1] - points[(N - 2) * 3 + 1]\n                      )\n                      .angle()\n                : Math.PI;\n\n        addCircle(\n            points[(N - 2) * 3],\n            points[(N - 2) * 3 + 1],\n            lineAngle,\n            width,\n            vertices,\n            indices\n        );\n    }\n}\n\n/**\n * Reconstruct the original points of a line from the vertices of the triangulated line.\n *\n * @param inBuffer - Buffer with vertices.\n * @param startOffset - Start index, will differ from `0` if the line has caps.\n * @returns Buffer containing the original points of the triangulated line.\n */\nexport function reconstructLine(inBuffer: Float32Array, startOffset: number): Float32Array {\n    const outBuffer = new Float32Array(inBuffer.length / 2);\n\n    for (let i = startOffset * 3, i2 = i * 2; i < outBuffer.length; i += 3, i2 += 6) {\n        outBuffer[i] = inBuffer[i2] + (inBuffer[i2 + 3] - inBuffer[i2]) * 0.5;\n        outBuffer[i + 1] = inBuffer[i2 + 1] + (inBuffer[i2 + 3 + 1] - inBuffer[i2 + 1]) * 0.5;\n        outBuffer[i + 2] = inBuffer[i2 + 2] + (inBuffer[i2 + 3 + 2] - inBuffer[i2 + 2]) * 0.5;\n    }\n    return outBuffer;\n}\n\n/**\n * Extract the line width from a triangulated line.\n *\n * @param inBuffer - Array of vertex elements of a triangulated line.\n * @param startIndex - Start index, will differ from `0` if the line has caps.\n */\nexport function reconstructLineWidth(inBuffer: Float32Array, startIndex: number): number {\n    const xd = inBuffer[startIndex * 2 + 3] - inBuffer[startIndex * 2];\n    const yd = inBuffer[startIndex * 2 + 3 + 1] - inBuffer[startIndex * 2 + 1];\n    const zd = inBuffer[startIndex * 2 + 3 + 2] - inBuffer[startIndex * 2 + 2];\n\n    return Math.sqrt(xd * xd + yd * yd + zd * zd) * 0.5;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/ThemedTileDecoder\";\nexport * from \"./lib/TileDecoderService\";\nexport * from \"./lib/TilerService\";\nexport * from \"./lib/WorkerService\";\nexport * from \"./lib/WorkerServiceManager\";\nexport * from \"./lib/GeoJsonTiler\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoJson, isFeatureGeometry, ITiler } from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils\";\n// @ts-ignore\nimport * as geojsonvtExport from \"geojson-vt\";\n\n// to be able to run tests on nodejs\nconst geojsonvt = geojsonvtExport.default ?? geojsonvtExport;\n\nconst EXTENT = 4096;\n\n// the factor used to compute the size of the buffer.\nconst BUFFER_FACTOR = 0.05;\n\n// align the buffer to the next integer multiple of 2.\nconst BUFFER = -(-Math.ceil(EXTENT * BUFFER_FACTOR) & -2);\n\ninterface GeoJsonVtIndex {\n    geojson: GeoJson;\n    getTile(level: number, column: number, row: number): any;\n}\n\nexport class GeoJsonTiler implements ITiler {\n    indexes: Map<string, GeoJsonVtIndex>;\n\n    constructor() {\n        this.indexes = new Map();\n    }\n\n    dispose() {\n        /* */\n    }\n\n    async connect(): Promise<void> {\n        return await Promise.resolve();\n    }\n\n    async registerIndex(indexId: string, input: URL | GeoJson): Promise<void> {\n        if (this.indexes.has(indexId)) {\n            return;\n        }\n        return await this.updateIndex(indexId, input);\n    }\n\n    async updateIndex(indexId: string, input: URL | GeoJson): Promise<void> {\n        if (input instanceof URL) {\n            const response = await fetch(input.href);\n            if (!response.ok) {\n                throw new Error(\n                    `GeoJsonTiler: Unable to fetch ${input.href}: ${response.statusText}`\n                );\n            }\n            input = (await response.json()) as GeoJson;\n        } else {\n            input = input as GeoJson;\n        }\n\n        // Generate ids only if input doesn't have them.\n        const generateId =\n            isFeatureGeometry(input) ||\n            input.type === \"GeometryCollection\" ||\n            (input.type === \"Feature\" && input.id === undefined) ||\n            (input.type === \"FeatureCollection\" &&\n                input.features.length > 0 &&\n                input.features[0].id === undefined);\n        const index = geojsonvt(input, {\n            maxZoom: 20, // max zoom to preserve detail on\n            indexMaxZoom: 5, // max zoom in the tile index\n            indexMaxPoints: 100000, // max number of points per tile in the tile index\n            tolerance: 3, // simplification tolerance (higher means simpler)\n            extent: EXTENT, // tile extent\n            buffer: BUFFER, // tile buffer on each side\n            lineMetrics: false, // whether to calculate line metrics\n            promoteId: null, // name of a feature property to be promoted to feature.id\n            generateId, // whether to generate feature ids. Cannot be used with promoteId\n            debug: 0 // logging level (0, 1 or 2)\n        });\n        index.geojson = input;\n\n        this.indexes.set(indexId, index);\n    }\n\n    async getTile(indexId: string, tileKey: TileKey): Promise<{}> {\n        const index = this.indexes.get(indexId);\n        if (index === undefined) {\n            throw new Error(\"Tile not found\");\n        }\n        const tile = index.getTile(tileKey.level, tileKey.column, tileKey.row);\n        if (tile !== null) {\n            tile.layer = indexId;\n        }\n        return tile || {};\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    DecodedTile,\n    DecoderOptions,\n    ITileDecoder,\n    OptionsMap,\n    TileInfo\n} from \"@here/harp-datasource-protocol\";\nimport { StyleSetEvaluator, StyleSetOptions } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { Projection, TileKey } from \"@here/harp-geoutils\";\nimport { LoggerManager } from \"@here/harp-utils\";\n\nconst logger = LoggerManager.instance.create(\"ThemedTileDecoder\");\n\n/**\n * `ThemedTileDecoder` implements an [[ITileDecoder]] which uses a [[Theme]] to apply styles to the\n * objects displayed in the map.\n *\n * By default, decoders are executed in web workers (using [[TileDecoderService]]) for performance\n * reasons.\n */\nexport abstract class ThemedTileDecoder implements ITileDecoder {\n    languages?: string[];\n    m_storageLevelOffset: number = 0;\n\n    protected m_styleSetEvaluator?: StyleSetEvaluator;\n    abstract connect(): Promise<void>;\n\n    dispose() {\n        // implemented in subclasses\n    }\n\n    decodeTile(\n        data: ArrayBufferLike | {},\n        tileKey: TileKey,\n        projection: Projection\n    ): Promise<DecodedTile | undefined> {\n        if (this.m_styleSetEvaluator === undefined) {\n            logger.info(\"cannot decode tile, as there is not style available\");\n            return Promise.resolve(undefined);\n        }\n\n        return this.decodeThemedTile(data, tileKey, this.m_styleSetEvaluator, projection);\n    }\n\n    getTileInfo(\n        data: ArrayBufferLike,\n        tileKey: TileKey,\n        projection: Projection\n    ): Promise<TileInfo | undefined> {\n        return Promise.resolve(undefined);\n    }\n\n    configure(options?: DecoderOptions, customOptions?: OptionsMap): void {\n        if (options?.styleSet !== undefined) {\n            this.m_styleSetEvaluator = new StyleSetEvaluator(options as StyleSetOptions);\n        }\n        if (options?.languages !== undefined) {\n            this.languages = options.languages;\n        }\n        if (customOptions !== undefined && customOptions.storageLevelOffset !== undefined) {\n            this.m_storageLevelOffset = customOptions.storageLevelOffset;\n        }\n    }\n\n    /**\n     * Create a [[DecodedTile]] from binary tile data and a theme description in form of a\n     * [[StyleSetEvaluator]].\n     *\n     * @param data - Binary data in form of [[ArrayBufferLike]], or any object.\n     * @param tileKey - Quadtree address of tile.\n     * @param styleSetEvaluator - Processor of [[Theme]], identifies styling techniques applicable\n     *                            to individual objects.\n     * @param projection - Projection used by the individual data sources.\n     */\n    abstract decodeThemedTile(\n        data: ArrayBufferLike | {},\n        tileKey: TileKey,\n        styleSetEvaluator: StyleSetEvaluator,\n        projection: Projection\n    ): Promise<DecodedTile>;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    addBuffersToTransferList,\n    BufferAttribute,\n    getProjection,\n    InterleavedBufferAttribute,\n    ITileDecoder,\n    WorkerDecoderProtocol\n} from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { LoggerManager } from \"@here/harp-utils\";\n\nimport { WorkerService, WorkerServiceResponse } from \"./WorkerService\";\n\nconst logger = LoggerManager.instance.create(\"TileDecoderService\");\n\n/**\n * An extension to [[WorkerService]], the `TileDecoderService` implements an asynchronous\n * (message based) service to decode tile content in web workers. The `TileDecoderService` itself\n * lives in the web worker, and communicates with messages by means of a [[ConcurrentWorkerSet]]\n * with the application.\n *\n * The `TileDecoderService` handles a [[DecodeTileRequest]], which contains a tile and its freshly\n * loaded binary data, decodes the content with the [[ITileDecoder]] that the service is configured\n * to use, and sends the data back in form of a [[WorkerServiceResponse]].\n */\nexport class TileDecoderService extends WorkerService {\n    /**\n     * Start a [[TileDecoderService]] with a given decoder.\n     *\n     * @param serviceId - Service id. Must be unique.\n     * @param decoder -   [[TileDecoder]] instance.\n     */\n    static start(serviceId: string, decoder: ITileDecoder) {\n        return new TileDecoderService(serviceId, decoder);\n    }\n\n    /**\n     * Set up the `TileDecoderService`. The name of the service must be unique\n     *\n     * @param serviceId - Service id. Must be unique.\n     * @param m_decoder - Decoder to handle the decoding and info requests.\n     */\n    constructor(readonly serviceId: string, private readonly m_decoder: ITileDecoder) {\n        super(serviceId);\n        this.m_decoder.connect();\n    }\n\n    /**\n     * Handle incoming request messages. Identifies message type and processes the request.\n     *\n     * @param request - Message that is either a DecodeTileRequest or a TileInfoRequest.\n     * @returns A promise which resolves to a [[WorkerServiceResponse]].\n     * @override\n     */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        if (WorkerDecoderProtocol.isDecodeTileRequest(request)) {\n            return this.handleDecodeTileRequest(request);\n        } else if (WorkerDecoderProtocol.isTileInfoRequest(request)) {\n            return this.handleTileInfoRequest(request);\n        } else {\n            return super.handleRequest(request);\n        }\n    }\n\n    /**\n     * Handle incoming configuration message. Configuration message is passed on to decoder.\n     *\n     * @param request - Message of type [[ConfigurationMessage]].\n     * @override\n     */\n    protected handleMessage(message: any) {\n        if (WorkerDecoderProtocol.isConfigurationMessage(message)) {\n            this.handleConfigurationMessage(message);\n        } else {\n            logger.error(`[${this.serviceId}]: invalid message ${message.type}`);\n        }\n    }\n\n    private async handleDecodeTileRequest(\n        request: WorkerDecoderProtocol.DecodeTileRequest\n    ): Promise<WorkerServiceResponse> {\n        const tileKey = TileKey.fromMortonCode(request.tileKey);\n        const projection = getProjection(request.projection);\n\n        const decodedTile = await this.m_decoder.decodeTile(request.data, tileKey, projection);\n\n        const transferList: ArrayBufferLike[] = [];\n\n        const transferBufferAttribute = (\n            attribute?: BufferAttribute | InterleavedBufferAttribute\n        ) => {\n            if (\n                attribute !== undefined &&\n                attribute.buffer.byteLength > 0 &&\n                !transferList.includes(attribute.buffer)\n            ) {\n                transferList.push(attribute.buffer);\n            }\n        };\n\n        decodedTile?.geometries.forEach(geom => {\n            geom.vertexAttributes?.forEach(attr => transferBufferAttribute(attr));\n            geom.interleavedVertexAttributes?.forEach(attr => transferBufferAttribute(attr));\n            transferBufferAttribute(geom.index);\n            transferBufferAttribute(geom.edgeIndex);\n\n            if (\n                Array.isArray(geom.objInfos) &&\n                geom.objInfos.length === 1 &&\n                typeof geom.objInfos[0] === \"object\" &&\n                geom.objInfos[0]?.hasOwnProperty(\"displacementMap\")\n            ) {\n                const obj = geom.objInfos[0] as any;\n                transferBufferAttribute(obj.displacementMap);\n            }\n\n            if (Array.isArray(geom.attachments)) {\n                geom.attachments.forEach(attachment => {\n                    transferBufferAttribute(attachment.index);\n                    transferBufferAttribute(attachment.edgeIndex);\n                });\n            }\n        });\n\n        decodedTile?.techniques.forEach(technique => {\n            addBuffersToTransferList(technique, transferList);\n        });\n\n        return {\n            response: decodedTile,\n            transferList\n        };\n    }\n\n    private handleTileInfoRequest(\n        request: WorkerDecoderProtocol.TileInfoRequest\n    ): Promise<WorkerServiceResponse> {\n        const tileKey = TileKey.fromMortonCode(request.tileKey);\n        const projection = getProjection(request.projection);\n\n        return this.m_decoder.getTileInfo(request.data, tileKey, projection).then(tileInfo => {\n            const transferList: ArrayBuffer[] =\n                tileInfo !== undefined && tileInfo.transferList !== undefined\n                    ? tileInfo.transferList\n                    : [];\n            return {\n                response: tileInfo,\n                transferList\n            };\n        });\n    }\n\n    private handleConfigurationMessage(message: WorkerDecoderProtocol.ConfigurationMessage) {\n        this.m_decoder.configure(message, message.options);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ITiler, WorkerTilerProtocol } from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils\";\n\nimport { GeoJsonTiler } from \"./GeoJsonTiler\";\nimport { WorkerService, WorkerServiceResponse } from \"./WorkerService\";\n\n/**\n * An extension to {@link WorkerService}, the `TilerService`\n * implements an asynchronous (message based)\n * service to tile untiled payloads in web workers.\n *\n * @remarks\n * The `TilerService` itself lives in the web\n * worker, and communicates with messages by means of a `ConcurrentWorkerSet` with the\n * application.\n *\n * The `TilerService` registers tile indices (parent tile to be subdivided) by handling a\n * `RegisterIndexRequest`, and can later retrieve tiled payloads from through the `TileRequest`.\n * The data is sent back in form of a {@link WorkerServiceResponse}.\n */\nexport class TilerService extends WorkerService {\n    /**\n     * Start a `TilerService`.\n     *\n     * @param serviceId - Service id. Must be unique.\n     */\n    static start(serviceId: string) {\n        return new TilerService(serviceId);\n    }\n\n    tiler: ITiler = new GeoJsonTiler();\n\n    /**\n     * Set up the `TilerService`. The name of the service must be unique\n     *\n     * @param serviceId - Service id. Must be unique.\n     */\n    constructor(readonly serviceId: string) {\n        super(serviceId);\n    }\n\n    /**\n     * Handle incoming request messages. Identifies message type and processes the request.\n     *\n     * @param request - {@link WorkerTilerProtocol} request.\n     * @returns A promise which resolves to a {@link WorkerServiceResponse}.\n     * @override\n     */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        if (WorkerTilerProtocol.isRegisterIndexRequest(request)) {\n            return this.handleRegisterIndexRequest(request);\n        } else if (WorkerTilerProtocol.isUpdateIndexRequest(request)) {\n            return this.handleUpdateIndexRequest(request);\n        } else if (WorkerTilerProtocol.isTileRequest(request)) {\n            return this.handleTileRequest(request);\n        } else {\n            return super.handleRequest(request);\n        }\n    }\n\n    private async handleTileRequest(\n        request: WorkerTilerProtocol.TileRequest\n    ): Promise<WorkerServiceResponse> {\n        const tileKey = TileKey.fromMortonCode(request.tileKey);\n        const tile = await this.tiler.getTile(request.index, tileKey);\n\n        return { response: tile || {} };\n    }\n\n    private async handleRegisterIndexRequest(\n        message: WorkerTilerProtocol.RegisterIndexRequest\n    ): Promise<WorkerServiceResponse> {\n        const input = typeof message.input === \"string\" ? new URL(message.input) : message.input;\n        await this.tiler.registerIndex(message.id, input);\n\n        return { response: {} };\n    }\n\n    private async handleUpdateIndexRequest(\n        message: WorkerTilerProtocol.UpdateIndexRequest\n    ): Promise<WorkerServiceResponse> {\n        const input = typeof message.input === \"string\" ? new URL(message.input) : message.input;\n\n        this.tiler.updateIndex(message.id, input);\n\n        return { response: {} };\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { WorkerServiceProtocol } from \"@here/harp-datasource-protocol\";\nimport { LoggerManager } from \"@here/harp-utils\";\n\nconst logger = LoggerManager.instance.create(\"WorkerService\", { enabled: true });\n\ndeclare let self: Worker;\n\n/**\n * Response for {@link WorkerService} procession results.\n */\nexport interface WorkerServiceResponse {\n    /**\n     * Response object.\n     */\n    response: any;\n\n    /**\n     * Transfer list containing a list of `ArrayBuffer` which transfer ownership from web worker\n     * to UI thread.\n     */\n    transferList?: ArrayBuffer[];\n}\n\n/**\n * Header information for a [[RequestMessage]].\n */\ninterface RequestEntry {\n    /**\n     * ID of service.\n     */\n    service: string;\n\n    /**\n     * Unique ID of message.\n     */\n    messageId: number;\n\n    /**\n     * Contains `true` if message has been processed, and response has been sent.\n     */\n    responseSent: boolean;\n}\n\n/**\n * Worker Service communication helper.\n *\n * @remarks\n * Listens to Web Worker messages from `entWorkerSet` and implements:\n *  - worker service initialization\n *  - request/response scheme\n *  - error handling.\n *\n * This class should be subclassed to provide concrete like `TileDecoderService`.\n *\n * Communication peer for `ConcurrentWorkerSet`.\n */\nexport abstract class WorkerService {\n    private readonly m_pendingRequests: Map<number, RequestEntry> = new Map();\n\n    /**\n     * Sets up the `WorkerService` with the specified name, and starts processing messages.\n     *\n     * @param serviceId - The service id.\n     */\n    constructor(readonly serviceId: string) {\n        self.addEventListener(\"message\", this.onMessage);\n\n        const isInitializedMessage: WorkerServiceProtocol.InitializedMessage = {\n            service: serviceId,\n            type: WorkerServiceProtocol.ServiceMessageName.Initialized\n        };\n        self.postMessage(isInitializedMessage);\n    }\n\n    /**\n     * Destroy the `WorkerService`. Cancels all pending requests ad removes itself from the message\n     * queue.\n     */\n    destroy() {\n        this.cancelAllPendingRequests();\n\n        self.removeEventListener(\"message\", this.onMessage);\n    }\n\n    /**\n     * Message handler to be overridden by implementation.\n     *\n     * @param message - `MessageEvent.data` as received by `WorkerService`.\n     */\n    protected handleMessage(message: any): void {\n        logger.error(`[${this.serviceId}]: Invalid message ${message.type}`);\n    }\n\n    /**\n     * Call request handler to be overridden by implementation.\n     *\n     * @param request - `RequestMessage.request` as received by `WorkerService`.\n     */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        throw new Error(`ServiceAdapter[${this.serviceId}]: Invalid request '${request.type}'`);\n    }\n\n    /**\n     * Central message handler for this service.\n     *\n     * Responsible for filtering message target and managing request/response sequence.\n     *\n     * @param message - Message to be dispatched.\n     */\n    private readonly onMessage = (message: MessageEvent) => {\n        if (typeof message.data.service !== \"string\" || message.data.service !== this.serviceId) {\n            return;\n        }\n\n        try {\n            if (WorkerServiceProtocol.isRequestMessage(message.data)) {\n                const request = message.data;\n                const requestEntry = {\n                    service: request.service,\n                    messageId: request.messageId,\n                    responseSent: false\n                };\n                this.m_pendingRequests.set(request.messageId, requestEntry);\n                this.tryHandleRequest(request.request)\n                    .then(response => {\n                        this.doSendResponse(\n                            requestEntry,\n                            {\n                                service: this.serviceId,\n                                type: WorkerServiceProtocol.ServiceMessageName.Response,\n                                messageId: request.messageId,\n                                response: response.response\n                            },\n                            response.transferList\n                        );\n                    })\n                    .catch(error => {\n                        this.doSendResponse(requestEntry, {\n                            service: this.serviceId,\n                            type: WorkerServiceProtocol.ServiceMessageName.Response,\n                            messageId: request.messageId,\n                            errorMessage: error.toString(),\n                            errorStack: error.stack\n                        });\n                    });\n            } else {\n                this.tryHandleMessage(message.data);\n            }\n        } catch (err) {\n            logger.error(`[${this.serviceId}]: Unhandled exception when handling ${message.type}`);\n        }\n    };\n\n    /**\n     * Safety belt over `handleMessage` for correct exception handling & logging.\n     */\n    private tryHandleMessage(message: any): void {\n        try {\n            this.handleMessage(message);\n        } catch (error) {\n            logger.error(`[${this.serviceId}]: Failed, handling message ${message.type}`);\n        }\n    }\n\n    /**\n     * Safety belt over `handleRequest` for correct exception handling in promise chain.\n     */\n    private tryHandleRequest(request: any): Promise<WorkerServiceResponse> {\n        try {\n            return this.handleRequest(request);\n        } catch (error) {\n            // we don't log exceptions here as they are propagated to client as responses\n            logger.error(`[${this.serviceId}]: Failure`, error);\n            return Promise.reject(error);\n        }\n    }\n\n    private doSendResponse(\n        requestEntry: RequestEntry,\n        response: WorkerServiceProtocol.ResponseMessage,\n        transferList?: ArrayBuffer[]\n    ) {\n        if (requestEntry.responseSent) {\n            return;\n        }\n\n        if (transferList !== undefined) {\n            self.postMessage(response, transferList);\n        } else {\n            self.postMessage(response);\n        }\n\n        requestEntry.responseSent = true;\n        this.m_pendingRequests.delete(requestEntry.messageId);\n    }\n\n    private cancelAllPendingRequests() {\n        this.m_pendingRequests.forEach(requestEntry => {\n            this.doSendResponse(requestEntry, {\n                service: this.serviceId,\n                type: WorkerServiceProtocol.ServiceMessageName.Response,\n                messageId: requestEntry.messageId,\n                errorMessage: \"cancelled\"\n            });\n        });\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { WorkerServiceProtocol } from \"@here/harp-datasource-protocol\";\n\nimport { WorkerService, WorkerServiceResponse } from \"./WorkerService\";\n\n/**\n * Factory function that creates [[WorkerService]].\n */\nexport type WorkerServiceFactory = (serviceId: string) => WorkerService;\n\n/**\n * Worker service class definition as needed by [[WorkerServiceManager.register]].\n */\nexport interface WorkerServiceDescriptor {\n    serviceType: string;\n    factory: WorkerServiceFactory;\n}\n\n/**\n * Manages dynamic worker services in Web Worker context.\n *\n * Handles `CreateService` and `DestroyService` messages sent to Web Worker. Singleton (in scope of\n * one worker runtime!), starts automatically with first [[getInstance]] call.\n */\nexport class WorkerServiceManager extends WorkerService {\n    /**\n     * Gets the default instance of `WorkerServiceManager`. Starts the service when first called.\n     */\n    static getInstance() {\n        if (this.m_service === undefined) {\n            this.m_service = new WorkerServiceManager(\n                WorkerServiceProtocol.WORKER_SERVICE_MANAGER_SERVICE_ID\n            );\n        }\n        return this.m_service;\n    }\n\n    /**\n     * Default instance of `WorkerServiceManager`.\n     */\n    private static m_service: WorkerServiceManager;\n\n    /**\n     * Contains all registered service factories indexed by `serviceType`.\n     */\n    private readonly m_factories = new Map<string, WorkerServiceFactory>();\n\n    /**\n     * Contains all managed worker services indexed by their `serviceId`.\n     */\n    private readonly m_services = new Map<string, WorkerService>();\n\n    private constructor(\n        serviceId: string = WorkerServiceProtocol.WORKER_SERVICE_MANAGER_SERVICE_ID\n    ) {\n        super(serviceId);\n    }\n\n    /**\n     * Register [[WorkerService]] class to this manager.\n     *\n     * @param workerServiceDescriptor - service type and factory\n     */\n    register(workerServiceDescriptor: WorkerServiceDescriptor): void {\n        this.m_factories.set(workerServiceDescriptor.serviceType, workerServiceDescriptor.factory);\n    }\n\n    /** @override */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        if (request.type === WorkerServiceProtocol.Requests.CreateService) {\n            const existingService = this.m_services.get(request.targetServiceId);\n            if (existingService !== undefined) {\n                throw Error(\n                    `error - service with targetServiceId='${request.targetServiceId}' already running, ignoring CreateService request`\n                );\n            }\n\n            const factory = this.m_factories.get(request.targetServiceType);\n\n            if (factory === undefined) {\n                throw Error(`unknown targetServiceType requested: '${request.targetServiceType}'`);\n            }\n\n            const service = factory(request.targetServiceId);\n            this.m_services.set(request.targetServiceId, service);\n        }\n        if (request.type === WorkerServiceProtocol.Requests.DestroyService) {\n            const service = this.m_services.get(request.targetServiceId);\n            if (service === undefined) {\n                throw Error(`unknown targetServiceId '${request.targetServiceId}'`);\n            }\n            service.destroy();\n            this.m_services.delete(request.targetServiceId);\n        }\n\n        return Promise.resolve({\n            response: {}\n        });\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Message sent by web worker that requests to resolve actual\n * URLs of it's dependencies.\n *\n * Main thread is expected.\n */\nexport interface WorkerBootstrapRequest {\n    type: \"worker-bootstrap-request\";\n\n    /// Names of dependencies, usually NPM package names.\n    dependencies: string[];\n}\n\nexport interface WorkerBootstrapResponse {\n    type: \"worker-bootstrap-response\";\n\n    /// Actual URL scripts requested in [[WorkerBootstrapRequest]].\n    resolvedDependencies: string[];\n}\n\nexport function isWorkerBootstrapRequest(message: any): message is WorkerBootstrapRequest {\n    return (\n        message &&\n        message.type === \"worker-bootstrap-request\" &&\n        Array.isArray(message.dependencies)\n    );\n}\n\nexport function isWorkerBootstrapResponse(message: any): message is WorkerBootstrapResponse {\n    return (\n        message &&\n        message.type === \"worker-bootstrap-response\" &&\n        Array.isArray(message.resolvedDependencies)\n    );\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace ExtrusionFeatureDefs {\n    /**\n     * Minimum ratio value for extrusion effect\n     */\n    export const DEFAULT_RATIO_MIN: number = 0.0;\n    /**\n     * Maximum ratio value for extrusion effect\n     */\n    export const DEFAULT_RATIO_MAX: number = 1;\n\n    /**\n     * Buildings height used whenever no height-data is present or height is very small.\n     *\n     * Used to avoid z-fighting between ground plane and building.\n     */\n    export const MIN_BUILDING_HEIGHT = 0.1;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/DOMUtils\";\nexport * from \"./lib/GroupedPriorityList\";\nexport * from \"./lib/Logger\";\nexport * from \"./lib/Math2D\";\nexport * from \"./lib/MathUtils\";\nexport * from \"./lib/Mixins\";\nexport * from \"./lib/assert\";\nexport * from \"./lib/CachedResource\";\nexport * from \"./lib/ContextLogger\";\nexport * from \"./lib/PerformanceTimer\";\nexport * from \"./lib/ObjectUtils\";\nexport * from \"./lib/OptionsUtils\";\nexport * from \"./lib/TaskQueue\";\nexport * from \"./lib/UriResolver\";\nexport * from \"./lib/UrlUtils\";\nexport * from \"./lib/Functions\";\nexport * from \"./lib/SampleBilinear\";\nexport * from \"./lib/AuthenticationUtils\";\nexport * from \"./lib/GlslUtils\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Refinement of `console` interface only for important information i.e `info`, `warn` and `errors`.\n */\nexport interface ISimpleChannel {\n    info(message?: any, ...optionalParams: any[]): void;\n    warn(message?: any, ...optionalParams: any[]): void;\n    error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Extension of {@link ISimpleChannel} to support contextual logging by adding stack of prefixes.\n */\nexport interface IContextLogger extends ISimpleChannel {\n    /**\n     * Push \"attribute-like\" context.\n     */\n    pushAttr(name: string): void;\n\n    /**\n     * Push \"index-like\" context.\n     *\n     * Following log messages will be prefixed with `[index]`.\n     */\n    pushIndex(index: string | number): void;\n\n    /**\n     * Remove current context from top of stack.\n     */\n    pop(): void;\n}\n\n/**\n * Context-aware logger that decorates log message with stack-based prefix, emits `headerMessage`\n * before first actual log message.\n */\nexport class ContextLogger implements IContextLogger {\n    private readonly context: string[] = [];\n    private m_headerLogged = false;\n\n    /**\n     * Construct a context-aware logger that logs to `m_logger`.\n     */\n    constructor(readonly m_logger: ISimpleChannel, readonly headerMessage: string) {}\n\n    /**\n     * Push \"attribute-like\" context.\n     *\n     * Following log messages will be prefixed with `name` or `.name` depending on current context.\n     */\n    pushAttr(name: string) {\n        this.context.push(`${this.context.length > 0 ? \".\" : \"\"}${name}`);\n    }\n\n    /**\n     * Push \"index-like\" context.\n     *\n     * Following log messages will be prefixed with `[index]`.\n     */\n    pushIndex(index: string | number) {\n        this.context.push(`[${index}]`);\n    }\n\n    pop() {\n        this.context.pop();\n    }\n\n    // They, are public member functions it's just tslint who doesn't understand this.\n\n    warn = this.createLogMethod(\"warn\");\n    info = this.createLogMethod(\"info\");\n    error = this.createLogMethod(\"error\");\n\n    private createLogMethod(severity: \"warn\" | \"info\" | \"error\") {\n        return (message: string, ...rest: any[]) => {\n            if (!this.m_headerLogged) {\n                this.m_logger.info(this.headerMessage);\n                this.m_headerLogged = true;\n            }\n            this.m_logger[severity](`${this.context.join(\"\")}: ${message}`, ...rest);\n        };\n    }\n}\n","/*\n * Copyright (C) 2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace DOMUtils {\n    /**\n     * Gets language list used by the browser\n     *\n     * @returns Array of iso language codes\n     */\n    export function getBrowserLanguages(): string[] | undefined {\n        if (navigator.languages !== undefined && navigator.languages.length > 0) {\n            const languageList = [];\n            for (const lang of navigator.languages) {\n                languageList.push(getIsoLanguageCode(lang));\n            }\n            return languageList;\n        }\n        if (navigator.language !== undefined) {\n            return [getIsoLanguageCode(navigator.language)];\n        }\n        return undefined;\n    }\n\n    /**\n     * Gets ISO-639-1 language code from browser's code (ex. en for en-US)\n     */\n    function getIsoLanguageCode(language: string) {\n        return language.substring(0, 2);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Chains two functions for further assigning as one wrapped callback function\n */\nexport function chainCallbacks<T extends (this: unknown, ...args: any[]) => any>(\n    f1: T | null | undefined,\n    f2: T\n): T {\n    return function (this: any, ...args: any[]): ReturnType<T> {\n        if (f1) {\n            f1.apply(this, args);\n        }\n        return f2.apply(this, args);\n    } as T;\n}\n","/*\n * Copyright (C) 2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Converts webgl1-compatible vertex shader glsl code to webgl2.\n *\n * @param vertexShader - String containing the vertex shader glsl code.\n * @returns the converted glsl code.\n */\nexport function convertVertexShaderToWebGL2(vertexShader: string): string {\n    return (\n        [\"#define attribute in\", \"#define varying out\", \"#define texture2D texture\"].join(\"\\n\") +\n        \"\\n\" +\n        vertexShader\n    );\n}\n\n/**\n * Converts webgl1-compatible fragment shader glsl code to webgl2.\n *\n * @param fragmentShader - String containing the fragment shader glsl code.\n * @returns the converted glsl code.\n */\nexport function convertFragmentShaderToWebGL2(fragmentShader: string): string {\n    return (\n        [\n            \"#define varying in\",\n            \"out highp vec4 pc_fragColor;\",\n            \"#define gl_FragColor pc_fragColor\",\n            \"#define gl_FragDepthEXT gl_FragDepth\",\n            \"#define texture2D texture\",\n            \"#define textureCube texture\",\n            \"#define texture2DProj textureProj\",\n            \"#define texture2DLodEXT textureLod\",\n            \"#define texture2DProjLodEXT textureProjLod\",\n            \"#define textureCubeLodEXT textureLod\",\n            \"#define texture2DGradEXT textureGrad\",\n            \"#define texture2DProjGradEXT textureProjGrad\",\n            \"#define textureCubeGradEXT textureGrad\"\n        ].join(\"\\n\") +\n        \"\\n\" +\n        fragmentShader\n    );\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * A `PriorityListElement` has a priority to assist in sorting. The idea is that the items in a\n * grouped priority list will not modify their priority during processing to such an amount, that\n * they will change into another group. Smaller lists are smaller to sort, and in case of resource\n * limitation (maximum number of rendered objects reached), not all items have to be sorted at all.\n */\nexport interface PriorityListElement {\n    /**\n     * The integer value of this priority is used to group objects of \"same\" priority.\n     */\n    priority: number;\n}\n\n/**\n * The `PriorityListGroup` contains a list of {@link PriorityListElement}s that all have the same\n * (integer) priority.\n */\nexport class PriorityListGroup<T extends PriorityListElement> {\n    constructor(readonly priority: number, public elements: T[] = new Array()) {}\n\n    /**\n     * Create and return a deep copy of the `PriorityListGroup<T>`.\n     *\n     * @returns A clone of the `PriorityListGroup<T>`.\n     */\n    clone(): PriorityListGroup<T> {\n        return new PriorityListGroup<T>(this.priority, this.elements.slice());\n    }\n\n    /**\n     * Removes an element from the group.\n     * @param element - The element to remove.\n     * @returns true if the element was removed, false if it was not found in the group.\n     */\n    remove(element: T): boolean {\n        const foundIndex = this.elements.indexOf(element);\n        if (foundIndex === -1) {\n            return false;\n        }\n        this.elements.splice(foundIndex, 1);\n        return true;\n    }\n}\n\n/**\n * The `PriorityListGroupMap` is a map to map the (integer) priority to a {@link PriorityListGroup}.\n */\nexport type PriorityListGroupMap<T extends PriorityListElement> = Map<number, PriorityListGroup<T>>;\n\n/**\n * The `GroupedPriorityList` contains a [[PriorityListGroupMap]] to manage a larger number of items\n * in priority groups.\n */\nexport class GroupedPriorityList<T extends PriorityListElement> {\n    readonly groups: PriorityListGroupMap<T> = new Map();\n    /**\n     * Add an element to the `GroupedPriorityList`. Selects group based on the elements priority.\n     *\n     * @param element - Element to be added.\n     */\n    add(element: T): void {\n        this.getGroup(element.priority).elements.push(element);\n    }\n\n    /**\n     * Remove an element from the `GroupedPriorityList`.\n     *\n     * Note: It is required that the priority is the same as it was when the element has been added.\n     * Otherwise, the removal will fail.\n     *\n     * @param element - Element to be removed.\n     * @returns `True` if the element was removed, `false` otherwise.\n     */\n    remove(element: T): boolean {\n        const group = this.findGroup(element.priority);\n        if (group !== undefined && group.remove(element)) {\n            if (group.elements.length === 0) {\n                this.groups.delete(group.priority);\n            }\n\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Remove all internal {@link PriorityListGroup}s.\n     */\n    clear(): void {\n        this.groups.clear();\n    }\n\n    /**\n     * Merge another {@link GroupedPriorityList} into this one.\n     *\n     * @param other - Other group to merge.\n     */\n    merge(other: GroupedPriorityList<T>): GroupedPriorityList<T> {\n        for (const otherGroup of other.groups) {\n            const group = this.findGroup(otherGroup[1].priority);\n            if (group === undefined) {\n                this.groups.set(Math.floor(otherGroup[1].priority), otherGroup[1].clone());\n                continue;\n            }\n            group.elements = group.elements.concat(otherGroup[1].elements);\n        }\n        return this;\n    }\n\n    clone(): GroupedPriorityList<T> {\n        const clone = new GroupedPriorityList<T>();\n        for (const [priority, group] of this.groups) {\n            clone.groups.set(priority, group.clone());\n        }\n        return clone;\n    }\n\n    /**\n     * Apply function to all elements in this `GroupedPriorityList`.\n     *\n     * @param {(element: T) => void} fun Function to apply.\n     */\n    forEach(fun: (element: T) => void): void {\n        for (const group of this.groups) {\n            group[1].elements.forEach(fun);\n        }\n    }\n\n    /**\n     * Count the number of elements in this `GroupedPriorityList`.\n     */\n    count(): number {\n        let n = 0;\n        for (const group of this.groups) {\n            n += group[1].elements.length;\n        }\n        return n;\n    }\n\n    /**\n     * Get group of elements that have the same (integer) priority.\n     *\n     * @param priority - The priority to retrieve all elements from.\n     */\n    private findGroup(priority: number): PriorityListGroup<T> | undefined {\n        const normalizedPriority = Math.floor(priority);\n        const group = this.groups.get(normalizedPriority);\n        return group;\n    }\n\n    /**\n     * Get group of elements that have the same (integer) priority.\n     *\n     * @param priority - The priority to retrieve all elements from.\n     */\n    private getGroup(priority: number): PriorityListGroup<T> {\n        let group = this.findGroup(priority);\n\n        if (group === undefined) {\n            const normalizedPriority = Math.floor(priority);\n            group = new PriorityListGroup<T>(normalizedPriority);\n            this.groups.set(group.priority, group);\n        }\n\n        return group;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/* eslint-disable no-console */\n\nimport { IChannel } from \"./IChannel\";\n\n/**\n * Class for the default console channel.\n */\n\nexport class ConsoleChannel implements IChannel {\n    error(message?: any, ...optionalParams: any[]) {\n        console.error(message, ...optionalParams);\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        console.debug(message, ...optionalParams);\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        console.info(message, ...optionalParams);\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        console.log(message, ...optionalParams);\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        console.trace(message, ...optionalParams);\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        console.warn(message, ...optionalParams);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\n\n/**\n * Enum log levels\n */\nexport enum LogLevel {\n    Trace,\n    Debug,\n    Log,\n    Info,\n    Warn,\n    Error,\n    None\n}\n\n/**\n * Logger options to configure logger\n */\nexport class LoggerOptions {\n    enabled?: boolean;\n    level?: LogLevel;\n}\n\n/**\n * Public interface for Logger class.\n */\nexport interface ILogger extends IChannel {\n    readonly name: string;\n\n    enabled: boolean;\n\n    level: LogLevel;\n\n    /**\n     * Update logger options\n     *\n     * @param  {LoggerOptions} options Set logger options and configure internal logger.\n     */\n    update(options: LoggerOptions): void;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\nimport { ILogger, LoggerOptions, LogLevel } from \"./ILogger\";\n\n/**\n * Logger class.\n */\nexport class Logger implements ILogger {\n    enabled: boolean = true;\n    level: LogLevel = LogLevel.Trace;\n\n    constructor(\n        readonly name: string,\n        private readonly m_channel: IChannel,\n        options?: LoggerOptions\n    ) {\n        if (options !== undefined) {\n            this.update(options);\n        }\n    }\n\n    error(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Error) {\n            this.m_channel.error(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Debug) {\n            this.m_channel.debug(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Info) {\n            this.m_channel.info(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Log) {\n            this.m_channel.log(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Trace) {\n            this.m_channel.trace(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Warn) {\n            this.m_channel.warn(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    update(options: LoggerOptions) {\n        this.enabled = options.enabled === undefined ? this.enabled : options.enabled;\n        this.level = options.level === undefined ? this.level : options.level;\n    }\n\n    private get prefix(): string {\n        return this.name + \":\";\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ILoggerManager } from \"./ILoggerManager\";\nimport { LoggerManagerImpl } from \"./LoggerManagerImpl\";\n\n/**\n * The LoggerManager class implements a singleton object that handles logging.\n *\n * Example:\n *\n * ```typescript\n *\n * const logger = LoggerManager.instance.create(\"MyFontLoaderClass\");\n * if (missingFonts.length > 0) {\n *     logger.error(\"These fonts can not be loaded: \", missingFonts);\n * } else {\n *     logger.log(\"All fonts have been loaded.\");\n * }\n * ```\n */\nexport class LoggerManager {\n    private static m_instance: ILoggerManager;\n\n    static get instance(): ILoggerManager {\n        return this.m_instance || (this.m_instance = new LoggerManagerImpl());\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ConsoleChannel } from \"./ConsoleChannel\";\nimport { IChannel } from \"./IChannel\";\nimport { ILogger, LoggerOptions, LogLevel } from \"./ILogger\";\nimport { ILoggerManager } from \"./ILoggerManager\";\nimport { Logger } from \"./Logger\";\nimport { WorkerChannel } from \"./WorkerChannel\";\n\n/**\n * LoggerManagerImpl is the class for the singleton instance of the logger manager.\n * It handles channels and loggers.\n */\n\nexport class LoggerManagerImpl implements ILoggerManager {\n    channel: IChannel;\n    private readonly m_loggers: ILogger[] = [];\n    private m_levelSetForAll?: LogLevel;\n\n    constructor() {\n        this.channel =\n            typeof self === \"undefined\" || typeof self.document !== \"undefined\"\n                ? new ConsoleChannel()\n                : new WorkerChannel();\n    }\n\n    getLoggerNames(): string[] {\n        return this.m_loggers.map(logger => logger.name);\n    }\n\n    getLogger(name: string): ILogger | undefined {\n        return this.m_loggers.find(logger => logger.name === name);\n    }\n\n    create(loggerName: string, options: LoggerOptions = {}): ILogger {\n        if (\n            this.m_levelSetForAll !== undefined &&\n            (options.level === undefined || options.level < this.m_levelSetForAll)\n        ) {\n            options.level = this.m_levelSetForAll;\n        }\n        const logger = new Logger(loggerName, this.channel, options);\n        this.m_loggers.push(logger);\n        return logger;\n    }\n\n    dispose(logger: ILogger) {\n        const found = this.m_loggers.indexOf(logger);\n        if (found < 0) {\n            throw new Error(`Cannot unregister \"${logger}\" : no such logger registered.`);\n        }\n        this.m_loggers.splice(found, 1);\n    }\n\n    updateAll(options: LoggerOptions) {\n        for (const logger of this.m_loggers) {\n            logger.update(options);\n        }\n    }\n\n    update(loggerName: string, config: LoggerOptions) {\n        for (const logger of this.m_loggers) {\n            if (logger.name === loggerName) {\n                logger.update(config);\n            }\n        }\n    }\n\n    enableAll(enabled: boolean) {\n        for (const logger of this.m_loggers) {\n            logger.enabled = enabled;\n        }\n    }\n\n    enable(loggerName: string, value: boolean) {\n        this.update(loggerName, { enabled: value });\n    }\n\n    setLogLevelForAll(level: LogLevel) {\n        this.m_levelSetForAll = level;\n        for (const logger of this.m_loggers) {\n            logger.level = level;\n        }\n    }\n\n    setLogLevel(loggerName: string, level: LogLevel) {\n        this.update(loggerName, { level });\n    }\n\n    setChannel(channel: IChannel) {\n        this.channel = channel;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\n\n/**\n * Class allowing mixing several channels.\n */\nexport class MultiChannel implements IChannel {\n    private readonly channels: IChannel[] = [];\n    constructor(...channels: IChannel[]) {\n        this.channels = channels;\n    }\n\n    error(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.error(message, ...optionalParams);\n        }\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.debug(message, ...optionalParams);\n        }\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.info(message, ...optionalParams);\n        }\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.log(message, ...optionalParams);\n        }\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.trace(message, ...optionalParams);\n        }\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.warn(message, ...optionalParams);\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\nimport { LogLevel } from \"./ILogger\";\n\ndeclare let self: Worker;\n\nexport const WORKERCHANNEL_MSG_TYPE = \"worker-channel-message\";\n\n/**\n * The interface for the messages of the WorkerChannel.\n */\nexport interface IWorkerChannelMessage {\n    message: any[];\n    type: \"worker-channel-message\";\n    level: LogLevel;\n}\n\n/**\n * The class for the worker channel.\n */\nexport class WorkerChannel implements IChannel {\n    error(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Error\n        };\n        self.postMessage(workerMessage);\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Debug\n        };\n        self.postMessage(workerMessage);\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Info\n        };\n        self.postMessage(workerMessage);\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Log\n        };\n        self.postMessage(workerMessage);\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Trace\n        };\n        self.postMessage(workerMessage);\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Warn\n        };\n        self.postMessage(workerMessage);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./ConsoleChannel\";\nexport * from \"./IChannel\";\nexport * from \"./ILogger\";\nexport * from \"./Logger\";\nexport * from \"./LoggerManager\";\nexport * from \"./MultiChannel\";\nexport * from \"./WorkerChannel\";\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\ninterface Vec2Like {\n    x: number;\n    y: number;\n}\n\nexport namespace Math2D {\n    /**\n     * Alternative 2D box object with less memory impact (four numbers instead of two min/max\n     * objects with two numbers each). Should be faster.\n     */\n    export class Box {\n        /**\n         * Alternative 2D box object with less memory impact (four numbers instead of two min/max\n         * objects with two numbers each). Should be faster.\n         *\n         * @param x - New X value.\n         * @param y - New y value.\n         * @param w - New w value.\n         * @param h - New h value.\n         */\n        constructor(public x = 0, public y = 0, public w = 0, public h = 0) {}\n\n        /**\n         * Set new values to all properties of the box.\n         *\n         * @param x - New X value.\n         * @param y - New y value.\n         * @param w - New w value.\n         * @param h - New h value.\n         */\n        set(x: number, y: number, w: number, h: number) {\n            this.x = x;\n            this.y = y;\n            this.w = w;\n            this.h = h;\n        }\n\n        /**\n         * Copy values from another box.\n         *\n         * @param box - Another box.\n         */\n        copy(box: Box) {\n            this.x = box.x;\n            this.y = box.y;\n            this.w = box.w;\n            this.h = box.h;\n        }\n\n        /**\n         * Test box for inclusion of point.\n         *\n         * @param x - X coordinate of point.\n         * @param y - Y coordinate of point.\n         */\n        contains(x: number, y: number): boolean {\n            return this.x <= x && this.x + this.w >= x && this.y <= y && this.y + this.h >= y;\n        }\n\n        /**\n         * Test box for inclusion of another box.\n         *\n         * @param other - Box 2 to test for inclusion.\n         */\n        containsBox(other: Box): boolean {\n            const xmax = other.x + other.w;\n            const ymax = other.y + other.h;\n            return (\n                this.contains(other.x, other.y) &&\n                this.contains(xmax, other.y) &&\n                this.contains(other.x, ymax) &&\n                this.contains(xmax, ymax)\n            );\n        }\n\n        /**\n         * Test two boxes for intersection.\n         *\n         * @param other - Box 2 to test for intersection.\n         */\n        intersects(other: Box): boolean {\n            return (\n                this.x <= other.x + other.w &&\n                this.x + this.w >= other.x &&\n                this.y <= other.y + other.h &&\n                this.y + this.h >= other.y\n            );\n        }\n    }\n\n    /**\n     * Box to store UV coordinates.\n     */\n    export interface UvBox {\n        s0: number;\n        t0: number;\n        s1: number;\n        t1: number;\n    }\n\n    /**\n     * Compute squared distance between two 2D points `a` and `b`.\n     *\n     * @param ax - Point a.x\n     * @param ay - Point a.y\n     * @param bx - Point b.x\n     * @param by - Point b.y\n     * @returns Squared distance between the two points\n     */\n    export function distSquared(ax: number, ay: number, bx: number, by: number): number {\n        return (ax - bx) * (ax - bx) + (ay - by) * (ay - by);\n    }\n\n    /**\n     * Computes the squared length of a line.\n     *\n     * @param line - An array of that forms a line via [x,y,z,x,y,z,...] tuples.\n     */\n    export function computeSquaredLineLength(line: number[]): number {\n        let squaredLineLength: number = 0;\n\n        const length = line.length - 4;\n        for (let i = 0; i < length; i += 3) {\n            const xDiff = line[i + 3] - line[i];\n            const yDiff = line[i + 4] - line[i + 1];\n            squaredLineLength += xDiff * xDiff + yDiff * yDiff;\n        }\n        return squaredLineLength;\n    }\n\n    /**\n     * Compute squared distance between a 2D point and a 2D line segment.\n     *\n     * @param px - Test point X\n     * @param py - Test point y\n     * @param l0x - Line segment start X\n     * @param l0y - Line segment start Y\n     * @param l1x - Line segment end X\n     * @param l1y - Line segment end Y\n     * @returns Squared distance between point and line segment\n     */\n    export function distToSegmentSquared(\n        px: number,\n        py: number,\n        l0x: number,\n        l0y: number,\n        l1x: number,\n        l1y: number\n    ): number {\n        const lineLengthSuared = distSquared(l0x, l0y, l1x, l1y);\n        if (lineLengthSuared === 0) {\n            return distSquared(px, py, l0x, l0y);\n        }\n        let t = ((px - l0x) * (l1x - l0x) + (py - l0y) * (l1y - l0y)) / lineLengthSuared;\n        t = Math.max(0, Math.min(1, t));\n        return distSquared(px, py, l0x + t * (l1x - l0x), l0y + t * (l1y - l0y));\n    }\n\n    /**\n     * Finds the intersections of a line and a circle.\n     *\n     * @param xLine1 - abscissa of first line point.\n     * @param yLine1 - ordinate of second line point.\n     * @param xLine2 - abscissa of second line point.\n     * @param yLine2 - ordinate of second line point.\n     * @param radius - circle radius.\n     * @param xCenter - abscissa of circle center.\n     * @param yCenter - ordinate of circle center.\n     * @returns coordinates of the intersections (1 if the line is tangent to the circle, 2\n     * if it's secant) or undefined if there's no intersection.\n     */\n    export function intersectLineAndCircle(\n        xLine1: number,\n        yLine1: number,\n        xLine2: number,\n        yLine2: number,\n        radius: number,\n        xCenter: number = 0,\n        yCenter: number = 0\n    ): { x1: number; y1: number; x2?: number; y2?: number } | undefined {\n        // Line equation: dy*x - dx*y = c, c = dy*x1 - dx*y1 = x1*y2 - x2*y1\n        // Circle equation: (x-xCenter)^2 + (y-yCenter)^2 = r^2\n\n        // 1. Translate circle center to origin of coordinates:\n        // u = x - xCenter\n        // v = y - yCenter\n        // circle: u^2 + v^2 = r^2\n        // line: dy*u - dx*v = cp, cp = c - dy*xCenter - dx*yCenter\n\n        // 2. Intersections are solutions of a quadratic equation:\n        // ui = (cp*dy +/- sign(dy)*dx*discriminant / dSq\n        // vi = (-cp*dx +/- |dy|*discriminant / dSq\n        // discriminant = r^2*dSq - cp^2, dSq = dx^2 + dy^2\n        // The sign of the discriminant indicates the number of intersections.\n\n        // 3. Translate intersection coordinates back to original space:\n        // xi = xCenter + ui\n        // yi = yCenter + yi\n\n        const epsilon = 1e-10;\n        const dx = xLine2 - xLine1;\n        const dy = yLine2 - yLine1;\n        const dSq = dx * dx + dy * dy;\n        const rSq = radius * radius;\n        const c = xLine1 * yLine2 - xLine2 * yLine1;\n        const cp = c - dy * xCenter + dx * yCenter;\n        const discriminantSquared = rSq * dSq - cp * cp;\n\n        if (discriminantSquared < -epsilon) {\n            // no intersection\n            return undefined;\n        }\n\n        const xMid = cp * dy;\n        const yMid = -cp * dx;\n\n        if (discriminantSquared < epsilon) {\n            // 1 intersection (tangent line)\n            return { x1: xCenter + xMid / dSq, y1: yCenter + yMid / dSq };\n        }\n\n        const discriminant = Math.sqrt(discriminantSquared);\n\n        // 2 intersections (secant line)\n        const signDy = dy < 0 ? -1 : 1;\n        const absDy = Math.abs(dy);\n\n        const xDist = signDy * dx * discriminant;\n        const yDist = absDy * discriminant;\n\n        return {\n            x1: xCenter + (xMid + xDist) / dSq,\n            y1: yCenter + (yMid + yDist) / dSq,\n            x2: xCenter + (xMid - xDist) / dSq,\n            y2: yCenter + (yMid - yDist) / dSq\n        };\n    }\n\n    /**\n     * Computes the intersection point between two lines.\n     *\n     * @remarks\n     * This functions computes the\n     * {@link https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection\n     *    | line-line intersection} of two lines given two points on each line.\n     *\n     * @param x1 - x coordinate of the first point of the first line.\n     * @param y1 - y coordinate of the first point of the first line.\n     * @param x2 - x coordinate of the second point of the first line.\n     * @param y2 - y coordinate of the second point of the first line.\n     * @param x3 - x coordinate of the first point of the second line.\n     * @param y3 - y coordinate of the first point of the second line.\n     * @param x4 - x coordinate of the second point of the second line.\n     * @param y4 - y coordinate of the second point of the second line.\n     * @param result - The resulting point.\n     */\n    export function intersectLines(\n        x1: number,\n        y1: number,\n        x2: number,\n        y2: number,\n        x3: number,\n        y3: number,\n        x4: number,\n        y4: number,\n        result: Vec2Like = { x: 0, y: 0 }\n    ): Vec2Like | undefined {\n        const d = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n        if (d === 0) {\n            return undefined;\n        }\n        const px = ((x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4)) / d;\n        const py = ((x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4)) / d;\n        result.x = px;\n        result.y = py;\n        return result;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace MathUtils {\n    /**\n     * Ensures that input value fits in a given range.\n     *\n     * @param value - The value to be clamped.\n     * @param min - Minimum value.\n     * @param max - Maximum value.\n     *\n     * @returns Clamped value.\n     */\n    export function clamp(value: number, min: number, max: number): number {\n        return value < min ? min : value > max ? max : value;\n    }\n\n    /**\n     * Returns a smooth interpolation between the values edge0 and edge1 based on the interpolation\n     * factor x. `0 <= x <= 1`.\n     * @see https://en.wikipedia.org/wiki/Smoothstep\n     *\n     * @param edge0 -\n     * @param edge1 -\n     * @param x -\n     */\n    export function smoothStep(edge0: number, edge1: number, x: number) {\n        // Scale, bias and saturate x to 0..1 range\n        x = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n        // Evaluate polynomial\n        return x * x * (3 - 2 * x);\n    }\n\n    /**\n     * Returns a smooth interpolation between the values edge0 and edge1 based on the interpolation\n     * factor x. `0 <= x <= 1`.\n     *\n     * Improved version by Ken Perlin, which has zero 1st- and 2nd-order derivatives at `x = 0` and\n     * `x = 1`:\n     *\n     * @see https://en.wikipedia.org/wiki/Smoothstep\n     *\n     * @param edge0 -\n     * @param edge1 -\n     * @param x -\n     */\n    export function smootherStep(edge0: number, edge1: number, x: number) {\n        // Scale, and clamp x to 0..1 range\n        x = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n        // Evaluate polynomial\n        return x * x * x * (x * (x * 6 - 15) + 10);\n    }\n\n    /**\n     * Maps a number from one range to another.\n     *\n     * @param val - The incoming value to be converted.\n     * @param inMin - Lower bound of the value's current range.\n     * @param inMax - Upper bound of the value's current range.\n     * @param outMin - Lower bound of the value's target range.\n     * @param outMax - Upper bound of the value's target range.\n     */\n    export function map(val: number, inMin: number, inMax: number, outMin: number, outMax: number) {\n        return ((val - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n    }\n\n    /**\n     * Returns the smaller of the two given numbers. Both numbers may be undefined, in which case\n     * the result is undefined. If only one of the numbers is undefined, the other number is\n     * returned.\n     *\n     * @param a - First number.\n     * @param b - Second number.\n     */\n    export function min2(a: number | undefined, b: number | undefined): number | undefined {\n        let result: number | undefined;\n\n        if (a !== undefined) {\n            result = a;\n        }\n        if (b !== undefined) {\n            result = result === undefined ? b : Math.min(result, b);\n        }\n\n        return result;\n    }\n\n    /**\n     * Returns the larger of the two given numbers. Both numbers may be undefined, in which case\n     * the result is undefined. If only one of the numbers is undefined, the other number is\n     * returned.\n     *\n     * @param a - First number.\n     * @param b - Second number.\n     */\n    export function max2(a: number | undefined, b: number | undefined): number | undefined {\n        let result: number | undefined;\n\n        if (a !== undefined) {\n            result = a;\n        }\n        if (b !== undefined) {\n            result = result === undefined ? b : Math.max(result, b);\n        }\n\n        return result;\n    }\n\n    /**\n     * Checks if the value of a given number is inside an upper or lower bound. The bounds may be\n     * undefined, in which case their value is ignored.\n     *\n     * @param value - Value to check.\n     * @param lowerBound - The lower bound to check the value against.\n     * @param upperBound - The upper bound to check the value against.\n     *\n     * @returns `true` if value is inside the bounds or if the bounds are `undefined`, `false`\n     *          otherwise.\n     */\n    export function isClamped(\n        value: number,\n        lowerBound: number | undefined,\n        upperBound: number | undefined\n    ): boolean {\n        if (lowerBound !== undefined && value < lowerBound) {\n            return false;\n        }\n        if (upperBound !== undefined && value > upperBound) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Smoothly interpolates between two values using cubic formula\n     *\n     * @param startValue -\n     * @param endValue -\n     * @param time -\n     * @returns Result of the interpolation within the range of `[startValue, endValue]`\n     */\n    export function easeInOutCubic(startValue: number, endValue: number, time: number): number {\n        const timeValue =\n            time < 0.5 ? 4 * time * time * time : (time - 1) * (2 * time - 2) * (2 * time - 2) + 1;\n        return startValue + (endValue - startValue) * timeValue;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Copy methods and properties from one prototype into another.\n *\n * @see https://www.typescriptlang.org/docs/handbook/mixins.html\n *\n * @param derivedCtor - Class to mix methods and properties into.\n * @param baseCtors - Class to take all methods and properties from.\n */\nexport function applyMixins(derivedCtor: any, baseCtors: any[]) {\n    baseCtors.forEach(baseCtor => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n            derivedCtor.prototype[name] = baseCtor.prototype[name];\n        });\n    });\n}\n\n/**\n * Copy methods from one prototype into another.\n *\n * @see https://www.typescriptlang.org/docs/handbook/mixins.html\n *\n * @param derivedCtor - Class to mix methods into.\n * @param baseCtors - Class to take all methods from.\n */\nexport function applyMixinsWithoutProperties(derivedCtor: any, baseCtors: any[]) {\n    baseCtors.forEach(baseCtor => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n            const descriptor = Object.getOwnPropertyDescriptor(baseCtor.prototype, name);\n            if (\n                descriptor !== undefined &&\n                descriptor.get === undefined &&\n                name !== \"constructor\"\n            ) {\n                derivedCtor.prototype[name] = baseCtor.prototype[name];\n            }\n        });\n    });\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Deep clone of object.\n *\n * Like `JSON.parse(JSON.stringify(obj))`, but supports basic javascript types (string, number,\n * object), `Date` and `RegExp`s and cycles.\n *\n * Throws error if enounters object with `prototype` assuming that in general class instances\n * cannot be reliably cloned by generic algorithm.\n */\nexport function cloneDeep<T>(obj: T): T {\n    const cache: Map<object, object> = new Map();\n    function cloneInternal(src: any): any {\n        if (src === null) {\n            return null;\n        } else if (typeof src === \"object\") {\n            const cached = cache.get(src);\n            if (cached !== undefined) {\n                return cached;\n            }\n\n            if (Array.isArray(src)) {\n                const result: any[] = [];\n                cache.set(src, result);\n                result.length = src.length;\n                for (let i = 0; i < result.length; ++i) {\n                    result[i] = cloneInternal(src[i]);\n                }\n                return result;\n            } else if (src instanceof Date) {\n                const result = new Date(src.getTime());\n                cache.set(src, result);\n                return result;\n            } else if (src instanceof RegExp) {\n                const result = new RegExp(src.source, src.flags);\n                cache.set(src, result);\n                return result;\n            } else if (src.constructor !== Object) {\n                throw new Error(\"cloneDeep doesn't support objects with custom prototypes\");\n            } else {\n                const result: typeof src = {};\n                cache.set(src, result);\n                for (const key in src) {\n                    if (src.hasOwnProperty(key)) {\n                        result[key] = cloneInternal(src[key]);\n                    }\n                }\n                return result;\n            }\n        } else {\n            // string, number, boolean, undefined and functions are returned as is\n            return src;\n        }\n    }\n\n    const r = cloneInternal(obj);\n    cache.clear();\n    return r;\n}\n\n/**\n * Pick `props` from `object.\n *\n * Runtime version of `Pick<T,K>`.\n */\nexport function pick<T extends object, K extends keyof T>(object: T, props: K[]): Pick<T, K> {\n    const result: any = {};\n    for (const propName of props) {\n        if (object.hasOwnProperty(propName)) {\n            result[propName] = object[propName];\n        }\n    }\n    return result;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Get first defined value.\n *\n * Specialized \"replacement\" for `a || b || c` used frequently to get value from various sources\n * (defaults, configs  constants).\n * In contrast to `||`, this function provides proper typing for usual use cases (constant as last\n * argument) and correct treatment of `null` and `undefined`.\n *\n * If last parameter is \"defined\" then return type is `T`, otherwise return type is `T | undefined`.\n *\n * Usage example:\n *\n *     interface Config {\n *         x?: number;\n *     }\n *     const someConfig: Config = {};\n *     const val: number | undefined = undefined;\n *     const DEFAULT = 5;\n *     const x = getOptionValue(val, someConfig.x, DEFAULT);\n *         // typeof x === 'number' because DEFAULT is defined\n *     const y = getOptionValue(val, someConfig.x);\n *         // typeof y === 'number | undefined' because someConfig.x is possibly undefined\n */\n// specialized overloads with last param defined params overload\nexport function getOptionValue<T>(a: T): T;\nexport function getOptionValue<T>(a: T | undefined, b: T): T;\nexport function getOptionValue<T>(a: T | undefined, b: T | undefined, c: T): T;\nexport function getOptionValue<T>(a: T | undefined, b: T | undefined, c: T | undefined, d: T): T;\nexport function getOptionValue<T>(...values: Array<T | undefined>): T | undefined;\n\nexport function getOptionValue<T>(...values: Array<T | undefined>): T | undefined {\n    for (const candidate of values) {\n        if (candidate !== undefined && candidate !== null) {\n            return candidate;\n        }\n    }\n    return undefined;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * See:\n * https://developers.google.com/web/updates/2012/08/When-milliseconds-are-not-enough-performance-now\n */\n\nexport class PerformanceTimer {\n    /**\n     * Returns timestamp in milliseconds since page load.\n     *\n     * If the [[DOMHighResTimeStamp]] is supported, the resolution is up to 5 microseconds,\n     * otherwise it is in milliseconds. Timespans are computed by taking the difference between two\n     * samples.\n     *\n     * Example:\n     * ```typescript\n     * const now = PerformanceTimer.now();\n     * // call some expensive function for which you want to check the duration.\n     * const end = PerformanceTimer.now();\n     * const elapsedTime = end - now;\n     * ```\n     */\n    static now(): number {\n        return PerformanceTimer.nowFunc();\n    }\n\n    private static readonly instance = new PerformanceTimer();\n\n    private static readonly nowFunc: () => number = PerformanceTimer.getNowFunc();\n\n    private static getNowFunc() {\n        if (typeof performance !== \"undefined\" && typeof performance.now !== \"undefined\") {\n            return () => performance.now();\n        }\n\n        // fall back to Date.getTime()\n        return () => {\n            return new Date().getTime();\n        };\n    }\n}\n","/*\n * Copyright (C) 2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\ntype TypedArray =\n    | Int8Array\n    | Uint8Array\n    | Int16Array\n    | Uint16Array\n    | Int32Array\n    | Uint32Array\n    | Uint8ClampedArray\n    | Float32Array\n    | Float64Array;\n\n/**\n * Returns a bilinear-interpolated texture sample for a given texture.\n * @param texture - Two-dimensional texture to sample.\n * @param width - Texture width.\n * @param height - Texture height.\n * @param u - Number between 0 and 1 representing the location to sample in the width dimension.\n * @param v - Number between 0 and 1 representing the location to sample in the height dimension.\n */\nexport function sampleBilinear(\n    texture: TypedArray,\n    width: number,\n    height: number,\n    u: number,\n    v: number\n): number {\n    const maxXIndex = width - 1;\n    const maxYIndex = height - 1;\n    // Compute the x and y coordinates relative to the mesh size.\n    const xIndex = u * maxXIndex;\n    const xIndexFloor = Math.floor(xIndex);\n    const yIndex = v * maxYIndex;\n    const yIndexFloor = Math.floor(yIndex);\n    const swIndex = yIndexFloor * width + xIndexFloor;\n    const seIndex = xIndexFloor < maxXIndex ? swIndex + 1 : swIndex;\n    const nwIndex = yIndexFloor < maxYIndex ? swIndex + width : swIndex;\n    const neIndex = xIndexFloor < maxXIndex ? nwIndex + 1 : nwIndex;\n    const swElevation = texture[swIndex];\n    const seElevation = texture[seIndex];\n    const nwElevation = texture[nwIndex];\n    const neElevation = texture[neIndex];\n    // Get the fractional components to do bilinear interpolation.\n    const xFrac = Number.isInteger(xIndex) ? 0 : xIndex - xIndexFloor;\n    const xFracInverse = 1 - xFrac;\n    const yFrac = Number.isInteger(yIndex) ? 0 : yIndex - yIndexFloor;\n    const yFracInverse = 1 - yFrac;\n    // The interpolation is the sum of the four closest neighbours each\n    // multiplied by the diagonal areas.\n    const result =\n        swElevation * xFracInverse * yFracInverse +\n        seElevation * xFrac * yFracInverse +\n        nwElevation * xFracInverse * yFrac +\n        neElevation * xFrac * yFrac;\n    return result;\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Task that can be added to the [[TaskQueue]]\n */\nexport interface Task {\n    /**\n     * The Function that will be executed when the [[Task]] is processed\n     */\n    execute: () => void;\n\n    /**\n     * The group by which similar tasks in the TaskQueue are combined\n     */\n    group: string;\n\n    /**\n     * A function to retrieve the priority of the [[Task]], with 0 being\n     * the highest priority, and the first to be executed\n     */\n    getPriority: () => number;\n\n    /**\n     * An optional function that defines if a [[Task]] is alread expired\n     * and therefore can be removed from the [[TaskQueue]]\n     */\n    isExpired?: () => boolean;\n\n    /**\n     * An optional function that returns an estimated process time,\n     * this is not directly used by the [[TaskQueue]] but can be used\n     * by an Task Scheduler to schedule the processing\n     */\n    estimatedProcessTime?: () => number;\n}\n\nexport interface TaskQueueOptions {\n    //TODO: Use the max length\n    //maxLength?: number;\n    /**\n     * Groups to combine specific [[Task]]s in the [[TaskQueue]],\n     * [[Task]]s can only be added to the [[TaskQueue]] if their group is available\n     */\n    groups: string[];\n\n    /**\n     * Optional function to sort the priority, if set, i will override the internal TaskQueue.sort\n     * function.\n     *\n     * @remarks\n     * Caution, the {@link TaskQueue} uses the last element in the Arrays first, so the\n     * highest priorities should be ordered to the end\n     */\n    prioSortFn?: (a: Task, b: Task) => number;\n}\n\n/**\n * A Pull-TaskQueue sorted by priority and group-able {@link Task}s by {@link Task.group}.\n *\n * @remarks\n *\n * @example\n * Sample Usage\n * ```\n *  const taskQueue = new TaskQueue({\n *      group: [\"group1\"]\n *  })\n *  taskQueue.add({\n *     group: \"group1\",\n *     execute: () => {\n *         console.log(\"task of group1 executed\");\n *     },\n *     getPrio: () => {\n *         return 0;\n *     }\n *   });\n *\n * taskQueue.update();\n * taskQueue.processNext(\"group1\");\n *\n *  ```\n */\nexport class TaskQueue {\n    private readonly m_taskLists: Map<string, Task[]> = new Map();\n\n    constructor(private readonly m_options: TaskQueueOptions) {\n        this.m_options.groups?.forEach(group => {\n            this.m_taskLists.set(group, []);\n        });\n        if (this.m_options.prioSortFn) {\n            this.sort = this.m_options.prioSortFn;\n        }\n    }\n\n    /**\n     * Updates the lists in the queue depending on their priority functions and removes\n     * expired Tasks, based on their isExpired functions result.\n     *\n     * @param group The Group to update, if not set all groups will be updated.\n     */\n    update(group?: string) {\n        if (group === undefined) {\n            this.m_taskLists.forEach(taskList => {\n                this.updateTaskList(taskList);\n            });\n        } else {\n            const taskList = this.getTaskList(group);\n            if (taskList) {\n                this.updateTaskList(taskList);\n            }\n        }\n    }\n\n    /**\n     * Adds a Task to the Queue\n     *\n     * @param task\n     * @returns true if succesfully added, otherwise false\n     */\n    add(task: Task): boolean {\n        if (this.m_taskLists.has(task.group)) {\n            const taskList = this.m_taskLists.get(task.group);\n            if (!taskList?.includes(task)) {\n                this.m_taskLists.get(task.group)?.push(task);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Removes a Task from the Queue\n     *\n     * @param task\n     * @returns true if succesfully removed, otherwise false\n     */\n    remove(task: Task): boolean {\n        if (this.m_taskLists.has(task.group)) {\n            const index = this.m_taskLists.get(task.group)?.indexOf(task);\n            if (index !== -1) {\n                this.m_taskLists.get(task.group)?.splice(index as number, 1);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns the number of remaining tasks.\n     *\n     * @param group if group is set, it will return only the remaining tasks for this group,\n     * otherwise it will return the complete amount of tasks left.\n     */\n    numItemsLeft(group?: string): number {\n        let numLeft: number = 0;\n        if (group === undefined) {\n            this.m_taskLists.forEach(tasklist => {\n                numLeft += tasklist.length;\n            });\n        } else {\n            numLeft += this.getTaskList(group)?.length ?? 0;\n        }\n        return numLeft;\n    }\n\n    /**\n     * Processes the next Tasks for a group\n     *\n     * @param group The group the Tasks are pulled from.\n     * @param shouldProcess A condition that, if set will be executed before the task is processed,\n     * if returns true, the task will run\n     * @param n The amount of tasks that should be pulled, @defaults to 1\n     * @returns false if thte list was empty\n     */\n    processNext(group: string, shouldProcess?: (task: Task) => boolean, n: number = 1): boolean {\n        if (!this.getTaskList(group) || this.numItemsLeft(group) <= 0) {\n            return false;\n        }\n        for (let i = 0; i < n && this.numItemsLeft(group) > 0; i++) {\n            const nextTask = this.pull(group, true);\n            if (nextTask !== undefined) {\n                //if a condition is set, execute it\n                if (!shouldProcess || shouldProcess?.(nextTask)) {\n                    nextTask.execute();\n                } else {\n                    //as the task was not executed but already pulled, add it back\n                    //TODO: dont even pull it if it will not execute, this currently\n                    // interferes with the skipping and removal of expired tasks on this.pull\n                    this.add(nextTask);\n                }\n            }\n        }\n        return true;\n    }\n\n    clear() {\n        this.m_taskLists.clear();\n    }\n\n    private pull(group: string, checkIfExpired: boolean = false): Task | undefined {\n        const taskList = this.getTaskList(group);\n        let nextTask;\n        if (taskList) {\n            nextTask = this.getTaskList(group)?.pop();\n            if (checkIfExpired && nextTask && nextTask.isExpired?.()) {\n                return this.pull(group, checkIfExpired);\n            }\n        }\n        return nextTask;\n    }\n\n    private sort(a: Task, b: Task): number {\n        // the highest number in the beginning as the last in the array with\n        // highest priority which equals 0 will start to be processed\n        return b.getPriority() - a.getPriority();\n    }\n\n    private getTaskList(group: string): Task[] | undefined {\n        return this.m_taskLists.get(group);\n    }\n\n    private updateTaskList(taskList: Task[]) {\n        for (let i = 0; i < taskList.length; i++) {\n            const task = taskList[i];\n            if (task?.isExpired?.()) {\n                taskList.splice(i, 1);\n                i--;\n            }\n        }\n        taskList.sort(this.sort);\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { resolveReferenceUri } from \"./UrlUtils\";\n\n/**\n * Custom, app-specific URI resolver interface.\n */\nexport interface UriResolver {\n    /**\n     * Attempt to resolve `URI` to `URL`.\n     *\n     * If given resolver doesn't know about this specific kind of `URI`, it should return string as\n     * received.\n     *\n     * @param input - `URI`\n     * @returns actual `URL` if this handler knows how locate given `uri` or original `uri`\n     */\n    resolveUri(uri: string): string;\n}\n\nexport interface PrefixUriResolverDefinition {\n    [prefix: string]: string;\n}\n\n/**\n * Basic, import-map like {@link UriResolver}.\n *\n * Resolves `uris` basing on exact or prefix match of `key` from `definitions`.\n *\n * In definitions, `key` is matched against input uri with following strategy:\n *  - `key` without trailing `/` -> `key` and input `uri` must be identical\n *  - `key` with trailing `/`, -> `key` is treated as \"package prefix\", so `uri` must start with\n *    `key`\n *\n * Example:\n * ```\n * {\n *     \"local://poiMasterList\": \"/assets/poiMasterList.json\"\n *        // will match only 'local://poiMasterList' and resolve `/assets/poiMasterList.json`\n *     \"local://icons/\": \"/assets/icons/\"\n *        // will match only 'local://icons/ANYPATH' (and similar) and resolve to\n *        // `/assets/icons/ANYPATH\n * }\n * ```\n * Inspired by [`WICG` import maps proposal](https://github.com/WICG/import-maps#the-import-map).\n */\nexport class PrefixMapUriResolver implements UriResolver {\n    constructor(readonly definitions: PrefixUriResolverDefinition) {}\n\n    resolveUri(uri: string) {\n        return Object.keys(this.definitions).reduce((r, key) => {\n            if (key.endsWith(\"/\") && r.startsWith(key)) {\n                const newPrefix = this.definitions[key];\n                return newPrefix + r.substr(key.length);\n            } else if (r === key) {\n                return this.definitions[key];\n            }\n            return r;\n        }, uri);\n    }\n}\n\n/**\n * [UriResolver] that resolve relative `uri`s against to parent resource `uri`.\n */\nexport class RelativeUriResolver implements UriResolver {\n    constructor(readonly parentUri: string) {}\n\n    resolveUri(uri: string) {\n        return resolveReferenceUri(this.parentUri, uri);\n    }\n}\n\n/**\n * Compose URI resolvers.\n *\n * Creates new {@link UriResolver} that applies resolvers in orders or arguments.\n *\n * Example:\n *\n *     const themeUrl = ...; // url of parent object\n *     const childUrlResolver = composeUrlResolvers(\n *           new RelativeUriResolver(themeUrl),\n *           defaultUrlResolver\n *     );\n */\nexport function composeUriResolvers(...resolvers: Array<UriResolver | undefined>): UriResolver {\n    return {\n        resolveUri(originalUrl: string) {\n            return resolvers.reduce((url, resolver) => {\n                if (resolver !== undefined) {\n                    return resolver.resolveUri(url);\n                } else {\n                    return url;\n                }\n            }, originalUrl);\n        }\n    };\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { baseUrl } from \"./UrlUtils\";\n\n/**\n * Get base URL for from where relative URLs will be loaded.\n *\n * * In browser, it resolves to `baseUrl(location.href)` i.e document's base URL\n * (see: https://www.w3.org/TR/WD-html40-970917/htmlweb.html#h-5.1.2).\n *\n * * In node, it resolves to `file://${process.cwd()}`.\n */\nexport function getAppBaseUrl() {\n    if (typeof window === \"undefined\") {\n        return `file://${process.cwd()}/`;\n    }\n    return baseUrl(window.location.href);\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Resolve URI of referenced object w.r.t parent URI.\n *\n * Resolves `childUri` as it would be loaded from location specified by `parentUri`.\n *\n * If `childUri` is absolute, then it is returned unchanged.\n * If `childUri` is origin-absolute path, then only origin path is taken from `parentUri`.\n *\n * See [[baseUri]] for reference how base URL of `parentUri` is determined.\n *\n * Supports `http:`, `https:`, `file:`, `data:` schemes.\n *\n * Examples:\n *\n *     // normal case, child is sibling\n *     https://foo.com/themes/day.json + images/foo.png -> https://foo.com/themes/images/foo.png\n *\n *     // parent is \"folder\", so child is just located in this folder\n *     https://foo.com/themes/ + images/foo.png -> https://foo.com/themes/images/foo.png\n *\n *     // parent looks like leaf, so last component is stripped\n *     https://foo.com/themes + images/foo.png -> https://foo.com/images/foo.png\n *\n *     // origin-absolute URL, takes only origin from parent\n *     https://foo.com/themes/day.json + /fonts/foo.json -> https://foo.com/fonts/foo.json\n *\n * @param parentUri - URI of parent resource\n * @param childUri - URI of child as referenced from parent resource\n * @return `childUrl` as if anchored in location of `parentUrl`\n */\nexport function resolveReferenceUri(parentUri: string | undefined, childUri: string): string {\n    if (absoluteUrlWithOriginRe.test(childUri)) {\n        return childUri;\n    } else if (childUri.startsWith(\"/\")) {\n        const origin = getUrlOrigin(parentUri);\n        return origin + childUri;\n    } else {\n        if (childUri.startsWith(\"./\")) {\n            childUri = childUri.substr(2);\n        }\n        const parentBaseUrl = baseUrl(parentUri);\n        return parentBaseUrl + childUri;\n    }\n}\n\nconst absoluteUrlWithOriginRe = new RegExp(\"^(((?:[a-z]+:)?//)|(file:/)|(data:))\", \"i\");\n\n/**\n * Returns base URL of given resource URL.\n *\n * `Url` with trailing slash are considered genuine 'locations', they are returned as is, however if\n * `url` ends with name component it is treated as \"leaf\", so last path component is removed.\n *\n * Standalone files (without any folder structure) are considered relative to `./`.\n *\n * Examples:\n * ```\n *     https://foo.com/themes/a.json -> https://foo.com/themes/\n *     https://foo.com/themes/ -> https://foo.com/themes/\n *     https://foo.com/themes -> https://foo.com/ // note, themes is treated as leaf\n *     themes/day.json -> themes/\n *     themes -> ./\n * ```\n */\nexport function baseUrl(url: string | undefined) {\n    if (url === undefined) {\n        return \"./\";\n    }\n    let idx = url.indexOf(\"#\");\n    if (idx !== -1) {\n        url = url.slice(0, idx);\n    }\n    idx = url.indexOf(\"?\");\n    if (idx !== -1) {\n        url = url.slice(0, idx);\n    }\n    idx = url.lastIndexOf(\"/\");\n    if (idx === -1) {\n        return \"./\";\n    } else {\n        return url.substring(0, idx + 1);\n    }\n}\n\n/**\n * Get `origin` part of URL.\n *\n * @example\n *    https://example.com/foo -> https://example.com\n *    //example.com:8080/ -> //example.com:8080\n *    file:///etc/hosts ->\n *\n * @param url - input URL\n * @return origin of given URL\n */\nexport function getUrlOrigin(url: string | undefined): string {\n    if (url === undefined) {\n        return \"\";\n    }\n    const parsed = getUrlHostAndProtocol(url);\n    if (parsed.protocol === \"file:\") {\n        return \"file://\";\n    } else if (parsed.host && parsed.protocol) {\n        return parsed.protocol + \"//\" + parsed.host;\n    } else if (parsed.host) {\n        return \"//\" + parsed.host;\n    } else if (parsed.protocol) {\n        return parsed.protocol + \"//\";\n    } else {\n        return \"\";\n    }\n}\n\n/**\n * Parse `host` and `protocol` part from URL.\n */\nexport function getUrlHostAndProtocol(\n    url: string\n): {\n    protocol: string;\n    host: string;\n} {\n    const urlOriginRe = new RegExp(/^(?:([a-z]+:))?\\/\\/([^\\/]*)/, \"i\");\n\n    const match = url.match(urlOriginRe);\n    if (!match) {\n        throw new Error(`getUrlHostAndProtocol: unable to parse URL '${url}'`);\n    }\n    return {\n        protocol: match[1],\n        host: match[2]\n    };\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\ndeclare const process: any;\n\n// cache value, because access to process.env.NODE_ENV is SLOW!\nconst isProduction = process.env.NODE_ENV === \"production\";\n\n//TODO: Make assertHandler configurable\n\n/**\n * Implementation of assert as a development help\n *\n * Note - this is deliberately a global function so that minimizers remove the\n * entire call when building for production.\n *\n * @hidden\n * @param condition - Condition to match, if false, throws an Error(message)\n * @param message - Optional message, defaults to \"ASSERTION failed\"\n */\nexport function assert(condition: boolean, message?: string): void {\n    if (!isProduction) {\n        if (!condition) {\n            throw new Error(message !== undefined ? message : \"ASSERTION failed\");\n        }\n    }\n}\n\nexport function assertExists<T>(element: T | undefined, message?: string): T {\n    if (!isProduction) {\n        if (element === undefined || element === null) {\n            throw new Error(\n                message !== undefined ? message : \"ASSERTION failed: Element is undefined or null\"\n            );\n        }\n    }\n    return element!;\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/VectorTileDecoder\";\nexport * from \"./lib/GeoJsonTilerService\";\nexport * from \"./lib/OmvDecoderDefs\";\nexport * from \"./lib/DataAdapter\";\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    GeoBox,\n    OrientedBox3,\n    Projection,\n    TileKey,\n    TilingScheme,\n    webMercatorTilingScheme\n} from \"@here/harp-geoutils\";\nimport * as THREE from \"three\";\n\nimport { WorldTileProjectionCookie } from \"./OmvUtils\";\n\nexport class DecodeInfo {\n    /**\n     * The [[GeoBox]] of the Tile to decode.\n     */\n    readonly geoBox: GeoBox;\n\n    readonly projectedBoundingBox = new OrientedBox3();\n\n    /**\n     * The tile bounds in the OMV tile space [[webMercatorTilingScheme]].\n     */\n    readonly tileBounds = new THREE.Box3();\n\n    /**\n     * The tile size in the OMV tile space [[webMercatorTilingScheme]].\n     */\n    readonly tileSize = new THREE.Vector3();\n\n    /**\n     * The center of the Tile in the target [[Projection]] space.\n     * Geometries generated by decoding the OMV tile must be relative\n     * to this position.\n     */\n    readonly center = new THREE.Vector3();\n\n    /**\n     * @internal\n     */\n    worldTileProjectionCookie?: WorldTileProjectionCookie;\n\n    /**\n     * Estimated tile size in pixels.\n     */\n    readonly tileSizeOnScreen: number;\n\n    /**\n     * The maximum number of columns.\n     */\n    readonly columnCount: number;\n\n    /**\n     * The maximum number of rows.\n     */\n    readonly rowCount: number;\n\n    /**\n     * Constructs a new [[DecodeInfo]].\n     *\n     * @param targetProjection - The [[Projection]]\n     * @param tileKey - The [[TileKey]] of the Tile to decode.\n     * @param storageLevelOffset - The storage level offset.\n     */\n    constructor(\n        readonly targetProjection: Projection,\n        readonly tileKey: TileKey,\n        readonly storageLevelOffset: number = 0\n    ) {\n        this.geoBox = this.tilingScheme.getGeoBox(tileKey);\n        this.targetProjection.projectBox(this.geoBox, this.projectedBoundingBox);\n        this.projectedBoundingBox.getCenter(this.center);\n        this.tilingScheme.getWorldBox(tileKey, this.tileBounds);\n        this.tileBounds.getSize(this.tileSize);\n        this.tileSizeOnScreen = 256 * Math.pow(2, -this.storageLevelOffset);\n\n        this.columnCount = webMercatorTilingScheme.subdivisionScheme.getLevelDimensionX(\n            this.tileKey.level\n        );\n\n        this.rowCount = webMercatorTilingScheme.subdivisionScheme.getLevelDimensionY(\n            this.tileKey.level\n        );\n    }\n\n    /**\n     * The [[TilingScheme]] of the OMV data, currenly it is defined\n     * to be [[webMercatorTilingScheme]].\n     */\n    get tilingScheme(): TilingScheme {\n        return webMercatorTilingScheme;\n    }\n\n    /**\n     * The [[Projection]] of OMV tiled data, currenly it is defined\n     * to be [[webMercatorProjection]].\n     */\n    get sourceProjection(): Projection {\n        return this.tilingScheme.projection;\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TilerService, WorkerServiceManager } from \"@here/harp-mapview-decoder/index-worker\";\n\nimport { GEOJSON_TILER_SERVICE_TYPE } from \"./OmvDecoderDefs\";\n\n/**\n * GeoJson tiler service.\n *\n * @remarks\n * This services instantiates the geojson-vt based tiler\n * service that is responsible to create small tiles from\n * large GeoJson datasets.\n *\n * @example\n * ```typescript\n * // decoder.ts\n * GeoJsonTilerService.start();\n * ```\n */\nexport class GeoJsonTilerService {\n    /**\n     * Register a vector data tiler service with\n     * {@link @here/harp-mapview-decoder#WorkerServiceManager}.\n     *\n     * @remarks\n     * Has to be called during initialization of decoder bundle.\n     */\n    static start() {\n        WorkerServiceManager.getInstance().register({\n            serviceType: GEOJSON_TILER_SERVICE_TYPE,\n            factory: (serviceId: string) => TilerService.start(serviceId)\n        });\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { GeometryKind, GeometryKindSet } from \"@here/harp-datasource-protocol\";\nimport { MapEnv } from \"@here/harp-datasource-protocol/index-decoder\";\n\nimport {\n    OmvFeatureFilterDescription,\n    OmvFilterDescription,\n    OmvFilterFeatureAttribute,\n    OmvFilterString,\n    OmvGeometryType,\n    OmvLayerFilterDescription\n} from \"./OmvDecoderDefs\";\n\n/**\n * The `OmvFeatureFilter` is designed to work in an `OmvVisitor`/`visitOmv` combination (for\n * example, `OmvDecoder`).\n *\n * @remarks\n * Returning `false` from any of the calls terminates processing of that\n * layer or feature.\n *\n * The `OmvFeatureFilter` is an \"early-opt-out\" filter, which cannot filter individual features,\n * because at that point the features are not really decoded. Use the [[OmvFeatureModifier]] to\n * filter for individual features.\n */\nexport interface OmvFeatureFilter {\n    /**\n     * Returns `true` if the filter contains rules for specific kinds.\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    hasKindFilter: boolean;\n\n    /**\n     * Return `false` if the layer should not be processed.\n     *\n     * @param layer - Current layer.\n     * @param level - Level of tile.\n     */\n    wantsLayer(layer: string, level: number): boolean;\n\n    /**\n     * Return `false` if the point feature should not be processed.\n     *\n     * @param layer - Current layer.\n     * @param feature - Current feature.\n     * @param level - Level of tile.\n     */\n    wantsPointFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean;\n\n    /**\n     * Return `false` if the line feature should not be processed.\n     *\n     * @param layer - Current layer.\n     * @param feature - Current feature.\n     * @param level - Level of tile.\n     */\n    wantsLineFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean;\n\n    /**\n     * Return `false` if the polygon feature should not be processed.\n     *\n     * @param layer - Current layer.\n     * @param feature - Current feature.\n     * @param level - Level of tile.\n     */\n    wantsPolygonFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean;\n\n    /**\n     * Return `false` if kind of object is not enabled and the geometry should not be created.\n     *\n     * @param {(string | string[])} kind Tag \"kind\" of the tag.\n     * @returns {boolean}\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    wantsKind(kind: string | string[]): boolean;\n}\n\n/**\n * The `OmvFeatureModifier` can be used to filter individual features.\n *\n * @remarks\n * It gets passed in the `Env`\n * of the feature, which contains all the values that can be searched for in a style. If a filter\n * function returns false, the feature is ignored, and no geometry is being created.\n *\n * In addition to pure filtering, the `OmvFeatureModifier` can also modify the [[Env]] of the\n * feature, or even add new properties to the feature, for example, traffic states. The\n * `OmvFeatureModifier` is executed before the styles are selected, so the geometry is created with\n * the modified feature properties.\n */\nexport interface OmvFeatureModifier {\n    /**\n     * Check if the point feature described by `env` should be processed. The properties can be\n     * modified or added to.\n     *\n     * @param layer - Current layer.\n     * @param env - Properties of point feature.\n     * @param level - Level of tile.\n     * @returns `false` to ignore feature.\n     */\n    doProcessPointFeature(layer: string, env: MapEnv, level: number): boolean;\n\n    /**\n     * Check if the line feature described by `env` should be processed. The properties can be\n     * modified or added to.\n     *\n     * @param layer - Current layer.\n     * @param env - Properties of line feature.\n     * @param level - Level of tile.\n     * @returns `false` to ignore feature.\n     */\n    doProcessLineFeature(layer: string, env: MapEnv, level: number): boolean;\n\n    /**\n     * Check if the polygon feature described by `env` should be processed. The properties can be\n     * modified or added to.\n     *\n     * @param layer - Current layer.\n     * @param env - Properties of polygon feature.\n     * @param level - Level of tile.\n     * @returns `false` to ignore feature.\n     */\n    doProcessPolygonFeature(layer: string, env: MapEnv, level: number): boolean;\n}\n\n/**\n * Builds an `OmvFilterDescription` (internal type) that specifies an [[OmvFeatureFilter]] as well\n * as an [[OmvFeatureModifier]].\n *\n */\nexport class OmvFeatureFilterDescriptionBuilder {\n    private readonly m_processLayersDefault: boolean = true;\n    private readonly m_processPointsDefault: boolean = true;\n    private readonly m_processLinesDefault: boolean = true;\n    private readonly m_processPolygonsDefault: boolean = true;\n\n    private readonly m_layersToProcess = new Array<OmvLayerFilterDescription>();\n    private readonly m_layersToIgnore = new Array<OmvLayerFilterDescription>();\n    private readonly m_pointsToProcess = new Array<OmvFilterDescription>();\n    private readonly m_ignoredPoints = new Array<OmvFilterDescription>();\n    private readonly m_linesToProcess = new Array<OmvFilterDescription>();\n    private readonly m_linesToIgnore = new Array<OmvFilterDescription>();\n    private readonly m_polygonsToProcess = new Array<OmvFilterDescription>();\n    private readonly m_polygonsToIgnore = new Array<OmvFilterDescription>();\n\n    private m_kindsToProcess: string[] = [];\n    private m_kindsToIgnore: string[] = [];\n\n    /**\n     * Builds an `OmvFilterDescription` (internal type) that specifies an [[OmvFeatureFilter]] as\n     * well as an [[OmvFeatureModifier]].\n     *\n     * @param processLayersDefault - If `true`, all unspecified layers will be processed.\n     * If `false`, all unspecified layers will be ignored.\n     * @param processPointsDefault - If `true`, all unspecified point features will be processed. If\n     * `false`, all unspecified point features will be ignored.\n     * @param processLinesDefault - If `true`, all unspecified line features will be processed. If\n     * `false`, all unspecified line features will be ignored.\n     * @param processPolygonsDefault - If `true`, all unspecified polygon features will be\n     * processed. If `false`, all unspecified polygon features will be ignored.\n     */\n    constructor(\n        options?: OmvFeatureFilterDescriptionBuilder.OmvFeatureFilterDescriptionBuilderOptions\n    ) {\n        if (options) {\n            this.m_processLayersDefault =\n                options.processLayersDefault !== undefined ? options.processLayersDefault : true;\n            this.m_processPointsDefault =\n                options.processPointsDefault !== undefined ? options.processPointsDefault : true;\n            this.m_processLinesDefault =\n                options.processLinesDefault !== undefined ? options.processLinesDefault : true;\n            this.m_processPolygonsDefault =\n                options.processPolygonsDefault !== undefined\n                    ? options.processPolygonsDefault\n                    : true;\n        }\n    }\n\n    /**\n     * Add a layer that should be processed.\n     *\n     * @param layer - Layer name to be matched.\n     * @param match - Match condition.\n     */\n    processLayer(\n        layer: string,\n        match = OmvFilterString.StringMatch.Match,\n        minLevel: number = 0,\n        maxLevel: number = Infinity\n    ) {\n        this.m_layersToProcess.push({\n            name: { value: layer, match },\n            minLevel,\n            maxLevel\n        });\n    }\n\n    /**\n     * Add a layer that should be ignored.\n     *\n     * @param layer - Layer name to be matched.\n     * @param match - Match condition.\n     */\n    ignoreLayer(\n        layer: string,\n        match = OmvFilterString.StringMatch.Match,\n        minLevel: number = 0,\n        maxLevel: number = Infinity\n    ) {\n        this.m_layersToIgnore.push({\n            name: { value: layer, match },\n            minLevel,\n            maxLevel\n        });\n    }\n\n    /**\n     * Add a valid point feature.\n     *\n     * @param options - Feature options.\n     */\n    processPoint(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_pointsToProcess, options);\n    }\n\n    /**\n     * Add valid point features.\n     *\n     * @param options - Multi feature options.\n     */\n    processPoints(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_pointsToProcess, options);\n    }\n\n    /**\n     * Add a point feature that should be ignored.\n     *\n     * @param options - Feature options.\n     */\n    ignorePoint(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_ignoredPoints, options);\n    }\n\n    /**\n     * Add point features that should be ignored.\n     *\n     * @param options - Multi feature options.\n     */\n    ignorePoints(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_ignoredPoints, options);\n    }\n\n    /**\n     * Add a valid line feature.\n     *\n     * @param options - Feature options.\n     */\n    processLine(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_linesToProcess, options);\n    }\n\n    /**\n     * Add valid line features.\n     *\n     * @param options - Multi feature options.\n     */\n    processLines(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_linesToProcess, options);\n    }\n\n    /**\n     * Ignore a line feature.\n     *\n     * @param options - Feature options.\n     */\n    ignoreLine(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_linesToIgnore, options);\n    }\n\n    /**\n     * Ignore line features.\n     *\n     * @param options - Multi feature options.\n     */\n    ignoreLines(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_linesToIgnore, options);\n    }\n\n    /**\n     * Add a valid polygon feature.\n     *\n     * @param options - Feature options.\n     */\n    processPolygon(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_polygonsToProcess, options);\n    }\n\n    /**\n     * Add valid polygon features.\n     *\n     * @param options - Multi feature options.\n     */\n    processPolygons(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_polygonsToProcess, options);\n    }\n\n    /**\n     * Ignore a valid polygon feature.\n     *\n     * @param options - Feature options.\n     */\n    ignorePolygon(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_polygonsToIgnore, options);\n    }\n\n    /**\n     * Ignore polygon features.\n     *\n     * @param options - Multi feature options.\n     */\n    ignorePolygons(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_polygonsToIgnore, options);\n    }\n\n    /**\n     * Add all the specified strings as \"enabledKinds\".\n     *\n     * @param {string[]} enabledKinds List of kinds that should be generated.\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    processKinds(enabledKinds: string[]) {\n        this.m_kindsToProcess = this.m_kindsToProcess.concat(enabledKinds);\n    }\n\n    /**\n     * Add all the specified strings as \"disabledKinds\".\n     *\n     * @param {string[]} disabledKinds List of kinds that should _not_ be generated.\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    ignoreKinds(disabledKinds: string[]) {\n        this.m_kindsToIgnore = this.m_kindsToIgnore.concat(disabledKinds);\n    }\n\n    /**\n     * Create a filter description that can be passed as an option to the [[OmvDataSource]].\n     */\n    createDescription(): OmvFeatureFilterDescription {\n        return {\n            processLayersDefault: this.m_processLayersDefault,\n            processPointsDefault: this.m_processPointsDefault,\n            processLinesDefault: this.m_processLinesDefault,\n            processPolygonsDefault: this.m_processPolygonsDefault,\n\n            layersToProcess: this.m_layersToProcess,\n            layersToIgnore: this.m_layersToIgnore,\n            pointsToProcess: this.m_pointsToProcess,\n            pointsToIgnore: this.m_ignoredPoints,\n            linesToProcess: this.m_linesToProcess,\n            linesToIgnore: this.m_linesToIgnore,\n            polygonsToProcess: this.m_polygonsToProcess,\n            polygonsToIgnore: this.m_polygonsToIgnore,\n\n            kindsToProcess: this.m_kindsToProcess,\n            kindsToIgnore: this.m_kindsToIgnore\n        };\n    }\n\n    private addItem(\n        items: OmvFilterDescription[],\n        options: OmvFeatureFilterDescriptionBuilder.FeatureOption\n    ) {\n        if (options.minLevel === undefined || isNaN(options.minLevel)) {\n            options.minLevel = 0;\n        }\n        if (options.maxLevel === undefined || isNaN(options.maxLevel)) {\n            options.maxLevel = Infinity;\n        }\n\n        const item: OmvFilterDescription = {\n            layerName: {\n                value: options.layer,\n                match:\n                    options.matchLayer === undefined\n                        ? OmvFilterString.StringMatch.Match\n                        : options.matchLayer\n            },\n            geometryTypes:\n                options.geomType !== undefined\n                    ? Array.isArray(options.geomType)\n                        ? options.geomType\n                        : [options.geomType]\n                    : undefined,\n            classes: [\n                {\n                    value: options.featureClass,\n                    match:\n                        options.matchClass === undefined\n                            ? OmvFilterString.StringMatch.Match\n                            : options.matchClass\n                }\n            ],\n            minLevel: options.minLevel,\n            maxLevel: options.maxLevel,\n            featureAttribute: options.featureAttribute\n        };\n\n        items.push(item);\n    }\n\n    private addItems(\n        items: OmvFilterDescription[],\n        options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption\n    ) {\n        if (options.minLevel === undefined || isNaN(options.minLevel)) {\n            options.minLevel = 0;\n        }\n        if (options.maxLevel === undefined || isNaN(options.maxLevel)) {\n            options.maxLevel = Infinity;\n        }\n\n        const item: OmvFilterDescription = {\n            layerName: {\n                value: options.layer,\n                match:\n                    options.matchLayer === undefined\n                        ? OmvFilterString.StringMatch.Match\n                        : options.matchLayer\n            },\n            geometryTypes:\n                options.geomTypes !== undefined\n                    ? Array.isArray(options.geomTypes)\n                        ? options.geomTypes\n                        : [options.geomTypes]\n                    : undefined,\n            classes: options.featureClasses,\n            minLevel: options.minLevel,\n            maxLevel: options.maxLevel,\n            featureAttribute: options.featureAttribute\n        };\n\n        items.push(item);\n    }\n}\n\nexport namespace OmvFeatureFilterDescriptionBuilder {\n    /**\n     * Options for `OmvFeatureFilterDescriptionBuilder`.\n     */\n    export interface OmvFeatureFilterDescriptionBuilderOptions {\n        /**\n         * If `true`, all unspecified layers will be processed. If `false`, all unspecified layers\n         * will be ignored.\n         */\n        processLayersDefault?: boolean;\n        /**\n         * If `true`, all unspecified point features will be processed. If `false`, all unspecified\n         * point features will be ignored.\n         */\n        processPointsDefault?: boolean;\n        /**\n         * If `true`, all unspecified line features will be processed. If `false`, all unspecified\n         * line\n         * features will be ignored.\n         */\n        processLinesDefault?: boolean;\n        /**\n         * If `true`, all unspecified polygon features will be processed. If `false`, all\n         * unspecified polygon features will be ignored.\n         */\n        processPolygonsDefault?: boolean;\n    }\n\n    /**\n     * Description of a single feature.\n     */\n    export interface FeatureOption {\n        /**\n         * Layer name to be matched.\n         */\n        layer: string;\n        /**\n         * Optional geometry type to be limited to. If specified, but does not match, the feature is\n         * ignored.\n         */\n        geomType: OmvGeometryType | OmvGeometryType[] | undefined;\n        /**\n         * Optional class to match. If specified, but does not match, the feature is ignored.\n         */\n        featureClass: string;\n        /**\n         * Match condition for the layer name.\n         */\n        matchLayer?: OmvFilterString.StringMatch;\n        /**\n         * Match condition for `featureClass`.\n         */\n        matchClass?: OmvFilterString.StringMatch;\n        /**\n         * Minimum tile level to match.\n         */\n        minLevel?: number;\n        /**\n         * Maximum tile level to match.\n         */\n        maxLevel?: number;\n        /**\n         * Feature attribute to match.\n         */\n        featureAttribute?: OmvFilterFeatureAttribute;\n    }\n\n    /**\n     * Description for multiple features.\n     */\n    export interface MultiFeatureOption {\n        /**\n         * Layer name to be matched.\n         */\n        layer: string;\n        /**\n         * Optional geometry type to be limited to. If specified, but does not match, the feature is\n         * ignored.\n         */\n        geomTypes?: OmvGeometryType | OmvGeometryType[] | undefined;\n        /**\n         * Optional classes to match. If specified, but does not match, the feature is ignored.\n         */\n        featureClasses?: OmvFilterString[];\n        /**\n         * Match condition for the layer name.\n         */\n        matchLayer?: OmvFilterString.StringMatch;\n        /**\n         * Minimum tile level to match.\n         */\n        minLevel?: number;\n        /**\n         * Maximum tile level to match.\n         */\n        maxLevel?: number;\n        /**\n         * Feature attribute to match.\n         */\n        featureAttribute?: OmvFilterFeatureAttribute;\n    }\n}\n\n/**\n * `OmvFeatureFilter` implementation that uses a `OmvFeatureFilterDescription` to filter `TileData`\n * features before they are completely decoded.\n *\n * @internal\n */\nexport class OmvGenericFeatureFilter implements OmvFeatureFilter {\n    private static matchLayer(\n        layer: string,\n        layerItems: OmvLayerFilterDescription[],\n        level: number\n    ): boolean {\n        for (const layerItem of layerItems) {\n            if (level < layerItem.minLevel || level > layerItem.maxLevel) {\n                continue;\n            }\n\n            if (OmvFilterString.matchString(layer, layerItem.name)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private readonly disabledKinds: GeometryKindSet | undefined;\n    private readonly enabledKinds: GeometryKindSet | undefined;\n\n    constructor(private readonly description: OmvFeatureFilterDescription) {\n        if (this.description.kindsToProcess.length > 0) {\n            this.enabledKinds = new GeometryKindSet(\n                this.description.kindsToProcess as GeometryKind[]\n            );\n        }\n        if (this.description.kindsToIgnore.length > 0) {\n            this.disabledKinds = new GeometryKindSet(\n                this.description.kindsToIgnore as GeometryKind[]\n            );\n        }\n    }\n\n    wantsLayer(layer: string, level: number): boolean {\n        if (OmvGenericFeatureFilter.matchLayer(layer, this.description.layersToProcess, level)) {\n            return true;\n        }\n\n        if (OmvGenericFeatureFilter.matchLayer(layer, this.description.layersToIgnore, level)) {\n            return false;\n        }\n\n        return this.description.processLayersDefault;\n    }\n\n    wantsPointFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.wantsFeature(\n            this.description.pointsToProcess,\n            this.description.pointsToIgnore,\n            layer,\n            geometryType,\n            level,\n            this.description.processPointsDefault\n        );\n    }\n\n    wantsLineFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.wantsFeature(\n            this.description.linesToProcess,\n            this.description.linesToIgnore,\n            layer,\n            geometryType,\n            level,\n            this.description.processLinesDefault\n        );\n    }\n\n    wantsPolygonFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.wantsFeature(\n            this.description.polygonsToProcess,\n            this.description.polygonsToIgnore,\n            layer,\n            geometryType,\n            level,\n            this.description.processPolygonsDefault\n        );\n    }\n\n    /**\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    wantsKind(kind: string | string[]): boolean {\n        // undefined -> no way to filter\n        if (kind === undefined) {\n            return true;\n        }\n\n        return (\n            !(\n                this.disabledKinds !== undefined &&\n                this.disabledKinds.hasOrIntersects(kind as GeometryKind)\n            ) ||\n            (this.enabledKinds !== undefined &&\n                this.enabledKinds.hasOrIntersects(kind as GeometryKind))\n        );\n    }\n\n    /**\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    get hasKindFilter(): boolean {\n        return this.enabledKinds !== undefined || this.disabledKinds !== undefined;\n    }\n\n    private wantsFeature(\n        itemsToProcess: OmvFilterDescription[],\n        itemsToIgnore: OmvFilterDescription[],\n        layer: string,\n        geometryType: OmvGeometryType,\n        level: number,\n        defaultResult: boolean\n    ): boolean {\n        for (const item of itemsToProcess) {\n            if (level < item.minLevel || level > item.maxLevel) {\n                continue;\n            }\n\n            if (!OmvFilterString.matchString(layer, item.layerName)) {\n                // this rule is not for this layer\n                continue;\n            }\n\n            if (item.geometryTypes !== undefined && item.geometryTypes.includes(geometryType)) {\n                return true;\n            }\n        }\n\n        for (const item of itemsToIgnore) {\n            if (!OmvFilterString.matchString(layer, item.layerName)) {\n                // this rule is not for this layer\n                continue;\n            }\n\n            if (item.geometryTypes !== undefined && item.geometryTypes.includes(geometryType)) {\n                return false;\n            }\n        }\n\n        return defaultResult;\n    }\n}\n\n/**\n * An [[OmvFeatureFilter]] implementation that delegates all filter decision\n * returning `true` for any predicate if all delegates return `true`.\n *\n * @internal\n */\nexport class ComposedDataFilter implements OmvFeatureFilter {\n    constructor(readonly filters: OmvFeatureFilter[]) {}\n\n    /**\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    get hasKindFilter() {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result || filter.hasKindFilter,\n            true\n        );\n    }\n\n    wantsLayer(layer: string, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsLayer(layer, level),\n            true\n        );\n    }\n\n    wantsPointFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsPointFeature(layer, geometryType, level),\n            true\n        );\n    }\n\n    wantsLineFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsLineFeature(layer, geometryType, level),\n            true\n        );\n    }\n\n    wantsPolygonFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsPolygonFeature(layer, geometryType, level),\n            true\n        );\n    }\n\n    /**\n     * @deprecated See {@link @here/here-datasource-protocol/BaseTechniqueParams.kind}.\n     */\n    wantsKind(kind: string | string[]): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsKind(kind),\n            true\n        );\n    }\n}\n/**\n * `OmvFeatureModifier` implementation that uses a `OmvFeatureFilterDescription` to filter\n * `TileData` features before they are completely decoded.\n *\n * @internal\n */\nexport class OmvGenericFeatureModifier implements OmvFeatureModifier {\n    static matchItems(\n        layerName: string,\n        featureClass: string,\n        items: OmvFilterDescription[]\n    ): boolean {\n        for (const item of items) {\n            if (item.classes !== undefined) {\n                if (!OmvFilterString.matchString(layerName, item.layerName)) {\n                    continue;\n                }\n                for (const matchClass of item.classes) {\n                    if (OmvFilterString.matchString(featureClass, matchClass)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    static matchAttribute(layerName: string, env: MapEnv, items: OmvFilterDescription[]): boolean {\n        for (const item of items) {\n            if (item.featureAttribute !== undefined) {\n                if (\n                    OmvFilterString.matchString(layerName, item.layerName) &&\n                    env.lookup(item.featureAttribute.key) === item.featureAttribute.value\n                ) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    constructor(private readonly description: OmvFeatureFilterDescription) {}\n\n    doProcessPointFeature(layer: string, env: MapEnv): boolean {\n        return this.doProcessFeature(\n            this.description.pointsToProcess,\n            this.description.pointsToIgnore,\n            layer,\n            env,\n            this.description.processPointsDefault\n        );\n    }\n\n    doProcessLineFeature(layer: string, env: MapEnv): boolean {\n        return this.doProcessFeature(\n            this.description.linesToProcess,\n            this.description.linesToIgnore,\n            layer,\n            env,\n            this.description.processLinesDefault\n        );\n    }\n\n    doProcessPolygonFeature(layer: string, env: MapEnv): boolean {\n        return this.doProcessFeature(\n            this.description.polygonsToProcess,\n            this.description.polygonsToIgnore,\n            layer,\n            env,\n            this.description.processPolygonsDefault\n        );\n    }\n\n    protected doProcessFeature(\n        itemsToProcess: OmvFilterDescription[],\n        itemsToIgnore: OmvFilterDescription[],\n        layer: string,\n        env: MapEnv,\n        defaultResult: boolean\n    ): boolean {\n        if (layer === undefined || (itemsToProcess.length === 0 && itemsToIgnore.length === 0)) {\n            return defaultResult;\n        }\n\n        let featureClass: string | undefined;\n        const featureClassThing = env.lookup(\"class\");\n\n        if (featureClassThing !== undefined && featureClassThing !== null) {\n            featureClass = featureClassThing.toString();\n        }\n\n        if (\n            featureClass &&\n            OmvGenericFeatureModifier.matchItems(layer, featureClass, itemsToProcess)\n        ) {\n            return true;\n        }\n\n        if (\n            featureClass &&\n            OmvGenericFeatureModifier.matchItems(layer, featureClass, itemsToIgnore)\n        ) {\n            return false;\n        }\n\n        if (OmvGenericFeatureModifier.matchAttribute(layer, env, itemsToProcess)) {\n            return true;\n        }\n\n        if (OmvGenericFeatureModifier.matchAttribute(layer, env, itemsToIgnore)) {\n            return false;\n        }\n\n        return defaultResult;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Value } from \"@here/harp-datasource-protocol/index-decoder\";\n\n/**\n * Feature Modifier ids to choose which OmvFeatureModifer should be used in OmvDecoder.\n */\nexport enum FeatureModifierId {\n    /**\n     * Generic feature modifier used when no other modifiers are defined.\n     *\n     * @note You do not need to specify it in [[OmvDataSourceParameters]] as it is added by default\n     * if no other feature modifier is used.\n     */\n    default\n}\n\n/**\n * Definition of a filter.\n */\nexport interface OmvFilterString {\n    /**  String value */\n    value: string;\n    /** Match condition */\n    match: OmvFilterString.StringMatch;\n}\n\n/**\n * Adding the match condition type and the matching function to the namespace of `OmvFilterString`.\n */\nexport namespace OmvFilterString {\n    /**\n     * Match condition.\n     */\n    export enum StringMatch {\n        /** Matches any. */\n        Any,\n        /** Exact match. */\n        Match,\n        /** Matches if a test string starts with a filter string. */\n        StartsWith,\n        /** Matches if a test string contains a filter string. */\n        Contains,\n        /** Matches if a test string ends with a filter string. */\n        EndsWith\n    }\n\n    /**\n     * Check for a string against a filter.\n     *\n     * @param str - The string to check against a filter.\n     * @param filterString - The filter containing the match condition.\n     * @returns `true` if the match condition is satisfied.\n     *\n     * @internal\n     */\n    export function matchString(str: string, filterString: OmvFilterString): boolean {\n        switch (filterString.match) {\n            case OmvFilterString.StringMatch.Any:\n                return true;\n            case OmvFilterString.StringMatch.Match:\n                return str === filterString.value;\n            case OmvFilterString.StringMatch.StartsWith:\n                return filterString.value.startsWith(str);\n            case OmvFilterString.StringMatch.EndsWith:\n                return filterString.value.endsWith(str);\n            default:\n                return str.includes(filterString.value);\n        }\n    }\n}\n\n/**\n * Definition of a filter for a feature attribute\n */\nexport interface OmvFilterFeatureAttribute {\n    key: string;\n    value: Value;\n}\n\nexport enum OmvGeometryType {\n    UNKNOWN = 0,\n    POINT = 1,\n    LINESTRING = 2,\n    POLYGON = 3\n}\n\n/**\n * Internal type of a layer filter description, Should not be publicly available.\n *\n * @hidden\n */\nexport interface OmvLayerFilterDescription {\n    name: OmvFilterString;\n    minLevel: number;\n    maxLevel: number;\n}\n\n/**\n * Internal type of a single filter description, Should not be publicly available.\n *\n * @hidden\n */\nexport interface OmvFilterDescription {\n    layerName: OmvFilterString;\n    geometryTypes?: OmvGeometryType[];\n    classes?: OmvFilterString[];\n    minLevel: number;\n    maxLevel: number;\n    featureAttribute?: OmvFilterFeatureAttribute;\n}\n\n/**\n * Internal type of a complete [[OmvFeatureFilter]] description, should not be publicly available.\n *\n * @hidden\n */\nexport interface OmvFeatureFilterDescription {\n    processLayersDefault: boolean;\n    processPointsDefault: boolean;\n    processLinesDefault: boolean;\n    processPolygonsDefault: boolean;\n\n    layersToProcess: OmvLayerFilterDescription[];\n    layersToIgnore: OmvLayerFilterDescription[];\n    pointsToProcess: OmvFilterDescription[];\n    pointsToIgnore: OmvFilterDescription[];\n    linesToProcess: OmvFilterDescription[];\n    linesToIgnore: OmvFilterDescription[];\n    polygonsToProcess: OmvFilterDescription[];\n    polygonsToIgnore: OmvFilterDescription[];\n\n    // enabledKinds and disabledKinds\n    kindsToProcess: string[];\n    kindsToIgnore: string[];\n}\n\n/**\n * Internal interface for options passed from the [[OmvDataSource]] to the decoder.\n *\n * @internal\n */\nexport interface OmvDecoderOptions {\n    /**\n     * If true, features that have no technique in the theme will be printed to the console (can be\n     * excessive!).\n     */\n    showMissingTechniques?: boolean;\n\n    /**\n     * Gather feature attributes from [[OmvData]]. Defaults to false.\n     */\n    gatherFeatureAttributes?: boolean;\n\n    /**\n     * @deprecated Tile info is not decoded anymore. The same information can be generated\n     * implementing a [[IGeometryProcessor]] and using [[OmvProtobufDataAdapter]] to decode OMV\n     * data.\n     */\n    createTileInfo?: boolean;\n\n    /**\n     * @deprecated Tile info is not decoded anymore. The same information can be generated\n     * implementing a [[IGeometryProcessor]] and using [[OmvProtobufDataAdapter]] to decode OMV\n     * data.\n     */\n    gatherRoadSegments?: boolean;\n\n    /**\n     * Optional storage level offset for [[Tile]]s. Default is -2.\n     */\n    storageLevelOffset?: number;\n\n    /**\n     * If not set to `false` very short text labels will be skipped during decoding based on a\n     * heuristic.\n     */\n    skipShortLabels?: boolean;\n\n    /**\n     * A description for the feature filter which can be safely passed down to the web workers.\n     * It has to be generated with the help of the [[OmvFeatureFilterDescriptionBuilder]] (to\n     * guarantee the correctness).\n     */\n    filterDescription?: OmvFeatureFilterDescription | null;\n\n    // NOTE: Consider using OmvFeatureModifiers objects already instead of ids, this way we could\n    // get rid of politicalView property as properly configured feature modifier (with country\n    // code), would be already defined here.\n    /**\n     * List of user specified [[OmvFeatureModifier]]s, list order declares the order of processing.\n     *\n     * Each identifier is used to choose corresponding OmvFeatureModifier, if undefined at least\n     * [[OmvGenericFeatureModifier]] is added to decoder.\n     */\n    featureModifiers?: FeatureModifierId[];\n\n    /**\n     * Country code (lower-case ISO 3166-1 alpha-2) defining optional point of view to be used.\n     * Set to empty string (\"\") if you want to use default (widely accepted) point of view.\n     * If set to `undefined` leaves current political view decoder configuration.\n     */\n    politicalView?: string;\n\n    enableElevationOverlay?: boolean;\n\n    roundUpCoordinatesIfNeeded?: boolean;\n}\n\n/**\n * Vector tile decoder service type id.\n *\n * @remarks\n * Used for requesting decoder services using `WorkerServiceManager`.\n *\n * @internal\n */\nexport const VECTOR_TILE_DECODER_SERVICE_TYPE = \"vector-tile-decoder\";\n\n/**\n * GeoJson tiler service type id.\n *\n * @remarks\n * Used for requesting tiler services using `WorkerServiceManager`.\n *\n * @internal\n */\nexport const GEOJSON_TILER_SERVICE_TYPE = \"geojson-tiler\";\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { MapEnv } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { LoggerManager } from \"@here/harp-utils\";\n\nimport { OmvFeatureModifier } from \"./OmvDataFilter\";\n\nconst logger = LoggerManager.instance.create(\"OmvPoliticalViewFeatureModifier\");\n\n/**\n * Modifies the MapEnv of the Vector Tiles in Tilezen format with different POV.\n *\n * This feature modifier updates feature properties according to different political\n * point of view.\n * Political views (or alternate point of views) are supported in Tilezen by adding\n * country posix (lower-case ISO 3166-1 alpha-2 compliant) to __default__ property name.\n * For example country borders (__boundaries__ layer) may have both __kind__ property for\n * default (commonly accepted point of view) and __kind:xx__ for alternate points of view.\n * This way disputed borders may be visible or not for certain regions and different\n * users (clients).\n *\n * @hidden\n */\nexport class OmvPoliticalViewFeatureModifier implements OmvFeatureModifier {\n    private readonly m_countryCode: string;\n\n    /**\n     * C-tor.\n     *\n     * @param pov - The code of the country (in lower-case ISO 3166-1 alpha-2 format) which\n     * point of view should be taken into account.\n     */\n    constructor(pov: string) {\n        this.m_countryCode = pov;\n    }\n\n    /**\n     * Simply passes all points to rendering, points features does not support PoliticalView.\n     *\n     * @param layer - Current layer.\n     * @param env - Properties of point feature.\n     * @param level - Level of tile.\n     * @returns always `true` to pass feature.\n     */\n    doProcessPointFeature(layer: string, env: MapEnv, level: number): boolean {\n        return true;\n    }\n\n    /**\n     * Implements line features processing changing \"kind\" attribute depending on point of view.\n     *\n     * Currently only line features support different point of view.\n     * @param layer - The name of the layer.\n     * @param env - The environment to use.\n     * @returns always `true` to pass lines for rendering.\n     */\n    doProcessLineFeature(layer: string, env: MapEnv, level: number): boolean {\n        this.rewriteEnvironment(layer, env);\n        return true;\n    }\n\n    /**\n     * Simply pass all polygons to rendering, this feature does not support PoliticalView yet.\n     *\n     * @param layer - Current layer.\n     * @param env - Properties of polygon feature.\n     * @param level - Level of tile.\n     * @returns `true` to pass feature.\n     */\n    doProcessPolygonFeature(layer: string, env: MapEnv, level: number): boolean {\n        return true;\n    }\n\n    /**\n     * Rewrites the Environment to match the different points of view.\n     *\n     * @param layer - The layer name.\n     * @param env - The environment to use.\n     */\n    private rewriteEnvironment(layer: string, env: MapEnv) {\n        // For now we need to rewrite \"boundaries\" layer only.\n        if (this.isPoliticalViewLayer(layer)) {\n            this.updateEnvironment(env, this.m_countryCode, \"kind\");\n        }\n    }\n\n    private updateEnvironment(env: MapEnv, countryCode: string, propName: string): void {\n        const value = this.getAlternativePov(env, countryCode, propName);\n        if (value !== undefined) {\n            env.entries[propName] = value;\n        }\n    }\n\n    private getAlternativePov(env: MapEnv, countryCode: string, propName: string) {\n        logger.log(\"Get alternate POV: \", JSON.stringify(env));\n        const cc = countryCode;\n        const value = env.lookup(`${propName}:${cc}`);\n        logger.log(\"Lookup POV: \", `${propName}:${cc}`, value);\n        if (typeof value === \"string\" && value.length > 0) {\n            logger.log(\"Found POV: \", `${propName}:${cc}`, value);\n            return value;\n        } else {\n            return undefined;\n        }\n    }\n\n    private isPoliticalViewLayer(layer: string): boolean {\n        return layer === \"boundaries\";\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    EarthConstants,\n    isVector3Like,\n    Vector2Like,\n    Vector3Like,\n    webMercatorProjection\n} from \"@here/harp-geoutils\";\nimport * as THREE from \"three\";\n\nimport { DecodeInfo } from \"./DecodeInfo\";\n\n/**\n * @hidden\n */\nexport function isArrayBufferLike(data: any): data is ArrayBufferLike {\n    if (typeof SharedArrayBuffer !== \"undefined\") {\n        return data instanceof ArrayBuffer || data instanceof SharedArrayBuffer;\n    } else {\n        return data instanceof ArrayBuffer;\n    }\n}\n\n/**\n * @hidden\n */\nexport function lat2tile(lat: number, zoom: number): number {\n    return Math.round(\n        ((1 -\n            Math.log(Math.tan((lat * Math.PI) / 180) + 1 / Math.cos((lat * Math.PI) / 180)) /\n                Math.PI) /\n            2) *\n            Math.pow(2, zoom)\n    );\n}\n\n/**\n * @hidden\n */\nexport function tile2lat(y: number, level: number): number {\n    const n = Math.PI - (2 * Math.PI * y) / Math.pow(2, level);\n    return (180 / Math.PI) * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n}\n\nexport interface WorldTileProjectionCookie {\n    extents: number;\n    top: number;\n    left: number;\n    scale: number;\n}\n\nexport function createWorldTileTransformationCookie(extents: number, decodeInfo: DecodeInfo) {\n    const { north, west } = decodeInfo.geoBox;\n    const N = Math.log2(extents);\n    const scale = Math.pow(2, decodeInfo.tileKey.level + N);\n    return {\n        extents,\n        scale,\n        top: lat2tile(north, decodeInfo.tileKey.level + N),\n        left: Math.round(((west + 180) / 360) * scale)\n    };\n}\n\n/**\n * @hidden\n */\nexport function tile2world<VectorType extends Vector3Like>(\n    extents: number,\n    decodeInfo: DecodeInfo,\n    position: Vector2Like,\n    flipY: boolean = false,\n    target: VectorType\n): VectorType {\n    if (\n        decodeInfo.worldTileProjectionCookie === undefined ||\n        decodeInfo.worldTileProjectionCookie.extents !== extents\n    ) {\n        decodeInfo.worldTileProjectionCookie = createWorldTileTransformationCookie(\n            extents,\n            decodeInfo\n        );\n    }\n\n    const { top, left, scale } = decodeInfo.worldTileProjectionCookie;\n    const R = EarthConstants.EQUATORIAL_CIRCUMFERENCE;\n\n    target.x = ((left + position.x) / scale) * R;\n    target.y = ((top + (flipY ? -position.y : position.y)) / scale) * R;\n    target.z = isVector3Like(position) ? position.z : 0;\n\n    return target;\n}\n\n/**\n * @hidden\n */\nexport function world2tile<VectorType extends Vector2Like>(\n    extents: number,\n    decodeInfo: DecodeInfo,\n    position: Vector3Like,\n    flipY: boolean = false,\n    target: VectorType\n): VectorType {\n    if (\n        decodeInfo.worldTileProjectionCookie === undefined ||\n        decodeInfo.worldTileProjectionCookie.extents !== extents\n    ) {\n        decodeInfo.worldTileProjectionCookie = createWorldTileTransformationCookie(\n            extents,\n            decodeInfo\n        );\n    }\n    const { top, left, scale } = decodeInfo.worldTileProjectionCookie;\n    const R = EarthConstants.EQUATORIAL_CIRCUMFERENCE;\n\n    target.x = Math.round((position.x / R) * scale - left);\n    target.y = Math.round((flipY ? -1 : 1) * ((position.y / R) * scale - top));\n    if (isVector3Like(target)) {\n        target.z = position.z;\n    }\n    return target;\n}\n\nexport function webMercatorTile2TargetWorld(\n    extents: number,\n    decodeInfo: DecodeInfo,\n    position: THREE.Vector2 | THREE.Vector3,\n    target: THREE.Vector3,\n    scaleHeight: boolean,\n    flipY: boolean = false\n) {\n    tile2world(extents, decodeInfo, position, flipY, target);\n    decodeInfo.targetProjection.reprojectPoint(webMercatorProjection, target, target);\n    if (position instanceof THREE.Vector3 && scaleHeight) {\n        target.z *= decodeInfo.targetProjection.getScaleFactor(target);\n    }\n}\n\nexport function webMercatorTile2TargetTile(\n    extents: number,\n    decodeInfo: DecodeInfo,\n    position: THREE.Vector2 | THREE.Vector3,\n    target: THREE.Vector3,\n    scaleHeight: boolean,\n    flipY: boolean = false\n) {\n    webMercatorTile2TargetWorld(extents, decodeInfo, position, target, scaleHeight, flipY);\n    target.sub(decodeInfo.center);\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ClippedVertex } from \"@here/harp-geometry/lib/ClipPolygon\";\nimport { ShapeUtils, Vector2 } from \"three\";\n\n/**\n * A class representing a ring of a polygon geometry.\n */\nexport class Ring {\n    /**\n     * The signed area of this `Ring`.\n     *\n     * @remarks\n     * The sign of the area depends on the projection and the axis orientation\n     * of the ring coordinates.\n     * For example, given a ring with `CW winding`: `area > 0` with Y-axis that grows downwards and `area < 0` otherwise.\n     */\n    readonly area: number;\n\n    /**\n     * The winding of this `Ring`.\n     *\n     * @remarks\n     * Derived from the sign of the `area` of this Ring.\n     */\n    readonly winding: boolean;\n\n    /**\n     * The vertex stride.\n     */\n    readonly vertexStride: number;\n\n    /**\n     * Creates a new `Ring`.\n     *\n     * @param points The coordinates of the rings.\n     * @param textureCoords The optional `Array` of texture coordinates.\n     * @param extents The extents of the tile bounds.\n     * @param hasClipInfo A flag indicating that vertices of this `Ring` may be clipped.\n     */\n    constructor(\n        readonly points: Vector2[],\n        readonly textureCoords?: Vector2[],\n        readonly extents: number = 4 * 1024,\n        readonly hasClipInfo: boolean = false\n    ) {\n        if (textureCoords !== undefined && textureCoords.length !== points.length) {\n            throw new Error(\n                `the array of texture coordinates must have the same number of elements of the array of points`\n            );\n        }\n\n        this.vertexStride = 2;\n\n        if (textureCoords !== undefined) {\n            this.vertexStride = this.vertexStride + 2;\n        }\n\n        this.area = ShapeUtils.area(this.points);\n        this.winding = this.area < 0;\n    }\n\n    /**\n     * Returns a flattened `Array` containing the position and texture coordinates of this `Ring`.\n     *\n     * @param array The target `Array`.\n     * @param offset Optional offset into the array.\n     */\n    toArray(array: number[] = [], offset: number = 0): number[] {\n        this.points.forEach((p, i) => p.toArray(array, offset + this.vertexStride * i));\n        this.textureCoords?.forEach((p, i) => p.toArray(array, offset + this.vertexStride * i + 2));\n        return array;\n    }\n\n    /**\n     * Tests if the edge connecting the vertex at `index` with\n     * the vertex at `index+1` should be connected by a line\n     * when stroking the polygon.\n     *\n     * @param index The index of the first vertex of the outline edge.\n     */\n    isProperEdge(index: number): boolean {\n        const extents = this.extents;\n        const nextIdx = (index + 1) % this.points.length;\n        const curr: ClippedVertex = this.points[index];\n        const next: ClippedVertex = this.points[nextIdx];\n\n        if (this.hasClipInfo) {\n            if (curr.x !== next.x && curr.y !== next.y) {\n                // `curr` and `next` must be connected with a line\n                // because they don't form a vertical or horizontal lines.\n                return true;\n            }\n\n            const currAtEdge = curr.x % this.extents === 0 || curr.y % this.extents === 0;\n\n            if (!currAtEdge) {\n                // the points are connected with a line\n                // because at least one of the points is not on\n                // the tile boundary.\n                return true;\n            }\n\n            const nextAtEdge = next.x % this.extents === 0 || next.y % this.extents === 0;\n\n            if (!nextAtEdge) {\n                // the points are connected with a line\n                // because at least one of the points is not on\n                // the tile boundary.\n                return true;\n            }\n\n            const currWasClipped = curr.isClipped === true;\n            const nextWasClipped = next.isClipped === true;\n\n            return !currWasClipped && !nextWasClipped;\n        }\n\n        return !(\n            (curr.x <= 0 && next.x <= 0) ||\n            (curr.x >= extents && next.x >= extents) ||\n            (curr.y <= 0 && next.y <= 0) ||\n            (curr.y >= extents && next.y >= extents)\n        );\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { StyleSetEvaluator } from \"@here/harp-datasource-protocol/index-decoder\";\n\nimport { OmvFeatureFilter } from \"./OmvDataFilter\";\n\n/**\n * An [[OmvFeatureFilter]] implementation that queries [[StyleSetEvaluator]]\n * if given layers/features should be processed.\n *\n * Used in [[OmvDecoder]] to skip processing of layers/features that doesn't\n * have associated rules in style.\n *\n * @see [[StyleSetEvaluator.wantsFeature]]\n * @see [[StyleSetEvaluator.wantsLayer]]\n */\nexport class StyleSetDataFilter implements OmvFeatureFilter {\n    hasKindFilter: boolean = false;\n\n    constructor(readonly styleSetEvaluator: StyleSetEvaluator) {}\n\n    wantsLayer(layer: string, level: number): boolean {\n        return this.styleSetEvaluator.wantsLayer(layer);\n    }\n\n    wantsPointFeature(layer: string): boolean {\n        return this.styleSetEvaluator.wantsFeature(layer, \"point\");\n    }\n\n    wantsLineFeature(layer: string): boolean {\n        return this.styleSetEvaluator.wantsFeature(layer, \"line\");\n    }\n\n    wantsPolygonFeature(layer: string): boolean {\n        return this.styleSetEvaluator.wantsFeature(layer, \"polygon\");\n    }\n\n    wantsKind(): boolean {\n        return true;\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    AttributeMap,\n    BufferAttribute,\n    composeTechniqueTextureName,\n    DecodedTile,\n    ExtrudedPolygonTechnique,\n    FillTechnique,\n    Geometry,\n    GeometryType,\n    getFeatureId,\n    getFeatureText,\n    Group,\n    IndexedTechnique,\n    InterleavedBufferAttribute,\n    isExtrudedLineTechnique,\n    isExtrudedPolygonTechnique,\n    isFillTechnique,\n    isLabelRejectionLineTechnique,\n    isLineMarkerTechnique,\n    isLineTechnique,\n    isPoiTechnique,\n    isShaderTechnique,\n    isSolidLineTechnique,\n    isSpecialDashesLineTechnique,\n    isStandardTechnique,\n    isTextTechnique,\n    LineMarkerTechnique,\n    PathGeometry,\n    PoiGeometry,\n    PoiTechnique,\n    scaleHeight,\n    StyleColor,\n    Technique,\n    TextGeometry,\n    TextPathGeometry,\n    TextTechnique,\n    TextureCoordinateType,\n    textureCoordinateType\n} from \"@here/harp-datasource-protocol\";\nimport {\n    Env,\n    IMeshBuffers,\n    StyleSetEvaluator,\n    Value\n} from \"@here/harp-datasource-protocol/index-decoder\";\nimport {\n    AttrEvaluationContext,\n    evaluateTechniqueAttr\n} from \"@here/harp-datasource-protocol/lib/TechniqueAttr\";\nimport { clipPolygon } from \"@here/harp-geometry/lib/ClipPolygon\";\nimport {\n    EdgeLengthGeometrySubdivisionModifier,\n    SubdivisionMode\n} from \"@here/harp-geometry/lib/EdgeLengthGeometrySubdivisionModifier\";\nimport { SphericalGeometrySubdivisionModifier } from \"@here/harp-geometry/lib/SphericalGeometrySubdivisionModifier\";\nimport {\n    GeoBox,\n    GeoCoordinates,\n    normalizedEquirectangularProjection,\n    ProjectionType,\n    Vector3Like,\n    webMercatorProjection\n} from \"@here/harp-geoutils\";\nimport { LineGroup } from \"@here/harp-lines/lib/Lines\";\nimport { triangulateLine } from \"@here/harp-lines/lib/TriangulateLines\";\nimport { ExtrusionFeatureDefs } from \"@here/harp-materials/lib/MapMeshMaterialsDefs\";\nimport { assert, getOptionValue, LoggerManager, Math2D } from \"@here/harp-utils\";\nimport earcut from \"earcut\";\nimport * as THREE from \"three\";\n\nimport { DecodeInfo } from \"./DecodeInfo\";\nimport { ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport {\n    tile2world,\n    webMercatorTile2TargetTile,\n    webMercatorTile2TargetWorld,\n    world2tile\n} from \"./OmvUtils\";\nimport { Ring } from \"./Ring\";\n\nconst logger = LoggerManager.instance.create(\"OmvDecodedTileEmitter\");\n\nconst tempTileOrigin = new THREE.Vector3();\nconst tempVertNormal = new THREE.Vector3();\nconst tempFootDisp = new THREE.Vector3();\nconst tempRoofDisp = new THREE.Vector3();\n\nconst tmpV2 = new THREE.Vector2();\nconst tmpV2r = new THREE.Vector2();\nconst tmpV3 = new THREE.Vector3();\nconst tmpV3r = new THREE.Vector3();\nconst tmpV4 = new THREE.Vector3();\n\nconst tempP0 = new THREE.Vector2();\nconst tempP1 = new THREE.Vector2();\nconst tempPreviousTangent = new THREE.Vector2();\n\nconst tmpPointA = new THREE.Vector3();\nconst tmpPointB = new THREE.Vector3();\nconst tmpPointC = new THREE.Vector3();\nconst tmpPointD = new THREE.Vector3();\nconst tmpPointE = new THREE.Vector3();\nconst tmpLine = new THREE.Line3();\n\n/**\n * Minimum number of pixels per character. Used during estimation if there is enough screen space\n * available to render a text. Based on the estimated screen size of a tile.\n */\nconst MIN_AVERAGE_CHAR_WIDTH = 5;\n\n/**\n * Estimation \"fudge factor\", tweaking the size estimation to\n *\n * a) allow room for zooming in to the tile, and\n *\n * b) allow for some tilting, where the edge of a tile closer to the camera has more space.\n *\n * Useful values are between 0 (allow all labels), 0.5 (allow labels at twice the default display\n * size of the tile) and 1.0 (skip labels that would normally not be displayed at default tile\n * size).\n */\nconst SIZE_ESTIMATION_FACTOR = 0.5;\n\n/**\n * Maximum allowed corner angle inside a label path.\n */\nconst MAX_CORNER_ANGLE = Math.PI / 8;\n\n/**\n * Used to identify an invalid (or better: unused) array index.\n */\nconst INVALID_ARRAY_INDEX = -1;\n\nfunction createIndexBufferAttribute(\n    elements: ArrayLike<number>,\n    maxValue: number,\n    name: string = \"index\"\n): BufferAttribute {\n    const type = maxValue > 65535 ? \"uint32\" : \"uint16\";\n    const storage = type === \"uint32\" ? new Uint32Array(elements) : new Uint16Array(elements);\n    const buffer = storage.buffer;\n    return {\n        itemCount: 1,\n        name,\n        buffer,\n        type\n    };\n}\n\ninterface LinesGeometry {\n    type: GeometryType;\n    lines: LineGroup;\n    technique: number;\n\n    /**\n     * Optional array of objects. It can be used to pass user data from the geometry to the mesh.\n     */\n    objInfos?: AttributeMap[];\n\n    /**\n     * Optional list of feature start indices. The indices point into the index attribute.\n     */\n    featureStarts?: number[];\n}\n\n// for tilezen by default extrude all buildings even those without height data\nclass MeshBuffers implements IMeshBuffers {\n    readonly positions: number[] = [];\n    readonly normals: number[] = [];\n    readonly textureCoordinates: number[] = [];\n    readonly colors: number[] = [];\n    readonly extrusionAxis: number[] = [];\n    readonly indices: number[] = [];\n    readonly edgeIndices: number[] = [];\n    readonly groups: Group[] = [];\n    readonly texts: number[] = [];\n    readonly pathLengths: number[] = [];\n    readonly stringCatalog: Array<string | undefined> = [];\n    readonly imageTextures: number[] = [];\n\n    /**\n     * Optional list of feature start indices. The indices point into the index attribute.\n     */\n    readonly featureStarts: number[] = [];\n\n    /**\n     * Optional list of edge feature start indices. The indices point into the edge index attribute.\n     */\n    readonly edgeFeatureStarts: number[] = [];\n\n    /**\n     * An optional list of additional data that can be used as additional data for the object\n     * picking.\n     */\n    readonly objInfos: AttributeMap[] = [];\n\n    /**\n     * Angle in degrees from north clockwise which represents the direction the icons can be\n     * shifted.\n     */\n    readonly offsetDirections: number[] = [];\n\n    constructor(readonly type: GeometryType) {}\n\n    addText(text: string) {\n        let index = this.stringCatalog.indexOf(text);\n\n        if (index < 0) {\n            index = this.stringCatalog.length;\n            this.stringCatalog.push(text);\n        }\n        return index;\n    }\n}\n\nenum LineType {\n    Simple,\n    Complex\n}\n\ntype TexCoordsFunction = (tilePos: THREE.Vector2, tileExtents: number) => THREE.Vector2;\nconst tmpColor = new THREE.Color();\n\n/**\n * Options for VectorTileDataEmitter, see {@link DecoderOptions} and {@link OmvDecoderOptions}.\n * @internal\n */\nexport interface VectorTileDataEmitterOptions {\n    gatherFeatureAttributes?: boolean;\n    skipShortLabels?: boolean;\n    enableElevationOverlay?: boolean;\n    languages?: string[];\n}\n\nexport class VectorTileDataEmitter {\n    // mapping from style index to mesh buffers\n    private readonly m_meshBuffers = new Map<number, MeshBuffers>();\n\n    private readonly m_geometries: Geometry[] = [];\n    private readonly m_textGeometries: TextGeometry[] = [];\n    private readonly m_textPathGeometries: TextPathGeometry[] = [];\n    private readonly m_pathGeometries: PathGeometry[] = [];\n    private readonly m_poiGeometries: PoiGeometry[] = [];\n    private readonly m_simpleLines: LinesGeometry[] = [];\n    private readonly m_solidLines: LinesGeometry[] = [];\n\n    private readonly m_sources: string[] = [];\n    private m_maxGeometryHeight: number = 0;\n    private m_minGeometryHeight: number = 0;\n\n    constructor(\n        private readonly m_decodeInfo: DecodeInfo,\n        private readonly m_styleSetEvaluator: StyleSetEvaluator,\n        private readonly m_options: VectorTileDataEmitterOptions = {}\n    ) {\n        this.m_options.gatherFeatureAttributes = m_options.gatherFeatureAttributes ?? false;\n        this.m_options.skipShortLabels = m_options.skipShortLabels ?? true;\n        this.m_options.enableElevationOverlay = m_options.enableElevationOverlay ?? false;\n    }\n\n    get projection() {\n        return this.m_decodeInfo.targetProjection;\n    }\n\n    get center() {\n        return this.m_decodeInfo.center;\n    }\n\n    /**\n     * Creates the Point of Interest geometries for the given feature.\n     *\n     * @param layer - Tile's layer to be processed.\n     * @param extents - Tile's layer extents.\n     * @param geometry - The feature geometry in local webMercator coordinates.\n     * @param env - The [[MapEnv]] containing the environment information for the map.\n     * @param techniques - The array of [[Technique]] that will be applied to the geometry.\n     */\n    processPointFeature(\n        layer: string,\n        extents: number,\n        geometry: THREE.Vector3[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[]\n    ): void {\n        const env = context.env;\n        this.processFeatureCommon(env);\n\n        const { tileKey, columnCount, rowCount } = this.m_decodeInfo;\n\n        // adjust the extents to ensure that points on the right and bottom edges\n        // of the tile are discarded.\n        const xExtent = tileKey.column + 1 < columnCount ? extents - 1 : extents;\n        const yExtent = tileKey.row + 1 < rowCount ? extents - 1 : extents;\n\n        // get the point positions (in tile space) that are inside the tile bounds.\n        const tilePositions = geometry.filter(p => {\n            return p.x >= 0 && p.x <= xExtent && p.y >= 0 && p.y <= yExtent;\n        });\n\n        if (tilePositions.length === 0) {\n            // nothing to do, no geometry within the tile bound.\n            return;\n        }\n\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n\n            const techniqueIndex = technique._index;\n            const meshBuffers = this.findOrCreateMeshBuffers(techniqueIndex, GeometryType.Point);\n\n            if (meshBuffers === undefined) {\n                continue;\n            }\n\n            const { positions, texts, imageTextures, objInfos, offsetDirections } = meshBuffers;\n\n            const shouldCreateTextGeometries =\n                isTextTechnique(technique) || isPoiTechnique(technique);\n\n            let imageTexture: string | undefined;\n            const wantsPoi = isPoiTechnique(technique);\n\n            if (wantsPoi) {\n                const poiTechnique = technique as PoiTechnique;\n                imageTexture = evaluateTechniqueAttr(context, poiTechnique.imageTexture);\n\n                // TODO: Move to decoder independent parts of code.\n                if (poiTechnique.poiName !== undefined) {\n                    imageTexture = evaluateTechniqueAttr(context, poiTechnique.poiName);\n                } else if (typeof poiTechnique.poiNameField === \"string\") {\n                    const poiNameFieldValue = env.lookup(poiTechnique.poiNameField) as string;\n                    imageTexture = poiNameFieldValue;\n                } else if (typeof poiTechnique.imageTextureField === \"string\") {\n                    const imageTextureValue = env.lookup(poiTechnique.imageTextureField) as string;\n                    imageTexture = composeTechniqueTextureName(imageTextureValue, poiTechnique);\n                }\n            }\n\n            const scaleHeights = scaleHeight(context, technique, this.m_decodeInfo.tileKey.level);\n            const featureId = getFeatureId(env.entries);\n            for (const pos of tilePositions) {\n                if (shouldCreateTextGeometries) {\n                    const textTechnique = technique as TextTechnique;\n                    const text = getFeatureText(context, textTechnique, this.m_options.languages);\n\n                    if (text !== undefined && text.length > 0) {\n                        texts.push(meshBuffers.addText(text));\n                    } else {\n                        texts.push(INVALID_ARRAY_INDEX);\n                    }\n                }\n\n                // Always store the position, otherwise the following POIs will be\n                // misplaced.\n                if (shouldCreateTextGeometries) {\n                    webMercatorTile2TargetWorld(\n                        extents,\n                        this.m_decodeInfo,\n                        pos,\n                        tmpV3,\n                        scaleHeights\n                    );\n                } else {\n                    webMercatorTile2TargetTile(\n                        extents,\n                        this.m_decodeInfo,\n                        pos,\n                        tmpV3,\n                        scaleHeights\n                    );\n                }\n\n                // For planar projection the world z coordinate (potentially scaled) is taken,\n                // for spherical projection the z coordinate in the source projection (no scaling needed) is taken:\n                const height = this.projection.type === ProjectionType.Planar ? tmpV3.z : pos.z;\n                if (height > this.m_maxGeometryHeight) {\n                    this.m_maxGeometryHeight = height;\n                } else if (height < this.m_minGeometryHeight) {\n                    this.m_minGeometryHeight = height;\n                }\n\n                positions.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                objInfos.push(this.m_options.gatherFeatureAttributes ? env.entries : featureId);\n                offsetDirections.push((env.lookup(\"offset_direction\") as number) ?? 0);\n\n                if (wantsPoi) {\n                    if (imageTexture === undefined) {\n                        imageTextures.push(INVALID_ARRAY_INDEX);\n                    } else {\n                        imageTextures.push(meshBuffers.addText(imageTexture));\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     *\n     * Creates the line geometries for the given feature.\n     *\n     * @param layer - Tile's layer to be processed.\n     * @param extents - Tile's layer extents.\n     * @param geometry - The current feature containing the main geometry.\n     * @param env - The [[MapEnv]] containing the environment information for the map.\n     * @param techniques - The array of [[Technique]] that will be applied to the geometry.\n     */\n    processLineFeature(\n        layer: string,\n        extents: number,\n        geometry: ILineGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[]\n    ): void {\n        const env = context.env;\n        this.processFeatureCommon(env);\n\n        const localLines: number[][] = []; // lines in target tile space.\n        const worldLines: number[][] = []; // lines in world space.\n        const uvs: number[][] = [];\n        const offsets: number[][] = [];\n        const projectedBoundingBox = this.m_decodeInfo.projectedBoundingBox;\n\n        let localLineSegments: number[][]; // lines in target tile space for special dashes.\n\n        const tileWidth = projectedBoundingBox.extents.x * 2;\n        const tileHeight = projectedBoundingBox.extents.y * 2;\n        const tileSizeWorld = Math.max(tileWidth, tileHeight);\n\n        let computeTexCoords: TexCoordsFunction | undefined;\n        let texCoordinateType: TextureCoordinateType | undefined;\n\n        const hasUntiledLines = geometry[0].untiledPositions !== undefined;\n        const scaleHeights = false; // No need to scale height, source data is 2D.\n\n        // If true, special handling for dashes is required (round and diamond shaped dashes).\n        let hasIndividualLineSegments = false;\n        let hasContinuousLineSegments = false;\n\n        // Check if any of the techniques needs texture coordinates\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n            if (!computeTexCoords) {\n                computeTexCoords = this.getComputeTexCoordsFunc(technique);\n                texCoordinateType = this.getTextureCoordinateType(technique);\n            } else {\n                // Support generation of only one type of texture coordinates.\n                const otherTexCoordType = this.getTextureCoordinateType(technique);\n                assert(otherTexCoordType === undefined || texCoordinateType === otherTexCoordType);\n            }\n\n            hasIndividualLineSegments =\n                hasIndividualLineSegments || isSpecialDashesLineTechnique(technique);\n\n            hasContinuousLineSegments = hasContinuousLineSegments || !hasIndividualLineSegments;\n        }\n\n        for (const polyline of geometry) {\n            // Compute the world position of the untiled line and its distance to the origin of the\n            // line to properly join lines.\n            const untiledLine: number[] = [];\n            let lineDist = 0;\n            if (hasUntiledLines) {\n                this.m_decodeInfo.targetProjection.projectPoint(\n                    polyline.untiledPositions![0],\n                    tmpV3r\n                );\n                polyline.untiledPositions!.forEach(pos => {\n                    // Calculate the distance to the next un-normalized point.\n                    this.m_decodeInfo.targetProjection.projectPoint(pos, tmpV3);\n                    lineDist += tmpV3.distanceTo(tmpV3r);\n                    tmpV3r.copy(tmpV3);\n\n                    // Pushed the normalized point for line matching.\n                    this.m_decodeInfo.targetProjection.projectPoint(pos.normalized(), tmpV3);\n                    untiledLine.push(tmpV3.x, tmpV3.y, tmpV3.z, lineDist);\n                });\n            }\n\n            // Add continuous line as individual segments to improve special dashes by overlapping\n            // their connecting vertices. The technique/style should defined round or rectangular\n            // caps.\n            if (hasIndividualLineSegments) {\n                localLineSegments = [];\n\n                // Compute length of whole line and offsets of individual segments.\n                let lineLength = 0;\n                const pointCount = polyline.positions.length;\n                if (pointCount > 1) {\n                    let lastSegmentOffset = 0;\n\n                    for (let i = 0; i < pointCount - 1; i++) {\n                        const localLine: number[] = [];\n                        const worldLine: number[] = [];\n                        const lineUvs: number[] = [];\n                        const segmentOffsets: number[] = [];\n\n                        const pos1 = polyline.positions[i];\n                        const pos2 = polyline.positions[i + 1];\n                        webMercatorTile2TargetWorld(\n                            extents,\n                            this.m_decodeInfo,\n                            pos1,\n                            tmpV3,\n                            scaleHeights\n                        );\n                        worldLine.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                        webMercatorTile2TargetWorld(\n                            extents,\n                            this.m_decodeInfo,\n                            pos2,\n                            tmpV4,\n                            scaleHeights\n                        );\n                        worldLine.push(tmpV4.x, tmpV4.y, tmpV4.z);\n\n                        if (computeTexCoords) {\n                            computeTexCoords(pos1, extents).toArray(lineUvs, lineUvs.length);\n                            computeTexCoords(pos2, extents).toArray(lineUvs, lineUvs.length);\n                        }\n                        if (hasUntiledLines) {\n                            // Find where in the [0...1] range relative to the line our current\n                            // vertex lies.\n                            let offset =\n                                this.findRelativePositionInLine(tmpV3, untiledLine) / lineDist;\n                            segmentOffsets.push(offset);\n                            offset = this.findRelativePositionInLine(tmpV4, untiledLine) / lineDist;\n                            segmentOffsets.push(offset);\n                        } else {\n                            segmentOffsets.push(lastSegmentOffset);\n\n                            // Compute length of segment and whole line to scale down later.\n                            const segmentLength = tmpV3.distanceTo(tmpV4);\n                            lineLength += segmentLength;\n                            lastSegmentOffset += segmentLength;\n                            segmentOffsets.push(lastSegmentOffset);\n                        }\n\n                        tmpV3.sub(this.m_decodeInfo.center);\n                        localLine.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                        tmpV4.sub(this.m_decodeInfo.center);\n                        localLine.push(tmpV4.x, tmpV4.y, tmpV4.z);\n\n                        localLineSegments!.push(localLine);\n                        worldLines.push(worldLine);\n                        uvs.push(lineUvs);\n                        offsets.push(segmentOffsets);\n                    }\n                }\n\n                if (!hasUntiledLines && lineLength > 0) {\n                    // Scale down each individual segment to range [0..1] for whole line.\n                    for (const segOffsets of offsets) {\n                        segOffsets.forEach((offs, index) => {\n                            segOffsets[index] = offs / lineLength;\n                        });\n                    }\n                }\n            }\n\n            // Add continuous lines\n            if (hasContinuousLineSegments) {\n                const localLine: number[] = [];\n                const worldLine: number[] = [];\n                const lineUvs: number[] = [];\n                const lineOffsets: number[] = [];\n                polyline.positions.forEach(pos => {\n                    webMercatorTile2TargetWorld(\n                        extents,\n                        this.m_decodeInfo,\n                        pos,\n                        tmpV3,\n                        scaleHeights\n                    );\n                    worldLine.push(tmpV3.x, tmpV3.y, tmpV3.z);\n\n                    if (computeTexCoords) {\n                        computeTexCoords(pos, extents).toArray(lineUvs, lineUvs.length);\n                    }\n                    if (hasUntiledLines) {\n                        // Find where in the [0...1] range relative to the line our current vertex\n                        // lines.\n                        const offset =\n                            this.findRelativePositionInLine(tmpV3, untiledLine) / lineDist;\n                        lineOffsets.push(offset);\n                    }\n                    tmpV3.sub(this.m_decodeInfo.center);\n                    localLine.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                });\n                localLines.push(localLine);\n                worldLines.push(worldLine);\n                uvs.push(lineUvs);\n                offsets.push(lineOffsets);\n            }\n        }\n\n        const wantCircle = this.m_decodeInfo.tileKey.level >= 11;\n\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n            const techniqueIndex = technique._index;\n            const techniqueName = technique.name;\n\n            if (isLineTechnique(technique) || isSolidLineTechnique(technique)) {\n                const lineGeometry = isLineTechnique(technique)\n                    ? this.m_simpleLines\n                    : this.m_solidLines;\n\n                const lineType = isLineTechnique(technique) ? LineType.Simple : LineType.Complex;\n\n                if (hasIndividualLineSegments) {\n                    assert(\n                        localLineSegments! !== undefined,\n                        \"OmvDecodedTileEmitter#processLineFeature: \" +\n                            \"Internal error - No localLineSegments\"\n                    );\n\n                    this.applyLineTechnique(\n                        lineGeometry,\n                        technique,\n                        techniqueIndex,\n                        lineType,\n                        env.entries,\n                        localLineSegments!,\n                        context,\n                        this.getTextureCoordinateType(technique) ? uvs : undefined,\n                        offsets\n                    );\n                }\n                if (localLines.length > 0) {\n                    this.applyLineTechnique(\n                        lineGeometry,\n                        technique,\n                        techniqueIndex,\n                        lineType,\n                        env.entries,\n                        localLines,\n                        context,\n                        this.getTextureCoordinateType(technique) ? uvs : undefined,\n                        hasUntiledLines ? offsets : undefined\n                    );\n                }\n            } else if (\n                isTextTechnique(technique) ||\n                isPoiTechnique(technique) ||\n                isLineMarkerTechnique(technique)\n            ) {\n                const textTechnique = technique as TextTechnique;\n                const text = getFeatureText(context, textTechnique, this.m_options.languages);\n\n                if (text === undefined || text.length === 0) {\n                    continue;\n                }\n                let validLines: number[][] = [];\n\n                if (this.m_options.skipShortLabels) {\n                    // Filter the lines, keep only those that are long enough for labelling. Also,\n                    // split jagged label paths to keep processing and rendering only those that\n                    // have no sharp corners, which would not be rendered anyway.\n\n                    const worldUnitsPerPixel = tileSizeWorld / this.m_decodeInfo.tileSizeOnScreen;\n                    const minEstimatedLabelLength =\n                        MIN_AVERAGE_CHAR_WIDTH *\n                        text.length *\n                        worldUnitsPerPixel *\n                        SIZE_ESTIMATION_FACTOR;\n                    const minEstimatedLabelLengthSqr =\n                        minEstimatedLabelLength * minEstimatedLabelLength;\n\n                    validLines = this.splitJaggyLines(\n                        worldLines,\n                        minEstimatedLabelLengthSqr,\n                        MAX_CORNER_ANGLE\n                    );\n                } else {\n                    validLines = worldLines;\n                }\n\n                if (validLines.length === 0) {\n                    continue;\n                }\n\n                if (isTextTechnique(technique)) {\n                    if (text === undefined) {\n                        continue;\n                    }\n                    for (const path of validLines) {\n                        const pathLengthSqr = Math2D.computeSquaredLineLength(path);\n                        this.m_textPathGeometries.push({\n                            technique: techniqueIndex,\n                            path,\n                            pathLengthSqr,\n                            text: String(text),\n                            objInfos: this.m_options.gatherFeatureAttributes\n                                ? env.entries\n                                : getFeatureId(env.entries)\n                        });\n                    }\n                } else {\n                    const lineMarkerTechnique = technique as LineMarkerTechnique;\n\n                    let imageTexture = evaluateTechniqueAttr(\n                        context,\n                        lineMarkerTechnique.imageTexture\n                    );\n\n                    // TODO: `imageTextureField` and `imageTexturePrefix` and `imageTexturePostfix`\n                    // are now deprecated\n\n                    // TODO: Move to decoder independent parts of code.\n                    if (typeof lineMarkerTechnique.imageTextureField === \"string\") {\n                        const imageTextureValue = env.lookup(lineMarkerTechnique.imageTextureField);\n                        imageTexture = imageTextureValue as string;\n                        if (typeof lineMarkerTechnique.imageTexturePrefix === \"string\") {\n                            imageTexture = lineMarkerTechnique.imageTexturePrefix + imageTexture;\n                        }\n                        if (typeof lineMarkerTechnique.imageTexturePostfix === \"string\") {\n                            imageTexture = imageTexture + lineMarkerTechnique.imageTexturePostfix;\n                        }\n                    }\n\n                    for (const aLine of validLines) {\n                        this.m_poiGeometries.push({\n                            technique: techniqueIndex,\n                            positions: {\n                                name: \"position\",\n                                type: \"float\",\n                                buffer: new Float64Array(aLine).buffer,\n                                itemCount: 3\n                            },\n                            texts: [0],\n                            stringCatalog: [text, imageTexture],\n                            imageTextures: [1],\n                            objInfos: this.m_options.gatherFeatureAttributes\n                                ? [env.entries]\n                                : [getFeatureId(env.entries)]\n                        });\n                    }\n                }\n            } else if (isLabelRejectionLineTechnique(technique)) {\n                for (const path of worldLines) {\n                    const worldPath: Vector3Like[] = [];\n                    for (let i = 0; i < path.length; i += 3) {\n                        worldPath.push(new THREE.Vector3().fromArray(path, i) as Vector3Like);\n                    }\n                    this.m_pathGeometries.push({\n                        path: worldPath\n                    });\n                }\n            } else if (isExtrudedLineTechnique(technique)) {\n                const meshBuffers = this.findOrCreateMeshBuffers(\n                    techniqueIndex,\n                    GeometryType.ExtrudedLine\n                );\n                if (meshBuffers === undefined) {\n                    continue;\n                }\n                const { positions, indices, groups, featureStarts, objInfos } = meshBuffers;\n                const start = indices.length;\n\n                const lineWidth = evaluateTechniqueAttr<number>(context, technique.lineWidth);\n\n                if (lineWidth === undefined) {\n                    continue;\n                }\n\n                const techniqueCaps = evaluateTechniqueAttr<string>(\n                    context,\n                    technique.caps,\n                    \"Circle\"\n                );\n\n                const addCircle = wantCircle && techniqueCaps === \"Circle\";\n\n                localLines.forEach(aLine => {\n                    triangulateLine(aLine, lineWidth, positions, indices, addCircle);\n                    featureStarts.push(start);\n                    objInfos.push(\n                        this.m_options.gatherFeatureAttributes\n                            ? env.entries\n                            : getFeatureId(env.entries)\n                    );\n                });\n\n                const count = indices.length - start;\n                groups.push({ start, count, technique: techniqueIndex });\n            } else {\n                logger.warn(\n                    `OmvDecodedTileEmitter#processLineFeature: Invalid line technique\n                     ${techniqueName} for layer: ${env.entries.$layer} `\n                );\n            }\n        }\n    }\n\n    /**\n     * Creates the polygons geometries for the given feature.\n     *\n     * @param layer - Tile's layer to be processed.\n     * @param extents - Tile's layer extents.\n     * @param geometry - The current feature containing the main geometry.\n     * @param feature - The [[MapEnv]] containing the environment information for the map.\n     * @param techniques - The array of [[Technique]] that will be applied to the geometry.\n     */\n    processPolygonFeature(\n        layer: string,\n        extents: number,\n        geometry: IPolygonGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[]\n    ): void {\n        const env = context.env;\n        this.processFeatureCommon(env);\n\n        const scaleHeights = false; // No need to scale height, source data is 2D.\n\n        techniques.forEach(technique => {\n            if (technique === undefined) {\n                return;\n            }\n\n            const techniqueIndex = technique._index;\n\n            if (techniqueIndex === undefined) {\n                throw new Error(\n                    \"OmvDecodedTileEmitter#processPolygonFeature: \" +\n                        \"Internal error - No technique index\"\n                );\n            }\n\n            let objectBounds: THREE.Box3 | undefined;\n\n            const bbox = env.lookup(\"bbox\");\n            if (Array.isArray(bbox)) {\n                const [west, south, east, north] = bbox;\n                const geoBox = new GeoBox(\n                    new GeoCoordinates(south, west),\n                    new GeoCoordinates(north, east)\n                );\n                objectBounds = new THREE.Box3();\n                webMercatorProjection.projectBox(geoBox, objectBounds);\n            }\n\n            const polygons: Ring[][] = [];\n\n            const isExtruded = isExtrudedPolygonTechnique(technique);\n            const isFilled = isFillTechnique(technique);\n            const isStandard = isStandardTechnique(technique);\n\n            const isPolygon =\n                isExtruded ||\n                isFilled ||\n                isStandard ||\n                (isShaderTechnique(technique) && technique.primitive === \"mesh\");\n\n            const computeTexCoords = this.getComputeTexCoordsFunc(technique, objectBounds);\n\n            const shouldClipPolygons = isPolygon && !isExtruded;\n\n            for (const polygon of geometry) {\n                const rings: Ring[] = [];\n                for (let i = 0; i < polygon.rings.length; i++) {\n                    const isExterior = i === 0;\n                    let ringCoords: THREE.Vector2[] = polygon.rings[i];\n\n                    // Disable clipping for the polygon geometries\n                    // rendered using the extruded-polygon technique.\n                    // We can't clip these polygons for now because\n                    // otherwise we could break the current assumptions\n                    // used to add oultines around the extruded geometries.\n                    if (shouldClipPolygons) {\n                        // Quick test to avoid clipping if all the coords\n                        // of the current polygon are inside the tile bounds.\n                        const hasCoordsOutsideTileBounds = ringCoords.some(\n                            p => p.x < 0 || p.x > extents || p.y < 0 || p.y > extents\n                        );\n                        if (hasCoordsOutsideTileBounds) {\n                            ringCoords = clipPolygon(ringCoords, extents);\n                        }\n                    }\n\n                    const area = THREE.ShapeUtils.area(ringCoords);\n\n                    // According to MVT spec, the rings defining a polygon follow this layout:\n                    // [[ext-ring], seq([int-ring])]\n                    //\n                    // For example:\n                    // ┌───────ext1───────┐\n                    // │                  │\n                    // │  ┌────hole────┐  │\n                    // │  │            │  │\n                    // │  │            │  │    w:CW     w:CCW\n                    // │  │            │  │   [[ext1], [hole]]\n                    // │  │            │  │\n                    // │  │            │  │\n                    // │  │            │  │\n                    // │  └──────>─────┘  │\n                    // │                  │\n                    // └─────────<────────┘\n                    // So, if one exterior ring get clipped to a zero-area polygon we\n                    // can imply that all the inner rings collapsed as well.\n                    // As per spec, all the inner rings must enclosed within the exterior ring.\n                    // Using this assumption, we can skip the whole polygon.\n                    if (isExterior && area === 0) {\n                        break;\n                    }\n\n                    // For holes, push the current ring only if it has a non-zero area\n                    if (area !== 0) {\n                        let textureCoords: THREE.Vector2[] | undefined;\n\n                        if (computeTexCoords !== undefined) {\n                            textureCoords = ringCoords.map(coord =>\n                                computeTexCoords(coord, extents)\n                            );\n                        }\n\n                        rings.push(\n                            new Ring(ringCoords, textureCoords, extents, shouldClipPolygons)\n                        );\n                    }\n                }\n\n                if (rings.length > 0) {\n                    polygons.push(rings);\n                }\n            }\n\n            const isLine = isSolidLineTechnique(technique) || isLineTechnique(technique);\n            if (isPolygon) {\n                this.applyPolygonTechnique(polygons, technique, techniqueIndex, context, extents);\n            } else if (isLine) {\n                const lineGeometry =\n                    technique.name === \"line\" ? this.m_simpleLines : this.m_solidLines;\n\n                const lineType = technique.name === \"line\" ? LineType.Simple : LineType.Complex;\n\n                // Use individual line segments instead of a continuous line in special cases (round\n                // and diamond shaped dashes).\n                const needIndividualLineSegments = isSpecialDashesLineTechnique(technique);\n\n                polygons.forEach(rings => {\n                    const lines: number[][] = [];\n                    const offsets: number[][] | undefined = needIndividualLineSegments\n                        ? []\n                        : undefined;\n                    rings.forEach(ring => {\n                        const length = ring.points.length;\n                        let line: number[] = [];\n\n                        // Compute length of whole line and offsets of individual segments.\n                        let ringLength = 0;\n                        let lastSegmentOffset = 0;\n                        let segmentOffsets: number[] | undefined = needIndividualLineSegments\n                            ? []\n                            : undefined;\n\n                        for (let i = 0; i < length; ++i) {\n                            if (needIndividualLineSegments && line.length > 0) {\n                                // Allocate a line for every segment.\n                                line = [];\n                                segmentOffsets = [];\n                            }\n\n                            const nextIdx = (i + 1) % length;\n                            const curr = ring.points[i];\n                            const next = ring.points[nextIdx];\n\n                            const properEdge = ring.isProperEdge(i);\n\n                            if (!properEdge && line.length !== 0) {\n                                lines.push(line);\n                                line = [];\n                            } else if (properEdge && line.length === 0) {\n                                webMercatorTile2TargetTile(\n                                    extents,\n                                    this.m_decodeInfo,\n                                    tmpV2.copy(curr),\n                                    tmpV3,\n                                    scaleHeights\n                                );\n                                line.push(tmpV3.x, tmpV3.y, tmpV3.z);\n\n                                if (needIndividualLineSegments) {\n                                    // Add next point as the end point of this line segment.\n                                    webMercatorTile2TargetTile(\n                                        extents,\n                                        this.m_decodeInfo,\n                                        tmpV2.copy(next),\n                                        tmpV4,\n                                        scaleHeights\n                                    );\n                                    line.push(tmpV4.x, tmpV4.y, tmpV4.z);\n\n                                    segmentOffsets!.push(lastSegmentOffset);\n\n                                    // Compute length of segment and whole line to scale down later.\n                                    const segmentLength = tmpV3.distanceTo(tmpV4);\n                                    ringLength += segmentLength;\n                                    lastSegmentOffset += segmentLength;\n                                    segmentOffsets!.push(lastSegmentOffset);\n                                }\n                            }\n                            if (properEdge && !needIndividualLineSegments) {\n                                webMercatorTile2TargetTile(\n                                    extents,\n                                    this.m_decodeInfo,\n                                    tmpV2.copy(next),\n                                    tmpV3,\n                                    scaleHeights\n                                );\n                                line.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                            }\n\n                            if (needIndividualLineSegments && line.length > 0 && ringLength > 0) {\n                                // Scale down each individual segment to range [0..1] for the whole\n                                // line.\n                                segmentOffsets!.forEach((offs, index) => {\n                                    segmentOffsets![index] = offs / ringLength;\n                                });\n\n                                // Close the line segment as a single line.\n                                lines.push(line);\n                                offsets!.push(segmentOffsets!);\n                            }\n                        }\n\n                        if (!needIndividualLineSegments && line.length > 0) {\n                            lines.push(line);\n                        }\n                    });\n\n                    if (lines.length === 0) {\n                        return;\n                    }\n\n                    this.applyLineTechnique(\n                        lineGeometry,\n                        technique,\n                        techniqueIndex,\n                        lineType,\n                        env.entries,\n                        lines,\n                        context,\n                        undefined,\n                        offsets!\n                    );\n                });\n            }\n        });\n    }\n\n    /**\n     * Creates the geometries that belongs to the [[Tile].\n     *\n     * @returns The [[DecodedTile]]\n     */\n    getDecodedTile(): DecodedTile {\n        this.createGeometries();\n        this.processSimpleLines(this.m_simpleLines);\n        this.processLines(this.m_solidLines);\n\n        const decodedTile: DecodedTile = {\n            techniques: this.m_styleSetEvaluator.decodedTechniques,\n            geometries: this.m_geometries,\n            decodeTime: undefined\n        };\n        if (this.m_textGeometries.length > 0) {\n            decodedTile.textGeometries = this.m_textGeometries;\n        }\n        if (this.m_poiGeometries.length > 0) {\n            decodedTile.poiGeometries = this.m_poiGeometries;\n        }\n        if (this.m_textPathGeometries.length > 0) {\n            decodedTile.textPathGeometries = this.m_textPathGeometries;\n        }\n        if (this.m_pathGeometries.length > 0) {\n            decodedTile.pathGeometries = this.m_pathGeometries;\n        }\n        if (this.m_sources.length !== 0) {\n            decodedTile.copyrightHolderIds = this.m_sources;\n        }\n        decodedTile.maxGeometryHeight = this.m_maxGeometryHeight;\n        decodedTile.minGeometryHeight = this.m_minGeometryHeight;\n        return decodedTile;\n    }\n\n    /**\n     * Split the lines array into multiple parts if there are sharp corners. Reject parts that are\n     * too short to display the label text.\n     *\n     * @param {number[][]} lines Array containing the points of the paths.\n     * @param {number} minEstimatedLabelLengthSqr Minimum label size squared.\n     * @param {number} maxCornerAngle Maximum angle between consecutive path segments in radians.\n     * @returns The split and filtered lines array.\n     */\n    protected splitJaggyLines(\n        lines: number[][],\n        minEstimatedLabelLengthSqr: number,\n        maxCornerAngle: number\n    ): number[][] {\n        const validLines: number[][] = [];\n\n        const computeBoundingBoxSizeSqr = (\n            aLine: number[],\n            startIndex: number,\n            endIndex: number\n        ): number => {\n            let minX = Number.MAX_SAFE_INTEGER;\n            let maxX = Number.MIN_SAFE_INTEGER;\n            let minY = Number.MAX_SAFE_INTEGER;\n            let maxY = Number.MIN_SAFE_INTEGER;\n            for (let i = startIndex; i < endIndex; i += 3) {\n                const x = aLine[i];\n                const y = aLine[i + 1];\n                if (x < minX) {\n                    minX = x;\n                }\n                if (x > maxX) {\n                    maxX = x;\n                }\n                if (y < minY) {\n                    minY = y;\n                }\n                if (y > maxY) {\n                    maxY = y;\n                }\n            }\n\n            return (maxX - minX) * (maxX - minX) + (maxY - minY) * (maxY - minY);\n        };\n\n        // Work on a copy of the path.\n        const pathsToCheck = lines.slice();\n\n        while (pathsToCheck.length > 0) {\n            const path = pathsToCheck.pop();\n\n            if (path === undefined || path.length < 6) {\n                continue;\n            }\n\n            let splitIndex = -1;\n\n            for (let i = 0; i < path.length - 3; i += 3) {\n                tempP0.set(path[i], path[i + 1]);\n                tempP1.set(path[i + 3], path[i + 4]);\n                const tangent = tempP1.sub(tempP0).normalize();\n\n                if (i > 0) {\n                    const theta = Math.atan2(\n                        tempPreviousTangent.x * tangent.y - tangent.x * tempPreviousTangent.y,\n                        tangent.dot(tempPreviousTangent)\n                    );\n\n                    if (Math.abs(theta) > maxCornerAngle) {\n                        splitIndex = i;\n                        break;\n                    }\n                }\n                tempPreviousTangent.set(tangent.x, tangent.y);\n            }\n\n            if (splitIndex > 0) {\n                // Estimate if the first part of the path is long enough for the label.\n                const firstPathLengthSqr = computeBoundingBoxSizeSqr(path, 0, splitIndex + 3);\n                // Estimate if the second part of the path is long enough for the label.\n                const secondPathLengthSqr = computeBoundingBoxSizeSqr(\n                    path,\n                    splitIndex,\n                    path.length\n                );\n\n                if (firstPathLengthSqr > minEstimatedLabelLengthSqr) {\n                    // Split off the valid first path points with a clone of the path.\n                    validLines.push(path.slice(0, splitIndex + 3));\n                }\n\n                if (secondPathLengthSqr > minEstimatedLabelLengthSqr) {\n                    // Now process the second part of the path, it may have to be split\n                    // again.\n                    pathsToCheck.push(path.slice(splitIndex));\n                }\n            } else {\n                // Estimate if the path is long enough for the label, otherwise ignore\n                // it for rendering text. First, compute the bounding box in world\n                // coordinates.\n                const pathLengthSqr = computeBoundingBoxSizeSqr(path, 0, path.length);\n\n                if (pathLengthSqr > minEstimatedLabelLengthSqr) {\n                    validLines.push(path);\n                }\n            }\n        }\n\n        return validLines;\n    }\n\n    private getTextureCoordinateType(technique: Technique): TextureCoordinateType | undefined {\n        // Set TileSpace coordinate type to generate texture coordinates for the displacement map\n        // used in elevation overlay.\n        if (\n            (isFillTechnique(technique) ||\n                isSolidLineTechnique(technique) ||\n                isExtrudedPolygonTechnique(technique)) &&\n            this.m_options.enableElevationOverlay\n        ) {\n            return TextureCoordinateType.TileSpace;\n        }\n\n        return textureCoordinateType(technique);\n    }\n\n    private getComputeTexCoordsFunc(\n        technique: Technique,\n        objectBounds?: THREE.Box3\n    ): TexCoordsFunction | undefined {\n        const texCoordType = this.getTextureCoordinateType(technique);\n\n        switch (texCoordType) {\n            case TextureCoordinateType.TileSpace:\n                return (tilePos: THREE.Vector2, tileExtents: number): THREE.Vector2 => {\n                    const uv = tilePos.clone().divideScalar(tileExtents);\n                    uv.y = 1 - uv.y;\n                    return uv;\n                };\n\n            case TextureCoordinateType.EquirectangularSpace:\n                return (tilePos: THREE.Vector2, extents: number): THREE.Vector2 => {\n                    const worldPos = tile2world(extents, this.m_decodeInfo, tilePos, false, tmpV3r);\n                    const uv = normalizedEquirectangularProjection.reprojectPoint(\n                        webMercatorProjection,\n                        worldPos\n                    );\n                    return new THREE.Vector2(uv.x, uv.y);\n                };\n\n            case TextureCoordinateType.FeatureSpace:\n                if (!objectBounds) {\n                    return undefined;\n                }\n                return (tilePos: THREE.Vector2, extents: number): THREE.Vector2 => {\n                    const worldPos = tile2world(extents, this.m_decodeInfo, tilePos, false, tmpV3r);\n                    const uv = new THREE.Vector2(worldPos.x, worldPos.y);\n                    if (objectBounds) {\n                        uv.x -= objectBounds.min.x;\n                        uv.y -= objectBounds.min.y;\n                        uv.x /= objectBounds.max.x - objectBounds.min.x;\n                        uv.y /= objectBounds.max.y - objectBounds.min.y;\n                    }\n                    uv.y = 1 - uv.y;\n                    return uv;\n                };\n\n            default:\n                return undefined;\n        }\n    }\n\n    private applyLineTechnique(\n        linesGeometry: LinesGeometry[],\n        technique: IndexedTechnique,\n        techniqueIndex: number,\n        lineType = LineType.Complex,\n        featureAttributes: AttributeMap,\n        lines: number[][],\n        context: AttrEvaluationContext,\n        uvs?: number[][],\n        offsets?: number[][]\n    ): void {\n        let lineGroup: LineGroup;\n        const lineGroupGeometries = linesGeometry.find(aLine => aLine.technique === techniqueIndex);\n        const hasNormalsAndUvs = uvs !== undefined;\n        if (lineGroupGeometries === undefined) {\n            lineGroup = new LineGroup(hasNormalsAndUvs, undefined, lineType === LineType.Simple);\n            const aLine: LinesGeometry = {\n                type: lineType === LineType.Complex ? GeometryType.SolidLine : GeometryType.Line,\n                technique: techniqueIndex,\n                lines: lineGroup\n            };\n\n            if (this.m_options.gatherFeatureAttributes) {\n                aLine.objInfos = [featureAttributes];\n                aLine.featureStarts = [0];\n            }\n\n            linesGeometry.push(aLine);\n        } else {\n            lineGroup = lineGroupGeometries.lines;\n\n            if (\n                this.m_options.gatherFeatureAttributes &&\n                lineGroupGeometries.objInfos &&\n                lineGroupGeometries.featureStarts\n            ) {\n                // Add ID to tag the geometry, also provide the current length of the index\n                // attribute\n                lineGroupGeometries.objInfos.push(featureAttributes);\n                lineGroupGeometries.featureStarts.push(lineGroup.indices.length);\n            }\n        }\n        let i = 0;\n        lines.forEach(aLine => {\n            lineGroup.add(\n                this.m_decodeInfo.center,\n                aLine,\n                this.projection,\n                offsets ? offsets[i] : undefined,\n                uvs ? uvs[i] : undefined\n            );\n            i++;\n        });\n    }\n\n    private applyPolygonTechnique(\n        polygons: Ring[][],\n        technique: Technique,\n        techniqueIndex: number,\n        context: AttrEvaluationContext,\n        extents: number\n    ): void {\n        if (polygons.length === 0) {\n            return;\n        }\n\n        const isExtruded = isExtrudedPolygonTechnique(technique);\n\n        const geometryType = isExtruded ? GeometryType.ExtrudedPolygon : GeometryType.Polygon;\n        const meshBuffers = this.findOrCreateMeshBuffers(techniqueIndex, geometryType);\n\n        if (meshBuffers === undefined) {\n            return;\n        }\n\n        const extrudedPolygonTechnique = technique as ExtrudedPolygonTechnique;\n        const fillTechnique = technique as FillTechnique;\n        const boundaryWalls = extrudedPolygonTechnique.boundaryWalls === true;\n\n        const isFilled = isFillTechnique(technique);\n        const texCoordType = this.getTextureCoordinateType(technique);\n\n        let height = evaluateTechniqueAttr<number>(context, extrudedPolygonTechnique.height);\n\n        let floorHeight = evaluateTechniqueAttr<number>(\n            context,\n            extrudedPolygonTechnique.floorHeight\n        );\n\n        if (height === undefined) {\n            // Get the height values for the footprint and extrusion.\n            const featureHeight = context.env.lookup(\"height\") as number;\n            const styleSetDefaultHeight = evaluateTechniqueAttr<number>(\n                context,\n                extrudedPolygonTechnique.defaultHeight\n            );\n            height =\n                featureHeight !== undefined\n                    ? featureHeight\n                    : styleSetDefaultHeight !== undefined\n                    ? styleSetDefaultHeight\n                    : 0;\n        }\n\n        if (floorHeight === undefined) {\n            const featureMinHeight = context.env.lookup(\"min_height\") as number;\n            floorHeight = featureMinHeight !== undefined && !isFilled ? featureMinHeight : 0;\n        }\n\n        // Prevent that extruded buildings are completely flat (can introduce errors in normal\n        // computation and extrusion).\n        height = Math.max(floorHeight + ExtrusionFeatureDefs.MIN_BUILDING_HEIGHT, height);\n\n        const tileLevel = this.m_decodeInfo.tileKey.level;\n\n        const scaleHeights =\n            isExtruded && scaleHeight(context, extrudedPolygonTechnique, tileLevel);\n\n        this.m_decodeInfo.tileBounds.getCenter(tempTileOrigin);\n\n        const {\n            positions,\n            normals,\n            textureCoordinates,\n            colors,\n            extrusionAxis,\n            indices,\n            edgeIndices,\n            groups\n        } = meshBuffers;\n\n        const isSpherical = this.m_decodeInfo.targetProjection.type === ProjectionType.Spherical;\n\n        const edgeWidth = isExtruded\n            ? extrudedPolygonTechnique.lineWidth ?? 0.0\n            : isFilled\n            ? fillTechnique.lineWidth ?? 0.0\n            : 0.0;\n        const hasEdges = typeof edgeWidth === \"number\" ? edgeWidth > 0.0 : true;\n\n        let color: THREE.Color | undefined;\n        if (isExtrudedPolygonTechnique(technique)) {\n            if (getOptionValue(technique.vertexColors, false)) {\n                let colorValue = evaluateTechniqueAttr<StyleColor>(context, technique.color);\n                if (colorValue === undefined) {\n                    const featureColor = context.env.lookup(\"color\");\n                    if (this.isColorStringValid(featureColor)) {\n                        colorValue = String(featureColor);\n                    }\n                }\n                if (colorValue === undefined) {\n                    colorValue = evaluateTechniqueAttr<number | string>(\n                        context,\n                        technique.defaultColor,\n                        0x000000\n                    );\n                }\n\n                if (colorValue === undefined) {\n                    colorValue = 0x000000;\n                }\n                tmpColor.set(colorValue as any);\n\n                color = tmpColor;\n            }\n        }\n\n        for (const polygon of polygons) {\n            const startIndexCount = indices.length;\n            const edgeStartIndexCount = edgeIndices.length;\n\n            // Iterate over the exterior ring of the current polygon\n            const vertices: number[] = [];\n            const polygonBaseVertex = positions.length / 3;\n            const exteriorRing = polygon[0];\n\n            const featureStride = exteriorRing.vertexStride;\n            const vertexStride = featureStride + 2;\n\n            // The exterior ring is always the first\n            for (let i = 0; i < exteriorRing.points.length; ++i) {\n                const point = exteriorRing.points[i];\n\n                // Invert the Y component to preserve the correct winding without transforming\n                // from webMercator's local to global space.\n                vertices.push(point.x, -point.y);\n\n                if (exteriorRing.textureCoords !== undefined) {\n                    vertices.push(exteriorRing.textureCoords[i].x, exteriorRing.textureCoords[i].y);\n                }\n\n                const nextIdx = (i + 1) % exteriorRing.points.length;\n\n                const properEdge = exteriorRing.isProperEdge(i);\n\n                // Calculate nextEdge and nextWall.\n                vertices.push(\n                    properEdge ? nextIdx : -1,\n                    boundaryWalls || properEdge ? nextIdx : -1\n                );\n            }\n\n            // Iterate over the inner rings - if any\n            const holes: number[] = [];\n            let ringIndex = 1;\n            while (ringIndex < polygon.length) {\n                const vertexOffset = vertices.length / vertexStride;\n                holes.push(vertexOffset);\n\n                const hole = polygon[ringIndex++];\n                for (let i = 0; i < hole.points.length; ++i) {\n                    const nextIdx = (i + 1) % hole.points.length;\n                    const point = hole.points[i];\n\n                    // Invert the Y component to preserve the correct winding without\n                    // transforming from webMercator's local to global space.\n                    vertices.push(point.x, -point.y);\n\n                    if (hole.textureCoords !== undefined) {\n                        vertices.push(hole.textureCoords[i].x, hole.textureCoords[i].y);\n                    }\n\n                    // Calculate nextEdge and nextWall.\n                    const insideExtents = hole.isProperEdge(i);\n\n                    vertices.push(\n                        insideExtents ? vertexOffset + nextIdx : -1,\n                        boundaryWalls || insideExtents ? vertexOffset + nextIdx : -1\n                    );\n                }\n            }\n\n            try {\n                // Triangulate the footprint polyline.\n                const triangles = earcut(vertices, holes, vertexStride);\n                const originalVertexCount = vertices.length / vertexStride;\n\n                // Subdivide for spherical projections if needed.\n                if (isSpherical) {\n                    const geom = new THREE.BufferGeometry();\n\n                    const positionArray = [];\n                    const uvArray = [];\n                    const edgeArray = [];\n                    const wallArray = [];\n\n                    // Transform to global webMercator coordinates to be able to reproject to\n                    // sphere.\n                    for (let i = 0; i < vertices.length; i += vertexStride) {\n                        const worldPos = tile2world(\n                            extents,\n                            this.m_decodeInfo,\n                            tmpV2.set(vertices[i], vertices[i + 1]),\n                            true,\n                            tmpV3r\n                        );\n                        positionArray.push(worldPos.x, worldPos.y, 0);\n                        if (texCoordType !== undefined) {\n                            uvArray.push(vertices[i + 2], vertices[i + 3]);\n                        }\n                        edgeArray.push(vertices[i + featureStride]);\n                        wallArray.push(vertices[i + featureStride + 1]);\n                    }\n\n                    // Create the temporary geometry used for subdivision.\n                    const posAttr = new THREE.BufferAttribute(new Float32Array(positionArray), 3);\n                    geom.setAttribute(\"position\", posAttr);\n                    let uvAttr: THREE.BufferAttribute | undefined;\n                    if (texCoordType !== undefined) {\n                        uvAttr = new THREE.BufferAttribute(new Float32Array(uvArray), 2);\n                        geom.setAttribute(\"uv\", uvAttr);\n                    }\n                    const edgeAttr = new THREE.BufferAttribute(new Float32Array(edgeArray), 1);\n                    geom.setAttribute(\"edge\", edgeAttr);\n                    const wallAttr = new THREE.BufferAttribute(new Float32Array(wallArray), 1);\n                    geom.setAttribute(\"wall\", edgeAttr);\n                    const index = createIndexBufferAttribute(triangles, posAttr.count - 1);\n                    const indexAttr =\n                        index.type === \"uint32\"\n                            ? new THREE.Uint32BufferAttribute(index.buffer, 1)\n                            : new THREE.Uint16BufferAttribute(index.buffer, 1);\n                    geom.setIndex(indexAttr);\n\n                    // Increase tesselation of polygons for certain zoom levels\n                    // to remove mixed LOD cracks\n                    const zoomLevel = this.m_decodeInfo.tileKey.level;\n                    if (zoomLevel >= 3 && zoomLevel < 9) {\n                        const subdivision = Math.pow(2, 9 - zoomLevel);\n                        const { geoBox } = this.m_decodeInfo;\n                        const edgeModifier = new EdgeLengthGeometrySubdivisionModifier(\n                            subdivision,\n                            geoBox,\n                            SubdivisionMode.NoDiagonals,\n                            webMercatorProjection\n                        );\n                        edgeModifier.modify(geom);\n                    }\n\n                    // FIXME(HARP-5700): Subdivision modifier ignores texture coordinates.\n                    const modifier = new SphericalGeometrySubdivisionModifier(\n                        THREE.MathUtils.degToRad(10),\n                        webMercatorProjection\n                    );\n                    modifier.modify(geom);\n\n                    // Reassemble the vertex buffer, transforming the subdivided global\n                    // webMercator points back to local space.\n                    vertices.length = 0;\n                    triangles.length = 0;\n                    for (let i = 0; i < posAttr.array.length; i += 3) {\n                        const tilePos = world2tile(\n                            extents,\n                            this.m_decodeInfo,\n                            tmpV3.set(posAttr.array[i], posAttr.array[i + 1], 0),\n                            true,\n                            tmpV2r\n                        );\n                        vertices.push(tilePos.x, tilePos.y);\n                        if (texCoordType !== undefined) {\n                            vertices.push(uvAttr!.array[(i / 3) * 2]);\n                            vertices.push(uvAttr!.array[(i / 3) * 2 + 1]);\n                        }\n                        vertices.push(edgeAttr.array[i / 3]);\n                        vertices.push(wallAttr.array[i / 3]);\n                    }\n\n                    const geomIndex = geom.getIndex();\n                    if (geomIndex !== null) {\n                        triangles.push(...(geomIndex.array as Float32Array));\n                    }\n                }\n\n                // Add the footprint/roof vertices to the position buffer.\n                tempVertNormal.set(0, 0, 1);\n\n                // Assemble the vertex buffer.\n                for (let i = 0; i < vertices.length; i += vertexStride) {\n                    webMercatorTile2TargetWorld(\n                        extents,\n                        this.m_decodeInfo,\n                        tmpV2.set(vertices[i], vertices[i + 1]),\n                        tmpV3,\n                        false, // no need to scale height (source data is 2D).\n                        true\n                    );\n\n                    const scaleFactor = scaleHeights\n                        ? this.m_decodeInfo.targetProjection.getScaleFactor(tmpV3)\n                        : 1.0;\n                    this.m_maxGeometryHeight = Math.max(\n                        this.m_maxGeometryHeight,\n                        scaleFactor * height\n                    );\n                    this.m_minGeometryHeight = Math.min(\n                        this.m_minGeometryHeight,\n                        scaleFactor * height\n                    );\n\n                    if (isSpherical) {\n                        tempVertNormal.set(tmpV3.x, tmpV3.y, tmpV3.z).normalize();\n                    }\n                    tmpV3.sub(this.center);\n\n                    tempFootDisp.copy(tempVertNormal).multiplyScalar(floorHeight * scaleFactor);\n                    positions.push(\n                        tmpV3.x + tempFootDisp.x,\n                        tmpV3.y + tempFootDisp.y,\n                        tmpV3.z + tempFootDisp.z\n                    );\n                    if (texCoordType !== undefined) {\n                        textureCoordinates.push(vertices[i + 2], vertices[i + 3]);\n                    }\n                    if (this.m_options.enableElevationOverlay) {\n                        normals.push(...tempVertNormal.toArray());\n                    }\n                    if (isExtruded) {\n                        tempRoofDisp.copy(tempVertNormal).multiplyScalar(height * scaleFactor);\n                        positions.push(\n                            tmpV3.x + tempRoofDisp.x,\n                            tmpV3.y + tempRoofDisp.y,\n                            tmpV3.z + tempRoofDisp.z\n                        );\n                        extrusionAxis.push(\n                            0.0,\n                            0.0,\n                            0.0,\n                            0.0,\n                            tempRoofDisp.x - tempFootDisp.x,\n                            tempRoofDisp.y - tempFootDisp.y,\n                            tempRoofDisp.z - tempFootDisp.z,\n                            1.0\n                        );\n                        if (texCoordType !== undefined) {\n                            textureCoordinates.push(vertices[i + 2], vertices[i + 3]);\n                        }\n                        if (this.m_options.enableElevationOverlay) {\n                            normals.push(...tempVertNormal.toArray());\n                        }\n                        if (color !== undefined) {\n                            colors.push(color.r, color.g, color.b, color.r, color.g, color.b);\n                        }\n                    }\n                }\n\n                // Add the footprint/roof indices to the index buffer.\n                for (let i = 0; i < triangles.length; i += 3) {\n                    if (isExtruded) {\n                        // When extruding we duplicate the vertices, so that all even vertices\n                        // belong to the bottom and all odd vertices belong to the top.\n                        const i0 = polygonBaseVertex + triangles[i + 0] * 2 + 1;\n                        const i1 = polygonBaseVertex + triangles[i + 1] * 2 + 1;\n                        const i2 = polygonBaseVertex + triangles[i + 2] * 2 + 1;\n                        indices.push(i0, i1, i2);\n                    } else {\n                        const i0 = polygonBaseVertex + triangles[i + 0];\n                        const i1 = polygonBaseVertex + triangles[i + 1];\n                        const i2 = polygonBaseVertex + triangles[i + 2];\n                        indices.push(i0, i1, i2);\n                    }\n                }\n\n                // Assemble the index buffer for edges (follow vertices as linked list).\n                if (hasEdges) {\n                    this.addEdges(\n                        polygonBaseVertex,\n                        originalVertexCount,\n                        vertexStride,\n                        featureStride,\n                        positions,\n                        vertices,\n                        edgeIndices,\n                        isExtruded,\n                        extrudedPolygonTechnique.footprint,\n                        extrudedPolygonTechnique.maxSlope\n                    );\n                }\n                if (isExtruded) {\n                    this.addWalls(\n                        polygonBaseVertex,\n                        originalVertexCount,\n                        vertexStride,\n                        featureStride,\n                        vertices,\n                        indices\n                    );\n                }\n            } catch (err) {\n                logger.error(`cannot triangulate geometry`, err);\n            }\n\n            if (this.m_options.gatherFeatureAttributes) {\n                meshBuffers.objInfos.push(context.env.entries);\n                meshBuffers.featureStarts.push(startIndexCount);\n                meshBuffers.edgeFeatureStarts.push(edgeStartIndexCount);\n            }\n\n            const count = indices.length - startIndexCount;\n            if (count > 0) {\n                groups.push({\n                    start: startIndexCount,\n                    count,\n                    technique: techniqueIndex\n                });\n            }\n        }\n    }\n\n    private createGeometries() {\n        this.m_meshBuffers.forEach((meshBuffers, techniqueIdx) => {\n            if (meshBuffers.positions.length === 0) {\n                return;\n            } // nothing to do\n\n            if (\n                !this.m_styleSetEvaluator.techniques ||\n                this.m_styleSetEvaluator.techniques.length <= techniqueIdx\n            ) {\n                throw new Error(\"Invalid technique index\");\n            }\n\n            const technique = this.m_styleSetEvaluator.techniques[techniqueIdx];\n            if (technique === undefined) {\n                return;\n            }\n            if (meshBuffers.texts.length > 0) {\n                const geometry: TextGeometry = {\n                    positions: {\n                        name: \"position\",\n                        type: \"float\",\n                        buffer: new Float64Array(meshBuffers.positions).buffer,\n                        itemCount: 3\n                    },\n                    texts: meshBuffers.texts,\n                    technique: techniqueIdx,\n                    stringCatalog: meshBuffers.stringCatalog,\n                    objInfos: meshBuffers.objInfos\n                };\n\n                if (isTextTechnique(technique)) {\n                    this.m_textGeometries.push(geometry);\n                } else {\n                    assert(isPoiTechnique(technique));\n                    const poiGeometry = geometry as PoiGeometry;\n                    poiGeometry.imageTextures = meshBuffers.imageTextures;\n                    poiGeometry.offsetDirections = meshBuffers.offsetDirections;\n                    this.m_poiGeometries.push(poiGeometry);\n                }\n                return;\n            }\n\n            const positionElements = new Float32Array(meshBuffers.positions);\n\n            if (meshBuffers.groups.length === 0) {\n                // create a default group containing all the vertices in the position attribute.\n\n                meshBuffers.groups.push({\n                    start: 0,\n                    count: positionElements.length / 3,\n                    technique: techniqueIdx\n                });\n            }\n\n            const vertexAttributes: BufferAttribute[] = [\n                {\n                    name: \"position\",\n                    buffer: positionElements.buffer,\n                    itemCount: 3,\n                    type: \"float\"\n                }\n            ];\n\n            const geometry: Geometry = {\n                type: meshBuffers.type,\n                vertexAttributes,\n                groups: meshBuffers.groups\n            };\n\n            if (meshBuffers.normals.length > 0) {\n                const normals = new Float32Array(meshBuffers.normals);\n                assert(\n                    normals.length === positionElements.length,\n                    \"length of normals buffer is different than the length of the \" +\n                        \"position buffer\"\n                );\n\n                vertexAttributes.push({\n                    name: \"normal\",\n                    buffer: normals.buffer,\n                    itemCount: 3,\n                    type: \"float\"\n                });\n            }\n\n            if (meshBuffers.colors.length > 0) {\n                const colors = new Float32Array(meshBuffers.colors);\n                assert(\n                    colors.length === positionElements.length,\n                    \"length of colors buffer is different than the length of the \" +\n                        \"position buffer\"\n                );\n\n                vertexAttributes.push({\n                    name: \"color\",\n                    buffer: colors.buffer,\n                    itemCount: 3,\n                    type: \"float\"\n                });\n            }\n\n            const positionCount = meshBuffers.positions.length / 3;\n\n            if (meshBuffers.textureCoordinates.length > 0) {\n                const texCoordCount = meshBuffers.textureCoordinates.length / 2;\n                assert(\n                    texCoordCount === positionCount,\n                    \"length of textureCoordinates buffer is different than the length of the\" +\n                        \"position buffer\"\n                );\n\n                const textureCoordinates = new Float32Array(meshBuffers.textureCoordinates);\n                vertexAttributes.push({\n                    name: \"uv\",\n                    buffer: textureCoordinates.buffer as ArrayBuffer,\n                    itemCount: 2,\n                    type: \"float\"\n                });\n            }\n\n            if (meshBuffers.extrusionAxis.length > 0) {\n                const extrusionAxis = new Float32Array(meshBuffers.extrusionAxis);\n                assert(\n                    extrusionAxis.length / 4 === positionElements.length / 3,\n                    \"length of extrusionAxis buffer is different than the length of the \" +\n                        \"position buffer\"\n                );\n\n                vertexAttributes.push({\n                    name: \"extrusionAxis\",\n                    buffer: extrusionAxis.buffer as ArrayBuffer,\n                    itemCount: 4,\n                    type: \"float\"\n                });\n            }\n\n            if (meshBuffers.indices.length > 0) {\n                geometry.index = createIndexBufferAttribute(meshBuffers.indices, positionCount - 1);\n            }\n\n            if (meshBuffers.edgeIndices.length > 0) {\n                geometry.edgeIndex = createIndexBufferAttribute(\n                    meshBuffers.edgeIndices,\n                    positionCount - 1,\n                    \"edgeIndex\"\n                );\n            }\n\n            geometry.featureStarts = meshBuffers.featureStarts;\n            geometry.edgeFeatureStarts = meshBuffers.edgeFeatureStarts;\n            geometry.objInfos = meshBuffers.objInfos;\n\n            this.m_geometries.push(geometry);\n        });\n    }\n\n    private processLines(linesArray: LinesGeometry[]) {\n        linesArray.forEach(linesGeometry => {\n            const { vertices, indices } = linesGeometry.lines;\n            const technique = linesGeometry.technique;\n            const buffer = new Float32Array(vertices).buffer as ArrayBuffer;\n            const index = createIndexBufferAttribute(\n                indices,\n                vertices.length / linesGeometry.lines.stride - 1\n            );\n            const attr: InterleavedBufferAttribute = {\n                type: \"float\",\n                stride: linesGeometry.lines.stride,\n                buffer,\n                attributes: linesGeometry.lines.vertexAttributes\n            };\n            const geometry: Geometry = {\n                type: GeometryType.SolidLine,\n                index,\n                interleavedVertexAttributes: [attr],\n                groups: [{ start: 0, count: indices.length, technique }],\n                vertexAttributes: [],\n                featureStarts: linesGeometry.featureStarts,\n                objInfos: linesGeometry.objInfos\n            };\n\n            this.m_geometries.push(geometry);\n        });\n    }\n\n    private processSimpleLines(linesArray: LinesGeometry[]) {\n        linesArray.forEach(linesGeometry => {\n            const { vertices, indices } = linesGeometry.lines;\n            const technique = linesGeometry.technique;\n            const buffer = new Float32Array(vertices).buffer as ArrayBuffer;\n            const attr: BufferAttribute = {\n                buffer,\n                itemCount: 3,\n                type: \"float\",\n                name: \"position\"\n            };\n            const geometry: Geometry = {\n                type: GeometryType.Line,\n                index: createIndexBufferAttribute(indices, vertices.length / attr.itemCount - 1),\n                vertexAttributes: [attr],\n                groups: [{ start: 0, count: indices.length, technique }],\n                featureStarts: linesGeometry.featureStarts,\n                objInfos: linesGeometry.objInfos\n            };\n\n            this.m_geometries.push(geometry);\n        });\n    }\n\n    private findOrCreateMeshBuffers(index: number, type: GeometryType): MeshBuffers | undefined {\n        let buffers = this.m_meshBuffers.get(index);\n\n        if (buffers !== undefined) {\n            if (buffers.type !== type) {\n                logger.error(`MeshBuffer has been created with wrong type \"${GeometryType[type]}\"\n                instead of \"${GeometryType[buffers.type]}\"`);\n                return undefined;\n            }\n            return buffers;\n        }\n        buffers = new MeshBuffers(type);\n        this.m_meshBuffers.set(index, buffers);\n        return buffers;\n    }\n\n    private processFeatureCommon(env: Env) {\n        const source = env.lookup(\"source\");\n        if (typeof source === \"string\" && source !== \"\") {\n            if (!this.m_sources.includes(source)) {\n                this.m_sources.push(source);\n            }\n        }\n    }\n\n    private isColorStringValid(color: Value | undefined): color is string {\n        return typeof color === \"string\" && color.length > 0;\n    }\n\n    private addEdges(\n        featureBaseVertex: number,\n        featureVertexCount: number,\n        vertexStride: number,\n        featureStride: number,\n        positions: number[],\n        vertices: number[],\n        indices: number[],\n        isExtruded: boolean,\n        hasFootprint?: boolean,\n        maxSlope?: number\n    ) {\n        const tmpEdgeA = new THREE.Vector3();\n        const tmpEdgeB = new THREE.Vector3();\n        let firstRingVertex: number | undefined;\n        let prevRingVertex: number | undefined;\n        let currRingVertex = 0;\n        let maxRingVertex = 0;\n\n        while (currRingVertex < featureVertexCount) {\n            while (currRingVertex !== firstRingVertex) {\n                if (firstRingVertex === undefined) {\n                    firstRingVertex = currRingVertex;\n                }\n                if (currRingVertex < featureVertexCount) {\n                    maxRingVertex = Math.max(maxRingVertex, currRingVertex);\n                }\n\n                const nextRingVertex = vertices[currRingVertex * vertexStride + featureStride];\n                if (nextRingVertex < 0) {\n                    break;\n                } else {\n                    if (!isExtruded) {\n                        indices.push(\n                            featureBaseVertex + currRingVertex,\n                            featureBaseVertex + nextRingVertex\n                        );\n                    } else {\n                        if (hasFootprint === true) {\n                            indices.push(\n                                featureBaseVertex + currRingVertex * 2,\n                                featureBaseVertex + nextRingVertex * 2\n                            );\n                        }\n                        indices.push(\n                            featureBaseVertex + currRingVertex * 2 + 1,\n                            featureBaseVertex + nextRingVertex * 2 + 1\n                        );\n\n                        if (maxSlope !== undefined) {\n                            if (prevRingVertex !== undefined) {\n                                const prevPos = (featureBaseVertex + prevRingVertex * 2) * 3;\n                                const currPos = (featureBaseVertex + currRingVertex * 2) * 3;\n                                const nextPos = (featureBaseVertex + nextRingVertex * 2) * 3;\n                                tmpEdgeA\n                                    .set(\n                                        positions[currPos] - positions[prevPos],\n                                        positions[currPos + 1] - positions[prevPos + 1],\n                                        positions[currPos + 2] - positions[prevPos + 2]\n                                    )\n                                    .normalize();\n                                tmpEdgeB\n                                    .set(\n                                        positions[nextPos] - positions[currPos],\n                                        positions[nextPos + 1] - positions[currPos + 1],\n                                        positions[nextPos + 2] - positions[currPos + 2]\n                                    )\n                                    .normalize();\n                                if (tmpEdgeA.dot(tmpEdgeB) <= maxSlope) {\n                                    indices.push(\n                                        featureBaseVertex + currRingVertex * 2,\n                                        featureBaseVertex + currRingVertex * 2 + 1\n                                    );\n                                }\n                            }\n                        } else {\n                            indices.push(\n                                featureBaseVertex + currRingVertex * 2,\n                                featureBaseVertex + currRingVertex * 2 + 1\n                            );\n                        }\n                    }\n                    prevRingVertex = currRingVertex;\n                    currRingVertex = nextRingVertex;\n                }\n            }\n            currRingVertex = maxRingVertex + 1;\n            firstRingVertex = undefined;\n            prevRingVertex = undefined;\n        }\n    }\n\n    private addWalls(\n        featureBaseVertex: number,\n        featureVertexCount: number,\n        vertexStride: number,\n        featureStride: number,\n        vertices: number[],\n        indices: number[]\n    ) {\n        let firstRingVertex: number | undefined;\n        let currRingVertex = 0;\n        let maxRingVertex = 0;\n\n        while (currRingVertex < featureVertexCount) {\n            while (currRingVertex !== firstRingVertex) {\n                if (firstRingVertex === undefined) {\n                    firstRingVertex = currRingVertex;\n                }\n                if (currRingVertex < featureVertexCount) {\n                    maxRingVertex = Math.max(maxRingVertex, currRingVertex);\n                }\n\n                const nextRingVertex = vertices[currRingVertex * vertexStride + featureStride + 1];\n                if (nextRingVertex < 0) {\n                    break;\n                } else {\n                    indices.push(\n                        featureBaseVertex + currRingVertex * 2,\n                        featureBaseVertex + currRingVertex * 2 + 1,\n                        featureBaseVertex + nextRingVertex * 2 + 1,\n                        featureBaseVertex + nextRingVertex * 2 + 1,\n                        featureBaseVertex + nextRingVertex * 2,\n                        featureBaseVertex + currRingVertex * 2\n                    );\n                }\n                currRingVertex = nextRingVertex;\n            }\n            currRingVertex = maxRingVertex + 1;\n            firstRingVertex = undefined;\n        }\n    }\n\n    private findRelativePositionInLine(p: THREE.Vector3, line: number[]): number {\n        let lineDist = Infinity;\n        let lineOffset = 0;\n        for (let i = 0; i < line.length; i += 4) {\n            // Find the closest point C in segment AB to point P.\n            tmpLine.set(\n                tmpPointA.set(line[i], line[i + 1], line[i + 2]),\n                tmpPointB.set(line[i + 4], line[i + 5], line[i + 6])\n            );\n            tmpLine.closestPointToPoint(p, true, tmpPointC);\n\n            // If P is in AB (or really close), save A as anchor point and C (to estimate distance\n            // from segment origin).\n            const dist = tmpPointC.distanceTo(p);\n            if (dist < lineDist) {\n                tmpPointD.copy(tmpPointC);\n                tmpPointE.copy(tmpPointA);\n                lineDist = dist;\n                lineOffset = line[i + 3];\n            }\n        }\n        // Return the relative position of P inside the line.\n        return lineOffset + tmpPointD.distanceTo(tmpPointE);\n    }\n}\n","/*\n * Copyright (C) 2019-2022 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {\n    DecodedTile,\n    DecoderOptions,\n    GeometryKind,\n    IndexedTechnique,\n    OptionsMap,\n    ValueMap\n} from \"@here/harp-datasource-protocol\";\nimport { MapEnv, StyleSetEvaluator } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { AttrEvaluationContext } from \"@here/harp-datasource-protocol/lib/TechniqueAttr\";\nimport { Projection, TileKey } from \"@here/harp-geoutils\";\nimport {\n    ThemedTileDecoder,\n    TileDecoderService,\n    WorkerServiceManager\n} from \"@here/harp-mapview-decoder/index-worker\";\nimport { assert, LoggerManager, PerformanceTimer } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nimport { GeoJsonDataAdapter } from \"./adapters/geojson/GeoJsonDataAdapter\";\nimport { GeoJsonVtDataAdapter } from \"./adapters/geojson-vt/GeoJsonVtDataAdapter\";\nimport { OmvDataAdapter } from \"./adapters/omv/OmvDataAdapter\";\nimport { DataAdapter } from \"./DataAdapter\";\nimport { DecodeInfo } from \"./DecodeInfo\";\nimport { IGeometryProcessor, ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { OmvFeatureFilter } from \"./OmvDataFilter\";\nimport { OmvDecoderOptions, VECTOR_TILE_DECODER_SERVICE_TYPE } from \"./OmvDecoderDefs\";\nimport { VectorTileDataEmitter, VectorTileDataEmitterOptions } from \"./VectorTileDataEmitter\";\n\nconst logger = LoggerManager.instance.create(\"VectorTileDecoder\", { enabled: false });\n\n/**\n * Options for VectorTileDataProcessor, @see {@link OmvDecoderOptions}.\n * @internal\n */\nexport interface VectorTileDataProcessorOptions extends VectorTileDataEmitterOptions {\n    storageLevelOffset?: number;\n    showMissingTechniques?: boolean;\n}\n\n/**\n * Geometry processor for vector tiles.\n * @internal\n */\nexport class VectorTileDataProcessor implements IGeometryProcessor {\n    private m_decodedTileEmitter: VectorTileDataEmitter | undefined;\n\n    constructor(\n        private readonly m_tileKey: TileKey,\n        private readonly m_projection: Projection,\n        private readonly m_styleSetEvaluator: StyleSetEvaluator,\n        private readonly m_dataAdapter: DataAdapter,\n        private readonly m_options: VectorTileDataProcessorOptions = {},\n        private readonly m_dataFilter?: OmvFeatureFilter\n    ) {\n        m_options.storageLevelOffset = m_options.storageLevelOffset ?? 0;\n        m_options.showMissingTechniques = m_options.showMissingTechniques ?? false;\n    }\n\n    /**\n     * Decodes the given tile data.\n     *\n     * @param data - The tile data to decode.\n     * @returns A [[DecodedTile]]\n     */\n    getDecodedTile(data: ArrayBufferLike | {}): DecodedTile {\n        this.m_styleSetEvaluator.resetTechniques();\n\n        const decodeInfo = new DecodeInfo(\n            this.m_projection,\n            this.m_tileKey,\n            this.m_options.storageLevelOffset!\n        );\n\n        this.m_decodedTileEmitter = new VectorTileDataEmitter(\n            decodeInfo,\n            this.m_styleSetEvaluator,\n            this.m_options\n        );\n\n        this.m_dataAdapter.process(data, decodeInfo, this);\n        return this.m_decodedTileEmitter.getDecodedTile();\n    }\n\n    /** @override */\n    processPointFeature(\n        layer: string,\n        extents: number,\n        geometry: THREE.Vector3[],\n        properties: ValueMap,\n        featureId: string | number | undefined\n    ): void {\n        assert(this.m_decodedTileEmitter !== undefined);\n        this.processFeature(\n            layer,\n            extents,\n            geometry,\n            \"point\",\n            properties,\n            featureId,\n            this.m_decodedTileEmitter!.processPointFeature,\n            GeometryKind.Label\n        );\n    }\n\n    /** @override */\n    processLineFeature(\n        layer: string,\n        extents: number,\n        geometry: ILineGeometry[],\n        properties: ValueMap,\n        featureId: string | number | undefined\n    ): void {\n        assert(this.m_decodedTileEmitter !== undefined);\n        this.processFeature(\n            layer,\n            extents,\n            geometry,\n            \"line\",\n            properties,\n            featureId,\n            this.m_decodedTileEmitter!.processLineFeature,\n            GeometryKind.Line\n        );\n    }\n\n    /** @override */\n    processPolygonFeature(\n        layer: string,\n        extents: number,\n        geometry: IPolygonGeometry[],\n        properties: ValueMap,\n        featureId: string | number | undefined\n    ): void {\n        assert(this.m_decodedTileEmitter !== undefined);\n        this.processFeature(\n            layer,\n            extents,\n            geometry,\n            \"polygon\",\n            properties,\n            featureId,\n            this.m_decodedTileEmitter!.processPolygonFeature,\n            GeometryKind.Area\n        );\n    }\n\n    private processFeature(\n        layer: string,\n        extents: number,\n        geometry: THREE.Vector3[] | ILineGeometry[] | IPolygonGeometry[],\n        geometryType: string,\n        properties: ValueMap,\n        featureId: string | number | undefined,\n        emitterFunc: (...args: any[]) => void,\n        geometryKind: GeometryKind\n    ) {\n        const env = this.createMapEnv(properties, featureId, layer, geometryType);\n        const techniques = this.applyKindFilter(\n            this.m_styleSetEvaluator.getMatchingTechniques(env, layer, geometryType),\n            geometryKind\n        );\n\n        if (techniques.length === 0) {\n            if (this.m_options.showMissingTechniques) {\n                logger.log(\n                    \"VectorTileDataProcessor#processFeature: no techniques for object:\",\n                    JSON.stringify(env.unmap())\n                );\n            }\n            return;\n        }\n        const context: AttrEvaluationContext = {\n            env,\n            cachedExprResults: new Map()\n        };\n\n        if (this.m_decodedTileEmitter) {\n            emitterFunc.apply(this.m_decodedTileEmitter, [\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques\n            ]);\n        }\n    }\n\n    private createMapEnv(\n        properties: ValueMap,\n        featureId: string | number | undefined,\n        layer: string,\n        geometryType: string\n    ): MapEnv {\n        const level = this.m_tileKey.level;\n        return new MapEnv({\n            $layer: layer,\n            $id: featureId ?? null,\n            $level: level,\n            $zoom: Math.max(0, level - this.m_options.storageLevelOffset!),\n            $geometryType: geometryType,\n            ...properties\n        });\n    }\n\n    private applyKindFilter(\n        techniques: IndexedTechnique[],\n        defaultKind: GeometryKind\n    ): IndexedTechnique[] {\n        if (this.m_dataFilter !== undefined && this.m_dataFilter.hasKindFilter) {\n            techniques = techniques.filter(technique => {\n                const kind =\n                    technique.kind === undefined ? defaultKind : (technique.kind as GeometryKind);\n                return this.m_dataFilter!.wantsKind(kind);\n            });\n        }\n        return techniques;\n    }\n}\n\n/**\n * The vector tile decoder.\n */\nexport class VectorTileDecoder extends ThemedTileDecoder {\n    private m_featureFilter?: OmvFeatureFilter;\n    private readonly m_roundUpCoordinatesIfNeeded: boolean = false;\n    private m_dataAdapter?: DataAdapter;\n    private m_options: { map: OptionsMap; changed: boolean } = { map: {}, changed: false };\n    private readonly m_defaultDataAdapters: DataAdapter[] = [];\n\n    constructor() {\n        super();\n        this.m_defaultDataAdapters.push(\n            new OmvDataAdapter(),\n            new GeoJsonVtDataAdapter(),\n            new GeoJsonDataAdapter()\n        );\n    }\n\n    /** @override */\n    connect(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    /** @override */\n    decodeThemedTile(\n        data: ArrayBufferLike | {},\n        tileKey: TileKey,\n        styleSetEvaluator: StyleSetEvaluator,\n        projection: Projection\n    ): Promise<DecodedTile> {\n        const startTime = PerformanceTimer.now();\n        if (!this.m_dataAdapter) {\n            this.m_dataAdapter = this.getDataAdapter(data);\n            if (!this.m_dataAdapter) {\n                return Promise.reject(new Error(\"Unsupported data format.\"));\n            }\n        }\n        const dataAdapter = this.m_dataAdapter!;\n        assert(dataAdapter.canProcess(data));\n        if (this.m_options.changed) {\n            if (dataAdapter instanceof OmvDataAdapter) {\n                const omvOptions = this.m_options.map as OmvDecoderOptions;\n                dataAdapter.configure(omvOptions, styleSetEvaluator);\n                this.m_featureFilter = dataAdapter.dataFilter;\n            }\n            this.m_options.changed = false;\n        }\n\n        const decoder = new VectorTileDataProcessor(\n            tileKey,\n            projection,\n            styleSetEvaluator,\n            dataAdapter,\n            this.m_options.map as VectorTileDataProcessorOptions,\n            this.m_featureFilter\n        );\n        const decodedTile = decoder.getDecodedTile(data);\n\n        decodedTile.decodeTime = PerformanceTimer.now() - startTime;\n\n        return Promise.resolve(decodedTile);\n    }\n\n    /** @override */\n    configure(options?: DecoderOptions, customOptions?: OptionsMap): void {\n        super.configure(options, customOptions);\n        this.m_options.map = {\n            ...this.m_options.map,\n            ...options,\n            ...customOptions\n        };\n        this.m_options.changed = true;\n    }\n\n    /**\n     * Returns the appropiate data adapter to convert the given data into the format expected by\n     * VectorTileDecoder.\n     * @note Default adapters are available for GeoJson and OMV formats.\n     * Child classes may override this function to support additional formats.\n     *\n     * @param data - The input data to be coverted.\n     * @returns The DataAdapter to convert the data, or undefined if there's no adapter for that\n     * data format.\n     */\n    protected getDataAdapter(data: ArrayBufferLike | {}): DataAdapter | undefined {\n        for (const adapter of this.m_defaultDataAdapters) {\n            if (adapter.canProcess(data)) {\n                return adapter;\n            }\n        }\n        return undefined;\n    }\n}\n\n/**\n * Vector Tile Decoder Service.\n */\nexport class VectorTileDecoderService {\n    /**\n     * Register a vector tile decoder service.\n     *\n     * @remarks\n     * Has to be called during initialization of decoder bundle.\n     */\n    static start() {\n        WorkerServiceManager.getInstance().register({\n            serviceType: VECTOR_TILE_DECODER_SERVICE_TYPE,\n            factory: (serviceId: string) =>\n                TileDecoderService.start(serviceId, new VectorTileDecoder())\n        });\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ValueMap } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { webMercatorProjection } from \"@here/harp-geoutils\";\nimport { ShapeUtils, Vector2, Vector3 } from \"three\";\n\nimport { DataAdapter } from \"../../DataAdapter\";\nimport { DecodeInfo } from \"../../DecodeInfo\";\nimport { IGeometryProcessor, ILineGeometry, IPolygonGeometry } from \"../../IGeometryProcessor\";\nimport { isArrayBufferLike, tile2world } from \"../../OmvUtils\";\n\nconst VT_JSON_EXTENTS = 4096;\n\ntype VTJsonPosition = [number, number];\n\nenum VTJsonGeometryType {\n    Unknown,\n    Point,\n    LineString,\n    Polygon\n}\n\ninterface VTJsonFeatureInterface {\n    geometry: VTJsonPosition[] | VTJsonPosition[][];\n    id: string;\n    tags: ValueMap;\n    type: VTJsonGeometryType;\n}\n\ninterface VTJsonSourceInterface {\n    geometry: number[];\n    length: number;\n    id: string;\n    maxX: number;\n    maxY: number;\n    minX: number;\n    minY: number;\n    tags: ValueMap;\n    type: string;\n}\n\ninterface VTJsonTileInterface {\n    features: VTJsonFeatureInterface[];\n    maxX: number;\n    maxY: number;\n    minX: number;\n    minY: number;\n    numFeatures: number;\n    numPoints: number;\n    numSimplified: number;\n    source: VTJsonSourceInterface[];\n    transformed: boolean;\n    x: number;\n    y: number;\n    z: number;\n    layer: string;\n}\n\nconst worldPos = new Vector3();\n\n/**\n * The class `GeoJsonVtDataAdapter` converts VT-json data to geometries for the given\n * {@link IGeometryProcessor}.\n */\nexport class GeoJsonVtDataAdapter implements DataAdapter {\n    /**\n     * @override\n     */\n    canProcess(data: ArrayBufferLike | {}): boolean {\n        if (isArrayBufferLike(data)) {\n            return false;\n        }\n\n        const tile = data as VTJsonTileInterface;\n        if (\n            tile.features === undefined ||\n            tile.source === undefined ||\n            tile.x === undefined ||\n            tile.y === undefined ||\n            tile.z === undefined\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * @override\n     */\n    process(\n        tile: VTJsonTileInterface,\n        decodeInfo: DecodeInfo,\n        geometryProcessor: IGeometryProcessor\n    ) {\n        for (const feature of tile.features) {\n            switch (feature.type) {\n                case VTJsonGeometryType.Point: {\n                    for (const pointGeometry of feature.geometry) {\n                        const x = (pointGeometry as VTJsonPosition)[0];\n                        const y = (pointGeometry as VTJsonPosition)[1];\n\n                        const position = new Vector3(x, y, 0);\n\n                        geometryProcessor.processPointFeature(\n                            tile.layer,\n                            VT_JSON_EXTENTS,\n                            [position],\n                            feature.tags,\n                            feature.id\n                        );\n                    }\n                    break;\n                }\n                case VTJsonGeometryType.LineString: {\n                    const lineGeometries = feature.geometry as VTJsonPosition[][];\n\n                    let lastLine: ILineGeometry | undefined;\n                    const lines: ILineGeometry[] = [];\n\n                    lineGeometries.forEach(lineGeometry => {\n                        const lastPos = lastLine?.positions[lastLine.positions.length - 1];\n                        const [startx, starty] = lineGeometry[0];\n                        if (lastPos?.x === startx && lastPos?.y === starty) {\n                            // continue the last line\n                            for (let i = 1; i < lineGeometry.length; ++i) {\n                                const [x, y] = lineGeometry[i];\n                                lastLine?.positions.push(new Vector2(x, y));\n                            }\n                        } else {\n                            // start a new line\n                            const positions = lineGeometry.map(([x, y]) => new Vector2(x, y));\n                            lines.push({ positions });\n\n                            lastLine = lines[lines.length - 1];\n                        }\n                    });\n\n                    lines.forEach(line => {\n                        (line as any).untiledPositions = line.positions.map(tilePos => {\n                            tile2world(VT_JSON_EXTENTS, decodeInfo, tilePos, false, worldPos);\n                            return webMercatorProjection.unprojectPoint(worldPos);\n                        });\n                    });\n\n                    geometryProcessor.processLineFeature(\n                        tile.layer,\n                        VT_JSON_EXTENTS,\n                        lines,\n                        feature.tags,\n                        feature.id\n                    );\n\n                    break;\n                }\n                case VTJsonGeometryType.Polygon: {\n                    const polygons: IPolygonGeometry[] = [];\n                    let polygon: IPolygonGeometry | undefined;\n                    for (const outline of feature.geometry as VTJsonPosition[][]) {\n                        const ring: Vector2[] = [];\n                        for (const [currX, currY] of outline) {\n                            const position = new Vector2(currX, currY);\n                            ring.push(position);\n                        }\n                        // MVT spec defines that each exterior ring signals the beginning of a new polygon.\n                        // See https://github.com/mapbox/vector-tile-spec/tree/master/2.1\n                        if (ShapeUtils.area(ring) > 0) {\n                            // Create a new polygon and push it into the collection of polygons\n                            polygon = { rings: [] };\n                            polygons.push(polygon);\n                        }\n                        // Push the ring into the current polygon\n                        polygon?.rings.push(ring);\n                    }\n\n                    geometryProcessor.processPolygonFeature(\n                        tile.layer,\n                        VT_JSON_EXTENTS,\n                        polygons,\n                        feature.tags,\n                        feature.id\n                    );\n\n                    break;\n                }\n                case VTJsonGeometryType.Unknown: {\n                    break;\n                }\n            }\n        }\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ValueMap } from \"@here/harp-datasource-protocol/lib/Env\";\nimport { clipLineString } from \"@here/harp-geometry/lib/ClipLineString\";\nimport { GeoCoordinates, GeoPointLike, webMercatorProjection } from \"@here/harp-geoutils\";\nimport { Vector2Like } from \"@here/harp-geoutils/lib/math/Vector2Like\";\nimport { ShapeUtils, Vector2, Vector3 } from \"three\";\n\nimport { DataAdapter } from \"../../DataAdapter\";\nimport { DecodeInfo } from \"../../DecodeInfo\";\nimport { IGeometryProcessor, ILineGeometry, IPolygonGeometry } from \"../../IGeometryProcessor\";\nimport { world2tile } from \"../../OmvUtils\";\n\nconst DEFAULT_EXTENTS = 4 * 1024;\n\ntype GeoJsonGeometry =\n    | GeoJsonLineStringGeometry\n    | GeoJsonMultiLineStringGeometry\n    | GeoJsonPolygonGeometry\n    | GeoJsonMultiPolygonGeometry\n    | GeoJsonPointGeometry\n    | GeoJsonMultiPointGeometry;\n\ninterface GeoJsonLineStringGeometry {\n    type: \"LineString\";\n    coordinates: GeoPointLike[];\n}\n\ninterface GeoJsonMultiLineStringGeometry {\n    type: \"MultiLineString\";\n    coordinates: GeoPointLike[][];\n}\n\ninterface GeoJsonPointGeometry {\n    type: \"Point\";\n    coordinates: GeoPointLike;\n}\n\ninterface GeoJsonMultiPointGeometry {\n    type: \"MultiPoint\";\n    coordinates: GeoPointLike[];\n}\n\ninterface GeoJsonPolygonGeometry {\n    type: \"Polygon\";\n    coordinates: GeoPointLike[][];\n}\n\ninterface GeoJsonMultiPolygonGeometry {\n    type: \"MultiPolygon\";\n    coordinates: GeoPointLike[][][];\n}\n\ninterface GeoJsonFeature {\n    id?: string;\n    type: \"Feature\";\n    properties: ValueMap;\n    geometry: GeoJsonGeometry;\n}\n\nexport interface GeoJsonFeatureCollection {\n    type: \"FeatureCollection\";\n    features: GeoJsonFeature[];\n}\n\nconst worldP = new Vector3();\n\n/**\n * Converts a `geoPoint` to local tile space.\n *\n * @param geoPoint - The input [[GeoPointLike]].\n * @param decodeInfo - The [[DecodeInfo]].\n * @param target - A [[VectorLike]] used as target of the converted coordinates.\n * @return A [[VectorLike]] with the converted point.\n * @hidden\n */\nfunction convertPoint<VectorType extends Vector2Like>(\n    geoPoint: GeoPointLike,\n    decodeInfo: DecodeInfo,\n    target: VectorType\n): VectorType {\n    webMercatorProjection.projectPoint(GeoCoordinates.fromGeoPoint(geoPoint), worldP);\n    return world2tile(DEFAULT_EXTENTS, decodeInfo, worldP, false, target);\n}\n\nfunction convertLineStringGeometry(\n    coordinates: GeoPointLike[],\n    decodeInfo: DecodeInfo\n): ILineGeometry {\n    const untiledPositions = coordinates.map(geoPoint => {\n        return GeoCoordinates.fromGeoPoint(geoPoint);\n    });\n\n    const positions = coordinates.map(geoPoint =>\n        convertPoint(geoPoint, decodeInfo, new Vector2())\n    );\n\n    return { untiledPositions, positions };\n}\n\nfunction convertLineGeometry(\n    geometry: GeoJsonLineStringGeometry | GeoJsonMultiLineStringGeometry,\n    decodeInfo: DecodeInfo\n): ILineGeometry[] {\n    if (geometry.type === \"LineString\") {\n        return [convertLineStringGeometry(geometry.coordinates, decodeInfo)];\n    }\n\n    return geometry.coordinates.map(lineString =>\n        convertLineStringGeometry(lineString, decodeInfo)\n    );\n}\nfunction convertRings(coordinates: GeoPointLike[][], decodeInfo: DecodeInfo): IPolygonGeometry {\n    const rings = coordinates.map((ring, i) => {\n        const isOuterRing = i === 0;\n        const { positions } = convertLineStringGeometry(ring, decodeInfo);\n        const isClockWise = ShapeUtils.area(positions) > 0;\n        if ((isOuterRing && !isClockWise) || (!isOuterRing && isClockWise)) {\n            positions.reverse();\n        }\n        return positions;\n    });\n    return { rings };\n}\n\nfunction convertPolygonGeometry(\n    geometry: GeoJsonPolygonGeometry | GeoJsonMultiPolygonGeometry,\n    decodeInfo: DecodeInfo\n): IPolygonGeometry[] {\n    if (geometry.type === \"Polygon\") {\n        return [convertRings(geometry.coordinates, decodeInfo)];\n    }\n\n    return geometry.coordinates.map(polygon => convertRings(polygon, decodeInfo));\n}\n\nfunction convertPointGeometry(\n    geometry: GeoJsonPointGeometry | GeoJsonMultiPointGeometry,\n    decodeInfo: DecodeInfo\n): Vector3[] {\n    if (geometry.type === \"Point\") {\n        return [convertPoint(geometry.coordinates, decodeInfo, new Vector3())];\n    }\n\n    return geometry.coordinates.map(geoPoint => convertPoint(geoPoint, decodeInfo, new Vector3()));\n}\n\nexport class GeoJsonDataAdapter implements DataAdapter {\n    /**\n     * @override\n     */\n    canProcess(featureCollection: Partial<GeoJsonFeatureCollection>): boolean {\n        return (\n            featureCollection &&\n            featureCollection.type === \"FeatureCollection\" &&\n            Array.isArray(featureCollection.features)\n        );\n    }\n\n    /** @override */\n    process(\n        featureCollection: GeoJsonFeatureCollection,\n        decodeInfo: DecodeInfo,\n        geometryProcessor: IGeometryProcessor,\n        layer: string = \"geojson\"\n    ): void {\n        if (!Array.isArray(featureCollection.features) || featureCollection.features.length === 0) {\n            return;\n        }\n\n        for (const feature of featureCollection.features) {\n            switch (feature.geometry.type) {\n                case \"LineString\":\n                case \"MultiLineString\": {\n                    let geometry = convertLineGeometry(feature.geometry, decodeInfo);\n\n                    const clippedGeometries: ILineGeometry[] = [];\n\n                    const DEFAULT_BORDER = 100;\n\n                    geometry.forEach(g => {\n                        const clipped = clipLineString(\n                            g.positions,\n                            -DEFAULT_BORDER,\n                            -DEFAULT_BORDER,\n                            DEFAULT_EXTENTS + DEFAULT_BORDER,\n                            DEFAULT_EXTENTS + DEFAULT_BORDER\n                        );\n                        clipped.forEach(positions => {\n                            clippedGeometries.push({ positions });\n                        });\n                    });\n\n                    geometry = clippedGeometries;\n\n                    if (geometry.length > 0) {\n                        geometryProcessor.processLineFeature(\n                            layer,\n                            DEFAULT_EXTENTS,\n                            clippedGeometries,\n                            feature.properties,\n                            feature.id\n                        );\n                    }\n                    break;\n                }\n                case \"Polygon\":\n                case \"MultiPolygon\": {\n                    const geometry = convertPolygonGeometry(feature.geometry, decodeInfo);\n                    geometryProcessor.processPolygonFeature(\n                        layer,\n                        DEFAULT_EXTENTS,\n                        geometry,\n                        feature.properties,\n                        feature.id\n                    );\n                    break;\n                }\n                case \"Point\":\n                case \"MultiPoint\": {\n                    const geometry = convertPointGeometry(feature.geometry, decodeInfo);\n                    geometryProcessor.processPointFeature(\n                        layer,\n                        DEFAULT_EXTENTS,\n                        geometry,\n                        feature.properties,\n                        feature.id\n                    );\n                    break;\n                }\n            }\n        }\n    }\n}\n","/*\n * Copyright (C) 2020-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector2 } from \"three\";\n\nimport { com } from \"./proto/vector_tile\";\n\n/**\n * @hidden\n */\nexport enum CommandKind {\n    MoveTo = 1,\n    LineTo = 2,\n    ClosePath = 7\n}\n\n/**\n * @hidden\n */\nexport interface BaseCommand {\n    kind: CommandKind;\n}\n\n/**\n * @hidden\n */\nexport interface PositionCommand extends BaseCommand {\n    position: Vector2;\n}\n\n/**\n * @hidden\n */\nexport type GeometryCommand = BaseCommand | PositionCommand;\n\n/**\n * @hidden\n */\nexport function isMoveToCommand(command: GeometryCommand): command is PositionCommand {\n    return command.kind === CommandKind.MoveTo;\n}\n\n/**\n * @hidden\n */\nexport function isLineToCommand(command: GeometryCommand): command is PositionCommand {\n    return command.kind === CommandKind.LineTo;\n}\n\n/**\n * @hidden\n */\nexport function isClosePathCommand(command: GeometryCommand): command is PositionCommand {\n    return command.kind === CommandKind.ClosePath;\n}\n\n/**\n * @hidden\n */\nexport interface OmvVisitor {\n    visitLayer?(layer: com.mapbox.pb.Tile.ILayer): boolean;\n    endVisitLayer?(layer: com.mapbox.pb.Tile.ILayer): void;\n    visitPointFeature?(feature: com.mapbox.pb.Tile.IFeature): void;\n    visitLineFeature?(feature: com.mapbox.pb.Tile.IFeature): void;\n    visitPolygonFeature?(feature: com.mapbox.pb.Tile.IFeature): void;\n}\n\n/**\n * @hidden\n */\nexport function visitOmv(vectorTile: com.mapbox.pb.Tile, visitor: OmvVisitor) {\n    if (!vectorTile.layers) {\n        return;\n    }\n\n    for (const layer of vectorTile.layers) {\n        if (!visitor.visitLayer || visitor.visitLayer(layer)) {\n            visitOmvLayer(layer, visitor);\n        }\n        if (visitor.endVisitLayer) {\n            visitor.endVisitLayer(layer);\n        }\n    }\n}\n\n/**\n * @hidden\n */\nexport function visitOmvLayer(layer: com.mapbox.pb.Tile.ILayer, visitor: OmvVisitor) {\n    if (!visitor.visitLayer || visitor.visitLayer(layer)) {\n        if (layer.features) {\n            for (const feature of layer.features) {\n                switch (feature.type) {\n                    case com.mapbox.pb.Tile.GeomType.UNKNOWN:\n                        break;\n\n                    case com.mapbox.pb.Tile.GeomType.POINT:\n                        if (visitor.visitPointFeature) {\n                            visitor.visitPointFeature(feature);\n                        }\n                        break;\n\n                    case com.mapbox.pb.Tile.GeomType.LINESTRING:\n                        if (visitor.visitLineFeature) {\n                            visitor.visitLineFeature(feature);\n                        }\n                        break;\n\n                    case com.mapbox.pb.Tile.GeomType.POLYGON:\n                        if (visitor.visitPolygonFeature) {\n                            visitor.visitPolygonFeature(feature);\n                        }\n                        break;\n                }\n            }\n        }\n    }\n\n    if (visitor.endVisitLayer) {\n        visitor.endVisitLayer(layer);\n    }\n}\n\n/**\n * @hidden\n */\nexport interface FeatureAttributesVisitor {\n    visitAttribute(name: string, value: com.mapbox.pb.Tile.IValue): boolean;\n}\n\n/**\n * @hidden\n */\nexport class FeatureAttributes {\n    accept(\n        layer: com.mapbox.pb.Tile.ILayer,\n        feature: com.mapbox.pb.Tile.IFeature,\n        visitor: FeatureAttributesVisitor\n    ): void {\n        const { keys, values } = layer;\n        const tags = feature.tags;\n\n        if (!tags || !keys || !values) {\n            return;\n        }\n\n        for (let i = 0; i < tags.length; i += 2) {\n            const key = keys[tags[i]];\n            const value = values[tags[i + 1]];\n            if (!visitor.visitAttribute(key, value)) {\n                break;\n            }\n        }\n    }\n}\n\n/**\n * @hidden\n */\nexport interface GeometryCommandsVisitor {\n    type: \"Point\" | \"Line\" | \"Polygon\";\n    visitCommand(command: GeometryCommand): void;\n}\n\n/**\n * @hidden\n */\nexport class GeometryCommands {\n    accept(geometry: number[] | null, visitor: GeometryCommandsVisitor) {\n        if (!geometry) {\n            return;\n        }\n\n        const geometryCount = geometry.length;\n\n        let currX = 0;\n        let currY = 0;\n\n        const xCoords: number[] = [];\n        const yCoords: number[] = [];\n        const commands: GeometryCommand[] = [];\n        for (let cmdIndex = 0; cmdIndex < geometryCount; ) {\n            const kind = (geometry[cmdIndex] & 0x7) as CommandKind;\n            const count = geometry[cmdIndex] >> 0x3;\n            ++cmdIndex;\n\n            if (kind === CommandKind.MoveTo || kind === CommandKind.LineTo) {\n                for (let n = 0; n < count; ++n) {\n                    const xx = geometry[cmdIndex++];\n                    const yy = geometry[cmdIndex++];\n\n                    currX += (xx >> 1) ^ -(xx & 1);\n                    currY += (yy >> 1) ^ -(yy & 1);\n                    if (visitor.type === \"Polygon\") {\n                        xCoords.push(currX);\n                        yCoords.push(currY);\n                    }\n\n                    const position = new Vector2(currX, currY);\n                    commands.push({ kind, position });\n                }\n            } else {\n                for (const command of commands) {\n                    visitor.visitCommand(command);\n                }\n                visitor.visitCommand({ kind });\n                xCoords.length = 0;\n                yCoords.length = 0;\n                commands.length = 0;\n            }\n        }\n\n        if (commands.length > 0) {\n            for (const command of commands) {\n                visitor.visitCommand(command);\n            }\n        }\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    MapEnv,\n    StyleSetEvaluator,\n    Value,\n    ValueMap\n} from \"@here/harp-datasource-protocol/index-decoder\";\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { assert, ILogger, LoggerManager } from \"@here/harp-utils\";\nimport * as Long from \"long\";\nimport { ShapeUtils, Vector2, Vector3 } from \"three\";\n\nimport { DataAdapter } from \"../../DataAdapter\";\nimport { DecodeInfo } from \"../../DecodeInfo\";\nimport { IGeometryProcessor, ILineGeometry, IPolygonGeometry } from \"../../IGeometryProcessor\";\nimport {\n    ComposedDataFilter,\n    OmvFeatureFilter,\n    OmvFeatureModifier,\n    OmvGenericFeatureFilter,\n    OmvGenericFeatureModifier\n} from \"../../OmvDataFilter\";\nimport {\n    FeatureModifierId,\n    OmvDecoderOptions,\n    OmvFeatureFilterDescription,\n    OmvGeometryType\n} from \"../../OmvDecoderDefs\";\nimport { OmvPoliticalViewFeatureModifier } from \"../../OmvPoliticalViewFeatureModifier\";\nimport { isArrayBufferLike } from \"../../OmvUtils\";\nimport { StyleSetDataFilter } from \"../../StyleSetDataFilter\";\nimport {\n    FeatureAttributes,\n    GeometryCommands,\n    isClosePathCommand,\n    isLineToCommand,\n    isMoveToCommand,\n    OmvVisitor,\n    visitOmv\n} from \"./OmvData\";\nimport { com } from \"./proto/vector_tile\";\n\nconst propertyCategories = [\n    \"stringValue\",\n    \"floatValue\",\n    \"doubleValue\",\n    \"intValue\",\n    \"uintValue\",\n    \"sintValue\",\n    \"boolValue\"\n];\n\nconst logger = LoggerManager.instance.create(\"OmvDataAdapter\", { enabled: false });\n\nfunction simplifiedValue(value: com.mapbox.pb.Tile.IValue): Value {\n    const hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    for (const category of propertyCategories) {\n        if (hasOwnProperty.call(value, category)) {\n            const v = value[category as keyof com.mapbox.pb.Tile.IValue];\n\n            if (v === undefined) {\n                throw new Error(\"unpexted undefined value\");\n            }\n\n            return Long.isLong(v) ? (v as any).toNumber() : v;\n        }\n    }\n\n    throw new Error(\"not happening\");\n}\n\nfunction decodeFeatureId(\n    feature: com.mapbox.pb.Tile.IFeature,\n    properties: ValueMap,\n    logger?: ILogger\n): number | string | undefined {\n    if (properties.id !== undefined && properties.id !== null) {\n        return properties.id as number | string;\n    }\n    if (feature.hasOwnProperty(\"id\")) {\n        const id = feature.id;\n        if (typeof id === \"number\") {\n            return id;\n        } else if (id) {\n            if (logger !== undefined && id.greaterThan(Number.MAX_SAFE_INTEGER)) {\n                logger.error(\n                    \"Invalid ID: Larger than largest available Number in feature: \",\n                    feature\n                );\n            }\n            return id.toNumber();\n        }\n    }\n\n    return undefined;\n}\n\nfunction readAttributes(\n    layer: com.mapbox.pb.Tile.ILayer,\n    feature: com.mapbox.pb.Tile.IFeature\n): ValueMap {\n    const attrs = new FeatureAttributes();\n\n    const attributes: ValueMap = {};\n\n    attrs.accept(layer, feature, {\n        visitAttribute: (name, value) => {\n            attributes[name] = simplifiedValue(value);\n            return true;\n        }\n    });\n\n    return attributes;\n}\n\nexport function asGeometryType(feature: com.mapbox.pb.Tile.IFeature | undefined): OmvGeometryType {\n    if (feature === undefined) {\n        return OmvGeometryType.UNKNOWN;\n    }\n\n    switch (feature.type) {\n        case com.mapbox.pb.Tile.GeomType.UNKNOWN:\n            return OmvGeometryType.UNKNOWN;\n        case com.mapbox.pb.Tile.GeomType.POINT:\n            return OmvGeometryType.POINT;\n        case com.mapbox.pb.Tile.GeomType.LINESTRING:\n            return OmvGeometryType.LINESTRING;\n        case com.mapbox.pb.Tile.GeomType.POLYGON:\n            return OmvGeometryType.POLYGON;\n        default:\n            return OmvGeometryType.UNKNOWN;\n    } // switch\n}\n\n// Ensures ring winding follows Mapbox Vector Tile specification: outer rings must be clockwise,\n// inner rings counter-clockwise.\n// See https://docs.mapbox.com/vector-tiles/specification/\nfunction checkWinding(multipolygon: IPolygonGeometry[]) {\n    const firstPolygon = multipolygon[0];\n\n    if (firstPolygon === undefined || firstPolygon.rings.length === 0) {\n        return;\n    }\n\n    // Opposite sign to ShapeUtils.isClockWise, since webMercator tile space has top-left origin.\n    // For example:\n    // Given the ring = [(1,2), (2,2), (2,1), (1,1)]\n    // ShapeUtils.area(ring) > 0    -> false\n    // ShapeUtils.isClockWise(ring) -> true\n    // ^\n    // |  1,2 -> 2,2\n    // |          |\n    // |  1,1 <- 2,1\n    // |_______________>\n    //\n    // Tile space axis\n    //  ______________>\n    // |  1,1 <- 2,1\n    // |          |\n    // |  1,2 ->  2,2\n    // V\n    const isOuterRingClockWise = ShapeUtils.area(firstPolygon.rings[0]) > 0;\n\n    if (!isOuterRingClockWise) {\n        for (const polygon of multipolygon) {\n            for (const ring of polygon.rings) {\n                ring.reverse();\n            }\n        }\n    }\n}\n\nfunction roundUpCoordinates(coordinates: Vector2[], layerExtents: number) {\n    coordinates.forEach(p => {\n        if (p.x === layerExtents - 1) {\n            p.x = layerExtents;\n        }\n    });\n}\n\nfunction roundUpPolygonCoordinates(geometry: IPolygonGeometry[], layerExtents: number) {\n    geometry.forEach(polygon => polygon.rings.forEach(r => roundUpCoordinates(r, layerExtents)));\n}\n\nfunction roundUpLineCoordinates(geometry: ILineGeometry[], layerExtents: number) {\n    geometry.forEach(line => roundUpCoordinates(line.positions, layerExtents));\n}\nfunction createFeatureModifier(\n    filterDescription: OmvFeatureFilterDescription,\n    featureModifierId?: FeatureModifierId\n): OmvFeatureModifier {\n    switch (featureModifierId) {\n        case FeatureModifierId.default:\n            return new OmvGenericFeatureModifier(filterDescription);\n        default:\n            assert(!\"Unrecognized feature modifier id, using default!\");\n            return new OmvGenericFeatureModifier(filterDescription);\n    }\n}\n\n/**\n * The class `OmvDataAdapter` converts OMV protobuf geo data\n * to geometries for the given `IGeometryProcessor`.\n */\n\nexport class OmvDataAdapter implements DataAdapter, OmvVisitor {\n    private readonly m_geometryCommands = new GeometryCommands();\n\n    private m_tileKey!: TileKey;\n    private m_layer!: com.mapbox.pb.Tile.ILayer;\n    private m_dataFilter?: OmvFeatureFilter;\n    private m_featureModifiers?: OmvFeatureModifier[];\n    private m_processor!: IGeometryProcessor;\n    private m_roundUpCoordinatesIfNeeded: boolean = false;\n\n    /**\n     * The [[OmvFeatureFilter]] used to filter features.\n     */\n    get dataFilter(): OmvFeatureFilter | undefined {\n        return this.m_dataFilter;\n    }\n\n    /**\n     * Configures the OMV adapter.\n     *\n     * @param options - Configuration options.\n     * @param styleSetEvaluator - Style set evaluator instance, used for filtering.\n     */\n    configure(options: OmvDecoderOptions, styleSetEvaluator: StyleSetEvaluator) {\n        if (options.filterDescription !== undefined) {\n            if (options.filterDescription !== null) {\n                // TODO: Feature modifier is always used only with feature filter.\n                // At best the filtering feature should be excluded from other feature\n                // modifiers and be performed solely via OmvGenericFeature modifier or filter.\n                const filterDescription = options.filterDescription;\n                const featureModifiersIds = options.featureModifiers;\n\n                // Create new filter from description.\n                this.m_dataFilter = new OmvGenericFeatureFilter(filterDescription);\n                // Create feature modifiers.\n                const featureModifiers: OmvFeatureModifier[] = [];\n                if (featureModifiersIds !== undefined) {\n                    featureModifiersIds.forEach(fmId => {\n                        featureModifiers.push(createFeatureModifier(filterDescription, fmId));\n                    });\n                } else {\n                    featureModifiers.push(\n                        createFeatureModifier(filterDescription, FeatureModifierId.default)\n                    );\n                }\n                this.m_featureModifiers = featureModifiers;\n            } else {\n                // null is the signal to clear the filter/modifier\n                this.m_dataFilter = undefined;\n                this.m_featureModifiers = undefined;\n            }\n            const styleSetDataFilter = new StyleSetDataFilter(styleSetEvaluator);\n            this.m_dataFilter = this.m_dataFilter\n                ? new ComposedDataFilter([styleSetDataFilter, this.m_dataFilter])\n                : styleSetDataFilter;\n        }\n\n        if (options.politicalView !== undefined) {\n            const politicalView = options.politicalView;\n            let featureModifiers = this.m_featureModifiers;\n            // Remove existing political view modifiers, this actually setups default,\n            // commonly accepted point of view - without feature modifier.\n            if (featureModifiers) {\n                featureModifiers = featureModifiers.filter(\n                    fm => !(fm instanceof OmvPoliticalViewFeatureModifier)\n                );\n            }\n            // If political view is indeed requested append feature modifier at the end of list.\n            if (politicalView.length !== 0) {\n                assert(\n                    politicalView.length === 2,\n                    \"The political view must be specified as two letters ISO 3166-1 standard!\"\n                );\n                const povFeatureModifier = new OmvPoliticalViewFeatureModifier(politicalView);\n                if (featureModifiers) {\n                    featureModifiers.push(povFeatureModifier);\n                } else {\n                    featureModifiers = [povFeatureModifier];\n                }\n            }\n            // Reset modifiers if nothing was added.\n            this.m_featureModifiers =\n                featureModifiers && featureModifiers.length > 0 ? featureModifiers : undefined;\n        }\n        this.m_roundUpCoordinatesIfNeeded = options.roundUpCoordinatesIfNeeded ?? false;\n    }\n\n    /**\n     * @override\n     */\n    canProcess(data: ArrayBufferLike | {}): boolean {\n        return isArrayBufferLike(data);\n    }\n\n    /**\n     * @override\n     */\n    process(data: ArrayBufferLike, decodeInfo: DecodeInfo, geometryProcessor: IGeometryProcessor) {\n        const { tileKey } = decodeInfo;\n        const payload = new Uint8Array(data);\n        const proto = com.mapbox.pb.Tile.decode(payload);\n\n        this.m_tileKey = tileKey;\n        this.m_processor = geometryProcessor;\n\n        visitOmv(proto, this);\n    }\n\n    /**\n     * Visits the OMV layer.\n     *\n     * @param layer - The OMV layer to process.\n     */\n    visitLayer(layer: com.mapbox.pb.Tile.ILayer): boolean {\n        this.m_layer = layer;\n\n        const storageLevel = this.m_tileKey.level;\n        const layerName = layer.name;\n\n        if (\n            this.m_dataFilter !== undefined &&\n            !this.m_dataFilter.wantsLayer(layerName, storageLevel)\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Visits point features.\n     *\n     * @param feature - The OMV point features to process.\n     */\n    visitPointFeature(feature: com.mapbox.pb.Tile.IFeature): void {\n        if (feature.geometry === undefined) {\n            return;\n        }\n\n        // Pass feature modifier method to processFeature if there's any modifier. Get it from any\n        // modifier, processFeature will later apply it to all using Function.apply().\n        const modifierFunc = this.m_featureModifiers?.[0].doProcessPointFeature;\n\n        const properties = this.filterAndModifyFeature(\n            feature,\n            this.m_dataFilter?.wantsPointFeature,\n            modifierFunc\n        );\n        if (!properties) {\n            return;\n        }\n\n        const layerName = this.m_layer.name;\n        const layerExtents = this.m_layer.extent ?? 4096;\n\n        const geometry: Vector3[] = [];\n        this.m_geometryCommands.accept(feature.geometry, {\n            type: \"Point\",\n            visitCommand: command => {\n                if (isMoveToCommand(command)) {\n                    geometry.push(new Vector3(command.position.x, command.position.y, 0));\n                }\n            }\n        });\n\n        if (geometry.length === 0) {\n            return;\n        }\n\n        this.m_processor.processPointFeature(\n            layerName,\n            layerExtents,\n            geometry,\n            properties,\n            decodeFeatureId(feature, properties, logger)\n        );\n    }\n\n    /**\n     * Visits the line features.\n     *\n     * @param feature - The line features to process.\n     */\n    visitLineFeature(feature: com.mapbox.pb.Tile.IFeature): void {\n        if (feature.geometry === undefined) {\n            return;\n        }\n\n        // Pass feature modifier method to processFeature if there's any modifier. Get it from any\n        // modifier, processFeature will later apply it to all using Function.apply().\n        const modifierFunc = this.m_featureModifiers?.[0].doProcessLineFeature;\n\n        const properties = this.filterAndModifyFeature(\n            feature,\n            this.m_dataFilter?.wantsLineFeature,\n            modifierFunc\n        );\n        if (!properties) {\n            return;\n        }\n\n        const layerName = this.m_layer.name;\n        const layerExtents = this.m_layer.extent ?? 4096;\n\n        const geometry: ILineGeometry[] = [];\n        let positions: Vector2[];\n        this.m_geometryCommands.accept(feature.geometry, {\n            type: \"Line\",\n            visitCommand: command => {\n                if (isMoveToCommand(command)) {\n                    positions = [command.position];\n                    geometry.push({ positions });\n                } else if (isLineToCommand(command)) {\n                    positions.push(command.position);\n                }\n            }\n        });\n\n        if (geometry.length === 0) {\n            return;\n        }\n\n        if (this.mustRoundUpCoordinates) {\n            roundUpLineCoordinates(geometry, layerExtents);\n        }\n        this.m_processor.processLineFeature(\n            layerName,\n            layerExtents,\n            geometry,\n            properties,\n            decodeFeatureId(feature, properties, logger)\n        );\n    }\n\n    /**\n     * Visits the polygon features.\n     *\n     * @param feature - The polygon features to process.\n     */\n    visitPolygonFeature(feature: com.mapbox.pb.Tile.IFeature): void {\n        if (feature.geometry === undefined) {\n            return;\n        }\n\n        // Pass feature modifier method to processFeature if there's any modifier. Get it from any\n        // modifier, processFeature will later apply it to all using Function.apply().\n        const modifierFunc = this.m_featureModifiers?.[0].doProcessPolygonFeature;\n\n        const properties = this.filterAndModifyFeature(\n            feature,\n            this.m_dataFilter?.wantsPolygonFeature,\n            modifierFunc\n        );\n        if (!properties) {\n            return;\n        }\n\n        const layerName = this.m_layer.name;\n        const layerExtents = this.m_layer.extent ?? 4096;\n\n        const geometry: IPolygonGeometry[] = [];\n        let currentPolygon: IPolygonGeometry | undefined;\n        let currentRing: Vector2[];\n        let exteriorWinding: number | undefined;\n        this.m_geometryCommands.accept(feature.geometry, {\n            type: \"Polygon\",\n            visitCommand: command => {\n                if (isMoveToCommand(command)) {\n                    currentRing = [command.position];\n                } else if (isLineToCommand(command)) {\n                    currentRing.push(command.position);\n                } else if (isClosePathCommand(command)) {\n                    if (currentRing !== undefined && currentRing.length > 0) {\n                        const currentRingWinding = Math.sign(ShapeUtils.area(currentRing));\n                        // Winding order from XYZ spaces might be not MVT spec compliant, see HARP-11151.\n                        // We take the winding of the very first ring as reference.\n                        if (exteriorWinding === undefined) {\n                            exteriorWinding = currentRingWinding;\n                        }\n                        // MVT spec defines that each exterior ring signals the beginning of a new polygon.\n                        // see https://github.com/mapbox/vector-tile-spec/tree/master/2.1\n                        if (currentRingWinding === exteriorWinding) {\n                            // Create a new polygon and push it into the collection of polygons\n                            currentPolygon = { rings: [] };\n                            geometry.push(currentPolygon);\n                        }\n                        // Push the ring into the current polygon\n                        currentRing.push(currentRing[0].clone());\n                        currentPolygon?.rings.push(currentRing);\n                    }\n                }\n            }\n        });\n        if (geometry.length === 0) {\n            return;\n        }\n\n        if (this.mustRoundUpCoordinates) {\n            roundUpPolygonCoordinates(geometry, layerExtents);\n        }\n\n        checkWinding(geometry);\n\n        this.m_processor.processPolygonFeature(\n            layerName,\n            layerExtents,\n            geometry,\n            properties,\n            decodeFeatureId(feature, properties, logger)\n        );\n    }\n\n    /**\n     * Applies any filter and modifiers to a given feature.\n     *\n     * @param feature - The feature to filter and modify.\n     * @param filterFunc - The filtering function.\n     * @param modifierFunc - The modifier function.\n     * @returns The modified feature properties or `undefined` if feature is filtered out.\n     */\n    private filterAndModifyFeature(\n        feature: com.mapbox.pb.Tile.IFeature,\n        filterFunc?: (...args: any[]) => boolean,\n        modifierFunc?: (...args: any[]) => boolean\n    ): ValueMap | undefined {\n        const storageLevel = this.m_tileKey.level;\n        const layerName = this.m_layer.name;\n        const geometryType = asGeometryType(feature);\n\n        if (\n            this.m_dataFilter &&\n            filterFunc!.apply(this.m_dataFilter, [layerName, geometryType, storageLevel]) === false\n        ) {\n            return undefined;\n        }\n\n        const properties = readAttributes(this.m_layer, feature);\n        const env = new MapEnv(properties);\n        if (\n            this.m_featureModifiers?.find(fm => {\n                // TODO: The logic of feature ignore should be actually in the feature filtering\n                // mechanism - see OmvFeatureFilter.\n                assert(modifierFunc !== undefined);\n                return !modifierFunc!.apply(fm, [layerName, env, this.m_tileKey.level]);\n            }) !== undefined\n        ) {\n            return undefined;\n        }\n\n        return properties;\n    }\n\n    private get mustRoundUpCoordinates(): boolean {\n        return (\n            this.m_roundUpCoordinatesIfNeeded &&\n            this.m_tileKey.level < 5 &&\n            this.m_tileKey.column === this.m_tileKey.columnCount() - 1\n        );\n    }\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { isWorkerBootstrapResponse } from \"@here/harp-mapview/lib/workers/WorkerBootstrapDefs\";\n\ndeclare let self: Worker & {\n    importScripts(..._scripts: string[]): void;\n};\n\n/**\n * Async bootstrap using \"worker bootstrap protocol\" defined in [[WorkerBootstrapDefs]] and\n * supported by `WorkerLoader`\n *\n * Resolves, when all the dependencies are loaded.\n * Rejects after timeout (1000ms) and in case error while loading dependencies.\n */\nfunction asyncWorkerBootstrap(dependencies: string[]): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n        self.postMessage({\n            type: \"worker-bootstrap-request\",\n            dependencies\n        });\n\n        let timeoutHit = false;\n        const warnTimeout = setTimeout(() => {\n            timeoutHit = true;\n            reject(\n                new Error(\"#asyncWorkerBootstrap: Timeout waiting for `worker-bootstrap-response`.\")\n            );\n        }, 1000);\n\n        function bootstrapEventHandler(event: MessageEvent) {\n            if (timeoutHit) {\n                return;\n            }\n            try {\n                const message = event.data;\n                if (isWorkerBootstrapResponse(message)) {\n                    clearTimeout(warnTimeout);\n\n                    self.removeEventListener(\"message\", bootstrapEventHandler);\n\n                    const resolvedDependencies = message.resolvedDependencies;\n                    for (const initScript of resolvedDependencies) {\n                        self.importScripts(initScript);\n                    }\n\n                    resolve();\n                }\n            } catch (error) {\n                reject(error);\n            }\n        }\n\n        self.addEventListener(\"message\", bootstrapEventHandler);\n    });\n}\n\nif ((self as any).THREE) {\n    import(\"./DecoderBundleMain\");\n} else {\n    asyncWorkerBootstrap([\"three\"])\n        .then(() => {\n            import(\"./DecoderBundleMain\");\n        })\n        .catch(error => {\n            // eslint-disable-next-line no-console\n            console.error(`harp-decoders.js: failed to bootstrap: ${error}`, error);\n        });\n}\n","/*\n * Copyright (C) 2019-2021 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nif (!(self as any).THREE) {\n    // eslint-disable-next-line no-console\n    console.warn(\n        \"harp-decoders.js: It looks like 'Three.js' is not loaded. This script requires 'THREE' \" +\n            \"object to be defined. See https://github.com/heremaps/harp.gl/@here/harp.gl.\"\n    );\n}\n\nimport {\n    GeoJsonTilerService,\n    VectorTileDecoderService\n} from \"@here/harp-vectortile-datasource/index-worker\";\n\nGeoJsonTilerService.start();\nVectorTileDecoderService.start();\n","module.exports = THREE;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(7748);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}